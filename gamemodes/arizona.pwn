#include 									a_samp
#include 									a_http
#include									mapandreas
#include 									foreach
#include 									streamer
#include	 								a_mysql
#include 									sscanf2
#include 									YSF
#include 									TOTP
#include                                    mxINI
#include									Pawn.Regex
#include 									Pawn.CMD
#include									Pawn.RakNet
#include                                    plugins
#define 									BOTS 0

//~~~~~~~~~~~~~~~~~~~~~~~~~[ Технические настройки проекта ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
#define MUSICSITE			"music.arizona-rp.com" 	//Музыкальный архив. Не трогать!!! Тест: arizona.gtasounds.com
#define USERMUSICS			"music.gamesina.online" //Музыкальный архив трэков игроков. Не трогать!!!
#define LIMONCHYKSITE		"waller-hosting.online" //Файловая система Limonchyk Channel (System BitCoin)

#define M_LAUNCHER_VERSION  "Limonchyk PC"            //Версия клиента для всех актуальных лаунчеров аризоны. Не трогать!!!
#define M_MOBILE_VERSION    "arizona-mobile"        //Версия клиента для мобильных лаунчеров аризоны. Не трогать!!!
//=============================[ Настройка ФД ]================================//
#define FD1 				"NoName"
#define FD2					"NoName"
#define FD3 				"NoName"
#define FD4 				"NoName"
//==========================[ BD SETTINGS (string) ]===========================//
#define MySQLType (1) // Выбор метода подключения БД (0 - через мод/1 - через scriptfiles/mysql_settings.ini)

#if MySQLType

#else
	#define MYSQL_HOST			"хост бд"
	#define MYSQL_USER			"пользователь бд"
	#define MYSQL_BASE          "имя бд"
	#define MYSQL_PASS			"пароль от бд"
#endif
//============================[ INSIDE SETTING ]==========================//
#define TABLE_ACCOUNTS                      "accounts"

static const UnicalDostup[][] =
{
	{""},
	{""},
	{""}
};
//=============================[ colors ]=============================//
#define COLOR_VALIK 					0x73B461FF
#define COLOR_WHITE 		            0xFFFFFFFF
#define COLOR_ORANGE 					0xFAAC58FF
#define COLOR_GREEN 					0x42B02CFF
#define COLOR_GOLD          			0xFFD700FF
#define COLOR_RED 						0xBE2D2DFF
#define COLOR_LIGHTRED 					0xFF6347FF
#define COLOR_LIGHTBLUE 				0x6495EDFF
#define COLOR_LIGHTGREEN 				0x9ACD32FF
#define COLOR_YELLOW 					0xFFFF00FF
#define COLOR_BLUENEW 					0xB8CEF6FF
#define COLOR_BLUE 						0x94B0C1FF
#define COLOR_PURPLE 					0xC2A2DAFF
#define COLOR_LIME 						0x10F441FF
#define COLOR_GREY 						0xAFAFAFFF
#define COLOR_CHAT						0xCECECEFF
#define COLOR_SCHAT						0xF0E68CFF
#define COLOR_DOCHAT					0x4682B4FF
#define COLOR_RACIO						0x2DB043FF
#define COLOR_DEPAR						0x3399ffFF
#define COLOR_ACHAT   					0x99CC00FF
#define COLOR_ME            			0xFF99FFFF
#define COLOR_GOV           			0x045FB4FF
//=============================[ work ]=============================//
#define JOB_NONE        				(0)
#define JOB_GUNDEALER 					(1)
#define JOB_DETECTIVE 					(2)
#define JOB_CARJACKER 					(3)
#define JOB_MECHANIC 					(4)
#define JOB_TAXI 						(5)
#define JOB_ADVOKAT 					(6)
#define JOB_MINER 						(7)
#define JOB_GUIDE 						(8)
#define JOB_COLLECTOR 					(9)
#define JOB_DRUGDEALER  				(10)
#define JOB_TRUCKER  					(11)
#define JOB_PIZZA  						(12)
#define JOB_SCRAPER  					(13)
#define JOB_MUSOR  						(14)
#define JOB_PORTER 						(15)
#define JOB_NALOG 						(16)
//=============================[ transport ]=============================//
#define VEHICLE_STATE_CAR   			(0)
#define VEHICLE_STATE_BIKE  			(1)
#define VEHICLE_STATE_VELIK 			(2)
#define VEHICLE_STATE_PLANE 			(3)
#define VEHICLE_STATE_BOAT  			(4)
#define VEHICLE_STATE_MOPED 			(5)
#define VEHICLE_STATE_TRAIN 			(6)
//============================[ const ]===========================//
#if BOTS == 1
	native PB_RegisterBot(name[]);
#endif

const
	vue = 1,
	svelte = 0;

static const NO_DOSTUP_TEXT[]   =       !"[Ошибка]{cccccc} У вас нет доступа к этой команде!";

const
	MAX_OWNABLECARS 	= 800,
	MAX_HOUSES 			= 950,
	MAX_BIZ 			= 350,
	MAX_FAMILY			= 100,
	LIMITADMIN 			= 8,
	MAX_TI            	= 25,
	LIMIT_aOBJECT 		= 100,
	MAX_WAREHOUSES		= 52,
	MAX_SLOT_INV		= 144,
	MAX_RADARS			= 20,
	LIMITNALOG			= 65000,
	SLOT_ATTACH_EDIT	= 30;
//=============================[ Организации ]=============================//
#define MAX_ORGS 						(28)
#define TEAM_NONE       				(0)
#define TEAM_LSPD 						(1)
#define TEAM_RCPD 						(2)
#define TEAM_FBI 						(3)
#define TEAM_SFPD						(4)
#define TEAM_MEDICLS 					(5)
#define TEAM_MERIALS 					(6)
#define TEAM_ARMYLV 					(7)
#define TEAM_MEDICSF 					(8)
#define TEAM_LICENSERS 					(9)
#define TEAM_RADIO 						(10)
#define TEAM_GROOVE 					(11)
#define TEAM_VAGOS 						(12)
#define TEAM_BALLAS 					(13)
#define TEAM_CORONOS 					(14)
#define TEAM_RIFA 						(15)
#define TEAM_RM 						(16)
#define TEAM_YAKUZA 					(17)
#define TEAM_LCN 						(18)
#define TEAM_BIKERS 					(19)
#define TEAM_ARMY						(20)
#define TEAM_BANK						(21)
#define TEAM_MEDICLV					(22)
#define TEAM_LVPD 						(23)
#define TEAM_RADIOLV 					(24)
#define TEAM_WOLFS 						(25)
#define TEAM_RADIOSF 					(26)
#define TEAM_ARMYSF 					(27)
#define NONE_3D_TEXT 					(Text3D:-1)
#define RES_CAR_TIME    				(600)
#define CLICK_STATE_NONE 	 			(-1)
#define MAX_BARSs 						(8)
#define MAX_AFK_TIME 					(300)
#define BARRIER_SPEED 					(0.025)
#define MAX_GUNS 						(sizeof(BuyGunInfo)-1)
#define PN(%0) 							PlayerName[%0]
// Макроссы
#define cache_get_int 					cache_get_value_name_int
#define cache_get_string 				cache_get_value_name
#define cache_get_float 				cache_get_value_name_float
#define SCM 							SendClientMessage
#define SCMAll 							SendClientMessageToAll
#define STM								SendTeamMessage
new bool:OtvetHelper,
	bool:Lotery = true,
	bool:Minigun = true,
	bool:AutoRespawn = true,
	bool:FastAnswer,
	bool:Terakt,
	bool:Meteorit,
	bool:SellVirt,
	bool:DisableNalog,
	bool:SystemReport,
	bool:hostname_all = true,
	bool:DontEnterServer,
	PlayerText:td_damage[MAX_PLAYERS][2] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:tdAddVIP[MAX_PLAYERS][9] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	CarSletInfo[2];
static admin_stop;
new MySQL:mysql;
new SelectedRoulette[MAX_PLAYERS],
	Cache:result1,
	Text3D:CoronaLabel, Corona,
	Text3D:MedicLabel[3],
	PlayerText:ispug_PTD[MAX_PLAYERS][3] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new str_1[4096],//string player
	str_2[4096],//string player
	str_d[4096],//dialog
	global_str[4097],
	str_mes[72+72],//Для текстов в чат
	str_q[600+500],//Для запросов
	str_q2[600+500],//Для запросов
	global_time,
	global_year,
	global_month,
	global_day,
	SQL_GET_ROW_STR[20][128];
stock unixtime(days) return global_time + (days * 86400);
static const forever = 2000000000;
#define randomEx(%0,%1) (%0+random(%1-%0))
#define f 								format
#define mf 								mysql_format
#define fmt(%0,%1,%2)								%0[0] = EOS, f(%0, sizeof(%0),%1,%2)
#define ExecuteEventf(%4,%0,%1,%2,%3)					str_d[0] = EOS, f(str_d, sizeof(str_d), %2, %3) && ExecuteEvent(%0,%1,str_d,%4)
#define SendRconCommandf(%0,%1) 					str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %0, %1) && SendRconCommand(str_mes)
#define SPDf(%0,%1,%2,%3,%4,%5,%6,%7) 				str_d[0] = EOS, f(str_d, sizeof(str_d), %6, %7) && SPD(%0, %1, %2, %3, str_d, %4, %5)
#define TDSetStringf(%0,%1,%2) 						str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %1, %2) && TextDrawSetString(%0,str_mes)
#define PlayerTDSetStringf(%0,%1,%2,%3) 			str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %2, %3) && PlayerTextDrawSetString(%0,%1,str_mes)
#define SCMf(%0,%1,%2,%3)                           str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %2, %3) && SendClientMessage(%0,%1,str_mes)
#define SetPlayerChatBubblef(%0,%1,%2,%3,%4,%5)     str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %4, %5) && SetPlayerChatBubble(%0, str_mes, %1, %2, %3)
#define UpdateDynamic3DTextLabelTextf(%0,%1,%2,%3)	str_1[0] = EOS, f(str_1, sizeof(str_1), %2, %3) && UpdateDynamic3DTextLabelText(%0, %1, str_1)
#define SendAdminsMessagef(%0,%1,%2) 	str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %1, %2) && SendAdminsMessage(%0, str_mes)
#define SendVIPMessagef(%0,%1,%2) 		str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %1, %2) && SendVIPMessage(%0, str_mes)
#define ASCMToAllf(%0,%1,%2)			str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %1, %2) && ASCMToAll(%0, str_mes)
#define SendFamilyMessagef(%0,%2,%3) str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %2, %3) && SendFamilyMessage(%0, str_mes)
#define SendTeamMessagef(%0,%1,%2,%3) 	str_mes[0] = EOS, f(str_mes, sizeof(str_mes), %2, %3) && SendTeamMessage(%0, %1, str_mes)
#define mysql_queryf_fix(%0,%1,%2,%3) 	str_q[0] = EOS, f(str_q, sizeof(str_q), %1, %3); result1 = mysql_query(%0, str_q, %2)
#define mysql_pqueryf(%0,%1,%2) 		str_q[0] = EOS, f(str_q, sizeof(str_q), %1, %2) && mysql_pquery(mysql, str_q) //&& printf(str_q)
#define mysql_tquerymf(%0,%1,%2) 		str_q[0] = EOS, mf(mysql, str_q, sizeof(str_q), %1, %2) && mysql_tquery(mysql, str_q) //&& printf(str_q)
#define mysql_tqueryf(%0,%1,%2) 		str_q[0] = EOS, f(str_q, sizeof(str_q), %1, %2) && mysql_tquery(mysql, str_q) //&& printf(str_q)
#define public:%0(%1)					forward %0(%1); public %0(%1)
#define str_f(%0,%1) f(str_q2, sizeof str_q2, %0, %1), str_q2
#define SetPlayerTimer(%0,%1,%2,%3) 	SetTimerEx(%1, %2, %3, "i", %0)
#define GUN_POS 						GunPos[gunid][0], GunPos[gunid][1], GunPos[gunid][2]
#define PRESSED(%0) 					(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) 					(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define foreach_player(%0)              foreach(new %0: Player)
#define foreach_vehicle(%0)             foreach(new %0: Vehicle)
#define foreach_family(%0)              foreach(new %0: Familys)
//fix
stock _mysql_escape_string(inputtext[], inputtextsave[])
{
	for(new i; i < strlen(inputtext); i++)
	{
		switch(inputtext[i])
		{
			case '`', '%': inputtext[i] = ' ';
			case '\'': inputtext[i] = ' ';
			case '&', '|', '{', '}', 'A'..'Z', 'a'..'z', 'А'..'Я', 'а'..'я', '0'..'9', ' ', '>', '<', '(', ')', '/', '+', '-','_', '?', '!', '.', ',', '@':continue;
			default: inputtext[i]=' ';
		}
	}
	mysql_escape_string(inputtext, inputtextsave, 144);
}
#if defined _ALS_mysql_escape_string
    #undef mysql_escape_string
#else
    #define _ALS_mysql_escape_string
#endif
#define mysql_escape_string _mysql_escape_string
new
	PlayerText:launchsize[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...},
	launchtimer[MAX_PLAYERS],
	Float:LauncherSize[MAX_PLAYERS],
	LauncherSize2[MAX_PLAYERS],
	launchdone[MAX_PLAYERS],
	skorostb[MAX_PLAYERS],
	PlayerText:GlobalTDPlayer[MAX_PLAYERS][93+63] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InvPlayerSecurity[MAX_PLAYERS][64] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:vkcoin_menu[MAX_PLAYERS][25]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	bool:phone_2[MAX_PLAYERS],
	Text:FillTD[31] = {Text:INVALID_TEXT_DRAW, ...},
	Text:GooglePhone[8] = {Text:INVALID_TEXT_DRAW, ...},
	Text:GoogleStep1[8] = {Text:INVALID_TEXT_DRAW, ...},
	Text:GoogleStep2[8] = {Text:INVALID_TEXT_DRAW, ...},
	Text:GoogleStep3[6] = {Text:INVALID_TEXT_DRAW, ...},
	Text:GoogleStep4[5] = {Text:INVALID_TEXT_DRAW, ...},
	Text:launch[9] = {Text:INVALID_TEXT_DRAW, ...},
	Text:TeleportEvent[14] = {Text:INVALID_TEXT_DRAW, ...},
	Text:Donate_Global[88] = {Text:INVALID_TEXT_DRAW, ...},
	Text:IntroLogo[11] = {Text:INVALID_TEXT_DRAW, ...},
	Text:noparkzone[3] = {Text:INVALID_TEXT_DRAW, ...},
	Text:kbox[2] = {Text:INVALID_TEXT_DRAW, ...},
	Text:Map[4] = {Text:INVALID_TEXT_DRAW, ...},
	Text:PlayerDraw[25] = {Text:INVALID_TEXT_DRAW, ...},
	Text:StatsDraw[25] = {Text:INVALID_TEXT_DRAW, ...},
	Text:boomtext[10],
	Text:speedbox[4],
	Text:no_park_TD[4],
	Text:Box,
	Text:StopAnimation,
	Text3D:cretits,
	Text:alcodraw[5],
	Text:alcodraw2[5],
	Text:alcodraw1[7],
	Text:Logotype[3],
	Text:GrandKapt[5],
	Text:Grand2Kapt[5],
	Text:Target[5],
	Text:BoxTaxi1,
	Text:BoxTaxi2,
	Text:Taximonitor,
	Text:TaxiDol,
	Text:TaxiServ,
	Text:BandDrawBG[2],
	Text:HInfoEnterDraw,
	Text:HInfoBuyDraw,
	Text:HInfoBG,
	DONATEBONUS,
	MONEYBONUS,
	LVLBONUS,
	reg_name[26],
	garage_name[3],
	smi_name,
	taxi_name[3],
	bool:TempAcsID[MAX_PLAYERS][8],
	ObjectCarSelect[MAX_PLAYERS],
	bool:IsPlayerModeEditor[MAX_PLAYERS],SelectSlotEdit[MAX_PLAYERS],
	PageItems[MAX_PLAYERS],
	PlusItems[MAX_PLAYERS],
	PlayerText:others[MAX_PLAYERS][7] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	bool:MeriaOpen[MAX_PLAYERS],
	bool:FamMenu1[MAX_PLAYERS],
	bool:FamMenu2[MAX_PLAYERS],
	bool:FamMenu3[MAX_PLAYERS],
	bool:FamZones[MAX_PLAYERS],
	bool:debuggga[MAX_PLAYERS],
	debug_timer[MAX_PLAYERS],
	bool:ActionCarOpen[MAX_PLAYERS];
#define PlayerIP(%0) PlayerIp[%0]

//
enum ServerCFGSettings
{
    server_name,
    server_logo,
    server_number,
    server_mode,
    server_mail,
    server_group_vk,
    server_forum,
    server_site,
    server_discord,
    server_reklama,
    server_launcher,
    DB_HOST,
    DB_USERNAME,
    DB_DATABASE,
    DB_PASSWORD
}
new ServerCFG[ServerCFGSettings][70];
new TypeServ, NumberServID, PickupStart;

//
enum enumServerSettings
{
    PunktName[50]//например - название штата
};
new ServerSettings[][enumServerSettings] =
{
    {"Название сервера"},
    {"Название штата"},
    {"Название сервера в клиенте"},
   	{"Название рекламы GPS"},
    {"Группа ВК"},
    {"Номера транспортов сервера"},
    {"Название игрового мода клиента"},
    {"Оффициальная почта сервера"},
    {"Дискорд сервера"},
    {"Сайт"},
    {"Форум"},
    {" "},
    {" "},
    {" "}
};

enum pStartInfo
{
    Float:StartX,
    Float:StartY,
    Float:StartZ,
    StartPickup,
    Text3D:StartLabel
}
new StartInfo[][pStartInfo] =
{
    {1777.5724,-1889.3271,13.3875},
    {2838.9500,1292.5120,11.3906},
    {-1996.2001,122.2308,27.6875},
    {2227.5225,-1142.9734,25.7969}
};

enum tRPinfo
{
	tRPVopros[16],
	tRPOtvet[188],
	tRPOtvet_Good
};
static const RPtest[][tRPinfo] = {
	{"RolePlay ? ","1. Убийство без причины\n2. Ролевая Игра\n3. Использование реальной информации в игровой чат",2},
	{"MetaGaming ? ","1. Убийство с Т/С\n2. Воображение из себя супер героя\n3. Убийство своих членов организации\n4. Использование реальной информации в игровой чат",4},
	{"SpawnKill ? ","1. Убийство на месте появления (Spawn)\n2. Убийство с Т/С\n3. Гуд мод - т.е. бессмертие.\n4. Уголовный Кодекс",1},
	{"RepeatKill ? ","1. Намеренное, повторное возвращение на место смерти.\n2. NonRP бег с прыжками ( shift+space )\n3. Академический Кодекс\n4. Убийство без причины.",1},
	{"DeathMatch ? ","1. Убийство с Транспортного средства\n2. Убийство своих членов организации\n3. Убийство без причины",3},
	{"DriveBy ? ", "1. Убийство своих членов организации\n2. Убийство с Транспортного средства\n3. Убийство без причины",2},
	{"PowerGaming ? ","1. NonRP бег с прыжками ( shift+space )\n2. Академический Кодекс\n3. Использование реальной информации и игровой чат\n4. Изображение из себя супер героя",4}
};
new 
	Float:ProgressBalloonTD[MAX_PLAYERS][2],
	Float:BalloonObjectPos[MAX_PLAYERS][3],
	ProgressBalloon[MAX_PLAYERS],
	BalloonTimer[MAX_PLAYERS],
	BalloonObject[MAX_PLAYERS] = {-1, ...},
	Text3D:BalloonLabelText[MAX_PLAYERS],
	bool:BalloonSpawned[MAX_VEHICLES],
	PlayerItemBalloon[MAX_PLAYERS],
	BalloonSphere[MAX_PLAYERS] = {-1, ...},
	BalloonVehicle[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...},
	BalloonObjectVehicle[MAX_VEHICLES][6] = {-1, ...},
	Text3D:BalloonLabelTextVehicle[MAX_VEHICLES];
	
//sync
enum infosnew
{
	MSkin_New,
	MSkin_Name[10+10]
};
static InfoConfigSkin[][infosnew] =
{
	{312, "albert"},
	{313, "amiran"},
	{314, "bathory"},
	{315, "brulov"},
	{316, "creed"},
	{317, "delorenzy"},
	{318, "edvardbil"},
	{319, "eljay"},
	{329, "evaelfie"},
	{332, "feduk"},
	{340, "kovalevsky"},
	{382, "litvin"},
	{383, "maras"},
	{398, "morgershtern"},
	{399, "nurmagamedov"},
	{795, "oxymiron"},
	{796, "pavlenko"},
	{797, "ravyazan"},
	{798, "romeru"},
	{799, "sammason"},
	{907, "shurigina"},
	{908, "valik"},
	{1206, "basta"},
	{1326, "byzova"},
	{1573, "dzyuba"},
	{1699, "urgant"},
	{2883, "khovanksy"},
	{2884, "lukashenko"},
	{3136, "maddyson"},
	{3137, "noize"},
	{3138, "pashatechnique"},
	{3139, "restorator"},
	{3140, "richi"},
	{3141, "sashagrey"},
	{3142, "yurydud"},
	{3143, "snowman"},
	{3144, "elf"},
	{3145, "farmernewyear"},
	{3146, "dedmoroz"},
	{3147, "yoda"},
	{3148, "leshiy"},
	{3149, "newshuba"},
	{3150, "deer"},
	{3151, "penguin"},
	{3152, "snegurochka"},
	{3153, "footba"},
	{3154, "elfa"},
	{3159, "gentelman1"},
	{3160, "gentelman2"},
	{3161, "gentelman3"},
	{3162, "gentelman4"},
	{3163, "gentelman5"},
	{3164, "gentelman6"},
	{3165, "minecraft1"},
	{3166, "minecraft2"},
	{3176, "minecraft3"},
	{3177, "minecraft4"},
	{3179, "minecraft5"},
	{3180, "minecraft6"},
	{3181, "minecraft7"},
	{3182, "minecraft8"},
	{3183, "minecraft9"},
	{3184, "minecraft10"},
	{3185, "navalny"},
	{3186, "putin"},
	{3188, "ironman"},
	{3189, "spiderman"},
	{3190, "venom"},
	{3191, "captainamerica"},
	{3192, "batman"},
	{3225, "anonimys"},
	{3226, "rabbit1"},
	{3227, "rabbit2"},
	{3228, "rabbit3"},
	{3229, "rabbit4"},
	{3230, "rabbit5"},
	{3231, "rabbitfarmer"},
	{3349, "alpachino"},
	{3416, "bradpitt"},
	{3429, "dikaprio"},
	{3610, "disel"},
	{3611, "kianu"},
	{3784, "mask"},
	{3870, "robertjr"},
	{3871, "shwarz"},
	{3883, "statham"},
	{3889, "tarantino"},
	{4549, "stalone"},
	{4763, "murphy"},
	{4764, "hardy"},
	{4765, "tyson"},
	{4766, "kanye"},
	{4767, "mcgregor"},
	{4768, "travolta"},
	{4769, "cluni"},
	{4770, "markcyker"},
	{4771, "dwaynej"},
	{4772, "kage"},
	{4773, "will"},
	{4804, "aaron"},
	{4805, "cooper"},
	{5085, "defo"},
	{5090, "evans"},
	{5091, "gosling"},
	{5092, "hannem"},
	{5093, "hbirth1"},
	{5094, "hbirth2"},
	{5095, "hbirth3"},
	{5096, "hbirth4"},
	{5097, "hbirth5"},
	{5098, "hbirth6"},
	{5099, "hbirth7"},
	{5100, "hbirth8"},
	{5101, "hbirth9"},
	{5102, "hbirth10"},
	{5103, "jackiechan"},
	{5104, "maccon"},
	{5376, "matt"},
	{5377, "morgan"},
	{5378, "tatum"},
	{5379, "woker"},
	{5380, "wood"},
	{6014, "hall0"},
	{6015, "hall1"},
	{6016, "hall2"},
	{6017, "hall4"},
	{6018, "hall5"},
	{6019, "hall6"},
	{6020, "hall7"},
	{6021, "hasbik"},
	{6022, "hellmem"},
	{6023, "pubgmaskgirl"},
	{6024, "pubgmaskman"},
	{6025, "pubggirl1"},
	{6026, "pubgman1"},
	{6027, "pubggirl2"},
	{6028, "pubgman2"},
	{6029, "pubggirl3"},
	{6030, "pubgman3"},
	{6031, "pubggirl4"},
	{6032, "pubgman4"},
	{12700, "chistmasbomj1"},
	{12701, "chistmasbomj2"},
	{12702, "chistmasbomj3"},
	{12703, "chistmasbomj4"},
	{12704, "chistmasbomj5"},
	{12705, "elf2021"},
	{12706, "grinch"},
	{12707, "littlebill"},
	{12708, "santa"},
	{12709, "yearroliki1"},
	{12710, "yearroliki2"},
	{12711, "yearroliki3"},
	{12712, "yearroliki4"},
	{15010, "bestavto"},
	{15011, "bestavtobar"},
	{15012, "bestclad"},
	{15013, "bestcliver"},
	{15014, "bestcr"},
	{15015, "bestshaxt"},
	{15016, "mortaljax"},
	{15017, "mortalliu"},
	{15018, "mortalnoob"},
	{15019, "mortalsony"},
	{15021, "mortaltsung"},
	{15022, "mortraiden"},
	{15023, "mortscorpion"},
	{15024, "mortsub"},
	{15065, "new1"},
	{15066, "new2"},
	{15067, "new3"},
	{15068, "new4"},
	{15069, "new5"},
	{15070, "new6"},
	{15071, "new7"},
	{15072, "new8"},
	{15073, "new9"},
	{15074, "new10"},
	{15075, "new11"},
	{15076, "new12"},
	{15077, "new13"},
	{15078, "new14"},
	{15079, "new15"},
	{15080, "new16"},
	{15081, "new17"},
	{15082, "new18"},
	{15083, "new19"},
	{15084, "new20"},
	{15086, "03bestcar"},
	{15087, "03besthouse"},
	{15088, "03bomj"},
	{15089, "03bomj1"},
	{15090, "03bomj2"},
	{15091, "03brayant"},
	{15092, "03chiken"},
	{15093, "03cristiano"},
	{15094, "03messi"},
	{15095, "03ovechkin"},
	{15096, "03usyk"},
	{15097, "03zelenskiy"},
	{15296, "family1"},
	{15297, "family2"},
	{15298, "family3"},
	{15299, "family4"},
	{15300, "family5"},
	{15301, "family6"},
	{15302, "family7"},
	{15303, "family8"},
	{15304, "family9"},
	{15305, "family10"},
	{15306, "family11"},
	{15307, "family12"},
	{15308, "family13"},
	{15309, "family14"},
	{15310, "family15"},
	{15311, "family16"},
	{15312, "family17"},
	{15313, "family18"},
	{15314, "family19"},
	{15315, "family20"},
	{15316, "family21"},
	{15317, "family22"},
	{15318, "family23"},
	{15319, "family24"},
	{15320, "family25"},
	{15321, "family26"},
	{15322, "family27"},
	{15323, "family28"},
	{15324, "family29"},
	{15325, "family30"},
	{15458, "vc_skin1"},
	{15459, "vc_skin2"},
	{15460, "vc_skin3"},
	{15461, "vc_skin4"},
	{15462, "vc_skin5"},
	{15463, "vc_skin6"},
	{15464, "vc_skin7"},
	{15465, "vc_skin8"},
	{15466, "vc_skin9"},
	{15467, "vc_skin10"},
	{15468, "vc_skin11"},
	{15469, "vc_skin12"},
	{15470, "vc_skin13"},
	{15471, "vc_skin14"},
	{15472, "vc_skin15"},
	{15473, "vc_skin16"},
	{15474, "vc_skin17"},
	{15475, "vc_skin18"},
	{15476, "vc_skin19"},
	{15477, "vc_skin20"},
	{15478, "vc_skin21"},
	{15479, "vc_skin22"},
	{15480, "vc_skin23"},
	{15481, "vc_skin24"},
	{15482, "vc_skin25"},
	{15483, "vc_skin26"},
	{15484, "vc_skin27"},
	{15696, "bomj001"},
	{15697, "bomj002"},
	{15698, "bomj003"},
	{15699, "bomj004"},
	{15700, "bomjclassic1"},
	{15701, "bomjclassic2"},
	{15702, "bomjclassic3"},
	{15703, "bomjclassic4"},
	{15704, "bomjclassic5"},
	{15705, "bomjg001"},
	{15706, "bomjg002"},
	{15890, "blog1"},
	{15891, "blog2"},
	{15892, "blog3"},
	{15893, "blog4"},
	{15894, "blog5"},
	{15895, "blog6"},
	{15896, "blog7"},
	{15899, "tidex1"},
	{15900, "tidex2"},
	{15901, "tidex3"},
	//
	{15966, "hnina"},
	{15967, "hzombie1"},
	{15968, "hzombie2"},
	{15969, "hzombie3"},
	{15970, "hzombie4"},
	{15971, "hzombie5"},
	{15972, "hzombie6"},
	{15973, "hzombie7"},
	{15974, "hzombie8"},
	{15975, "hzombie9"},
	{15976, "ork"},
	{15977, "szombie1"},
	{15978, "szombie2"},
	{15979, "szombie3"},
	{15980, "szombie5"},
	{15981, "szombie4"},
	{15982, "szombie6"},
	{15983, "szombie7"},
	{15984, "szombie8"},
	{15985, "bigfoot_man"},
	{15986, "clown_man"},
	{15987, "fredi_street"},
	{15988, "jayson_friday13"},
	{15989, "mymia_man"},
	{15990, "zombie_girl1"},
	{15991, "zombie_man1"},
	{15992, "zombie_man2"},
	{15884, "zombie_man3"},
	{15994, "zombie_man4"},
	{16815, "gimpy_diffuse"},
	{16816, "leatherface"},
	{16817, "nlo"},
	{16818, "piggsy"},
	{16819, "yasher"},
	{16820, "zombieevil"},
	//
	{16843, "trevor"},
	{16844, "dark_elf"},
	{16845, "leshiy_new"},
	{16846, "light_elf"},
	{16847, "rabbit"},
	{16848, "snowman1"},
	{16849, "snowman2"},
	{16830, "snowman3"},
	{16831, "cyberpunk_lucy"},
	{16832, "cyberpunk_rebecca"},
	{16833, "cyberpunk_david"},
	{16834, "dora"},
	{16835, "maybe_baby"},
	{16836, "witch"},
	{16837, "addams"},
	{16838, "harly_queen"},
	{16839, "scream"},
	{16840, "alice_madness"},
	{16841, "geralt_witcher"},
	{16850, "ciri_witcher"},
	{16851, "albert_mironov"},
	{16852, "valentin"},
	{16891, "mayson"},
	{16901, "jinx"},
	{16902, "ortega"},
	{16960, "admingirl1"},
	{16961, "admingirl2"},
	{16962, "adminman1"},
	{16963, "adminman3"},
	{16965, "adminman4"},
	{16966, "adminman5"},
	{16967, "adminman6"},
	{16968, "adminman7"},
	{16997, "security1"},
	{16998, "security2"},
	{16999, "security3"},
	{17475, "security4"},
	{17476, "willi"},
	{17477, "tan"},
	{17478, "snape"},
	{17479, "ron"},
	{17480, "luci"},
	{17481, "hermiona"},
	{17482, "harry"},
	{17483, "hagrid"},
	{17484, "draco"},
	{24098, "beliy"},
	{24099, "bodrov"},
	{24100, "letov"},
	{24101, "mavrodi"},
	{24102, "pyoker"},
	{24103, "drockw"},
	{24104, "tsoy"}
};

enum infonew
{
	Model_Name[10+15],
	Model_OLD,
	Model_NEW,
	Power,
	Stability,
	Velocity,
	MaxSpeed
};
static const InfoConfigVehicle[][infonew] = {
	{"Landstalker", 400, -1, 20, 40, 20, 160},
	{"Bravura", 401, -1, 20, 40, 20, 160},
	{"Buffalo", 402, -1, 20, 40, 20, 200},
	{"Linerunner", 403, -1, 20, 40, 20, 180},
	{"Perenniel", 404, -1, 20, 40, 20, 150},
	{"Sentinel", 405, -1, 20, 40, 20, 165},
	{"Dumper", 406, -1, 20, 40, 20, 110},
	{"Firetruck", 407, -1, 20, 40, 20, 170},
	{"Trashmaster", 408, -1, 20, 40, 20, 110},
	{"Stretch", 409, -1, 20, 40, 20, 180},
	{"Manana", 410, -1, 20, 40, 20, 160},
	{"Infernus", 411, -1, 20, 40, 20, 240},
	{"Voodoo", 412, -1, 20, 40, 20, 160},
	{"Pony", 413, -1, 20, 40, 20, 160},
	{"Mule", 414, -1, 20, 40, 20, 140},
	{"Cheetah", 415, -1, 20, 40, 20, 230},
	{"Ambulance", 416, -1, 20, 40, 20, 155},
	{"Leviathan", 417, -1, 20, 40, 20, 200},
	{"Moonbeam", 418, -1, 20, 40, 20, 150},
	{"Esperanto", 419, -1, 20, 40, 20, 160},
	{"Taxi", 420, -1, 20, 40, 20, 180},
	{"Washington", 421, -1, 20, 40, 20, 180},
	{"Bobcat", 422, -1, 20, 40, 20, 165},
	{"Mr Whoopee", 423, -1, 20, 40, 20, 145},
	{"BF Injection", 424, -1, 20, 40, 20, 170},
	{"Hunter", 425, -1, 20, 40, 20, 200},
	{"Premier", 426, -1, 20, 40, 20, 200},
	{"Enforcer", 427, -1, 20, 40, 20, 170},
	{"Securicar", 428, -1, 20, 40, 20, 170},
	{"Banshee", 429, -1, 20, 40, 20, 200},
	{"Predator", 430, -1, 20, 40, 20, 190},
	{"Bus", 431, -1, 20, 40, 20, 130},
	{"Rhino", 432, -1, 20, 40, 20, 800},
	{"Barracks", 433, -1, 20, 40, 20, 180},
	{"Hotknife", 434, -1, 20, 40, 20, 200},
	{"Article Trailer", 435, -1, 20, 40, 20, 120},
	{"Previon", 436, -1, 20, 40, 20, 160},
	{"Coach", 437, -1, 20, 40, 20, 160},
	{"Cabbie", 438, -1, 20, 40, 20, 160},
	{"Stallion", 439, -1, 20, 40, 20, 160},
	{"Rumpo", 440, -1, 20, 40, 20, 160},
	{"RC Bandit", 441, -1, 20, 40, 20, 750},
	{"Romero", 442, -1, 20, 40, 20, 150},
	{"Packer", 443, -1, 20, 40, 20, 150},
	{"Monster", 444, -1, 20, 40, 20, 110},
	{"Admiral", 445, -1, 20, 40, 20, 165},
	{"Squallo", 446, -1, 20, 40, 20, 190},
	{"Seasparrow", 447, -1, 20, 40, 20, 200},
	{"Pizzaboy", 448, -1, 20, 40, 20, 190},
	{"Tram", 449, -1, 20, 40, 20, 150},
	{"Article Trailer 2", 450, -1, 20, 40, 20, 120},
	{"Turismo", 451, -1, 20, 40, 20, 240},
	{"Speeder", 452, -1, 20, 40, 20, 190},
	{"Reefer", 453, -1, 20, 40, 20, 190},
	{"Tropic", 454, -1, 20, 40, 20, 190},
	{"Flatbed", 455, -1, 20, 40, 20, 140},
	{"Yankee", 456, -1, 20, 40, 20, 160},
	{"Caddy", 457, -1, 20, 40, 20, 160},
	{"Solair", 458, -1, 20, 40, 20, 165},
	{"Berkley's RC Van", 459, -1, 20, 40, 20, 160},
	{"Skimmer", 460, -1, 20, 40, 20, 200},
	{"PCJ-600", 461, -1, 20, 40, 20, 190},
	{"Faggio", 462, -1, 20, 40, 20, 260},
	{"Freeway", 463, -1, 20, 40, 20, 190},
	{"RC Baron", 464, -1, 20, 40, 20, 750},
	{"RC Raider", 465, -1, 20, 40, 20, 750},
	{"Glendale", 466, -1, 20, 40, 20, 160},
	{"Oceanic", 467, -1, 20, 40, 20, 160},
	{"Sanchez", 468, -1, 20, 40, 20, 190},
	{"Sparrow", 469, -1, 20, 40, 20, 200},
	{"Patriot", 470, -1, 20, 40, 20, 170},
	{"Quad", 471, -1, 20, 40, 20, 160},
	{"Coastguard", 472, -1, 20, 40, 20, 190},
	{"Dinghy", 473, -1, 20, 40, 20, 190},
	{"Hermes", 474, -1, 20, 40, 20, 160},
	{"Sabre", 475, -1, 20, 40, 20, 160},
	{"Rustler", 476, -1, 20, 40, 20, 200},
	{"ZR-350", 477, -1, 20, 40, 20, 200},
	{"Walton", 478, -1, 20, 40, 20, 150},
	{"Regina", 479, -1, 20, 40, 20, 165},
	{"Comet", 480, -1, 20, 40, 20, 200},
	{"BMX", 481, -1, 20, 40, 20, 120},
	{"Burrito", 482, -1, 20, 40, 20, 150},
	{"Camper", 483, -1, 20, 40, 20, 120},
	{"Marquis", 484, -1, 20, 40, 20, 190},
	{"Baggage", 485, -1, 20, 40, 20, 160},
	{"Dozer", 486, -1, 20, 40, 20, 100},
	{"Maverick", 487, -1, 20, 40, 20, 200},
	{"SAN News Maverick", 488, -1, 20, 40, 20, 200},
	{"Rancher", 489, -1, 20, 40, 20, 170},
	{"FBI Rancher", 490, -1, 20, 40, 20, 170},
	{"Virgo", 491, -1, 20, 40, 20, 160},
	{"Greenwood", 492, -1, 20, 40, 20, 160},
	{"Jetmax", 493, -1, 20, 40, 20, 190},
	{"Hotring Racer", 494, -1, 20, 40, 20, 220},
	{"Sandking", 495, -1, 20, 40, 20, 170},
	{"Blista Compact", 496, -1, 20, 40, 20, 200},
	{"Police Maverick", 497, -1, 20, 40, 20, 200},
	{"Boxville", 498, -1, 20, 40, 20, 140},
	{"Benson", 499, -1, 20, 40, 20, 140},
	{"Mesa", 500, -1, 20, 40, 20, 160},
	{"RC Goblin", 501, -1, 20, 40, 20, 750},
	{"Hotring Racer", 502, -1, 20, 40, 20, 260},
	{"Hotring Racer", 503, -1, 20, 40, 20, 260},
	{"Bloodring Banger", 504, -1, 20, 40, 20, 160},
	{"Rancher", 505, -1, 20, 40, 20, 260},
	{"Super GT", 506, -1, 20, 40, 20, 230},
	{"Elegant", 507, -1, 20, 40, 20, 165},
	{"Journey", 508, -1, 20, 40, 20, 140},
	{"Bike", 509, -1, 20, 40, 20, 120},
	{"Mountain Bike", 510, -1, 20, 40, 20, 140},
	{"Beagle", 511, -1, 20, 40, 20, 200},
	{"Cropduster", 512, -1, 20, 40, 20, 200},
	{"Stuntplane", 513, -1, 20, 40, 20, 200},
	{"Tanker", 514, -1, 20, 40, 20, 120},
	{"Roadtrain", 515, -1, 20, 40, 20, 120},
	{"Nebula", 516, -1, 20, 40, 20, 165},
	{"Majestic", 517, -1, 20, 40, 20, 165},
	{"Buccaneer", 518, -1, 20, 40, 20, 160},
	{"Shamal", 519, -1, 20, 40, 20, 340},
	{"Hydra", 520, -1, 20, 40, 20, 340},
	{"FCR-900", 521, -1, 20, 40, 20, 190},
	{"NRG-500", 522, -1, 20, 40, 20, 190},
	{"HPV1000", 523, -1, 20, 40, 20, 190},
	{"Cement Truck", 524, -1, 20, 40, 20, 110},
	{"Towtruck", 525, -1, 20, 40, 20, 160},
	{"Fortune", 526, -1, 20, 40, 20, 160},
	{"Cadrona", 527, -1, 20, 40, 20, 160},
	{"FBI Truck", 528, -1, 20, 40, 20, 170},
	{"Willard", 529, -1, 20, 40, 20, 160},
	{"Forklift", 530, -1, 20, 40, 20, 600},
	{"Tractor", 531, -1, 20, 40, 20, 700},
	{"Combine Harvester", 532, -1, 20, 40, 20, 140},
	{"Feltzer", 533, -1, 20, 40, 20, 200},
	{"Remington", 534, -1, 20, 40, 20, 160},
	{"Slamvan", 535, -1, 20, 40, 20, 160},
	{"Blade", 536, -1, 20, 40, 20, 160},
	{"Freight", 537, -1, 20, 40, 20, 110},
	{"Brownstreak", 538, -1, 20, 40, 20, 110},
	{"Vortex", 539, -1, 20, 40, 20, 150},
	{"Vincent", 540, -1, 20, 40, 20, 160},
	{"Bullet", 541, -1, 20, 40, 20, 230},
	{"Clover", 542, -1, 20, 40, 20, 160},
	{"Sadler", 543, -1, 20, 40, 20, 165},
	{"Firetruck LA", 544, -1, 20, 40, 20, 260},
	{"Hustler", 545, -1, 20, 40, 20, 160},
	{"Intruder", 546, -1, 20, 40, 20, 160},
	{"Primo", 547, -1, 20, 40, 20, 160},
	{"Cargobob", 548, -1, 20, 40, 20, 200},
	{"Tampa", 549, -1, 20, 40, 20, 160},
	{"Sunrise", 550, -1, 20, 40, 20, 160},
	{"Merit", 551, -1, 20, 40, 20, 165},
	{"Utility Van", 552, -1, 20, 40, 20, 160},
	{"Nevada", 553, -1, 20, 40, 20, 200},
	{"Yosemite", 554, -1, 20, 40, 20, 170},
	{"Windsor", 555, -1, 20, 40, 20, 180},
	{"Monster A", 556, -1, 20, 40, 20, 110},
	{"Monster B", 557, -1, 20, 40, 20, 110},
	{"Uranus", 558, -1, 20, 40, 20, 200},
	{"Jester", 559, -1, 20, 40, 20, 200},
	{"Sultan", 560, -1, 20, 40, 20, 200},
	{"Stratum", 561, -1, 20, 40, 20, 200},
	{"Elegy", 562, -1, 20, 40, 20, 200},
	{"Raindance", 563, -1, 20, 40, 20, 200},
	{"RC Tiger", 564, -1, 20, 40, 20, 750},
	{"Flash", 565, -1, 20, 40, 20, 200},
	{"Tahoma", 566, -1, 20, 40, 20, 160},
	{"Savanna", 567, -1, 20, 40, 20, 160},
	{"Bandito", 568, -1, 20, 40, 20, 170},
	{"Freight Flat Trailer", 569, -1, 20, 40, 20, 110},
	{"Streak Trailer", 570, -1, 20, 40, 20, 110},
	{"Kart", 571, -1, 20, 40, 20, 900},
	{"Mower", 572, -1, 20, 40, 20, 600},
	{"Dune", 573, -1, 20, 40, 20, 110},
	{"Sweeper", 574, -1, 20, 40, 20, 600},
	{"Broadway", 575, -1, 20, 40, 20, 160},
	{"Tornado", 576, -1, 20, 40, 20, 160},
	{"AT400", 577, -1, 20, 40, 20, 200},
	{"DFT-30", 578, -1, 20, 40, 20, 110},
	{"Huntley", 579, -1, 20, 40, 20, 160},
	{"Stafford", 580, -1, 20, 40, 20, 165},
	{"BF-400", 581, -1, 20, 40, 20, 190},
	{"Newsvan", 582, -1, 20, 40, 20, 160},
	{"Tug", 583, -1, 20, 40, 20, 170},
	{"Petrol Trailer", 584, -1, 20, 40, 20, 120},
	{"Emperor", 585, -1, 20, 40, 20, 165},
	{"Wayfarer", 586, -1, 20, 40, 20, 260},
	{"Euros", 587, -1, 20, 40, 20, 200},
	{"Hotdog", 588, -1, 20, 40, 20, 140},
	{"Club", 589, -1, 20, 40, 20, 200},
	{"Freight Box Trailer", 590, -1, 20, 40, 20, 260},
	{"Article Trailer 3", 591, -1, 20, 40, 20, 120},
	{"Andromada", 592, -1, 20, 40, 20, 200},
	{"Dodo", 593, -1, 20, 40, 20, 200},
	{"RC Cam", 594, -1, 20, 40, 20, 600},
	{"Launch", 595, -1, 20, 40, 20, 190},
	{"Police Car (LSPD)", 596, -1, 20, 40, 20, 200},
	{"Police Car (SFPD)", 597, -1, 20, 40, 20, 200},
	{"Police Car (LVPD)", 598, -1, 20, 40, 20, 200},
	{"Police Ranger", 599, -1, 20, 40, 20, 160},
	{"Picador", 600, -1, 20, 40, 20, 165},
	{"Police SF.", 601, -1, 20, 40, 20, 110},
	{"Alpha", 602, -1, 20, 40, 20, 200},
	{"Phoenix", 603, -1, 20, 40, 20, 200},
	{"Glendale Shit", 604, -1, 20, 40, 20, 260},
	{"Sadler Shit", 605, -1, 20, 40, 20, 260},
	{"Baggage Trailer A", 606, -1, 20, 40, 20, 160},
	{"Baggage Trailer B", 607, -1, 20, 40, 20, 160},
	{"Tug Stairs Trailer", 608, -1, 20, 40, 20, 160},
	{"Boxville", 609, -1, 20, 40, 20, 140},
	{"Farm Trailer", 610, -1, 20, 40, 20, 160},
	{"Utility Trailer", 611, -1, 20, 40, 20, 260},
	{"MB GTS AMG", 560, 612, 10, 25, 20, 270},
	{"MB G63 AMG", 579, 613, 10, 25, 20, 250},
	{"AUDI RS6", 436, 614, 10, 25, 20, 265},
	{"BMW X5 G05", 400, 662, 10, 25, 20, 250},
	{"Chevy Corvette C8", 451, 663, 10, 25, 20, 255},
	{"Chevy Cruze", 507, 665, 10, 25, 20, 190},
	{"Lexus LX570", 490, 666, 10, 25, 20, 225},
	{"Porsche 911 Carrera", 411, 667, 10, 25, 20, 280},
	{"Porsche Cayenne", 490, 668, 10, 25, 20, 240},
	{"Bentley Continental GT", 541, 699, 10, 25, 20, 260},
	{"BMW M8", 494, 793, 10, 25, 20, 295},
	{"MB E63s", 580, 794, 10, 25, 20, 265},
	{"MB S63 Coupe", 559, 909, 10, 25, 20, 250},
	{"VW Tuareg", 442, 965, 10, 25, 20, 230},
	{"Lamborgini Urus", 400, 1194, 10, 25, 20, 260},
	{"AUDI Q8", 400, 1195, 10, 25, 20, 230},
	{"Dodge SRT8", 535, 1196, 10, 25, 20, 265},
	{"Acura NSX", 494, 1197, 10, 25, 20, 280},
	{"Volvo V90", 400, 1198, 10, 25, 20, 200},
	{"Range Rover Evoque", 490, 1199, 10, 25, 20, 230},
	{"Honda Civic type R", 411, 1200, 10, 25, 20, 260},
	{"Lexus IS350", 566, 1201, 10, 25, 20, 240},
	{"Ford Mustang", 475, 1202, 10, 25, 20, 260},
	{"Volvo XC90", 411, 1203, 10, 25, 20, 220},
	{"Jaguar F-Pace", 411, 1204, 10, 25, 20, 250},
	{"Kia Optima", 516, 1205, 10, 25, 20, 230},
	{"BMW Z4", 546, 3155, 10, 25, 20, 250},
	{"MB S600", 547, 3156, 10, 25, 20, 250},
	{"BMW X5 e53", 400, 3157, 10, 25, 20, 230},
	{"Nissan Skyline", 411, 3158, 10, 25, 20, 250},
	{"Diavel", 522, 3194, 10, 25, 20, 250},
	{"Ducati", 522, 3195, 10, 25, 20, 250},
	{"Ducati Ducnaked", 522, 3196, 10, 25, 20, 250},
	{"Kawasaki ZX10R", 522, 3197, 10, 25, 20, 250},
	{"Kanuni Western", 522, 3198, 10, 25, 20, 250},
	{"RR Ghost", 560, 3199, 10, 25, 20, 250},
	{"VW Beetle", 545, 3200, 10, 25, 20, 170},
	{"Buggati Divo", 411, 3201, 17, 25, 35, 418},
	{"Buggati Chiron", 411, 3202, 15, 25, 30, 400},
	{"Fiat 500 Abarth", 545, 3203, 10, 25, 20, 208},
	{"MB GLS", 400, 3204, 10, 25, 20, 250},
	{"MB g63 AMG", 579, 3205, 10, 25, 20, 230},
	{"Lamborghini SVJ", 411, 3206, 10, 25, 20, 320},
	{"Range Rover SVA", 400, 3207, 10, 25, 20, 230},
	{"BMW 530i", 585, 3208, 10, 25, 20, 250},
	{"MB S500 w220", 566, 3209, 10, 25, 20, 250},
	{"Tesla Model X", 560, 3210, 10, 25, 20, 250},
	{"Nissan Leaf", 551, 3211, 10, 25, 20, 190},
	{"Nissan Silvia s15", 562, 3212, 10, 25, 20, 230},
	{"Subaru Forest", 560, 3213, 10, 25, 20, 218},
	{"Subaru Legacy", 580, 3215, 10, 25, 20, 210},
	{"Hyundai Sonata", 560, 3216, 10, 25, 20, 200},
	{"BMW 7 e38", 547, 3217, 10, 25, 20, 250},
	{"MB e55", 492, 3218, 10, 25, 20, 250},
	{"Storm", 466, 3219, 10, 25, 20, 250},
	{"makvin", 451, 3220, 10, 25, 20, 250},
	{"mater", 451, 3222, 10, 25, 20, 250},
	{"super car", 525, 3223, 10, 25, 20, 250},
	{"super car 2", 563, 3224, 10, 25, 20, 250},
	{"Infinity FX50", 579, 3232, 10, 25, 20, 220},
	{"Lexus RX470", 490, 3233, 10, 25, 20, 225},
	{"Kia Sportage", 400, 3234, 10, 25, 20, 210},
	{"VW Golf", 419, 3235, 10, 25, 20, 240},
	{"AUDI R8", 541, 3236, 10, 25, 20, 280},
	{"Toyota Camry XV40", 445, 3237, 10, 25, 20, 230},
	{"Toyota Camry XV70", 560, 3238, 10, 25, 20, 240},
	{"BMW M5 E60", 566, 3239, 10, 25, 20, 260},
	{"BMW M5 F89", 540, 3240, 10, 25, 20, 270},
	{"Maybach S600", 560, 3245, 10, 25, 20, 250},
	{"MB AMG GT", 480, 3247, 10, 25, 20, 270},
	{"Porsche Panamera", 579, 3248, 10, 25, 20, 260},
	{"VW Passat", 405, 3251, 10, 25, 20, 230},
	{"Chevy Corvette 1980", 477, 3254, 10, 25, 20, 240},
	{"Dodge Challenger", 470, 3266, 10, 25, 20, 200},
	{"Ford Mustang GT500", 475, 3348, 10, 25, 20, 250},
	{"Aston Martin DB5", 496, 3974, 10, 25, 20, 210},
	{"BMW M3 GTR", 502, 4542, 10, 25, 20, 290},
	{"Camaro SS", 541, 4543, 30, 25, 60, 250},
	{"Mazda RX7", 506, 4544, 10, 25, 20, 260},
	{"Mazda RX8", 558, 4545, 10, 25, 20, 240},
	{"Mitsubishi Eclipse", 559, 4546, 10, 25, 20, 240},
	{"Ford Mustang old", 542, 4547, 10, 25, 20, 230},
	{"Ford Mustang old", 562, 4548, 10, 25, 20, 230},
	{"BMW 760LI", 560, 4774, 30, 25, 60, 250},
	{"Aston Martin One-77", 429, 4775, 10, 25, 20, 320},
	{"Bentley Baccalar", 541, 4776, 10, 25, 20, 290},
	{"Bentley Bentayga", 579, 4777, 10, 25, 20, 250},
	{"BMW M4 Competition", 415, 4778, 10, 25, 20, 265},
	{"BMW I8", 415, 4779, 10, 25, 20, 250},
	{"Genesis G90", 426, 4780, 10, 25, 20, 240},
	{"Honda Integra Type-R", 496, 4781, 10, 25, 20, 230},
	{"BMW M3 G20", 560, 4782, 10, 25, 20, 250},
	{"MB S500 W223", 421, 4783, 10, 25, 20, 250},
	{"Ford Raptor", 554, 4784, 10, 25, 20, 200},
	{"Ferrari J50", 415, 4785, 15, 25, 30, 300},
	{"MB SLR", 477, 4786, 15, 25, 30, 310},
	{"Subaru BRZ", 559, 4787, 15, 25, 30, 230},
	{"Lada Vesta SV-Cross", 400, 4788, 10, 25, 20, 180},
	{"Porsche Taycan", 560, 4789, 50, 25, 100, 260},
	{"Ferrari Enzo", 451, 4790, 35, 25, 70, 280},
	{"Uaz Patriot", 470, 4791, 10, 25, 20, 170},
	{"Волга 3110", 438, 4792, 15, 25, 30, 230},
	{"MB X-Class", 554, 4793, 15, 25, 30, 240},
	{"Aston Martin 2012", 560, 4794, 15, 25, 30, 240},
	{"Ambulance Car", 539, 4795, 5, 25, 10, 235},
	{"JAGUAR XFR", 416, 4796, 10, 25, 20, 235},
	{"Dodge Emergency", 596, 4797, 10, 25, 20, 235},
	{"Ford Explorer", 599, 4798, 10, 25, 20, 180},
	{"Ford 150", 470, 4799, 20, 25, 40, 260},
	{"Deltaplan", 593, 4800, 15, 25, 30, 180},
	{"car 1", 512, 4801, 15, 25, 30, 190},
	{"car 2", 596, 4802, 25, 25, 50, 190},
	{"car 3", 598, 4803, 25, 25, 50, 190},
	{"AUDI A6", 551, 6604, 25, 25, 50, 240},
	{"AUDI Q7", 400, 6605, 25, 25, 50, 235},
	{"BMW M6", 460, 6606, 37, 25, 75, 310},
	{"BMW M6 Old", 460, 6607, 35, 25, 70, 230},
	{"MB CLA-46", 460, 6608, 35, 25, 70, 250},
	{"MB CLS", 551, 6609, 22, 25, 45, 295},
	{"Haval H6", 579, 6610, 32, 25, 65, 200},
	{"TLC 200", 579, 6611, 30, 25, 60, 220},
	{"Lincoln", 540, 6612, 20, 25, 40, 230},
	{"Porsche Macan", 580, 6613, 25, 25, 50, 250},
	{"Daewoo Matiz", 457, 6614, 20, 25, 40, 200},
	{"Mercedes-AMG G63 6x6", 470, 6615, 10, 25, 20, 230},
	{"Mercedes E-63 AMG 1", 560, 6616, 35, 25, 70, 250},
	{"Mercedes E-63 AMG 2", 556, 6617, 22, 25, 45, 220},
	{"Mercedes E-63 AMG 3", 556, 6618, 25, 25, 50, 200},
	{"Mercedes E-63 AMG 4", 557, 6619, 23, 25, 47, 200},
	{"Mercedes E-63 AMG 5", 557, 6619, 26, 25, 52, 200},
	{"TLC Prado", 579, 6621, 27, 25, 55, 220},
	{"Toyota Rav4", 400, 6622, 27, 25, 55, 220},
	{"Supra A90", 477, 6623, 30, 25, 60, 250},
	{"UAZ 469", 400, 6624, 20, 25, 40, 170},
	{"Volvo XC90 old", 400, 6625, 20, 25, 40, 190},
	{"Mercedes-Benz GL 63 AMG", 579, 12713, 30, 40, 25, 230},
	{"Renault Laguna", 602, 12714, 25, 33, 25, 190},
	{"Mercedes-Benz CLS 53 AMG", 560, 12715, 30, 40, 25, 230},
	{"Audi RS5", 560, 12716, 30, 40, 25, 230},
	{"Cadillac Escalade", 560, 12717, 30, 40, 25, 230},
	{"Tesla Cybertruck", 560, 12718, 30, 40, 25, 230},
	{"Tesla Model S", 560, 12719, 30, 40, 25, 230},
	{"Ford GT", 560, 12720, 30, 40, 25, 230},
	{"Dodge Viper", 560, 12721, 30, 40, 25, 230},
	{"Volkswagen Polo", 560, 12722, 30, 40, 25, 230},
	{"Mitsubishi Lancer EVOIX", 560, 12723, 30, 40, 25, 230},
	{"Audi TT RS", 560, 12724, 30, 40, 25, 230},
	{"Roadtrain ACTROS", 560, 12725, 30, 40, 25, 230},
	{"Audi S4", 560, 12726, 30, 40, 25, 230},
	{"BMW 4S", 560, 12727, 30, 40, 25, 230},
	{"Cadillac Escalade 2007", 560, 12728, 30, 40, 25, 230},
	{"Toyota Chaser", 560, 12729, 30, 40, 25, 230},
	{"Dacia", 560, 12730, 30, 40, 25, 230},
	{"Mitsubishi Lancer EVOX", 560, 12731, 30, 40, 25, 230},
	{"Chevrolet Impala 1964", 560, 12732, 30, 40, 25, 230},
	{"Chevrolet Impala 1967", 560, 12733, 30, 40, 25, 230},
	{"Roadtrain KENWOOTH", 560, 12734, 30, 40, 25, 230},
	{"Trailer KENWTRL", 560, 12735, 30, 40, 25, 230},
	{"McLaren MP4", 560, 12736, 30, 40, 25, 230},
	{"Mach-1", 560, 12737, 30, 40, 25, 230},
	{"Rolls-Royce Phantom", 560, 12738, 30, 40, 25, 230},
	{"Pickup", 560, 12739, 30, 40, 25, 230},
	{"Roadtrain VOLVOTR", 560, 12740, 30, 40, 25, 230},
	{"Subaru WRX STi ooit", 560, 12741, 30, 40, 25, 230},
	{"Sherpquad", 560, 12742, 30, 40, 25, 230},
	{"Sanki", 560, 12743, 30, 40, 25, 230},
	{"Deltaplan", 512, 4800, 30, 45, 25, 225},
	{"Delimobile X", 451, 14119, 30, 45, 25, 225},
	{"Delimobile Y", 451, 14120, 30, 45, 25, 225},
	{"Delimobile Z", 451, 14121, 30, 45, 25, 225},
	{"Delimobile W", 451, 14122, 30, 45, 25, 225},
	{"Vision", 411, 14913, 30, 45, 25, 225},
	{"Hotwheels", 411, 14906, 30, 45, 25, 225},
	{"Amgone", 411, 14767, 30, 45, 25, 225},
	{"Valkyrie", 451, 14768, 30, 45, 25, 225},
	{"Aveo", 451, 14769, 30, 45, 25, 225},
	{"Bugbol", 411, 14857, 30, 45, 25, 225},
	{"Buggys", 451, 14884, 30, 45, 25, 225},
	{"Buster", 451, 14899, 30, 45, 25, 225},
	{"Monza", 451, 14904, 30, 45, 25, 225},
	{"Priora", 451, 14910, 30, 45, 25, 225},
	{"Mtbbik", 451, 14916, 30, 45, 25, 225},
	{"G630", 411, 14905, 30, 45, 25, 225},
	{"Autobus", 431, 14918, 30, 45, 25, 225},
	{"Autobus", 431, 14919, 30, 45, 25, 225},
	{"Charger", 411, 15085, 30, 45, 25, 225},
	{"BMWM1", 411, 15098, 30, 45, 25, 225},
	{"Countach", 411, 15099, 30, 45, 25, 225},
	{"Nagasaki", 411, 15100, 30, 45, 25, 225},
	{"Gemera", 411, 15101, 30, 45, 25, 225},
	{"Kiak7", 411, 15102, 30, 45, 25, 225},
	{"Toro", 411, 15103, 30, 45, 25, 225},
	{"Lx600", 411, 15104, 30, 45, 25, 225},
	{"Qashai", 411, 15105, 30, 45, 25, 225},
	{"Predatorr", 411, 15106, 30, 45, 25, 225},
	{"Scirroco", 411, 15107, 30, 45, 25, 225},
	{"Longfin", 411, 15108, 30, 45, 25, 225},
	{"Toyotagr", 411, 15109, 30, 45, 25, 225},
	{"Wellcraft", 411, 15110, 30, 45, 25, 225},
	{"Yacht", 411, 15111, 30, 45, 25, 225},
	{"Boates", 411, 15112, 30, 45, 25, 225},
	//
	{"Mercedes A45", 429, 15113, 50, 35, 65, 280},
	{"Toyota AE86", 562, 15114, 30, 15, 25, 225},
	{"Land Rover Defender", 400, 15115, 30, 25, 25, 244},
	{"Mach Auto", 411, 15116, 53, 45, 45, 300},
	{"Mazda 6", 560, 15117, 30, 45, 25, 250},
	{"Audi R8s", 429, 15118, 22, 35, 36, 270},
	{"Hyundai Santa Fe", 560, 15119, 20, 15, 45, 245},
	{"Range Rover Velar", 411, 15295, 30, 45, 25, 225},
	{"Mercedes-Benz 1620", 411, 15326, 48, 45, 25, 241},
	{"Mercedes-Benz 1113", 411, 15327, 39, 45, 21, 239},
	{"Volkswagen Constellation", 411, 15328, 30, 45, 25, 230},
	{"Luxor Deluxe", 411, 15329, 30, 45, 25, 225},
	{"Nimbus", 411, 15330, 30, 45, 25, 225},
	{"Vestra", 411, 15331, 30, 45, 25, 225},
	{"Mercedes-Benz Arocs 4163", 411, 15332, 51, 45, 33, 300},
	{"Iveco Stralis", 411, 15333, 30, 45, 25, 225},
	{"MAN TGS", 411, 15334, 50, 50, 61, 249},
	{"Volvo 460", 411, 15335, 34, 49, 21, 230},
	{"VC - Ambulance", 416, 15416, 35, 50, 39, 300},
	{"VC - Banshee", 429, 15417, 35, 50, 39, 300},
	{"VC - Benson", 499, 15418, 35, 50, 39, 300},
	{"VC - Bloodring", 504, 15419, 35, 50, 39, 300},
	{"VC - Bus", 431, 15420, 35, 50, 39, 300},
	{"VC - Cabbie", 438, 15421, 35, 50, 39, 300},
	{"VC - Police", 596, 15122, 35, 50, 39, 300},
	{"VC - Deluxo", 560, 15123, 35, 50, 39, 300},
	{"VC - FBI Rancher", 490, 15424, 35, 50, 39, 300},
	{"VC - Flatbed", 455, 15425, 35, 50, 39, 300},
	{"VC - Idaho", 560, 15426, 35, 50, 39, 300},
	{"VC - Infernus", 411, 15427, 35, 50, 39, 300},
	{"VC - Love Fist", 438, 15428, 35, 50, 39, 300},
	{"VC - Patriot", 470, 15429, 35, 50, 39, 300},
	{"VC - Pizzaboy", 448, 15430, 35, 50, 39, 300},
	{"VC - Securica", 428, 15431, 35, 50, 39, 300},
	{"VC - Sentinel", 405, 15432, 35, 50, 39, 300},
	{"VC - Stinger", 411, 15433, 35, 50, 39, 300},
	{"VC - Stretch", 409, 15434, 35, 50, 39, 300},
	{"VC - Taxi", 420, 15435, 35, 50, 39, 300},
	{"VC - Trashmaster", 408, 15436, 35, 50, 39, 300},
	{"VC - Angel", 560, 15485, 35, 50, 39, 300},
	{"VC - BF Injection", 424, 15486, 35, 50, 39, 300},
	{"VC - Blista", 496, 15487, 35, 50, 39, 300},
	{"VC - Burrito", 482, 15488, 35, 50, 39, 300},
	{"VC - FBI Car", 560, 15489, 35, 50, 39, 300},
	{"VC - Hotring B", 502, 15490, 35, 50, 39, 300},
	{"VC - Sabre Turbo", 475, 15491, 35, 50, 39, 300},
	{"VC - Sanchez", 468, 15492, 35, 50, 39, 300},
	{"ambtess", 502, 15493, 38, 41, 27, 310},
	{"ambtesx", 502, 15494, 36, 45, 21, 310},
	{"BMW IX", 400, 15495, 40, 59, 49, 350},
	{"Mercedes-Benz EQC", 502, 15496, 39, 55, 27, 280},
	{"Audi Etron", 400, 15497, 34, 49, 21, 290},
	{"poltess", 400, 15498, 34, 49, 21, 251},
	{"poltesx", 400, 15499, 34, 49, 21, 255},
	{"twizy", 400, 15500, 34, 49, 21, 231},
	{"Polestar Racing", 502, 15501, 34, 49, 21, 255},
	{"mgle", 400, 15721, 34, 49, 21, 255},
	{"articts", 435, 15720, 0, 0, 0, 180},
	{"Tesla Model 3", 560, 15722, 34, 49, 21, 270},
	{"Lamborghini Murcielago", 411, 15723, 34, 49, 21, 270},
	{"xoomer", 400, 15724, 34, 49, 21, 270},
	{"JMC", 535, 15725, 34, 49, 21, 270},
	{"Mercedes-Benz g163", 579, 15626, 34, 49, 21, 270},
	{"BMW serious 7 srs", 579, 15627, 34, 49, 21, 270},
	{"mbv250", 560, 15628, 38, 39, 29, 331},
	{"mbc63", 560, 15629, 38, 39, 29, 331},
	{"mbc63sc", 560, 15630, 51, 50, 22, 361},
	{"audirs7", 560, 15631, 60, 38, 26, 333},
	{"seven", 475, 15746, 34, 49, 21, 270},
	{"BMW X6", 475, 15747, 34, 49, 21, 290},
	{"Jeep Gladiator", 402, 15748, 34, 49, 21, 270},
	{"BMW M8", 560, 15749, 55, 51, 38, 360},
	{"VW Toureg", 405, 15750, 34, 49, 21, 250},
	{"Range Rover", 579, 15751, 34, 49, 21, 270},
	{"Mercedes S63", 402, 15752, 34, 49, 21, 270},
	{"c63", 402, 15858, 34, 49, 21, 270},
	{"f10", 466, 15859, 34, 49, 21, 270},
	{"BMW e30", 560, 15860, 34, 49, 21, 270},
	{"transporter", 482, 15861, 34, 49, 21, 270},
	{"vito", 482, 15862, 34, 49, 21, 270},
	{"vivaro", 482, 15863, 34, 49, 21, 270},
	//
	{"skate", 481, 15882, 0, 0, 0, 180},
	{"surfboard", 473, 15883, 0, 0, 0, 180},
	{"audi80", 560, 15902, 34, 49, 21, 270},
	{"c63coupe", 560, 15903, 34, 49, 21, 270},
	{"BMW e34", 536, 15904, 34, 49, 21, 270},
	{"BMW e63w", 560, 15905, 34, 49, 21, 270},
	{"f85", 560, 15906, 34, 49, 21, 270},
	{"gallardo", 411, 15907, 50, 45, 40, 380},
	{"gle2016", 560, 15908, 34, 49, 21, 270},
	{"BMW M8 ( OLD )", 477, 15909, 39, 51, 53, 360},
	{"Audi RS18", 536, 15910, 34, 49, 21, 330},
	{"Mercedes GT63 Brabus",541,15960, 34, 49, 21, 330},
	{"Mercedes-Benz GLE Brabus",535, 15961, 34, 49, 21, 330},
	{"McLaren 720S", 434, 15962, 34, 49, 21, 330},
	{"Dodge RAM 3500",560, 15963, 34, 49, 21, 330},
	{"Helicopter",487, 15964, 34, 49, 21, 330},
	{"Metla",447,15965, 34, 49, 21, 330},
	{"Batmobile",560, 16793, 34, 49, 21, 330},
	{"Zombiemobile",434, 16794, 34, 49, 21, 330},
	{"Devil",560, 16795, 34, 49, 21, 330},
	{"Police Apocalypse",560, 16796, 34, 49, 21, 330},
	{"Chum Bucket",560, 16797, 34, 49, 21, 330},
	{"Hellway",463, 16798, 34, 49, 21, 330},

	{"BRAG63A",579, 16892, 34, 49, 21, 330},
	{"S500W223B",463, 16893, 34, 49, 21, 330},
	{"Mansory Stallone",400, 16894, 34, 49, 21, 330},
	{"bentaygam",463, 16895, 34, 49, 21, 330},
	{"gbrabus63",579, 16896, 34, 49, 21, 330},
	{"Mercedes-AMG: G63 M",579, 16897, 34, 49, 21, 330},
	{"Mercedes-Benz GLS 2020",400, 16898, 34, 49, 21, 330},
	{"Rolls-Royce Cullinan M",475, 16899, 34, 49, 21, 330},
	{"Lamborghini Urus M",505, 16900, 34, 49, 21, 330},
	{"Bobcat [New Year]",505, 16903, 34, 49, 21, 330},
	{"Hotknife [New Year]",460, 16904, 34, 49, 21, 330},
	{"Snowboard",481, 16920, 34, 49, 21, 330},
	{"Chevrolet Corvette",402, 16951, 34, 49, 21, 330},
	{"Porche Carrera",402, 16952, 34, 49, 21, 330},
	{"Scramjet",402, 16953, 34, 49, 21, 330},
	{"Dodge Charger SLT",402, 16954, 34, 49, 21, 330},
	{"Ferrari F40",463, 16955, 34, 49, 21, 330},
	{"Canis",505, 16956, 34, 49, 21, 330},
	{"Chevrolet Tahoe",463, 16957, 34, 49, 21, 330},
	{"Tampa GT310",463, 16958, 34, 49, 21, 330},
	{"Toyota Tundra",463, 16959, 34, 49, 21, 330},
	{"Scooter 1",462, 16994, 34, 49, 21, 330},
	{"Scooter 2",462, 16995, 34, 49, 21, 330},
	{"Scooter 3",462, 16996, 34, 49, 21, 330},
	{"Cheetah [V]", 411, 18164, 34, 49, 21, 330},
	{"Huntley S [V]", 400, 18165, 34, 49, 21, 280},
	{"Obey 9F", 411, 18166, 50, 49, 21, 300},
	{"Infernus Pegassi [V]", 411, 18167, 60, 49, 40, 306},
	{"BMW i7", 400, 18152, 60, 49, 40, 273},
	{"Shelby Cobra", 411, 18153, 30, 35, 278},
	{"Ford Fusion", 411, 18154, 30, 35, 278},
	{"Toyota Mark II", 411, 18155, 30, 35, 278},
	{"Daewoo Nexia", 411, 18156, 30, 35, 278},
	{"Volkswagen Passat B3", 560, 18157, 30, 35, 278},
	{"Infiniti QX", 411, 18158, 30, 35, 278},
	{"Mercedes-Benz SL65 AMG", 411, 18159, 30, 35, 278},
	{"Nissan Titan", 411, 18160, 30, 35, 278},
	{"Ford Victoria", 411, 18161, 30, 35, 278}
	/*{"Cheetah [V]", 411, 16964, 30, 35, 278},
	{"Cheetah [V]", 411, 16969, 30, 35, 278},
	{"Cheetah [V]", 411, 16970, 30, 35, 278},
	{"Cheetah [V]", 411, 16971, 30, 35, 278},
	{"Cheetah [V]", 411, 16972, 30, 35, 278},
	{"Cheetah [V]", 411, 15438, 30, 35, 278},
	{"Cheetah [V]", 411, 15439, 30, 35, 278},
	{"Cheetah [V]", 411, 15442, 30, 35, 278},
	{"Cheetah [V]", 411, 15443, 30, 35, 278},
	{"Cheetah [V]", 411, 15444, 30, 35, 278},
	{"Cheetah [V]", 411, 15445, 30, 35, 278},
	{"Cheetah [V]", 411, 15446, 30, 35, 278},
	{"Cheetah [V]", 411, 6710, 30, 35, 278},
	{"Cheetah [V]", 411, 6711, 30, 35, 278},
	{"Cheetah [V]", 411, 6712, 30, 35, 278},
	{"Cheetah [V]", 411, 6713, 30, 35, 278},
	{"Cheetah [V]", 411, 6714, 30, 35, 278},
	{"Cheetah [V]", 411, 6715, 30, 35, 278},
	{"Cheetah [V]", 411, 6716, 30, 35, 278},
	{"Cheetah [V]", 411, 6717, 30, 35, 278},
	{"Cheetah [V]", 411, 6718, 30, 35, 278},
	{"Cheetah [V]", 411, 6741, 30, 35, 278},
	{"Cheetah [V]", 411, 6742, 30, 35, 278},
	{"Cheetah [V]", 411, 6743, 30, 35, 278},
	{"Cheetah [V]", 411, 6744, 30, 35, 278},
	{"Cheetah [V]", 411, 6745, 30, 35, 278},
	{"Cheetah [V]", 411, 6746, 30, 35, 278},
	{"Cheetah [V]", 411, 14131, 30, 35, 278},
	{"Cheetah [V]", 411, 14132, 30, 35, 278},
	{"Cheetah [V]", 411, 14133, 30, 35, 278},
	{"Cheetah [V]", 411, 6650, 30, 35, 278}*/
};


forward GetLauncherSkinModel(current_model);
public GetLauncherSkinModel(current_model)
{
	new model = -1;
	for(new i; i < sizeof(InfoConfigSkin); i++)
	{
		if(InfoConfigSkin[i][MSkin_New] == current_model)
		{
			model = 22;
			break;
		}
	}
	return model;
}

forward GetLauncherVehicleModel(current_model);
public GetLauncherVehicleModel(current_model)
{
	for(new i; i < sizeof(InfoConfigVehicle); i++)
	{
		if(InfoConfigVehicle[i][Model_NEW] == current_model) return InfoConfigVehicle[i][Model_OLD];
	}
	return -1;
}

stock GetVehicleModelBogdan(model)
{
	if(model <= 611) return model;
	new model_id = 411;
	for(new i; i < sizeof(InfoConfigVehicle); i++)
	{
		if(InfoConfigVehicle[i][Model_NEW] == model)
		{
			model_id = InfoConfigVehicle[i][Model_OLD];
			break;
		}
	}
	return model_id;
}
stock IsValidModel(model)
{
	if(model <= 611) return 1;
	for(new i; i < sizeof(InfoConfigVehicle); i++) if(InfoConfigVehicle[i][Model_NEW] == model) return 1;
	return 0;
}
stock IsValidSkin(model)
{
	if(model <= 311) return 1;
	for(new i; i < sizeof(InfoConfigSkin); i++) if(InfoConfigSkin[i][MSkin_New] == model) return 1;
	return 0;
}

static const aDonate[] = {100,200,300,400,500,600,700,999};
//acces
enum data_newskin
{
	dataUID,
	dataSlot,
	dataName[64]
};
static const NSkin_Data[][data_newskin] = {
	{17989, 0, "Капкейк"},
	{17990, 1, "Ободок 'Валентинки'"},
	{17991, 2, "Чокер 'Сердце под замком'"},
	{17992, 5, "Стрела купидона"},
	{17993, 1, "Маска 'Поцелуй'"},
	{17994, 2, "Фата невесты"},
	{17995, 5, "Мишка с сердцем на спину"},
	{17996, 5, "Леденец в виде сердца на спину"},
	{17997, 5, "Любовный букет на спину"},
	{17999, 0, "Кепка из змеиной кожи"},
	{18037, 1, "Очки 'Сердечки'"},
	{18103, 2, "Красный бант на левую руку"},
	{18106, 3, "Красный бант на правую руку"},
	{18107, 4, "Накидка 'Красная трава'"},
	{18108, 4, "Нагрудник 'Валентинка'"},
	{18110, 4, "Шарики 'Валентинки'"},
	{18111, 4, "Любовный смайлик"},
	{17485, 7, "Сумка 'Путешественник'"}, // 20, "0
	{17487, 7, "Сумка 'Молодежная'"}, // 20, "0
	{17488, 7, "Сумка 'Сундук'"}, // 20, "0
	{17489, 7, "Сумка 'Магнитофон BOOMIN'"}, // 20, "0
	{17490, 5, "Щит 'Магический бастион'"}, // 30, "0
	{17491, 0, "Шлем 'Marshmello'"}, // 24, "0
	{17492, 1, "Соломенный капюшон"}, // 24, "4
	{17493, 5, "Рюкзак 'Голова голема'"}, // 24, "0
	{17494, 5, "Корабельный штурвал на спину"}, // 22, "0
	{17495, 5, "Рюкзак 'Огненный панцирь'"}, // 22, "0
	{17496, 5, "Меч 'Повелитель морей'"}, // 22, "0
	{17497, 5, "Сачок на спину"}, // 18, "4
	{17498, 5, "Скелет рыбы на спину"}, // 22, "4
	{17499, 5, "Звездный компас на спину"}, // 22, "4
	{17975, 5, "Якорь душ на спину"}, // 22, "4
	{17977, 0, "Шлем PUBG"}, // 22, "0
	{17979, 0, "Шляпа 'Осьминожка'"}, // 20, "0
	{17980, 0, "Шапка из газеты"}, // 16, "0
	{17981, 0, "Диадема из ракушек"}, // 10, "0
	{17982, 0, "Папайка моряка"}, // 12, "0
	{17983, 0, "Шляпа для сафари"}, // 12, "0
	{17984, 1, "Маска-эмоджи 'Злой DJ'"}, // 16, "4
	{17985, 1, "Маска-эмоджи 'Важная рыба'"}, // 16, "4
	{17986, 4, "Костюм 'Банан Пили'"}, // 25, "0
	{17987, 3, "Соломенный нагрудник"}, // 30, "4
	{17988, 3, "Золотая рыбка"}, // 22, "4
	{18169, 0, "Ушастая кепка"}, // 16, "0
	{18170, 1, "Маска 'Ушастый кролик'"}, // 18, "0
	{18171, 1, "Маска 'Упоротый заяц'"}, // 18, "0
	{18172, 0, "Шлем 'Киберзаяц'"}, // 16, "0
	{18173, 0, "Шлем 'Заяц-дройд'"}, // 16, "0
	{18174, 0, "Шлем 'Броня 80lvl'"}, // 22, "0
	{18175, 0, "Голова 'Лесная фея'"}, // 22, "4
	{18176, 0, "Шлем 'Железный заяц'"}, // 20, "0
	{18177, 5, "Кролик 'Happy Easter' на спину"}, // 18, "0
	{18178, 5, "Рюкзак 'К прыжку готов!'"}, // 18, "0
	{18179, 5, "Крылья 'Лесная фея'"}, // 24, "4
	{18180, 3, "Перчатка 'Киберзаяц' - Правая"}, // 18, "0
	{18181, 3, "Наплечник 'Команда зайцев' - Правый"}, // 16, "0
	{18182, 2, "Перчатка 'Киберзаяц' - Левая"}, // 18, "0
	{18183, 2, "Наплечник 'Команда зайцев' - Левый"}, // 16, "0
	{18184, 1, "Лучевая пушка 'МарковкаТрон'"}, // 16, "4
	{18185, 2, "'Розовый глазастый шар' - Левый"}, // 16, "0
	{18186, 3, "'Розовый глазастый шар' - Правый"}, // 16, "0
	{18187, 6, "Бронежилет 'Заяц-вожак'"}, // 100, "0
	{18188, 6, "Бронежилет 'Броня 80lvl'"}, // 22, "0
	{18189, 4, "Пояс 'Броня 80lvl'"}, // 22, "0
	{18190, 4, "Юбка 'Лесная фея'"}, // 18, "4
	{18191, 3, "Наручи 'Броня 80lvl' - Правые"}, // 22, "0
	{18192, 3, "Наручи 'Лесная фея' - Правые"}, // 18, "0
	{18193, 3, "Рука 'Железный заяц' - правая"}, // 16, "0
	{18194, 2, "Наручи 'Броня 80lvl' - Левые"}, // 22, "0
	{18195, 2, "Наручи 'Лесная фея' - Левые"}, // 18, "0
	{18196, 2, "Рука 'Железный заяц' - левая"}, // 16, "0
	{18197, 5, "Броня 80lvl - Копье на спину"}, // 22, "0
	{17998, 5, "Крылья Купидона"},
	{17486, 7, "Сумка 'Бирюзовая'"},
	{18198, 4, "Дрон 'Пасхалка #010'"},
	{6643, 0, "Пасхальный нимб"},
	{6644, 0, "Курочка в гнезде"}
};
stock add_new_acs()
{
	new id_last = 5163;
	for(new i; i < sizeof(NSkin_Data); i++)
	{
		printf("/*%i*/{%i, 30.5, 34.5, 0.0, 1.4726999521255, 1, \"\
		{FFFFFF}Аксессуар: {FDCF28}%s{FFFFFF}\n\
		{FFFFFF}Аксессуар доступен только играя с лаунчера %s или %s MOBILE!\n\
		{FFFFFF}Используется для изменения\nвнешнего вида персонажа. Можно надеть.\", \"%s\", 1, 0, %i},",\
		id_last, NSkin_Data[i][dataUID], NSkin_Data[i][dataName], ServerCFG[server_number], ServerCFG[server_name], NSkin_Data[i][dataName], NSkin_Data[i][dataSlot]+1);
		id_last++;
	}
}
//anim
new bool:IsPlayerAnimationMenu[MAX_PLAYERS];
enum animationInfo
{
	animUID,
	animLib[16],
	animName[24],
	animtime
};
static const animInfo[][animationInfo] = {
	{1, "GANGS", "INVITE_YES", 264192},
	{2, "GANGS", "INVITE_NO", 264192},
	{3, "DEALER", "DEALER_IDLE_02", 264192},
	{4, "CAMERA", "CAMSTND_CMON", 264192},
	{5, "KISSING", "GFWAVE2", 264192},
	{6, "ON_LOOKERS", "WAVE_LOOP", 264192},
	{7, "GANGS", "HNDSHKCB", 264192},
	{8, "GANGS", "HNDSHKFA", 264192},
	{9, "GANGS", "HNDSHKFA_SWT", 264192},
	{10, "GANGS", "HNDSHKDA", 264192},
	{11, "GANGS", "HNDSHKEA", 264192},
	{12, "GANGS", "HNDSHKAA", 264192},
	{13, "GANGS", "HNDSHKBA", 264192},
	{14, "GANGS", "HNDSHKCA", 264192},
	{15, "GANGS", "PRTIAL_GNGTLKC", 264192},
	{16, "GANGS", "PRTIAL_GNGTLKD", 264192},
	{17, "GANGS", "PRTIAL_GNGTLKE", 264192},
	{18, "GANGS", "PRTIAL_GNGTLKF", 264192},
	{19, "GANGS", "PRTIAL_GNGTLKA", 264192},
	{20, "GANGS", "PRTIAL_GNGTLKB", 264192},
	{21, "GANGS", "PRTIAL_GNGTLKH", 264192},
	{22, "MISC", "IDLE_CHAT_02", 264192},
	{23, "CASINO", "CARDS_PICK_02", 264192},
	{24, "GANGS", "PRTIAL_GNGTLKA", 264192},
	{25, "GANGS", "PRTIAL_GNGTLKB", 264192},
	{26, "GANGS", "PRTIAL_GNGTLKG", 264192},
	{27, "KISSING", "GF_STREETARGUE_01", 264192},
	{28, "PED", "ENDCHAT_01", 264192},
	{29, "PED", "ENDCHAT_03", 264192},
	{30, "KISSING", "GIFT_GIVE", 264192},
	{31, "GANGS", "SHAKE_CARSH", 264192},
	{32, "PED", "IDLE_TAXI", 17041408},
	{33, "CAR", "FLAG_DROP", 264192},
	{34, "INT_HOUSE", "WASH_UP", 264192},
	{35, "GANGS", "SMKCIG_PRTL", 151259136},
	{36, "DEALER", "SHOP_PAY", 264192},
	{37, "SHOP", "ROB_LOOP_THREAT", 151259136},
	{38, "SHOP", "SHP_ROB_HANDSUP", 151259136},
	{39, "DEALER", "DEALER_DEAL", 264192},
	{40, "CASINO", "CARDS_LOOP", 151259136},
	{41, "CLOTHES", "CLO_POSE_LOOP", 151259136},
	{42, "DEALER", "DEALER_IDLE", 17041408},
	{43, "PED", "ROADCROSS", 264192},
	{44, "DEALER", "DEALER_IDLE_01", 17041408},
	{45, "PAULNMAC", "PISS_OUT", 264192},
	{46, "PAULNMAC", "PISS_IN", 264192},
	{47, "MISC", "SCRATCHBALLS_01", 264192},
	{48, "LOWRIDER", "PRTIAL_GNGTLKE", 264192},
	{49, "GANGS", "SHAKE_CARK", 264192},
	{50, "POLICE", "DOOR_KICK", 264192},
	{51, "PLAYIDLES", "STRETCH", 264192},
	{52, "BENCHPRESS", "GYM_BP_CELEBRATE", 264192},
	{53, "BOMBER", "BOM_PLANT", 264192},
	{54, "CARRY", "PUTDWN", 264192},
	{55, "CARRY", "LIFTUP", 264192},
	{56, "CASINO", "CARDS_RAISE", 264192},
	{57, "CASINO", "CARDS_WIN", 264192},
	{58, "BAR", "BARSERVE_BOTTLE", 264192},
	{59, "BSKTBALL", "BBALL_JUMP_SHOT", 264192},
	{60, "COP_AMBIENT", "COPBROWSE_NOD", 264192},
	{61, "COP_AMBIENT", "COPBROWSE_SHAKE", 264192},
	{62, "PED", "FUCKU", 264192},
	{63, "GHANDS", "GSIGN2LH", 264192},
	{64, "GHANDS", "GSIGN3", 264192},
	{65, "GHANDS", "GSIGN5", 264192},
	{66, "GHANDS", "GSIGN3LH", 264192},
	{67, "GHANDS", "GSIGN1", 264192},
	{68, "GHANDS", "GSIGN4LH", 264192},
	{69, "GHANDS", "GSIGN1LH", 264192},
	{70, "GHANDS", "GSIGN2", 264192},
	{71, "GHANDS", "GSIGN5LH", 264192},
	{72, "GHANDS", "GSIGN4", 264192},
	{73, "COP_AMBIENT", "COPLOOK_LOOP", 17041408},
	{74, "COP_AMBIENT", "COPLOOK_SHAKE", 17041408},
	{75, "PLAYIDLES", "TIME", 17041408},
	{76, "GANGS", "LEANIDLE", 17041408},
	{77, "MISC", "PLYRLEAN_LOOP", 17041408},
	{78, "COP_AMBIENT", "COPLOOK_THINK", 17041408},
	{79, "CAMERA", "CAMSTND_IDLELOOP", 17041408},
	{80, "BD_FIRE", "M_SMKLEAN_LOOP", 151259136},
	{81, "LOWRIDER", "M_SMKLEAN_LOOP", 151259136},
	{82, "CRACK", "BBALBAT_IDLE_01", 17041408},
	{83, "CRACK", "BBALBAT_IDLE_02", 17041408},
	{84, "GRAVEYARD", "MRNM_LOOP", 17041408},
	{85, "GRAVEYARD", "PRST_LOOPA", 17041408},
	{86, "OTB", "WTCHRACE_LOOP", 17041408},
	{87, "PLAYIDLES", "SHIFT", 17041408},
	{88, "BAR", "BARMAN_IDLE", 17041408},
	{89, "HEIST9", "SWT_WLLPK_L", 17041408},
	{90, "HEIST9", "SWT_WLLPK_R", 17041408},
	{91, "CRIB", "PED_CONSOLE_WIN", 264192},
	{92, "CASINO", "MANWIND", 151259136},
	{93, "OTB", "WTCHRACE_CMON", 264192},
	{94, "FOOD", "EAT_VOMIT_P", 264192},
	{95, "FOOD", "EAT_VOMIT_SK", 264192},
	{96, "ON_LOOKERS", "PANIC_POINT", 264192},
	{97, "MISC", "PLYR_SHKHEAD", 264192},
	{98, "ON_LOOKERS", "PANIC_HIDE", 151259136},
	{99, "PED", "SEAT_IDLE", 151259136},
	{100, "JST_BUISNESS", "GIRL_02", 151259136},
	{101, "INT_HOUSE", "LOU_LOOP", 151259136},
	{102, "ATTRACTORS", "STEPSIT_LOOP", 151259136},
	{103, "CAMERA", "CAMCRCH_IDLELOOP", 151259136},
	{104, "PED", "SEAT_down", 17041408},
	{105, "BEACH", "PARKSIT_M_LOOP", 151259136},
	{106, "INT_OFFICE", "OFF_SIT_BORED_LOOP", 151259136},
	{107, "BEACH", "LAY_BAC_LOOP", 151259136},
	{108, "BEACH", "PARKSIT_W_LOOP", 151259136},
	{109, "CRACK", "CRCKIDLE1", 151259136},
	{110, "CRACK", "CRCKIDLE2", 151259136},
	{111, "CRACK", "CRCKIDLE4", 151259136},
	{112, "DANCING", "DANCE_LOOP", 134481920},
	{113, "DANCING", "DAN_DOWN_A", 134481920},
	{114, "DANCING", "DAN_LEFT_A", 134481920},
	{115, "DANCING", "DAN_LOOP_A", 134481920},
	{116, "DANCING", "DAN_RIGHT_A", 134481920},
	{117, "DANCING", "DAN_UP_A", 134481920},
	{118, "DANCING", "DNCE_M_A", 134481920},
	{119, "DANCING", "DNCE_M_B", 134481920},
	{120, "DANCING", "DNCE_M_C", 134481920},
	{121, "DANCING", "DNCE_M_D", 134481920},
	{122, "DANCING", "DNCE_M_E", 134481920},
	{123, "SWEET", "SWEET_INJUREDLOOP", 151259136},
	{124, "CRACK", "CRCKDETH2", 151259136},
	{125, "CRACK", "CRCKDETH1", 151259136},
	{126, "MEDIC", "CPR", 264192},
	{127, "custom_dance", "null"}
};

#define DEVELNAME     		"24HoursHost"			//ФИО глав.разработчика
#define DEVELNICK     		"24HoursHost"			//Ник глав.разработчика
#define DEVELVKURL     		"vk.com/24hours.host"	//Страница глав.разработчика
#define DEVELYEAR     		"2023"					//Год последней реконструкции

//------------------------------------------------------------------------------
main()
{
	LoadServerConfig();

	print("_____________________________________________________________________");
	print(" Загрузка игрового мода произошла успешно ");
	printf(" Реконструкция специально для %s Role Play © "DEVELYEAR" года выпуска ", ServerCFG[server_name]);
	print(" Разработчик: "DEVELNICK" ("DEVELNAME": "DEVELVKURL"). ");
	print("_____________________________________________________________________");
}
//------------------------------------------------------------------------------

stock SearchAnimationInfo(uid)
{
	for(new i; i < sizeof(animInfo); i++) if(animInfo[i][animUID] == uid) return i;
	return -1;
}
//fix clear anim
stock ClearAnimationsEx(playerid)
{
	SetPlayerSpecialAction(playerid, 0);
    ClearAnimations(playerid);
    ApplyAnimation(playerid, !"CARRY", !"crry_prtial", 4.1, 0, 0, 0, 0, 1, 1);
	return 1;
}
new bool:IsPlayerCursorUsed[MAX_PLAYERS char];
#if defined _ALS_ClearAnimations
    #undef ClearAnimations
#else
    #define _ALS_ClearAnimations
#endif
#define ClearAnimations ClearAnimationsEx
//
stock SelectTextDrawEx(playerid, color=-1)
{
    IsPlayerCursorUsed{playerid} = true;
    SelectTextDraw(playerid, color);
	return 1;
}
#if defined _ALS_SelectTextDraw
    #undef SelectTextDraw
#else
    #define _ALS_SelectTextDraw
#endif
#define SelectTextDraw SelectTextDrawEx
//
stock CancelSelectTextDrawEx(playerid)
{
    CancelSelectTextDraw(playerid);
    IsPlayerCursorUsed{playerid} = false;
	return 1;
}
#if defined _ALS_CancelSelectTextDraw
    #undef CancelSelectTextDraw
#else
    #define _ALS_CancelSelectTextDraw
#endif
#define CancelSelectTextDraw CancelSelectTextDrawEx
//
enum rccar
{
	Float:rcPosX,
	Float:rcPosY,
	Float:rcPosZ,
	rcTime
}
new RcInfo[MAX_PLAYERS][rccar];//PosX
enum adminzones
{
	Zone_ID,
	Zone_Name[25],
	Zone_Interior,
	Zone_VirtualWorld,
	Float:Zone_posX,
	Float:Zone_posY,
	Float:Zone_posZ
}
static const AdminZone[][adminzones] =
{
	{1,"Interior №1", 12, 1, 2324.419921, -1145.568359, 1050.710083},
	{2,"Interior №2", 5, 2, 1282.1960, -800.9465, 1089.9375},
	{3,"Interior №3", 2, 3, 1211.1121, -6.9724, 1000.9219},
	{4,"24/7 1", 17, 4, -25.884498,-185.868988,1003.546875},
	{5,"24/7 2", 10, 5, 6.091179,-29.271898,1003.549438},
	{6,"24/7 3", 18, 6, -30.946699,-89.609596,1003.546875},
	{7,"24/7 4", 16, 7, -25.132598,-139.066986,1003.546875},
	{8,"24/7 5", 4, 8, -27.312299,-29.277599,1003.557250},
	{9,"24/7 6", 6, 9, -26.691598,-55.714897,1003.546875},
	{10,"Airport ticket desk", 14, 10, -1827.147338,7.207417,1061.143554},
	{11,"Airport baggage reclaim", 14, 11, -1861.936889,54.908092,1061.143554},
	{12,"Shamal", 1, 12, 1.808619,32.384357,1199.593750},
	{13,"Andromada", 9, 13, 315.745086,984.969299,1958.919067},
	{14,"Ammunation 1", 1, 14, 286.148986,-40.644397,1001.515625},
	{15,"Ammunation 2", 4, 15, 286.800994,-82.547599,1001.515625},
	{16,"Ammunation 3", 6, 16, 296.919982,-108.071998,1001.515625},
	{17,"Ammunation 4", 7, 17, 314.820983,-141.431991,999.601562},
	{18,"Ammunation 5", 6, 18, 316.524993,-167.706985,999.593750},
	{19,"Ammunation booths", 7, 19, 302.292877,-143.139099,1004.062500},
	{20,"Ammunation range", 7, 20, 298.507934,-141.647048,1004.054748},
	{21,"Blastin fools hallway", 3, 21, 	1038.531372,0.111030,1001.284484},
	{22,"Jefferson motel", 15, 22, 2215.454833,-1147.475585,1025.796875},
	{23,"Off track betting shop", 3, 23, 833.269775,10.588416,1004.179687},
	{24,"Sex shop", 3, 24, -103.559165,-24.225606,1000.718750},
	{25,"Meat factory", 1, 25, 963.418762,2108.292480,1011.030273},
	{26,"Zero's RC shop", 6, 26, -2240.468505,137.060440,1035.414062},
	{27,"Woozie's office", 1, 28,-2159.122802,641.517517,1052.381713},
	{28,"Binco", 15, 29, 207.737991,-109.019996,1005.132812},
	{29,"Didier sachs", 14, 30,204.332992,-166.694992,1000.523437},
	{30,"Prolaps", 3, 31,207.054992,-138.804992,1003.507812},
	{31,"Club", 17, 32,493.390991,-22.722799,1000.679687},
	{32,"Bar", 11, 33,	501.980987,-69.150199,998.757812},
	{33,"Millie room", 6, 34,346.870025,309.259033,999.155700},
	{34,"Planning dept.", 3, 35, 384.808624,173.804992,1008.382812},
	{35,"Area 51", 0, 36, 223.431976,1872.400268,13.734375},
	{36,"LS gym", 5, 37,772.111999,-3.898649,1000.728820},
	{37,"SF gym", 6, 38,774.213989,-48.924297,1000.585937},
	{38,"Pleasure domes", 3, 39, -2640.762939,1406.682006,906.460937},
	{39,"Warehouse 2", 18, 40,1302.519897,-1.787510,1001.028259},
	{40,"RC Battlefield", 10, 41,-975.975708,1060.983032,1345.671875},
	{41,"LV police HQ", 3, 43, 288.745971,169.350997,1007.171875},
	{42,"8-Track", 7, 44, -1398.065307,-217.028900,1051.115844},
	{43,"Bloodbowl", 15, 45,-1398.103515,937.631164,1036.479125},
	{44,"LV Warehouse 1", 0, 46, 1059.895996,2081.685791,10.820312},
	{45,"LS Atruim", 18, 47,1710.433715,-1669.379272,20.225049},
	{46,"Kickstart", 14, 48,-1465.268676,1557.868286,1052.531250}
};
new RareBoxAmount[3 char];
enum stripeinfo
{
	s_lvl,
	s_item,
	s_name[12]
};
static const CheckStripe[][stripeinfo] =
{
	{2, 1781, "защита"},
	{1, 1782, "регенерации"},
	{3, 1783, "урона"},
	{4, 1784, "удача"},
	{1, 1785, "макс. хп"}
};
static const CheckMedCardTag[][] =
{
	{"Не определен"},
	{"Психически не здоров(а)"},
	{"Наблюдаются отклонения"},
	{"Полностью здоровый(ая)"}
};
#define GetVehicleName(%0) InfoConfigVehicle[SearchVehicleName(%0)][Model_Name]
static const 
	CheckVipColor[][] =
{
	{"{FF0099}"},
	{"{006600}"},
	{"{0000FF}"},
	{"{33CCCC}"},
	{"{990000}"},
	{"{5D1BCA}"},
	{"{DCDCDC}"}
};
//
#define customInterface_speed (0)
#define customInterface_hud (1)
#define customInterface_radar (2)
#define customInterface_chat (3)
#define customInterface_SaveDialog (4)
#define customInterface_NickName (5)
#define customInterface_Snow (6)
#define customInterface_TypeDialog (7)
#define customInterface_keys (8)
enum interface_info
{
	interfaceType,
	interfaceUID,
	interfaceName[555]
};
static const CustomInterfaceInfo[][interface_info] = 
{
	//speed
	{customInterface_speed, 0, "Обычный"},
	{customInterface_speed, 1, "Клиентский №1 (Мобильный)"},
	{customInterface_speed, 2, "Клиентский №2 (Мобильный)"},
	{customInterface_speed, 3, "Клиентский CEF (Для мощных ПК)"},
	{customInterface_speed, 4, "Клиентский CEF (Для слабых ПК)"},
	//hud
	{customInterface_hud, 0, "Обычный"},
	{customInterface_hud, 1, "Клиентский №1 (Мобильный)"},
	{customInterface_hud, 2, "Клиентский №2 (Мобильный)"},
	{customInterface_hud, 3, "PUBG"},
	{customInterface_hud, 4, "Vice City"},
	{customInterface_hud, 5, "San Andreas CEF"},
	{customInterface_hud, 6, "(NEW) Unity (Мобильный)"},
	//radar
	{customInterface_radar, 0, "Обычный"},
	{customInterface_radar, 1, "Клиентский №1"},
	{customInterface_radar, 2, "Клиентский №2"},
	{customInterface_radar, 3, "Vice City"},
	//type dialog
	{customInterface_TypeDialog, 0, "полный"},
	{customInterface_TypeDialog, 1, "простой"},
	{customInterface_TypeDialog, 2, "упрощенный"}
};

enum AdminTag
{
	Admin_Tag[22],
	Admin_Level[8],
	AdminTag_Color[10]
	//APass
};
static const AInfo[][AdminTag] =
{
	{"Игрок","[0 lvl]", "{FFFFFF}"},/*,0},*/
	{"Младший Модератор","[1 lvl]", "{FFCC00}"},/*,99081},*/
	{"Модератор","[2 lvl]", "{FFCC00}"},/*,25890},*/
	{"Старший Модератор","[3 lvl]", "{FFCC00}"},/*,84342},*/
	{"Администратор","[4 lvl]", "{009900}"},/*,92302},*/
	{"Заместитель ГА","[5 lvl]", "{009900}"},/*,70654},*/
	{"Главный Администратор","[6 lvl]", "{009900}"},/*,99471},*/
	{"Спец.Администратор","[7 lvl]", "{ff0000}"},/*,22187},*/
	{"Основатель","[8 lvl]", "{ff0000}"}/*,65436}*/
};

static const Server_Names[25][50] =
{
	"None",
	"Phoenix",//1
	"Tucson",//2
	"Scottdale",//3
	"Chandler",//4
	"Brainburg",//5
	"Saint-Rose",//6
	"Mesa",//7
	"Red-Rock",//8
	"Yuma",//9
	"Surprise",//10
	"Prescott",//11
	"Glendale",//12
	"Kingman",//13
	"Winslow",//14
	"Payson",//15
	"Gilbert",//16
	"Show Low",//17
	"Casa-Grande",//18
	"Page",//19
	"Sun-City",//20
	"Queen-Creek",//21
	"Sedona",//22
	"Holiday",//23
	"Wednesday"//24
};
//modellimit
enum modellimit2
{
	vehType,
	vehID,
	Float:vehX,
	Float:vehY,
	Float:vehZ,
	Float:vehA
};
static const ModelLimit[][modellimit2] = 
{
	//eco
	{0,517, -490.0, -535.5193, 25.4161, 90.0},
	{0,410, -490.0, -530.1599, 25.2098, 90.0},
	{0,529, -490.0, -517.1385, 25.1881, 90.0},
	{0,542, -490.0, -512.0501, 25.2997, 90.0},
	{0,436, -490.0, -498.9476, 25.3230, 90.0},
	{0,527, -490.0, -493.7758, 25.2799, 90.0},
	{0,540, -518.0, -493.9161, 25.4139, 270.0},
	{0,543, -518.0, -501.5990, 25.3768, 270.0},
	{0,478, -518.0, -514.5344, 25.5477, 270.0},
	{0,547, -518.0, -522.3158, 25.2895, 270.0},
	{0,549, -518.0, -530.1363, 25.2376, 270.0},
	{0,404, -518.0, -537.9435, 25.2920, 270.0},
	{0,526, -518.0, -545.8791, 25.3272, 270.0},
	{0,422, -528.0, -488.5675, 25.5453, 90.0},
	{0,401, -528.0, -496.3454, 25.3389, 90.0},
	{0,479, -528.0, -504.1880, 25.3478, 90.0},
	{0,426, -528.0, -512.1379, 25.3049, 90.0},
	{0,492, -528.0, -519.7120, 25.3336, 90.0},
	{0,445, -528.0, -527.6443, 25.3825, 90.0},
	{0,507, -528.0, -535.3729, 25.3740, 90.0},
	{0,474, -528.0, -543.2341, 25.3097, 90.0},
	{0,518, -554.0, -545.8091, 25.2211, 90.0},
	{0,551, -554.0, -537.9103, 25.3619, 90.0},
	{0,575, -555.0, -532.9594, 25.1502, 90.0},
	{0,419, -572.0, -524.8989, 25.3456, 270.0},
	{0,412, -573.0, -517.0273, 25.3916, 270.0},
	{0,483, -573.0, -509.3749, 25.5483, 270.0},
	{0,580, -573.0, -501.5874, 25.3497, 270.0},
	{0,566, -573.0, -496.4216, 25.3311, 270.0},
	{0,405, -573.0, -488.4805, 25.4252, 270.0},
	{0,550, -582.0, -532.8638, 25.3784, 90.0},
	{0,413, -582.0, -517.0738, 25.6513, 90.0},
	{0,489, -582.0, -498.9029, 25.6709, 90.0},
	{0,459, -600.0, -488.5992, 25.6115, 270.0},
	{0,496, -600.0, -498.8369, 25.2798, 270.0},
	{0,516, -600.0, -509.3874, 25.3991, 270.0},
	{0,529, -601.0, -517.1726, 25.1882, 270.0},
	{0,466, -610.0, -517.2986, 25.2791, 90.0},
	{0,576, -610.0, -525.0101, 25.1526, 90.0},
	//medium
	{1,562, 985.043, 2113.74, 10.5005, 0.0},
	{1,603, 981.568, 2114.17, 10.5822, 0.0},
	{1,402, 978.06, 2114.2, 10.6168, 0.0},
	{1,579, 974.597, 2114.15, 10.7434, 0.0},
	{1,602, 971.077, 2114.09, 10.658, 0.0},
	{1,554, 967.567, 2114.34, 10.9615, 0.0},
	{1,400, 964.07, 2113.86, 10.9252, 0.0},
	{1,482, 960.596, 2113.97, 10.9793, 0.0},
	{1,600, 957.04, 2114.17, 10.4921, 0.0},
	{1,589, 935.576, 2113.77, 10.5083, 0.0},
	{1,561, 932.068, 2114.23, 10.6286, 0.0},
	{1,500, 938.988, 2127.57, 10.9949, 180.0},
	{1,474, 957.041, 2126.71, 10.591, 180.0},
	{1,534, 960.5, 2126.72, 10.6094, 180.0},
	{1,421, 964.051, 2126.71, 10.6873, 180.0},
	{1,491, 967.495, 2126.73, 10.6049, 180.0},
	{1,535, 971.001, 2127.0, 10.6367, 180.0},
	{1,565, 974.596, 2127.45, 10.4844, 180.0},
	{1,475, 978.033, 2126.97, 10.6464, 180.0},
	{1,439, 981.537, 2127.04, 10.7146, 180.0},
	{1,566, 984.981, 2126.62, 10.5445, 180.0},
	{1,545, 985.029, 2132.43, 10.5737, 0.0},
	{1,458, 981.617, 2132.77, 10.6759, 0.0},
	{1,434, 978.123, 2132.02, 10.7984, 0.0},
	{1,495, 974.607, 2132.02, 11.0931, 0.0},
	{1,587, 971.071, 2132.67, 10.5866, 0.0},
	{1,477, 967.549, 2132.75, 10.6149, 0.0},
	{1,536, 964.072, 2133.05, 10.5365, 0.0},
	{1,533, 960.542, 2132.55, 10.5588, 0.0},
	{1,558, 957.115, 2132.67, 10.4832, 0.0},
	{1,3251,960.5259,2165.0579,10.5119,180.0},
	{1,3208,964.0460,2165.4431,10.7510,180.0},
	{1,3235,977.9606,2165.7324,10.6015,180.0},
	{1,3234,985.0080,2164.8071,10.6072,180.0},
	{1,3238,981.5994,2170.0823,10.6717,0.0},
	{1,3238,974.5712,2169.6956,10.6772,0.0},
	{1,3217,978.0902,2146.1926,10.8379,180.0},
	{1,3213,939.0754,2113.9707,10.6965,360.0},
	{1,3218,935.4327,2132.5752,10.7550,360.0},
	//luxe sf
	{2, 411, -2653.55, -9.6817, 4.0793, 180.0},
	{2, 541, -2657.1, -9.4336, 3.9502, 180.0},
	{2, 560, -2650.07, -9.6702, 4.0426, 180.0},
	{2, 451, -2646.56, -9.9427, 4.0309, 180.0},
	{2, 415, -2643.01, -9.623, 4.1009, 180.0},
	{2, 559, -2639.54, -9.5871, 3.9667, 180.0},
	{2, 429, -2636.08, -9.6829, 4.004, 180.0},
	{2, 506, -2632.57, -9.7544, 4.0282, 180.0},
	{2, 480, -2625.59, -9.7122, 4.1209, 180.0},
	{2, 494, -2657.03, -28.8511, 4.2248, 180.0},
	{2, 502, -2653.59, -28.8556, 4.2248, 180.0},
	{2, 503, -2650.04, -28.8603, 4.2248, 180.0},
	{2, 463, -2685.64, -4.4734, 3.8666, 0.0},
	{2, 468, -2682.06, -4.4327, 4.0054, 0.0},
	{2, 471, -2678.53, -4.4106, 3.8492, 0.0},
	{2, 586, -2675.15, -4.2726, 3.8413, 0.0},
	{2, 521, -2675.07, -9.239, 3.9014, 180.0},
	{2, 461, -2678.47, -9.2755, 3.9079, 180.0},
	{2, 522, -2682.04, -9.2649, 3.8794, 180.0},
	{2, 581, -2685.51, -9.3324, 3.9226, 180.0},
	{2, 573, -2440.89, 2242.51, 5.5039, 180.0},
	{2, 552, -2446.81, 2242.76, 4.4918, 180.0},
	{2, 539, -2449.81, 2242.77, 4.0643, 180.0},
	{2, 528, -2452.81, 2242.31, 4.8688, 180.0},
	{2, 504, -2479.49, 2242.67, 4.6243, 180.0},
	{2,609, -2482.5, 2242.5, 4.8576, 180.0},
	{2,457, -2485.45, 2243.64, 4.4426, 180.0},
	{2,409, -2440.76, 2225.21, 4.6582, 0.0},
	{2,416, -2446.72, 2225.46, 4.9119, 0.0},
	{2,424, -2452.73, 2224.91, 4.5845, 0.0},
	{2,428, -2458.66, 2225.29, 4.9283, 0.0},
	{2,431, -2464.69, 2226.74, 4.9457, 0.0},
	{2,438, -2473.66, 2224.7, 4.816, 0.0},
	{2,442, -2479.61, 2225.09, 4.6142, 0.0},
	{2,455, -2485.47, 2225.86, 5.3171, 0.0},
	{2,593, 324.833, 2537.73, 17.2774, 180.0},
	{2,513, 290.363, 2537.83, 17.3465, 180.0},
	{2,487, 265.352, 2536.74, 16.8502, 180.0},
	{2,469, 245.045, 2536.24, 16.7538, 180.0},
	//
	{2,430,222.9108,-1905.7878,-0.3481,271.2682},
	{2,446,220.8504,-1926.0917,-0.7709,272.5273},
	{2,452,219.3020,-1942.6699,-0.5789,268.9424},
	{2,453,219.9033,-1959.1149,-0.4479,274.9118},
	{2,454,222.1560,-1976.1497,0.0176,270.7093},
	{2,472,220.1666,-1990.6615,-0.0544,270.3191},
	{2,473,217.3559,-2006.6576,-0.3650,270.9185},
	{2,484,201.5558,-1983.7401,0.1243,89.5018},
	{2,493,205.4326,-1967.7632,-0.3376,90.4970},
	{2,595,201.0540,-1951.9569,0.0323,91.2121},
	//
	//luxe lv
	{3,3248, -2674.9802,-28.5000,4.1538,180.0},
	{3,3233, -2682.0376,-28.5000,4.9257,180.0},
	{3,3232, -2685.7854,-28.5000,4.9962,180.0},
	{3,3239, -2685.5942,-22.5000,4.0930,0.0},
	{3,3240, -2678.7087,-22.5000,4.2119,0.0},
	{3,1202, -509.014, 2606.09, 53.4954, 90.0},
	{3,1198, -508.987, 2611.01, 53.4961, 90.0},
	{3,1203, -519.899, 2577.07, 53.4961, 90.0},
	{3,1194, -519.988, 2571.92, 53.4961, 90.0},
	{3,612, -519.839, 2582.2, 53.4961, 90.0},
	{3,1195, -520.212, 2566.78, 53.4954, 90.0},
	{3,1196, -520.439, 2561.62, 53.4954, 90.0},
	{3,1205, -508.644, 2625.55, 53.4954, 90.0},
	{3,663, -519.412, 2607.41, 53.4954, 90.0},
	{3,662, -519.257, 2612.44, 53.4954, 90.0},
	{3,1201, -528.509, 2579.05, 53.4954, 90.0},
	{3,1200, -528.676, 2573.97, 53.4954, 90.0},
	{3,1199, -528.846, 2568.94, 53.4954, 90.0},
	{3,665, -527.642, 2627.44, 53.4954, 90.0},
	{3,666, -527.798, 2622.33, 53.4954, 90.0},
	{3,667, -527.891, 2617.09, 53.4954, 90.0},
	{3,668, -528.036, 2611.99, 53.4954, 90.0},
	{3,612, -518.8, 2627.79, 53.4954, 90.0},
	{3,613, -519.296, 2622.69, 53.4954, 90.0},
	{3,663, -528.956, 2558.67, 53.4954, 90.0},
	{3,1203, -528.817, 2563.84, 53.4954, 90.0}
};
new MLVehCount[sizeof(ModelLimit)],
	CountForSpawn,
	IDforSpawn[sizeof(ModelLimit)];
//
#define MAX_SECOND_HAND (6)
enum Second_Hand_Info
{
	sBizID,
	bool:sSaleStatus,
	Text3D:sSaleTextStreet,
	Text3D:sSaleTextRoom,
	sSalePickup[14],
	Text3D:sSaleText[14],
	sSaleHour,
	sSaleCount,
	sSaleLastMinute
}
new Second_Hand[MAX_SECOND_HAND][Second_Hand_Info];
new Second_Hand_Count;
new Float:Second_Hand_Pickup_Pos[14][3] =
{
	{1533.4600, 1562.8783, 10.9252},
	{1527.1636, 1568.0758, 10.9252},
	{1521.5000, 1585.3436, 10.9200},
	{1523.3239, 1580.9318, 10.9202},
	{1519.6019, 1580.9270, 10.9202},
	{1519.5846, 1574.9961, 10.9252},
	{1519.5842, 1566.9617, 10.9252},
	{1523.3247, 1564.8245, 10.9252},
	{1534.1381, 1572.8345, 10.9252},
	{1537.9259, 1583.0586, 10.9202},
	{1539.8231, 1574.9835, 10.9252},
	{1539.8234, 1566.9774, 10.9252},
	{1536.0527, 1568.9800, 10.9252},
	{1532.2437, 1565.8096, 10.9252}
};
new Second_Hand_Clother_Model[MAX_PLAYERS][10];
new Second_Hand_Clother_Select[MAX_PLAYERS];
new Second_Hand_Clother_Select_Time[MAX_PLAYERS];
//custom door
enum custominfo
{
	Float:customX,
	Float:customY,
	Float:customZ,
	Float:cOffSetX,
	Float:cOffSetY,
	Float:cOffSetZ,
	cTime,
	bool:cStatus
};
new CustomDoor[][custominfo] = {
	{1497.092,-700.094,95.044,0.000,0.000,90.000, 10, false},
	{-765.673584, 1325.000610, 14.701263, 0.0, 0.0, -12.899991, 7, false},
	{-642.783447, 1234.442993, 13.034088, 0.000000, 0.000000, 172.199936, 7, false},
	{-678.459778, 1290.076538, 9.736785, 0.000000, 0.000000, 89.999977, 7, false},
	{-705.212158, 1240.730713, 13.872680, 0.000000, 0.000000, -7.499961, 7, false},
	{-682.174683, 1305.828125, -40.834595, 0.000007, 0.000007, 92.099983, 7, false},
	{-729.476807, 1250.599365, 14.302673, 0.000000, 0.000000, -41.400005, 7, false},
	{-711.546387, 1321.695679, 11.151611, 0.000000, 0.000000, 177.100006, 7, false},
	{-754.265930, 1273.467407, 14.252685, 0.000000, 0.000000, 122.200073, 7, false},
	{-785.943604, 1332.309814, 14.481262, 0.000000, 0.000000, -12.899991, 7, false}
};
new CustomDoorUID[sizeof(CustomDoor)];
//
enum PItreasure_info
{
	tProgress,
	bool:tKeys,
	bool:tTD,
	tID,
	tPrize[3],
	tAmount[3],
	tQuestionID
};
new PItreasure[MAX_PLAYERS][PItreasure_info];
enum hitch
{
    Float:Klad_X,
    Float:Klad_Y,
    Float:Klad_Z
};
static const HitchInfo[][hitch] =
{
	{1227.58, -869.813, 41.5483},
	{-767.179, -634.492, 65.9385},
	{1238.46, -1640.37, 12.3171},
	{-2179.91, 1057.27, 86.8861},
	{-2468.72, 1050.01, 54.1813},
	{2420.66, 1789.21, 9.63241},
	{2813.89, 2931.56, 28.4195},
	{-1849.25, -2419.64, 42.7941},
	{1751.78, 1477.56, 9.5184},
	{1793.26, 2151.07, 10.4446},
	{-497.869, -1952.25, 35.7327},
	{-1128.93, -150.148, 12.9581},
	{2343.88, -2156.19, 12.2206},
	{633.826, -1172.81, 37.8084},
	{-2846.84, -1157.79, 11.9614},
	{1477.63, -1934.67, 22.4749},
	{1531.85, 925.756, 9.49611},
	{-1146.9, 2343.85, 96.9653},
	{1201.77, -2303.01, 13.4563},
	{-814.898, -1297.54, 78.7468},
	{1010.8, -2083.37, 11.8847},
	{-2218.75, 964.7, 78.9423},
	{-2011.55, -1077.52, 46.089},
	{-2802.02, 1194.18, 19.5709},
	{2801.42, 695.427, 8.79808},
	{-494.904, -1881.4, 6.33976},
	{-2633.57, -309.622, 6.99836},
	{2094.34, -1429.77, 22.5141},
	{1596.04, -2709.87, 12.2522},
	{-2877.0, 519.103, -0.65761},
	{2388.21, -1123.87, 29.2587},
	{2381.45, -1555.94, 22.7727},
	{2066.91, 2251.35, 8.58222},
	{2745.5, 2762.33, 9.48828},
	{-1809.82, 1406.42, 5.86155},
	{-1513.6, 1971.61, 47.1603},
	{-2499.86, -1142.27, 141.239},
	{-2504.13, 1006.41, 77.1407},
	{757.196, -1818.2, 11.7374},
	{-928.631, -2547.54, 113.71},
	{-2229.37, 138.467, 34.0155},
	{-1313.77, 2541.4, 86.5095},
	{824.38, -1699.62, 12.2481},
	{-2499.87, 2231.65, 3.68482},
	{-1111.71, -748.102, 30.7602},
	{-1398.13, 678.462, 1.78513},
	{-2665.44, 144.834, 3.15551},
	{952.452, -1695.47, 12.2532},
	{2625.18, 2744.13, 22.5901},
	{1562.12, -337.72, 13.889},
	{1693.3, 1953.77, 9.78182},
	{1990.29, 1377.12, 7.99589},
	{2468.07, 675.906, 9.54242},
	{1539.71, -985.462, 35.9553},
	{514.597, -1807.24, 5.24816},
	{-1158.2, 2215.32, 93.2691},
	{-2058.43, 779.402, 59.8757},
	{2539.67, -1590.54, 20.7093},
	{1738.66, 2288.33, 9.60005},
	{2002.44, 1668.0, 11.0618},
	{1224.62, -2131.43, 57.6836},
	{-1955.38, 764.659, 54.4665},
	{-2545.18, 936.006, 63.7139},
	{1163.99, 699.453, 9.45416},
	{2635.59, 2829.15, 22.8277},
	{2664.56, 2317.49, 9.53179},
	{-1954.73, -750.819, 34.8931},
	{-1182.04, 2199.37, 86.7124},
	{-2455.34, -139.799, 24.8976},
	{-1987.3, -1560.27, 86.2437},
	{230.846, -1391.44, 51.8677},
	{270.067, -308.069, 0.43718},
	{-412.773, -2167.82, 80.8633},
	{1586.0, -2016.62, 34.7464},
	{-2661.93, 2193.42, 51.6087},
	{-1641.1, -2305.57, 59.3222},
	{2485.35, -1071.16, 65.5284},
	{-1868.64, 100.819, 15.7728},
	{2383.02, 2012.41, 9.88537},
	{-2086.47, 2312.7, 22.7556},
	{2500.97, 2143.3, 9.68857},
	{-1337.45, 2095.89, 40.2034},
	{2815.3, -1212.59, 23.9245},
	{-2606.56, 2245.97, 4.60404},
	{-1131.43, -1759.32, 114.55},
	{1891.05, 2012.86, 6.36527},
	{-2753.8, -180.006, 5.76931},
	{-2538.33, -301.498, 26.1641},
	{-1558.18, -2725.15, 47.5206},
	{274.551, 2930.09, -0.04081},
	{-1895.22, 1264.94, 20.4278},
	{693.551, -1634.7, 2.15345},
	{-1710.74, 2110.3, 24.9909},
	{-2644.73, 205.761, 3.09554},
	{-1771.28, 1978.39, 14.4526},
	{-1740.16, 1234.39, 6.3459},
	{-1708.63, 2548.91, 102.403},
	{1279.51, 1179.57, 9.54895},
	{1018.62, 164.008, 30.7292},
	{2227.56, 2537.82, 9.8843},
	{-2499.41, 361.598, 26.4497},
	{-1507.72, -905.577, 183.845},
	{-2754.33, -416.241, 5.64813},
	{-209.757, -1576.14, 5.19303},
	{164.188, -1260.61, 71.9953},
	{-606.568, 1832.35, 5.85018},
	{2549.77, -1332.7, 32.8686},
	{1430.14, 2268.79, 10.0122},
	{285.178, -30.1081, 1.00885},
	{1179.43, -346.887, 55.1543},
	{-1441.44, 2798.72, 85.2168},
	{-2378.54, 2490.19, 7.11762},
	{1096.69, 2123.14, 9.52043},
	{1536.57, 2862.74, 9.61266},
	{2369.33, 2796.52, 9.54315},
	{-2718.2, 76.0714, 3.09266},
	{1338.95, -1792.42, 12.2595},
	{-1643.61, 1323.49, 1.71206},
	{-183.337, 1888.64, 114.395},
	{1564.12, 2862.23, 9.50327},
	{-2616.94, 187.194, 3.09781},
	{497.676, -217.144, 14.2953},
	{756.428, -1477.2, 11.4415},
	{1652.77, 1383.91, 9.52284},
	{-2452.23, 1005.49, 45.7741},
	{-525.639, -2702.27, 142.87},
	{-2513.93, 132.038, 21.0134},
	{1023.7, -1526.53, 12.7448},
	{1253.09, 365.005, 18.2851},
	{2579.77, 2082.27, 9.54141},
	{-488.254, -171.718, 76.9443},
	{1102.14, -2236.12, 48.1534},
	{856.703, -1476.42, 13.097},
	{2190.83, -2700.78, 12.2385},
	{1083.74, -2028.46, 55.3729},
	{412.494, -1812.73, 4.23272},
	{2774.85, 317.622, 2.40274},
	{-2133.4, -1413.64, 198.723},
	{-2500.29, 940.168, 61.3867},
	{2785.58, -1087.69, 29.4599},
	{153.063, -1498.31, 11.0706},
	{680.106, -1608.93, 12.7581},
	{-339.396, -296.534, 10.317},
	{872.256, -1545.17, 12.3196},
	{2177.89, 1482.8, 9.566},
	{-1591.98, -1345.45, 48.1512},
	{-2969.78, -1716.95, -0.3379},
	{-2638.24, 2327.49, 7.06923},
	{-1365.29, -1374.25, 143.094},
	{1691.2, 890.222, 9.54726},
	{1774.98, -375.948, 85.722},
	{-1416.51, -2419.95, 31.8473},
	{1386.82, -992.381, 29.4842},
	{1925.3, 2782.01, 9.51348},
	{1085.22, -1903.57, 20.5189},
	{1266.89, -1724.46, 12.7872},
	{-1657.3, 2244.11, 15.722},
	{-2183.66, -435.824, 34.7828},
	{761.799, 2078.89, 5.40633},
	{1786.79, 2077.36, 9.54741},
	{-5.05411, -2490.4, 35.933},
	{-2886.91, 957.838, 43.0216},
	{-2667.37, 1598.76, 2.01039},
	{-2228.89, -2567.32, 30.599},
	{1618.02, 2212.91, 9.55198},
	{1952.56, 2728.77, 9.58187},
	{652.963, -1891.11, 2.56912},
	{-2194.34, -2332.13, 29.3995},
	{-2515.89, -1034.21, 102.696},
	{-2665.78, -716.145, 62.3053},
	{1951.73, 1938.41, 9.97822},
	{-2586.41, 867.345, 57.2109},
	{-531.054, 1807.34, 137.521},
	{-2681.24, 1262.4, 15.7395},
	{1368.92, 1916.1, 9.59057},
	{2675.73, 1661.19, 9.73563},
	{245.312, -43.9376, 0.28448},
	{102.492, 1019.75, 12.3152},
	{2032.57, 1728.36, 9.51405},
	{679.151, -1497.66, 13.6363},
	{-2878.6, 2566.78, 261.623},
	{-1381.56, 89.1305, 1.67274},
	{-599.154, 2606.75, 64.6538},
	{1495.65, -2091.51, 27.655},
	{2626.4, 2185.34, 9.71282},
	{780.385, -1684.96, 2.86449},
	{-2070.73, 1030.85, 58.9517},
	{-2618.54, 417.879, 3.01013},
	{-2910.57, 1210.99, 0.89121},
	{2758.67, 1460.39, 9.5592},
	{-592.001, 162.934, 19.8715},
	{962.894, -1251.63, 15.72},
	{-2298.91, 1095.45, 69.9223},
	{-2796.82, 234.577, 5.93525},
	{-2172.23, 833.454, 68.4769},
	{2831.67, 2245.74, 9.73089},
	{-904.665, -113.447, 55.3798},
	{-2757.89, 90.7707, 5.70753},
	{-2321.08, 534.314, 43.4735},
	{-2547.49, 1229.62, 36.1455},
	{2647.71, 2729.59, 9.56223},
	{-801.438, 2776.11, 44.7718},
	{-2263.01, -2835.84, -0.42964},
	{-2942.91, -679.805, -0.36174},
	{-720.957, 687.53, 5.43983},
	{2235.27, 2812.27, 9.63092},
	{1830.59, -1145.55, 22.5787},
	{1407.77, 2164.23, 10.7817},
	{-521.42, 1649.1, -0.22815},
	{-1651.32, -2436.89, 97.209},
	{-220.102, 1401.69, 68.6655},
	{-2540.48, 204.961, 9.85806},
	{386.02, 79.9867, 3.67252},
	{2518.3, -1978.54, 12.1689},
	{387.734, 2613.13, 15.1859},
	{-2312.84, -2014.39, 243.125},
	{1089.67, -1183.53, 17.0725},
	{-2184.88, 2754.51, 164.46},
	{-1970.75, 993.301, 57.388},
	{-328.627, -2131.01, 29.3583},
	{1708.23, 2841.0, 9.56706},
	{2788.85, 2536.9, 9.58631},
	{-1522.81, 2707.73, 54.5414},
	{1413.37, 904.689, 9.6673},
	{2592.02, 2391.65, 15.8071},
	{-91.0179, -1419.08, 4.32593},
	{1434.82, 2517.38, 9.60862},
	{-1316.61, -1341.72, 144.622},
	{1416.73, 2209.09, 22.8743},
	{848.089, -1359.79, 12.3194},
	{-2500.56, 2274.85, 3.69014},
	{2874.95, 2522.33, 9.78442},
	{-490.455, 2381.6, 82.4634},
	{-2013.78, -1605.43, 141.858},
	{2150.42, 1599.02, 19.165},
	{-2207.17, 1138.03, 91.1997},
	{2569.68, -2187.01, 12.281},
	{-2380.35, -1698.97, 467.388},
	{-1494.14, -1164.2, 122.846},
	{-1315.13, -1500.85, 21.2534},
	{-301.169, 1914.38, 48.4876},
	{1196.45, 2858.76, 9.8235},
	{-206.244, -1018.09, 16.3022},
	{2597.81, -1886.89, 2.56757},
	{-2479.26, -33.4793, 32.3406},
	{-2613.35, -988.187, 13.4587},
	{2299.23, -375.989, 54.8201},
	{-2188.22, -2419.4, 29.3557},
	{2016.49, 903.902, 9.56787},
	{-44.4519, -2871.43, 28.2789},
	{2572.7, -634.422, 134.543},
	{1293.32, -1210.96, 12.4432},
	{-2778.02, 782.707, 58.1557},
	{675.342, -1554.81, 14.1413},
	{-2438.95, -294.56, 39.1314},
	{1486.42, 1107.67, 9.56224},
	{-1043.35, -2418.78, 60.4559},
	{-2687.66, 771.777, 42.3904},
	{578.14, 391.6, 9.51556},
	{2892.12, 814.24, 11.4223},
	{-1463.39, -2643.12, 40.6103},
	{-2516.62, 267.806, 21.4084},
	{-1664.48, 979.585, 48.0926},
	{328.489, -1758.82, 3.18533},
	{813.007, -1267.99, 12.2605},
	{2057.14, 2148.84, 9.62282},
	{2752.41, -1284.17, 55.3181},
	{784.031, -1743.94, 12.2306},
	{1236.43, -1937.9, 37.9958},
	{2395.3, -2495.22, 12.3993},
	{-897.523, 1864.84, 114.033},
	{2011.03, 2224.25, 9.56758},
	{2320.64, 1106.43, 78.2465},
	{-1656.55, 2909.02, 51.0157},
	{-2294.97, 640.211, 40.6966},
	{-2228.83, -302.824, 34.2431},
	{-1190.65, -2577.58, -0.59518},
	{-2183.52, 636.085, 48.1307},
	{-2595.03, -1542.54, 419.854},
	{-2563.24, -1975.73, 152.493},
	{866.261, -1751.56, 12.2734},
	{2655.36, 799.005, 4.05878},
	{-2492.04, -1199.63, 256.493},
	{-1784.15, 1311.98, 6.00742},
	{2745.08, -1421.14, 15.0272},
	{2192.97, 2062.92, 9.55523},
	{-2555.91, 453.033, 13.3983},
	{-1775.16, 1409.31, 5.7949},
	{2262.33, 2563.36, 9.56324},
	{-2689.38, 2168.51, 19.6369},
	{1976.57, 1577.6, 17.3819},
	{2099.67, 2009.09, 9.55288},
	{1159.72, -2347.26, 11.6215},
	{-1806.58, 529.387, 233.62},
	{2071.55, 1910.66, 16.4573},
	{135.33, -1106.27, 39.96},
	{2239.14, -1109.7, 47.4675},
	{-2561.69, -288.907, 24.6615},
	{-2702.02, -1460.06, 238.036},
	{-1245.53, -1013.54, 158.127},
	{1461.54, -1900.45, 20.9454},
	{2257.37, 2008.14, 10.0325},
	{681.997, -1659.26, 1.90153},
	{1207.68, 176.239, 19.1521},
	{-1753.78, -1316.91, 35.8199},
	{2814.87, 2189.32, 9.71356},
	{1430.56, 276.572, 18.2547},
	{1805.48, -518.254, 75.863},
	{1402.64, 717.599, 9.73261},
	{1551.01, 4.22932, 22.1058},
	{-2821.2, 1115.95, 26.6448},
	{1691.12, 1886.95, 9.72515},
	{2567.63, -1497.12, 22.5405},
	{-1314.12, 2308.72, 128.241},
	{1754.55, 1402.78, 9.52738},
	{-1724.39, 2191.47, 2.10124},
	{2453.39, 1556.12, 9.55449},
	{872.995, -1493.49, 13.0219},
	{2274.22, -55.9841, 25.2109},
	{-441.296, -1715.34, 7.56975},
	{-764.736, -162.579, 65.3842},
	{1674.74, 2031.49, 9.71002},
	{2455.52, 1288.91, 9.49416},
	{2952.47, -765.246, -0.11761},
	{356.823, -341.561, 11.7663},
	{2693.39, 201.268, 56.8885},
	{1588.55, -2232.2, 12.2527},
	{495.648, -764.522, 63.2095},
	{2057.7, 1311.47, 9.59467},
	{2071.0, 790.421, 10.0226},
	{946.512, -1639.31, 12.2728},
	{2186.24, -2583.68, 12.2275},
	{1081.07, 2101.73, 9.53764},
	{1337.6, 204.074, 18.2373},
	{2160.17, 2827.38, 9.55969},
	{810.238, 375.894, 18.0032},
	{530.585, -1372.34, 14.8098},
	{-2773.22, -344.643, 6.47785},
	{-1709.78, 1386.85, 5.73816},
	{-382.917, 16.8944, 35.2675},
	{2802.02, -1166.13, 24.3248},
	{1596.08, 20.7384, 22.8978},
	{-2560.18, 1213.64, 39.9242},
	{2781.99, -353.694, 22.9996},
	{2417.29, -1320.96, 24.0396},
	{-967.065, 976.117, 15.1767},
	{-1487.97, -2573.96, 70.63},
	{-2301.49, -25.3325, 34.0979},
	{-2186.15, -2244.4, 29.417},
	{777.493, -1607.22, 12.0571},
	{-1188.25, -1693.95, 86.9245},
	{-2437.77, 165.247, 33.8361},
	{1491.83, 906.85, 9.64334},
	{1205.17, 255.567, 18.2797},
	{1400.16, 2380.4, 9.72168},
	{1387.78, 403.508, 27.4476},
	{2078.39, 2407.4, 59.5215},
	{1375.7, 2319.26, 9.52603},
	{2918.45, 2657.3, 8.46144},
	{990.625, -1093.45, 23.0219},
	{2557.83, -1105.39, 62.6594},
	{-1730.02, 1372.03, 5.73558},
	{-2023.89, 2949.08, 54.5887},
	{-2323.78, -1931.98, 295.144},
	{1959.39, 1353.33, 7.97135},
	{-2187.08, -368.57, 34.7335},
	{2387.04, 671.142, 10.0773},
	{1304.17, 2733.03, 9.5013},
	{-1299.18, 2315.05, 130.168},
	{654.055, -821.831, 84.9696},
	{1183.4, 230.65, 18.2635},
	{-1054.83, 1166.39, 34.3413},
	{-42.5675, -523.443, 3.24694},
	{-2047.25, 973.235, 53.6661},
	{-90.8749, 1124.98, 18.4289},
	{-670.221, 917.76, 10.7905},
	{1485.83, -2260.12, 12.2745},
	{1358.77, 2090.65, 12.1047},
	{563.776, -1821.88, 4.75631},
	{-1710.34, 1031.08, 16.5863},
	{1928.36, 2455.62, 19.5101},
	{-2808.74, 2743.78, 231.812},
	{323.23, 2699.71, 18.2157},
	{1968.91, -1359.96, 19.4087},
	{-1090.73, 1795.98, 48.0248},
	{2234.88, 69.6936, 25.1554},
	{1985.85, -990.007, 29.5343},
	{934.766, -893.216, 44.2492},
	{248.456, -1163.65, 78.1473},
	{-2461.6, 2407.67, 15.2721},
	{-307.193, 1041.12, 18.4105},
	{2383.06, 359.63, 26.5851},
	{1275.99, -862.791, 41.5658},
	{1312.83, 2733.91, 9.49154},
	{1541.51, 2380.67, 9.72747},
	{2292.04, -143.843, 26.1525},
	{2814.59, 801.339, 9.65082},
	{190.842, 1183.8, 13.441},
	{2521.39, 2026.55, 9.88273},
	{-663.691, 2588.45, 104.885},
	{1751.97, 981.988, 9.36028},
	{-327.525, 1954.71, 83.336},
	{1318.23, 2793.0, 9.57935},
	{1930.85, -1391.2, 12.939},
	{1115.24, -1086.73, 24.714},
	{679.852, -1852.08, 4.46431},
	{-2398.69, -1987.08, 253.529},
	{210.533, -1765.53, 3.20976},
	{-2891.52, 2130.08, 85.6221},
	{976.48, 2054.42, 9.52119},
	{-414.568, -404.477, 14.9046},
	{2157.15, -122.576, -0.26463},
	{-2420.44, -2257.87, 15.1085},
	{2798.08, -1813.76, 8.98618},
	{360.171, -1902.08, -0.37878},
	{267.829, -132.509, 0.26052},
	{-1403.04, -2032.22, -0.31767},
	{1477.98, 964.795, 9.53574},
	{-2038.63, -738.013, 30.8704},
	{-886.809, 2678.24, 45.1127},
	{2199.92, -1352.82, 24.3342},
	{-651.233, -579.164, 30.9218},
	{939.048, -1059.9, 23.3141},
	{-751.613, 1117.97, 43.0283},
	{587.871, -1807.01, 4.74394},
	{1092.76, -1879.54, 12.2281},
	{2564.05, 759.193, 9.7606},
	{1259.15, 2843.07, 9.52887},
	{1684.18, -2006.93, 12.8312},
	{2431.75, 2115.34, 19.2901},
	{2328.94, 1986.74, 10.3437},
	{487.414, -1451.03, 17.0489},
	{2663.22, -1197.11, 65.8992},
	{1674.23, 2222.53, 9.50916},
	{-1128.38, -1693.4, 75.294},
	{-2469.68, -166.78, 24.669},
	{-2228.36, -109.469, 34.0275},
	{2075.14, 271.223, 23.8349},
	{1983.12, -1854.17, 2.73275},
	{1915.65, 2881.02, 9.51225},
	{-1663.25, -1230.54, 58.0099},
	{-2460.24, -1356.33, 309.205},
	{1060.75, 1393.84, 4.53817},
	{-2556.23, -15.1801, 11.3539},
	{2539.27, -1698.12, 12.075},
	{-2645.16, 2871.59, 65.6842},
	{1162.14, 1988.33, 9.49271},
	{1228.08, -1776.46, 32.3516},
	{1336.82, 1155.55, 9.51998},
	{-1724.55, -2437.04, 36.9332},
	{2676.29, -50.8664, 44.2015},
	{2909.27, -1873.92, -0.29364},
	{1844.41, -1119.36, 40.3441},
	{-2532.38, 39.127, 7.29541},
	{-1921.58, 881.702, 33.9964},
	{1116.07, -2263.44, 40.3023},
	{1423.88, 212.995, 18.2428},
	{1656.66, -1749.37, 12.8779},
	{-2298.7, 999.991, 69.8979},
	{-1910.14, -1508.37, 22.0717},
	{1075.65, -268.696, 73.0526},
	{2001.77, 981.195, 9.49149},
	{-707.704, -2365.16, 43.1924},
	{-1677.71, -2479.24, 33.7437},
	{2783.83, -1691.7, 9.02327},
	{1193.54, 2771.35, 9.53275},
	{1148.2, -998.075, 35.7624},
	{774.827, -1712.03, 3.73987},
	{2560.08, -1585.3, 3.51784},
	{345.548, -257.735, 5.64659},
	{2046.09, 2360.66, 9.91943},
	{2835.03, 64.1614, 19.1986},
	{1081.79, 2096.63, 9.53764},
	{-2632.85, -2333.07, 9.89617},
	{848.019, -1700.55, 12.2411},
	{2571.21, -239.003, 32.9734},
	{-2329.6, 1016.72, 49.6176},
	{-1673.36, 2768.12, 100.582},
	{2476.47, 1291.14, 9.5285},
	{1659.03, -1842.59, 12.251},
	{244.522, -163.773, 0.29786},
	{-2174.11, -1658.21, 305.932},
	{-2952.87, 1184.24, 7.1106},
	{2650.9, 2385.19, 9.48596},
	{774.95, -1442.69, 12.3405},
	{1445.28, 1902.75, 9.52814},
	{2346.7, 1543.7, 9.53037},
	{2819.79, 814.28, 9.61447},
	{1273.97, 393.12, 18.3014},
	{2270.22, 64.9376, 25.1826},
	{-2338.41, -283.484, 47.0864},
	{-1751.92, 2548.4, 102.855},
	{2192.16, -2429.31, 12.223},
	{767.36, -1644.08, 3.45491},
	{-2616.54, 2242.2, 3.70487},
	{485.153, -899.984, 34.9774},
	{2671.81, 2756.91, 9.52143},
	{-2797.68, -416.576, 6.10838},
	{2739.27, -287.731, 16.0447},
	{-771.038, -2195.52, 17.4943},
	{950.522, -1422.44, 12.5319},
	{1421.73, -1357.24, 12.2703},
	{-12.7624, 1136.46, 18.4533},
	{1206.73, 940.209, 7.50469},
	{-1931.43, 2629.67, 81.1541},
	{-502.785, 77.8687, 35.1988},
	{-659.424, 2311.1, 136.563},
	{2489.94, -940.99, 80.9025},
	{-2743.03, 132.018, 3.21984},
	{1398.14, -282.395, -0.29889},
	{-367.33, 1203.56, 18.4575},
	{147.012, -6.01037, 0.29283},
	{-2364.57, -352.732, 66.4963},
	{-101.196, 248.966, -0.24343},
	{2420.74, -1351.52, 22.9439},
	{562.003, -185.695, 33.7549},
	{-1176.44, -2349.55, 18.3845},
	{2042.85, -543.697, 78.5251},
	{698.345, -1661.06, 2.05229},
	{247.864, 2921.0, -0.37704},
	{1246.86, 245.006, 18.2366},
	{2847.58, 1634.17, 9.54284},
	{-585.885, -1036.59, 22.0979},
	{-1728.18, -1400.24, 67.6173},
	{1575.52, -1884.13, 12.2572},
	{2609.37, 84.7517, 25.6915},
	{2324.16, 2007.15, 10.2133},
	{-435.578, -61.9906, 57.5874},
	{1277.21, 2174.67, 11.7612},
	{-1609.25, 1343.08, 0.76613},
	{-2066.62, 1112.42, 50.842},
	{2324.93, 59.2058, 25.1916},
	{1665.0, 1055.98, 9.88257},
	{-565.119, -1105.5, 21.7118},
	{911.128, -1863.77, 7.39513},
	{291.263, -560.842, 15.6489},
	{1276.86, 285.564, 18.2412},
	{1131.38, 2786.06, 9.54712},
	{2756.08, 308.985, 6.16004},
	{1275.2, 307.146, 18.2408},
	{-1663.52, 879.407, 134.803},
	{396.08, -1560.71, 27.8393},
	{-808.419, 2426.92, 155.751},
	{-2177.7, 1211.87, 36.941},
	{-1993.37, -438.245, 37.4423},
	{1901.96, 1592.19, 9.41784},
	{1843.65, -1067.93, 23.5056},
	{1970.86, 1803.44, 11.4251},
	{2257.83, -1443.53, 22.7705},
	{215.029, -543.926, 51.8777},
	{1357.69, 2324.39, 9.57585},
	{-395.542, -1153.27, 68.3248},
	{155.632, -1957.38, 2.43847},
	{2098.41, 108.379, 26.9871},
	{803.923, 657.042, -0.22279},
	{2412.87, 2359.31, 9.5083},
	{-1395.89, 2874.03, 97.1715},
	{2639.29, 2040.23, 9.61501},
	{-1695.54, 587.411, 23.5795},
	{1741.59, 631.637, 9.53237},
	{1153.56, 1607.62, 6.00579},
	{1356.15, 486.658, 18.9252},
	{729.588, 364.501, 20.5986},
	{-1592.13, 1726.92, -0.26405},
	{1209.31, -2011.45, 67.6764},
	{-2858.91, 2221.42, 169.963},
	{-463.148, -1905.24, 6.38751},
	{1219.68, -2271.17, 12.2378},
	{2521.01, 1805.31, 9.70218},
	{1292.42, 1579.46, 18.5598},
	{-1158.75, -97.9352, 12.8376},
	{-2753.03, -119.957, 5.74698},
	{-1755.42, 529.467, 27.1089},
	{2830.29, 2154.44, 9.69186},
	{2886.12, -128.124, -0.24916},
	{1157.28, 978.143, 9.50518},
	{-864.757, -291.034, 62.0794},
	{919.252, -1020.65, 106.278},
	{2667.92, -399.62, 52.743},
	{1656.96, 1340.19, 9.47857},
	{-1368.97, 1775.31, 32.7009},
	{-783.694, 769.067, 16.3368},
	{-2375.22, -575.759, 128.277},
	{-2109.15, 923.892, 75.9419},
	{-1475.74, -353.219, 13.5849},
	{-254.42, 1847.89, 53.3149},
	{-1730.6, 1851.57, 23.2958},
	{-1209.26, -2509.33, 4.71355},
	{568.052, -1458.67, 22.2295},
	{-2115.62, 2765.97, 174.42},
	{2126.9, -1845.71, 2.66611},
	{-1826.29, 1409.18, 5.76275},
	{703.725, -916.391, 77.2718},
	{2596.34, 715.66, 9.75202},
	{2675.28, 1790.9, 9.68439},
	{800.55, -1517.37, 12.3301},
	{985.947, -2163.48, 11.7621},
	{1315.92, -987.74, 147.403},
	{1348.78, 1923.07, 9.76063},
	{-2308.37, 2511.24, -0.29047},
	{-2819.18, 332.585, 3.24477},
	{688.207, -1718.25, 4.23736},
	{-2439.06, 538.025, 28.9335},
	{1360.41, 2078.23, 11.9421},
	{-1457.97, -1568.14, 100.484},
	{2353.2, -658.296, 126.783},
	{2401.48, -1195.69, 35.6215},
	{-8.8865, -1387.47, -0.25351},
	{1973.66, -1037.23, 23.2337},
	{1989.63, -2013.56, 12.2894},
	{-2074.57, -2246.75, 30.4276},
	{687.76, -1714.19, 1.83125},
	{1253.47, -1478.49, 12.2742},
	{1597.22, 1046.07, 16.1155},
	{-168.906, 1073.39, 18.4407},
	{2637.36, 1979.15, 9.66249},
	{1583.44, 2296.14, 13.521},
	{-2517.5, 2490.9, 18.0296},
	{2801.92, -1198.08, 24.1793},
	{859.514, -615.649, 17.0949},
	{-261.912, -2106.82, 29.9671},
	{2322.46, -75.675, 25.178},
	{1463.52, 1994.64, 9.68615},
	{2840.98, -2409.46, 10.7138},
	{2588.58, -974.561, 80.0938},
	{-405.767, 2379.68, 51.9882},
	{-1752.96, 1150.15, 55.4509},
	{2539.8, 1937.78, 9.72086},
	{1849.08, 2192.1, 9.84618},
	{1647.16, -2302.78, -2.51373},
	{-816.127, -2418.23, 77.449},
	{2874.85, -2124.98, 2.72981},
	{1603.46, 2662.89, 9.52955},
	{2537.11, 1538.11, 9.50378},
	{820.117, -1171.2, 15.6992},
	{1407.52, 2598.13, 9.76351},
	{292.848, 167.86, -0.27939},
	{-908.625, -659.087, 30.1162},
	{-1832.34, 2019.49, 9.64515},
	{-782.192, -1178.44, 63.4967},
	{-1951.86, 2377.6, 48.2061},
	{727.537, 1987.76, 3.6739},
	{601.254, 1254.35, 10.4178},
	{-672.892, 2402.77, 133.969},
	{-2797.41, 169.554, 5.88913},
	{1112.99, -1981.68, 62.7962},
	{-2441.24, 2883.54, 43.3826},
	{-627.536, -141.986, 66.741},
	{-248.946, -2200.89, 27.7212},
	{385.599, -1321.13, 13.4091},
	{2582.19, 1584.19, 9.51097},
	{-2489.99, -720.421, 137.856},
	{2719.5, -2196.85, 12.2744},
	{1848.25, 2617.95, 9.75696},
	{973.962, 1018.49, 9.55827},
	{-2402.83, -213.537, 38.6514},
	{-2110.09, 948.154, 74.9447},
	{-1900.24, -322.852, 25.7245},
	{2611.4, -1834.68, 1.29681},
	{-2270.64, 2812.82, 168.962},
	{682.766, 1982.57, 3.63796},
	{-778.257, 1088.71, 43.2678},
	{1830.85, -1112.18, 22.5945},
	{-1472.31, 924.173, 25.3404},
	{2285.43, 2557.71, 9.53461},
	{-1685.26, 1000.48, 73.4936},
	{308.129, -1569.58, 33.3171},
	{1124.91, -2054.64, 67.7252},
	{-1725.92, 1934.36, 17.8911},
	{-1789.77, -2461.42, 18.1787},
	{1631.1, -1508.58, 12.2878},
	{1442.9, -615.426, 91.6852},
	{-1567.17, 2772.0, 82.722},
	{8.98762, -1102.29, -0.22589},
	{1839.35, 2261.1, 9.49102},
	{771.229, -1083.7, 22.8354},
	{-1511.54, 2799.75, 90.8247},
	{-1667.1, 1121.37, 22.415},
	{1693.87, -1960.77, 6.92945},
	{-943.725, 1431.47, 28.7519},
	{-1776.09, 868.888, 23.5677},
	{-2342.87, -2849.77, 0.5},
	{2010.28, -40.5026, -0.30923},
	{-2619.9, -2133.96, 78.7356},
	{2527.7, -2559.67, 12.4418},
	{-2672.56, 1409.06, 22.5838},
	{-1836.02, 2486.11, 76.468},
	{2888.21, -408.044, -0.12042},
	{2616.05, -1391.28, 33.4294},
	{-35.6525, -1125.57, -0.23085},
	{387.298, -1749.23, 7.84315},
	{2183.76, 2557.11, 9.52374},
	{1311.6, 216.106, 23.7023},
	{2053.02, 2656.52, 9.49632},
	{1363.43, -2286.14, 12.2567},
	{2444.78, 2443.71, 25.3158},
	{2430.47, -2033.4, 12.2695},
	{2417.97, 2468.99, 68.1438},
	{-18.5026, 2799.58, 70.3976},
	{1877.49, -2119.93, 13.9387},
	{2358.87, 548.121, 0.49116},
	{1839.56, -2516.94, 12.2586},
	{-2241.01, 108.582, 34.0167},
	{-1038.17, 454.467, 13.2294},
	{2321.72, -3.8213, 25.2052},
	{-2058.16, 165.504, 27.5666},
	{2112.66, -1990.29, 12.4746},
	{2696.41, -2133.77, 12.2958},
	{-2740.28, -619.598, 33.1576},
	{2117.07, -1591.92, 12.2407},
	{967.555, 1800.52, 7.55447},
	{-1534.34, -2531.49, 66.1969},
	{2022.08, 1076.89, 9.70498},
	{1666.95, -1247.5, 232.081},
	{-746.473, 83.789, 20.2176},
	{1848.26, -357.53, 44.7369},
	{-332.174, -1736.75, 13.6034},
	{2764.41, -2564.87, 1.74338},
	{1722.75, -2014.63, 16.5078},
	{1758.79, -1560.64, 8.26934}
};
new HitchInfoStatus[sizeof(HitchInfo)],
	KladObject[sizeof(HitchInfo)][3],
	Text3D:Klad3dText[sizeof(HitchInfo)];
enum kladinfo
{
	kladquestion[188],
	kladanswer[15]
}
static const kladqusans[][kladinfo] =
{
	{"В честь какаго разработчика стоит статуя на ЖД ЛС?", "Калькор"},
	{"Максимальная сумма пожертвования в благотворительность ?", "100000000"},
	{"Ник первого Тех.Администратора проекта ?", "Big_Smoke"},
	{"Сколько нелегальных автомобилей доступно к покупке в автосалоне ?", "15"},
	{"Сколько стоит вызвать такси через телефонную будку ?", "400"},
	{"Укажите количество ячеек у фермы №5", "61"},
	{"Сколько стоит строительство подвала с вентиляцией в доме ?", "10000000"},
	{"Кто трудится над модом на протяжении трех лет?", "Триазов"},
	{"Укажите дату открытия 7 сервера Mesa в формате xx.xx.xx", "06.01.18"},
	{"Укажите дату открытия 8 сервера Red-Rock в формате xx.xx.xx", "26.07.18"},
	{"Укажите дату открытия 9 сервера Yuma в формате xx.xx.xx", "06.01.19"},
	{"Укажите дату открытия 10 сервера Surprise в формате xx.xx.xx", "25.07.19"},
	{"Укажите дату открытия 12 сервера Glendale в формате xx.xx.xx", "01.04.20"},
	{"Укажите дату открытия 13 сервера Kingman в формате xx.xx.xx", "28.04.20"},
	{"Укажите дату открытия 15 сервера Payson в формате xx.xx.xx", "04.01.21"},
	{"Укажите дату открытия 16 сервера Gilbert в формате xx.xx.xx", "09.05.21"},
	{"Как зовут менеджера стоящего на аукционе контейнеров", "Магнус"},
	{"Как зовут квест персонажа стоящего у тренировочного полигона автошколы", "Маргарита"},
	{"Как зовут скупщика нелегала в гетто", "Гурам"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу адвоката", "7"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу инкассатора", "6"},
	{"Какой порядковый номер у бизнеса \"Информационный центр\"", "212"},
	{"Какой порядковый номер у бизнеса отель-пирамида", "144"},
	{"Какой порядковый номер у бизнеса \"Автобазар\"", "126"},
	{"Укажите количество ячеек у фермы №2", "42"},
	{"Укажите количество ячеек у фермы №3", "46"},
	{"Укажите количество ячеек у фермы №5", "61"},
	{"Укажите сколько семейных монет стоит предмет \"Маска робота\" в семейном магазине", "2900"},
	{"Какова гос. стоимость самой дорогой яхты", "25600000"},
	{"Сколько стоит вызвать такси через телефонную будку", "400"},
	{"Сколько всего доступно семейных территорий на сервере", "156"},
	{"Максимальный этаж в ЖК Los Santos Tower", "13"},
	{"Сколько стоит билет на мероприятие \"Собиратели\"", "30000"},
	{"Укажите количество нефтевышек доступных на сервере", "8"},
	{"Сколько стоит кирка для добычи ископаемых которую продает Лари", "5000"},
	{"В каком году была добавлена \"Лихорадка\" на проект", "2017"},
	{"Какая максимальная сумма штрафа может быть наложена на личный автомобиль", "80000"},
	{"Укажите сколько семейных монет стоит предмет \"Реактивный ранец\" в семейном магазине", "2400"},
	{"Какова гос. цена бизнеса - сельскохозяйственный магазин", "45000000"},
	{"Сколько авто стоит в пожарной части Лос Сантоса", "5"},
	{"Ник первого Спец. Администратора проекта", "Sweеt_Jonson"},
	{"Сколько стоит стоит улучшение \"Бренд\" для семьи", "80000000"},
	{"Сколько стоят обручальные кольца для проведения свадьбы", "5000"},
	{"Сколько всего нелегальных автомобилей доступно к покупке в автосалоне", "14"},
	{"Начальная ставка в контейнерах", "4000000"},
	{"Какая фамилия у разработчика Евгения", "Косовский"},
	{"Как зовут квест персонажа стоящего в Больнице ЛС", "Керри"},
	{"Сколько всего автобусов припарковано на ЖД ЛВ", "7"},
	{"Какова начальная ставка на контейнер класса премиум", "15000000"},
	{"Какова гос. цена бизнеса - нефтевышка", "60000000"},
	{"В честь какого разработчика стоит статуя на ЖД ЛС", "Калькор"},
	{"Сколько стоит лотерейный VIP-билет", "2500000"},
	{"Какое количество авто можно иметь купив PREMIUM VIP", "20"},
	{"Сколько стоит покупка прав на полеты", "200000"},
	{"Какова гос. стоимость самой дешевой фермы", "50000000"},
	{"На каком мероприятии можно в костюме попугая собирать яйца", "Собиратели"},
	{"Укажите номер справочной центрального банка", "8828"},
	{"Сколько стоит совершить прыжок с парашютом", "900"},
	{"Как назывался город, который когда то был построен, а затем снесен", "NewIsland"},
	{"Сколько всего личных ферм на сервере", "5"},
	{"Укажите количество ячеек у фермы №1", "24"},
	{"Укажите точное количество магазинов видеокарт", "3"},
	{"Какова гос. стоимость трейлера среднего класса", "3500000"},
	{"Укажите сколько дрифт монет стоит предмет \"Крылья зеленые\" в сувенирной лавке", "1300"},
	{"Укажите сколько семейных монет стоит предмет \"Рюкзак будущего\" в семейном магазине", "2800"},
	{"На какой номер нужно позвонить чтобы вызвать такси", "913"},
	{"Какова начальная ставка на контейнер класса ультра", "20000000"},
	{"Сколько стоит проход в VIP зал казино", "50000"},
	{"Максимальная сумма пожертвования в благотворительность", "100000000"},
	{"Как зовут персонажа который всегда встречает новых игроков на вокзале", "Джереми"},
	{"Какой игровой уровень нужно достигнуть чтобы создать свою семью", "20"},
	{"На какой номер нужно позвонить чтобы вызвать механика", "914"},
	{"Имя первого владельца проекта", "Сотов"},
	{"Какой порядковый номер у бизнеса \"Аренда велосипедов\"", "215"},
	{"На какой номер нужно позвонить чтобы вызвать скорую помощь", "912"},
	{"Сколько стоит создание новой семьи", "20000000"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу водителя трамвая", "9"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу крупье", "5"},
	{"Сколько всего авто доступно у станции дорожной службы", "5"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу дальнобойщика", "5"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу ремонтника дорог", "10"},
	{"Какое количество прицепов доступно для работы дальнобойщиком на станции около Форт Карсона", "6"},
	{"Какая нужна сумма для того чтобы отреставрировать здание на улице", "1500000000"},
	{"Как зовут персонажа который проводит мгновенную лотерею на центральном рынке", "Милтон"},
	{"Укажите сколько дрифт монет стоит предмет \"Паук\" в сувенирной лавке", "600"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу механика", "3"},
	{"Укажите сколько дрифт монет стоит предмет \"Корона\" в сувенирной лавке", "1000"},
	{"Сколько семейных монет начисляется на баланс фам. территории каждый PayDay", "8"},
	{"Укажите минимальную сумму для раздачи в центре занятости", "100000"},
	{"Как зовут ту, которая постоянно готова сыграть с вами в кости", "Оливия"},
	{"Стоимость аренды лавки №8 на центральном рынке", "100000"},
	{"Как зовут персонажа который стоит под мостом рядом с базой банды Ballas", "Иван Гай"},
	{"Укажите дату открытия 6 сервера Saint Rose в формате xx.xx.xx", "27.08.17"},
	{"Укажите количество ячеек у фермы №4", "35"},
	{"Сколько человек работают над обновлениями на проекте", "1"},
	{"Какова стоимость 1 фишки в казино", "900"},
	{"Сколько стоит улучшение \"Галочка\" для семьи", "50000000"},
	{"На какое количество репутации можно обменять 1 семейный талон", "5"},
	{"Какую максимальную сумму денег можно перевозить в грузовиках мафии", "1800000"},
	{"Какова начальная ставка на контейнер обычного класса", "4000000"},
	{"Укажите дату открытия 14 сервера Winslow в формате xx.xx.xx", "04.11.20"},
	{"Какой игровой уровень требуется для того чтобы устроить на работу пилота", "6"},
	{"Укажите количество звезд у отеля Sundet Marquis Hotel", "4"},
	{"Укажите стоимость улучшения \"бар\" В личном доме", "50000"},
	{"Сколько нужно заплатить чтобы открыть шлагбаум на автобазаре", "300"},
	{"Укажите дату открытия 11 сервера Prescott в формате xx.xx.xx", "05.01.20"},
	{"Сколько подарков нужно принести Эдварду чтобы он обменял их на шкатулку", "20"},
	{"Сколько стоит 1 AZ-Coins у Абрахама", "50000"},
	{"Сколько стоит строительство подвала с вентиляцией в доме", "1000000"},
	{"Сколько стоит 1 час аренды уличного баннера", "10000"},
	{"Как называется мероприятие на котором нужно собирать яйца", "Собиратели"}
};
enum postsd
{
	Float:XPost,
	Float:YPost,
	Float:ZPost,
	postname[3+11]
}
static const PostFrac[][postsd] =
{
	{1512.4904, 1308.3763, 10.9788, "E3"},
	{1501.3275, 1323.2789, 10.2838, "E1"},
	{1505.1495, 1362.9316, 10.9738, "E2"},
	{1523.5244, 1329.1572, 10.9837, "B1"},
	{1524.1705, 1344.3232, 10.9787, "B2"},
	{1513.4513, 1321.5842, 10.9838, "C1"},
	{1484.8055, -1244.3878, 113.8103, "D1"},
	{1484.1356, -1268.9202, 113.8064, "C2"},

	{-1533.3519, 479.5503, 8.4875, "КПП 2"},
	{-1535.1548, 488.2022, 8.4797, "КПП 1"},
	{-1536.6204, 480.0901, 24.3944, "КПП Вышка"},
	{-1320.9683, 483.8987, 13.4859, "Дежурный 1"},
	{-1320.2936, 516.6943, 12.4971, "Дежурный 4"},
	{-1508.1044, 460.0055, 8.4875, "Завод оружия"}
};
new RETURN_STRING_FIXTEXT[64];
#define FixText(%0) (FixText_function(%0), RETURN_STRING_FIXTEXT)
new
	Text3D:postlabel[sizeof(PostFrac)],
	postowner[sizeof(PostFrac)] = {-1, ...};
new PlayerText:eatfree2[MAX_PLAYERS][18] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new bool:eatopen[MAX_PLAYERS];
new eatselect[MAX_PLAYERS];
new dialogforplayer[MAX_PLAYERS];
enum playerautoinfo
{
    PlayerText:testdrive_td[47],
    select_td,
    number_td,
    bool:open_td,
	secondupdate
};
new PAI[MAX_PLAYERS][playerautoinfo],
	bool:FamilyAutoSpawn[MAX_PLAYERS],
	FamilyAutoUID[MAX_PLAYERS] = {-1, ...},
	FamilyAutoResponse[MAX_PLAYERS];
//================================[ mining ]==============================================//
enum HOUSE_MAINING_ENUM
{
	card_status,
	Float:card_balance,
	card_level,
	Float:card_percent,
	card_last_update
};
new MiningBTC[MAX_HOUSES][20][HOUSE_MAINING_ENUM],
	Float:MiningBTCPos[][3] = {
		{-1658.4623, -244.2459, 14.1484},
		{-1656.4078, -244.2418, 14.1484},
		{-1654.4594, -244.2415, 14.1484},
		{-1652.4283, -244.2435, 14.1484},
		{-1650.4478, -244.2418, 14.1484},
		{-1649.9041, -246.4743, 14.1484}

	},
	Float:ChanceUpdateVideoCard[] = {0.0, 90.0, 80.0, 70.0, 50.0, 40.0, 30.0, 20.0, 10.0, 5.0},
	bool:GetPlayerUpdateCard[MAX_PLAYERS];
stock Float:GetMiningBTC(level)
{
	if level > 10 *then
		return 0.0;

	return (0.03 * level);
}
enum nameitemshop
{
    NameItem24[10+19],
    NameItemAZS[9+12],
    NameItemBar[7+7],
    NameItemZakus[7+7],
    NameItemAmmo[7+7]
};
static const NameInfoBiz[][nameitemshop] = {
	{"Чипсы","Лопата","Спранк","Картофель-Фри","Кастет"},
	{"Спранк","Набор для починки","Виски","Сэндвич","Бита"},
	{"Пиво","Канистра","Коньяк","Баскет","Катана"},
	{"Телефонная книга","Балончик с краской","Пицца","Крылышки","Парашют"},
	{"Скрепка","Бензопила","Бургер","Салат","Дымовая Шашка"},
	{"Маска","Отмычка","","","Desert Eagle"},
	{"Радио","Замок для велосипеда","","","Shotgun"},
	{"Фотоаппарат","Домкрат","","","MP5"},
	{"Телефон Xiaomi Mi 8","","","","AK-47"},
	{"SIM-Карта","","","","M4"},
	{"Сигареты","","","","Country Rifle"},
	{"Зажигалка","","","",""},
	{"Удочка","","","",""},
	{"Черви","","","",""},
	{"Бронежилет","","","",""},
	{"Яд","","","",""},
	{"Аптечка","","","",""},
	{"Таблетки от наркозависимости","","","",""},
	{"Цветы","","","",""}
};
//shop

enum
{
	SHOP_TYPE_BUSINESS, // Редактируемые цены (биз)
	SHOP_TYPE_FAMILY, // Тип семейный
	SHOP_TYPE_RESPECTS, // Бандитские респекты
	SHOP_TYPE_STATIC_COST // Статичные цены
};

enum shop_data
{
	shopItem[119],
	shopCost[119],
	shopType
};

new ShopData[][shop_data] =
{
	{{315,326,325,327,328,319,521,711,329,710,321,320,522,523,330,317,314,524,709}, {0}, SHOP_TYPE_BUSINESS},
	{{356,318,332,331,712,713,714,1126}, {0}, SHOP_TYPE_BUSINESS},
	{{715,716,717,718,719,720,721}, {0}, SHOP_TYPE_BUSINESS},
	{{326,722,723,719,717}, {0}, SHOP_TYPE_BUSINESS},

	{{724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,
	745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,
	767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,
	790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,
	814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,
	838,839,840,841,842}, {5800000,5400000,4400000,2400000,5400000,5200000,4000000,5600000,3800000,5800000,4400000,2800000,
	4000000,5800000,4200000,5400000,4800000,4400000,2600000,3800000,2200000,4600000,2400000,2900000,
	5200000,5400000,2200000,5400000,5400000,5400000,4400000,5600000,2400000,5600000,3000000,4800000,
	4200000,2600000,5800000,3600000,4800000,5800000,4600000,5200000,4200000,4000000,4800000,3800000,
	5000000,3000000,3000000,3200000,2000000,4000000,4800000,4400000,2400000,4600000,3800000,2600000,
	3400000,5200000,2000000,5600000,5800000,5000000,4600000,4600000,3000000,2800000,2400000,3000000,
	5200000,5200000,3600000,2200000,2800000,5000000,3600000,2200000,4400000,2800000,4600000,2800000,
	3800000,2600000,4800000,2400000,2600000,3000000,3400000,2200000,5200000,5200000,4400000,3800000,
	2400000,2600000,5600000,5600000,3800000,4600000,3400000,3600000,4600000,2800000,4200000,5200000,
	3000000,5800000,3000000,500000,5800000,2800000,2200000,3200000,3400000,4000000,2200000}, SHOP_TYPE_STATIC_COST},

	{{843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,
	867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,
	892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,
	917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,
	942,943,944,945,946,947,948,949,950}, {500,500,500,500,500,500,350,200,210,200,380,220,370,270,320,360,130,370,390,390,180,390,270,220,
	290,320,240,160,350,200,280,130,320,300,130,260,290,350,180,320,190,330,260,260,130,330,240,160,230,
	210,250,210,340,140,130,150,200,230,150,280,200,380,190,210,300,310,170,140,360,380,180,370,150,180,
	140,270,160,340,280,270,260,350,330,220,210,350,160,380,170,200,350,250,390,200,1140,220,160,160,230,
	340,300,280,270,200,350,160,350,140}, SHOP_TYPE_FAMILY},

	{{1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403}, {0}, SHOP_TYPE_BUSINESS},

	{{1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,
	1431,1432,1433,1434,1435,1436,1248,1249,1250}, {1500,1800,1900,2000,2200,2400,2500,2650,2700,2850,2900,3000,3100,3150,3200,3300,3400,3500,
	3600,3700,3800,3850,3900,3950,4000,4100,4150,4200,4250,4300,4400,4450,4500,250,250,250}, SHOP_TYPE_RESPECTS},

	{{315,722,325}, {1500, 1800, 1900}, SHOP_TYPE_STATIC_COST},
	
	{{1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,
	1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1062,1063,1064,1065 ,1066,1067,1068,1069,1070,1071,1072,1073,1074,
	1075,1076,1077,1078,1079,1080}, {125000000,125000000,125000000,125000000,125000000,125000000,
	125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000,
	125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000,
    125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000,
	125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000, 125000000,
	125000000, 125000000, 125000000, 125000000, 125000000, 125000000}, SHOP_TYPE_STATIC_COST} // 60 ( все для дома )
},
	PlayerText:Item_Menu_Shop[MAX_PLAYERS][7] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	bool:ShopOpen[MAX_PLAYERS],
	ShopUID[MAX_PLAYERS char] = {255, ...}; 
//
enum recon
{
    PlayerText:rinfo[50],//menu textdraw's
    PlayerText:menu_stats[6],//1 textdraw's
    PlayerText:menu_action[6],//2 textdraw's
    PlayerText:menu_punish1[6],//3 textdraw's
    PlayerText:menu_punish2[6],//4 textdraw's
    PlayerText:menu_help[6],//5 textdraw's
    PlayerText:menu_check[6],//6 textdraw's
    PlayerText:menu_tech[6],//7 textdraw's
    PlayerText:menu_exit[6],//8 textdraw's
    rPlayer,//playerid params spec
    bool:rOpen,//if open spec
    Float:PosX,
    Float:PosY,
    Float:PosZ,
    menuopen,
    Interior,
    VirtualWorld,
    rAdmin,//playerid spec
    rTime,
	TimeWork,
};
new RecInfo[MAX_PLAYERS][recon],
	bool:Upgrade_Open[MAX_PLAYERS],
	bool:Upgrade_Start[MAX_PLAYERS],
	Upgrade_TimerID[MAX_PLAYERS] = {-1, ...},
	PlayerText:Upgrade_ProgreesTD[MAX_PLAYERS][7] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Upgrade_InventTD[MAX_PLAYERS][28] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Upgrade_ColorTD[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...},
	Float:Upgrade_ProgressWhite[MAX_PLAYERS],
	Upgrade_GetSlotAcs[MAX_PLAYERS char] = {255, ...},
	Upgrade_GetSlotStone[MAX_PLAYERS char] = {255, ...};

enum enumReconstruction
{
    Float:ReconstructionX,
    Float:ReconstructionY,
    Float:ReconstructionZ,
    ReconstructionName[9+14],
    ReconstructionPickup,
    Text3D:Reconstruction3DText,
    ReconstructionMoney
};
new Reconstruction[][enumReconstruction] =
{
    {1546.5601, -1668.8506, 13.5665, "LSPD", -1},
    {1410.5604, -1706.1941, 13.5665, "Лотерейная", -1},
    {1506.8763, -1584.1592, 13.5665, "Отель Marina Vay Sands", -1},
    {1640.9368, -1720.8583, 13.5240, "San News", -1},
    {1776.0500, -1886.1100, 13.3864, "Вокзал", -1},
    {1188.0300, -1304.9044, 13.5537, "Госпиталь", -1},
    {1492.1893, -1291.0858, 13.9474, "Мэрия", -1}
};
//
new PlayerText:Donate_Text[MAX_PLAYERS][3] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	CasinoInfoMoney,
	FondInfoMoney;
//cef donate
enum donateinfo_cef
{
	dItem_Type,
	dItem_UID,
	dItem_InvID,
	dItem_DialogID,
	dItem_DialogType,
	dItem_DialogName[30],
	dItem_DialogText[2495],
	dItem_DialogButton_0[10],
	dItem_DialogButton_1[10]
};
static const DonateInfo_cef[][donateinfo_cef] =
{
	{4, 0, 0, 900, DIALOG_STYLE_INPUT, "", "{FF6666}Внимание! {FFFFFF}Вы пытаетесь обменять {FF6666}AZ{FFFFFF} coin's\nна игровую валюту в доларах. Курс обмена зависит от\nсостояния экономики сервера и его акций. Курс обмена:\n{FF6666}1{FFFFFF} az coin = {FF6666}$18000{FFFFFF}.\n\n{FFFFFF}Введите в строчку сколько az coin's\nжелаете обменять!\n\n", "Далее", "Закрыть"},
	{4, 1, 0, 25677, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Стартовый капитал №1'{ffffff}?\n\nСтоимость приобретения: {FF6666}500{FFFFFF} AZ-Coins\nВы получите: {FF6666}$9450000{FFFFFF}\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 2, 0, 25677, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Стартовый капитал №2'{ffffff}?\n\nСтоимость приобретения: {FF6666}1000{FFFFFF} AZ-Coins\nВы получите: {FF6666}$19260000{FFFFFF}\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 3, 0, 25677, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Стартовый капитал №3'{ffffff}?\n\nСтоимость приобретения: {FF6666}2000{FFFFFF} AZ-Coins\nВы получите: {FF6666}$39240000{FFFFFF}\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 4, 0, 25677, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Стартовый капитал №4'{ffffff}?\n\nСтоимость приобретения: {FF6666}4000{FFFFFF} AZ-Coins\nВы получите: {FF6666}$80640000{FFFFFF}\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 5, 0, 25677, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Стартовый капитал №5'{ffffff}?\n\nСтоимость приобретения: {FF6666}8000{FFFFFF} AZ-Coins\nВы получите: {FF6666}$165600000{FFFFFF}\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 6, 0, 25678, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Начинающий ловец'{ffffff}?\n\nСтоимость приобретения: {FF6666}9100{FFFFFF} AZ-Coins\n\nВы получите:\n\n{FF6666}-{ffffff} {FF6666}$14.000.000{FFFFFF}\n{FF6666}-{ffffff} Premium VIP\n{FF6666}-{ffffff} AT-99\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},
	{4, 7, 0, 25679, DIALOG_STYLE_MSGBOX, "", "{FF6666}-{ffffff} Вы действительно хотите приобрести набор {FF6666}'Начинающий магнат'{ffffff}?\n\nСтоимость приобретения: {FF6666}11100{FFFFFF} AZ-Coins\n\nВы получите:\n\n{FF6666}-{ffffff} {FF6666}$30.000.000{FFFFFF}\n{FF6666}-{ffffff} Premium VIP\n{FF6666}-{ffffff} AT-99\n{FF6666}-{ffffff} Владение 4 домами и бизнесами\n\n{cccccc}Для продолжения нажмите клавишу 'Далее'", "Далее", "Закрыть"},

	{0, 0, 0, 25696, DIALOG_STYLE_MSGBOX, "Подтверждение покупки", "{ffffff}Дополнение к VIP-аккаунту.\nСтоимость НАВСЕГДА: {FF6666}30000{FFFFFF} AZ-коинов.\n\nЭто не заменяет VIP-аккаунт, а дополняет его.\nПри покупке выдаётся предмет дополнения.\nЧтобы его активировать - нужно его использовать через инвентарь.\nДо активации предмет можно продавать, передавать, скупать.\n\n\n{ffff00}Преимущества дополнения:{cccccc}\n1. Отсутствие КД на отправку репорта.\n2. Бесплатная отправка объявлений в СМИ (бесплатно раз в 30 минут).\n3. Бесплатные звонки и смс.\n4. Бесплатная аренда лавок на Центральном рынке.\n5. Бесплатный вход в казино и бары.\n6. Везде в 2 раза меньше комиссия при перечислении и передаче денежных средств.\n7. Шанс улучшения предметов выше в 2 раза.\n8. Каждый PayDay вы будете получать 6 AZ-коинов.\n9. За 30 минут можно перевозить 40 бочек, работая на водных нефтевышках.\n10. Через /pay можно передавать суммы до 1 000.000$.\n11. Лечение в больнице проходит в 5 раз быстрее.\n12. Вы не теряете оружие при попадании в больницу.\n13. Действие маски увеличено на 10 минут.\n14. При ограблении армии, Вы будете получать 4 ингредиента, вместо 2.\n15. Появляется шанс получения платинум рулетки при использовании сундуков.\n16. При использовании антибиотиков, наркозависимость уменьшается на 10 единиц больше.\n17. 6 очков репутации вашей семье каждый пейдей.\n18. Увеличен шанс получить тюремную отмычку при выполнении заданий в ТСР.\n19. КД ящика с рулетками уменьшено до 60 минут.\n20. При выполнении семейных квестов будет выдаваться в два раза больше семейных талонов.\n21. Можно загружать до 5-ти автомобилей.\n22. Можно оплачивать налоги без отыгранных 40 минут.\n23. КД на покупку ларцов Concept Car Luxury 2 ларца за 10 секунд.\n24. При входе в игру доступна возможность - выбора места спавна / последнее место выхода.\n25. Вы можете входить куда-то угодно будучи не вакцинированым.\n26. Возможность оплаты налогов через онлайн-банкинг в телефоне.\n27. Выставить машину на продажу и уйти с аб. (нужно быть онлайн)\n28. Выставить товары на цр и уйти. (нужно быть онлайн)\n29. Ваши сообщения, подаваемые в СМИ, будут отображаться другим цветом\n30. В /vr будет отображать Префикс FOREVER\n31. Бесплатная регистрация на пабг, бесплатный тест драйв транспорта и аксессуаров\n32. Не нужно отыгрывать 30 минут для получения пейдея\n33. Аренда транспорта со скидкой 75 процентов. \n34. Комиссия 1 процент на трейд \n35. Адвокаты выпускают из КПЗ с шансом 80 процентов\n36. За 30 минут можно перевозить 26 бочек, работая на наземных нефтевышках.", "Купить", "Закрыть"},
	{0, 1, 0, 25648, DIALOG_STYLE_MSGBOX, "", "{FFFFFF}Улучшение: {FF6666}PREMIUM VIP{FFFFFF}\nСтоимость: {FF6666}10000{FFFFFF} AZ-Coins\n\n\n{FF5252}Преимущества PREMIUM статуса{FFFFFF}\n1) Каждый payday вы будете получать 4 AZ-Coins (donat очки){FFFFFF}\n(если отсутствует задолженность в банке и не находитесь под арестом)\n2) Возможности всех VIP.\n3) PREMIUM Чат (Для всех владельцев этого VIP) (/vr)\n4) VIP статус не нужно продлевать\n5) Самый высокий процент депозита в банке.\n6) В банке можно хранить больше 40 миллионов.\n7) 4 очка репутации семьи каждый payday\n8) Шанс крафта в 2 раза выше \n9) Аренда любого транспорта для вас со скидкой 50\n10) Законопослушность всегда 100\n11) Стоимость рекламы на билбордах и в GPS в 2 раза ниже\n12) Возможность выбора точки спавна в любом месте карты\n{FF5252}13) Бесплатный уникальный вертолет \"AT-99 «Scorpion»\".{FFFFFF}\n14) Нахождение в списке топ игроков онлайн, а так-же в рейтинге\nТОП игроков на площади у БАНКА.\n{ff0000}15)Возможно иметь до 20 автомобилей", "Далее", "Закрыть"},
	{0, 2, 0, 25647, DIALOG_STYLE_MSGBOX, "", "{FFFFFF}Улучшение: {FF6666}Titan VIP{FFFFFF}\nСтоимость: {FF6666}3560{FFFFFF} AZ-Coins\n\n{FFB252}Преимущества Titan статуса{FFFFFF}\n1) Каждый payday вы будете получать 2 AZ-Coins (donat очки){FFFFFF}\n(если отсутствует задолженность в банке и не находитесь под арестом)\n2)Возможности всех VIP [/help - преимущества VIP]\n3)VIP Чат (Для всех богачей сервера) (/vr)\n4)VIP статус не нужно продлевать\n5)Больше процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)3 очка репутации семьи каждый payday\n8)Возможность иметь 4 авто, 5 если есть дом или отель.\n9)Вы не теряете наркотики при попадании в больницу\n10)Доступ к команде /out (Уволиться с организации по с.ж.) \n\nНажмите {FF6666}Enter{FFFFFF} чтобы приобрести.", "Далее", "Закрыть"},
	{0, 3, 0, 25649, DIALOG_STYLE_MSGBOX, "Подтверждение покупки", "{ffffff}Дополнение к VIP-аккаунту.\nСтоимость на месяц: {FF6666}5400{FFFFFF} AZ-коинов.\n\nЭто не заменяет VIP-аккаунт, а дополняет его.\nПри покупке выдаётся предмет дополнения.\nЧтобы его активировать - нужно его использовать через инвентарь.\nДо активации предмет можно продавать, передавать, скупать.\nПосле активации дополнение будет действовать ровно 1 месяц.\n\n\n{ffff00}Преимущества дополнения:{cccccc}\n1. Отсутствие КД на отправку репорта.\n2. Бесплатная отправка объявлений в СМИ (бесплатно раз в 30 минут).\n3. Бесплатные звонки и смс.\n4. Бесплатная аренда лавок на Центральном рынке.\n5. Бесплатный вход в казино и бары.\n6. Везде в 2 раза меньше комиссия при перечислении и передаче денежных средств.\n7. Шанс улучшения предметов выше в 2 раза.\n8. Каждый PayDay вы будете получать 6 AZ-коинов.\n9. За 30 минут можно перевозить 40 бочек, работая на водных нефтевышках.\n10. Через /pay можно передавать суммы до 1 000.000$.\n11. Лечение в больнице проходит в 5 раз быстрее.\n12. Вы не теряете оружие при попадании в больницу.\n13. Действие маски увеличено на 10 минут.\n14. При ограблении армии, Вы будете получать 4 ингредиента, вместо 2.\n15. Появляется шанс получения платинум рулетки при использовании сундуков.\n16. При использовании антибиотиков, наркозависимость уменьшается на 10 единиц больше.\n17. 6 очков репутации вашей семье каждый пейдей.\n18. Увеличен шанс получить тюремную отмычку при выполнении заданий в ТСР.\n19. КД ящика с рулетками уменьшено до 60 минут.\n20. При выполнении семейных квестов будет выдаваться в два раза больше семейных талонов.\n21. Можно загружать до 5-ти автомобилей.\n22. Можно оплачивать налоги без отыгранных 40 минут.\n23. КД на покупку ларцов Concept Car Luxury 2 ларца за 10 секунд.\n24. Вы можете входить куда-то угодно будучи не вакцинированым.\n25. Возможность оплаты налогов через онлайн-банкинг в телефоне.\n26. При входе в игру доступна возможность - выбора места спавна / последнее место выхода.\n27. Возможность оплачивать налоги на дом и бизнес через сайт проекта.\n28. За 30 минут можно перевозить 26 бочек, работая на наземных нефтевышках.\n\n\n{00ff00}При активации дополнения вы получите 10 разных ящиков с автомобилями.", "Купить", "Закрыть"},

	{2, 0, 0, 25650, DIALOG_STYLE_MSGBOX, "default", "{FFFFFF}Предмет: {FDCF28}Тайник Vice City{FFFFFF}\nМожно получить с игрового магазина.\nНельзя продать, {FDCF28}обменять{FFFFFF}.\nМожно открывать каждый 1 час игры в онлайне. \nПри открытии вы можете получить 2 рандомных бокса или ларца,\nоткрывая которые можно выиграть ценные призы.\n\nТак же, есть шанс выиграть такие машины:\nMercedes GT63 Brabus\nMercedes-Benz GLE Brabus\nMcLaren 720S\nDodge RAM 3500\n\nПри открытии 1 тайника данного типа, КД будет начислено на все остальные\n\nСтоимость приобретения: {FF6666}40000{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n\n\n", "Далее", "Закрыть"},
	{2, 1, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец пилота{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}кастомные {ffffff}самолёты, такие как:\n\n{cccccc}- Luxor Deluxe;\n- Nimbus;\n- Vestra;\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно получить {FDCF28}работая пилотом,\n{ffffff}или купить у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}70{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 2, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец развозчика продуктов{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}кастомные {ffffff}грузовики для развозки продуктов, такие как:\n\n{cccccc}- Mercedes-Benz 1620;\n- Mercedes-Benz 1113;\n- Volkswagen Constellation;\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно получить {FDCF28}работая развозчиком продуктов,\n{ffffff}или купить у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}70{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 3, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец дальнобойщика{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}кастомные {ffffff}фуры, такие как:\n\n{cccccc}- Volvo Truck;\n- Mercedes-Benz Actros;\n- Mercedes-Benz Arocs 4163;\n- Iveco Stralis;\n- MAN TGS;\n- Volvo 460;\n- Вечный индикатор голода;\n- Набор бронежилетов;\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}70{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 4, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец Водителя Автобуса{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}кастомные {ffffff}автобусы, такие как:\n\n{cccccc}- Holding Bus Company;\n- Los-Santos Inter Bus C.;\n- Набор бронежилетов;\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}70{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 5, 0, 25650, DIALOG_STYLE_MSGBOX, "default", "{FFFFFF}Предмет: {FDCF28}Тайник Лос Сантоса{FFFFFF}\nМожно получить с игрового магазина.\nНельзя продать, {FDCF28}обменять{FFFFFF}.\nМожно открывать каждый 1 час игры в онлайне. \nПри открытии вы можете получить 2 рандомных бокса или ларца,\nоткрывая которые можно выиграть ценные призы.\n\nПри открытии 1 тайника данного типа, КД будет начислено на все остальные\n\nСтоимость приобретения: {FF6666}20000{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n\n\n", "Далее", "Закрыть"},
	{2, 6, 0, 25650, DIALOG_STYLE_MSGBOX, "default", "{FFFFFF}Предмет: {FDCF28}Тайник Илона Маска{FFFFFF}\nМожно получить с игрового магазина.\nНельзя продать, {FDCF28}обменять{FFFFFF}.\nМожно открывать каждые 2 часа игры в онлайне. \nПри открытии вы можете получить\nларец Super Car Box или ларец с премией,\nоткрывая которые можно выиграть ценные призы.\n\nПри открытии 1 тайника данного типа, КД будет начислено на все остальные\n\nСтоимость приобретения: {FF6666}5000{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n\n\n", "Далее", "Закрыть"},
	{2, 7, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ностальгический ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Aston Martin DB5\n- BMW M3 GTR\n- Chevrolet Camaro\n- Mazda RX7 Veilside FD\n- Mazda RX8\n- Mitsubishi Eclipse\n- Ford Mustang 289\n- Nissan 350Z\n- Nissan Skyline R34\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}85{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 8, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Super Car Box{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Сертификат Brabus 700\n{cccccc}- Сертификат Mercedes-AMG G63: Mansory\n{cccccc}- Сертификат Lamborghini Huracan 2022\n{cccccc}- Сертификат Daewoo Lanox 6x6\n{cccccc}- Сертификат Pagani Codalunga\n{cccccc}- Сертификат Hennessey Velociraptor 6x6\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}130{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 9, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец с премией{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Mercedes-Benz Gl63\n- BMW 7\n- MB v250\n- Mercedes-Benz C63\n- MB C63s Coupe\n- Audi RS7\n- BMW E30\n- BMW F10\n- Volkswagen Transporter\n- Mercedes-Benz Vito\n- Opel Vivaro\n- Chevrolet Corvett\n- Porshe Carrera\n- Dodge Charger SLT\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}100{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 10, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Супер авто-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- BMW Z4 40i\n- Mercedes-Benz S600 W124\n- BMW X5 E53\n- Lexus RX450H\n- Rolls-Royce Cullinan\n- Mercedes CLA 63 AMG\n- Ford GT\n- Dodge Viper\n- McLaren MP4\n- Subaru WRX\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}85{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 11, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Супер мото-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Мотоцикл Ducati Diavel\n- Мотоцикл Ducati Panigale\n- Мотоцикл Ducati Ducnaked\n- Мотоцикл Kawasaki Ninja ZX-10RR\n- Мотоцикл Western\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}85{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 12, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Rare Box Yellow{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ffff00}В сундуке Rare Box YELLOW:\n{cccccc}- Lamborghini Urus\n- BMW M8\n- Mercedes GT63s AMG\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}75{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 13, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Rare Box Red{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ff0000}В сундуке Rare Box RED:\n{cccccc}- Bentley Continental\n- Audi RS6\n- Mercedes E63s AMG (2020)\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}75{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 14, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Rare Box Blue{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{0080ff}В сундуке Rare Box BLUE:\n{cccccc}- Mercedes S63 Coupe AMG\n- Mercedes G63 AMG\n- Volkswagen Touareg\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}75{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 15, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Ларец кастомных аксессуаров{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n{cccccc}- Кастомные часы ('Rolex Submariner', 'Gucci', 'Apple Watch', 'Casio G-SHOCK' и другие)\n- Кастомные наушники ('AirPods Max', 'Razer', 'beats by Dre' и другие)\n- Кастомные кепки ('Supreme', 'Gucci', 'Tommy Hilfiger' и другие)\n- Кастомные маски (Неоновая, 'Scary', 'Локи' и другие)\n- Кастомные мотошлемы ('Kitty', 'Pink', 'Alien' и другие)\n- Кастомные эксклюзивные шляпы\n- Рюкзак 'Крипер', рюкзак альпиниста\n- Шлем Тора, Футбольный шлем, Шлем 'Daft Punk', 'Стив', 'Гомер'\n- Разные маски из 'Игры в Кальмара', VIP маска 'Бык'\n- Алмазная кирка\n- Крылья\n- Бронежилеты\n- Скин: Маленький Билл (ID: 460)\n- Осколки кастомных аксессуаров (Рука бесконечности, Молот Тора, Голова Робокоп, Пятизубец, Посох льда, \nШлем железного человека, Русский боевой топор, Щит Капитана Америки)\n{ffff00}- Супер-кирка\n- Супер-грабли\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке. Так же получить в магазине аксессуаров.\n{ffffff}Можно использовать, передавать и продавать.\n\nСтоимость приобретения: {FF6666}75{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},
	{2, 16, 0, 25650, DIALOG_STYLE_INPUT, "default", "{FFFFFF}Предмет: {FDCF28}Concept Car Luxury{FFFFFF}\n\n{ffffff}Завоз новых ларцов 'Concept Car Luxury' \nпроисходит в каждый PayDay по 10 штук\nна центральные рынки Los Santos и San Fierro.\n(/gps > Разное > Стенд Concept Car Luxury)\n\n\nОткрывая эти ларцы вы сможете получить:\n{cccccc}- Сертификат Brabus 700\n- Сертификат Mansory Stallone\n- Сертификат Brabus GLS 2020\n- Сертификат Brabus 800\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- монеты охотника\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Ларец можно использовать, передавать и продавать.\n \n{ffffff}Осталось выпадений транспорта на сегодня: {ff6666}14 ед.\n\nСтоимость приобретения: {FF6666}120{ffffff} AZ-Coins\nДля продолжения используйте кнопку 'Далее'\n\n{cccccc}Вы так же можете ввести кол-во предмета, которое хотите приобрести.\nОт 1 до 100 штук за раз\n\n", "Далее", "Закрыть"},

	{3, 0, 5154, 25911, DIALOG_STYLE_MSGBOX, "default", "8000", "Далее", "Закрыть"},
	{3, 1, 5155, 25911, DIALOG_STYLE_MSGBOX, "default", "40000", "Далее", "Закрыть"},
	{3, 2, 5156, 25911, DIALOG_STYLE_MSGBOX, "default", "40000", "Далее", "Закрыть"},
	{3, 3, 5157, 25911, DIALOG_STYLE_MSGBOX, "default", "40000", "Далее", "Закрыть"},
	{3, 4, 5158, 25911, DIALOG_STYLE_MSGBOX, "default", "8000", "Далее", "Закрыть"},
	{3, 5, 5159, 25911, DIALOG_STYLE_MSGBOX, "default", "8000", "Далее", "Закрыть"},
	{3, 6, 5160, 25911, DIALOG_STYLE_MSGBOX, "default", "8000", "Далее", "Закрыть"},
	{3, 7, 5161, 25911, DIALOG_STYLE_MSGBOX, "default", "40000", "Далее", "Закрыть"},
	{3, 8, 5162, 25911, DIALOG_STYLE_MSGBOX, "default", "40000", "Далее", "Закрыть"},
	{3, 9, 5112, 25911, DIALOG_STYLE_MSGBOX, "default", "32800", "Далее", "Закрыть"},
	{3, 10, 5114, 25911, DIALOG_STYLE_MSGBOX, "default", "32800", "Далее", "Закрыть"},
	{3, 11, 5113, 25911, DIALOG_STYLE_MSGBOX, "default", "32800", "Далее", "Закрыть"}
};
//default donate
enum donateinfo
{
	Item_Type,
	Item_InvID,
	Item_Name_Eng[32+20],
	Item_Cost,
	bool:Item_TypeCost, //az = 0 rub 1
	Item_Text[10+7],
};
/*
	0 свободная ячейка
	1 рулетки
	2 тачки
	3 телефоны
	4 аксы
	5 скины
	6 боксы
*/
static const DonateInfo[][donateinfo] =
{
	{0, 0, "", 0, false}, //free cell

	{1, 341,	"Chest Rulet (donate)", 			50000,false},
	{1, 313,	"Bronze Rulet", 				15000,false},
	{1, 314,	"Silver Rulet", 				25000,false},
	{1, 315,	"Gold Rulet", 					45000,false},

	{0, 0, "", 0, false}, //free cell

	{2, 487,	"Certificate Maverick", 					550000,false},
	{2, 1452,	"Certificate Dodge Challenger", 			600000,false}, //+
	{2, 1221,	"Certificate Acura NSX",				60000,false}, //+
	{2, 1225,	"Certificate Lexus Sport-S", 			34000,false}, //+
	{2, 1228,	"Certificate Jaguar F-pace", 			84000,false}, //+
	{2, 1304,	"Certificate Porsche Taycan", 			108000,false},//4
	{2, 1305,	"Certificate BMW I8", 					168000,false},//+
	{2, 0,		"Certificate Toyota Land Cruiser Prado", 240000,false},//4 //fbi rancher
	{2, 0,		"Certificate Toyota Land Cruiser VXR V8 4",288000,false},//4 //sultan
	{2, 1308,	"Certificate Mercedes-AMG G63 6x6", 			840000,false},//4 //bulet
	{2, 1309,	"Certificate Mercedes E-63 AMG", 			264000,false},//4
	{2, 1310,	"Certificate Audi Q7", 						276000,false},//4 //huntley
	{2, 1311,	"Certificate Toyota Supra A90", 				384000,false},//4 //fbi rancher
	{2, 1312,	"Certificate BMW M6 2020",					336000,false},//4 //sultan

	{0, 0, "", 0, false}, //free cell
	{3, 3112, 	"Hydraulics", 500000,false},
	{3, 1804,	"FuelTank (160L)", 500500,false, "160L"},
	{3, 1779, 	"Improved seat belt", 50000,false},
	{3, 1780, 	"Baggage", 50000,false},
	{3, 1455,	"Wrapped Spoiler (STOCK)",   	65000,false, "~r~PACK"},
	{3, 1456,	"Wrapped Spoiler (DUCKTAIL)",   				65000,false, "~r~PACK"},
	{3, 1457,	"Wrapped Spoiler (REAPER)",   	65000,false, "~r~PACK"},
	{3, 1458,	"Wrapped Spoiler (DAYTONA)",   				65000,false, "~r~PACK"},
	{3, 1459,	"Wrapped Spoiler (CURSE)",   	65000,false, "~r~PACK"},
	{3, 1460,	"Wrapped bonnet (FOUR-SLOT)",   				65000,false, "~r~PACK"},
	{3, 1461,	"Wrapped bonnet (SPEEDLINE)",   	65000,false, "~r~PACK"},
	{3, 1462,	"Wrapped bonnet (TREMOR)",   				65000,false, "~r~PACK"},
	{3, 1463,	"Wrapped bonnet (DOUBLE-V)",   	65000,false, "~r~PACK"},
	{3, 1464,	"Wrapped Exhaust (GRADIENT STOCK)",   	65000,false, "~r~PACK"},
	{3, 1465,	"Wrapped Exhaust (CARBON RING)",   				65000,false, "~r~PACK"},
	{3, 1466,	"Wrapped Exhaust (CARBON TWO)",   	65000,false, "~r~PACK"},
	{3, 1467,	"Wrapped Exhaust (GRADIENT TWO)",   				65000,false, "~r~PACK"},
	{3, 1468,	"Wrapped Exhaust (GRID)",   	65000,false, "~r~PACK"},
	{3, 1469,	"Kolenval (sport+)",   	650000,false},
	{3, 1470,	"Raspredval (sport+)",   	650000,false},
	{3, 1471,	"Turbokompressor (sport+)",   	650000,false},
	{3, 1472,	"Nagnetatel (sport+)",  	650000,false},
	{3, 1473,	"Chip-Tuning (STAGE 3)",   	650000,false},
	{3, 1474,	"Sceplenie (sport+)",   	650000,false},
	{3, 1475,	"KPP (sport+)",  	650000,false},
	{3, 1476,	"Differencial (sport+)",   	650000,false},
	{3, 1477,	"Podveska (sport+)",   	650000,false},
	{3, 1478,	"Tormoza (sport+)",  	650000,false},
	{3, 1479,	"Vinil-1",       65000,false},
	{3, 1480,	"Vinil-2",       65000,false},
	{3, 1481,	"Vinil-3",       65000,false},
	{3, 1482,	"Vinil-4",       65000,false},
	{3, 1483,	"Vinil-5",       65000,false},
	{3, 1484,	"Vinil-6",       65000,false},
	{3, 1485,	"Vinil-7",       65000,false},
	{3, 1486,	"Vinil-8",       65000,false},
	{3, 1487,	"Vinil-9",       65000,false},
	{3, 1488,	"Vinil-10",      65000,false},
	{3, 1489,	"Vinil-11",      65000,false},
	{3, 1490,	"Vinil-12",      65000,false},
	{3, 1491,	"Vinil-13",      65000,false},
	{3, 1492,	"Vinil-14",      65000,false},
	{3, 1493,	"Vinil-15",      65000,false},
	{3, 1494,	"Vinil-16",      65000,false},
	{3, 1495,	"Vinil-17",      65000,false},
	{3, 1496,	"Exhaust for Tornado (Slamin)",  65000,false},
	{3, 1497,	"Wheel (Type-1)",       65000,false},
	{3, 1498,	"Wheel (Type-2)",       65000,false},
	{3, 1499,	"Wheel (Type-3)",       65000,false},
	{3, 1500,	"Wheel (Type-4)",       65000,false},
	{3, 1501,	"Wheel (Type-5)",       65000,false},
	{3, 1502,	"Wheel (Type-6)",       65000,false},
	{3, 1503,	"Wheel (Type-7)",       65000,false},
	{3, 1504,	"Wheel (Type-8)",       65000,false},
	{3, 1505,	"Wheel (Type-9)",       65000,false},
	{3, 1506,	"Wheel (Type-10)",      65000,false},
	{3, 1507,	"Wheel (Type-11)",      65000,false},
	{3, 1508,	"Wheel (Type-12)",      65000,false},
	{3, 1509,	"Wheel (Type-13)",      65000,false},
	{3, 1510,	"Wheel (Type-14)",      65000,false},
	{3, 1511,	"Wheel (Type-15)",      65000,false},
	{3, 1512,	"Wheel (Type-16)",      65000,false},

	{0, 0, "", 0, false}, //free cell

	{4, 3104,	"obj39_sword_1",							500000,false},
	{4, 3098,	"obj39_pumpkin_1",						500000,false},
	{4, 3099,	"obj39_particle1",							500000,false},
	{4, 2244,	"Terra Orb",						500000,false},
	{4, 2245,	"Aqua sphere",							500000,false},
	{4, 2246,	"Fire Orb",							500000,false},
	{4, 2247,	"Sphere Air",						500000,false},

	{4, 3113,	"Nominal Estate",					3000000,false},
	{4, 3114,	"Sawnoff (active accessory)",		180000,false},
	{4, 1786,	"Fishing Rod",							90000,false},
	{4, 1643,	"Bumajnik",							55000,false},
	{4, 379,	"Samsung Galaxy S10 (White)",   	60000,false},//26
	{4, 390,	"iPhone X (White)",   				60000,false},//27
	{4, 1307, 	"Velosyped na spinu", 				1100000,false},//28
	{4, 1306, 	"Deltaplan na spinu", 				1100000,false},//28
	{4, 900, "Shovel", 					45000,false},//74
	{4, 5151, "Sovremennaya karta kaldov", 					50000,false},//74
	{4, 612, 	"Angelskoe Kolco (Head)", 		900000,false},//28
	{4, 613, 	"Molotok (spine)", 				195000,false},//29
	{4, 614, 	"Leyka (right thigh)", 		195000,false},//30
	{4, 615, 	"Foto pparat (chest)", 			195000,false},//31
	{4, 616, 	"Minigun (spine)", 				180000,false},//32
	{4, 617, 	"Flare (spine)", 				180000,false},//33
	{4, 618, 	"Scythe (spine)", 					180000,false},//34
	{4, 619, 	"Modification (Hallowen)", 			700000,false, "~r~HALLOWEN"},//35
	{4, 620, 	"Modification (Classic)", 			700000,false, "~y~CLASSIC"},//36
	{4, 621, 	"Modification (Future)", 			700000,false, "~y~FUTURE"},//37
	{4, 622, 	"Modification (CyberPunk)", 			800000,false, "~y~CYBERPUNK"},//38
	{4, 623, 	"Modification (Future Taxi)", 		800000,false, "~y~FUTURE~n~TAXI"},//39
	{4,	624, 	"Improvement for vehicle", 		400000,false},//40
	{4, 625,	"Chiken to left shoulder", 					80000,false},//41
	{4, 626, 	"Amulet", 							100000,false},//42
	{4, 627, 	"Parrot to left shoulder", 				70000,false},//43
	{4, 628, 	"Kolonka", 														650000,false},//44
	{4, 629, 	"Boombox", 											700000,false},//45
	{4, 630, 	"Skate", 														530000,false},//46
	{4, 631, 	"Board", 											490000,false},//47
	{4, 632, 	"Board", 							 				490000,false},//48
	{4, 633, 	"Board", 											490000,false},//49
	{4, 634, 	"Guitar (Red)", 					 				100000,false},//50
	{4, 635, 	"Guitar (White)", 										100000,false},//51
	{4, 636, 	"Guitar (Black)", 										100000,false},//52
	{4, 1781, 	"Nashivka na akcess(zashita)", 					500000,false},//52
	{4, 1782, 	"Nashivka na akcess(regenerachia)",  		500000,false},//52
	{4, 1783, 	"Nashivka na akcess(yron)", 						500000,false},//52
	{4, 1784, 	"Nashivka na akcess(ydacha)", 						500000,false},//52
	{4, 1785, 	"Nashivka na akcess(max. hp)", 				500000,false},//52
	{4, 637, 	"Shlyapa", 							 					100000,false},//53
	{4, 638, 	"Shlyapa", 													100000,false},//54
	{4, 639, 	"Bag (brown)", 									350000,false},//55
	{4, 640, 	"Red suitcase", 									450000,false},//56
	{4, 641, 	"Chainsaw on spine", 								500000,false},//57
	{4, 642,	"Vozdushnyy shar #1", 							1000000,false},//58
	{4, 643, 	"Vozdushnyy shar #2", 								1000000,false},//59
	{4, 644, 	"Vozdushnyy shar #3", 							1000000,false},//60
	{4, 645, 	"Vozdushnyy shar #4",							1000000,false},//61
	{4, 646, 	"Vozdushnyy shar #5", 							1000000,false},//62
	{4, 647, 	"Vozdushnyy shar #6", 							1000000,false},//63
	{4, 648, 	"Vozdushnyy shar #7", 							1000000,false},//64642,648
	{4, 772, 	"Combo \"Niger\"", 							800000,false},//65
	{4, 785, 	"Combo \"Palach\"", 							800000,false},//66
	{4, 773, 	"Combo \"Darth-Vader\"", 					800000,false},//67
	{4, 775, 	"Combo \"Sparta\"", 					800000,false},//68
	{4, 778, 	"Combo \"PUBG\"", 						800000,false},//69
	{4, 800,	"The machine on the radio remote", 				200000,false},//70
	{4, 801, 	"Airplane on the radio remote", 			200000,false},//71
	{4, 802, 	"Helicopter on Radio remote (1)", 	200000,false},//72
	{4, 804, "Helicopter on Radio remote (2)",	200000,false},//73
	{4, 805, 		"Tank on the radio remote", 					200000,false},//74
	{4, 649, "Portable stall (1)", 							150000,false},//74
	{4, 650, "Portable stall (2)", 					150000,false},//74
	{4, 651, "Portable stall (3)", 						150000,false},//74
	{4, 898, "Shashka taksi (zheltaya) [tuning detail]", 							450000,false},//74
	{4, 899, "Shashka taksi (chernyy-1) [tuning detail]", 					450000,false},//74
	{4, 900, "Shashka taksi (belyy) [tuning detail]", 						450000,false},//74
	{4, 901, "Shashka taksi (chernyy-2) [tuning detail]", 					450000,false},//74
	{4, 1789, "Super-kirka", 				120000,false},//74
	{4, 1790, "Super-grabli", 						85000,false},//74
	{4, 1791, "Fleshka Mainera", 					50000,false},//74
	{4, 1792, "Gryadka Cotton", 						15000,false},//74
	{4, 1793, "Gryadka Linen", 					15000,false},//74
	{4, 1794, "Gryadka Drugs", 						15000,false},//74
	{4, 1795, "Ruletochniy compas", 						15000,false},//74
	{4, 1796, "Hand of infinity", 						100500,false},//74
	{4, 1797, "Hammer of Thor", 						100500,false},//74
	{4, 1798, "Robocop head", 						100500,false},//74
	{4, 1799, "Five-prong", 					100500,false},//74
	{4, 1800, "Staff of ice", 					100500,false},//74
	{4, 1801, "Iron man helmet", 			100500,false},//74
	{4, 1788, "Russian battle ax", 						100500,false},//74
	{4, 1787, "Captain Americas Shield", 				100500,false},//74

	{0, 0, "", 0, false}, //free cell

	{5, 1400, 	"Skin: Sylvester Stallone (ID: 399)", 				120000,false},//28
	{5, 1401, 	"Skin: Thomas Shelby (ID: 400)", 				120000,false},//28
	{5, 1402, 	"Skin: Tom Hardy (ID: 401)", 			120000,false},//28
	{5, 1403, 	"Skin: Mike Tyson (ID: 402)", 			120000,false},//28
	{5, 1404, 	"Skin: Kanye West (ID: 403)", 			120000,false},//28
	{5, 1405, 	"Skin: Conor McGregor (ID: 404)", 			120000,false},//28
	{5, 1406, 	"Skin: John Travolta (ID: 405)", 				120000,false},//28
	{5, 1407, 	"Skin: George Clooney (ID: 406)", 				120000,false},//28
	{5, 1408, 	"Skin: Mark Zuckerberg (ID: 407)", 				120000,false},//28
	{5, 1409, 	"Skin: Dwayne Johnson (ID: 408)", 				120000,false},//28
	{5, 1410, 	"Skin: Nicolas Cage (ID: 409)", 			120000,false},//28
	{5, 1411, 	"Skin: Will Smith  (ID: 410)", 				120000,false},//28
	{5, 1412, 	"Skin: Aaron Paul (ID: 411)", 				120000,false},//28
	{5, 1413, 	"Skin: Bradley Cooper (ID: 412)", 			120000,false},//28
	{5, 1414, 	"Skin: Willem DeFo (ID: 413)", 		120000,false},//28
	{5, 1415, 	"Skin: Creeve Evans (ID: 414)", 			120000,false},//28
	{5, 1416, 	"Skin: Raina Gosling(ID: 415)", 			 	120000,false},//28
	{5, 1417, 	"Skin: Charlie Hunnam (ID: 416)", 				120000,false},//28
	{5, 1427, 	"Skin: Jackie Chan (ID: 427)", 			120000,false},//28

 	{5, 1429, 	"Skin: Matthew McConaughey (ID: 428)", 				120000,false},//28
	{5, 1430, 	"Skin: Matt Damon (ID: 429)", 			120000,false},//28
	{5, 1431, 	"Skin: Morgan Freeman (ID: 430)", 			120000,false},//28
	{5, 1432, 	"Skin: Channing Tatum (ID: 431)", 			120000,false},//28
	{5, 1433, 	"Skin: Paul Walker [Tribute] (ID: 432)", 		 	120000,false},//28
	{5, 1313, 	"Skin: Albert (ID: 312)", 			120000,false},//28
	{5, 1314, 	"Skin: Amiran  (ID: 313)", 			120000,false},//28
	{5, 1315, 	"Skin: Bathory (ID: 314)", 		 	120000,false},//28
	{5, 1316, 	"Skin: Brulyov (ID: 315)", 			120000,false},//28
	{5, 1317, 	"Skin: Egor Creed (ID: 316)", 	120000,false},//28
	{5, 1318, 	"Skin: Delorenzy (ID: 317)", 	120000,false},//28
	{5, 1319, 	"Skin: Edward Bil (ID: 318)", 	120000,false},//28
	{5, 1320, 	"Skin: Aljay (ID: 319)", 	120000,false},//28

	{5, 1321, 	"Skin: Eva Elfie (ID: 320)", 	120000,false},//28
	{5, 1322, 	"Skin: Feduk (ID: 321)", 	120000,false},//28
	{5, 1323, 	"Skin: Kovalevskiy (ID: 322)", 	120000,false},//28
	{5, 1324, 	"Skin: Litvin (ID: 323)", 	120000,false},//28
	{5, 1326, 	"Skin: MORGENSHTERN (ID: 325)", 	120000,false},//28
	{5, 1327, 	"Skin: Khabib Nurmagomedov (ID: 326)", 	120000,false},//28
	{5, 1328, 	"Skin: Oxxxymiron (ID: 327)", 	120000,false},//28
	{5, 1329, 	"Skin: DANTE (ID: 328)", 	120000,false},//28
	{5, 1330, 	"Skin: Ravyazan (ID: 329)", 	120000,false},//28
	{5, 1331, 	"Skin: Romeru (ID: 330)", 	120000,false},//28
	{5, 1332, 	"Skin: Sam Mason (ID: 331)", 	120000,false},//28
	{5, 1333, 	"Skin: Diana Shurygina (ID: 332)", 	120000,false},//28
	{5, 1334, 	"Skin: Farmer (ID: 333)", 	120000,false},//28
	{5, 1335, 	"Skin: Basta (ID: 334)", 	120000,false},//28
	{5, 1336, 	"Skin: Olga Buzova (ID: 335)", 	120000,false},//28
	{5, 1337, 	"Skin: Dzyuba (ID: 336)", 	120000,false},//28
	{5, 1338, 	"Skin: Ivan Urgant (ID: 337)", 	120000,false},//28
	{5, 1339, 	"Skin: Khovanskiy (ID: 338)", 	120000,false},//28
	{5, 1340, 	"Skin: Lukashenko (ID: 339)", 	120000,false},//28
	{5, 1341, 	"Skin: Madison (ID: 340)", 	120000,false},//28

	{5, 1342, 	"Skin: Noyce MC (ID: 341)", 	120000,false},//28
	{5, 1343, 	"Skin: Pasha Technician (ID: 342)", 	120000,false},//28
	{5, 1344, 	"Skin: Restaurateur (ID: 343)", 	120000,false},//28
	{5, 1345, 	"Skin: Richie (ID: 344)", 	120000,false},//28
	{5, 1346, 	"Skin: Sasha Gray (ID: 345)", 	120000,false},//28
	{5, 1347, 	"Skin: Yuri Dud (ID: 346)", 	120000,false},//28

	{5, 1376, 	"Skin: Bulk (ID: 375)", 	120000,false},//28
	{5, 1377, 	"Skin: Putin (ID: 376)", 	120000,false},//28
	{5, 1383, 	"Skin: Anonymous (ID: 382)", 	120000,false},//28

	{0, 0, "", 0, false}, //free cell
	{6, 1518,	"Tainik Lona Maska",					500000,false},//70
	{6, 1517,	"Nostalgy Box",					8500,false},//70
	{6, 1514,	"Laretz Super Car Box",					13000,false},//70
	{6, 1515,	"Laretz s premiei",						10000,false},//70
	{6, 1516,	"Super Car Box",						8500,false},//70
	{6, 1519,	"Super Moto Box",						8500,false},//70
	{6, 1087,	"Rare Box Yellow",						7500,false},//70
	{6, 1089,	"Rare Box Red",							7500,false},//71
	{6, 1088,	"Rare Box Blue",						7500,false},//72
	{6, 1513,	"Laretz Custom Accessories",			7500,false},//72

	{0, 0, "", 0, false} //free cell
};
new
	MPName[58+23] = "Чтобы попасть на Мероприятие, нужно написать /gotp в чат.",
	MPHealth,
	MPArmour,
	MPPlayerLimit = 100,
	MPPlayersLimit,
	MPTime = 60,
	MPTimeStatic = 60,
	MPWeapon,
	MPTeleport,
	Float:TeleportFloat[3],
	TeleportInfoq[2],
	bool:Teleport;
new Float:position_unjail[3];
new Float:r_wanted;
//=============================[ craft ]=================================//
new bool:Invent_CraftColorBoxCreated[MAX_PLAYERS];
new bool:CraftOpened[MAX_PLAYERS];
new bool:CraftColorOpened[MAX_PLAYERS];
new CraftTabSelect[MAX_PLAYERS];
new CraftItemSelect[MAX_PLAYERS];
new CraftPageSelect[MAX_PLAYERS];
new CraftAmount[MAX_PLAYERS];
new CraftWriteSlot[MAX_PLAYERS][2];
new CraftSelectColor[MAX_PLAYERS];
new CraftStart[MAX_PLAYERS];
new CraftTimer[MAX_PLAYERS];
enum crInfo
{
	CraftType,
	CraftItem,
	CraftChance,
	CraftNeed[5],
	CraftNeedAmount[5],
	CraftCost,
	CraftMax
};
new CraftInfo[][crInfo] =
{
	// Аксессуары
	{1, 1077, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1078, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1079, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1080, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1081, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1082, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1083, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1084, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1085, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1086, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1087, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1088, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1089, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 612, 5, {652, 653, 654, 1649, 1649}, {5, 25, 15, 0, 0}, 100000, 10},
	{1, 613, 6, {652, 653, 1649, 1649, 1649}, {5, 5, 0, 0, 0}, 50000, 10},
	{1, 767, 5, {652, 653, 1649, 1649, 1649}, {20, 5, 0, 0, 0}, 20000, 10},
	{1, 614, 6, {652, 653, 1649, 1649, 1649}, {5, 5, 0, 0, 0}, 70000, 10},
	{1, 615, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 500000, 10},
	{1, 617, 6, {652, 653, 365, 1649, 1649}, {5, 5, 10, 0, 0}, 40000, 10},
	{1, 618, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 700000, 10},
	{1, 625, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 626, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 800000, 10},
	{1, 627, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 350000, 10},
	{1, 628, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 629, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 630, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 631, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 632, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 633, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 634, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 635, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 636, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 637, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 638, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 639, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 640, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 641, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 642, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 643, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 644, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 645, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 646, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 647, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 648, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 649, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 650, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 651, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 656, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 800, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 801, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 802, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 766, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 769, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	// Скины
	{2, 11, 5, {652, 653, 365, 363, 1649}, {5, 10, 5, 10, 0}, 100000, 10},
	{2, 16, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 49, 5, {652, 653, 365, 363, 1649}, {5, 5, 5, 10, 0}, 100000, 10},
	{2, 57, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 61, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 70, 6, {652, 653, 365, 1649, 1649}, {5, 25, 5, 0, 0}, 100000, 10},
	{2, 86, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 104, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 102, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 106, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 103, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 105, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 107, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 110, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 109, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 113, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 115, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 114, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 120, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 147, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 149, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 153, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 155, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 158, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 159, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 162, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 163, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 168, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 178, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 203, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	// Chemistry
	{3, 411, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 515, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 420, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 406, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 462, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 481, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 488, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 519, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 520, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 523, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 522, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 539, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 544, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 545, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 556, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 557, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 588, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 601, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 596, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 597, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 1298, 25, {652, 653, 361, 1649, 1649}, {20, 20, 5, 0, 0}, 10000, 10},
	{3, 1297, 25, {652, 653, 361, 1649, 1649}, {20, 20, 5, 0, 0}, 10000, 10},
	//Working
	{4, 336, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 337, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 335, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 338, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 359, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 358, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 327, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	// Phone
	{5, 385, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 383, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 396, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 394, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10}
};
enum ahelpCMD
{
	nameCMD[5+13],
	descriptionCMD[10*5],
	adostupCMD,
	fdostupCMD
};
static const dahelp[][ahelpCMD] = {
	{"apanel", "Админ. панель", 1},
	{"tp", "Телепорт по фракциям", 1},
	{"tp_point", "Телепорт по точкам", 1},
	{"flip", "флипнуть", 1},
	{"jp", "Джетпак", 1},
	{"freeze", "Заморозить игрока", 1},
	{"unfreeze", " Разморозить игрока", 1},
	{"ot", "Ответ на репорт", 1},
	{"pm", "Сообщение игроку", 1},
	{"getwarn", "Наказания игрока", 1},
	{"a", "Админ. чат", 1},
	{"spplayer", "Заспавнить игрока", 1},
	{"re", "Следить за игроком", 1},
	{"goto", "Телепорт к игроку", 1},
	{"gotocar", "Телепорт к машине", 1},
	{"iwep", "проверить оружие игрока", 1},
	{"spawn", "Заспавниться", 1},
	{"gethere", "Телепортировать к себе игрока", 1},
	{"orgmembers", "Количество людей во фракциях", 1},
	{"check", "Статистика игрока", 1},
    {"showpilots", "Просмотр пилотов на работе", 1},
	{"checkpass", "Просмотр паспорта игрока", 1},
	{"checkinv", "Просмотр предметов игрока", 1},
	{"checkcarskill", "проверить навык вождения", 1},
	{"checkskills", "Проверить скиллы", 1},
	{"sethp", "Установить здоровье", 1},
	{"checklic", "Проверить лицензии", 1},
	{"gotohouse", "Телепорт к дому", 1},
	{"gotobiz", "Телепорт к бизнесу", 1},
	{"gototrailer", "телепорт к трейлеру", 1},
	{"checkpunish", "История наказаний", 1},
	{"getherecar", "Телепортировать к себе машину", 1},

	{"weap", "Забрать оружие", 2},
	{"smp", "Кричать на МП", 2},
	{"gotobanner", "Телепортироваться к банеру", 2},
	{"unjail", "Выпустить из деморгана", 2},
	{"jail", "Наказать игрока деморганом", 2},
	{"unmute", "Убрать бан чата", 2},
	{"spcar", "Заспавнить машину", 2},
	{"unfirewood", "Убрать костры", 2},
	{"kick", "Кикнуть игрока", 2},
	{"mute", "Выдать бан чата игроку", 2},
	{"checkbiz", "Проверить бизнес на деньги", 2},
	{"checkhouse", "Проверить дом", 2},
	{"checkfam", "Проверить семью на деньги", 2},
	{"findfam", "найти название семьи по ид", 2},
	{"adeldesc", "Удалить описание персонажа у игрока", 2},

	{"apunish", "Посадить игрока в КПЗ с отработкой", 3},
   	{"unban", "Разбанить игрока", 3},
   	{"eatall", "Выдать голод в радиусе", 3},
   	{"eventmenu", "Открыть эвент меню", 3},
   	{"plveh", "Выдать временную машину", 3},
   	{"weapall", "Удалить оружие в радиусе", 3},
   	{"bail", "Выпустить из кпз игрока", 3},
   	{"unwarn", "Убрать варн у игрока", 3},
   	{"unwarnoff", "Убрать варн у игрока в оффлайне", 3},
   	{"ban", "Выдать бан", 3},
   	{"warn", "Выдать варн", 3},
	{"swarn", "Выдать тихий варн", 6},
   	{"spcars", "Заспавнить машины в радиусе", 3},
   	{"repcars", "Отремонтировать машины в радиусе", 3},
   	{"spplayers", "Заспавнить игроков в радиусе", 3},
   	{"unbegall", "Убрать попрошаек в радиусе", 3},
   	{"freezeall", "Заморозить в радиусе", 3},
   	{"unfreezeall", "Разморозить в радиусе", 3},
   	{"accepttrade", "Снять ограничение на торгу", 3},
   	{"azakon", "Выдать игнор. звёзд в радиусе", 3},
   	{"hpall", "Выдать хп в радиусе", 3},
   	{"unarmourall", "Снять броню в радиусе", 3},
   	{"armourall", "Выдать броню в радиусе", 3},
   	{"gunall", "Выдать оружие в радиусе", 3},
   	{"givegun", "Выдать оружие", 3},
   	{"blacklistleader", "Черный список лидеров", 3},
   	{"trspawn", "Эвакуировать трейлер", 3},

	{"amember", "Принять себя в организацию", 4},
	{"aparkcar", "Отправить машину на штраф. стоянку и выдать штраф", 4},
	{"weather", "Изменить погоду", 4},
	{"makeleader", "Назначить лидером", 4},
	{"setgangzone", "Установить цвет зоны", 4},
	{"setbizmafia", "установить крышу бизнесу", 4},
	{"cleardemorgane", "Очистить попадание в деморган игроку", 4},
	{"sban", "Забанить тихо", 4},
	{"banip", "Забанить ИП", 7,1},
	{"unbanip", "Разбанить ИП", 6},
	{"jailoff", "Посадить игрока в деморган офф.", 4},
	{"warnoff", "Выдать варн офф.", 4},
	{"muteoff", "Выдать игроку мут офф.", 4},
	{"skick", "Тихо кикнуть", 4},
	{"setskin", "Выдать скин", 4},
	{"uval", "Уволить из фракции", 4},
	{"skinall", "Выдать скин в радиусе", 4},
	{"ao", "Общий чат", 4},
	{"unapunishoff", "выпустить с тюрьмы в офф.", 4},
	{"unjailoff", "выпустить с деморгана в офф.", 4},
	{"unmuteoff", "снять заглушку в офф.", 4},
	{"bizlock", "закрыть бизнес.", 4},
	{"bizopen", "открыть бизнес.", 4},
	{"clearp", "Очистить обьекты оружия на полу", 4},
	{"clearput", "Очистить обьекты ПД вокруг себя", 4},
	{"settime", "Установить время", 5},
	{"rasform", "Очистить зоны гетто/семьям", 5},
	{"changeadminint", "Изменить интерьер админов", 5},
	{"givemydonate", "Передать свой донат", 5},
	{"banipoff", "Забанить ип оффлайн", 5},
	{"banoff", "Забанить в оффлайне", 5},
	{"vote", "Выборы", 5},
	{"makeadminoff", "Изменить уровень адм. офф", 5},
	{"setname", "Сменить ник", 5},
	{"map", "Маппинг", 5},
	{"trremove", "Продать чужой трейлер", 5},
	{"clearbiz", "очистить заместителя в бизнесе", 5},
	{"clearhouse", "очистить список жильцов в доме", 5},
	{"removeitem", "Отобрать предмет в слоте игрока", 5},
	{"accepttrade", "Снять ограничение на торгу", 5},
	{"layoutoff", "Запретить/Разрешить проверку макетов", 5},

	{"checkhouses", "кол-во всего домов", 6},
	{"gotobillboard", "телепортироваться к баннеру", 6},
	{"wi", "узнать пространство", 6},
	{"delhname", "удалить описание дома", 6},
	{"delbname", "удалить описание бизнеса", 6},
	{"spcarsownable", "припарковать транспорта владельцев", 6},

	{"setrep", "Установить репутацию админу", 7, 2},
	{"updatesklad", "информация/пополнения склада", 7, 0},
	{"setadmtag", "обновить админ-тэг", 7, 0},
	{"sethousegarage", "добавить/убрать гараж", 7, 2},
	{"asellbiz", "продать бизнес игрока", 7, 2},
	{"asellhouse", "продать дом игрока", 7, 2},
	{"asellcar", "продать машину игрока", 7, 2},
	{"givemoney", "выдать вирты игроку", 7, 0},
	{"banip", "заблокировать по ip", 7, 1},
	{"banipoff", "заблокировать по ip в off", 7, 1},
	{"banoff", "заблокировать аккаунт", 7, 0},
	{"sbanoff", "тихая блокировка аккаунта", 7, 0},
	{"unawarn", "снять 1 выговор для адм", 7, 2},
 	{"setstat", "изменить статистику игрока", 7, 1},
 	{"giveitem", "выдать предмет игроку", 7, 1},
  	{"finditem", "поиск предмета", 7, 1},

	{"setrep", "Установить репутацию админу", 8, 2},
	{"serversettings", "Настройки сервера", 4, 2}
};
enum enumCraftPosition
{
    Float:craftX,
    Float:craftY,
    Float:craftZ,
    bool:craftHouse
}
static const CraftPosition[][enumCraftPosition] =
{
    {1089.8160, 949.3332, 1600.9935, true},
    {1108.0330, -1427.3765, 15.7969, false},
	{1108.0726, -1430.3044, 15.7969, false},
	{2637.8193,1169.8242,1038.1185, true},
	{1859.4562,2038.3524,1016.9329, true}
};
enum Barrier3DText
{
	Float:BPosX,
	Float:BPosY,
	Float:BPosZ,
};
new BPosition[][Barrier3DText] =
{
	{58.2267,-1536.8701,5.0642},
	{60.3254,-1521.5333,5.0907},
	{1792.4559,811.2030,10.9180},
	{1808.1421,811.2032,10.9128}
};
static const viplevel_name[][] = {
	"Не имеется",
	"Bronze",
	"GOLD",
	"Платина",
	"Diamond",
	"Titan",
	"Premium",
	"ADD VIP"
};
//=============================[ Инвентарь ]=============================//
enum InvInfo
{
	ItemUID,
    ItemID,
	Float:ItemPosX,
	Float:ItemPosY,
	Float:ItemPosZ,
	Float:ItemPosC,
	ItemLCount,
	ItemName[34+25],
	ItemType,
	ItemColor,
	ItemView
};
/*
ItemView[type]
- 0 default
- 1 - 8 slot inv(так же с карами)
- 9 слот скина
- 10 слот сертификат
- 15 симка
*/
static const ItemsInfo[][InvInfo] =
{
    {0, 1649,    0.000000,    0.000000,   90.000000,    2.000000, 1, "", 0, 0, 0},
    {1, 1,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Truth (ID: 1)", 1, 0, 9},
    {2, 2,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Maccer (ID: 2)", 1, 0, 9},
    {3, 3,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Andre (ID: 3)", 1, 0, 9},
    {4, 4,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: \"Big Bear\" Thorne [Thin] (ID: 4)", 1, 0, 9},
    {5, 5,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Barry \"Big Bear\" Thorne [Big] (ID: 5)", 1, 0, 9},
    {6, 6,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Emmet (ID: 6)", 1, 0, 9},
    {7, 7,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Taxi Driver/Train Driver (ID: 7)", 1, 0, 9},
    {8, 8,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Janitor (ID: 8)", 1, 0, 9},
    {9, 9,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 9)", 1, 0, 9},
    {10, 10,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Old Woman (ID: 10)", 1, 0, 9},
    {11, 11,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: (ID: 11)", 1, 0, 9},
    {12, 12,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rich Woman (ID: 12)", 1, 0, 9},
    {13, 13,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Street Girl (ID: 13)", 1, 0, 9},
    {14, 14,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 14)", 1, 0, 9},
    {15, 15,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mr.Whittaker (RS Haul Owner) (ID: 15)", 1, 0, 9},
    {16, 16,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Airport Ground Worker (ID: 16)", 1, 0, 9},
    {17, 17,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnessman (ID: 17)", 1, 0, 9},
    {18, 18,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 18)", 1, 0, 9},
    {19, 19,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: DJ (ID: 19)", 1, 0, 9},
    {20, 20,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rich Guy (Madd Dogg's Manager) (ID: 20)", 1, 0, 9},
    {21, 21,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 21)", 1, 0, 9},
    {22, 22,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 22)", 1, 0, 9},
    {23, 23,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: BMXer (ID: 23)", 1, 0, 9},
    {24, 24,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Madd Dogg Bodyguard (ID: 24)", 1, 0, 9},
    {25, 25,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Madd Dogg Bodyguard (ID: 25)", 1, 0, 9},
    {26, 26,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Backpacker (ID: 26)", 1, 0, 9},
    {27, 27,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Construction Worker (ID: 27)", 1, 0, 9},
    {28, 28,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Drug Dealer (ID: 28)", 1, 0, 9},
    {29, 29,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Drug Dealer (ID: 29)", 1, 0, 9},
    {30, 30,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Drug Dealer (ID: 30)", 1, 0, 9},
    {31, 31,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 31)", 1, 0, 9},
    {32, 32,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 32)", 1, 0, 9},
    {33, 33,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant(ID: 33)", 1, 0, 9},
    {34, 34,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 34)", 1, 0, 9},
    {35, 35,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Gardener (ID: 35)", 1, 0, 9},
    {36, 36,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Golfer (ID: 36)", 1, 0, 9},
    {37, 37,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Golfer (ID: 37)", 1, 0, 9},
    {38, 38,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 38)", 1, 0, 9},
    {39, 39,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 39)", 1, 0, 9},
    {40, 40,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 40)", 1, 0, 9},
    {41, 41,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 41)", 1, 0, 9},
    {42, 42,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Jethro (ID: 42)", 1, 0, 9},
    {43, 43,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 43)", 1, 0, 9},
    {44, 44,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 44)", 1, 0, 9},
    {45, 45,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 45)", 1, 0, 9},
    {46, 46,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 46)", 1, 0, 9},
    {47, 47,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 47)", 1, 0, 9},
    {48, 48,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 48)", 1, 0, 9},
    {49, 49,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Snakehead (Da Nang) (ID: 49)", 1, 0, 9},
    {50, 50,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mechanic (ID: 50)", 1, 0, 9},
    {51, 51,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mountain Biker (ID: 51)", 1, 0, 9},
    {52, 52,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mountain Biker (ID: 52)", 1, 0, 9},
    {53, 53,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Unknown (ID: 53)", 1, 0, 9},
    {54, 54,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 54)", 1, 0, 9},
    {55, 55,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 55)", 1, 0, 9},
    {56, 56,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 56)", 1, 0, 9},
    {57, 57,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Ped (ID: 57)", 1, 0, 9},
    {58, 58,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Ped (ID: 58)", 1, 0, 9},
    {59, 59,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 59)", 1, 0, 9},
    {60, 60,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 60)", 1, 0, 9},
    {61, 61,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Pilot (ID: 61)", 1, 0, 9},
    {62, 62,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Colonel Fuhrberger (ID: 62)", 1, 0, 9},
    {63, 63,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 63)", 1, 0, 9},
    {64, 64,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 64)", 1, 0, 9},
    {65, 65,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Kendl Johnson (ID: 65)", 1, 0, 9},
    {66, 66,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Pool Player (ID: 66)", 1, 0, 9},
    {67, 67,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Pool Player (ID: 67)", 1, 0, 9},
    {68, 68,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Priest/Preacher (ID: 68)", 1, 0, 9},
    {69, 69,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 69)", 1, 0, 9},
    {70, 70,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Scientist (ID: 70)", 1, 0, 9},
    {71, 71,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Security Guard (ID: 71)", 1, 0, 9},
    {72, 72,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hippy (ID: 72)", 1, 0, 9},
    {73, 73,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hippy (ID: 73)", 1, 0, 9},
    {74, 74,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: CJ (ID: 74)", 1, 0, 9},
    {75, 75,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 75)", 1, 0, 9},
    {76, 76,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 76)", 1, 0, 9},
    {77, 77,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 77)", 1, 0, 9},
    {78, 78,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 78)", 1, 0, 9},
    {79, 79,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 79)", 1, 0, 9},
    {80, 80,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Boxer (ID: 80)", 1, 0, 9},
    {81, 81,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Boxer (ID: 81)", 1, 0, 9},
    {82, 82,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Black Elvis (ID: 82)", 1, 0, 9},
    {83, 83,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: White Elvis (ID: 83)", 1, 0, 9},
    {84, 84,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Blue Elvis (ID: 84)", 1, 0, 9},
    {85, 85,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 85)", 1, 0, 9},
    {86, 86,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ryder with robbery mask (ID: 86)", 1, 0, 9},
    {87, 87,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Stripper (ID: 87)", 1, 0, 9},
    {88, 88,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 88)", 1, 0, 9},
    {89, 89,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 89)", 1, 0, 9},
    {90, 90,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Jogger (ID: 90)", 1, 0, 9},
    {91, 91,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rich Woman (ID: 91)", 1, 0, 9},
    {92, 92,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rollerskater (ID: 92)", 1, 0, 9},
    {93, 93,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 93)", 1, 0, 9},
    {94, 94,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 94)", 1, 0, 9},
    {95, 95,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 95)", 1, 0, 9},
    {96, 96,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Jogger (ID: 96)", 1, 0, 9},
    {97, 97,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Lifeguard (ID: 97)", 1, 0, 9},
    {98, 98,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 98)", 1, 0, 9},
    {99, 99,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rollerskater (ID: 99)", 1, 0, 9},
    {100, 100,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Biker (ID: 100)", 1, 0, 9},
    {101, 101,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 101)", 1, 0, 9},
    {102, 102,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ballas (ID: 102)", 1, 0, 9},
    {103, 103,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ballas (ID: 103)", 1, 0, 9},
    {104, 104,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ballas (ID: 104)", 1, 0, 9},
    {105, 105,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Grove Street Families (ID: 105)", 1, 0, 9},
    {106, 106,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Grove Street Families (ID: 106)", 1, 0, 9},
    {107, 107,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Grove Street Families (ID: 107)", 1, 0, 9},
    {108, 108,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Vagos (ID: 108)", 1, 0, 9},
    {109, 109,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Vagos (ID: 109)", 1, 0, 9},
    {110, 110,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Vagos (ID: 110)", 1, 0, 9},
    {111, 111,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Russian Mafia (ID: 111)", 1, 0, 9},
    {112, 112,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Russian Mafia (ID: 112)", 1, 0, 9},
    {113, 113,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Russian Mafia (ID: 113)", 1, 0, 9},
    {114, 114,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Varios Los Aztecas (ID: 114)", 1, 0, 9},
    {115, 115,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Varios Los Aztecas (ID: 115)", 1, 0, 9},
    {116, 116,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Varios Los Aztecas (ID: 116)", 1, 0, 9},
    {117, 117,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Triad (ID: 117)", 1, 0, 9},
    {118, 118,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Triad (ID: 118)", 1, 0, 9},
    {119, 119,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Johhny Sindacco (ID: 119)", 1, 0, 9},
    {120, 120,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Triad Boss (ID: 120)", 1, 0, 9},
    {121, 121,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Da Nang Boy (ID: 121)", 1, 0, 9},
    {122, 122,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Da Nang Boy (ID: 122)", 1, 0, 9},
    {123, 123,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Da Nang Boy (ID: 123)", 1, 0, 9},
    {124, 124,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Mafia (ID: 124)", 1, 0, 9},
    {125, 125,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Mafia (ID: 125)", 1, 0, 9},
    {126, 126,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Mafia (ID: 126)", 1, 0, 9},
    {127, 127,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The Mafia (ID: 127)", 1, 0, 9},
    {128, 128,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 128)", 1, 0, 9},
    {129, 129,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 129)", 1, 0, 9},
    {130, 130,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 130)", 1, 0, 9},
    {131, 131,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 131)", 1, 0, 9},
    {132, 132,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 132)", 1, 0, 9},
    {133, 133,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm Inhabitant (ID: 133)", 1, 0, 9},
    {134, 134,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 134)", 1, 0, 9},
    {135, 135,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 135)", 1, 0, 9},
    {136, 136,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 136)", 1, 0, 9},
    {137, 137,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 137)", 1, 0, 9},
    {138, 138,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 138)", 1, 0, 9},
    {139, 139,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 139)", 1, 0, 9},
    {140, 140,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 140)", 1, 0, 9},
    {141, 141,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnesswoman (ID: 141)", 1, 0, 9},
    {142, 142,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Taxi Driver (ID: 142)", 1, 0, 9},
    {143, 143,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Crack Maker (ID: 143)", 1, 0, 9},
    {144, 144,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Crack Maker (ID: 144)", 1, 0, 9},
    {145, 145,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Crack Maker (ID: 145)", 1, 0, 9},
    {146, 146,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Crack Maker (ID: 146)", 1, 0, 9},
    {147, 147,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnessman (ID: 147)", 1, 0, 9},
    {148, 148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnesswoman (ID: 148)", 1, 0, 9},
    {149, 149,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Big Smoke Armored (ID: 149)", 1, 0, 9},
    {150, 150,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnesswoman (ID: 150)", 1, 0, 9},
    {151, 151,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 151)", 1, 0, 9},
    {152, 152,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 152)", 1, 0, 9},
    {153, 153,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Construction Worker (ID: 153)", 1, 0, 9},
    {154, 154,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Beach Visitor (ID: 154)", 1, 0, 9},
    {155, 155,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Well Stacked Pizza Worker (ID: 155)", 1, 0, 9},
    {156, 156,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Barber (ID: 156)", 1, 0, 9},
    {157, 157,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 157)", 1, 0, 9},
    {158, 158,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer (ID: 158)", 1, 0, 9},
    {159, 159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 159)", 1, 0, 9},
    {160, 160,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 160)", 1, 0, 9},
    {161, 161,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer (ID: 161)", 1, 0, 9},
    {162, 162,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 162)", 1, 0, 9},
    {163, 163,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Black Bouncer (ID: 163)", 1, 0, 9},
    {164, 164,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: White Bouncer (ID: 164)", 1, 0, 9},
    {165, 165,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: White MIB agent (ID: 165)", 1, 0, 9},
    {166, 166,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Black MIB agent (ID: 166)", 1, 0, 9},
    {167, 167,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cluckin' Bell Worker (ID: 167)", 1, 0, 9},
    {168, 168,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hotdog/Chilli Dog Vendor (ID: 168)", 1, 0, 9},
    {169, 169,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 169)", 1, 0, 9},
    {170, 170,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 170)", 1, 0, 9},
    {171, 171,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Blackjack Dealer (ID: 171)", 1, 0, 9},
    {172, 172,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Casino croupier (ID: 172)", 1, 0, 9},
    {173, 173,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Rifa (ID: 173)", 1, 0, 9},
    {174, 174,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Rifa (ID: 174)", 1, 0, 9},
    {175, 175,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Rifa (ID: 175)", 1, 0, 9},
    {176, 176,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Barber (ID: 176)", 1, 0, 9},
    {177, 177,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Barber (ID: 177)", 1, 0, 9},
    {178, 178,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Whore (ID: 178)", 1, 0, 9},
    {179, 179,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ammunation Salesman (ID: 179)", 1, 0, 9},
    {180, 180,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Tattoo Artist (ID: 180)", 1, 0, 9},
    {181, 181,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Punk (ID: 181)", 1, 0, 9},
    {182, 182,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab Driver (ID: 182)", 1, 0, 9},
    {183, 183,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 183)", 1, 0, 9},
    {184, 184,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 184)", 1, 0, 9},
    {185, 185,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 185)", 1, 0, 9},
    {186, 186,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 186)", 1, 0, 9},
    {187, 187,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Buisnessman (ID: 187)", 1, 0, 9},
    {188, 188,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 188)", 1, 0, 9},
    {189, 189,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Valet (ID: 189)", 1, 0, 9},
    {190, 190,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Barbara Schternvart (ID: 190)", 1, 0, 9},
    {191, 191,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Helena Wankstein (ID: 191)", 1, 0, 9},
    {192, 192,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Michelle Cannes (ID: 192)", 1, 0, 9},
    {193, 193,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Katie Zhan (ID: 193)", 1, 0, 9},
    {194, 194,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Millie Perkins (ID: 194)", 1, 0, 9},
    {195, 195,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Denise Robinson (ID: 195)", 1, 0, 9},
    {196, 196,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 196)", 1, 0, 9},
    {197, 197,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 197)", 1, 0, 9},
    {198, 198,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 198)", 1, 0, 9},
    {199, 199,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farm-Town inhabitant (ID: 199)", 1, 0, 9},
    {200, 200,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Hillbilly (ID: 200)", 1, 0, 9},
    {201, 201,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer (ID: 201)", 1, 0, 9},
    {202, 202,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer (ID: 202)", 1, 0, 9},
    {203, 203,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Karate Teacher (ID: 203)", 1, 0, 9},
    {204, 204,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Karate Teacher (ID: 204)", 1, 0, 9},
    {205, 205,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Burger Shot Cashier (ID: 205)", 1, 0, 9},
    {206, 206,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab Driver (ID: 206)", 1, 0, 9},
    {207, 207,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 207)", 1, 0, 9},
    {208, 208,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Su Xi Mu (Suzie) (ID: 208)", 1, 0, 9},
    {209, 209,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Noodle stand vendor (ID: 209)", 1, 0, 9},
    {210, 210,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Boating School Instructor (ID: 210)", 1, 0, 9},
    {211, 211,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Clothes shop staff (ID: 211)", 1, 0, 9},
    {212, 212,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 212)", 1, 0, 9},
    {213, 213,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Weird old man (ID: 213)", 1, 0, 9},
    {214, 214,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Waitress (Maria Latore) (ID: 214)", 1, 0, 9},
    {215, 215,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 215)", 1, 0, 9},
    {216, 216,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 216)", 1, 0, 9},
    {217, 217,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Clothes shop staff (ID: 217)", 1, 0, 9},
    {218, 218,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 218)", 1, 0, 9},
    {219, 219,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Rich Woman (ID: 219)", 1, 0, 9},
    {220, 220,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab Driver (ID: 220)", 1, 0, 9},
    {221, 221,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 221)", 1, 0, 9},
    {222, 222,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 222)", 1, 0, 9},
    {223, 223,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 223)", 1, 0, 9},
    {224, 224,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 224)", 1, 0, 9},
    {225, 225,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 225)", 1, 0, 9},
    {226, 226,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 226)", 1, 0, 9},
    {227, 227,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Buisnessman (ID: 227)", 1, 0, 9},
    {228, 228,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Ped (ID: 228)", 1, 0, 9},
    {229, 229,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oriental Ped (ID: 229)", 1, 0, 9},
    {230, 230,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 230)", 1, 0, 9},
    {231, 231,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 231)", 1, 0, 9},
    {232, 232,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 232)", 1, 0, 9},
    {233, 233,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 233)", 1, 0, 9},
    {234, 234,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab Driver (ID: 234)", 1, 0, 9},
    {235, 235,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 235)", 1, 0, 9},
    {236, 236,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 236)", 1, 0, 9},
    {237, 237,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 237)", 1, 0, 9},
    {238, 238,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 238)", 1, 0, 9},
    {239, 239,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Homeless (ID: 239)", 1, 0, 9},
    {240, 240,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: The D.A (ID: 240)", 1, 0, 9},
    {241, 241,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Afro-American (ID: 241)", 1, 0, 9},
    {242, 242,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mexican (ID: 242)", 1, 0, 9},
    {243, 243,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 243)", 1, 0, 9},
    {244, 244,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Stripper (ID: 244)", 1, 0, 9},
    {245, 245,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Prostitute (ID: 245)", 1, 0, 9},
    {246, 246,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Stripper (ID: 246)", 1, 0, 9},
    {247, 247,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Biker (ID: 247)", 1, 0, 9},
    {248, 248,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Biker (ID: 248)", 1, 0, 9},
    {249, 249,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Pimp (ID: 249)", 1, 0, 9},
    {250, 250,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 250)", 1, 0, 9},
    {251, 251,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Lifeguard (ID: 251)", 1, 0, 9},
    {252, 252,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Naked Valet (ID: 252)", 1, 0, 9},
    {253, 253,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Bus Driver (ID: 253)", 1, 0, 9},
    {254, 254,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Biker Drug Dealer (ID: 254)", 1, 0, 9},
    {255, 255,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Chauffeur (Limo Driver) (ID: 255)", 1, 0, 9},
    {256, 256,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Stripper (ID: 256)", 1, 0, 9},
    {257, 257,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Stripper (ID: 257)", 1, 0, 9},
    {258, 258,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Heckler (ID: 258)", 1, 0, 9},
    {259, 259,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Heckler (ID: 259)", 1, 0, 9},
    {260, 260,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Construction Worker (ID: 260)", 1, 0, 9},
    {261, 261,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab driver (ID: 261)", 1, 0, 9},
    {262, 262,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cab driver (ID: 262)", 1, 0, 9},
    {263, 263,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Normal Ped (ID: 263)", 1, 0, 9},
    {264, 264,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Clown (Ice-cream Van Driver) (ID: 264)", 1, 0, 9},
    {265, 265,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Officer Frank Tenpenny (Corrupt Cop) (ID: 265)", 1, 0, 9},
    {266, 266,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Officer Eddie Pulaski (Corrupt Cop) (ID: 266)", 1, 0, 9},
    {267, 267,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Officer Jimmy Hernandez (ID: 267)", 1, 0, 9},
    {268, 268,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Dwaine/Dwayne (ID: 268)", 1, 0, 9},
    {269, 269,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Melvin \"Big Smoke\" Harris (Mission)  (ID: 269)", 1, 0, 9},
    {270, 270,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Sean 'Sweet' Johnson (ID: 270)", 1, 0, 9},
    {271, 271,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Lance 'Ryder' Wilson (ID: 271)", 1, 0, 9},
    {272, 272,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Mafia Boss (ID: 272)", 1, 0, 9},
    {273, 273,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: T-Bone Mendez (ID: 273)", 1, 0, 9},
    {274, 274,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Paramedic (Emergency Medical Technician) (ID: 274)", 1, 0, 9},
    {275, 275,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Paramedic (Emergency Medical Technician) (ID: 275)", 1, 0, 9},
    {276, 276,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Paramedic (Emergency Medical Technician) (ID: 276)", 1, 0, 9},
    {277, 277,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Firefighter (ID: 277)", 1, 0, 9},
    {278, 278,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Firefighter (ID: 278)", 1, 0, 9},
    {279, 279,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Firefighter (ID: 279)", 1, 0, 9},
    {280, 280,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Police Officer (ID: 280)", 1, 0, 9},
    {281, 281,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Police Officer (ID: 281)", 1, 0, 9},
    {282, 282,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Las Venturas Police Officer (ID: 282)", 1, 0, 9},
    {283, 283,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: County Sheriff (ID: 283)", 1, 0, 9},
    {284, 284,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: LSPD Motorbike Cop (ID: 284)", 1, 0, 9},
    {285, 285,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: S.W.A.T Special Forces (ID: 285)", 1, 0, 9},
    {286, 286,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Federal Agent (ID: 286)", 1, 0, 9},
    {287, 287,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Andreas Army (ID: 287)", 1, 0, 9},
    {288, 288,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Desert Sheriff (ID: 288)", 1, 0, 9},
    {289, 289,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Zero (ID: 289)", 1, 0, 9},
    {290, 290,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ken Rosenberg (ID: 290)", 1, 0, 9},
    {291, 291,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Kent Paul (ID: 291)", 1, 0, 9},
    {292, 292,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Cesar Vialpando (ID: 292)", 1, 0, 9},
    {293, 293,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Jeffery \"OG Loc\" Martin/Cross (ID: 293)", 1, 0, 9},
    {294, 294,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Wu Zi Mu (Woozie) (ID: 294)", 1, 0, 9},
    {295, 295,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Michael Toreno (ID: 295)", 1, 0, 9},
    {296, 296,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Jizzy B. (ID: 296)", 1, 0, 9},
    {297, 297,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Madd Dogg (ID: 297)", 1, 0, 9},
    {298, 298,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Catalina (ID: 298)", 1, 0, 9},
    {299, 299,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Claude Speed (ID: 299)", 1, 0, 9},
    {300, 300,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Police Officer (ID: 300)", 1, 0, 9},
    {301, 301,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Police Officer (ID: 301)", 1, 0, 9},
    {302, 302,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Las Venturas Police Officer (ID: 302)", 1, 0, 9},
    {303, 303,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Police Officer (ID: 303)", 1, 0, 9},
    {304, 304,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Police Officer (ID: 304)", 1, 0, 9},
    {305, 305,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Las Venturas Police Officer (ID: 305)", 1, 0, 9},
    {306, 306,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Los Santos Police Officer (ID: 306)", 1, 0, 9},
    {307, 307,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Police Officer (ID: 307)", 1, 0, 9},
    {308, 308,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: San Fierro Paramedic (ID: 308)", 1, 0, 9},
    {309, 309,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Las Venturas Police Officer (ID: 309)", 1, 0, 9},
    {310, 310,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Country Sheriff (ID: 310)", 1, 0, 9},
    {311, 311,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Desert Sheriff (ID: 311)", 1, 0, 9},
    {312, 19918,  161.000000,  174.000000,  126.000000,    1.225234, 1, "Сундук рулетки", 2, 0, 312},
    {313, 1979,  264.000000,  178.000000,  189.000000,    1.845672, 4000, "Бронзовая рулетка", 2, 0, 0},
    {314, 1895,    0.000000,    0.000000,    0.000000,    1.934306, 4000, "Серебряная рулетка", 2, 0, 0},
    {315, 13646,  264.000000,  178.000000,  189.000000,    1.845672, 4000, "Золотая рулетка", 2, 0, 0},
    {316, 19057,  334.000000,    0.000000,  120.000000,    1.601668, 4000, "Подарок", 3, 0, 0},
    {317, 3025,  172.000000,  169.000000,  190.000000,    1.449426, 20, "Отмычка", 2, 0, 0},
    {318, 2894,   90.000000,    0.000000,  180.000000,    1.000000, 1, "Телефонная книга", 2, 0, 0},
    {319, 18875,  303.000000,  360.000000,  195.000000,    0.948904, 1, "Радио", 2, 0, 0},
    {320, 1924,  289.000000,    0.000000,  297.000000,    1.032325, 500000, "Фишки для казино", 3, 0, 0},
    {321, 19625,  -90.000000,    0.000000,   35.000000,    1.000000, 4000, "Сигареты", 2, 0, 0},
    {322, 19998,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Зажигалка", 4, 0, 0},
    {323, 1650,  360.000000,  360.000000,   11.000000,    1.100103, 5, "Канистра", 2, 0, 0},
    {324, 19627,  108.000000,    0.000000,  119.000000,    0.980185, 5, "Набор для починки", 2, 0, 0},
    {325, 1672,    0.000000,    0.000000,   90.000000,    1.000000, 5, "Баллончик с краской", 2, 0, 0},
    {326, 862,    0.000000,    5.000000,  333.000000,    1.256517, 4000, "Семена наркотиков", 3, 0, 0},
    {327, 2891,  331.000000,    0.000000,  133.000000,    1.204378, 4000, "Наркотики", 2, 0, 0},
    {328, 19843,  331.000000,    0.000000,  133.000000,    1.204378, 4000, "Материалы", 4, 0, 0},
    {329, 2663,    0.000000,    5.000000,  333.000000,    1.256517, 4000, "Чипсы", 2, 0, 0},
    {330, 2601,  333.000000,   12.000000,  286.000000,    0.928049, 4000, "Спранк", 2, 0, 0},
    {331, 1486,  333.000000,   12.000000,  286.000000,    0.928049, 4000, "Пиво", 2, 0, 0},
    {332, 11748,  267.000000,  345.000000,   20.000000,    1.032325, 4000, "Скрепки", 2, 0, 0},
    {333, 19801,  360.000000,  360.000000,  121.000000,    0.823773, 5, "Маска", 2, 0, 0},
    {334, 1242,  360.000000,  360.000000,    8.000000,    0.980185, 5, "Бронежилет", 2, 0, 0},
    {335, 2894,  139.000000,  187.000000,  134.000000,    1.068819, 4000, "Рецепт от врача", 4, 0, 0},
    {336, 11738,    0.000000,  351.000000,  180.000000,    1.100103, 5, "Аптечка", 2, 0, 0},
    {337, 2709,    0.000000,    0.000000,    0.000000,    1.000000, 20, "Таблетки от наркозависимости", 2, 0, 0},
    {338, 19942,  360.000000,   33.000000,   94.000000,    0.928049, 5, "Яд", 2, 0, 0},
    {339, 18632,    0.000000,  350.000000,    0.000000,    1.220000, 1, "Удочка", 2, 0, 0},
    {340, 1554,    0.000000,  350.000000,  182.000000,    1.204378, 200, "Черви", 4, 0, 0},
    {341, 19613,  180.000000,  180.000000,    0.000000,    1.004171, 1, "Сундук рулетки (донат)", 2, 0, 341},
    {342, 411,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Infernus (Launch)", 2, -1518849281, 10},
    {343, 415,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cheetah (Launch)", 2, -1518849281, 10},
    {344, 402,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buffalo (Launch)", 2, -1518849281, 10},
    {345, 429,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Banshee (Launch)", 2, -1518849281, 10},
    {346, 541,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bullet (Launch)", 2, -1518849281, 10},
    {347, 480,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Comet (Launch)", 2, -1518849281, 10},
    {348, 506,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Super GT (Launch)", 2, -1518849281, 10},
    {349, 579,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Huntley (Launch)", 2, -1518849281, 10},
    {350, 451,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Turismo (Launch)", 2, -1518849281, 10},
    {351, 555,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Windsor (Launch)", 2, -1518849281, 10},
    {352, 559,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Jester (Launch)", 2, -1518849281, 10},
    {353, 560,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sultan (Launch)", 2, -1518849281, 10},
    {354, 562,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Elegy (Launch)", 2, -1518849281, 10},
    {355, 603,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Phoenix (Launch)", 2, -1518849281, 10},
    {356, 438,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cabbie (Launch)", 2, -1518849281, 10},
    {357, 19630,  169.000000,  169.000000,  190.000000,    1.006255, 10000, "Рыба", 3, 0, 0},
    {358, 19882,  172.000000,  169.000000,  190.000000,    0.740354, 10000, "Жареная рыба", 2, 0, 0},
    {359, 1314,  182.000000,  169.000000,  190.000000,    1.287799, 50000, "Семейный талон", 3, 0, 0},
    {360, 1463,  -45.000000,   10.000000,   30.000000,    0.899999, 10000, "Дрова", 3, 0, 0},
    {361, 3929,  236.000000,    0.000000,    0.000000,    1.558915, 10000, "Камень", 3, 0, 0},
    {362, 2936,  154.000000,   18.000000,  220.000000,    1.063606, 10000, "Металл", 3, 0, 0},
    {363, 16134,  236.000000,    0.000000,    0.000000,    1.558915, 10000, "Бронза", 3, 0, 0},
    {364, 17027,  251.000000,    0.000000,    0.000000,    1.392074, 10000, "Серебро", 3, 0, 0},
    {365, 19941,   29.000000,   18.000000,  220.000000,    1.256517, 10000, "Золото", 3, 0, 0},
    {366, 19522,    0.000000,    0.000000,  315.000000,    0.863399, 10000, "Гражданский талон", 3, 0, 0},
    {367, 18866,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Голубой)", 2, -589505281, 11},
    {368, 18874,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Белый)", 2, -589505281, 11},
    {369, 18872,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Синий)", 2, -589505281, 11},
    {370, 18871,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Зеленый)", 2, -589505281, 11},
    {371, 18867,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Красный)", 2, -589505281, 11},
    {372, 19513,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Серый)", 2, -589505281, 11},
    {373, 18865,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Оранжевый)", 2, -589505281, 11},
    {374, 18873,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Золотой)", 2, -589505281, 11},
    {375, 18869,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Розовый)", 2, -589505281, 11},
    {376, 18868,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Черный)", 2, -589505281, 11},
    {377, 18870,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Xiaomi Mi 8 (Темно красный)", 2, -589505281, 11},
    {378, 18866,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Голубой)", 2, -7601921, 11},
    {379, 18874,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Белый)", 2, -7601921, 11},
    {380, 18872,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Синий)", 2, -7601921, 11},
    {381, 18871,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Зеленый)", 2, -7601921, 11},
    {382, 18867,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Красный)", 2, -7601921, 11},
    {383, 19513,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Серый)", 2, -7601921, 11},
    {384, 18865,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Оранжевый)", 2, -7601921, 11},
    {385, 18873,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Золотой)", 2, -7601921, 11},
    {386, 18869,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Розовый)", 2, -7601921, 11},
    {387, 18868,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Черный)", 2, -7601921, 11},
    {388, 18870,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Samsung Galaxy S10 (Темно красный)", 2, -7601921, 11},
    {389, 18866,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Голубой)", 2, -1962934017, 11},
    {390, 18874,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Белый)", 2, -1962934017, 11},
    {391, 18872,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Синий)", 2, -1962934017, 11},
    {392, 18871,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Зеленый)", 2, -1962934017, 11},
    {393, 18867,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Красный)", 2, -1962934017, 11},
    {394, 19513,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Серый)", 2, -1962934017, 11},
    {395, 18865,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Оранжевый)", 2, -1962934017, 0},
    {396, 18873,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Золотой)", 2, -1962934017, 11},
    {397, 18869,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Розовый)", 2, -1962934017, 11},
    {398, 18868,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Черный)", 2, -1962934017, 11},
    {399, 18870,   90.000000,  180.000000,    0.000000,    1.000000, 1, "iPhone X (Темно красный)", 2, -1962934017, 11},
    {400, 400,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Landstalker", 2, 0, 10},
    {401, 401,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bravura", 2, 0, 10},
    {402, 402,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buffalo", 2, 0, 10},
    {403, 403,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Linerunner", 2, 0, 10},
    {404, 404,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Perenniel", 2, 0, 10},
    {405, 405,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sentinel", 2, 0, 10},
    {406, 406,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dumper", 2, 0, 10},
    {407, 407,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Firetruck", 2, 0, 10},
    {408, 408,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Trashmaster", 2, 0, 10},
    {409, 409,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Stretch", 2, 0, 10},
    {410, 410,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Manana", 2, 0, 10},
    {411, 411,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Infernus", 2, 0, 10},
    {412, 412,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Voodoo", 2, 0, 10},
    {413, 413,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Pony", 2, 0, 10},
    {414, 414,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mule", 2, 0, 10},
    {415, 415,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cheetah", 2, 0, 10},
    {416, 416,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ambulance", 2, 0, 10},
    {417, 417,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Leviathan", 2, 0, 10},
    {418, 418,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Moonbeam", 2, 0, 10},
    {419, 419,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Esperanto", 2, 0, 10},
    {420, 420,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Taxi", 2, 0, 10},
    {421, 421,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Washington", 2, 0, 10},
    {422, 422,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bobcat", 2, 0, 10},
    {423, 423,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mr Whoopee", 2, 0, 10},
    {424, 424,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BF Injection", 2, 0, 10},
    {425, 425,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Hunter", 2, 0, 10},
    {426, 426,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Premier", 2, 0, 10},
    {427, 427,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Enforcer", 2, 0, 10},
    {428, 428,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Securicar", 2, 0, 10},
    {429, 429,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Banshee", 2, 0, 10},
    {430, 430,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Predator", 2, 0, 10},
    {431, 431,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bus", 2, 0, 10},
    {432, 432,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rhino", 2, 0, 10},
    {433, 433,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Barracks", 2, 0, 10},
    {434, 434,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotknife", 2, 0, 10},
    {435, 435,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Article Trailer", 2, 0, 10},
    {436, 436,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Previon", 2, 0, 10},
    {437, 437,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Coach", 2, 0, 10},
    {438, 438,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cabbie", 2, 0, 10},
    {439, 439,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Stallion", 2, 0, 10},
    {440, 440,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rumpo", 2, 0, 10},
    {441, 441,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Машинка на радиоуправлении", 2, 0, 10},
    {442, 442,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Romero", 2, 0, 10},
    {443, 443,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Packer", 2, 0, 10},
    {444, 444,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Monster", 2, 0, 10},
    {445, 445,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Admiral", 2, 0, 10},
    {446, 446,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Squallo", 2, 0, 10},
    {447, 447,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Seasparrow", 2, 0, 10},
    {448, 448,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Pizzaboy", 2, 0, 10},
    {449, 449,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tram", 2, 0, 10},
    {450, 450,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Article Trailer 2", 2, 0, 10},
    {451, 451,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Turismo", 2, 0, 10},
    {452, 452,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Speeder", 2, 0, 10},
    {453, 453,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Reefer", 2, 0, 10},
    {454, 454,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tropic", 2, 0, 10},
    {455, 455,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Flatbed", 2, 0, 10},
    {456, 456,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Yankee", 2, 0, 10},
    {457, 457,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Caddy", 2, 0, 10},
    {458, 458,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Solair", 2, 0, 10},
    {459, 459,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Berkley's RC Van", 2, 0, 10},
    {460, 460,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Skimmer", 2, 0, 10},
    {461, 461,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: PCJ-600", 2, 0, 10},
    {462, 462,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Faggio", 2, 0, 10},
    {463, 463,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Freeway", 2, 0, 10},
    {464, 464,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Самолёт на радиоуправлении", 2, 0, 10},
    {465, 465,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Вертолёт на радиоуправлении (1)", 2, 0, 10},
    {466, 466,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Glendale", 2, 0, 10},
    {467, 467,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Oceanic", 2, 0, 10},
    {468, 468,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Sanchez", 2, 0, 10},
    {469, 469,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Sparrow", 2, 0, 10},
    {470, 470,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Patriot", 2, 0, 10},
    {471, 471,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Quad", 2, 0, 10},
    {472, 472,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Coastguard", 2, 0, 10},
    {473, 473,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dinghy", 2, 0, 10},
    {474, 474,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hermes", 2, 0, 10},
    {475, 475,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sabre", 2, 0, 10},
    {476, 476,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Rustler", 2, 0, 10},
    {477, 477,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: ZR-350", 2, 0, 10},
    {478, 478,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Walton", 2, 0, 10},
    {479, 479,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Regina", 2, 0, 10},
    {480, 480,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Comet", 2, 0, 10},
    {481, 481,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMX", 2, 0, 10},
    {482, 482,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Burrito", 2, 0, 10},
    {483, 483,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Camper", 2, 0, 10},
    {484, 484,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Marquis", 2, 0, 10},
    {485, 485,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Baggage", 2, 0, 10},
    {486, 486,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dozer", 2, 0, 10},
    {487, 487,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Maverick", 2, 0, 10},
    {488, 488,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: SAN News Maverick", 2, 0, 10},
    {489, 489,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rancher", 2, 0, 10},
    {490, 490,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: FBI Rancher", 2, 0, 10},
    {491, 491,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Virgo", 2, 0, 10},
    {492, 492,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Greenwood", 2, 0, 10},
    {493, 493,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Jetmax", 2, 0, 10},
    {494, 494,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotring Racer", 2, 0, 10},
    {495, 495,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sandking", 2, 0, 10},
    {496, 496,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Blista Compact", 2, 0, 10},
    {497, 497,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Police Maverick", 2, 0, 10},
    {498, 498,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Boxville", 2, 0, 10},
    {499, 499,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Benson", 2, 0, 10},
    {500, 500,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mesa", 2, 0, 10},
    {501, 501,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Вертолёт на радиоуправлении (2)", 2, 0, 10},
    {502, 502,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotring Racer", 2, 0, 10},
    {503, 503,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotring Racer", 2, 0, 10},
    {504, 504,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bloodring Banger", 2, 0, 10},
    {505, 505,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rancher", 2, 0, 10},
    {506, 506,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Super GT", 2, 0, 10},
    {507, 507,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Elegant", 2, 0, 10},
    {508, 508,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Journey", 2, 0, 10},
    {509, 509,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bike", 2, 0, 10},
    {510, 510,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mountain Bike", 2, 0, 10},
    {511, 511,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Beagle", 2, 0, 10},
    {512, 512,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Cropduster", 2, 0, 10},
    {513, 513,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Stuntplane", 2, 0, 10},
    {514, 514,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tanker", 2, 0, 10},
    {515, 515,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Roadtrain", 2, 0, 10},
    {516, 516,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nebula", 2, 0, 10},
    {517, 517,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Majestic", 2, 0, 10},
    {518, 518,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buccaneer", 2, 0, 10},
    {519, 519,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Shamal", 2, 0, 10},
    {520, 520,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Hydra", 2, 0, 10},
    {521, 521,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: FCR-900", 2, 0, 10},
    {522, 522,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: NRG-500", 2, 0, 10},
    {523, 523,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: HPV1000", 2, 0, 10},
    {524, 524,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Cement Truck", 2, 0, 10},
    {525, 525,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Towtruck", 2, 0, 10},
    {526, 526,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Fortune", 2, 0, 10},
    {527, 527,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cadrona", 2, 0, 10},
    {528, 528,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: FBI Truck", 2, 0, 10},
    {529, 529,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Willard", 2, 0, 10},
    {530, 530,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Forklift", 2, 0, 10},
    {531, 531,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tractor", 2, 0, 10},
    {532, 532,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Combine Harvester", 2, 0, 10},
    {533, 533,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Feltzer", 2, 0, 10},
    {534, 534,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Remington", 2, 0, 10},
    {535, 535,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Slamvan", 2, 0, 10},
    {536, 536,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Blade", 2, 0, 10},
    {537, 537,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Freight", 2, 0, 10},
    {538, 538,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Brownstreak", 2, 0, 10},
    {539, 539,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Vortex", 2, 0, 10},
    {540, 540,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Vincent", 2, 0, 10},
    {541, 541,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bullet", 2, 0, 10},
    {542, 542,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Clover", 2, 0, 10},
    {543, 543,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sadler", 2, 0, 10},
    {544, 544,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Firetruck LA", 2, 0, 10},
    {545, 545,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hustler", 2, 0, 10},
    {546, 546,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Intruder", 2, 0, 10},
    {547, 547,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Primo", 2, 0, 10},
    {548, 548,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Cargobob", 2, 0, 10},
    {549, 549,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tampa", 2, 0, 10},
    {550, 550,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sunrise", 2, 0, 10},
    {551, 551,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Merit", 2, 0, 10},
    {552, 552,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Utility Van", 2, 0, 10},
    {553, 553,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Nevada", 2, 0, 10},
    {554, 554,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Yosemite", 2, 0, 10},
    {555, 555,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Windsor", 2, 0, 10},
    {556, 556,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Monster A", 2, 0, 10},
    {557, 557,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Monster B", 2, 0, 10},
    {558, 558,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Uranus", 2, 0, 10},
    {559, 559,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Jester", 2, 0, 10},
    {560, 560,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sultan", 2, 0, 10},
    {561, 561,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Stratum", 2, 0, 10},
    {562, 562,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Elegy", 2, 0, 10},
    {563, 563,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Raindance", 2, 0, 10},
    {564, 564,  333.000000,    0.000000,   20.000000,    0.137850, 1, "Танк на радиоуправлении", 2, 0, 10},
    {565, 565,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Flash", 2, 0, 10},
    {566, 566,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tahoma", 2, 0, 10},
    {567, 567,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Savanna", 2, 0, 10},
    {568, 568,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bandito", 2, 0, 10},
    {569, 569,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Freight Flat Trailer", 2, 0, 10},
    {570, 570,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Streak Trailer", 2, 0, 10},
    {571, 571,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Картинг", 2, 0, 10},
    {572, 572,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mower", 2, 0, 10},
    {573, 573,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dune", 2, 0, 10},
    {574, 574,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sweeper", 2, 0, 10},
    {575, 575,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Broadway", 2, 0, 10},
    {576, 576,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tornado", 2, 0, 10},
    {577, 577,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: AT400", 2, 0, 10},
    {578, 578,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: DFT-30", 2, 0, 10},
    {579, 579,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Huntley", 2, 0, 10},
    {580, 580,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Stafford", 2, 0, 10},
    {581, 581,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: BF-400", 2, 0, 10},
    {582, 582,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Newsvan", 2, 0, 10},
    {583, 583,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tug", 2, 0, 10},
    {584, 584,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Petrol Trailer", 2, 0, 10},
    {585, 585,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Emperor", 2, 0, 10},
    {586, 586,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Wayfarer", 2, 0, 10},
    {587, 587,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Euros", 2, 0, 10},
    {588, 588,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotdog", 2, 0, 10},
    {589, 589,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Club", 2, 0, 10},
    {590, 590,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Freight Box Trailer", 2, 0, 10},
    {591, 591,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Article Trailer 3", 2, 0, 10},
    {592, 592,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Andromada", 2, 0, 10},
    {593, 593,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Dodo", 2, 0, 10},
    {594, 594,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: RC Cam", 2, 0, 10},
    {595, 487,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сертификат: Maverick (PREMIUM)", 2, 0, 10},
    {596, 596,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police Car (LSPD)", 2, 0, 10},
    {597, 597,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police Car (SFPD)", 2, 0, 10},
    {598, 598,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police Car (LVPD)", 2, 0, 10},
    {599, 599,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police Ranger", 2, 0, 10},
    {600, 600,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Picador", 2, 0, 10},
    {601, 601,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police SF.", 2, 0, 10},
    {602, 602,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Alpha", 2, 0, 10},
    {603, 603,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Phoenix", 2, 0, 10},
    {604, 604,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Glendale Shit", 2, 0, 10},
    {605, 605,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sadler Shit", 2, 0, 10},
    {606, 606,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Baggage Trailer A", 2, 0, 10},
    {607, 607,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Baggage Trailer B", 2, 0, 10},
    {608, 608,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tug Stairs Trailer", 2, 0, 10},
    {609, 609,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Boxville", 2, 0, 10},
    {610, 610,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Farm Trailer", 2, 0, 10},
    {611, 611,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Utility Trailer", 2, 0, 10},
    {612, 19197,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Ангельское кольцо на голову", 1, 0, 1},
    {613, 18635,    0.000000,    0.000000,    0.000000,    0.864962, 1, "Молоток на спину", 1, 0, 6},
    {614, 19621,    0.000000,    0.000000,  203.000000,    0.993221, 1, "Канистра на правое бедро", 1, 0, 5},
    {615, 19623,    0.000000,    0.000000,  190.000000,    0.872784, 1, "Фотоаппарат на грудь", 1, 0, 3},
    {616, 362,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Миниган на спину", 1, 0, 6},
    {617, 361,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Огнемёт на спину", 1, 0, 6},
    {618, 2590,    0.000000,    0.000000,  241.000000,    0.965067, 1, "Коса на спину", 1, 0, 6},
    {619, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация Хэллоуин", 1, 0, 21},
    {620, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация Классик", 1, 0, 21},
    {621, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация Футуристик", 1, 0, 21},
    {622, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация Киберпанк", 1, 0, 21},
    {623, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация Футуретакси", 1, 0, 21},
    {624, 3096,    0.000000,    0.000000,    0.000000,    0.850000, 1, "Улучшение для автомобиля", 1, 0, 0},
    {625, 16776,    0.000000,    0.000000,  119.000000,    0.777372, 1, "Петух на плечо", 1, 0, 3},
    {626, 1276,    0.000000,    0.000000,  270.000000,    0.961938, 1, "Амулет", 1, 0, 6},
    {627, 19079,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Попугай на плечо", 1, 0, 3},
    {628, 2102,    0.000000,    0.000000,  193.000000,    0.872784, 1, "Колонка", 1, 0, 6},
    {629, 2226,    0.000000,    0.000000,  204.000000,    1.001042, 1, "Бумбокс (красный)", 1, 0, 6},
    {630, 19878,  220.000000,  146.000000,  156.000000,    1.001042, 1, "Скейт", 1, 0, 6},
    {631, 2404,    6.000000,  132.000000,  157.000000,    0.818561, 1, "Доска для сёрфа 1", 1, 0, 6},
    {632, 2405,    6.000000,  132.000000,  157.000000,    0.818561, 1, "Доска для сёрфа 2", 1, 0, 6},
    {633, 2406,    6.000000,  132.000000,  157.000000,    0.818561, 1, "Доска для сёрфа 3", 1, 0, 6},
    {634, 19317,  189.000000,  138.000000,    0.000000,    0.959331, 1, "Гитара (Красная)", 1, 0, 6},
    {635, 19318,  189.000000,  138.000000,    0.000000,    0.959331, 1, "Гитара (Белая)", 1, 0, 6},
    {636, 19319,  189.000000,  138.000000,    0.000000,    0.959331, 1, "Гитара (Черная)", 1, 0, 6},
    {637, 19487,    0.000000,  348.000000,  137.000000,    0.802918, 1, "Шляпа (Цилиндр)", 1, 0, 1},
    {638, 19352,    0.000000,  348.000000,  137.000000,    0.802918, 1, "Шляпа", 1, 0, 1},
    {639, 19624,  160.000000,  186.000000,  170.000000,    0.881125, 1, "Чемодан (коричневый)", 1, 0, 8},
    {640, 19921,  270.000000,    0.000000,    0.000000,    1.304483, 1, "Красный чемодан", 1, 0, 8},
    {641, 341,    0.000000,    0.000000,  112.000000,    2.368091, 1, "Бензопила на спину", 1, 0, 6},
    {642, 19332,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #1", 1, -1540214017, 5},
    {643, 19333,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #2", 1, -1540214017, 5},
    {644, 19334,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #3", 1, -1540214017, 5},
    {645, 19335,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #4", 1, -1540214017, 5},
    {646, 19336,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #5", 1, -1540214017, 5},
    {647, 19337,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #6", 1, -1540214017, 5},
    {648, 19338,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Воздушный шар #7", 1, -1540214017, 5},
    {649, 1212,   71.000000,   21.000000,   90.000000,    0.818039, 1, "Переносной ларек (1)", 1, -1540214017, 5},
    {650, 1575,   80.000000,  203.000000,   89.000000,    1.162147, 1, "Переносной ларек (2)", 1, -1540214017, 5},
    {651, 19636,  248.000000,  331.000000,    0.000000,    1.162147, 1, "Переносной ларек (3)", 1, -1540214017, 5},
    {652, 871,  334.000000,    0.000000,    0.000000,    1.188737, 200, "Лён", 3, 0, 0},
    {653, 826,  328.000000,    0.000000,  222.000000,    1.303441, 4000, "Хлопок", 3, 0, 0},
    {654, 1254,  173.000000,  175.000000,   17.000000,    1.183524, 4000, "Череп", 3, 0, 0},
    {655, 2060,  114.000000,  162.000000,  189.000000,    1.225234, 60, "Ингредиенты", 3, 0, 0},
    {656, 11745,    0.000000,    0.000000,   90.000000,    1.000000, 1, "Сумка для ноутбука", 1, 0, 8},
    {657, 1288,  180.000000,   90.000000,    0.000000,    0.930656, 1, "Наклейка 'Суприм'", 1, 0, 0},
    {658, 1649,    0.000000,    0.000000,   90.000000,    2.000000, 1, "Twin Turbo", 1, 0, 21},
    {659, 19421,   90.000000,    0.000000,    0.000000,    0.915014, 1, "Наушники", 1, 0, 5},
    {660, 19422,   90.000000,    0.000000,    0.000000,    0.915014, 1, "Наушники", 1, 0, 5},
    {661, 19423,   90.000000,    0.000000,    0.000000,    0.915014, 1, "Наушники", 1, 0, 5},
    {662, 19424,   90.000000,    0.000000,    0.000000,    0.915014, 1, "Наушники", 1, 0, 5},
    {663, 19069,  334.000000,    0.000000,  113.000000,    0.627215, 1, "Шапка", 1, 0, 1},
    {664, 19068,  334.000000,    0.000000,  113.000000,    0.627215, 1, "Шапка", 1, 0, 1},
    {665, 19067,  334.000000,    0.000000,  113.000000,    0.627215, 1, "Шапка", 1, 0, 1},
    {666, 19554,  339.000000,  270.000000,    0.000000,    0.627215, 1, "Шапка (балас)", 1, 0, 1},
    {667, 18953,   56.000000,  312.000000,  100.000000,    0.685087, 1, "Теплая шапка", 1, 0, 1},
    {668, 18954,   56.000000,  312.000000,  100.000000,    0.685087, 1, "Теплая шапка", 1, 0, 1},
    {669, 18968,    0.000000,    0.000000,   90.000000,    0.603752, 1, "Панамка", 1, 0, 1},
    {670, 18967,    0.000000,    0.000000,   90.000000,    0.603752, 1, "Панамка", 1, 0, 1},
    {671, 18969,    0.000000,    0.000000,   90.000000,    0.603752, 1, "Панамка", 1, 0, 1},
    {672, 18955,    0.000000,    0.000000,  128.000000,    0.603752, 1, "Кепка обратная", 1, 0, 1},
    {673, 18956,    0.000000,    0.000000,  128.000000,    0.603752, 1, "Кепка обратная", 1, 0, 1},
    {674, 18957,    0.000000,    0.000000,  128.000000,    0.603752, 1, "Кепка обратная", 1, 0, 1},
    {675, 18959,    0.000000,    0.000000,  128.000000,    0.603752, 1, "Кепка обратная", 1, 0, 1},
    {676, 18926,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {677, 18927,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {678, 18928,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {679, 18929,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {680, 18930,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {681, 18931,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {682, 18932,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {683, 18933,   85.000000,  308.000000,  113.000000,    0.735140, 1, "Кепка передняя", 1, 0, 1},
    {684, 19104,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {685, 19105,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {686, 19106,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {687, 19107,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {688, 19108,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {689, 19109,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска", 1, 0, 1},
    {690, 18925,   93.000000,  209.000000,  110.000000,    0.750782, 1, "Берет", 1, 0, 1},
    {691, 18922,   93.000000,  209.000000,  110.000000,    0.750782, 1, "Берет", 1, 0, 1},
    {692, 18923,   93.000000,  209.000000,  110.000000,    0.750782, 1, "Берет", 1, 0, 1},
    {693, 18924,   93.000000,  209.000000,  110.000000,    0.750782, 1, "Берет", 1, 0, 1},
    {694, 18921,   93.000000,  209.000000,  110.000000,    0.750782, 1, "Берет", 1, 0, 1},
    {695, 19011,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {696, 19012,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {697, 19013,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {698, 19014,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {699, 19015,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {700, 19016,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {701, 19017,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {702, 19018,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {703, 19019,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {704, 19024,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {705, 19027,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {706, 19028,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {707, 19029,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {708, 19022,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {709, 19035,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {710, 19031,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {711, 19032,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {712, 19033,    0.000000,    0.000000,   90.000000,    0.778936, 1, "Очки", 1, 0, 2},
    {713, 19519,  109.000000,  180.000000,  110.000000,    0.750782, 1, "Парик", 1, 0, 1},
    {714, 19274,  109.000000,  180.000000,  110.000000,    0.750782, 1, "Парик", 1, 0, 1},
    {715, 18911,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {716, 18912,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {717, 18913,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {718, 18914,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {719, 18915,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {720, 18916,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {721, 18917,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {722, 18918,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {723, 18919,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {724, 18920,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {725, 18910,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {726, 18909,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {727, 18908,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {728, 18907,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {729, 18906,    0.000000,    0.000000,  315.000000,    1.508000, 1, "Бандана", 1, 0, 4},
    {730, 18947,   75.000000,   77.000000,  115.000000,    0.750782, 1, "Шляпа", 1, 0, 1},
    {731, 18948,   75.000000,   77.000000,  115.000000,    0.750782, 1, "Шляпа", 1, 0, 1},
    {732, 18949,   75.000000,   77.000000,  115.000000,    0.750782, 1, "Шляпа", 1, 0, 1},
    {733, 18950,   75.000000,   77.000000,  115.000000,    0.750782, 1, "Шляпа", 1, 0, 1},
    {734, 18951,   75.000000,   77.000000,  115.000000,    0.750782, 1, "Шляпа", 1, 0, 1},
    {735, 18970,    0.000000,    4.000000,  259.000000,    0.782064, 1, "Шляпа", 1, 0, 1},
    {736, 18973,    0.000000,    4.000000,  259.000000,    0.782064, 1, "Шляпа", 1, 0, 1},
    {737, 18972,    0.000000,    4.000000,  259.000000,    0.782064, 1, "Шляпа", 1, 0, 1},
    {738, 18971,    0.000000,    4.000000,  259.000000,    0.782064, 1, "Шляпа", 1, 0, 1},
    {739, 19042,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {740, 19041,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {741, 19040,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {742, 19039,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {743, 19043,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {744, 19044,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {745, 19045,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {746, 19046,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {747, 19048,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {748, 19049,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {749, 19050,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {750, 19051,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {751, 19053,  335.000000,  274.000000,    0.000000,    0.678831, 1, "Часы", 1, 0, 3},
    {752, 3026,   30.000000,  178.000000,  164.000000,    1.100103, 1, "Рюкзак", 1, 0, 6},
    {753, 371,  191.000000,  178.000000,  164.000000,    1.178310, 1, "Рюкзак", 1, 0, 6},
    {754, 19559,   15.000000,  352.000000,  158.000000,    0.933263, 1, "Рюкзак", 1, 0, 6},
    {755, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса", 1, 0, 4},
    {756, 19472,  182.000000,  190.000000,  259.000000,    1.001042, 1, "Респиратор", 1, 0, 4},
    {757, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на авто", 3, 0, 27},
    {758, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на мото", 3, 0, 27},
    {759, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на полёты", 3, 0, 27},
    {760, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на плавание", 3, 0, 27},
    {761, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на ловлю рыбы", 3, 0, 27},
    {762, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на оружие", 3, 0, 27},
    {763, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на охоту", 3, 0, 27},
    {764, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса", 1, 1562102527, 4},
    {765, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса", 1, 6684927, 4},
    {766, 19314,   89.000000,   85.000000,    0.000000,    1.131386, 1, "Рога", 1, 0, 1},
    {767, 18952,   87.000000,  258.000000,   90.000000,    0.683003, 1, "Шлем для бокса", 1, 0, 1},
    {768, 11704,  337.000000,    0.000000,  200.000000,    0.882167, 1, "Голова дьявола", 1, 1817982975, 2},
    {769, 18637,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Щит", 1, 0, 6},
    {770, 2985,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Экзоскелет", 1, 0, 6},
    {771, 953,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крылья Устрицы", 1, 0, 6},
    {772, 19339,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Модификация Негр c гробом", 1, 869059839, 12},
    {773, 324,  180.000000,  180.000000,   90.000000,    0.699998, 1, "Модификация Дарт Вейдер", 1, 869059839, 12},
    {774, 19517,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Ангел", 1, 869059839, 12},
    {775, 3471,    0.000000,    0.000000,   90.000000,    0.735140, 1, "Модификация Спарта", 1, 869059839, 12},
    {776, 19528,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Киборг", 1, 869059839, 12},
    {777, 3524,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Череп", 1, 869059839, 12},
    {778, 19581,  124.000000,    0.000000,  212.000000,    0.728883, 1, "Модификация Пабг", 1, 869059839, 12},
    {779, 1108,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Смерть", 1, 869059839, 12},
    {780, 18688,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Демон с крыльями", 1, 869059839, 12},
    {781, 3528,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Дракоша", 1, 869059839, 12},
    {782, 3100,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Соник", 1, 869059839, 12},
    {783, 11700,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Химик", 1, 869059839, 12},
    {784, 19577,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Дэдпул", 1, 869059839, 12},
    {785, 18642,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Палач", 1, 869059839, 12},
    {786, 19202,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Демон", 1, 869059839, 12},
    {787, 18879,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация Модный Джек", 1, 869059839, 12},
    {788, 19063,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Модификация Праздник", 1, 869059839, 12},
    {789, 19993,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Модификация Спанч Боб", 1, 869059839, 12},
    {790, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса(красная)", 1, -1728052993, 4},
    {791, 19792,   90.000000,  180.000000,    0.000000,    1.209071, 200, "Сим карта", 2, 0, 256},
    {792, 2814,  -30.000000,    0.000000,    0.000000,    1.000000, 200, "Пицца", 2, 0, 0},
    {793, 2768,    0.000000,    0.000000,  110.000000,    1.000000, 200, "Бургер", 2, 0, 0},
    {794, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 0, 0},
    {795, 341,    0.000000,    0.000000,   69.000000,    1.512513, 1, "Бензопила", 2, 0, 0},
    {796, 2680,    0.000000,    0.000000,  158.000000,    0.752345, 1, "Замок для велосипеда", 2, 0, 0},
    {797, 19623,    0.000000,    0.000000,  190.000000,    0.872784, 4000, "Фотоаппарат", 2, 0, 0},
    {798, 325,    0.000000,    0.000000,  116.000000,    2.002084, 1, "Цветы", 2, 0, 0},
    {799, 19900,  -30.000000,    0.000000,  130.000000,    1.200000, 1, "Домкрат", 2, 0, 0},
    {800, 441,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Машинка на радиоуправлении", 1, 0, 3},
    {801, 464,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Самолёт на радиоуправлении", 1, 0, 3},
    {802, 465,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Вертолёт на радиоуправлении (1)", 1, 0, 3},
    {803, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация LAUNCH", 1, 0, 21},
    {804, 501,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Вертолёт на радиоуправлении (2)", 1, 0, 3},
    {805, 564,  333.000000,    0.000000,   27.000000,    0.337850, 1, "Танк на радиоуправлении (1)", 1, 0, 3},
    {806, 1274,    0.000000,    0.000000,    0.000000,    1.000000, 10000, "Талон AZ Coins", 2, 0, 0},
    {807, 1277,    0.000000,    0.000000,    0.000000,    1.000000, 500, "Талон EXP", 2, 0, 0},
    {808, 19780,  270.000000,    0.000000,  180.000000,    0.750782, 1, "Военный билет", 3, 0, 0},
    {809, 1212,   90.000000,  180.000000,    0.000000,    1.000000, 100000, "Евро", 3, 1116140799, 0},
    {810, 1575,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(белый)", 1, 0, 20},
    {811, 1576,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(оранж)", 1, 0, 20},
    {812, 1577,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(желтый)", 1, 0, 20},
    {813, 1578,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(зеленый)", 1, 0, 20},
    {814, 1579,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(синий)", 1, 0, 20},
    {815, 1580,   78.000000,    0.000000,   85.000000,    0.907194, 1, "Турестический рюкзак(красный)", 1, 0, 20},
    {816, 1254,    0.000000,    0.000000,    0.000000,    0.963503, 1, "Наклейка череп", 1, 0, 20},
    {817, 1111,  316.000000,    0.000000,    0.000000,    0.803961, 1, "Накладка на бензобак #1", 1, 0, 20},
    {818, 1112,  347.000000,    0.000000,  317.000000,    0.803961, 1, "Накладка на бензобак #2", 1, 0, 20},
    {819, 1018,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {820, 1019,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {821, 1020,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {822, 1022,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {823, 1124,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {824, 1125,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {825, 18647,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон красный", 1, 0, 20},
    {826, 18648,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон синий", 1, 0, 20},
    {827, 18649,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон зеленый", 1, 0, 20},
    {828, 18650,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон желтый", 1, 0, 20},
    {829, 18651,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон розовый", 1, 0, 20},
    {830, 18652,  270.000000,    0.000000,   90.000000,    1.000000, 1, "Неон  белый", 1, 0, 20},
    {831, 1210,    0.000000,    0.000000,    0.000000,    0.721063, 1, "Чемодан", 1, 0, 20},
    {832, 1213,  324.000000,    0.000000,    0.000000,    0.963503, 1, "Мина", 1, 0, 20},
    {833, 1240,    0.000000,    0.000000,    0.000000,    0.764859, 1, "Сердце", 1, 0, 20},
    {834, 1247,    0.000000,    0.000000,    0.000000,    0.861835, 1, "Звезда", 1, 0, 20},
    {835, 1253,    0.000000,    0.000000,    0.000000,    0.963503, 1, "Иконка съемки", 1, 0, 20},
    {836, 1272,    0.000000,    0.000000,    0.000000,    0.769550, 1, "Иконка дома", 1, 0, 20},
    {837, 1273,    0.000000,    0.000000,    0.000000,    0.769550, 1, "Иконка дома", 1, 0, 20},
    {838, 1274,    0.000000,    0.000000,    0.000000,    0.818039, 1, "Доллар", 1, 0, 20},
    {839, 1275,    0.000000,    0.000000,    0.000000,    0.763294, 1, "Одежда", 1, 0, 20},
    {840, 1276,    0.000000,    0.000000,  270.000000,    0.963503, 1, "Амулет", 1, 0, 20},
    {841, 1277,    0.000000,    0.000000,  180.000000,    0.686652, 1, "Дискета", 1, 0, 20},
    {842, 1313,    0.000000,    0.000000,  180.000000,    0.747653, 1, "Два черепа", 1, 0, 20},
    {843, 1314,    0.000000,    0.000000,  180.000000,    0.747653, 1, "Два человека", 1, 0, 20},
    {844, 1318,    0.000000,    0.000000,   90.000000,    0.827423, 1, "Стрелка", 1, 0, 20},
    {845, 1582,  314.000000,    0.000000,  260.000000,    0.950990, 1, "Пицца", 1, 0, 20},
    {846, 1583,    0.000000,    0.000000,    0.000000,    0.814911, 1, "Человек", 1, 0, 20},
    {847, 1584,    0.000000,    0.000000,    0.000000,    0.814911, 1, "Девушка с пестолетом", 1, 0, 20},
    {848, 1585,    0.000000,    0.000000,    0.000000,    0.814911, 1, "Девушка", 1, 0, 20},
    {849, 1593,    0.000000,    0.000000,   90.000000,    0.947862, 1, "Шипы", 1, 0, 20},
    {850, 1609,    0.000000,    0.000000,   39.000000,    0.947862, 1, "Черепаха", 1, 0, 20},
    {851, 1650,    1.000000,    0.000000,   39.000000,    0.947862, 1, "Канистра", 1, 0, 20},
    {852, 1654,  180.000000,    0.000000,   39.000000,    0.947862, 1, "Бомба", 1, 0, 20},
    {853, 1736,  180.000000,  180.000000,   22.000000,    0.947862, 1, "Олень с рогами", 1, 0, 20},
    {854, 1851,  158.000000,    0.000000,  131.000000,    1.027631, 1, "Игральный кубик", 1, 0, 20},
    {855, 1853,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {856, 1854,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {857, 1855,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {858, 1856,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {859, 1857,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {860, 1858,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {861, 1859,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {862, 1860,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {863, 1861,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {864, 1862,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {865, 1863,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {866, 1864,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {867, 1865,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {868, 1866,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {869, 1867,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {870, 1868,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {871, 1869,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {872, 1870,  161.000000,    0.000000,  131.000000,    1.027631, 1, "Одна фишка", 1, 0, 20},
    {873, 2404,    0.000000,   52.000000,  180.000000,    0.744525, 1, "Доска для сёрфинга", 1, 0, 20},
    {874, 2406,    0.000000,   52.000000,  180.000000,    0.744525, 1, "Доска для сёрфинга", 1, 0, 20},
    {875, 2410,    0.000000,   52.000000,  180.000000,    0.744525, 1, "Доска для сёрфинга", 1, 0, 20},
    {876, 2469,  344.000000,    0.000000,  145.000000,    0.863399, 1, "Cамолётик", 1, 0, 20},
    {877, 2510,  318.000000,    0.000000,  167.000000,    0.915014, 1, "Большой самолётик", 1, 0, 20},
    {878, 2690,  344.000000,    0.000000,  145.000000,    0.863399, 1, "Огнетушитель", 1, 0, 20},
    {879, 2726,  344.000000,    0.000000,  145.000000,    0.907194, 1, "Кальян", 1, 0, 20},
    {880, 2908,  277.000000,   79.000000,    0.000000,    0.603752, 1, "Голова зомби", 1, 0, 20},
    {881, 2914,    0.000000,    0.000000,    0.000000,    0.713241, 1, "Флаг (зеленый)", 1, 0, 20},
    {882, 2993,    0.000000,    0.000000,    0.000000,    0.713241, 1, "Флаг (т. зеленый)", 1, 0, 20},
    {883, 3012,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Голова полицейского", 1, 0, 20},
    {884, 3016,  334.000000,    0.000000,   31.000000,    0.849322, 1, "Голова полицейского", 1, 0, 20},
    {885, 3028,    0.000000,   30.000000,    0.000000,    0.860270, 1, "Катана", 1, 0, 20},
    {886, 3056,    0.000000,    0.000000,   85.000000,    0.860270, 1, "Магнит", 1, 0, 20},
    {887, 3082,    0.000000,    0.000000,   85.000000,    0.907194, 1, "Амулет", 1, 0, 20},
    {888, 19134,    0.000000,    0.000000,   88.000000,    0.724191, 1, "Стрелка (белая)", 1, 0, 20},
    {889, 19131,    0.000000,    0.000000,   88.000000,    0.724191, 1, "Круглая стрелка (синяя)", 1, 0, 20},
    {890, 954,    0.000000,    0.000000,    0.000000,    0.724191, 1, "Подкова", 1, 0, 20},
    {891, 2061,    0.000000,    0.000000,    0.000000,    0.994786, 1, "Иконка патронов", 1, 0, 20},
    {892, 11738,    0.000000,    0.000000,    0.000000,    0.778936, 1, "Набор аптечки", 1, 0, 20},
    {893, 19777,   79.000000,  180.000000,    0.000000,    0.783627, 1, "Логотип FBI", 1, 0, 20},
    {894, 18646,    0.000000,    0.000000,    0.000000,    0.783627, 1, "Полицейская мигалка", 1, 0, 20},
    {895, 19847,  185.000000,  130.000000,  234.000000,    0.983837, 1, "Копченая ножка", 1, 0, 20},
    {896, 19816,  174.000000,  181.000000,  234.000000,    0.983837, 1, "Балон", 1, 0, 20},
    {897, 19590,   36.000000,   53.000000,  256.000000,    0.983837, 1, "Меч", 1, 0, 20},
    {898, 19308,    0.000000,    0.000000,   92.000000,    0.983837, 1, "Шашка такси (желтая)", 1, 0, 20},
    {899, 19309,    0.000000,    0.000000,   92.000000,    0.983837, 1, "Шашка такси (черный-1)", 1, 0, 20},
    {900, 19310,    0.000000,    0.000000,   92.000000,    0.983837, 1, "Шашка такси (белый)", 1, 0, 20},
    {901, 19311,    0.000000,    0.000000,   92.000000,    0.983837, 1, "Шашка такси (черный-2)", 1, 0, 20},
    {902, 19315,    0.000000,    0.000000,  167.000000,    0.747653, 1, "Олень", 1, 0, 20},
    {903, 19317,    0.000000,    0.000000,  167.000000,    0.915014, 1, "Темная гитара", 1, 0, 20},
    {904, 19318,    0.000000,    0.000000,  167.000000,    0.915014, 1, "Черно-белая гитара", 1, 0, 20},
    {905, 19319,    0.000000,    0.000000,  167.000000,    0.915014, 1, "Черная гитара", 1, 0, 20},
    {906, 19094,    0.000000,  270.000000,   41.000000,    0.633472, 1, "Бургер", 1, 0, 20},
    {907, 19631,  231.000000,   90.000000,    0.000000,    0.971324, 1, "Молот", 1, 0, 20},
    {908, 19878,  337.000000,    0.000000,   51.000000,    0.843065, 1, "Скейт", 1, 0, 20},
    {909, 11704,    0.000000,    0.000000,  180.000000,    0.843065, 1, "Голова дьявола", 1, 0, 20},
    {910, 11712,    0.000000,    0.000000,   70.000000,    0.843065, 1, "Церковный крест", 1, 0, 20},
    {911, 19059,    0.000000,    0.000000,    0.000000,    1.382689, 1, "Новог. игрушка (синяя)", 1, 0, 20},
    {912, 19060,    0.000000,    0.000000,    0.000000,    1.382689, 1, "Новог. игрушка (красная)", 1, 0, 20},
    {913, 19061,    0.000000,    0.000000,    0.000000,    1.382689, 1, "Новог. игрушка (зеленая)", 1, 0, 20},
    {914, 19062,    0.000000,    0.000000,    0.000000,    1.382689, 1, "Новог. игрушка (желтая)", 1, 0, 20},
    {915, 19063,    0.000000,    0.000000,    0.000000,    1.382689, 1, "Новог. игрушка (серая)", 1, 0, 20},
    {916, 19078,    0.000000,  270.000000,    0.000000,    0.869655, 1, "Попугай", 1, 0, 20},
    {917, 19314,    0.000000,   90.000000,   90.000000,    0.869655, 1, "Рога", 1, 0, 20},
    {918, 19320,    0.000000,  360.000000,   35.000000,    0.620958, 1, "Тыква", 1, 0, 20},
    {919, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер", 1, 0, 20},
    {920, 19848,  343.000000,    0.000000,  214.000000,    0.976015, 1, "Подиум", 1, 0, 20},
    {921, 19914,  343.000000,  175.000000,  214.000000,    0.932220, 1, "Бита", 1, 0, 20},
    {922, 1420,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Электродвигатель", 1, 0, 20},
    {923, 1782,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 1", 1, 0, 20},
    {924, 1783,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 2", 1, 0, 20},
    {925, 1785,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 3", 1, 0, 20},
    {926, 1787,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 4", 1, 0, 20},
    {927, 1788,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 5", 1, 0, 20},
    {928, 1790,  343.000000,    0.000000,  214.000000,    1.126173, 1, "Магнитола - 6", 1, 0, 20},
    {929, 1841,  335.000000,    0.000000,  303.000000,    1.126173, 1, "Серая колонка", 1, 0, 20},
    {930, 1953,  335.000000,    0.000000,  303.000000,    1.126173, 1, "Саб", 1, 0, 20},
    {931, 2231,    0.000000,    0.000000,  222.000000,    1.329509, 1, "Деревенная колонка", 1, 0, 20},
    {932, 2232,  319.000000,   90.000000,  222.000000,    0.935348, 1, "Большая колонка", 1, 0, 20},
    {933, 1000,    0.000000,    0.000000,    0.000000,    0.891552, 1, "Спойлер", 1, 0, 20},
    {934, 1138,    0.000000,    0.000000,    0.000000,    1.068300, 1, "Спойлер", 1, 0, 20},
    {935, 1001,    0.000000,    0.000000,    0.000000,    0.957247, 1, "Спойлер", 1, 0, 20},
    {936, 1164,    0.000000,    0.000000,    0.000000,    0.997914, 1, "Спойлер", 1, 0, 20},
    {937, 1163,    0.000000,    0.000000,    0.000000,    0.997914, 1, "Спойлер", 1, 0, 20},
    {938, 1162,    0.000000,    0.000000,    0.000000,    1.054222, 1, "Спойлер", 1, 0, 20},
    {939, 1158,    0.000000,    0.000000,    0.000000,    1.054222, 1, "Спойлер", 1, 0, 20},
    {940, 1147,    0.000000,    0.000000,    0.000000,    1.054222, 1, "Спойлер", 1, 0, 20},
    {941, 1146,    0.000000,    0.000000,    0.000000,    1.054222, 1, "Спойлер", 1, 0, 20},
    {942, 1139,    0.000000,    0.000000,    0.000000,    1.054222, 1, "Спойлер", 1, 0, 20},
    {943, 1060,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {944, 1058,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {945, 1050,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {946, 1049,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {947, 1023,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {948, 1016,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {949, 1015,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {950, 1014,    0.000000,    0.000000,    0.000000,    0.902502, 1, "Спойлер", 1, 0, 20},
    {951, 1003,    0.000000,    0.000000,    0.000000,    0.947862, 1, "Спойлер", 1, 0, 20},
    {952, 1002,    0.000000,    0.000000,    0.000000,    0.889989, 1, "Спойлер", 1, 0, 20},
    {953, 1026,  163.000000,    0.000000,   90.000000,    1.692386, 1, "Боковая юбка", 1, 0, 20},
    {954, 1027,  163.000000,    0.000000,   90.000000,    1.692386, 1, "Боковая юбка", 1, 0, 20},
    {955, 1030,  163.000000,    0.000000,   90.000000,    1.692386, 1, "Боковая юбка", 1, 0, 20},
    {956, 1031,  163.000000,    0.000000,   90.000000,    1.692386, 1, "Боковая юбка", 1, 0, 20},
    {957, 1036,  163.000000,    0.000000,   90.000000,    1.113659, 1, "Боковая юбка", 1, 0, 20},
    {958, 1039,  163.000000,    0.000000,   90.000000,    0.929091, 1, "Боковая юбка", 1, 0, 20},
    {959, 1040,  163.000000,    0.000000,   90.000000,    0.977580, 1, "Боковая юбка", 1, 0, 20},
    {960, 1041,  163.000000,    0.000000,   90.000000,    1.076120, 1, "Боковая юбка", 1, 0, 20},
    {961, 1047,  163.000000,    0.000000,   90.000000,    0.927528, 1, "Боковая юбка", 1, 0, 20},
    {962, 1048,  163.000000,    0.000000,   90.000000,    1.037016, 1, "Боковая юбка", 1, 0, 20},
    {963, 1051,  163.000000,    0.000000,   90.000000,    1.049530, 1, "Боковая юбка", 1, 0, 20},
    {964, 1052,  163.000000,    0.000000,   90.000000,    0.985400, 1, "Боковая юбка", 1, 0, 20},
    {965, 1056,  163.000000,    0.000000,   90.000000,    0.929091, 1, "Боковая юбка", 1, 0, 20},
    {966, 1057,  163.000000,    0.000000,   90.000000,    0.947862, 1, "Боковая юбка", 1, 0, 20},
    {967, 1062,  163.000000,    0.000000,   90.000000,    0.947862, 1, "Боковая юбка", 1, 0, 20},
    {968, 1063,  163.000000,    0.000000,   90.000000,    0.947862, 1, "Боковая юбка", 1, 0, 20},
    {969, 1069,  163.000000,    0.000000,   90.000000,    1.645463, 1, "Боковая юбка", 1, 0, 20},
    {970, 1070,  163.000000,    0.000000,   90.000000,    1.645463, 1, "Боковая юбка", 1, 0, 20},
    {971, 1071,  163.000000,    0.000000,   90.000000,    1.645463, 1, "Боковая юбка", 1, 0, 20},
    {972, 1072,  163.000000,    0.000000,   90.000000,    1.645463, 1, "Боковая юбка", 1, 0, 20},
    {973, 1090,  163.000000,    0.000000,   90.000000,    0.999477, 1, "Боковая юбка", 1, 0, 20},
    {974, 1093,  163.000000,    0.000000,   90.000000,    0.999477, 1, "Боковая юбка", 1, 0, 20},
    {975, 1094,  163.000000,    0.000000,   90.000000,    0.999477, 1, "Боковая юбка", 1, 0, 20},
    {976, 1095,  163.000000,    0.000000,   90.000000,    0.999477, 1, "Боковая юбка", 1, 0, 20},
    {977, 1021,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {978, 1028,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {979, 1029,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {980, 1034,  360.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {981, 1037,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {982, 1043,    0.000000,    0.000000,    0.000000,    0.799269, 1, "Турбина", 1, 0, 20},
    {983, 1044,  352.000000,    0.000000,    0.000000,    0.484880, 1, "Турбина", 1, 0, 20},
    {984, 1045,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {985, 1046,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {986, 1059,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {987, 1064,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {988, 1065,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {989, 1066,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {990, 1089,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {991, 1092,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {992, 1126,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {993, 1127,    0.000000,    0.000000,    0.000000,   -0.001564, 1, "Турбина", 1, 0, 20},
    {994, 1013,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Фара", 1, 0, 20},
    {995, 1024,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Фара", 1, 0, 20},
    {996, 1008,  317.000000,    0.000000,   24.000000,    1.000000, 1, "Нитро x1", 1, 0, 20},
    {997, 1009,  317.000000,    0.000000,   24.000000,    1.000000, 1, "Нитро x5", 1, 0, 20},
    {998, 1010,  317.000000,    0.000000,   24.000000,    1.000000, 1, "Нитро x10", 1, 0, 20},
    {999, 1004,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1000, 1005,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1001, 1006,  325.000000,    0.000000,    0.000000,    0.793012, 1, "Воздухозаборник", 1, 0, 20},
    {1002, 1011,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1003, 1012,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1004, 1142,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1005, 1144,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Воздухозаборник", 1, 0, 20},
    {1006, 1140,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1007, 1141,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1008, 1148,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1009, 1149,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1010, 1050,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1011, 1051,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1012, 1154,  325.000000,    0.000000,    0.000000,    1.000000, 1, "Капот", 1, 0, 20},
    {1013, 1156,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1014, 1159,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1015, 1061,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1016, 1167,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1017, 1168,    0.000000,    0.000000,    0.000000,    0.868090, 1, "Капот", 1, 0, 20},
    {1018, 1176,    0.000000,    0.000000,    0.000000,    1.123044, 1, "Капот", 1, 0, 20},
    {1019, 1177,    0.000000,    0.000000,    0.000000,    1.123044, 1, "Капот", 1, 0, 20},
    {1020, 1178,    0.000000,    0.000000,    0.000000,    1.123044, 1, "Капот", 1, 0, 20},
    {1021, 1180,    0.000000,    0.000000,    0.000000,    1.123044, 1, "Капот", 1, 0, 20},
    {1022, 1183,    0.000000,    0.000000,    0.000000,    1.123044, 1, "Капот", 1, 0, 20},
    {1023, 1152,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1024, 1153,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1025, 1155,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1026, 1157,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1027, 1160,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1028, 1165,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1029, 1166,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1030, 1170,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1031, 1171,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1032, 1172,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1033, 1173,    0.000000,    0.000000,    0.000000,    1.080813, 1, "Передний бампер", 1, 0, 20},
    {1034, 1174,    0.000000,    0.000000,    0.000000,    0.882167, 1, "Передний бампер", 1, 0, 20},
    {1035, 1175,    0.000000,    0.000000,    0.000000,    0.882167, 1, "Передний бампер", 1, 0, 20},
    {1036, 1179,    0.000000,    0.000000,    0.000000,    0.969760, 1, "Передний бампер", 1, 0, 20},
    {1037, 1181,    0.000000,    0.000000,    0.000000,    0.969760, 1, "Передний бампер", 1, 0, 20},
    {1038, 1182,    0.000000,    0.000000,    0.000000,    0.969760, 1, "Передний бампер", 1, 0, 20},
    {1039, 1185,    0.000000,    0.000000,    0.000000,    0.969760, 1, "Передний бампер", 1, 0, 20},
    {1040, 2656,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1041, 2657,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1042, 2655,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1043, 2658,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1044, 2659,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1045, 2660,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1046, 2695,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1047, 2696,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1048, 2697,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1049, 1975,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1050, 1976,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Наклейка", 1, 0, 20},
    {1051, 1117,  315.000000,    0.000000,  317.000000,    0.952553, 1, "Накладка на бампер", 1, 0, 20},
    {1052, 1649,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Модификация PREMIUM", 1, 0, 21},
    {1053, 348,    0.000000,   32.000000,  189.000000,    0.797704, 1000, "Desert Eagle", 2, 0, 0},
    {1054, 346,    0.000000,   20.000000,  189.000000,    0.536495, 1000, "Пистолет COLT-45", 2, 0, 0},
    {1055, 349,    0.000000,   23.000000,  140.000000,    2.216371, 1000, "Дробовик", 2, 0, 0},
    {1056, 353,    0.000000,   17.000000,  181.000000,    1.249739, 1000, "Автомат M5", 2, 0, 0},
    {1057, 355,    0.000000,   27.000000,  134.000000,    2.332115, 1000, "Автомат AK47", 2, 0, 0},
    {1058, 356,    0.000000,   27.000000,  134.000000,    1.978623, 1000, "Автомат M4", 2, 0, 0},
    {1059, 357,    0.000000,   13.000000,  120.000000,    1.889467, 1000, "Винтовка", 2, 0, 0},
    {1060, 738,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Дерево", 3, 0, 0},
    {1061, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса(синяя)", 1, 65535, 4},
    {1062, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса(голубая)", 1, 869059839, 4},
    {1063, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса(фиолетовая)", 1, 1562102527, 4},
    {1064, 11736,  170.000000,    0.000000,   90.000000,    0.797704, 1, "Маска от коронавируса", 1, 0, 4},
    {1065, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Катана", 1, 0, 6},
    {1066, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Голубая Катана", 1, 869059839, 6},
    {1067, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Синяя Катана", 1, 65535, 6},
    {1068, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Зелёная Катана", 1, 6684927, 6},
    {1069, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Красная Катана", 1, -1728052993, 6},
    {1070, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Розовая Катана", 1, -16737793, 6},
    {1071, 339,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Фиолетовая Катана", 1, 1562102527, 6},
    {1072, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1073, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1074, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1075, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1076, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1077, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1078, 18637,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Щит", 1, 1, 6},
    {1079, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1080, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1081, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1082, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1083, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1084, 19590,   90.000000,  119.000000,    0.000000,    1.451511, 1, "Меч", 1, 1, 6},
    {1085, 11722,  333.000000,  347.000000,    0.000000,    1.000000, 1, "Краситель", 3, 0, 1086},
    {1086, 19315,    0.000000,    0.000000,  174.000000,    0.727320, 200, "Тушка оленя", 3, 0, 0},
    {1087, 1271,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Rare Box Yellow", 2, -65281, 22},
    {1088, 1271,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Rare Box Blue", 2, 65535, 22},
    {1089, 1271,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Rare Box Red", 2, -1728052993, 22},
    {1090, 738,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Дерево", 2, 0, 51},
    {1091, 19831,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Красный мангал", 2, 0, 51},
    {1092, 19632,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Костер", 2, 0, 51},
    {1093, 1646,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Зеленый лежак", 2, 0, 51},
    {1094, 1702,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Диван", 2, 0, 51},
    {1095, 2111,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Деревянный стол", 2, 0, 51},
    {1096, 643,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Стул и стол 4", 2, 0, 51},
    {1097, 1825,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Стул и стол 3", 2, 0, 51},
    {1098, 1432,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Стул и стол 2", 2, 0, 51},
    {1099, 1969,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Стул и стол 1", 2, 0, 51},
    {1100, 1334,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Большая синяя мусорка", 2, 0, 51},
    {1101, 1446,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Деревянный забор", 2, 0, 51},
    {1102, 2194,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Кактус", 2, 0, 51},
    {1103, 805,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Куст", 2, 0, 51},
    {1104, 2253,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 9", 2, 0, 51},
    {1105, 2245,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 8", 2, 0, 51},
    {1106, 15038,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 7", 2, 0, 51},
    {1107, 949,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 6", 2, 0, 51},
    {1108, 2240,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 5", 2, 0, 51},
    {1109, 2195,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 4", 2, 0, 51},
    {1110, 3802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 3", 2, 0, 51},
    {1111, 3810,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 2", 2, 0, 51},
    {1112, 948,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Цветок в горшке 1", 2, 0, 51},
    {1113, 19166,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Карта штата", 2, 0, 51},
    {1114, 19128,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Танцевальная площадка", 2, 0, 51},
    {1115, 2232,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Черная колонка", 2, 0, 51},
    {1116, 974,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Стеклянный забор", 2, 0, 51},
    {1117, 19865,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Забор из досок", 2, 0, 51},
    {1118, 1333,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Большая красная мусорка", 2, 0, 51},
    {1119, 1408,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Деревянный забор 1", 2, 0, 51},
    {1120, 910,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Большая зелёная мусорка", 2, 0, 51},
    {1121, 1550,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Мешок денег", 2, 0, 51},
    {1122, 1829,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Сейф", 2, 0, 51},
    {1123, 2244,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Растения в горшке 4", 2, 0, 51},
    {1124, 2252,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Растения в горшке 3", 2, 0, 51},
    {1125, 1361,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Растения в горшке 2", 2, 0, 51},
    {1126, 1360,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Растения в горшке 1", 2, 0, 51},
    {1127, 1580,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Пакет наркотиков", 2, 0, 51},
    {1128, 1369,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Инвалидная коляска", 2, 0, 51},
    {1129, 1343,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Серая мусорка", 2, 0, 51},
    {1130, 1359,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Прозрачная мусорка", 2, 0, 51},
    {1131, 11734,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Кресло качялка", 2, 0, 51},
    {1132, 2802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Два стула и стол", 2, 0, 51},
    {1133, 19824,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Бутылка алкоголя 2", 2, 0, 51},
    {1134, 19823,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Уникальный объект 'Бутылка алкоголя 1", 2, 0, 51},
    {1135, 1328,   85.000000,    0.000000,  -20.000000,    0.889999, 1000, "Платиновая рулетка", 2, 0, 0},
    {1136, 962,  -40.000000,    0.000000,   20.000000,    1.000000, 1, "Видеокарта", 2, 0, 0},
    {1137, 19346,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Хотдог", 1, 0, 4},
    {1138, 19076,  270.000000,    0.000000,  180.000000,    0.907194, 1, "Ёлка на плечо", 1, 0, 4},
    {1139, 0,  270.000000,    0.000000,  180.000000,    0.907194, 1, "0", 1, 0, 0},
    {1140, 19079,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Костюм попугая", 1, 0, 12},
    {1141, 369,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Очки ночного видения", 1, 0, 2},
    {1142, 19529,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Шляпа ведьмы", 1, 0, 1},
    {1143, 2064,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Пушка", 1, 0, 2},
    {1144, 14611,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Кольца ангела", 1, 0, 2},
    {1145, 1681,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Самолёт", 1, 0, 2},
    {1146, 16778,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Нло на плечо", 1, 0, 2},
    {1147, 7093,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Сердце на спину", 1, 0, 2},
    {1148, 13667,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Маска обезьяны", 1, 0, 2},
    {1149, 18848,  256.000000,  301.000000,  268.000000,    1.016684, 1, "ППВ", 1, 0, 2},
    {1150, 18978,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Черно-белое", 1, 0, 2},
    {1151, 14467,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Бигсмоук на плечо", 1, 0, 3},
    {1152, 1602,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Меч медузы", 1, 0, 5},
    {1153, 2805,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Сумка с кровью", 1, 0, 8},
    {1154, 19527,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Капюшон на голову", 1, 0, 2},
    {1155, 11711,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Распятие", 1, 0, 0},
    {1156, 1622,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Регистратор на плечо", 1, 0, 2},
    {1157, 19806,  256.000000,  301.000000,  268.000000,    1.016684, 1, "Люстра", 1, 0, 5},
    {1158, 2469,  336.000000,    0.000000,  156.000000,    1.019811, 1, "Самолётик на спину", 1, 0, 2},
    {1159, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (белая)", 1, -589505281, 4},
    {1160, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (розовая)", 1, -16737793, 4},
    {1161, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (зеленая)", 1, 6684927, 4},
    {1162, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (красная)", 1, -1728052993, 4},
    {1163, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (синяя)", 1, 65535, 4},
    {1164, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (голубая)", 1, 869059839, 4},
    {1165, 19581,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Сковорода на спину (фиолетовая)", 1, 1562102527, 4},
    {1166, 1605,  270.000000,    0.000000,    0.000000,    1.437433, 1, "Кровавая изъяна", 1, 0, 3},
    {1167, 16112,   78.000000,    0.000000,    0.000000,    1.024503, 100, "Точильный камень", 3, -2686721, 1167},
    {1168, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Медвежонок", 1, 16777215, 12},
    {1169, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Hello Kitty", 1, -16737793, 12},
    {1170, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Карибского моря", 1, 1268659967, 12},
    {1171, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Попугай", 1, -424339969, 12},
    {1172, 1974,    0.000000,    0.000000,  119.000000,    0.832324, 1, "Модификация:  Синий мишка", 1, 5898239, 12},
    {1173, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Лягушка", 1, 1268659967, 12},
    {1174, 19895,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Взлом пентагона", 1, 1268659967, 0},
    {1175, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на раскопки", 3, 0, 27},
    {1176, 2684,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Лицензия на таксиста", 3, 0, 27},
    {1177, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (Deagle)", 1, 0, 0},
    {1178, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (Deagle)", 1, 0, 0},
    {1179, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (Deagle)", 1, 0, 0},
    {1180, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (M4)", 1, 0, 0},
    {1181, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (M4)", 1, 0, 0},
    {1182, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (M4)", 1, 0, 0},
    {1183, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (AK-47)", 1, 0, 0},
    {1184, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (AK-47)", 1, 0, 0},
    {1185, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (AK-47)", 1, 0, 0},
    {1186, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (Sniper Rifle)", 1, 0, 0},
    {1187, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (Sniper Rifle)", 1, 0, 0},
    {1188, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (Sniper Rifle)", 1, 0, 0},
    {1189, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (Country Rifle)", 1, 0, 0},
    {1190, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (Country Rifle)", 1, 0, 0},
    {1191, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (Country Rifle)", 1, 0, 0},
    {1192, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (MP5)", 1, 0, 0},
    {1193, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (MP5)", 1, 0, 0},
    {1194, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (MP5)", 1, 0, 0},
    {1195, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (Shotgun)", 1, 0, 0},
    {1196, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (Shotgun)", 1, 0, 0},
    {1197, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (Shotgun)", 1, 0, 0},
    {1198, 2033,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Compensator (UZI)", 1, 0, 0},
    {1199, 2034,  203.000000,  152.000000,  348.000000,    0.909592, 1, "Handguard (UZI)", 1, 0, 0},
    {1200, 2034,   84.000000,  175.000000,   17.000000,    0.883524, 1, "Butt (UZI)", 1, 0, 0},
    {1201, 1549,    0.000000,  -10.000000,   80.000000,    1.000000, 100, "Смазка для разгона видеокарты", 1, 0, 0},
    {1202, 365,    0.000000,  -20.000000,   90.000000,    0.699998, 100, "Охлаждающая жидкость для видеокарты", 1, 0, 0},
    {1203, 1371,  342.000000,    0.000000,  226.000000,    1.030761, 100000, "Bitcoin (BTC)", 4, 0, 0},
    {1204, 612,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-AMG GT", 2, 0, 10},
    {1205, 613,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz G 63 AMG", 2, 0, 10},
    {1206, 614,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi RS6", 2, 0, 10},
    {1207, 662,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW X5", 2, 0, 10},
    {1208, 663,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: CHEVCOR", 2, 0, 10},
    {1209, 665,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: CHEVROLET", 2, 0, 10},
    {1210, 666,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus LX", 2, 0, 10},
    {1211, 667,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche 911", 2, 0, 10},
    {1212, 668,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Cayenne", 2, 0, 10},
    {1213, 699,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bentley", 2, 0, 10},
    {1214, 793,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M8", 2, 0, 10},
    {1215, 794,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MERCEDES E63", 2, 0, 10},
    {1216, 909,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MERCEDES S63", 2, 0, 10},
    {1217, 965,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volkswagen Touareg", 2, 0, 10},
    {1218, 1194,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborghini Urus", 2, 0, 10},
    {1219, 1195,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: ABT Q8 Review", 2, 0, 10},
    {1220, 1196,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodg Cha", 2, 0, 10},
    {1221, 1197,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Acura NSX", 2, 0, 10},
    {1222, 1198,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo", 2, 0, 10},
    {1223, 1199,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Range Rover", 2, 0, 10},
    {1224, 1200,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: CivTR", 2, 0, 10},
    {1225, 1201,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus", 2, 0, 10},
    {1226, 1202,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Mustang", 2, 0, 10},
    {1227, 1203,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo XC", 2, 0, 10},
    {1228, 1204,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kajovil Jagfp", 2, 0, 10},
    {1229, 1205,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Optima", 2, 0, 10},
    {1230, 3155,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW ZF", 2, 0, 10},
    {1231, 3156,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz W140", 2, 0, 10},
    {1232, 3157,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW XF", 2, 0, 10},
    {1233, 3158,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus RX", 2, 0, 10},
    {1234, 3195,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ducati", 2, 0, 10},
    {1235, 3196,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ducati Ducnaked", 2, 0, 10},
    {1236, 3197,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kanuni Western", 2, 0, 10},
    {1237, 3198,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kawasaki ZX10R", 2, 0, 10},
    {1238, 3199,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rolls-Royce", 2, 0, 10},
    {1239, 3200,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bentley", 2, 0, 10},
    {1240, 3201,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bug Divo", 2, 0, 10},
    {1241, 3202,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bugati Chiron", 2, 0, 10},
    {1242, 3203,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Fiat 500", 2, 0, 10},
    {1243, 3204,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes Gls 2020", 2, 0, 10},
    {1244, 3205,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Huntold", 2, 0, 10},
    {1245, 3206,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborghini Aventador SVJ", 2, 0, 10},
    {1246, 3207,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Landscape", 2, 0, 10},
    {1247, 3208,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW 530I", 2, 0, 10},
    {1248, 3209,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz W221", 2, 0, 10},
    {1249, 3210,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tesla Model X", 2, 0, 10},
    {1250, 3211,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: NISSAN LEAF", 2, 0, 10},
    {1251, 18866,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Голубой)", 2, -589505281, 11},
    {1252, 18874,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Белый)", 2, -589505281, 11},
    {1253, 18872,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Синий)", 2, -589505281, 11},
    {1254, 18871,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Зеленый)", 2, -589505281, 11},
    {1255, 18867,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Красный)", 2, -589505281, 11},
    {1256, 19513,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Серый)", 2, -589505281, 11},
    {1257, 18865,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Оранжевый)", 2, -589505281, 11},
    {1258, 18873,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Золотой)", 2, -589505281, 11},
    {1259, 18869,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Розовый)", 2, -589505281, 11},
    {1260, 18868,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Черный)", 2, -589505281, 11},
    {1261, 18870,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Huawei P20 PRO (Темно красный)", 2, -589505281, 11},
    {1262, 18866,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Голубой)", 2, -7601921, 11},
    {1263, 18874,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Белый)", 2, -7601921, 11},
    {1264, 18872,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Синий)", 2, -7601921, 11},
    {1265, 18871,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Зеленый)", 2, -7601921, 11},
    {1266, 18867,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Красный)", 2, -7601921, 11},
    {1267, 19513,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Серый)", 2, -7601921, 11},
    {1268, 18865,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Оранжевый)", 2, -7601921, 11},
    {1269, 18873,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Золотой)", 2, -7601921, 11},
    {1270, 18869,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Розовый)", 2, -7601921, 11},
    {1271, 18868,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Черный)", 2, -7601921, 11},
    {1272, 18870,   90.000000,  180.000000,    0.000000,    1.000000, 1, "Google Pixel 3 (Темно красный)", 2, -7601921, 11},
    {1273, 19627,  271.000000,   40.000000,   64.000000,    0.872784, 1, "Гаечный ключ на грудь", 1, 0, 4},
    {1274, 2469,  336.000000,    0.000000,  156.000000,    1.019811, 1, "Самолётик на спину", 1, 0, 6},
    {1275, 1609,    0.000000,    0.000000,   32.000000,    0.871218, 1, "Черепаха на спину", 1, 0, 5},
    {1276, 2918,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Мина на спину", 1, 0, 1},
    {1277, 3065,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Баскетбольний мяч на голову", 1, 0, 1},
    {1278, 3092,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Мент на плечо", 1, 0, 1},
    {1279, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 0, 1},
    {1280, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 0, 1},
    {1281, 18978,  337.000000,    0.000000,  200.000000,    0.882167, 1, "Маска сварщика", 1, 0, 2},
    {1282, 888,    0.000000,    0.000000,  180.000000,    1.000000, 1, "Язык Венома", 1, 0, 2},
    {1283, 0,    0.000000,   20.000000,    0.000000,    1.000000, 1, "Акула на спину", 1, 0, 6},
    {1284, 1877,    0.000000,    0.000000,    0.000000,    0.800000, 1, "Палка", 1, 0, 3},
    {1285, 19130,  314.000000,    0.000000,  260.000000,    0.950990, 1, "Стрелка на грудь", 1, 0, 3},
    {1286, 19808,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Клавиатура на спину", 1, 0, 6},
    {1287, 18849,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Сумка с парашютом на плечо", 1, 0, 5},
    {1288, 18877,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Колесница на спину", 1, 0, 2},
    {1289, 19893,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Ноутбук на спину [Разобранный]", 1, 0, 2},
    {1290, 19787,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Телевизор на спину", 1, 0, 2},
    {1291, 19894,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Ноутбук на спину [Собранный]", 1, 0, 2},
    {1292, 9192,    0.000000,    0.000000,    0.000000,    0.849798, 1, "АЗС на спину", 1, 0, 6},
    {1293, 1277,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Сумка RockStar", 1, 0, 8},
    {1294, 1247,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Звезда на голову", 1, 0, 1},
    {1295, 3425,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Мельница на спину", 1, 0, 6},
    {1296, 2901,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Сено на спину", 1, 0, 6},
    {1297, 5836,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Бочка на спину", 1, 0, 5},
    {1298, 19632,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Костер на спину", 1, 0, 5},
    {1299, 19632,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Костер на руку", 1, 0, 6},
    {1300, 19470,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Табличка FOR SALE на спину", 1, 0, 6},
    {1301, 2707,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Фонарь на спину", 1, 0, 6},
    {1302, 1550,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Мешок с деньгами на спину", 1, 0, 6},
    {1303, 11733,    0.000000,    0.000000,  206.000000,    1.018247, 1, "Лошадь на спину", 1, 0, 6},
    {1304, 4789,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Taycan", 2, 0, 10},
    {1305, 4779,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW I8", 2, 0, 10},
    {1306, 6013,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Дельтаплан на спину", 1, 0, 2},
    {1307, 6012,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Велосипед на спину", 1, 0, 2},
    {1308, 6615,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-AMG G63 6x6", 2, 0, 10},
    {1309, 6616,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1310, 6605,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi Q7", 2, 0, 10},
    {1311, 6623,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Supra A90", 2, 0, 10},
    {1312, 6606,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M6 2020", 2, 0, 10},
    {1313, 312,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Альберт (ID: 312)", 1, 0, 9},
    {1314, 313,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Амиран (ID: 313)", 1, 0, 9},
    {1315, 314,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Bathory (ID: 314)", 1, 0, 9},
    {1316, 315,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Brulyov (ID: 315)", 1, 0, 9},
    {1317, 316,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Егор Крид (ID: 316)", 1, 0, 9},
    {1318, 317,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Delorenzy (ID: 317)", 1, 0, 9},
    {1319, 318,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Edward Bil (ID: 318)", 1, 0, 9},
    {1320, 319,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Элджей (ID: 319)", 1, 0, 9},
    {1321, 329,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Eva Elfie (ID: 320)", 1, 0, 9},
    {1322, 332,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Feduk (ID: 321)", 1, 0, 9},
    {1323, 340,    0.000000,    0.000000,    0.000000,    1.000000, 1, "	Скин: Kovalevkiy (ID: 322)", 1, 0, 9},
    {1324, 382,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Литвин (ID: 323)", 1, 0, 9},
    {1325, 383,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Maras Shakur (ID: 324)", 1, 0, 9},
    {1326, 398,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: MORGENSHTERN (ID: 325)", 1, 0, 9},
    {1327, 399,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Хабиб Нурмагомедов (ID: 326)", 1, 0, 9},
    {1328, 795,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Oxxxymiron (ID: 327)", 1, 0, 9},
    {1329, 796,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: DANTE (ID: 328)", 1, 0, 9},
    {1330, 797,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ravyazan (ID: 329)", 1, 0, 9},
    {1331, 798,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: romeru (ID: 330)", 1, 0, 9},
    {1332, 799,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Sam Mason (ID: 331)", 1, 0, 9},
    {1333, 907,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Диана Шурыгина (ID: 332)", 1, 0, 9},
    {1334, 908,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer (ID: 333)", 1, 0, 9},
    {1335, 1206,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Баста (ID: 334)", 1, 0, 9},
    {1336, 1326,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ольга Бузова (ID: 335)", 1, 0, 9},
    {1337, 1573,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Дзюба (ID: 336)", 1, 0, 0},
    {1338, 1699,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Иван Ургант (ID: 337)", 1, 0, 9},
    {1339, 2883,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Хованский (ID: 338)", 1, 0, 9},
    {1340, 2884,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Лукашенко (ID: 339)", 1, 0, 9},
    {1341, 3136,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Мэдисон (ID: 340)", 1, 0, 9},
    {1342, 3137,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Нойс МС (ID: 341)", 1, 0, 9},
    {1343, 3138,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Паша Техник (ID: 342)", 1, 0, 9},
    {1344, 3139,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ресторатор (ID: 343)", 1, 0, 9},
    {1345, 3140,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ричи (ID: 344)", 1, 0, 9},
    {1346, 3141,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Саша Грей (ID: 345)", 1, 0, 9},
    {1347, 3142,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Юрий Дудь (ID: 346)", 1, 0, 9},
    {1348, 3143,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Снеговик-смерть (ID: 347)", 1, 0, 9},
    {1349, 3144,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Эльф (ID: 348)", 1, 0, 9},
    {1350, 3145,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Farmer Новый Год (ID: 349)", 1, 0, 9},
    {1351, 3146,    0.000000,    0.000000,    0.000000,    1.000000, 1, "	Скин: Дед мороз (ID: 350)", 1, 0, 9},
    {1352, 3147,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Йода (ID: 351)", 1, 0, 9},
    {1353, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Леший (ID: 352)", 1, 0, 9},
    {1354, 3149,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Дед Мороз 2 (ID: 353)", 1, 0, 9},
    {1355, 3150,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Олень (ID: 354)", 1, 0, 9},
    {1356, 3151,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Пингвин (ID: 355)", 1, 0, 9},
    {1357, 3152,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Снегурочка (ID: 356)", 1, 0, 9},
    {1358, 3153,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Футба (ID: 357)", 1, 0, 9},
    {1359, 3154,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Эльф 2 (ID: 358)", 1, 0, 9},
    {1360, 3159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 359)", 1, 0, 9},
    {1361, 3160,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 360)", 1, 0, 9},
    {1362, 3161,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 361)", 1, 0, 9},
    {1363, 3162,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 362)", 1, 0, 9},
    {1364, 3163,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 363)", 1, 0, 9},
    {1365, 3164,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джентельмен (ID: 364)", 1, 0, 9},
    {1366, 3165,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 365)", 1, 0, 9},
    {1367, 3166,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 366)", 1, 0, 9},
    {1368, 3176,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 367)", 1, 0, 9},
    {1369, 3177,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 368)", 1, 0, 9},
    {1370, 3179,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 369)", 1, 0, 9},
    {1371, 3180,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Уилл Смит (ID: 410)", 1, 0, 9},
    {1372, 3181,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 371)", 1, 0, 9},
    {1373, 3182,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 372)", 1, 0, 0},
    {1374, 3183,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 373)", 1, 0, 9},
    {1375, 3184,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майнкрафт (ID: 374)", 1, 0, 9},
    {1376, 3185,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Навальный (ID: 375)", 1, 0, 9},
    {1377, 3186,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Путин (ID: 376)", 1, 0, 9},
    {1378, 3188,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Железный человек (ID: 377)", 1, 0, 9},
    {1379, 3189,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Человек-Паук (ID: 378)", 1, 0, 9},
    {1380, 3190,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Веном (ID: 379)", 1, 0, 9},
    {1381, 3191,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Капитан Америка (ID: 380)", 1, 0, 9},
    {1382, 3192,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Бэтмен (ID: 381)", 1, 0, 9},
    {1383, 3225,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Анонимуса (ID: 382)", 1, 0, 9},
    {1384, 3226,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика 1 (ID: 383)", 1, 0, 9},
    {1385, 3227,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика 2 (ID: 384)", 1, 0, 9},
    {1386, 3228,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика 3 (ID: 385)", 1, 0, 0},
    {1387, 3229,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика 4 (ID: 386)", 1, 0, 9},
    {1388, 3230,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика 5 (ID: 387)", 1, 0, 9},
    {1389, 3231,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Кролика Farmer (ID: 388)", 1, 0, 9},
    {1390, 3349,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Аль Пачино (ID: 389)", 1, 0, 9},
    {1391, 3416,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Брэд Питт (ID: 390)", 1, 0, 9},
    {1392, 3429,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Леонардо Ди Каприо (ID: 391)", 1, 0, 9},
    {1393, 3610,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Вин Дизель (ID: 392)", 1, 0, 9},
    {1394, 3611,    0.000000,    0.000000,    0.000000,    1.000000, 1, "	Скин: Киану Ривз (ID: 393)", 1, 0, 9},
    {1395, 3784,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Илон Маск (ID: 394)", 1, 0, 9},
    {1396, 3870,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Роберт Дауни-младший (ID: 395)", 1, 0, 9},
    {1397, 3871,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Арнольд Шварценеггер (ID: 396)", 1, 0, 9},
    {1398, 3883,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джейсон Стейтем (ID: 397)", 1, 0, 9},
    {1399, 3889,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Квентин Тарантино (ID: 398)", 1, 0, 0},
    {1400, 4549,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Сильвестр Сталлоне (ID: 399)", 1, 0, 9},
    {1401, 4763,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Томас Шелби (ID: 400)", 1, 0, 9},
    {1402, 4764,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Майк Тайсон (ID: 402)", 1, 0, 9},
    {1403, 4765,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Канье Уэст (ID: 403)", 1, 0, 9},
    {1404, 4766,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Конор Макгрегор (ID: 404)", 1, 0, 9},
    {1405, 4767,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джон Траволта (ID: 405)", 1, 0, 9},
    {1406, 4768,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джордж Клуни (ID: 406)", 1, 0, 9},
    {1407, 4769,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Марк Цукерберг (ID: 407)", 1, 0, 9},
    {1408, 4770,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Марк Цукерберг (ID: 407)", 1, 0, 9},
    {1409, 4771,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Дуэйн Джонсон (ID: 408)", 1, 0, 9},
    {1410, 4772,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Николас Кейдж (ID: 409)", 1, 0, 9},
    {1411, 4773,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Уилл Смит (ID: 410)", 1, 0, 9},
    {1412, 4804,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Аарон Пол (ID: 411)", 1, 0, 0},
    {1413, 4805,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Брэдли Купер (ID: 412)	", 1, 0, 9},
    {1414, 5085,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Уиллем Дефо (ID: 413)", 1, 0, 9},
    {1415, 5090,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Крис Эванс (ID: 414)", 1, 0, 9},
    {1416, 5091,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Райна Гослинг (ID: 415)", 1, 0, 9},
    {1417, 5092,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Чарли Ханнэм (ID: 416)", 1, 0, 9},
    {1418, 5093,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №1 (ID: 417)", 1, 0, 9},
    {1419, 5094,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №2 (ID: 418)", 1, 0, 9},
    {1420, 5095,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №3 (ID: 419)", 1, 0, 9},
    {1421, 5096,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №4 (ID: 420)", 1, 0, 9},
    {1422, 5097,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №5 (ID: 421)", 1, 0, 9},
    {1423, 5098,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №6 (ID: 422)", 1, 0, 9},
    {1424, 5099,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №7 (ID: 423)", 1, 0, 9},
    {1425, 5100,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №8 (ID: 424)", 1, 0, 0},
    {1426, 5101,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №9 (ID: 425)", 1, 0, 9},
    {1427, 5102,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Праздничный костюм №10 (ID: 426)", 1, 0, 9},
    {1428, 5103,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Джэки Чан (ID: 427)", 1, 0, 9},
    {1429, 5104,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Мэттью Макконахи (ID: 428)", 1, 0, 9},
    {1430, 5376,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Мэтт Деймон (ID: 429)", 1, 0, 9},
    {1431, 5377,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Морган Фримен (ID: 430)", 1, 0, 9},
    {1432, 5378,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Ченниг Татум (ID: 431)", 1, 0, 9},
    {1433, 5379,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Пол Уокер [Tribute] (ID: 432)", 1, 0, 9},
    {1434, 5380,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Элайджа Вуд (ID: 433)", 1, 0, 9},
    {1435, 6014,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #1 (ID: 434)", 1, 0, 9},
    {1436, 6015,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #2 (ID: 435)", 1, 0, 9},
    {1437, 6016,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #3 (ID: 436)", 1, 0, 9},
    {1438, 6017,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #4 (ID: 437)", 1, 0, 0},
    {1439, 6018,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #5 (ID: 438)", 1, 0, 9},
    {1440, 6019,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #6 (ID: 439)", 1, 0, 9},
    {1441, 6020,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Halloween #7 (ID: 440)", 1, 0, 9},
    {1442, 6021,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Хасбулла (ID: 441)", 1, 0, 9},
    {1443, 6022,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Человек-Тыква (ID: 442)", 1, 0, 9},
    {1444, 6023,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Скин: Маскхалат(Ж) (ID: 443)", 1, 0, 9},
    {1445, 6024,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Маскхалат(М) (ID: 444)", 1, 0, 9},
    {1446, 6025,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: Скин: PUBG (Кролик) (ID: 445)", 1, 0, 9},
    {1447, 6026,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Camo multicolored) (ID: 446)", 1, 0, 9},
    {1448, 6027,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Кимано) (ID: 447)", 1, 0, 9},
    {1449, 6028,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Camo yellow) (ID: 448)", 1, 0, 9},
    {1450, 6029,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Doom slayer) (ID: 449)", 1, 0, 0},
    {1451, 6030,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Huntsman) (ID: 450)", 1, 0, 9},
    {1452, 6031,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Ninja) (ID: 451)", 1, 0, 9},
    {1453, 6032,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: PUBG (Captain) (ID: 452)", 1, 0, 9},
    {1454, 3266,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge Challenger", 2, 0, 10},
    {1455, 12547,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный спойлер (STOCK)", 1, 0, 19},
    {1456, 12539,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный спойлер (DUCKTAIL)", 1, 0, 19},
    {1457, 12544,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный спойлер (REAPER)", 1, 0, 19},
    {1458, 12537,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный спойлер (DAYTONA)", 1, 0, 19},
    {1459, 12551,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный спойлер (CURSE)", 1, 0, 19},
    {1460, 12540,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный капот (FOUR-SLOT)", 1, 0, 19},
    {1461, 12545,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный капот (SPEEDLINE)", 1, 0, 19},
    {1462, 12548,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный капот (TREMOR)", 1, 0, 19},
    {1463, 12538,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Запакованный капот (DOUBLE-V)", 1, 0, 19},
    {1464, 12541,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Запакованный выхлоп (GRADIENT STOCK)", 1, 0, 19},
    {1465, 12534,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Запакованный выхлоп (CARBON RING)", 1, 0, 19},
    {1466, 12535,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Запакованный выхлоп (CARBON TWO)", 1, 0, 19},
    {1467, 12542,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Запакованный выхлоп (GRADIENT TWO)", 1, 0, 19},
    {1468, 12543,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Запакованный выхлоп (GRID)", 1, 0, 19},
    {1469, 12562,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Коленвал (sport+)", 1, -1540214017, 24},
    {1470, 12561,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Распредвал (sport+)", 1, -1540214017, 24},
    {1471, 12560,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Турбокомпрессор (sport+)", 1, -1540214017, 24},
    {1472, 12559,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Нагнетатель (sport+)", 1, -1540214017, 24},
    {1473, 12555,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Чип-тюнинг (STAGE 3)", 1, -1540214017, 24},
    {1474, 12554,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сцепление (sport+)", 1, -1540214017, 24},
    {1475, 12552,    0.000000,    0.000000,    0.000000,    0.000000, 1, "КПП (sport+)", 1, -1540214017, 24},
    {1476, 12553,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Дифференциал (sport+)", 1, -1540214017, 24},
    {1477, 12551,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Подвеска (sport+)", 1, -1540214017, 24},
    {1478, 12550,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Тормоза (sport+)", 1, -1540214017, 24},
    {1479, 12563,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-1", 1, 0, 21},
    {1480, 12564,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-2", 1, 0, 21},
    {1481, 12565,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-3", 1, 0, 21},
    {1482, 12566,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-4", 1, 0, 21},
    {1483, 12567,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-5", 1, 0, 21},
    {1484, 12568,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-6", 1, 0, 21},
    {1485, 12569,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-7", 1, 0, 21},
    {1486, 12570,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-8", 1, 0, 21},
    {1487, 12571,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-9", 1, 0, 21},
    {1488, 12572,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-10", 1, 0, 21},
    {1489, 12573,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-11", 1, 0, 21},
    {1490, 12574,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-12", 1, 0, 21},
    {1491, 12575,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-13", 1, 0, 21},
    {1492, 12576,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-14", 1, 0, 21},
    {1493, 12577,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-15", 1, 0, 21},
    {1494, 12578,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-16", 1, 0, 21},
    {1495, 12579,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Винил-17", 1, 0, 21},
    {1496, 1132,  326.000000,    0.000000,  334.000000,    1.021800, 1, "Выхлоп для Tornado (Slamin)", 1, 0, 20},
    {1497, 6752,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-1)", 1, 0, 20},
    {1498, 6753,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-2)", 1, 0, 20},
    {1499, 6754,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-3)", 1, 0, 20},
    {1500, 6755,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-4)", 1, 0, 20},
    {1501, 6756,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-5)", 1, 0, 20},
    {1502, 6757,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-6)", 1, 0, 20},
    {1503, 6758,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-7)", 1, 0, 20},
    {1504, 6759,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-8)", 1, 0, 20},
    {1505, 6760,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-9)", 1, 0, 20},
    {1506, 6761,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-10)", 1, 0, 20},
    {1507, 6762,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-11)", 1, 0, 20},
    {1508, 6762,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-12)", 1, 0, 20},
    {1509, 6763,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-13)", 1, 0, 20},
    {1510, 6764,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-14)", 1, 0, 20},
    {1511, 6765,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-15)", 1, 0, 20},
    {1512, 6766,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-16)", 1, 0, 20},
    {1513, 19572,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Ларец кастомных аксессуаров", 2, 0, 22},
    {1514, 1335,  -10.000000,    0.000000,  150.000000,    1.000000, 50, "Ларец Super Car Box", 2, 0, 22},
    {1515, 19614,  -10.000000,    0.000000,  150.000000,    1.000000, 50, "Ларец с премией", 2, 0, 22},
    {1516, 19900,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Super Car Box", 2, 0, 22},
    {1517, 1335,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Ностальгический ящик", 2, 0, 22},
    {1518, 1733,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Тайник Илона Маска", 2, 0, 22},
    {1519, 2977,    0.000000,    0.000000,   30.000000,    1.000000, 50, "Супер мото-ящик", 2, 0, 22},
    {1520, 11733,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Ослик на спину", 1, 0, 2},
    {1521, 11712,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Крест на спину", 1, 0, 2},
    {1522, 19797,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Полицейский кейс", 1, 0, 6},
    {1523, 18976,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Мотошлем на голову", 1, 0, 3},
    {1524, 18977,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Красный Мотошлем", 1, 0, 3},
    {1525, 18979,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Фиолетовый Мотошлем", 1, 0, 3},
    {1526, 2061,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Патрон на спину", 1, 0, 1},
    {1527, 8493,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Корабль на спину", 1, 0, 1},
    {1528, 18875,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Пейджер на левую руку", 1, 0, 6},
    {1529, 1581,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Паспорт на спину", 1, 0, 2},
    {1530, 19590,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Меч в левую руку", 1, 0, 6},
    {1531, 323,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Вибратор на правую руку", 1, 0, 5},
    {1532, 3014,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Ящик с оружием на спину", 1, 0, 2},
    {1533, 3528,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Дракон на спину", 1, 0, 2},
    {1534, 19806,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Люстра на голову", 1, 0, 1},
    {1535, 1275,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Бантик на шею", 1, 0, 1},
    {1536, 360,    0.000000,    3.000000,  241.000000,    0.860270, 1, "РПГ на спину", 1, 0, 2},
    {1537, 1247,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Полицейская звезда на спину", 1, 0, 2},
    {1538, 1314,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Семейный талон на спину", 1, 0, 2},
    {1539, 918,    0.000000,    3.000000,  241.000000,    0.860270, 1, "НЛО на плечо", 1, 0, 1},
    {1540, 2918,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Тыква на спину", 1, 0, 2},
    {1541, 19632,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Костер щит", 1, 0, 1},
    {1542, 1177,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Ранец на спину", 1, 0, 2},
    {1543, 0,    0.000000,    3.000000,  241.000000,    0.860270, 1, "free slot", 1, 0, 0},
    {1544, 0,    0.000000,    3.000000,  241.000000,    0.860270, 1, "free slot", 1, 0, 0},
    {1545, 18952,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Корона Нептуна", 1, 0, 3},
    {1546, 3027,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Сигарета на спину", 1, 0, 2},
    {1547, 1013,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Уха Бэтмена", 1, 0, 5},
    {1548, 19130,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Стрелка на спину", 1, 0, 2},
    {1549, 19625,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Сигарета в губы", 1, 0, 6},
    {1550, 2680,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Замок на шею", 1, 0, 5},
    {1551, 19522,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Пикап дома на спину", 1, 0, 2},
    {1552, 1252,    0.000000,    3.000000,  241.000000,    0.860270, 1, "Взрывчатка С4", 1, 0, 2},
    {1553, 738,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект дерево (Дом)", 2, 0, 50},
    {1554, 19831,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект красный мангал (Дом)", 2, 0, 51},
    {1555, 19632,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект костер (Дом)", 2, 0, 51},
    {1556, 1646,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект зеленый лежак (Дом)", 2, 0, 51},
    {1557, 1702,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект диван (Дом)", 2, 0, 51},
    {1558, 2111,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный стол (Дом)", 2, 0, 51},
    {1559, 643,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 4 (Дом)", 2, 0, 51},
    {1560, 1825,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 3 (Дом)", 2, 0, 51},
    {1561, 1432,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 2 (Дом)", 2, 0, 51},
    {1562, 1969,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 1 (Дом)", 2, 0, 51},
    {1563, 1334,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая синия мусорка (Дом)", 2, 0, 51},
    {1564, 1446,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный забор 2 (Дом)", 2, 0, 51},
    {1565, 2194,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект кактус (Дом)", 2, 0, 51},
    {1566, 805,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект куст (Дом)", 2, 0, 51},
    {1567, 2253,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 9 (Дом)", 2, 0, 51},
    {1568, 2245,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 8 (Дом)", 2, 0, 51},
    {1569, 15038,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 7 (Дом)", 2, 0, 51},
    {1570, 949,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 6 (Дом)", 2, 0, 51},
    {1571, 2240,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 5 (Дом)", 2, 0, 51},
    {1572, 2195,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 4 (Дом)", 2, 0, 51},
    {1573, 3802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 3 (Дом)", 2, 0, 51},
    {1574, 3810,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 2 (Дом)", 2, 0, 51},
    {1575, 948,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 1 (Дом)", 2, 0, 51},
    {1576, 19166,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект карта штата (Дом)", 2, 0, 51},
    {1577, 19128,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект танцевальная площадка (Дом)", 2, 0, 51},
    {1578, 2232,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект черная колонка (Дом)", 2, 0, 51},
    {1579, 974,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стеклянный забор (Дом)", 2, 0, 51},
    {1580, 19865,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект забор из досок (Дом)", 2, 0, 51},
    {1581, 1333,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая красная мусорка (Дом)", 2, 0, 51},
    {1582, 1408,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный забор 1 (Дом)", 2, 0, 51},
    {1583, 910,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая зелёная мусорка с 5 коробками (Дом)", 2, 0, 51},
    {1584, 1550,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект мешок с деньгами (Дом)", 2, 0, 51},
    {1585, 1829,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект сейф (Дом)", 1, 0, 0},
    {1586, 2244,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 4 (Дом)", 2, 0, 51},
    {1587, 2252,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 3 (Дом)", 2, 0, 51},
    {1588, 1361,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 2 (Дом)", 2, 0, 51},
    {1589, 1360,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 1 (Дом)", 2, 0, 51},
    {1590, 1580,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект пакет наркотиков 1 (Дом)", 2, 0, 51},
    {1591, 1369,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект инвалидная колсяска (Дом)", 2, 0, 51},
    {1592, 1343,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект серая мусорка(Дом)", 2, 0, 51},
    {1593, 1359,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект прозрачная мусорка (Дом)", 2, 0, 51},
    {1594, 11734,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект кресло качалка(Дом)", 2, 0, 51},
    {1595, 2802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект два стула и стол (Дом)", 2, 0, 51},
    {1596, 19824,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект бутылка алкоголя 2 (Дом)", 2, 0, 51},
    {1597, 19823,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект бутылка алкоголя 1 (Дом)", 2, 0, 51},
    {1598, 738,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект дерево (Бизнес)", 2, 0, 51},
    {1599, 19831,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект красный мангал (Бизнес)", 2, 0, 51},
    {1600, 19632,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект костер (Бизнес)", 2, 0, 51},
    {1601, 1646,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект зеленый лежак (Бизнес)", 2, 0, 51},
    {1602, 1702,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект диван (Бизнес)", 2, 0, 51},
    {1603, 2111,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный стол (Бизнес)", 1, 0, 0},
    {1604, 643,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 4 (Бизнес)", 2, 0, 51},
    {1605, 1825,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 3 (Бизнес)", 2, 0, 51},
    {1606, 1432,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 2 (Бизнес)", 2, 0, 51},
    {1607, 1969,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стул и стол 1 (Бизнес)", 2, 0, 51},
    {1608, 1334,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая синия мусорка (Бизнес)", 2, 0, 51},
    {1609, 1446,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный забор 2 (Бизнес)", 2, 0, 51},
    {1610, 2194,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект кактус (Бизнес)", 2, 0, 51},
    {1611, 805,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект куст (Бизнес)", 2, 0, 51},
    {1612, 2253,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 9 (Бизнес)", 2, 0, 51},
    {1613, 2245,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 8 (Бизнес)", 2, 0, 51},
    {1614, 15038,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 7 (Бизнес)", 2, 0, 51},
    {1615, 949,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 6 (Бизнес)", 2, 0, 51},
    {1616, 2240,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 5 (Бизнес)", 2, 0, 51},
    {1617, 2195,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 4 (Бизнес)", 2, 0, 51},
    {1618, 3802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 3 (Бизнес)", 2, 0, 51},
    {1619, 3810,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 2 (Бизнес)", 2, 0, 51},
    {1620, 948,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект цветок в горшке 1 (Бизнес)", 2, 0, 51},
    {1621, 19166,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект карта штата (Бизнес)", 2, 0, 51},
    {1622, 19128,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект танцевальная площадка (Бизнес)", 2, 0, 51},
    {1623, 2232,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект черная колонка (Бизнес)", 2, 0, 51},
    {1624, 974,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект стеклянный забор (Бизнес)", 2, 0, 51},
    {1625, 19865,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект забор из досок (Бизнес)", 2, 0, 51},
    {1626, 1333,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая красная мусорка (Бизнес)", 2, 0, 51},
    {1627, 1408,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект деревянный забор 1 (Бизнес)", 1, 0, 0},
    {1628, 910,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект большая зелёная мусорка с 5 коробками (Бизнес)", 2, 0, 51},
    {1629, 1550,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект мешок с деньгами (Бизнес)", 2, 0, 51},
    {1630, 1829,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект сейф (Бизнес)", 2, 0, 51},
    {1631, 2244,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 4 (Бизнес)", 2, 0, 51},
    {1632, 2252,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 3 (Бизнес)", 2, 0, 51},
    {1633, 1361,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 2 (Бизнес)", 2, 0, 51},
    {1634, 1360,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект растения в горшке 1 (Бизнес)", 2, 0, 51},
    {1635, 1580,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект пакет наркотиков 1 (Бизнес)", 2, 0, 51},
    {1636, 1369,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект инвалидная колсяска (Бизнес)", 2, 0, 51},
    {1637, 1343,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект серая мусорка(Бизнес)", 2, 0, 51},
    {1638, 1359,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект прозрачная мусорка (Бизнес)", 2, 0, 51},
    {1639, 11734,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект кресло качалка(Бизнес)", 2, 0, 51},
    {1640, 2802,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект два стула и стол (Бизнес)", 2, 0, 51},
    {1641, 19824,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект бутылка алкоголя 2 (Бизнес)", 2, 0, 51},
    {1642, 19823,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Объект бутылка алкоголя 1 (Бизнес)", 2, 0, 51},
    {1643, 2887,  360.000000,  360.000000,    8.000000,    0.980185, 1, "Бумажник", 5, 0, 52},
    {1644, 1271,  -30.000000,    0.000000,   20.000000,    1.000000, 50, "Ларец Concept Car Luxury", 2, -10817537, 22},
    {1645, 1335,    0.000000,    0.000000,   30.000000,    1.000000, 50, "Ларец Олигарха", 2, -16776961, 0},
    {1646, 11734,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1647, 19121,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1648, 19122,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1649, 19123,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1650, 19124,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1651, 19125,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1652, 19126,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1653, 19127,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1654, 1463,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1655, 19831,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1656, 1481,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1657, 19996,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1658, 2121,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1659, 19997,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1660, 1368,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1661, 2333,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1662, 2114,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1663, 1728,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1664, 1361,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1665, 2245,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1666, 756,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1667, 809,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1668, 3520,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1669, 886,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1670, 890,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1671, 894,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1672, 823,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1673, 819,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1674, 811,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1675, 862,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1676, 1646,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1677, 1645,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1678, 643,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1679, 1281,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1680, 1432,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1681, 1280,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1682, 1594,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1683, 1670,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1684, 1679,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1685, 2763,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1686, 2764,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1687, 2776,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1688, 2788,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1689, 2799,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1690, 625,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1691, 626,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1692, 627,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1693, 628,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1694, 630,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1695, 631,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1696, 632,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1697, 633,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1698, 949,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1699, 950,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1700, 1360,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1701, 1361,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1702, 1364,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1703, 2246,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1704, 2251,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1705, 2811,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1706, 3810,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1707, 3802,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1708, 1720,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1709, 2857,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1710, 2814,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1711, 2866,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1712, 1210,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1713, 1212,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1714, 1550,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1715, 1829,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1716, 1576,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1717, 1579,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1718, 2035,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1719, 2036,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1720, 2034,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1721, 348,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1722, 349,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1723, 350,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1724, 351,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1725, 355,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1726, 353,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1727, 1450,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1728, 1369,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1729, 1438,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1730, 2670,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1731, 2672,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1732, 1264,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1733, 1328,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1734, 1235,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1735, 1343,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1736, 1409,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1737, 1415,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1738, 1332,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1739, 1333,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1740, 1334,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1741, 1460,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1742, 1446,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1743, 19865,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1744, 1408,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1745, 1418,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1746, 16630,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1747, 994,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1748, 3850,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1749, 1412,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1750, 8674,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1751, 19893,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1752, 19820,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1753, 19821,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1754, 1840,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1755, 19612,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1756, 11728,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1757, 19273,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1758, 19624,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1759, 11745,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1760, 2102,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1761, 18648,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1762, 18652,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1763, 18651,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1764, 18650,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1765, 18649,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1766, 18648,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1767, 19128,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1768, 19878,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1769, 19317,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1770, 19319,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1771, 19318,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1772, 19165,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1773, 2614,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1774, 18660,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1775, 18661,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1776, 18662,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1777, 18667,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1778, 18664,    0.000000,    0.000000,  200.000000,    0.899999, 1, "Неизвестный объект #1 (Бизнес)", 2, 0, 51},
    {1779, 19469,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Улучшенный ремень безопасности", 1, 0, 23},
    {1780, 1006,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Багажник", 1, 0, 23},
    {1781, 19783,   78.000000,    0.000000,    0.000000,    1.024503, 1, "Нашивка на аксессуар(защита)", 1, 0, 1781},
    {1782, 19778,   78.000000,    0.000000,    0.000000,    1.024503, 1, "Нашивка на аксессуар(регенерация)", 1, 0, 1782},
    {1783, 19779,   78.000000,    0.000000,    0.000000,    1.024503, 1, "Нашивка на аксессуар(урон)", 1, 0, 1783},
    {1784, 19780,   78.000000,    0.000000,    0.000000,    1.024503, 1, "Нашивка на аксессуар(удача)", 1, 0, 1784},
    {1785, 19781,   78.000000,    0.000000,    0.000000,    1.024503, 1, "Нашивка на аксессуар(макс. хп)", 1, 0, 1785},
    {1786, 18632,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Удилище", 1, 0, 0},
    {1787, 12684,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Щит Капитана Америки", 1, -1540214017, 6},
    {1788, 12673,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Русский боевой топор", 1, -1540214017, 6},
    {1789, 12652,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Супер-кирка", 1, -1540214017, 3},
    {1790, 12653,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Супер-грабли", 1, -1540214017, 3},
    {1791, 1623,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Флешка майнера", 1, 0, 0},
    {1792, 864,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Грядка хлопка", 1, 0, 0},
    {1793, 872,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Грядка льна", 1, 0, 0},
    {1794, 859,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Грядка с наркотиками", 1, 0, 0},
    {1795, 1827,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Рулеточный компас", 1, 0, 0},
    {1796, 12676,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Рука бесконечности", 1, 0, 3},
    {1797, 12678,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Молот Тора", 1, -1540214017, 6},
    {1798, 12692,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Голова Робокоп", 1, 0, 0},
    {1799, 12686,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Пятизубец", 1, 0, 0},
    {1800, 12688,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Посох льда", 1, 0, 0},
    {1801, 12679,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Шлем железного человека", 1, 0, 1},
    {1802, 3632,    0.000000,    0.000000,    0.000000,    0.850000, 1, "Увеличенный бак (60 литров)", 1, 0, 23},
    {1803, 3632,    0.000000,    0.000000,    0.000000,    0.850000, 1, "Увеличенный бак (90 литров)", 1, 0, 23},
    {1804, 3632,    0.000000,    0.000000,    0.000000,    0.850000, 1, "Увеличенный бак (160 литров)", 1, 0, 23},
    {1805, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер ( Зеленый )", 1, 6684927, 20},
    {1806, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер ( Синий )", 1, 65535, 20},
    {1807, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер ( Красный )", 1, -1728052993, 20},
    {1808, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер ( Фиолетовый )", 1, 1562102527, 20},
    {1809, 19601,  129.000000,    0.000000,    0.000000,    0.910323, 1, "Снегоуборочный бампер ( Желтый )", 1, -2204929, 20},
    {1810, 1327,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1811, 2614,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1812, 1885,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1813, 2186,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1814, 3016,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1815, 1604,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1816, 1602,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Ледяное копье", 1, 0, 3},
    {1817, 1243,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1818, 1601,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1819, 19527,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1820, 19527,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1821, 3383,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1822, 3383,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1823, 1570,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1824, 3056,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1825, 1886,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1826, 18641,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1827, 18643,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1828, 19082,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1829, 19081,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1830, 19080,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1831, 19083,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1832, 19084,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1833, 3497,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1834, 3440,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1835, 1602,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1836, 3383,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1837, 2978,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1838, 2782,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1839, 11489,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1840, 11489,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1841, 1895,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1842, 1895,    0.000000,  -30.000000,    0.000000,    1.299998, 1, "Спальник", 1, 0, 0},
    {1843, 1956,  -90.000000,    0.000000,  150.000000,    1.200000, 10000, "Бандитский респект", 1, 0, 0},
    {1844, 612,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB GTS AMG", 2, 0, 10},
    {1845, 613,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB G63 AMG", 2, 0, 10},
    {1846, 614,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: AUDI RS6", 2, 0, 10},
    {1847, 662,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW X5 G05", 2, 0, 10},
    {1848, 663,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevy Corvette C8", 2, 0, 10},
    {1849, 665,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevy Cruze", 2, 0, 10},
    {1850, 666,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus LX570", 2, 0, 10},
    {1851, 667,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche 911 Carrera", 2, 0, 10},
    {1852, 668,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Cayenne", 2, 0, 10},
    {1853, 699,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bentley Continental GT", 2, 0, 10},
    {1854, 793,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M8", 2, 0, 10},
    {1855, 794,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB E63s", 2, 0, 10},
    {1856, 909,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB S63 Coupe", 2, 0, 10},
    {1857, 965,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VW Tuareg", 2, 0, 10},
    {1858, 1194,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborgini Urus", 2, 0, 10},
    {1859, 1195,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: AUDI Q8", 2, 0, 10},
    {1860, 1196,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge SRT8", 2, 0, 10},
    {1861, 1197,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Acura NSX", 2, 0, 10},
    {1862, 1198,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo V90", 2, 0, 10},
    {1863, 1199,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Range Rover Evoque", 2, 0, 10},
    {1864, 1200,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Honda Civic type R", 2, 0, 10},
    {1865, 1201,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus IS350", 2, 0, 10},
    {1866, 1202,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Mustang", 2, 0, 10},
    {1867, 1203,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo XC90", 2, 0, 10},
    {1868, 1204,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Jaguar F-Pace", 2, 0, 10},
    {1869, 1205,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kia Optima", 2, 0, 10},
    {1870, 3155,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW Z4", 2, 0, 10},
    {1871, 3156,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB S600", 2, 0, 10},
    {1872, 3157,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW X5 e53", 2, 0, 10},
    {1873, 3158,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1874, 3194,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1875, 3195,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1876, 3196,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1877, 3197,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1878, 3198,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan GTR R34", 2, 0, 10},
    {1879, 3199,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: RR Ghost", 2, 0, 10},
    {1880, 3200,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VW Beetle", 2, 0, 10},
    {1881, 3201,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buggati Divo", 2, 0, 10},
    {1882, 3202,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buggati Chiron", 2, 0, 10},
    {1883, 3203,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Fiat 500 Abarth", 2, 0, 10},
    {1884, 3204,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB GLS", 2, 0, 10},
    {1885, 3205,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB g63 AMG", 2, 0, 10},
    {1886, 3206,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborghini SVJ", 2, 0, 10},
    {1887, 3207,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Range Rover SVA", 2, 0, 10},
    {1888, 3208,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW 530i", 2, 0, 10},
    {1889, 3209,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB S500 w220", 2, 0, 10},
    {1890, 3210,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tesla Model X", 2, 0, 10},
    {1891, 3211,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan Leaf", 2, 0, 10},
    {1892, 3212,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nissan Silvia s15", 2, 0, 10},
    {1893, 3213,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Subaru Forest", 2, 0, 10},
    {1894, 3215,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Subaru Legacy", 2, 0, 10},
    {1895, 3216,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hyundai Sonata", 2, 0, 10},
    {1896, 3217,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW 7 e38", 2, 0, 10},
    {1897, 3218,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e55", 2, 0, 10},
    {1898, 3219,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e500", 2, 0, 10},
    {1899, 3220,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e500", 2, 0, 10},
    {1900, 3222,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e500", 2, 0, 10},
    {1901, 3223,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e500", 2, 0, 10},
    {1902, 3224,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB e500", 2, 0, 10},
    {1903, 3232,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Infinity FX50", 2, 0, 10},
    {1904, 3233,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lexus RX470", 2, 0, 10},
    {1905, 3234,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kia Sportage", 2, 0, 10},
    {1906, 3235,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VW Golf", 2, 0, 10},
    {1907, 3236,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: AUDI R8", 2, 0, 10},
    {1908, 3237,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Camry XV40", 2, 0, 10},
    {1909, 3238,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Camry XV70", 2, 0, 10},
    {1910, 3239,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M5 E60", 2, 0, 10},
    {1911, 3240,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M5 F89", 2, 0, 10},
    {1912, 3245,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Maybach S600", 2, 0, 10},
    {1913, 3247,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB AMG GT", 2, 0, 10},
    {1914, 3248,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Panamera", 2, 0, 10},
    {1915, 3251,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VW Passat", 2, 0, 10},
    {1916, 3254,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevy Corvette 1980", 2, 0, 10},
    {1917, 3266,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge", 2, 0, 10},
    {1918, 3348,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Mustang GT500", 2, 0, 10},
    {1919, 3974,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Aston Martin DB5", 2, 0, 10},
    {1920, 4542,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M3 GTR", 2, 0, 10},
    {1921, 4543,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Camaro SS", 2, 0, 10},
    {1922, 4544,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mazda RX7", 2, 0, 10},
    {1923, 4545,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mazda RX8", 2, 0, 10},
    {1924, 4546,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mitsubishi Eclipse", 2, 0, 10},
    {1925, 4547,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Mustang old", 2, 0, 10},
    {1926, 4548,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Mustang old", 2, 0, 10},
    {1927, 4774,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW 760LI", 2, 0, 10},
    {1928, 4775,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Aston Martin One-77", 2, 0, 10},
    {1929, 4776,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bentley Baccalar", 2, 0, 10},
    {1930, 4777,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bentley Bentayga", 2, 0, 10},
    {1931, 4778,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M4 Competition", 2, 0, 10},
    {1932, 4779,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW I8", 2, 0, 10},
    {1933, 4780,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Genesis G90", 2, 0, 10},
    {1934, 4781,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Honda Integra Type-R", 2, 0, 10},
    {1935, 4782,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M3 G20", 2, 0, 10},
    {1936, 4783,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB S500 W223", 2, 0, 10},
    {1937, 4784,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford Raptor", 2, 0, 10},
    {1938, 4785,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ferrari J50", 2, 0, 10},
    {1939, 4786,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB SLR", 2, 0, 10},
    {1940, 4787,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Subaru BRZ", 2, 0, 10},
    {1941, 4788,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lada Vesta SV-Cross", 2, 0, 10},
    {1942, 4789,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Taycan", 2, 0, 10},
    {1943, 4790,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ferrari Enzo", 2, 0, 10},
    {1944, 4791,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Uaz Patriot", 2, 0, 10},
    {1945, 4792,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Волга 3110", 2, 0, 10},
    {1946, 4793,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB X-Class", 2, 0, 10},
    {1947, 4794,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1948, 4795,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1949, 4796,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1950, 4797,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1951, 4798,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1952, 4799,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JAGUAR XFR", 2, 0, 10},
    {1953, 4800,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Deltaplan", 2, 0, 10},
    {1954, 4801,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Deltaplan", 2, 0, 10},
    {1955, 4802,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Deltaplan", 2, 0, 10},
    {1956, 4803,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Deltaplan", 2, 0, 10},
    {1957, 6604,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: AUDI A6", 2, 0, 10},
    {1958, 6605,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: AUDI Q7", 2, 0, 10},
    {1959, 6606,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M6", 2, 0, 10},
    {1960, 6607,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M6 Old", 2, 0, 10},
    {1961, 6608,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB CLA-46", 2, 0, 10},
    {1962, 6609,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MB CLS", 2, 0, 10},
    {1963, 6610,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Haval H6", 2, 0, 10},
    {1964, 6611,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: TLC 200", 2, 0, 10},
    {1965, 6612,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lincoln", 2, 0, 10},
    {1966, 6613,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porsche Macan", 2, 0, 10},
    {1967, 6614,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Daewoo Matiz", 2, 0, 10},
    {1968, 6615,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-AMG G63 6x6", 2, 0, 10},
    {1969, 6616,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1970, 6617,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1971, 6618,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1972, 6619,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1973, 6619,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes E-63 AMG", 2, 0, 10},
    {1974, 6621,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: TLC Prado", 2, 0, 10},
    {1975, 6622,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Rav4", 2, 0, 10},
    {1976, 6623,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Supra A90", 2, 0, 10},
    {1977, 6624,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: UAZ 469", 2, 0, 10},
    {1978, 6625,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo XC90 old", 2, 0, 10},
    {1979, 12713,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz GL 63 AMG", 2, 0, 10},
    {1980, 12714,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Renault Laguna", 2, 0, 10},
    {1981, 12715,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz CLS 53 AMG", 2, 0, 10},
    {1982, 12716,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi RS5", 2, 0, 10},
    {1983, 12717,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cadillac Escalade", 2, 0, 10},
    {1984, 12718,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tesla Cybertruck", 2, 0, 10},
    {1985, 12719,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tesla Model S", 2, 0, 10},
    {1986, 12720,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ford GT", 2, 0, 10},
    {1987, 12721,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge Viper", 2, 0, 10},
    {1988, 12722,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volkswagen Polo", 2, 0, 10},
    {1989, 12723,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mitsubishi Lancer EVOIX", 2, 0, 10},
    {1990, 12724,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi TT RS", 2, 0, 10},
    {1991, 12725,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Roadtrain ACTROS", 2, 0, 10},
    {1992, 12726,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi S4", 2, 0, 10},
    {1993, 12727,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW 4S", 2, 0, 10},
    {1994, 12728,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Cadillac Escalade 2007", 2, 0, 10},
    {1995, 12729,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Chaser", 2, 0, 10},
    {1996, 12730,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dacia", 2, 0, 10},
    {1997, 12731,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mitsubishi Lancer EVOX", 2, 0, 10},
    {1998, 12732,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevrolet Impala 1964", 2, 0, 10},
    {1999, 12733,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevrolet Impala 1967", 2, 0, 10},
    {2000, 12734,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Roadtrain KENWOOTH", 2, 0, 10},
    {2001, 12735,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Trailer KENWTRL", 2, 0, 10},
    {2002, 12736,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: McLaren MP4", 2, 0, 10},
    {2003, 12737,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mach-1", 2, 0, 10},
    {2004, 12738,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rolls-Royce Phantom", 2, 0, 10},
    {2005, 12739,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Pickup", 2, 0, 10},
    {2006, 12740,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Roadtrain VOLVOTR", 2, 0, 10},
    {2007, 12741,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Subaru WRX STi ooit", 2, 0, 10},
    {2008, 12742,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sherpquad", 2, 0, 10},
    {2009, 12743,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Sanki", 2, 0, 10},
    {2010, 4800,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Deltaplan", 2, 0, 10},
    {2011, 14119,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Delimobile X", 2, 0, 10},
    {2012, 14120,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Delimobile Y", 2, 0, 10},
    {2013, 14121,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Delimobile Z", 2, 0, 10},
    {2014, 14122,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Delimobile W", 2, 0, 10},
    {2015, 14913,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Vision", 2, 0, 10},
    {2016, 14906,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotwheels", 2, 0, 10},
    {2017, 14767,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Amgone", 2, 0, 10},
    {2018, 14768,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Valkyrie", 2, 0, 10},
    {2019, 14769,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Aveo", 2, 0, 10},
    {2020, 14857,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bugbol", 2, 0, 10},
    {2021, 14884,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buggys", 2, 0, 10},
    {2022, 14899,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Buster", 2, 0, 10},
    {2023, 14904,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Monza", 2, 0, 10},
    {2024, 14910,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Priora", 2, 0, 10},
    {2025, 14916,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mtbbik", 2, 0, 10},
    {2026, 14905,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: G630", 2, 0, 10},
    {2027, 14918,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Autobus", 2, 0, 10},
    {2028, 14919,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Autobus", 2, 0, 10},
    {2029, 15085,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Charger", 2, 0, 10},
    {2030, 15098,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMWM1", 2, 0, 10},
    {2031, 15099,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Countach", 2, 0, 10},
    {2032, 15100,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nagasaki", 2, 0, 10},
    {2033, 15101,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Gemera", 2, 0, 10},
    {2034, 15102,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Kiak7", 2, 0, 10},
    {2035, 15103,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toro", 2, 0, 10},
    {2036, 15104,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lx600", 2, 0, 10},
    {2037, 15105,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Qashai", 2, 0, 10},
    {2038, 15106,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Predatorr", 2, 0, 10},
    {2039, 15107,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Scirroco", 2, 0, 10},
    {2040, 15108,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Longfin", 2, 0, 10},
    {2041, 15109,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyotagr", 2, 0, 10},
    {2042, 15110,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Wellcraft", 2, 0, 10},
    {2043, 15111,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Yacht", 2, 0, 10},
    {2044, 15112,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Boates", 2, 0, 10},
    {2045, 15113,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes A45", 2, 0, 10},
    {2046, 15114,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota AE86", 2, 0, 10},
    {2047, 15115,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Land Rover Defender", 2, 0, 10},
    {2048, 15116,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mach Auto", 2, 0, 10},
    {2049, 15117,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mazda 6", 2, 0, 10},
    {2050, 15118,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi R8s", 2, 0, 10},
    {2051, 15119,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hyundai Santa Fe", 2, 0, 10},
    {2052, 15295,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Range Rover Velar", 2, 0, 10},
    {2053, 15326,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz 1620", 2, 0, 10},
    {2054, 15327,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz 1113", 2, 0, 10},
    {2055, 15328,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volkswagen Constellation", 2, 0, 10},
    {2056, 15329,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Luxor Deluxe", 2, 0, 10},
    {2057, 15330,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Nimbus", 2, 0, 10},
    {2058, 15331,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Vestra", 2, 0, 10},
    {2059, 15332,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz Arocs 4163", 2, 0, 10},
    {2060, 15333,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Iveco Stralis", 2, 0, 10},
    {2061, 15334,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: MAN TGS", 2, 0, 10},
    {2062, 15335,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Volvo 460", 2, 0, 10},
    {2063, 15416,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Ambulance", 2, 0, 10},
    {2064, 15417,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Banshee", 2, 0, 10},
    {2065, 15418,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Benson", 2, 0, 10},
    {2066, 15419,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Bloodring", 2, 0, 10},
    {2067, 15420,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Bus", 2, 0, 10},
    {2068, 15421,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Cabbie", 2, 0, 10},
    {2069, 15122,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Police", 2, 0, 10},
    {2070, 15123,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Deluxo", 2, 0, 10},
    {2071, 15424,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - FBI Rancher", 2, 0, 10},
    {2072, 15425,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Flatbed", 2, 0, 10},
    {2073, 15426,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Idaho", 2, 0, 10},
    {2074, 15427,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Infernus", 2, 0, 10},
    {2075, 15428,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Love Fist", 2, 0, 10},
    {2076, 15429,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Patriot", 2, 0, 10},
    {2077, 15430,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Pizzaboy", 2, 0, 10},
    {2078, 15431,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Securica", 2, 0, 10},
    {2079, 15432,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Sentinel", 2, 0, 10},
    {2080, 15433,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Stinger", 2, 0, 10},
    {2081, 15434,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Stretch", 2, 0, 10},
    {2082, 15435,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Taxi", 2, 0, 10},
    {2083, 15436,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Trashmaster", 2, 0, 10},
    {2084, 15485,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Angel", 2, 0, 10},
    {2085, 15486,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - BF Injection", 2, 0, 10},
    {2086, 15487,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Blista", 2, 0, 10},
    {2087, 15488,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Burrito", 2, 0, 10},
    {2088, 15489,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - FBI Car", 2, 0, 10},
    {2089, 15490,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Hotring B", 2, 0, 10},
    {2090, 15491,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Sabre Turbo", 2, 0, 10},
    {2091, 15492,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VC - Sanchez", 2, 0, 10},
    {2092, 15493,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: ambtess", 2, 0, 10},
    {2093, 15494,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: ambtesx", 2, 0, 10},
    {2094, 15495,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW IX", 2, 0, 10},
    {2095, 15496,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz EQC", 2, 0, 10},
    {2096, 15497,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi Etron", 2, 0, 10},
    {2097, 15498,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: poltess", 2, 0, 10},
    {2098, 15499,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: poltesx", 2, 0, 10},
    {2099, 15500,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: twizy", 2, 0, 10},
    {2100, 15501,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Polestar Racing", 2, 0, 10},
    {2101, 15721,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: mgle", 2, 0, 10},
    {2102, 15720,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: articts", 2, 0, 10},
    {2103, 15722,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tesla Model 3", 2, 0, 10},
    {2104, 15723,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborghini Murcielago", 2, 0, 10},
    {2105, 15724,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: xoomer", 2, 0, 10},
    {2106, 15725,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: JMC", 2, 0, 10},
    {2107, 15626,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz g163", 2, 0, 10},
    {2108, 15627,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW serious 7 srs", 2, 0, 10},
    {2109, 15628,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: mbv250", 2, 0, 10},
    {2110, 15629,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: mbc63", 2, 0, 10},
    {2111, 15630,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: mbc63sc", 2, 0, 10},
    {2112, 15631,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: audirs7", 2, 0, 10},
    {2113, 15746,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: seven", 2, 0, 10},
    {2114, 15747,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW X6", 2, 0, 10},
    {2115, 15748,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Jeep Gladiator", 2, 0, 10},
    {2116, 15749,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M8", 2, 0, 10},
    {2117, 15750,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: VW Toureg", 2, 0, 10},
    {2118, 15751,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Range Rover", 2, 0, 10},
    {2119, 15752,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes S63", 2, 0, 10},
    {2120, 15858,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: c63", 2, 0, 10},
    {2121, 15859,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: f10", 2, 0, 10},
    {2122, 15860,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW e30", 2, 0, 10},
    {2123, 15861,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: transporter", 2, 0, 10},
    {2124, 15862,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: vito", 2, 0, 10},
    {2125, 15863,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: vivaro", 2, 0, 10},
    {2126, 15902,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: audi80", 2, 0, 10},
    {2127, 15903,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: c63coupe", 2, 0, 10},
    {2128, 15904,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW e34", 2, 0, 10},
    {2129, 15905,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW e63w", 2, 0, 10},
    {2130, 15906,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: f85", 2, 0, 10},
    {2131, 15907,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: gallardo", 2, 0, 10},
    {2132, 15908,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: gle2016", 2, 0, 10},
    {2133, 15909,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BMW M8 ( OLD )", 2, 0, 10},
    {2134, 15910,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Audi RS18", 2, 0, 10},
    {2135, 5381,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 1 (Лаунчер)", 1, 0, 3},
    {2136, 5382,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 2 (Лаунчер)", 1, 0, 3},
    {2137, 5383,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 3 (Лаунчер)", 1, 0, 3},
    {2138, 5384,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 4 (Лаунчер)", 1, 0, 3},
    {2139, 5385,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 5 (Лаунчер)", 1, 0, 3},
    {2140, 5386,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 6 (Лаунчер)", 1, 0, 3},
    {2141, 5387,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Часы 7 (Лаунчер)", 1, 0, 3},
    {2142, 5388,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Наушники 1 (Лаунчер)", 1, 0, 5},
    {2143, 5389,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Наушники 2 (Лаунчер)", 1, 0, 5},
    {2144, 5683,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Наушники 3 (Лаунчер)", 1, 0, 5},
    {2145, 5684,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Наушники 4 (Лаунчер)", 1, 0, 5},
    {2146, 5685,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Кепка 1 (Лаунчер)", 1, 0, 1},
    {2147, 5686,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Кепка 2 (Лаунчер)", 1, 0, 1},
    {2148, 5687,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Кепка 3 (Лаунчер)", 1, 0, 1},
    {2149, 5688,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Кепка 4 (Лаунчер)", 1, 0, 1},
    {2150, 5689,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Кепка 5 (Лаунчер)", 1, 0, 1},
    {2151, 5690,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 1 (Лаунчер)", 1, 0, 1},
    {2152, 5691,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 2 (Лаунчер)", 1, 0, 1},
    {2153, 5692,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 3 (Лаунчер)", 1, 0, 1},
    {2154, 5693,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 4 (Лаунчер)", 1, 0, 1},
    {2155, 5694,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 5 (Лаунчер)", 1, 0, 1},
    {2156, 12641,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 6 (Лаунчер)", 1, 0, 1},
    {2157, 12642,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 7 (Лаунчер)", 1, 0, 1},
    {2158, 12643,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 8 (Лаунчер)", 1, 0, 1},
    {2159, 12644,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 9 (Лаунчер)", 1, 0, 1},
    {2160, 12645,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 10 (Лаунчер)", 1, 0, 1},
    {2161, 12657,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Маска 11 (Лаунчер)", 1, 0, 3},
    {2162, 5695,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 1 (Лаунчер)", 1, 0, 3},
    {2163, 5696,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 2 (Лаунчер)", 1, 0, 3},
    {2164, 5697,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 3 (Лаунчер)", 1, 0, 3},
    {2165, 5698,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 4 (Лаунчер)", 1, 0, 3},
    {2166, 12636,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 5 (Лаунчер)", 1, 0, 3},
    {2167, 12637,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 6 (Лаунчер)", 1, 0, 3},
    {2168, 12638,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 7 (Лаунчер)", 1, 0, 3},
    {2169, 12639,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 8 (Лаунчер)", 1, 0, 3},
    {2170, 12640,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 9 (Лаунчер)", 1, 0, 3},
    {2171, 12662,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 10 (Лаунчер)", 1, 0, 3},
    {2172, 12663,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шлем 11 (Лаунчер)", 1, 0, 3},
    {2173, 5699,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 1 (Лаунчер)", 1, 0, 3},
    {2174, 5700,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 2 (Лаунчер)", 1, 0, 3},
    {2175, 5701,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 3 (Лаунчер)", 1, 0, 3},
    {2176, 5702,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 4 (Лаунчер)", 1, 0, 3},
    {2177, 6011,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 5 (Лаунчер)", 1, 0, 3},
    {2178, 12655,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 6 (Лаунчер)", 1, 0, 3},
    {2179, 12656,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Шляпа 7 (Лаунчер)", 1, 0, 3},
    {2180, 6012,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Рюкзак 1 (Лаунчер)", 1, 0, 6},
    {2181, 6013,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Рюкзак 2 (Лаунчер)", 1, 0, 6},
    {2182, 12634,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Рюкзак 3 (Лаунчер)", 1, 0, 6},
    {2183, 12635,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Рюкзак 4 (Лаунчер)", 1, 0, 6},
    {2184, 12646,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Меч 1 (Лаунчер)", 1, 0, 6},
    {2185, 0,    0.000000,    0.000000,    0.000000,    0.849798, 0, "free", 1, 0, 0},
    {2186, 0,    0.000000,    0.000000,    0.000000,    0.849798, 1, "free", 1, 0, 0},
    {2187, 12654,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Меч 4 (Лаунчер)", 1, 0, 6},
    {2188, 12658,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Меч 5 (Лаунчер)", 1, 0, 6},
    {2189, 12667,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Меч 6 (Лаунчер)", 1, 0, 6},
    {2190, 12647,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 1 (Лаунчер)", 1, 0, 5},
    {2191, 12648,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 2 (Лаунчер)", 1, 0, 5},
    {2192, 12649,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 3 (Лаунчер)", 1, 0, 5},
    {2193, 12650,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 4 (Лаунчер)", 1, 0, 5},
    {2194, 12651,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 5 (Лаунчер)", 1, 0, 5},
    {2195, 12659,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 6 (Лаунчер)", 1, 0, 5},
    {2196, 12665,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 7 (Лаунчер)", 1, 0, 5},
    {2197, 12666,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Крылья 8 (Лаунчер)", 1, 0, 5},
    {2198, 12661,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Бантик 1 (Лаунчер)", 1, 0, 3},
    {2199, 12664,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Броня 1 (Лаунчер)", 1, 0, 1},
    {2200, 12668,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Броня 2 (Лаунчер)", 1, 0, 1},
    {2201, 12669,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Броня 3 (Лаунчер)", 1, 0, 1},
    {2202, 19941,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Золото на спину", 1, 0, 5},
    {2203, 7666,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Звезда на спину", 1, 0, 5},
    {2204, 1275,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Домик на шею", 1, 0, 2},
    {2205, 360,    0.000000,    0.000000,    0.000000,    1.934306, 1, "РПГ на спину", 1, 0, 5},
    {2206, 918,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Бочка синяя на спину", 1, 0, 5},
    {2207, 954,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Копито на грудь", 1, 0, 2},
    {2208, 636,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Плащ зеленый", 1, 0, 5},
    {2209, 1751,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Телик на голову", 1, 0, 1},
    {2210, 2614,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Флаг США на спину", 1, 0, 5},
    {2211, 19059,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Шар на плечо синий", 1, 0, 2},
    {2212, 19060,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Шар на плечо Красный", 1, 0, 2},
    {2213, 19059,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Шарик синий на грудь", 1, 0, 2},
    {2214, 19060,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Шарик красный на грудь", 1, 0, 2},
    {2215, 2453,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Пицца на спину", 1, 0, 5},
    {2216, 19874,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Таблетка на спину", 1, 0, 5},
    {2217, 19625,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Сигарета на спину", 1, 0, 5},
    {2218, 3632,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Бочка на спину", 1, 0, 5},
    {2219, 18641,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Фонарь на спину", 1, 0, 5},
    {2220, 348,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Deagle на спину", 1, 0, 5},
    {2221, 356,    0.000000,    0.000000,    0.000000,    1.934306, 1, "M4 на спину", 1, 0, 5},
    {2222, 1340,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Ларёк с едой на спину", 1, 0, 5},
    {2223, 3273,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Ранец охотники на привидений", 1, 0, 5},
    {2224, 11435,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Вывеска с красной стрелкой", 1, 0, 5},
    {2225, 3927,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Табличка на спину", 1, 0, 5},
    {2226, 2643,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Burger Shot на спину", 1, 0, 5},
    {2227, 2972,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Почтовая сумка на спину", 1, 0, 5},
    {2228, 11743,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Кофеварка на спину", 1, 0, 5},
    {2229, 1371,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Бегемот на спину", 1, 0, 5},
    {2230, 3528,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Дракон на спину", 1, 0, 5},
    {2231, 1636,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Бомба на спину", 1, 0, 5},
    {2232, 2034,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Дробаш на спину", 1, 0, 5},
    {2233, 1083,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Колёсо Dollar на спину", 1, 0, 5},
    {2234, 2908,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Голова Зомби", 1, 0, 1},
    {2235, 3534,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Лампа на голову", 1, 0, 1},
    {2236, 1300,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Мусорка на голову", 1, 0, 1},
    {2237, 19553,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Шляпа фермера", 1, 0, 1},
    {2238, 9527,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Burger Shot очки", 1, 0, 0},
    {2239, 19163,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Черная маска на голову", 1, 0, 1},
    {2240, 19831,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Гриль на плечо", 1, 0, 2},
    {2241, 3071,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Гантеля на руку", 1, 0, 4},
    {2242, 1270,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Парконик на руку", 1, 0, 4},
    {2243, 11738,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Медицинский кейс на руку", 1, 0, 8},
    {2244, 15715,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Сфера на спину", 1, 0, 5},
    {2245, 15717,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Сфера на спину", 1, 0, 5},
    {2246, 15718,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Сфера на спину", 1, 0, 5},
    {2247, 15719,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Сфера Air", 1, 0, 5},
    {2248, 15868,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Дрон 1", 1, 0, 3},
    {2249, 15867,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Дрон 2", 1, 0, 3},
    {2250, 15716,    5.000000,    0.000000,  201.000000,    0.916299, 1, "Дрон 3", 1, 0, 3},
    {2251, 12676,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Рука Бесконечности", 1, 0, 2},
    {2252, 12678,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Молот Тора(Мьёльнир)", 1, 0, 2},
    {2253, 12674,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Портфель Love Town", 1, 0, 5},
    {2254, 0,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Синяя Акула", 1, -1540214017, 5},
    {2255, 0,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Розовая Акула", 1, -1540214017, 5},
    {2256, 6720,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Рожки", 1, -1540214017, 1},
    {2257, 12699,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Хагги Вагги", 1, -1540214017, 5},
    {2258, 14555,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Кисси Мисси", 1, -1540214017, 5},
    {2259, 6033,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #1", 1, -1540214017, 5},
    {2260, 6034,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #2", 1, -1540214017, 5},
    {2261, 6540,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #3", 1, -1540214017, 5},
    {2262, 6576,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #4", 1, -1540214017, 5},
    {2263, 6577,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #5", 1, -1540214017, 5},
    {2264, 6578,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #6", 1, -1540214017, 5},
    {2265, 6579,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #7", 1, -1540214017, 5},
    {2266, 6580,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #8", 1, -1540214017, 5},
    {2267, 6581,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #9", 1, -1540214017, 5},
    {2268, 6582,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #10", 1, -1540214017, 5},
    {2269, 6583,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #11", 1, -1540214017, 5},
    {2270, 6584,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Амонг Ас #12", 1, -1540214017, 5},
    {2271, 312,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: albert (ID: 312)", 1, 0, 9},
    {2272, 313,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: amiran (ID: 313)", 1, 0, 9},
    {2273, 314,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bathory (ID: 314)", 1, 0, 9},
    {2274, 315,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: brulov (ID: 315)", 1, 0, 9},
    {2275, 316,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: creed (ID: 316)", 1, 0, 9},
    {2276, 317,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: delorenzy (ID: 317)", 1, 0, 9},
    {2277, 318,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: edvardbil (ID: 318)", 1, 0, 9},
    {2278, 319,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: eljay (ID: 319)", 1, 0, 9},
    {2279, 329,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: evaelfie (ID: 320)", 1, 0, 9},
    {2280, 332,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: feduk (ID: 321)", 1, 0, 9},
    {2281, 340,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: kovalevsky (ID: 322)", 1, 0, 9},
    {2282, 382,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: litvin (ID: 323)", 1, 0, 9},
    {2283, 383,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: maras (ID: 324)", 1, 0, 9},
    {2284, 398,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: morgershtern (ID: 325)", 1, 0, 9},
    {2285, 399,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: nurmagamedov (ID: 326)", 1, 0, 9},
    {2286, 795,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: oxymiron (ID: 327)", 1, 0, 9},
    {2287, 796,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pavlenko (ID: 328)", 1, 0, 9},
    {2288, 797,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ravyazan (ID: 329)", 1, 0, 9},
    {2289, 798,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: romeru (ID: 330)", 1, 0, 9},
    {2290, 799,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: sammason (ID: 331)", 1, 0, 9},
    {2291, 907,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: shurigina (ID: 332)", 1, 0, 9},
    {2292, 908,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: valik (ID: 333)", 1, 0, 9},
    {2293, 1206,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: basta (ID: 334)", 1, 0, 9},
    {2294, 1326,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: byzova (ID: 335)", 1, 0, 9},
    {2295, 1573,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dzyuba (ID: 336)", 1, 0, 9},
    {2296, 1699,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: urgant (ID: 337)", 1, 0, 9},
    {2297, 2883,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: khovanksy (ID: 338)", 1, 0, 9},
    {2298, 2884,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: lukashenko (ID: 339)", 1, 0, 9},
    {2299, 3136,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: maddyson (ID: 340)", 1, 0, 9},
    {2300, 3137,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: noize (ID: 341)", 1, 0, 9},
    {2301, 3138,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pashatechnique (ID: 342)", 1, 0, 9},
    {2302, 3139,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: restorator (ID: 343)", 1, 0, 9},
    {2303, 3140,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: richi (ID: 344)", 1, 0, 9},
    {2304, 3141,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: sashagrey (ID: 345)", 1, 0, 9},
    {2305, 3142,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yurydud (ID: 346)", 1, 0, 9},
    {2306, 3143,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snowman (ID: 347)", 1, 0, 9},
    {2307, 3144,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: elf (ID: 348)", 1, 0, 9},
    {2308, 3145,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: farmernewyear (ID: 349)", 1, 0, 9},
    {2309, 3146,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dedmoroz (ID: 350)", 1, 0, 9},
    {2310, 3147,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yoda (ID: 351)", 1, 0, 9},
    {2311, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: leshiy (ID: 352)", 1, 0, 9},
    {2312, 3149,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: newshuba (ID: 353)", 1, 0, 9},
    {2313, 3150,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: deer (ID: 354)", 1, 0, 9},
    {2314, 3151,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: penguin (ID: 355)", 1, 0, 9},
    {2315, 3152,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snegurochka (ID: 356)", 1, 0, 9},
    {2316, 3153,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: footba (ID: 357)", 1, 0, 9},
    {2317, 3154,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: elfa (ID: 358)", 1, 0, 9},
    {2318, 3159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman1 (ID: 359)", 1, 0, 9},
    {2319, 3160,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman2 (ID: 360)", 1, 0, 9},
    {2320, 3161,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman3 (ID: 361)", 1, 0, 9},
    {2321, 3162,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman4 (ID: 362)", 1, 0, 9},
    {2322, 3163,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman5 (ID: 363)", 1, 0, 9},
    {2323, 3164,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gentelman6 (ID: 364)", 1, 0, 9},
    {2324, 3165,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft1 (ID: 365)", 1, 0, 9},
    {2325, 3166,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft2 (ID: 366)", 1, 0, 9},
    {2326, 3176,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft3 (ID: 367)", 1, 0, 9},
    {2327, 3177,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft4 (ID: 368)", 1, 0, 9},
    {2328, 3179,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft5 (ID: 369)", 1, 0, 9},
    {2329, 3180,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft6 (ID: 370)", 1, 0, 9},
    {2330, 3181,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft7 (ID: 371)", 1, 0, 9},
    {2331, 3182,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft8 (ID: 372)", 1, 0, 9},
    {2332, 3183,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft9 (ID: 373)", 1, 0, 9},
    {2333, 3184,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: minecraft10 (ID: 374)", 1, 0, 9},
    {2334, 3185,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: navalny (ID: 375)", 1, 0, 9},
    {2335, 3186,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: putin (ID: 376)", 1, 0, 9},
    {2336, 3188,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ironman (ID: 377)", 1, 0, 9},
    {2337, 3189,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: spiderman (ID: 378)", 1, 0, 9},
    {2338, 3190,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: venom (ID: 379)", 1, 0, 9},
    {2339, 3191,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: captainamerica (ID: 380)", 1, 0, 9},
    {2340, 3192,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: batman (ID: 381)", 1, 0, 9},
    {2341, 3225,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: anonimys (ID: 382)", 1, 0, 9},
    {2342, 3226,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit1 (ID: 383)", 1, 0, 9},
    {2343, 3227,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit2 (ID: 384)", 1, 0, 9},
    {2344, 3228,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit3 (ID: 385)", 1, 0, 9},
    {2345, 3229,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit4 (ID: 386)", 1, 0, 9},
    {2346, 3230,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit5 (ID: 387)", 1, 0, 9},
    {2347, 3231,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbitfarmer (ID: 388)", 1, 0, 9},
    {2348, 3349,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: alpachino (ID: 389)", 1, 0, 9},
    {2349, 3416,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bradpitt (ID: 390)", 1, 0, 9},
    {2350, 3429,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dikaprio (ID: 391)", 1, 0, 9},
    {2351, 3610,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: disel (ID: 392)", 1, 0, 9},
    {2352, 3611,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: kianu (ID: 393)", 1, 0, 9},
    {2353, 3784,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mask (ID: 394)", 1, 0, 9},
    {2354, 3870,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: robertjr (ID: 395)", 1, 0, 9},
    {2355, 3871,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: shwarz (ID: 396)", 1, 0, 9},
    {2356, 3883,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: statham (ID: 397)", 1, 0, 9},
    {2357, 3889,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tarantino (ID: 398)", 1, 0, 9},
    {2358, 4549,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: stalone (ID: 399)", 1, 0, 9},
    {2359, 4763,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: murphy (ID: 400)", 1, 0, 9},
    {2360, 4764,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hardy (ID: 401)", 1, 0, 9},
    {2361, 4765,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tyson (ID: 402)", 1, 0, 9},
    {2362, 4766,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: kanye (ID: 403)", 1, 0, 9},
    {2363, 4767,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mcgregor (ID: 404)", 1, 0, 9},
    {2364, 4768,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: travolta (ID: 405)", 1, 0, 9},
    {2365, 4769,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: cluni (ID: 406)", 1, 0, 9},
    {2366, 4770,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: markcyker (ID: 407)", 1, 0, 9},
    {2367, 4771,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dwaynej (ID: 408)", 1, 0, 9},
    {2368, 4772,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: kage (ID: 409)", 1, 0, 9},
    {2369, 4773,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: will (ID: 410)", 1, 0, 9},
    {2370, 4804,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: aaron (ID: 411)", 1, 0, 9},
    {2371, 4805,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: cooper (ID: 412)", 1, 0, 9},
    {2372, 5085,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: defo (ID: 413)", 1, 0, 9},
    {2373, 5090,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: evans (ID: 414)", 1, 0, 9},
    {2374, 5091,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gosling (ID: 415)", 1, 0, 9},
    {2375, 5092,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hannem (ID: 416)", 1, 0, 9},
    {2376, 5093,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth1 (ID: 417)", 1, 0, 9},
    {2377, 5094,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth2 (ID: 418)", 1, 0, 9},
    {2378, 5095,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth3 (ID: 419)", 1, 0, 9},
    {2379, 5096,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth4 (ID: 420)", 1, 0, 9},
    {2380, 5097,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth5 (ID: 421)", 1, 0, 9},
    {2381, 5098,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth6 (ID: 422)", 1, 0, 9},
    {2382, 5099,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth7 (ID: 423)", 1, 0, 9},
    {2383, 5100,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth8 (ID: 424)", 1, 0, 9},
    {2384, 5101,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth9 (ID: 425)", 1, 0, 9},
    {2385, 5102,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hbirth10 (ID: 426)", 1, 0, 9},
    {2386, 5103,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: jackiechan (ID: 427)", 1, 0, 9},
    {2387, 5104,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: maccon (ID: 428)", 1, 0, 9},
    {2388, 5376,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: matt (ID: 429)", 1, 0, 9},
    {2389, 5377,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: morgan (ID: 430)", 1, 0, 9},
    {2390, 5378,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tatum (ID: 431)", 1, 0, 9},
    {2391, 5379,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: woker (ID: 432)", 1, 0, 9},
    {2392, 5380,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: wood (ID: 433)", 1, 0, 9},
    {2393, 6014,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall0 (ID: 434)", 1, 0, 9},
    {2394, 6015,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall1 (ID: 435)", 1, 0, 9},
    {2395, 6016,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall2 (ID: 436)", 1, 0, 9},
    {2396, 6017,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall4 (ID: 437)", 1, 0, 9},
    {2397, 6018,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall5 (ID: 438)", 1, 0, 9},
    {2398, 6019,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall6 (ID: 439)", 1, 0, 9},
    {2399, 6020,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hall7 (ID: 440)", 1, 0, 9},
    {2400, 6021,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hasbik (ID: 441)", 1, 0, 9},
    {2401, 6022,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hellmem (ID: 442)", 1, 0, 9},
    {2402, 6023,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgmaskgirl (ID: 443)", 1, 0, 9},
    {2403, 6024,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgmaskman (ID: 444)", 1, 0, 9},
    {2404, 6025,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubggirl1 (ID: 445)", 1, 0, 9},
    {2405, 6026,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgman1 (ID: 446)", 1, 0, 9},
    {2406, 6027,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubggirl2 (ID: 447)", 1, 0, 9},
    {2407, 6028,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgman2 (ID: 448)", 1, 0, 9},
    {2408, 6029,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubggirl3 (ID: 449)", 1, 0, 9},
    {2409, 6030,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgman3 (ID: 450)", 1, 0, 9},
    {2410, 6031,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubggirl4 (ID: 451)", 1, 0, 9},
    {2411, 6032,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pubgman4 (ID: 452)", 1, 0, 9},
    {2412, 12700,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: chistmasbomj1 (ID: 453)", 1, 0, 9},
    {2413, 12701,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: chistmasbomj2 (ID: 454)", 1, 0, 9},
    {2414, 12702,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: chistmasbomj3 (ID: 455)", 1, 0, 9},
    {2415, 12703,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: chistmasbomj4 (ID: 456)", 1, 0, 9},
    {2416, 12704,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: chistmasbomj5 (ID: 457)", 1, 0, 9},
    {2417, 12705,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: elf2021 (ID: 458)", 1, 0, 9},
    {2418, 12706,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: grinch (ID: 459)", 1, 0, 9},
    {2419, 12707,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: littlebill (ID: 460)", 1, 0, 9},
    {2420, 12708,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: santa (ID: 461)", 1, 0, 9},
    {2421, 12709,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yearroliki1 (ID: 462)", 1, 0, 9},
    {2422, 12710,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yearroliki2 (ID: 463)", 1, 0, 9},
    {2423, 12711,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yearroliki3 (ID: 464)", 1, 0, 9},
    {2424, 12712,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yearroliki4 (ID: 465)", 1, 0, 9},
    {2425, 15010,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestavto (ID: 466)", 1, 0, 9},
    {2426, 15011,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestavtobar (ID: 467)", 1, 0, 9},
    {2427, 15012,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestclad (ID: 468)", 1, 0, 9},
    {2428, 15013,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestcliver (ID: 469)", 1, 0, 9},
    {2429, 15014,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestcr (ID: 470)", 1, 0, 9},
    {2430, 15015,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bestshaxt (ID: 471)", 1, 0, 9},
    {2431, 15016,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortaljax (ID: 472)", 1, 0, 9},
    {2432, 15017,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortalliu (ID: 473)", 1, 0, 9},
    {2433, 15018,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortalnoob (ID: 474)", 1, 0, 9},
    {2434, 15019,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortalsony (ID: 475)", 1, 0, 9},
    {2435, 15021,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortaltsung (ID: 476)", 1, 0, 9},
    {2436, 15022,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortraiden (ID: 477)", 1, 0, 9},
    {2437, 15023,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortscorpion (ID: 478)", 1, 0, 9},
    {2438, 15024,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mortsub (ID: 479)", 1, 0, 9},
    {2439, 15065,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new1 (ID: 480)", 1, 0, 9},
    {2440, 15066,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new2 (ID: 481)", 1, 0, 9},
    {2441, 15067,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new3 (ID: 482)", 1, 0, 9},
    {2442, 15068,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new4 (ID: 483)", 1, 0, 9},
    {2443, 15069,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new5 (ID: 484)", 1, 0, 9},
    {2444, 15070,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new6 (ID: 485)", 1, 0, 9},
    {2445, 15071,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new7 (ID: 486)", 1, 0, 9},
    {2446, 15072,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new8 (ID: 487)", 1, 0, 9},
    {2447, 15073,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new9 (ID: 488)", 1, 0, 9},
    {2448, 15074,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new10 (ID: 489)", 1, 0, 9},
    {2449, 15075,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new11 (ID: 490)", 1, 0, 9},
    {2450, 15076,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new12 (ID: 491)", 1, 0, 9},
    {2451, 15077,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new13 (ID: 492)", 1, 0, 9},
    {2452, 15078,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new14 (ID: 493)", 1, 0, 9},
    {2453, 15079,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new15 (ID: 494)", 1, 0, 9},
    {2454, 15080,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new16 (ID: 495)", 1, 0, 9},
    {2455, 15081,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new17 (ID: 496)", 1, 0, 9},
    {2456, 15082,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new18 (ID: 497)", 1, 0, 9},
    {2457, 15083,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new19 (ID: 498)", 1, 0, 9},
    {2458, 15084,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: new20 (ID: 499)", 1, 0, 9},
    {2459, 15086,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03bestcar (ID: 500)", 1, 0, 9},
    {2460, 15087,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03besthouse (ID: 501)", 1, 0, 9},
    {2461, 15088,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03bomj (ID: 502)", 1, 0, 9},
    {2462, 15089,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03bomj1 (ID: 503)", 1, 0, 9},
    {2463, 15090,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03bomj2 (ID: 504)", 1, 0, 9},
    {2464, 15091,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03brayant (ID: 505)", 1, 0, 9},
    {2465, 15092,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03chiken (ID: 506)", 1, 0, 9},
    {2466, 15093,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03cristiano (ID: 507)", 1, 0, 9},
    {2467, 15094,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03messi (ID: 508)", 1, 0, 9},
    {2468, 15095,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03ovechkin (ID: 509)", 1, 0, 9},
    {2469, 15096,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03usyk (ID: 510)", 1, 0, 9},
    {2470, 15097,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: 03zelenskiy (ID: 511)", 1, 0, 9},
    {2471, 15296,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family1 (ID: 512)", 1, 0, 9},
    {2472, 15297,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family2 (ID: 513)", 1, 0, 9},
    {2473, 15298,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family3 (ID: 514)", 1, 0, 9},
    {2474, 15299,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family4 (ID: 515)", 1, 0, 9},
    {2475, 15300,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family5 (ID: 516)", 1, 0, 9},
    {2476, 15301,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family6 (ID: 517)", 1, 0, 9},
    {2477, 15302,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family7 (ID: 518)", 1, 0, 9},
    {2478, 15303,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family8 (ID: 519)", 1, 0, 9},
    {2479, 15304,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family9 (ID: 520)", 1, 0, 9},
    {2480, 15305,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family10 (ID: 521)", 1, 0, 9},
    {2481, 15306,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family11 (ID: 522)", 1, 0, 9},
    {2482, 15307,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family12 (ID: 523)", 1, 0, 9},
    {2483, 15308,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family13 (ID: 524)", 1, 0, 9},
    {2484, 15309,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family14 (ID: 525)", 1, 0, 9},
    {2485, 15310,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family15 (ID: 526)", 1, 0, 9},
    {2486, 15311,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family16 (ID: 527)", 1, 0, 9},
    {2487, 15312,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family17 (ID: 528)", 1, 0, 9},
    {2488, 15313,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family18 (ID: 529)", 1, 0, 9},
    {2489, 15314,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family19 (ID: 530)", 1, 0, 9},
    {2490, 15315,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family20 (ID: 531)", 1, 0, 9},
    {2491, 15316,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family21 (ID: 532)", 1, 0, 9},
    {2492, 15317,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family22 (ID: 533)", 1, 0, 9},
    {2493, 15318,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family23 (ID: 534)", 1, 0, 9},
    {2494, 15319,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family24 (ID: 535)", 1, 0, 9},
    {2495, 15320,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family25 (ID: 536)", 1, 0, 9},
    {2496, 15321,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family26 (ID: 537)", 1, 0, 9},
    {2497, 15322,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family27 (ID: 538)", 1, 0, 9},
    {2498, 15323,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family28 (ID: 539)", 1, 0, 9},
    {2499, 15324,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family29 (ID: 540)", 1, 0, 9},
    {2500, 15325,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: family30 (ID: 541)", 1, 0, 9},
    {2501, 15458,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin1 (ID: 542)", 1, 0, 9},
    {2502, 15459,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin2 (ID: 543)", 1, 0, 9},
    {2503, 15460,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin3 (ID: 544)", 1, 0, 9},
    {2504, 15461,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin4 (ID: 545)", 1, 0, 9},
    {2505, 15462,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin5 (ID: 546)", 1, 0, 9},
    {2506, 15463,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin6 (ID: 547)", 1, 0, 9},
    {2507, 15464,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin7 (ID: 548)", 1, 0, 9},
    {2508, 15465,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin8 (ID: 549)", 1, 0, 9},
    {2509, 15466,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin9 (ID: 550)", 1, 0, 9},
    {2510, 15467,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin10 (ID: 551)", 1, 0, 9},
    {2511, 15468,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin11 (ID: 552)", 1, 0, 9},
    {2512, 15469,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin12 (ID: 553)", 1, 0, 9},
    {2513, 15470,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin13 (ID: 554)", 1, 0, 9},
    {2514, 15471,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin14 (ID: 555)", 1, 0, 9},
    {2515, 15472,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin15 (ID: 556)", 1, 0, 9},
    {2516, 15473,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin16 (ID: 557)", 1, 0, 9},
    {2517, 15474,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin17 (ID: 558)", 1, 0, 9},
    {2518, 15475,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin18 (ID: 559)", 1, 0, 9},
    {2519, 15476,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin19 (ID: 560)", 1, 0, 9},
    {2520, 15477,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin20 (ID: 561)", 1, 0, 9},
    {2521, 15478,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin21 (ID: 562)", 1, 0, 9},
    {2522, 15479,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin22 (ID: 563)", 1, 0, 9},
    {2523, 15480,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin23 (ID: 564)", 1, 0, 9},
    {2524, 15481,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin24 (ID: 565)", 1, 0, 9},
    {2525, 15482,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin25 (ID: 566)", 1, 0, 9},
    {2526, 15483,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin26 (ID: 567)", 1, 0, 9},
    {2527, 15484,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: vc_skin27 (ID: 568)", 1, 0, 9},
    {2528, 15696,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomj001 (ID: 569)", 1, 0, 9},
    {2529, 15697,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomj002 (ID: 570)", 1, 0, 9},
    {2530, 15698,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomj003 (ID: 571)", 1, 0, 9},
    {2531, 15699,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomj004 (ID: 572)", 1, 0, 9},
    {2532, 15700,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjclassic1 (ID: 573)", 1, 0, 9},
    {2533, 15701,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjclassic2 (ID: 574)", 1, 0, 9},
    {2534, 15702,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjclassic3 (ID: 575)", 1, 0, 9},
    {2535, 15703,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjclassic4 (ID: 576)", 1, 0, 9},
    {2536, 15704,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjclassic5 (ID: 577)", 1, 0, 9},
    {2537, 15705,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjg001 (ID: 578)", 1, 0, 9},
    {2538, 15706,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bomjg002 (ID: 579)", 1, 0, 9},
    {2539, 15890,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog1 (ID: 580)", 1, 0, 9},
    {2540, 15891,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog2 (ID: 581)", 1, 0, 9},
    {2541, 15892,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog3 (ID: 582)", 1, 0, 9},
    {2542, 15893,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog4 (ID: 583)", 1, 0, 9},
    {2543, 15894,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog5 (ID: 584)", 1, 0, 9},
    {2544, 15895,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog6 (ID: 585)", 1, 0, 9},
    {2545, 15896,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: blog7 (ID: 586)", 1, 0, 9},
    {2546, 15899,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tidex1 (ID: 587)", 1, 0, 9},
    {2547, 15900,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tidex2 (ID: 588)", 1, 0, 9},
    {2548, 15901,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tidex3 (ID: 589)", 1, 0, 9},
    {2549, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Ведьма", 1, 8421376, 12},
    {2550, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Стив", 1, 12632256, 12},
    {2551, 1974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Модификация: Фея", 1, 4620980, 12},
    {2552, 19873,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Модификация: Marshmallow", 1, 869059839, 12},
    {2553, 12662,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Голова Пряни", 1, 0, 1},
    {2554, 12663,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Голова Тигра ", 1, 0, 1},
    {2555, 12655,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Кокошник Снегурочки", 1, 0, 3},
    {2556, 12651,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья #1", 1, 0, 5},
    {2557, 12650,    0.000000,    0.000000,    0.000000,    0.802918, 1, " Крылья #2", 1, 0, 5},
    {2558, 12649,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья #3", 1, 0, 5},
    {2559, 12648,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья #4 ", 1, 0, 5},
    {2560, 12647,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья #5", 1, 0, 5},
    {2561, 12659,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья бабочки #1", 1, 0, 5},
    {2562, 12665,    0.000000,    0.000000,    0.000000,    0.802918, 1, " Крылья бабочки #2", 1, 0, 5},
    {2563, 12666,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Крылья бабочки #3", 1, 0, 5},
    {2564, 12657,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Маска Гринча ", 1, 0, 1},
    {2565, 12642,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Маска Охранника #1", 1, 0, 1},
    {2566, 12644,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Маска Охранника #2", 1, 0, 1},
    {2567, 12643,    0.000000,    0.000000,    0.000000,    0.802918, 1, " Маска Охранника #3", 1, 0, 1},
    {2568, 12641,    0.000000,    0.000000,    0.000000,    0.802918, 1, "Маска Распорядителя", 1, 0, 1},
    {2569, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 0, 4},
    {2570, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 0, 4},
    {2571, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 0, 4},
    {2572, 19558,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Кепка пиццериста", 1, 0, 1},
    {2573, 19343,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Пасхальное яйцо", 1, 0, 5},
    {2574, 19100,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Шляпа шерифа", 1, 0, 1},
    {2575, 19099,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Шляпа шерифа 2", 1, 0, 1},
    {2576, 19097,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Шляпа ковбоя", 1, 0, 1},
    {2577, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2578, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2579, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2580, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2581, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2582, 19840,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Водяной плащ", 1, 1, 4},
    {2583, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2584, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2585, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2586, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2587, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2588, 2712,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Метла на спину", 1, 1, 4},
    {2589, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2590, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2591, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2592, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2593, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2594, 19631,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Молот на спину", 1, 1, 4},
    {2595, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 0, 4},
    {2596, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2597, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2598, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2599, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2600, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2601, 10757,  142.000000,   29.000000,  123.000000,    1.465067, 1, "Самолет на спину", 1, 1, 4},
    {2602, 19128,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Кейс анимированый 3", 1, 0, 8},
    {2603, 7093,    0.000000,    0.000000,    0.000000,    1.934306, 1, "Erotic в руку", 1, 0, 8},
    {2604, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 0, 4},
    {2605, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2606, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2607, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2608, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2609, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2610, 6739,    0.000000,   27.000000,  134.000000,    1.978623, 1, "Акула на спину", 1, 1, 4},
    {2611, 2968,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Корона Bomj-Gang", 1, 0, 1},
    {2612, 2689,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Новогодний Тедди", 1, 4620980, 12},
    {2613, 1254,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Снеговик", 1, 4620980, 12},
    {2614, 1253,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Зубная Фейка", 1, 4620980, 12},
    {2615, 3272,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Паук на спину", 1, 0, 4},
    {2616, 19135,    0.000000,    0.000000,    0.000000,    0.849798, 1, "Вьетнамская шапка", 1, 0, 1},
    {2617, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2618, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2619, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2620, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2621, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2622, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка", 1, 1, 1},
    {2623, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка (малиновый)", 1, -16746497, 1},
    {2624, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка (темно-оранжевый)", 1, -8388353, 1},
    {2625, 19135,   90.000000,  301.000000,   90.000000,    0.818039, 1, "Вьетнамская шапка (оранжевый)", 1, -4259585, 1},
    {2626, 18868,    0.328000,   -0.150900,    0.052900,    0.000000, 1, "Черный чемодан", 1, 0, 8},
    {2627, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 0, 5},
    {2628, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2629, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2630, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2631, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2632, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2633, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита", 1, 1, 4},
    {2634, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита (малиновый)", 1, -16746497, 4},
    {2635, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита (темно-оранжевый)", 1, -8388353, 4},
    {2636, 336,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Бита (оранжевый)", 1, -4259585, 4},
    {2637, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 0, 5},
    {2638, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2639, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2640, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2641, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2642, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2643, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом", 1, 1, 4},
    {2644, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом (малиновый)", 1, -16746497, 4},
    {2645, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом (темно-оранжевый)", 1, -8388353, 4},
    {2646, 2805,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Мешок с мясом (оранжевый)", 1, -4259585, 4},
    {2647, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 0, 2},
    {2648, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2649, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2650, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2651, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2652, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2653, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска", 1, 1, 2},
    {2654, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска (малиновый)", 1, -16746497, 2},
    {2655, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска (темно-оранжевый)", 1, -8388353, 2},
    {2656, 19036,    0.143000,   -0.180999,    0.020999,    0.000000, 1, "Маска (оранжевый)", 1, -4259585, 2},
    {2657, 19315,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Олень на плечо", 1, 0, 6},
    {2658, 19527,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Зеленый фонарь", 1, 0, 2},
    {2659, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 0, 4},
    {2660, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2661, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2662, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2663, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2664, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2665, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата", 1, 1, 4},
    {2666, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата (малиновый)", 1, -16746497, 4},
    {2667, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата (темно-оранжевый)", 1, -8388353, 4},
    {2668, 337,  131.000000,   26.000000,   85.000000,    1.001000, 1, "Лопата (оранжевый)", 1, -4259585, 4},
    {2669, 18643,   10.000000,   10.000000,   10.000000,   10.000000, 1, "Красная шляпа Маяк", 1, 0, 1},
    {2670, 19605,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Сет: Лазерный меч (красный)", 1, 0, 12},
    {2671, 19606,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Сет: Лазерный меч (зеленый)", 1, 0, 12},
    {2672, 19607,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Сет: Лазерный меч (синий)", 1, 0, 12},
    {2673, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 0, 6},
    {2674, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2675, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2676, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2677, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2678, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2679, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет", 1, 1, 6},
    {2680, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет (малиновый)", 1, -16746497, 6},
    {2681, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет (темно-оранжевый)", 1, -8388353, 6},
    {2682, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет (оранжевый)", 1, -4259585, 6},
    {2683, 19904,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Жилет (желтый)", 1, -707314433, 6},
    {2684, 19135,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Сет: Эмс", 1, 0, 12},
    {2685, 3056,    0.000000,    0.000000,   85.000000,    0.860270, 1, "Магнит на спину", 1, 0, 6},
    {2686, 14608,    0.000000,    0.000000,  315.000000,    0.863300, 15, "Эффект x4 пополнение счёта (24 часа)", 2, -1540214017, 0},
    {2687, 15727,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Гавайская леи", 1, 0, 1},
    {2688, 15734,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Ананас", 1, 0, 6},
    {2689, 15742,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Магнитофон", 1, 0, 3},
    {2690, 15729,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Бронежилет 'Ветка Сакуры'", 1, 0, 7},
    {2691, 15744,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Адская гитара", 1, 0, 4},
    {2692, 15736,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Ожерелье Майя", 1, 0, 4},
    {2693, 15738,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Сюрикен на спину", 1, 0, 4},
    {2694, 15737,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Пенни борд (красный)", 1, 0, 4},
    {2695, 15735,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Пенни борд (голубой)", 1, 0, 4},
    {2696, 15732,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Клавитара", 1, 0, 4},
    {2697, 19792,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Технорюкзак", 1, 0, 4},
    {2698, 15733,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Прическа 2", 1, 0, 2},
    {2699, 15740,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Нео очки", 1, 0, 2},
    {2700, 15728,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Гавайские очки", 1, 0, 2},
    {2701, 15730,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Прическа 1", 1, 0, 2},
    {2702, 15741,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Крокодиловая шляпа", 1, 0, 1},
    {2703, 15726,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Гавайская шляпа", 1, 0, 1},
    {2704, 15743,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Маска ананас", 1, 0, 2},
    {2705, 15745,  258.000000,  180.000000,    0.000000,    0.803961, 1, "Клешня краба", 1, 0, 3},
    {2706, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся рюкзак", 1, 0, 6},
    {2707, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся розовый рюкзак", 1, -16737793, 6},
    {2708, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся зеленый рюкзак", 1, 6684927, 6},
    {2709, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся красный рюкзак", 1, -1728052993, 6},
    {2710, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся синий рюкзак", 1, 65535, 6},
    {2711, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся голубой рюкзак", 1, 869059839, 6},
    {2712, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся фиолетовый рюкзак", 1, 1562102527, 6},
    {2713, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся малиновый рюкзак", 1, -16746497, 6},
    {2714, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся темно-оранж. рюкзак", 1, -8388353, 6},
    {2715, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся оранжевый рюкзак", 1, -4259585, 6},
    {2716, 19159,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Крутящийся желтый рюкзак", 1, -707314433, 6},
    {2717, 1240,    0.000000,    0.000000,    0.000000,    0.764859, 1, "Сердце на грудь", 1, 0, 4},
    {2718, 18638,   90.000000,   14.000000,  100.000000,    0.735140, 1, "Каска строителя", 1, 0, 1},
    {2719, 19578,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Модификация Супер-Эльфа", 1, 0, 12},
    {2720, 1451,  -10.000000,  -10.000000,   75.000000,    1.000000, 1, "Модификация Монстр Дом", 1, 0, 12},
    {2721, 1615,  334.000000,    0.000000,  120.000000,    1.601668, 5, "Точильный амулет", 3, -2686721, 1167},
    {2722, 15966,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hnina (ID: 590)", 1, 0, 9},
    {2723, 15967,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie1 (ID: 591)", 1, 0, 9},
    {2724, 15968,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie2 (ID: 592)", 1, 0, 9},
    {2725, 15969,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie3 (ID: 593)", 1, 0, 9},
    {2726, 15970,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie4 (ID: 594)", 1, 0, 9},
    {2727, 15971,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie5 (ID: 595)", 1, 0, 9},
    {2728, 15972,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie6 (ID: 596)", 1, 0, 9},
    {2729, 15973,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie7 (ID: 597)", 1, 0, 9},
    {2730, 15974,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie8 (ID: 598)", 1, 0, 9},
    {2731, 15975,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hzombie9 (ID: 599)", 1, 0, 9},
    {2732, 15976,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ork (ID: 600)", 1, 0, 9},
    {2733, 15977,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie1 (ID: 601)", 1, 0, 9},
    {2734, 15978,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie2 (ID: 602)", 1, 0, 9},
    {2735, 15979,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie3 (ID: 603)", 1, 0, 9},
    {2736, 15980,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie5 (ID: 604)", 1, 0, 9},
    {2737, 15981,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie4 (ID: 605)", 1, 0, 9},
    {2738, 15982,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie6 (ID: 606)", 1, 0, 9},
    {2739, 15983,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie7 (ID: 607)", 1, 0, 9},
    {2740, 15984,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: szombie8 (ID: 608)", 1, 0, 9},
    {2741, 15985,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bigfoot_man (ID: 609)", 1, 0, 9},
    {2742, 15986,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: clown_man (ID: 610)", 1, 0, 9},
    {2743, 15987,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: fredi_street (ID: 611)", 1, 0, 9},
    {2744, 15988,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: jayson_friday13 (ID: 612)", 1, 0, 9},
    {2745, 15989,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mymia_man (ID: 613)", 1, 0, 9},
    {2746, 15990,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombie_girl1 (ID: 614)", 1, 0, 9},
    {2747, 15991,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombie_man1 (ID: 615)", 1, 0, 9},
    {2748, 15992,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombie_man2 (ID: 616)", 1, 0, 9},
    {2749, 15994,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombie_man4 (ID: 617)", 1, 0, 9},
    {2750, 16815,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: gimpy_diffuse (ID: 618)", 1, 0, 9},
    {2751, 16816,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: leatherface (ID: 619)", 1, 0, 9},
    {2752, 16817,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: nlo (ID: 620)", 1, 0, 9},
    {2753, 16818,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: piggsy (ID: 621)", 1, 0, 9},
    {2754, 16819,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: yasher (ID: 622)", 1, 0, 9},
    {2755, 16820,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombieevil (ID: 623)", 1, 0, 9},
    {2756, 12660,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шапка Верки Сердючки", 1, 0, 0},
    {2757, 12672,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_armor_1", 1, 0, 0},
    {2758, 12675,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_coat_1", 1, 0, 0},
    {2759, 12677,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_glove_r_2", 1, 0, 0},
    {2760, 12680,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_helmet_2", 1, 0, 0},
    {2761, 12681,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_hook_1", 1, 0, 0},
    {2762, 12682,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_lsaber_1", 1, 0, 0},
    {2763, 12683,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_mask_1", 1, 0, 0},
    {2764, 12685,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_skate_1", 1, 0, 0},
    {2765, 12687,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj18_stick_2", 1, 0, 0},
    {2766, 12689,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj17_backp_1", 1, 0, 0},
    {2767, 12690,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj17_helmet_1", 1, 0, 0},
    {2768, 12691,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj17_helmet_2", 1, 0, 0},
    {2769, 12693,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска Человека-паук", 1, 0, 0},
    {2770, 12694,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска Шрек", 1, 0, 0},
    {2771, 12695,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска из Бумажного дома", 1, 0, 0},
    {2772, 12696,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска Терминатор", 1, 0, 0},
    {2773, 12697,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска Добби", 1, 0, 0},
    {2774, 6254,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_swimb_l_1", 1, 0, 0},
    {2775, 6258,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_swimb_r_1", 1, 0, 0},
    {2776, 6259,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_wrist_l_1", 1, 0, 0},
    {2777, 6260,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_wrist_r_1", 1, 0, 0},
    {2778, 6261,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_gunback_1", 1, 0, 0},
    {2779, 6262,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_backp_1", 1, 0, 0},
    {2780, 6263,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_sword_1", 1, 0, 0},
    {2781, 6264,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_necklace_1", 1, 0, 0},
    {2782, 6265,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_vest_1", 1, 0, 0},
    {2783, 6266,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_belt_1", 1, 0, 0},
    {2784, 6267,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_divemask_1", 1, 0, 0},
    {2785, 6268,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_pirhat_1", 1, 0, 0},
    {2786, 6269,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_pircoat_1", 1, 0, 0},
    {2787, 6270,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_shield_1", 1, 0, 0},
    {2788, 6271,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_scullmask_1", 1, 0, 0},
    {2789, 6272,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj25_backp_2", 1, 0, 0},
    {2790, 6273,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_gravgun_1", 1, 0, 0},
    {2791, 6274,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_glasses_1", 1, 0, 0},
    {2792, 6275,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_shocker_1", 1, 0, 0},
    {2793, 6276,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_helmet_1", 1, 0, 0},
    {2794, 6277,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_handsword_1", 1, 0, 0},
    {2795, 6278,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_backp_1", 1, 0, 0},
    {2796, 6279,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj26_axe_1", 1, 0, 0},
    {2797, 6552,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_backp_1", 1, 0, 0},
    {2798, 6541,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_backp_2", 1, 0, 0},
    {2799, 6542,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_backp_3", 1, 0, 0},
    {2800, 6543,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_shovel_1", 1, 0, 0},
    {2801, 6544,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_backp_1", 1, 0, 0},
    {2802, 6545,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_backp_2", 1, 0, 0},
    {2803, 6546,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_backp_3", 1, 0, 0},
    {2804, 6547,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_bow_1", 1, 0, 0},
    {2805, 6548,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_mask_1", 1, 0, 0},
    {2806, 6549,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_mask_2", 1, 0, 0},
    {2807, 6550,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_mask_3", 1, 0, 0},
    {2808, 6551,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_shlder_1", 1, 0, 0},
    {2809, 6553,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_rdy_1", 1, 0, 0},
    {2810, 6554,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_rdy_2", 1, 0, 0},
    {2811, 6555,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_rdy_3", 1, 0, 0},
    {2812, 6556,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_stol", 1, 0, 0},
    {2813, 6557,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anim_p1", 1, 0, 0},
    {2814, 6558,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anim_p2", 1, 0, 0},
    {2815, 6559,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anim_p4", 1, 0, 0},
    {2816, 6560,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anim_p6", 1, 0, 0},
    {2817, 6561,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anim_p7", 1, 0, 0},
    {2818, 6562,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm2_p1", 1, 0, 0},
    {2819, 6563,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm2_p2", 1, 0, 0},
    {2820, 6564,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm2_p4", 1, 0, 0},
    {2821, 6565,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm2_p6", 1, 0, 0},
    {2822, 6566,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm2_p7", 1, 0, 0},
    {2823, 6567,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm3_p1", 1, 0, 0},
    {2824, 6568,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm3_p2", 1, 0, 0},
    {2825, 6569,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm3_p4", 1, 0, 0},
    {2826, 6570,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm3_p6", 1, 0, 0},
    {2827, 6571,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_anm3_p7", 1, 0, 0},
    {2828, 6572,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj27_kiosk_shtora", 1, 0, 0},
    {2829, 6585,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 1", 1, 0, 2},
    {2830, 6586,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 2", 1, 0, 2},
    {2831, 6587,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 3", 1, 0, 2},
    {2832, 6588,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 4", 1, 0, 2},
    {2833, 6589,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 5", 1, 0, 2},
    {2834, 6590,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 6", 1, 0, 2},
    {2835, 6591,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 7", 1, 0, 2},
    {2836, 6592,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 8", 1, 0, 2},
    {2837, 6593,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 9", 1, 0, 2},
    {2838, 6594,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 10", 1, 0, 2},
    {2839, 6595,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 11", 1, 0, 2},
    {2840, 6596,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 12", 1, 0, 2},
    {2841, 6597,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 13", 1, 0, 2},
    {2842, 6598,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 14", 1, 0, 2},
    {2843, 6599,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 15", 1, 0, 2},
    {2844, 6600,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандана наруто 16", 1, 0, 2},
    {2845, 6601,    0.000000,    0.000000,    0.000000,    0.000000, 1, "peria_cel", 1, 0, 0},
    {2846, 6602,    0.000000,    0.000000,    0.000000,    0.000000, 1, "peria_cel1", 1, 0, 0},
    {2847, 6603,    0.000000,    0.000000,    0.000000,    0.000000, 1, "rojki_cel", 1, 0, 0},
    {2848, 6698,    0.000000,    0.000000,    0.000000,    0.000000, 1, "rojki_cel1", 1, 0, 0},
    {2849, 6719,    0.000000,    0.000000,    0.000000,    0.000000, 1, "rojki_cel2", 1, 0, 0},
    {2850, 6721,    0.000000,    0.000000,    0.000000,    0.000000, 1, "rojki_cel4", 1, 0, 0},
    {2851, 6722,    0.000000,    0.000000,    0.000000,    0.000000, 1, "rojki_cel5", 1, 0, 0},
    {2852, 6723,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка", 1, 0, 6},
    {2853, 6724,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 1", 1, 0, 6},
    {2854, 6725,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 2", 1, 0, 6},
    {2855, 6726,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 3", 1, 0, 6},
    {2856, 6727,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 4", 1, 0, 6},
    {2857, 6728,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 5", 1, 0, 6},
    {2858, 6729,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 6", 1, 0, 6},
    {2859, 6730,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 7", 1, 0, 6},
    {2860, 6731,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 8", 1, 0, 6},
    {2861, 6732,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 9", 1, 0, 6},
    {2862, 6733,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 10", 1, 0, 6},
    {2863, 6734,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 11", 1, 0, 6},
    {2864, 6735,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 12", 1, 0, 6},
    {2865, 6736,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 13", 1, 0, 6},
    {2866, 6737,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 14", 1, 0, 6},
    {2867, 6738,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Плюшевая игрушка 15", 1, 0, 6},
    {2868, 6740,    0.000000,    0.000000,    0.000000,    0.000000, 1, "shark_pink", 1, 0, 0},
    {2869, 12583,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bear_hat", 1, 0, 0},
    {2870, 12698,    0.000000,    0.000000,    0.000000,    0.000000, 1, "stitch", 1, 0, 0},
    {2871, 14557,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 1", 1, 0, 3},
    {2872, 14644,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 2", 1, 0, 3},
    {2873, 14645,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 3", 1, 0, 3},
    {2874, 15020,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 4", 1, 0, 3},
    {2875, 15336,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(1)", 1, 0, 6},
    {2876, 15337,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(2)", 1, 0, 6},
    {2877, 15338,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(3)", 1, 0, 6},
    {2878, 15339,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(4)", 1, 0, 6},
    {2879, 15340,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(5)", 1, 0, 6},
    {2880, 15341,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(6)", 1, 0, 6},
    {2881, 15342,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(7)", 1, 0, 6},
    {2882, 15343,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(8)", 1, 0, 6},
    {2883, 15344,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(9)", 1, 0, 6},
    {2884, 15345,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Щит(10)", 1, 0, 6},
    {2885, 15350,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 5", 1, 0, 3},
    {2886, 15351,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 6", 1, 0, 3},
    {2887, 15352,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 7", 1, 0, 3},
    {2888, 15353,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Меч 8", 1, 0, 3},
    {2889, 15354,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Катана Х", 1, 0, 6},
    {2890, 15355,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(1)", 1, 0, 4},
    {2891, 15356,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(2)", 1, 0, 4},
    {2892, 15357,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(3)", 1, 0, 4},
    {2893, 15358,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(4)", 1, 0, 4},
    {2894, 15359,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(5)", 1, 0, 4},
    {2895, 15360,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка классическая(6)", 1, 0, 4},
    {2896, 15361,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка мажора(0)", 1, 0, 4},
    {2897, 15362,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка мажора(2)", 1, 0, 4},
    {2898, 15363,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка мажора(1)", 1, 0, 4},
    {2899, 15364,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка мажора(4)", 1, 0, 4},
    {2900, 15365,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка SUPREME", 1, 0, 4},
    {2901, 15366,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка GUCCI", 1, 0, 4},
    {2902, 15367,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка CHANEL", 1, 0, 4},
    {2903, 15368,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка Louis Vuitton", 1, 0, 4},
    {2904, 15369,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка NIKE", 1, 0, 4},
    {2905, 15370,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандитская барсетка(1)", 1, 0, 4},
    {2906, 15371,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандитская барсетка(2)", 1, 0, 4},
    {2907, 15372,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандитская барсетка(3)", 1, 0, 4},
    {2908, 15373,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бандитская барсетка(4)", 1, 0, 4},
    {2909, 15374,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф синий", 1, 0, 2},
    {2910, 15375,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф темно-красный", 1, 0, 2},
    {2911, 15376,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф черный", 1, 0, 2},
    {2912, 15377,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф красный", 1, 0, 2},
    {2913, 15378,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф бежевый", 1, 0, 2},
    {2914, 15379,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф розовый", 1, 0, 2},
    {2915, 15380,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф серый", 1, 0, 2},
    {2916, 15381,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф серый", 1, 0, 2},
    {2917, 15382,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф коричневый", 1, 0, 2},
    {2918, 15383,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф коричнево-черный", 1, 0, 2},
    {2919, 15384,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шарф желто-коричневый", 1, 0, 2},
    {2920, 15385,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рюкзак GUCCI(1)", 1, 0, 6},
    {2921, 15386,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рюкзак GUCCI(2)", 1, 0, 6},
    {2922, 15387,    0.000000,    0.000000,    0.000000,    0.000000, 1, "jetAks", 1, 0, 0},
    {2923, 15388,    0.000000,    0.000000,    0.000000,    0.000000, 1, "jetAks1", 1, 0, 0},
    {2924, 15389,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_backp_1", 1, 0, 0},
    {2925, 15390,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_backp_2", 1, 0, 0},
    {2926, 15391,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_backp_3", 1, 0, 0},
    {2927, 15392,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_backp_1", 1, 0, 0},
    {2928, 15393,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_backp_2", 1, 0, 0},
    {2929, 15394,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_backp_3", 1, 0, 0},
    {2930, 15395,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_backp_4", 1, 0, 0},
    {2931, 15396,    0.000000,    0.000000,    0.000000,    0.000000, 1, "pikachu01", 1, 0, 0},
    {2932, 15397,    0.000000,    0.000000,    0.000000,    0.000000, 1, "reckzk04", 1, 0, 0},
    {2933, 15398,    0.000000,    0.000000,    0.000000,    0.000000, 1, "reckzk00", 1, 0, 0},
    {2934, 15399,    0.000000,    0.000000,    0.000000,    0.000000, 1, "reckzk01", 1, 0, 0},
    {2935, 15400,    0.000000,    0.000000,    0.000000,    0.000000, 1, "reckzk02", 1, 0, 0},
    {2936, 15401,    0.000000,    0.000000,    0.000000,    0.000000, 1, "reckzk03", 1, 0, 0},
    {2937, 15402,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_vest_1", 1, 0, 0},
    {2938, 15403,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_vest_1a", 1, 0, 0},
    {2939, 15404,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_vest_1b", 1, 0, 0},
    {2940, 15405,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_vest_1c", 1, 0, 0},
    {2941, 15406,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_vest_1d", 1, 0, 0},
    {2942, 15407,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет(1)", 1, 0, 7},
    {2943, 15408,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет(2)", 1, 0, 7},
    {2944, 15409,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет(3)", 1, 0, 7},
    {2945, 15410,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет(4)", 1, 0, 7},
    {2946, 15411,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет(5)", 1, 0, 7},
    {2947, 15412,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Барсетка мажора(3)", 1, 0, 4},
    {2948, 15413,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_1", 1, 0, 0},
    {2949, 15414,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_2", 1, 0, 0},
    {2950, 15415,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_3", 1, 0, 0},
    {2951, 15437,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_4", 1, 0, 0},
    {2952, 15438,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_5", 1, 0, 0},
    {2953, 15439,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_6", 1, 0, 0},
    {2954, 15440,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_wig_7", 1, 0, 0},
    {2955, 15441,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_7", 1, 0, 0},
    {2956, 15442,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_8", 1, 0, 0},
    {2957, 15443,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_9", 1, 0, 0},
    {2958, 15444,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_10", 1, 0, 0},
    {2959, 15445,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_11", 1, 0, 0},
    {2960, 15446,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_12", 1, 0, 0},
    {2961, 15447,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_13", 1, 0, 0},
    {2962, 15448,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_14", 1, 0, 0},
    {2963, 15449,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_lv_15", 1, 0, 0},
    {2964, 15450,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_th_1", 1, 0, 0},
    {2965, 15451,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_th_2", 1, 0, 0},
    {2966, 15452,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_th_3", 1, 0, 0},
    {2967, 15453,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_th_4", 1, 0, 0},
    {2968, 15454,    0.000000,    0.000000,    0.000000,    0.000000, 1, "bag_th_5", 1, 0, 0},
    {2969, 15455,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_bag_1", 1, 0, 0},
    {2970, 15456,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_bag_1a", 1, 0, 0},
    {2971, 15457,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_bag_1b", 1, 0, 0},
    {2972, 15553,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_bag_1c", 1, 0, 0},
    {2973, 15554,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_bag_1d", 1, 0, 0},
    {2974, 15555,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сумка бизнесмена(0)", 1, 0, 8},
    {2975, 15556,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сумка бизнесмена(1)", 1, 0, 8},
    {2976, 15557,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сумка бизнесмена(2)", 1, 0, 8},
    {2977, 15558,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сумка бизнесмена(3)", 1, 0, 8},
    {2978, 15559,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сумка бизнесмена(4)", 1, 0, 8},
    {2979, 15560,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skfev1", 1, 0, 0},
    {2980, 15561,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skfev2", 1, 0, 0},
    {2981, 15562,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skfev2_1", 1, 0, 0},
    {2982, 15563,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skfev2_2", 1, 0, 0},
    {2983, 15655,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skf3", 1, 0, 0},
    {2984, 15656,    0.000000,    0.000000,    0.000000,    0.000000, 1, "skf4", 1, 0, 0},
    {2985, 15564,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_1", 1, 0, 0},
    {2986, 15565,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_2", 1, 0, 0},
    {2987, 15566,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_3", 1, 0, 0},
    {2988, 15567,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_4", 1, 0, 0},
    {2989, 15568,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_5", 1, 0, 0},
    {2990, 15569,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_6", 1, 0, 0},
    {2991, 15570,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_hat_7", 1, 0, 0},
    {2992, 15571,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_1", 1, 0, 0},
    {2993, 15572,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_2", 1, 0, 0},
    {2994, 15573,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_3", 1, 0, 0},
    {2995, 15574,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_4", 1, 0, 0},
    {2996, 15575,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_5", 1, 0, 0},
    {2997, 15576,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_6", 1, 0, 0},
    {2998, 15577,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj4_hat_7", 1, 0, 0},
    {2999, 15578,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_hat_1", 1, 0, 0},
    {3000, 15579,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_hat_1a", 1, 0, 0},
    {3001, 15580,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_hat_1b", 1, 0, 0},
    {3002, 15581,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_hat_1c", 1, 0, 0},
    {3003, 15582,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj2_hat_1d", 1, 0, 0},
    {3004, 15583,    0.000000,    0.000000,    0.000000,    0.000000, 1, "hat_1", 1, 0, 0},
    {3005, 15584,    0.000000,    0.000000,    0.000000,    0.000000, 1, "hat", 1, 0, 0},
    {3006, 15585,    0.000000,    0.000000,    0.000000,    0.000000, 1, "ears_stitch", 1, 0, 0},
    {3007, 15586,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cow_hoop", 1, 0, 0},
    {3008, 15587,    0.000000,    0.000000,    0.000000,    0.000000, 1, "beer_hat", 1, 0, 0},
    {3009, 15588,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cap_aska", 1, 0, 0},
    {3010, 15589,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cap_white", 1, 0, 0},
    {3011, 15590,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cap_frog", 1, 0, 0},
    {3012, 15591,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cap_rabbit", 1, 0, 0},
    {3013, 15650,    0.000000,    0.000000,    0.000000,    0.000000, 1, "cat_ears", 1, 0, 0},
    {3014, 15592,    0.000000,    0.000000,    0.000000,    0.000000, 1, "kaneki", 1, 0, 0},
    {3015, 15593,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(1)", 1, 0, 0},
    {3016, 15594,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(2)", 1, 0, 0},
    {3017, 15595,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(3)", 1, 0, 0},
    {3018, 15596,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(4)", 1, 0, 0},
    {3019, 15597,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(16)", 1, 0, 0},
    {3020, 15598,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Костянная маска(17", 1, 0, 0},
    {3021, 15599,    0.000000,    0.000000,    0.000000,    0.000000, 1, "med_mask01", 1, 0, 0},
    {3022, 15600,    0.000000,    0.000000,    0.000000,    0.000000, 1, "mask11", 1, 0, 0},
    {3023, 15601,    0.000000,    0.000000,    0.000000,    0.000000, 1, "mask22", 1, 0, 0},
    {3024, 15602,    0.000000,    0.000000,    0.000000,    0.000000, 1, "mask33", 1, 0, 0},
    {3025, 15603,    0.000000,    0.000000,    0.000000,    0.000000, 1, "mask44", 1, 0, 0},
    {3026, 15604,    0.000000,    0.000000,    0.000000,    0.000000, 1, "mask2100", 1, 0, 0},
    {3027, 15605,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_6", 1, 0, 0},
    {3028, 15606,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_2", 1, 0, 0},
    {3029, 15607,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_3", 1, 0, 0},
    {3030, 15608,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_4", 1, 0, 0},
    {3031, 15609,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_5", 1, 0, 0},
    {3032, 15610,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_7", 1, 0, 0},
    {3033, 15611,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj7_mask_1", 1, 0, 0},
    {3034, 15612,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Доска для серфинга(0)", 1, 0, 0},
    {3035, 15613,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Доска для серфинга(1)", 1, 0, 0},
    {3036, 15614,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Доска для серфинга(2)", 1, 0, 0},
    {3037, 15615,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Доска для серфинга(3)", 1, 0, 0},
    {3038, 15616,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Доска для серфинга(4)", 1, 0, 0},
    {3039, 15617,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скейтборд(0)", 1, 0, 0},
    {3040, 15618,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скейтборд(1)", 1, 0, 0},
    {3041, 15619,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скейтборд(2)", 1, 0, 0},
    {3042, 15620,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скейтборд(3)", 1, 0, 0},
    {3043, 15621,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скейтборд(4)", 1, 0, 0},
    {3044, 15687,    0.000000,    0.000000,    0.000000,    0.000000, 1, "guccicase", 1, 0, 0},
    {3045, 15688,    0.000000,    0.000000,    0.000000,    0.000000, 1, "luvicase", 1, 0, 0},
    {3046, 15689,    0.000000,    0.000000,    0.000000,    0.000000, 1, "luvitoncase", 1, 0, 0},
    {3047, 15690,    0.000000,    0.000000,    0.000000,    0.000000, 1, "heart_lp", 1, 0, 0},
    {3048, 15622,    0.000000,    0.000000,    0.000000,    0.000000, 1, "kagune", 1, 0, 0},
    {3049, 15623,    0.000000,    0.000000,    0.000000,    0.000000, 1, "kup_krill", 1, 0, 0},
    {3050, 15624,    0.000000,    0.000000,    0.000000,    0.000000, 1, "kup_lyk", 1, 0, 0},
    {3051, 15625,    0.000000,    0.000000,    0.000000,    0.000000, 1, "lollipop", 1, 0, 0},
    {3052, 15710,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_arm_stf_l_1", 1, 0, 0},
    {3053, 15711,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_arm_stf_r_1", 1, 0, 0},
    {3054, 15870,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_butfly_1", 1, 0, 0},
    {3055, 15871,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_flag_1", 1, 0, 0},
    {3056, 15872,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_1", 1, 0, 0},
    {3057, 15873,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_2", 1, 0, 0},
    {3058, 15874,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_3", 1, 0, 0},
    {3059, 15875,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_4", 1, 0, 0},
    {3060, 15876,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_5", 1, 0, 0},
    {3061, 15877,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_hat_6", 1, 0, 0},
    {3062, 15878,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_head_1", 1, 0, 0},
    {3063, 15879,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_head_2", 1, 0, 0},
    {3064, 15880,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_head_3", 1, 0, 0},
    {3065, 15881,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_mask_1", 1, 0, 0},
    {3066, 15707,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_mask_2", 1, 0, 0},
    {3067, 15708,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_skirt_1", 1, 0, 0},
    {3068, 15709,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj36_wings_1", 1, 0, 0},
    {3069, 15712,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj37_dragon_1", 1, 0, 0},
    {3070, 15713,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj37_tail_1", 1, 0, 0},
    {3071, 15714,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj37_vest_1", 1, 0, 0},
    {3072, 15731,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj38_mask_1", 1, 0, 0},
    {3073, 15739,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj38_glasses_2", 1, 0, 0},
    {3074, 15931,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_spider_1", 1, 0, 0},
    {3075, 15932,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_armor_1", 1, 0, 0},
    {3076, 15934,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_horns_1", 1, 0, 0},
    {3077, 15935,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_armor_3", 1, 0, 0},
    {3078, 15936,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_armor_2", 1, 0, 0},
    {3079, 15937,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_dem_shldr_1", 1, 0, 0},
    {3080, 15939,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_dem_helmet_1", 1, 0, 0},
    {3081, 15941,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_sat_cape_1", 1, 0, 0},
    {3082, 15942,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_sat_hand_1_R", 1, 0, 0},
    {3083, 15943,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_sat_hand_1_L", 1, 0, 0},
    {3084, 15944,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_head_1", 1, 0, 0},
    {3085, 15945,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_tail_1", 1, 0, 0},
    {3086, 15946,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_hand_1_R", 1, 0, 0},
    {3087, 15947,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_tail_L", 1, 0, 0},
    {3088, 15948,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_spine_1", 1, 0, 0},
    {3089, 15949,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_shldr1R", 1, 0, 0},
    {3090, 15950,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj39_drag_shldr1L", 1, 0, 0},
    {3091, 6573,    0.000000,    0.000000,    0.000000,    0.000000, 1, "obj28_wings_1", 1, 0, 0},
    {3092, 15346,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сюрикен ниндзя(1)", 1, 0, 0},
    {3093, 15347,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сюрикен ниндзя(2)", 1, 0, 0},
    {3094, 15348,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сюрикен ниндзя(3)", 1, 0, 0},
    {3095, 15349,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сюрикен ниндзя(4)", 1, 0, 0},
    {3096, 15951,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Летучая мышь", 1, 0, 0},
    {3097, 15952,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шипастый щит", 1, 0, 0},
    {3098, 15953,  180.000000,   91.000000,  339.000000,    1.054399, 1, "Голова Тыква", 1, 0, 0},
    {3099, 15954,  180.000000,   29.000000,  255.000000,    1.054000, 1, "Сфера над головой", 1, 0, 1},
    {3100, 15955,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Магические сфера", 1, 0, 0},
    {3101, 15956,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Механическая акула на спину", 1, 0, 0},
    {3102, 15957,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Крылья сукуба", 1, 0, 0},
    {3103, 15958,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Фантастический джетпак", 1, 0, 0},
    {3104, 15959,    0.000000,  272.000000,    0.000000,    1.465299, 1, "Клинки Аззинота", 1, 0, 6},
    {3105, 16807,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #1", 1, 0, 5},
    {3106, 16801,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #2", 1, 0, 5},
    {3107, 16802,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #3", 1, 0, 5},
    {3108, 16803,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #4", 1, 0, 5},
    {3109, 16804,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #5", 1, 0, 5},
    {3110, 16805,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #6", 1, 0, 5},
    {3111, 16806,    0.000000,    0.000000,  315.000000,    0.863399, 1, "Магический воздушный шар #7", 1, 0, 5},
    {3112, 1252,    0.000000,    0.000000,    0.000000,    0.850000, 1, "Гидравлика", 1, 0, 19},
    {3113, 2727,   90.000000,    0.000000,  -90.000000,    0.800000, 1, "Именное поместье", 1, 0, 3113},
    {3114, 350,  -20.000000,    0.000000,   75.000000,    1.389999, 1, "Обрез (активный аксессуар)", 1, 0, 6},
    {3115, 1007,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для Stafford", 1, 0, 19},
    {3116, 1017,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для Bravura", 1, 0, 19},
    {3117, 1025,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Offroad)", 1, 0, 19},
    {3118, 1032,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для a_s (Sultan)", 1, 0, 19},
    {3119, 1033,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для c_s (Sultan)", 1, 0, 19},
    {3120, 1035,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для c_l (Elegy)", 1, 0, 19},
    {3121, 1038,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для a_l (Elegy)", 1, 0, 19},
    {3122, 1042,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _br1 (Broadway)", 1, 0, 19},
    {3123, 1053,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для c_f (Flash)", 1, 0, 19},
    {3124, 1054,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для a_f (Flash)", 1, 0, 19},
    {3125, 1055,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для a_st (Stratum)", 1, 0, 19},
    {3126, 1067,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для a_j (Jester)", 1, 0, 19},
    {3127, 1068,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для c_j (Jester)", 1, 0, 19},
    {3128, 1073,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Shadow)", 1, 0, 19},
    {3129, 1074,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Mega)", 1, 0, 19},
    {3130, 1075,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Rimshine)", 1, 0, 19},
    {3131, 1076,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Wires)", 1, 0, 19},
    {3132, 1077,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Classic)", 1, 0, 19},
    {3133, 1078,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Twist)", 1, 0, 19},
    {3134, 1079,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Cutter)", 1, 0, 19},
    {3135, 1080,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Switch)", 1, 0, 19},
    {3136, 1081,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Grove)", 1, 0, 19},
    {3137, 1082,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Import)", 1, 0, 19},
    {3138, 1084,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Trance)", 1, 0, 19},
    {3139, 1085,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Atomic)", 1, 0, 19},
    {3140, 1086,   90.000000,    0.000000,    0.000000,    5.000000, 1, "stereo", 1, 0, 19},
    {3141, 1087,   90.000000,    0.000000,    0.000000,    5.000000, 1, "hydralics", 1, 0, 19},
    {3142, 1088,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для (Uranus)", 1, 0, 19},
    {3143, 1091,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для c_u (Uranus)", 1, 0, 19},
    {3144, 1096,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Ahab)", 1, 0, 19},
    {3145, 1097,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Virtual)", 1, 0, 19},
    {3146, 1098,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Access)", 1, 0, 19},
    {3147, 1099,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для br1 (Broadway)", 1, 0, 19},
    {3148, 1100,   90.000000,    0.000000,    0.000000,    5.000000, 1, "misc_c_lr_rem1 (Remingtn)", 1, 0, 19},
    {3149, 1101,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для rem1 (Remingtn)", 1, 0, 19},
    {3150, 1102,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для sv (Savanna)", 1, 0, 19},
    {3151, 1103,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для lr_bl2 (Blade)", 1, 0, 19},
    {3152, 1104,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для bl1 (Blade)", 1, 0, 19},
    {3153, 1105,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для bl2 (Blade)", 1, 0, 19},
    {3154, 1106,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _rem2 (Remingtn)", 1, 0, 19},
    {3155, 1107,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для bl1 (Blade)", 1, 0, 19},
    {3156, 1109,   90.000000,    0.000000,    0.000000,    5.000000, 1, "bbb_lr_slv1 (Slamvan)", 1, 0, 19},
    {3157, 1110,   90.000000,    0.000000,    0.000000,    5.000000, 1, "bbb_lr_slv2 (Slamvan)", 1, 0, 19},
    {3158, 1113,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для slv1 (Slamvan)", 1, 0, 19},
    {3159, 1114,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для slv2 (Slamvan)", 1, 0, 19},
    {3160, 1115,   90.000000,    0.000000,    0.000000,    5.000000, 1, "fbb_lr_slv1 (Slamvan)", 1, 0, 19},
    {3161, 1116,   90.000000,    0.000000,    0.000000,    5.000000, 1, "fbb_lr_slv2 (Slamvan)", 1, 0, 19},
    {3162, 1118,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _slv1 (Slamvan)", 1, 0, 19},
    {3163, 1119,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _slv2 (Slamvan)", 1, 0, 19},
    {3164, 1120,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для slv1 (Slamvan)", 1, 0, 19},
    {3165, 1121,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для slv2 (Slamvan)", 1, 0, 19},
    {3166, 1122,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _rem1 (Remingtn)", 1, 0, 19},
    {3167, 1123,   90.000000,    0.000000,    0.000000,    5.000000, 1, "misc_c_lr_rem2 (Remingtn)", 1, 0, 19},
    {3168, 1128,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для lr_bl1 (Blade)", 1, 0, 19},
    {3169, 1129,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для sv1 (Savanna)", 1, 0, 19},
    {3170, 1130,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для lr_sv1 (Savanna)", 1, 0, 19},
    {3171, 1131,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Крыша для lr_sv2 (Savanna)", 1, 0, 19},
    {3172, 1133,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _sv (Savanna)", 1, 0, 19},
    {3173, 1134,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для _t1 (Tornado)", 1, 0, 19},
    {3174, 1135,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для t2 (Tornado)", 1, 0, 19},
    {3175, 1136,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Выхлоп для t1 (Tornado)", 1, 0, 19},
    {3176, 1137,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Правые юбки для t1 (Tornado", 1, 0, 19},
    {3177, 1143,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для Stallion (Right Oval Vents)", 1, 0, 19},
    {3178, 1145,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для Bravura (Right Square Vents)", 1, 0, 19},
    {3179, 1150,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a_f (Flash)", 1, 0, 19},
    {3180, 1151,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для c_f (Flash)", 1, 0, 19},
    {3181, 1161,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для c_j (Jester)", 1, 0, 19},
    {3182, 1169,   90.000000,    0.000000,    0.000000,    5.000000, 1, "fbmp_a_s (Sultan)", 1, 0, 19},
    {3183, 1184,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lr_bl1 (Blade)", 1, 0, 19},
    {3184, 1186,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lr_sv2 (Savanna)", 1, 0, 19},
    {3185, 1187,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lr_sv1 (Savanna)", 1, 0, 19},
    {3186, 1188,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Бампер(Передн.) для sv2 (Savanna)", 1, 0, 19},
    {3187, 1189,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Бампер(Передн.) для sv1 (Savanna)", 1, 0, 19},
    {3188, 1190,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Бампер(Передн.) для t2 (Tornado", 1, 0, 19},
    {3189, 1191,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Бампер(Передн.) для t1 (Tornado", 1, 0, 19},
    {3190, 1192,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lr_t1 (Tornado", 1, 0, 19},
    {3191, 1193,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lr_t2 (Tornado", 1, 0, 19},
    {3192, 6767,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-16)", 1, 0, 19},
    {3193, 6768,    0.000000,    0.000000,   90.000000,   13.000000, 1, "Диски (Type-17)", 1, 0, 19},
    {3194, 6769,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_a", 1, 0, 19},
    {3195, 6770,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_b", 1, 0, 19},
    {3196, 6771,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_c", 1, 0, 19},
    {3197, 6772,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_d", 1, 0, 19},
    {3198, 6773,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_e", 1, 0, 19},
    {3199, 6774,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот 760li_f", 1, 0, 19},
    {3200, 6775,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_a", 1, 0, 19},
    {3201, 6776,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_b", 1, 0, 19},
    {3202, 6777,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_c", 1, 0, 19},
    {3203, 6778,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_d", 1, 0, 19},
    {3204, 6779,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_e", 1, 0, 19},
    {3205, 6780,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bacalars_f", 1, 0, 19},
    {3206, 6781,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот beetle_a", 1, 0, 19},
    {3207, 6782,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_a", 1, 0, 19},
    {3208, 6783,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_b", 1, 0, 19},
    {3209, 6784,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_c", 1, 0, 19},
    {3210, 6785,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_d", 1, 0, 19},
    {3211, 6786,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_e", 1, 0, 19},
    {3212, 6787,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bentayga_f", 1, 0, 19},
    {3213, 6788,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwe38_a", 1, 0, 19},
    {3214, 6789,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_a", 1, 0, 19},
    {3215, 6790,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_b", 1, 0, 19},
    {3216, 6791,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_c", 1, 0, 19},
    {3217, 6792,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_d", 1, 0, 19},
    {3218, 6793,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_e", 1, 0, 19},
    {3219, 6794,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwi8_f", 1, 0, 19},
    {3220, 6795,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_a", 1, 0, 19},
    {3221, 6796,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_b", 1, 0, 19},
    {3222, 6797,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_c", 1, 0, 19},
    {3223, 6798,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_d", 1, 0, 19},
    {3224, 6799,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_e", 1, 0, 19},
    {3225, 6800,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwm8_f", 1, 0, 19},
    {3226, 6801,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_a", 1, 0, 19},
    {3227, 6802,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_b", 1, 0, 19},
    {3228, 6803,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_c", 1, 0, 19},
    {3229, 6804,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_d", 1, 0, 19},
    {3230, 6805,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_e", 1, 0, 19},
    {3231, 6806,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwxf_f", 1, 0, 19},
    {3232, 6807,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_a", 1, 0, 19},
    {3233, 6808,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_b", 1, 0, 19},
    {3234, 6809,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_c", 1, 0, 19},
    {3235, 6810,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_d", 1, 0, 19},
    {3236, 6811,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_e", 1, 0, 19},
    {3237, 6812,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwzf_f", 1, 0, 19},
    {3238, 6813,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_a", 1, 0, 19},
    {3239, 6814,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_b", 1, 0, 19},
    {3240, 6815,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_c", 1, 0, 19},
    {3241, 6816,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_d", 1, 0, 19},
    {3242, 6817,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_e", 1, 0, 19},
    {3243, 6818,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bugdivo_f", 1, 0, 19},
    {3244, 6819,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_a", 1, 0, 19},
    {3245, 6820,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_b", 1, 0, 19},
    {3246, 6821,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_c", 1, 0, 19},
    {3247, 6822,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_d", 1, 0, 19},
    {3248, 6823,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_e", 1, 0, 19},
    {3249, 6824,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот camry_f", 1, 0, 19},
    {3250, 6825,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_a", 1, 0, 19},
    {3251, 6826,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_b", 1, 0, 19},
    {3252, 6827,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_c", 1, 0, 19},
    {3253, 6828,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_d", 1, 0, 19},
    {3254, 6829,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_e", 1, 0, 19},
    {3255, 6830,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот checruz_f", 1, 0, 19},
    {3256, 6831,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_a", 1, 0, 19},
    {3257, 6832,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_b", 1, 0, 19},
    {3258, 6833,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_c", 1, 0, 19},
    {3259, 6834,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_d", 1, 0, 19},
    {3260, 6835,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_f", 1, 0, 19},
    {3261, 6836,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chiron_g", 1, 0, 19},
    {3262, 6837,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_a", 1, 0, 19},
    {3263, 6838,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_b", 1, 0, 19},
    {3264, 6839,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_c", 1, 0, 19},
    {3265, 6840,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_d", 1, 0, 19},
    {3266, 6841,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_e", 1, 0, 19},
    {3267, 6842,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот civtr_f", 1, 0, 19},
    {3268, 6843,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_a", 1, 0, 19},
    {3269, 6844,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_b", 1, 0, 19},
    {3270, 6845,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_c", 1, 0, 19},
    {3271, 6846,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_d", 1, 0, 19},
    {3272, 6847,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_e", 1, 0, 19},
    {3273, 6848,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cumry_f", 1, 0, 19},
    {3274, 6849,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_a", 1, 0, 19},
    {3275, 6850,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_b", 1, 0, 19},
    {3276, 6851,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_c", 1, 0, 19},
    {3277, 6852,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_d", 1, 0, 19},
    {3278, 6853,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_e", 1, 0, 19},
    {3279, 6854,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dodgcha_f", 1, 0, 19},
    {3280, 6855,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_a", 1, 0, 19},
    {3281, 6856,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_b", 1, 0, 19},
    {3282, 6857,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_c", 1, 0, 19},
    {3283, 6858,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_d", 1, 0, 19},
    {3284, 6859,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_e", 1, 0, 19},
    {3285, 6860,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fiat500_f", 1, 0, 19},
    {3286, 6861,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_a", 1, 0, 19},
    {3287, 6862,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_b", 1, 0, 19},
    {3288, 7393,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_c", 1, 0, 19},
    {3289, 7394,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_d", 1, 0, 19},
    {3290, 7395,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_e", 1, 0, 19},
    {3291, 7396,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот frj50_f", 1, 0, 19},
    {3292, 7397,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_a", 1, 0, 19},
    {3293, 7398,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_b", 1, 0, 19},
    {3294, 7399,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_c", 1, 0, 19},
    {3295, 7400,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_d", 1, 0, 19},
    {3296, 7401,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_e", 1, 0, 19},
    {3297, 7402,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g63amg_f", 1, 0, 19},
    {3298, 7403,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_a", 1, 0, 19},
    {3299, 7404,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_b", 1, 0, 19},
    {3300, 7405,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_c", 1, 0, 19},
    {3301, 7406,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_d", 1, 0, 19},
    {3302, 7407,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_e", 1, 0, 19},
    {3303, 7408,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gg90_f", 1, 0, 19},
    {3304, 7409,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gls2020_a", 1, 0, 19},
    {3305, 7410,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gls2020_b", 1, 0, 19},
    {3306, 7411,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gls2020_c", 1, 0, 19},
    {3307, 7412,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_a", 1, 0, 19},
    {3308, 7413,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_b", 1, 0, 19},
    {3309, 7414,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_c", 1, 0, 19},
    {3310, 7974,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_d", 1, 0, 19},
    {3311, 7975,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_e", 1, 0, 19},
    {3312, 7976,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gtsamg_f", 1, 0, 19},
    {3313, 7977,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот huntold_a", 1, 0, 19},
    {3314, 9194,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_a", 1, 0, 19},
    {3315, 9195,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_b", 1, 0, 19},
    {3316, 9196,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_c", 1, 0, 19},
    {3317, 9197,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_d", 1, 0, 19},
    {3318, 9198,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_e", 1, 0, 19},
    {3319, 9199,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот infinity_f", 1, 0, 19},
    {3320, 9200,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_a", 1, 0, 19},
    {3321, 9201,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_b", 1, 0, 19},
    {3322, 9202,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_c", 1, 0, 19},
    {3323, 9203,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_d", 1, 0, 19},
    {3324, 9204,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_e", 1, 0, 19},
    {3325, 9268,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот intgra_f", 1, 0, 19},
    {3326, 9479,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_a", 1, 0, 19},
    {3327, 9480,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_b", 1, 0, 19},
    {3328, 9481,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_c", 1, 0, 19},
    {3329, 10311,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_d", 1, 0, 19},
    {3330, 10312,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_e", 1, 0, 19},
    {3331, 10313,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jagfp_f", 1, 0, 19},
    {3332, 10314,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_a", 1, 0, 19},
    {3333, 10745,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_b", 1, 0, 19},
    {3334, 10746,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_c", 1, 0, 19},
    {3335, 10747,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_d", 1, 0, 19},
    {3336, 10748,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_e", 1, 0, 19},
    {3337, 10749,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kaban_f", 1, 0, 19},
    {3338, 11418,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот landsva_a", 1, 0, 19},
    {3339, 11419,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_a", 1, 0, 19},
    {3340, 11754,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_b", 1, 0, 19},
    {3341, 11755,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_c", 1, 0, 19},
    {3342, 11756,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_d", 1, 0, 19},
    {3343, 11757,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_e", 1, 0, 19},
    {3344, 11758,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexis_f", 1, 0, 19},
    {3345, 11759,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_a", 1, 0, 19},
    {3346, 11760,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_b", 1, 0, 19},
    {3347, 11761,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_c", 1, 0, 19},
    {3348, 11762,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_d", 1, 0, 19},
    {3349, 11763,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_e", 1, 0, 19},
    {3350, 11764,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexlx_f", 1, 0, 19},
    {3351, 11765,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_a", 1, 0, 19},
    {3352, 11766,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_b", 1, 0, 19},
    {3353, 11767,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_c", 1, 0, 19},
    {3354, 11768,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_d", 1, 0, 19},
    {3355, 11769,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_e", 1, 0, 19},
    {3356, 11770,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lexrx_f", 1, 0, 19},
    {3357, 11771,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_a", 1, 0, 19},
    {3358, 11772,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_b", 1, 0, 19},
    {3359, 11773,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_c", 1, 0, 19},
    {3360, 11774,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_d", 1, 0, 19},
    {3361, 11775,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_e", 1, 0, 19},
    {3362, 11776,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m3g20_f", 1, 0, 19},
    {3363, 11777,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_a", 1, 0, 19},
    {3364, 11778,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_b", 1, 0, 19},
    {3365, 11779,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_c", 1, 0, 19},
    {3366, 11780,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_d", 1, 0, 19},
    {3367, 11781,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_e", 1, 0, 19},
    {3368, 11782,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m4comp_f", 1, 0, 19},
    {3369, 11783,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_a", 1, 0, 19},
    {3370, 11784,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_b", 1, 0, 19},
    {3371, 11785,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_c", 1, 0, 19},
    {3372, 11786,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_d", 1, 0, 19},
    {3373, 11787,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_e", 1, 0, 19},
    {3374, 11788,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5e60_f", 1, 0, 19},
    {3375, 11789,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_a", 1, 0, 19},
    {3376, 11790,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_b", 1, 0, 19},
    {3377, 11791,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_c", 1, 0, 19},
    {3378, 11792,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_d", 1, 0, 19},
    {3379, 11793,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_e", 1, 0, 19},
    {3380, 11794,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5f90_f", 1, 0, 19},
    {3381, 11795,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_a", 1, 0, 19},
    {3382, 11796,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_b", 1, 0, 19},
    {3383, 11797,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_c", 1, 0, 19},
    {3384, 11798,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_d", 1, 0, 19},
    {3385, 11799,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_e", 1, 0, 19},
    {3386, 11800,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот maybach_f", 1, 0, 19},
    {3387, 11801,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_a", 1, 0, 19},
    {3388, 11802,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_b", 1, 0, 19},
    {3389, 11803,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_c", 1, 0, 19},
    {3390, 11804,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_d", 1, 0, 19},
    {3391, 11805,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_e", 1, 0, 19},
    {3392, 11806,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbamggt_f", 1, 0, 19},
    {3393, 11807,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbe500_a", 1, 0, 19},
    {3394, 11808,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbe55_a", 1, 0, 19},
    {3395, 11809,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbw221_a", 1, 0, 19},
    {3396, 11810,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_a", 1, 0, 19},
    {3397, 11811,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_b", 1, 0, 19},
    {3398, 11812,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_c", 1, 0, 19},
    {3399, 11813,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_d", 1, 0, 19},
    {3400, 11814,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_e", 1, 0, 19},
    {3401, 11815,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот merss63_f", 1, 0, 19},
    {3402, 11816,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelx_a", 1, 0, 19},
    {3403, 11817,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_a", 1, 0, 19},
    {3404, 11818,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_b", 1, 0, 19},
    {3405, 11819,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_c", 1, 0, 19},
    {3406, 11820,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_d", 1, 0, 19},
    {3407, 11821,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_e", 1, 0, 19},
    {3408, 11822,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mustang_f", 1, 0, 19},
    {3409, 11823,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот nisleaf_a", 1, 0, 19},
    {3410, 11824,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот nssilvia_a", 1, 0, 19},
    {3411, 11825,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_a", 1, 0, 19},
    {3412, 11826,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_b", 1, 0, 19},
    {3413, 11827,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_c", 1, 0, 19},
    {3414, 11828,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_d", 1, 0, 19},
    {3415, 11829,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_e", 1, 0, 19},
    {3416, 11830,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот one77_f", 1, 0, 19},
    {3417, 11831,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_a", 1, 0, 19},
    {3418, 11832,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_b", 1, 0, 19},
    {3419, 11833,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_c", 1, 0, 19},
    {3420, 11834,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_d", 1, 0, 19},
    {3421, 11835,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_e", 1, 0, 19},
    {3422, 11836,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот optima_f", 1, 0, 19},
    {3423, 11837,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_a", 1, 0, 19},
    {3424, 11838,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_b", 1, 0, 19},
    {3425, 11839,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_c", 1, 0, 19},
    {3426, 11840,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_d", 1, 0, 19},
    {3427, 11841,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_e", 1, 0, 19},
    {3428, 11842,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот panamera_f", 1, 0, 19},
    {3429, 11843,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_a", 1, 0, 19},
    {3430, 11844,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_b", 1, 0, 19},
    {3431, 11845,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_c", 1, 0, 19},
    {3432, 11846,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_d", 1, 0, 19},
    {3433, 11847,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_e", 1, 0, 19},
    {3434, 11848,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот passat_f", 1, 0, 19},
    {3435, 11849,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_a", 1, 0, 19},
    {3436, 11850,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_b", 1, 0, 19},
    {3437, 11851,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_c", 1, 0, 19},
    {3438, 11852,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_d", 1, 0, 19},
    {3439, 11853,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_e", 1, 0, 19},
    {3440, 11854,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот pcayenne_f", 1, 0, 19},
    {3441, 11855,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_a", 1, 0, 19},
    {3442, 11856,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_b", 1, 0, 19},
    {3443, 11857,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_c", 1, 0, 19},
    {3444, 11858,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_d", 1, 0, 19},
    {3445, 11859,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_e", 1, 0, 19},
    {3446, 11860,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот porche9_f", 1, 0, 19},
    {3447, 11861,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_a", 1, 0, 19},
    {3448, 11862,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_b", 1, 0, 19},
    {3449, 11863,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_c", 1, 0, 19},
    {3450, 11864,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_d", 1, 0, 19},
    {3451, 11865,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_e", 1, 0, 19},
    {3452, 11866,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rangrove_f", 1, 0, 19},
    {3453, 11867,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_a", 1, 0, 19},
    {3454, 11868,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_b", 1, 0, 19},
    {3455, 11869,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_c", 1, 0, 19},
    {3456, 11870,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_d", 1, 0, 19},
    {3457, 11871,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_e", 1, 0, 19},
    {3458, 11872,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rptr_f", 1, 0, 19},
    {3459, 11873,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_a", 1, 0, 19},
    {3460, 11874,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_b", 1, 0, 19},
    {3461, 11875,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_c", 1, 0, 19},
    {3462, 11876,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_d", 1, 0, 19},
    {3463, 11877,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_e", 1, 0, 19},
    {3464, 11878,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rr_f", 1, 0, 19},
    {3465, 11879,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_a", 1, 0, 19},
    {3466, 11880,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_b", 1, 0, 19},
    {3467, 11881,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_c", 1, 0, 19},
    {3468, 11882,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_d", 1, 0, 19},
    {3469, 11883,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_e", 1, 0, 19},
    {3470, 11884,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rs6_f", 1, 0, 19},
    {3471, 11885,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_a", 1, 0, 19},
    {3472, 11886,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_b", 1, 0, 19},
    {3473, 11887,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_c", 1, 0, 19},
    {3474, 11888,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_d", 1, 0, 19},
    {3475, 11889,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_e", 1, 0, 19},
    {3476, 11890,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s500w223_f", 1, 0, 19},
    {3477, 11891,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sbforest_a", 1, 0, 19},
    {3478, 11892,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sblegasy_a", 1, 0, 19},
    {3479, 11893,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_a", 1, 0, 19},
    {3480, 11894,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_b", 1, 0, 19},
    {3481, 11895,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_c", 1, 0, 19},
    {3482, 11896,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_d", 1, 0, 19},
    {3483, 11897,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_e", 1, 0, 19},
    {3484, 11898,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот slr_f", 1, 0, 19},
    {3485, 11899,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sonata_a", 1, 0, 19},
    {3486, 11900,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_a", 1, 0, 19},
    {3487, 11901,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_b", 1, 0, 19},
    {3488, 11902,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_c", 1, 0, 19},
    {3489, 11903,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_d", 1, 0, 19},
    {3490, 11904,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_e", 1, 0, 19},
    {3491, 11905,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот sportage_f", 1, 0, 19},
    {3492, 11906,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_a", 1, 0, 19},
    {3493, 11907,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_b", 1, 0, 19},
    {3494, 11908,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_c", 1, 0, 19},
    {3495, 11909,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_d", 1, 0, 19},
    {3496, 11910,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_e", 1, 0, 19},
    {3497, 11911,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот subbrzz_f", 1, 0, 19},
    {3498, 11912,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_a", 1, 0, 19},
    {3499, 11913,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_b", 1, 0, 19},
    {3500, 11914,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_c", 1, 0, 19},
    {3501, 11915,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_d", 1, 0, 19},
    {3502, 11916,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_e", 1, 0, 19},
    {3503, 11917,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот swcross_f", 1, 0, 19},
    {3504, 11918,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_a", 1, 0, 19},
    {3505, 11919,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_b", 1, 0, 19},
    {3506, 11920,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_c", 1, 0, 19},
    {3507, 11921,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_d", 1, 0, 19},
    {3508, 11922,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_e", 1, 0, 19},
    {3509, 11923,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот taycan_f", 1, 0, 19},
    {3510, 11924,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_a", 1, 0, 19},
    {3511, 11925,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_b", 1, 0, 19},
    {3512, 11926,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_c", 1, 0, 19},
    {3513, 11927,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_d", 1, 0, 19},
    {3514, 11928,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_e", 1, 0, 19},
    {3515, 11929,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот tuareg_f", 1, 0, 19},
    {3516, 11930,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_a", 1, 0, 19},
    {3517, 11931,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_b", 1, 0, 19},
    {3518, 11932,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_c", 1, 0, 19},
    {3519, 11933,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_d", 1, 0, 19},
    {3520, 11934,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_e", 1, 0, 19},
    {3521, 11935,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот twfer_f", 1, 0, 19},
    {3522, 11936,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_a", 1, 0, 19},
    {3523, 11937,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_b", 1, 0, 19},
    {3524, 11938,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_c", 1, 0, 19},
    {3525, 11939,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_d", 1, 0, 19},
    {3526, 11940,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_e", 1, 0, 19},
    {3527, 11941,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот uaz_f", 1, 0, 19},
    {3528, 11942,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_a", 1, 0, 19},
    {3529, 11943,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_b", 1, 0, 19},
    {3530, 11944,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_c", 1, 0, 19},
    {3531, 11945,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_d", 1, 0, 19},
    {3532, 11946,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_e", 1, 0, 19},
    {3533, 11947,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот urus_f", 1, 0, 19},
    {3534, 11948,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_a", 1, 0, 19},
    {3535, 11949,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_b", 1, 0, 19},
    {3536, 11950,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_c", 1, 0, 19},
    {3537, 11951,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_d", 1, 0, 19},
    {3538, 11952,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_e", 1, 0, 19},
    {3539, 11953,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volga_f", 1, 0, 19},
    {3540, 11954,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_a", 1, 0, 19},
    {3541, 11955,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_b", 1, 0, 19},
    {3542, 11956,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_c", 1, 0, 19},
    {3543, 11957,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_d", 1, 0, 19},
    {3544, 11958,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_e", 1, 0, 19},
    {3545, 11959,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvov_f", 1, 0, 19},
    {3546, 11960,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvoxc_b", 1, 0, 19},
    {3547, 11961,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvoxc_c", 1, 0, 19},
    {3548, 11962,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvoxc_d", 1, 0, 19},
    {3549, 11963,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvoxc_e", 1, 0, 19},
    {3550, 11964,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот volvoxc_f", 1, 0, 19},
    {3551, 11965,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_a", 1, 0, 19},
    {3552, 11966,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_b", 1, 0, 19},
    {3553, 11967,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_c", 1, 0, 19},
    {3554, 11968,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_d", 1, 0, 19},
    {3555, 11969,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_e", 1, 0, 19},
    {3556, 11970,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xclass_f", 1, 0, 19},
    {3557, 11971,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_a", 1, 0, 19},
    {3558, 11972,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_b", 1, 0, 19},
    {3559, 11973,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_c", 1, 0, 19},
    {3560, 11974,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_d", 1, 0, 19},
    {3561, 11975,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_e", 1, 0, 19},
    {3562, 11976,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот xfrr2012_f", 1, 0, 19},
    {3563, 11977,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для 760li_a", 1, 0, 19},
    {3564, 11978,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для 760li_b", 1, 0, 19},
    {3565, 11979,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для 760li_c", 1, 0, 19},
    {3566, 11980,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для 760li_d", 1, 0, 19},
    {3567, 11981,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для 760li_e", 1, 0, 19},
    {3568, 11982,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bacalars_a", 1, 0, 19},
    {3569, 11983,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bacalars_b", 1, 0, 19},
    {3570, 11984,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bacalars_c", 1, 0, 19},
    {3571, 11985,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bacalars_d", 1, 0, 19},
    {3572, 11986,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bacalars_e", 1, 0, 19},
    {3573, 11987,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bentayga_a", 1, 0, 19},
    {3574, 11988,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bentayga_b", 1, 0, 19},
    {3575, 11989,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bentayga_c", 1, 0, 19},
    {3576, 11990,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bentayga_d", 1, 0, 19},
    {3577, 11991,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bentayga_e", 1, 0, 19},
    {3578, 11992,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwm8_a", 1, 0, 19},
    {3579, 11993,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwm8_b", 1, 0, 19},
    {3580, 11994,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwm8_c", 1, 0, 19},
    {3581, 11995,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwm8_d", 1, 0, 19},
    {3582, 11996,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwm8_f", 1, 0, 19},
    {3583, 11997,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwxf_a", 1, 0, 19},
    {3584, 11998,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwxf_b", 1, 0, 19},
    {3585, 11999,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwxf_c", 1, 0, 19},
    {3586, 12000,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwxf_d", 1, 0, 19},
    {3587, 12001,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwxf_f", 1, 0, 19},
    {3588, 12002,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwzf_a", 1, 0, 19},
    {3589, 12003,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwzf_b", 1, 0, 19},
    {3590, 12004,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwzf_c", 1, 0, 19},
    {3591, 12005,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwzf_d", 1, 0, 19},
    {3592, 12006,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmwzf_f", 1, 0, 19},
    {3593, 12007,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bugdivo_a", 1, 0, 19},
    {3594, 12008,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bugdivo_b", 1, 0, 19},
    {3595, 12009,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bugdivo_c", 1, 0, 19},
    {3596, 12010,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bugdivo_d", 1, 0, 19},
    {3597, 12011,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bugdivo_f", 1, 0, 19},
    {3598, 12012,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для camry_a", 1, 0, 19},
    {3599, 12013,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для camry_b", 1, 0, 19},
    {3600, 12014,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для camry_c", 1, 0, 19},
    {3601, 12015,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для camry_d", 1, 0, 19},
    {3602, 12016,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для camry_f", 1, 0, 19},
    {3603, 12017,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для checruz_a", 1, 0, 19},
    {3604, 12018,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для checruz_b", 1, 0, 19},
    {3605, 12019,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для checruz_c", 1, 0, 19},
    {3606, 12020,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для checruz_d", 1, 0, 19},
    {3607, 12021,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для checruz_f", 1, 0, 19},
    {3608, 12022,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chiron_a", 1, 0, 19},
    {3609, 12023,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chiron_b", 1, 0, 19},
    {3610, 12024,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chiron_c", 1, 0, 19},
    {3611, 12025,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chiron_d", 1, 0, 19},
    {3612, 12026,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chiron_f", 1, 0, 19},
    {3613, 12027,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для civtr_a", 1, 0, 19},
    {3614, 12028,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для civtr_b", 1, 0, 19},
    {3615, 12029,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для civtr_c", 1, 0, 19},
    {3616, 12030,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для civtr_d", 1, 0, 19},
    {3617, 12031,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для civtr_f", 1, 0, 19},
    {3618, 12032,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cumry_a", 1, 0, 19},
    {3619, 12033,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cumry_b", 1, 0, 19},
    {3620, 12034,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cumry_c", 1, 0, 19},
    {3621, 12035,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cumry_d", 1, 0, 19},
    {3622, 12036,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cumry_f", 1, 0, 19},
    {3623, 12037,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dodgcha_a", 1, 0, 19},
    {3624, 12038,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dodgcha_b", 1, 0, 19},
    {3625, 12039,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dodgcha_c", 1, 0, 19},
    {3626, 12040,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dodgcha_d", 1, 0, 19},
    {3627, 12041,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dodgcha_f", 1, 0, 19},
    {3628, 12042,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fiat500_a", 1, 0, 19},
    {3629, 12043,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fiat500_b", 1, 0, 19},
    {3630, 12044,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fiat500_c", 1, 0, 19},
    {3631, 12045,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fiat500_d", 1, 0, 19},
    {3632, 12046,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fiat500_f", 1, 0, 19},
    {3633, 12047,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для frj50_a", 1, 0, 19},
    {3634, 12048,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для frj50_b", 1, 0, 19},
    {3635, 12049,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для frj50_c", 1, 0, 19},
    {3636, 12050,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для frj50_d", 1, 0, 19},
    {3637, 12051,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для frj50_e", 1, 0, 19},
    {3638, 12052,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для g63amg_a", 1, 0, 19},
    {3639, 12053,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для g63amg_b", 1, 0, 19},
    {3640, 12054,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для g63amg_c", 1, 0, 19},
    {3641, 12055,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для g63amg_d", 1, 0, 19},
    {3642, 12056,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для g63amg_f", 1, 0, 19},
    {3643, 12057,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gg90_a", 1, 0, 19},
    {3644, 12058,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gg90_b", 1, 0, 19},
    {3645, 12059,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gg90_c", 1, 0, 19},
    {3646, 12060,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gg90_d", 1, 0, 19},
    {3647, 12061,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gg90_e", 1, 0, 19},
    {3648, 12062,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gls2020_a", 1, 0, 19},
    {3649, 12063,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gls2020_b", 1, 0, 19},
    {3650, 12064,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gls2020_c", 1, 0, 19},
    {3651, 12065,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gls2020_d", 1, 0, 19},
    {3652, 12066,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gls2020_f", 1, 0, 19},
    {3653, 12067,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gtsamg_a", 1, 0, 19},
    {3654, 12068,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gtsamg_b", 1, 0, 19},
    {3655, 12069,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gtsamg_c", 1, 0, 19},
    {3656, 12070,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gtsamg_d", 1, 0, 19},
    {3657, 12071,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gtsamg_f", 1, 0, 19},
    {3658, 12072,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для infinity_a", 1, 0, 19},
    {3659, 12073,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для infinity_b", 1, 0, 19},
    {3660, 12074,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для infinity_c", 1, 0, 19},
    {3661, 12075,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для infinity_d", 1, 0, 19},
    {3662, 12076,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для infinity_f", 1, 0, 19},
    {3663, 12077,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для intgra_a", 1, 0, 19},
    {3664, 12078,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для intgra_b", 1, 0, 19},
    {3665, 12079,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для intgra_c", 1, 0, 19},
    {3666, 12080,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для intgra_d", 1, 0, 19},
    {3667, 12081,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для intgra_e", 1, 0, 19},
    {3668, 12082,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для jagfp_a", 1, 0, 19},
    {3669, 12083,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для jagfp_b", 1, 0, 19},
    {3670, 12084,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для jagfp_c", 1, 0, 19},
    {3671, 12085,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для jagfp_d", 1, 0, 19},
    {3672, 12086,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для jagfp_f", 1, 0, 19},
    {3673, 12087,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для kaban_a", 1, 0, 19},
    {3674, 12088,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для kaban_b", 1, 0, 19},
    {3675, 12089,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для kaban_c", 1, 0, 19},
    {3676, 12090,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для kaban_d", 1, 0, 19},
    {3677, 12091,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для kaban_f", 1, 0, 19},
    {3678, 12092,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexis_a", 1, 0, 19},
    {3679, 12093,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexis_b", 1, 0, 19},
    {3680, 12094,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexis_c", 1, 0, 19},
    {3681, 12095,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexis_d", 1, 0, 19},
    {3682, 12096,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexis_f", 1, 0, 19},
    {3683, 12097,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexlx_a", 1, 0, 19},
    {3684, 12098,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexlx_b", 1, 0, 19},
    {3685, 12099,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexlx_c", 1, 0, 19},
    {3686, 12100,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexlx_d", 1, 0, 19},
    {3687, 12101,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexlx_f", 1, 0, 19},
    {3688, 12102,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexrx_a", 1, 0, 19},
    {3689, 12103,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexrx_b", 1, 0, 19},
    {3690, 12104,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexrx_c", 1, 0, 19},
    {3691, 12105,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexrx_d", 1, 0, 19},
    {3692, 12106,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lexrx_f", 1, 0, 19},
    {3693, 12107,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m3g20_a", 1, 0, 19},
    {3694, 12108,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m3g20_b", 1, 0, 19},
    {3695, 12109,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m3g20_c", 1, 0, 19},
    {3696, 12110,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m3g20_d", 1, 0, 19},
    {3697, 12111,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m3g20_e", 1, 0, 19},
    {3698, 12112,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m4comp_a", 1, 0, 19},
    {3699, 12113,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m4comp_b", 1, 0, 19},
    {3700, 12114,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m4comp_c", 1, 0, 19},
    {3701, 12115,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m4comp_d", 1, 0, 19},
    {3702, 12116,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m4comp_e", 1, 0, 19},
    {3703, 12117,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5e60_a", 1, 0, 19},
    {3704, 12118,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5e60_b", 1, 0, 19},
    {3705, 12119,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5e60_c", 1, 0, 19},
    {3706, 12120,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5e60_d", 1, 0, 19},
    {3707, 12121,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5e60_f", 1, 0, 19},
    {3708, 12122,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5f90_a", 1, 0, 19},
    {3709, 12123,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5f90_b", 1, 0, 19},
    {3710, 12124,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5f90_c", 1, 0, 19},
    {3711, 12125,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5f90_d", 1, 0, 19},
    {3712, 12126,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5f90_f", 1, 0, 19},
    {3713, 12127,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для maybach_a", 1, 0, 19},
    {3714, 12128,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для maybach_b", 1, 0, 19},
    {3715, 12129,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для maybach_c", 1, 0, 19},
    {3716, 12130,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для maybach_d", 1, 0, 19},
    {3717, 12131,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для maybach_f", 1, 0, 19},
    {3718, 12132,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbamggt_a", 1, 0, 19},
    {3719, 12133,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbamggt_b", 1, 0, 19},
    {3720, 12134,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbamggt_c", 1, 0, 19},
    {3721, 12135,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbamggt_d", 1, 0, 19},
    {3722, 12136,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbamggt_f", 1, 0, 19},
    {3723, 12137,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для merss63_a", 1, 0, 19},
    {3724, 12138,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для merss63_b", 1, 0, 19},
    {3725, 12139,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для merss63_c", 1, 0, 19},
    {3726, 12140,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для merss63_d", 1, 0, 19},
    {3727, 12141,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для merss63_f", 1, 0, 19},
    {3728, 12142,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mustang_a", 1, 0, 19},
    {3729, 12143,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mustang_b", 1, 0, 19},
    {3730, 12144,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mustang_c", 1, 0, 19},
    {3731, 12145,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mustang_d", 1, 0, 19},
    {3732, 12146,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mustang_f", 1, 0, 19},
    {3733, 12147,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для optima_a", 1, 0, 19},
    {3734, 12148,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для optima_b", 1, 0, 19},
    {3735, 12149,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для optima_c", 1, 0, 19},
    {3736, 12150,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для optima_d", 1, 0, 19},
    {3737, 12151,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для optima_f", 1, 0, 19},
    {3738, 12152,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для panamera_a", 1, 0, 19},
    {3739, 12153,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для panamera_b", 1, 0, 19},
    {3740, 12154,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для panamera_c", 1, 0, 19},
    {3741, 12155,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для panamera_d", 1, 0, 19},
    {3742, 12156,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для panamera_f", 1, 0, 19},
    {3743, 12157,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для passat_a", 1, 0, 19},
    {3744, 12158,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для passat_b", 1, 0, 19},
    {3745, 12159,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для passat_c", 1, 0, 19},
    {3746, 12160,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для passat_d", 1, 0, 19},
    {3747, 12161,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для pcayenne_a", 1, 0, 19},
    {3748, 12162,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для pcayenne_b", 1, 0, 19},
    {3749, 12163,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для pcayenne_c", 1, 0, 19},
    {3750, 12164,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для pcayenne_d", 1, 0, 19},
    {3751, 12165,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для pcayenne_f", 1, 0, 19},
    {3752, 12166,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для porche9_a", 1, 0, 19},
    {3753, 12167,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для porche9_b", 1, 0, 19},
    {3754, 12168,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для porche9_c", 1, 0, 19},
    {3755, 12169,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для porche9_d", 1, 0, 19},
    {3756, 12170,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для porche9_f", 1, 0, 19},
    {3757, 12171,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rangrove_a", 1, 0, 19},
    {3758, 12172,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rangrove_b", 1, 0, 19},
    {3759, 12173,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rangrove_c", 1, 0, 19},
    {3760, 12174,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rangrove_d", 1, 0, 19},
    {3761, 12175,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rangrove_f", 1, 0, 19},
    {3762, 12176,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rptr_a", 1, 0, 19},
    {3763, 12177,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rptr_b", 1, 0, 19},
    {3764, 12178,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rptr_c", 1, 0, 19},
    {3765, 12179,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rptr_d", 1, 0, 19},
    {3766, 12180,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rptr_e", 1, 0, 19},
    {3767, 12181,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rr_a", 1, 0, 19},
    {3768, 12182,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rr_b", 1, 0, 19},
    {3769, 12183,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rr_c", 1, 0, 19},
    {3770, 12184,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rr_d", 1, 0, 19},
    {3771, 12185,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rr_f", 1, 0, 19},
    {3772, 12186,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rs6_a", 1, 0, 19},
    {3773, 12187,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rs6_b", 1, 0, 19},
    {3774, 12188,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rs6_c", 1, 0, 19},
    {3775, 12189,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rs6_d", 1, 0, 19},
    {3776, 12190,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rs6_f", 1, 0, 19},
    {3777, 12191,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s500w223_a", 1, 0, 19},
    {3778, 12192,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s500w223_b", 1, 0, 19},
    {3779, 12193,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s500w223_c", 1, 0, 19},
    {3780, 12194,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s500w223_d", 1, 0, 19},
    {3781, 12195,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s500w223_e", 1, 0, 19},
    {3782, 12196,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для slr_a", 1, 0, 19},
    {3783, 12197,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для slr_b", 1, 0, 19},
    {3784, 12198,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для slr_c", 1, 0, 19},
    {3785, 12199,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для slr_d", 1, 0, 19},
    {3786, 12200,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для slr_e", 1, 0, 19},
    {3787, 12201,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для sportage_a", 1, 0, 19},
    {3788, 12202,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для sportage_b", 1, 0, 19},
    {3789, 12203,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для sportage_c", 1, 0, 19},
    {3790, 12204,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для sportage_d", 1, 0, 19},
    {3791, 12205,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для sportage_f", 1, 0, 19},
    {3792, 12206,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для subbrzz_a", 1, 0, 19},
    {3793, 12207,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для subbrzz_b", 1, 0, 19},
    {3794, 12208,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для subbrzz_c", 1, 0, 19},
    {3795, 12209,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для subbrzz_d", 1, 0, 19},
    {3796, 12210,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для subbrzz_e", 1, 0, 19},
    {3797, 12211,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для swcross_a", 1, 0, 19},
    {3798, 12212,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для swcross_b", 1, 0, 19},
    {3799, 12213,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для swcross_c", 1, 0, 19},
    {3800, 12214,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для swcross_d", 1, 0, 19},
    {3801, 12215,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для swcross_e", 1, 0, 19},
    {3802, 12216,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для tuareg_a", 1, 0, 19},
    {3803, 12217,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для tuareg_b", 1, 0, 19},
    {3804, 12218,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для tuareg_c", 1, 0, 19},
    {3805, 12219,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для tuareg_d", 1, 0, 19},
    {3806, 12220,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для tuareg_f", 1, 0, 19},
    {3807, 12221,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для twfer_a", 1, 0, 19},
    {3808, 12222,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для twfer_b", 1, 0, 19},
    {3809, 12223,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для twfer_c", 1, 0, 19},
    {3810, 12224,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для twfer_d", 1, 0, 19},
    {3811, 12225,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для twfer_e", 1, 0, 19},
    {3812, 12226,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для uaz_a", 1, 0, 19},
    {3813, 12227,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для uaz_b", 1, 0, 19},
    {3814, 12228,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для uaz_c", 1, 0, 19},
    {3815, 12229,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для uaz_d", 1, 0, 19},
    {3816, 12230,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для uaz_e", 1, 0, 19},
    {3817, 12231,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для urus_a", 1, 0, 19},
    {3818, 12232,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для urus_b", 1, 0, 19},
    {3819, 12233,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для urus_c", 1, 0, 19},
    {3820, 12234,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для urus_d", 1, 0, 19},
    {3821, 12235,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для urus_f", 1, 0, 19},
    {3822, 12236,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volga_a", 1, 0, 19},
    {3823, 12237,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volga_b", 1, 0, 19},
    {3824, 12238,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volga_c", 1, 0, 19},
    {3825, 12239,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volga_d", 1, 0, 19},
    {3826, 12240,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volga_e", 1, 0, 19},
    {3827, 12241,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvov_a", 1, 0, 19},
    {3828, 12242,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvov_b", 1, 0, 19},
    {3829, 12243,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvov_c", 1, 0, 19},
    {3830, 12244,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvov_d", 1, 0, 19},
    {3831, 12245,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvov_f", 1, 0, 19},
    {3832, 12246,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvoxc_a", 1, 0, 19},
    {3833, 12247,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvoxc_b", 1, 0, 19},
    {3834, 12248,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvoxc_c", 1, 0, 19},
    {3835, 12249,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvoxc_d", 1, 0, 19},
    {3836, 12250,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для volvoxc_f", 1, 0, 19},
    {3837, 12251,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xclass_a", 1, 0, 19},
    {3838, 12252,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xclass_b", 1, 0, 19},
    {3839, 12253,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xclass_c", 1, 0, 19},
    {3840, 12254,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xclass_d", 1, 0, 19},
    {3841, 12255,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xclass_e", 1, 0, 19},
    {3842, 12256,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xfrr2012_a", 1, 0, 19},
    {3843, 12257,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xfrr2012_b", 1, 0, 19},
    {3844, 12258,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xfrr2012_c", 1, 0, 19},
    {3845, 12259,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xfrr2012_d", 1, 0, 19},
    {3846, 12260,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для xfrr2012_e", 1, 0, 19},
    {3847, 12261,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер 760li_a", 1, 0, 19},
    {3848, 12262,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер 760li_b", 1, 0, 19},
    {3849, 12263,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер 760li_c", 1, 0, 19},
    {3850, 12264,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер 760li_d", 1, 0, 19},
    {3851, 12265,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер 760li_e", 1, 0, 19},
    {3852, 12266,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bacalars_a", 1, 0, 19},
    {3853, 12267,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bacalars_b", 1, 0, 19},
    {3854, 12268,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bacalars_c", 1, 0, 19},
    {3855, 12269,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bacalars_d", 1, 0, 19},
    {3856, 12270,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bacalars_e", 1, 0, 19},
    {3857, 12271,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bentayga_a", 1, 0, 19},
    {3858, 12272,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bentayga_b", 1, 0, 19},
    {3859, 12273,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bentayga_c", 1, 0, 19},
    {3860, 12274,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bentayga_d", 1, 0, 19},
    {3861, 12275,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bentayga_e", 1, 0, 19},
    {3862, 12276,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwi8_a", 1, 0, 19},
    {3863, 12277,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwi8_b", 1, 0, 19},
    {3864, 12278,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwi8_c", 1, 0, 19},
    {3865, 12279,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwi8_d", 1, 0, 19},
    {3866, 12280,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwi8_e", 1, 0, 19},
    {3867, 12281,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwm8_a", 1, 0, 19},
    {3868, 12282,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwm8_b", 1, 0, 19},
    {3869, 12283,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwm8_c", 1, 0, 19},
    {3870, 12284,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwm8_d", 1, 0, 19},
    {3871, 12285,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwm8_e", 1, 0, 19},
    {3872, 12286,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwxf_a", 1, 0, 19},
    {3873, 12287,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwxf_b", 1, 0, 19},
    {3874, 12288,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwxf_c", 1, 0, 19},
    {3875, 12289,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwxf_d", 1, 0, 19},
    {3876, 12290,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwxf_e", 1, 0, 19},
    {3877, 12291,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwzf_a", 1, 0, 19},
    {3878, 12292,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwzf_b", 1, 0, 19},
    {3879, 12293,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwzf_c", 1, 0, 19},
    {3880, 12294,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwzf_d", 1, 0, 19},
    {3881, 12295,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwzf_e", 1, 0, 19},
    {3882, 12296,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер camry_a", 1, 0, 19},
    {3883, 12297,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер camry_b", 1, 0, 19},
    {3884, 12298,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер camry_c", 1, 0, 19},
    {3885, 12299,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер camry_d", 1, 0, 19},
    {3886, 12300,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер camry_e", 1, 0, 19},
    {3887, 12301,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер checruz_a", 1, 0, 19},
    {3888, 12302,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер checruz_b", 1, 0, 19},
    {3889, 12303,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер checruz_c", 1, 0, 19},
    {3890, 12304,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер checruz_d", 1, 0, 19},
    {3891, 12305,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер checruz_e", 1, 0, 19},
    {3892, 12306,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер civtr_a", 1, 0, 19},
    {3893, 12307,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер civtr_b", 1, 0, 19},
    {3894, 12308,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер civtr_c", 1, 0, 19},
    {3895, 12309,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер civtr_d", 1, 0, 19},
    {3896, 12310,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер civtr_e", 1, 0, 19},
    {3897, 12311,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cumry_a", 1, 0, 19},
    {3898, 12312,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cumry_b", 1, 0, 19},
    {3899, 12313,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cumry_c", 1, 0, 19},
    {3900, 12314,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cumry_d", 1, 0, 19},
    {3901, 12315,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cumry_e", 1, 0, 19},
    {3902, 12316,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dodgcha_a", 1, 0, 19},
    {3903, 12317,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dodgcha_b", 1, 0, 19},
    {3904, 12318,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dodgcha_c", 1, 0, 19},
    {3905, 12319,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dodgcha_d", 1, 0, 19},
    {3906, 12320,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dodgcha_e", 1, 0, 19},
    {3907, 12321,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fiat500_a", 1, 0, 19},
    {3908, 12322,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fiat500_b", 1, 0, 19},
    {3909, 12323,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fiat500_c", 1, 0, 19},
    {3910, 12324,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fiat500_d", 1, 0, 19},
    {3911, 12325,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fiat500_e", 1, 0, 19},
    {3912, 12326,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер frj50_a", 1, 0, 19},
    {3913, 12327,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер frj50_b", 1, 0, 19},
    {3914, 12328,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер frj50_d", 1, 0, 19},
    {3915, 12329,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер frj50_e", 1, 0, 19},
    {3916, 12330,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер frj50_f", 1, 0, 19},
    {3917, 12331,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g63amg_a", 1, 0, 19},
    {3918, 12332,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g63amg_b", 1, 0, 19},
    {3919, 12333,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g63amg_c", 1, 0, 19},
    {3920, 12334,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g63amg_d", 1, 0, 19},
    {3921, 12335,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g63amg_e", 1, 0, 19},
    {3922, 12336,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gg90_a", 1, 0, 19},
    {3923, 12337,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gg90_b", 1, 0, 19},
    {3924, 12338,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gg90_c", 1, 0, 19},
    {3925, 12339,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gg90_d", 1, 0, 19},
    {3926, 12340,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gg90_e", 1, 0, 19},
    {3927, 12341,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gls2020_a", 1, 0, 19},
    {3928, 12342,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gls2020_b", 1, 0, 19},
    {3929, 12343,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gtsamg_a", 1, 0, 19},
    {3930, 12344,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gtsamg_b", 1, 0, 19},
    {3931, 12345,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gtsamg_c", 1, 0, 19},
    {3932, 12346,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gtsamg_d", 1, 0, 19},
    {3933, 12347,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gtsamg_e", 1, 0, 19},
    {3934, 12348,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер infinity_a", 1, 0, 19},
    {3935, 12349,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер infinity_b", 1, 0, 19},
    {3936, 12350,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер infinity_c", 1, 0, 19},
    {3937, 12351,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер infinity_d", 1, 0, 19},
    {3938, 12352,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер infinity_e", 1, 0, 19},
    {3939, 12353,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер intgra_a", 1, 0, 19},
    {3940, 12354,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер intgra_b", 1, 0, 19},
    {3941, 12355,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер intgra_c", 1, 0, 19},
    {3942, 12356,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер intgra_d", 1, 0, 19},
    {3943, 12357,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер intgra_e", 1, 0, 19},
    {3944, 12358,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jagfp_a", 1, 0, 19},
    {3945, 12359,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jagfp_b", 1, 0, 19},
    {3946, 12360,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jagfp_c", 1, 0, 19},
    {3947, 12361,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jagfp_d", 1, 0, 19},
    {3948, 12362,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jagfp_e", 1, 0, 19},
    {3949, 12363,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kaban_a", 1, 0, 19},
    {3950, 12364,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kaban_b", 1, 0, 19},
    {3951, 12365,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kaban_c", 1, 0, 19},
    {3952, 12366,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kaban_d", 1, 0, 19},
    {3953, 12367,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kaban_e", 1, 0, 19},
    {3954, 12368,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexis_a", 1, 0, 19},
    {3955, 12369,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexis_b", 1, 0, 19},
    {3956, 12370,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexis_c", 1, 0, 19},
    {3957, 12371,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexis_d", 1, 0, 19},
    {3958, 12372,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexis_e", 1, 0, 19},
    {3959, 12373,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexlx_a", 1, 0, 19},
    {3960, 12374,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexlx_b", 1, 0, 19},
    {3961, 12375,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexlx_c", 1, 0, 19},
    {3962, 12376,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexlx_d", 1, 0, 19},
    {3963, 12377,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexlx_e", 1, 0, 19},
    {3964, 12378,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexrx_a", 1, 0, 19},
    {3965, 12379,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexrx_b", 1, 0, 19},
    {3966, 12380,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexrx_c", 1, 0, 19},
    {3967, 12381,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexrx_d", 1, 0, 19},
    {3968, 12382,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lexrx_e", 1, 0, 19},
    {3969, 12383,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m3g20_a", 1, 0, 19},
    {3970, 12384,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m3g20_b", 1, 0, 19},
    {3971, 12385,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m3g20_c", 1, 0, 19},
    {3972, 12386,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m3g20_d", 1, 0, 19},
    {3973, 12387,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m3g20_e", 1, 0, 19},
    {3974, 12388,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m4comp_a", 1, 0, 19},
    {3975, 12389,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m4comp_b", 1, 0, 19},
    {3976, 12390,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m4comp_c", 1, 0, 19},
    {3977, 12391,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m4comp_d", 1, 0, 19},
    {3978, 12392,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m4comp_e", 1, 0, 19},
    {3979, 12393,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5e60_a", 1, 0, 19},
    {3980, 12394,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5e60_b", 1, 0, 19},
    {3981, 12395,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5e60_c", 1, 0, 19},
    {3982, 12396,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5e60_d", 1, 0, 19},
    {3983, 12397,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5e60_e", 1, 0, 19},
    {3984, 12398,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5f90_a", 1, 0, 19},
    {3985, 12399,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5f90_b", 1, 0, 19},
    {3986, 12400,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5f90_c", 1, 0, 19},
    {3987, 12401,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5f90_d", 1, 0, 19},
    {3988, 12402,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5f90_e", 1, 0, 19},
    {3989, 12403,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер maybach_a", 1, 0, 19},
    {3990, 12404,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер maybach_b", 1, 0, 19},
    {3991, 12405,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер maybach_c", 1, 0, 19},
    {3992, 12406,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер maybach_d", 1, 0, 19},
    {3993, 12407,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер maybach_e", 1, 0, 19},
    {3994, 12408,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbamggt_a", 1, 0, 19},
    {3995, 12409,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbamggt_b", 1, 0, 19},
    {3996, 12410,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbamggt_c", 1, 0, 19},
    {3997, 12411,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbamggt_d", 1, 0, 19},
    {3998, 12412,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbamggt_e", 1, 0, 19},
    {3999, 12413,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер merss63_a", 1, 0, 19},
    {4000, 12414,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер merss63_b", 1, 0, 19},
    {4001, 12415,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер merss63_c", 1, 0, 19},
    {4002, 12416,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер merss63_d", 1, 0, 19},
    {4003, 12417,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер merss63_e", 1, 0, 19},
    {4004, 12418,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mustang_a", 1, 0, 19},
    {4005, 12419,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mustang_b", 1, 0, 19},
    {4006, 12420,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mustang_c", 1, 0, 19},
    {4007, 12421,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mustang_d", 1, 0, 19},
    {4008, 12422,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mustang_e", 1, 0, 19},
    {4009, 12423,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер one77_a", 1, 0, 19},
    {4010, 12424,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер one77_b", 1, 0, 19},
    {4011, 12425,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер one77_c", 1, 0, 19},
    {4012, 12426,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер one77_d", 1, 0, 19},
    {4013, 12427,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер one77_e", 1, 0, 19},
    {4014, 12428,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер optima_a", 1, 0, 19},
    {4015, 12429,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер optima_b", 1, 0, 19},
    {4016, 12430,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер optima_c", 1, 0, 19},
    {4017, 12431,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер optima_d", 1, 0, 19},
    {4018, 12432,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер optima_e", 1, 0, 19},
    {4019, 12433,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер panamera_a", 1, 0, 19},
    {4020, 12434,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер panamera_b", 1, 0, 19},
    {4021, 12435,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер panamera_c", 1, 0, 19},
    {4022, 12436,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер panamera_d", 1, 0, 19},
    {4023, 12437,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер panamera_e", 1, 0, 19},
    {4024, 12438,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер passat_a", 1, 0, 19},
    {4025, 12439,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер passat_b", 1, 0, 19},
    {4026, 12440,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер passat_c", 1, 0, 19},
    {4027, 12441,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер passat_d", 1, 0, 19},
    {4028, 12442,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер passat_e", 1, 0, 19},
    {4029, 12443,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер pcayenne_a", 1, 0, 19},
    {4030, 12444,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер pcayenne_b", 1, 0, 19},
    {4031, 12445,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер pcayenne_c", 1, 0, 19},
    {4032, 12446,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер pcayenne_d", 1, 0, 19},
    {4033, 12447,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер pcayenne_e", 1, 0, 19},
    {4034, 12448,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер porche9_a", 1, 0, 19},
    {4035, 12449,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер porche9_b", 1, 0, 19},
    {4036, 12450,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер porche9_c", 1, 0, 19},
    {4037, 12451,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер porche9_d", 1, 0, 19},
    {4038, 12452,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер porche9_e", 1, 0, 19},
    {4039, 12453,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rangrove_a", 1, 0, 19},
    {4040, 12454,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rangrove_b", 1, 0, 19},
    {4041, 12455,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rangrove_c", 1, 0, 19},
    {4042, 12456,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rangrove_d", 1, 0, 19},
    {4043, 12457,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rangrove_e", 1, 0, 19},
    {4044, 12458,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rr_a", 1, 0, 19},
    {4045, 12459,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rr_b", 1, 0, 19},
    {4046, 12460,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rr_c", 1, 0, 19},
    {4047, 12461,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rr_d", 1, 0, 19},
    {4048, 12462,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rr_e", 1, 0, 19},
    {4049, 12463,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rs6_a", 1, 0, 19},
    {4050, 12464,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rs6_b", 1, 0, 19},
    {4051, 12465,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rs6_c", 1, 0, 19},
    {4052, 12466,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rs6_d", 1, 0, 19},
    {4053, 12467,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rs6_e", 1, 0, 19},
    {4054, 12468,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s500w223_a", 1, 0, 19},
    {4055, 12469,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s500w223_b", 1, 0, 19},
    {4056, 12470,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s500w223_c", 1, 0, 19},
    {4057, 12471,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s500w223_d", 1, 0, 19},
    {4058, 12472,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s500w223_e", 1, 0, 19},
    {4059, 12473,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер slr_a", 1, 0, 19},
    {4060, 12474,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер slr_b", 1, 0, 19},
    {4061, 12475,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер slr_c", 1, 0, 19},
    {4062, 12476,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер slr_d", 1, 0, 19},
    {4063, 12477,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер slr_e", 1, 0, 19},
    {4064, 12478,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер sportage_a", 1, 0, 19},
    {4065, 12479,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер sportage_b", 1, 0, 19},
    {4066, 12480,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер sportage_c", 1, 0, 19},
    {4067, 12481,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер sportage_d", 1, 0, 19},
    {4068, 12482,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер sportage_e", 1, 0, 19},
    {4069, 12483,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер subbrzz_a", 1, 0, 19},
    {4070, 12484,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер subbrzz_b", 1, 0, 19},
    {4071, 12485,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер subbrzz_c", 1, 0, 19},
    {4072, 12486,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер subbrzz_d", 1, 0, 19},
    {4073, 12487,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер subbrzz_e", 1, 0, 19},
    {4074, 12488,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер swcross_a", 1, 0, 19},
    {4075, 12489,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер swcross_b", 1, 0, 19},
    {4076, 12490,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер swcross_c", 1, 0, 19},
    {4077, 12491,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер swcross_d", 1, 0, 19},
    {4078, 12492,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер swcross_e", 1, 0, 19},
    {4079, 12493,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер taycan_a", 1, 0, 19},
    {4080, 12494,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер taycan_b", 1, 0, 19},
    {4081, 12495,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер taycan_c", 1, 0, 19},
    {4082, 12496,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер taycan_d", 1, 0, 19},
    {4083, 12497,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер taycan_e", 1, 0, 19},
    {4084, 12498,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер tuareg_a", 1, 0, 19},
    {4085, 12499,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер tuareg_b", 1, 0, 19},
    {4086, 12500,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер tuareg_c", 1, 0, 19},
    {4087, 12501,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер tuareg_d", 1, 0, 19},
    {4088, 12502,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер tuareg_e", 1, 0, 19},
    {4089, 12503,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер uaz_a", 1, 0, 19},
    {4090, 12504,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер uaz_b", 1, 0, 19},
    {4091, 12505,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер uaz_c", 1, 0, 19},
    {4092, 12506,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер uaz_d", 1, 0, 19},
    {4093, 12507,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер uaz_e", 1, 0, 19},
    {4094, 12508,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер urus_a", 1, 0, 19},
    {4095, 12509,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер urus_b", 1, 0, 19},
    {4096, 12510,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер urus_c", 1, 0, 19},
    {4097, 12511,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер urus_d", 1, 0, 19},
    {4098, 12512,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер urus_e", 1, 0, 19},
    {4099, 12513,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volga_a", 1, 0, 19},
    {4100, 12514,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volga_b", 1, 0, 19},
    {4101, 12515,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volga_c", 1, 0, 19},
    {4102, 12516,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volga_d", 1, 0, 19},
    {4103, 12517,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volga_e", 1, 0, 19},
    {4104, 12518,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvov_a", 1, 0, 19},
    {4105, 12519,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvov_b", 1, 0, 19},
    {4106, 12520,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvov_c", 1, 0, 19},
    {4107, 12521,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvov_d", 1, 0, 19},
    {4108, 12522,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvov_e", 1, 0, 19},
    {4109, 12523,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvoxc_a", 1, 0, 19},
    {4110, 12524,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvoxc_b", 1, 0, 19},
    {4111, 12525,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvoxc_c", 1, 0, 19},
    {4112, 12526,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvoxc_d", 1, 0, 19},
    {4113, 12527,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер volvoxc_e", 1, 0, 19},
    {4114, 12528,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер xfrr2012_a", 1, 0, 19},
    {4115, 12529,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер xfrr2012_b", 1, 0, 19},
    {4116, 12530,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер xfrr2012_c", 1, 0, 19},
    {4117, 12531,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер xfrr2012_d", 1, 0, 19},
    {4118, 12532,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер xfrr2012_e", 1, 0, 19},
    {4119, 12744,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_a", 1, 0, 19},
    {4120, 12745,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_b", 1, 0, 19},
    {4121, 12746,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_c", 1, 0, 19},
    {4122, 12747,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_d", 1, 0, 19},
    {4123, 12748,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_e", 1, 0, 19},
    {4124, 12749,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот e63_f", 1, 0, 19},
    {4125, 12750,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для e63_a", 1, 0, 19},
    {4126, 12751,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для e63_b", 1, 0, 19},
    {4127, 12752,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для e63_c", 1, 0, 19},
    {4128, 12753,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для e63_d", 1, 0, 19},
    {4129, 12754,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для e63_f", 1, 0, 19},
    {4130, 12755,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер e63_a", 1, 0, 19},
    {4131, 12756,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер e63_b", 1, 0, 19},
    {4132, 12757,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер e63_c", 1, 0, 19},
    {4133, 12758,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер e63_d", 1, 0, 19},
    {4134, 12759,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер e63_e", 1, 0, 19},
    {4135, 12760,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_a", 1, 0, 19},
    {4136, 12761,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_b", 1, 0, 19},
    {4137, 12762,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_c", 1, 0, 19},
    {4138, 12763,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_d", 1, 0, 19},
    {4139, 12764,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_e", 1, 0, 19},
    {4140, 12765,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот audirs5_f", 1, 0, 19},
    {4141, 12766,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_a", 1, 0, 19},
    {4142, 12767,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_b", 1, 0, 19},
    {4143, 12768,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_c", 1, 0, 19},
    {4144, 12769,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_d", 1, 0, 19},
    {4145, 12770,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_e", 1, 0, 19},
    {4146, 12771,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aus4_f", 1, 0, 19},
    {4147, 12772,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_a", 1, 0, 19},
    {4148, 12773,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_b", 1, 0, 19},
    {4149, 12774,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_c", 1, 0, 19},
    {4150, 12775,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_d", 1, 0, 19},
    {4151, 12776,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_e", 1, 0, 19},
    {4152, 12777,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw4s_f", 1, 0, 19},
    {4153, 12778,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_a", 1, 0, 19},
    {4154, 12779,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_b", 1, 0, 19},
    {4155, 12780,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_c", 1, 0, 19},
    {4156, 12781,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_d", 1, 0, 19},
    {4157, 12782,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_e", 1, 0, 19},
    {4158, 12783,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот cadesc_f", 1, 0, 19},
    {4159, 12784,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_a", 1, 0, 19},
    {4160, 12785,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_b", 1, 0, 19},
    {4161, 12786,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_c", 1, 0, 19},
    {4162, 12787,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_d", 1, 0, 19},
    {4163, 12788,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_e", 1, 0, 19},
    {4164, 12789,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот chaser_f", 1, 0, 19},
    {4165, 12790,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_a", 1, 0, 19},
    {4166, 12791,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_b", 1, 0, 19},
    {4167, 12792,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_c", 1, 0, 19},
    {4168, 12793,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_d", 1, 0, 19},
    {4169, 12794,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_e", 1, 0, 19},
    {4170, 12795,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот dviper_f", 1, 0, 19},
    {4171, 12796,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_a", 1, 0, 19},
    {4172, 12797,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_b", 1, 0, 19},
    {4173, 12798,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_c", 1, 0, 19},
    {4174, 12799,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_d", 1, 0, 19},
    {4175, 13564,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_e", 1, 0, 19},
    {4176, 13565,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evoix_f", 1, 0, 19},
    {4177, 13566,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_a", 1, 0, 19},
    {4178, 13567,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_b", 1, 0, 19},
    {4179, 13568,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_c", 1, 0, 19},
    {4180, 13569,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_d", 1, 0, 19},
    {4181, 13570,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_e", 1, 0, 19},
    {4182, 13571,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот evox_f", 1, 0, 19},
    {4183, 13572,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_a", 1, 0, 19},
    {4184, 13573,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_b", 1, 0, 19},
    {4185, 13574,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_c", 1, 0, 19},
    {4186, 13575,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_d", 1, 0, 19},
    {4187, 13576,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_e", 1, 0, 19},
    {4188, 13577,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот fordgt_f", 1, 0, 19},
    {4189, 13578,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_a", 1, 0, 19},
    {4190, 13579,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_b", 1, 0, 19},
    {4191, 13580,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_c", 1, 0, 19},
    {4192, 13581,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_d", 1, 0, 19},
    {4193, 13582,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_e", 1, 0, 19},
    {4194, 13583,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala64_f", 1, 0, 19},
    {4195, 13584,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_a", 1, 0, 19},
    {4196, 13585,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_b", 1, 0, 19},
    {4197, 13586,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_c", 1, 0, 19},
    {4198, 13587,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_d", 1, 0, 19},
    {4199, 13588,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_e", 1, 0, 19},
    {4200, 13589,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот impala67_f", 1, 0, 19},
    {4201, 13668,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_a", 1, 0, 19},
    {4202, 13669,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_b", 1, 0, 19},
    {4203, 13670,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_c", 1, 0, 19},
    {4204, 13671,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_d", 1, 0, 19},
    {4205, 13891,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_e", 1, 0, 19},
    {4206, 13892,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот macmp4_f", 1, 0, 19},
    {4207, 13893,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_a", 1, 0, 19},
    {4208, 13894,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_b", 1, 0, 19},
    {4209, 13895,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_c", 1, 0, 19},
    {4210, 13896,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_d", 1, 0, 19},
    {4211, 13897,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_e", 1, 0, 19},
    {4212, 13898,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mercls_f", 1, 0, 19},
    {4213, 13899,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_a", 1, 0, 19},
    {4214, 13900,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_b", 1, 0, 19},
    {4215, 13901,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_c", 1, 0, 19},
    {4216, 13902,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_d", 1, 0, 19},
    {4217, 13903,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_e", 1, 0, 19},
    {4218, 13904,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mersgl_f", 1, 0, 19},
    {4219, 13905,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_a", 1, 0, 19},
    {4220, 13906,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_b", 1, 0, 19},
    {4221, 13907,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_c", 1, 0, 19},
    {4222, 13908,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_d", 1, 0, 19},
    {4223, 13909,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_e", 1, 0, 19},
    {4224, 13910,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот modelc_f", 1, 0, 19},
    {4225, 13911,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_a", 1, 0, 19},
    {4226, 13912,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_b", 1, 0, 19},
    {4227, 13913,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_c", 1, 0, 19},
    {4228, 13914,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_d", 1, 0, 19},
    {4229, 13915,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_e", 1, 0, 19},
    {4230, 13916,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот phantom_f", 1, 0, 19},
    {4231, 13917,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_a", 1, 0, 19},
    {4232, 13918,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_b", 1, 0, 19},
    {4233, 13919,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_c", 1, 0, 19},
    {4234, 13920,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_d", 1, 0, 19},
    {4235, 13921,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_e", 1, 0, 19},
    {4236, 13922,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ttrs_f", 1, 0, 19},
    {4237, 13923,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_a", 1, 0, 19},
    {4238, 13924,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_b", 1, 0, 19},
    {4239, 13925,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_c", 1, 0, 19},
    {4240, 13926,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_d", 1, 0, 19},
    {4241, 13927,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_e", 1, 0, 19},
    {4242, 13928,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот vwpolo_f", 1, 0, 19},
    {4243, 13929,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_a", 1, 0, 19},
    {4244, 13930,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_b", 1, 0, 19},
    {4245, 13931,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_c", 1, 0, 19},
    {4246, 13932,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_d", 1, 0, 19},
    {4247, 13933,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_e", 1, 0, 19},
    {4248, 13934,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот wrxsti_f", 1, 0, 19},
    {4249, 13935,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для audirs5_a", 1, 0, 19},
    {4250, 13936,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для audirs5_b", 1, 0, 19},
    {4251, 13937,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для audirs5_c", 1, 0, 19},
    {4252, 13938,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для audirs5_d", 1, 0, 19},
    {4253, 13939,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для audirs5_e", 1, 0, 19},
    {4254, 13940,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aus4_a", 1, 0, 19},
    {4255, 13941,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aus4_b", 1, 0, 19},
    {4256, 13942,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aus4_c", 1, 0, 19},
    {4257, 13943,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aus4_d", 1, 0, 19},
    {4258, 13944,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aus4_e", 1, 0, 19},
    {4259, 13945,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw4s_a", 1, 0, 19},
    {4260, 13946,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw4s_b", 1, 0, 19},
    {4261, 13947,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw4s_c", 1, 0, 19},
    {4262, 13948,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw4s_d", 1, 0, 19},
    {4263, 13949,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw4s_e", 1, 0, 19},
    {4264, 13950,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cadesc_a", 1, 0, 19},
    {4265, 13951,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cadesc_b", 1, 0, 19},
    {4266, 13952,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cadesc_c", 1, 0, 19},
    {4267, 13953,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cadesc_d", 1, 0, 19},
    {4268, 14125,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для cadesc_e", 1, 0, 19},
    {4269, 13954,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chaser_a", 1, 0, 19},
    {4270, 13955,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chaser_b", 1, 0, 19},
    {4271, 13956,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chaser_c", 1, 0, 19},
    {4272, 13957,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chaser_d", 1, 0, 19},
    {4273, 13958,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для chaser_e", 1, 0, 19},
    {4274, 13959,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dviper_a", 1, 0, 19},
    {4275, 13960,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dviper_b", 1, 0, 19},
    {4276, 13961,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dviper_c", 1, 0, 19},
    {4277, 13962,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dviper_d", 1, 0, 19},
    {4278, 13963,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для dviper_e", 1, 0, 19},
    {4279, 13964,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evoix_a", 1, 0, 19},
    {4280, 13965,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evoix_b", 1, 0, 19},
    {4281, 13966,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evoix_c", 1, 0, 19},
    {4282, 13967,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evoix_d", 1, 0, 19},
    {4283, 13968,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evoix_e", 1, 0, 19},
    {4284, 13969,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evox_a", 1, 0, 19},
    {4285, 13970,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evox_b", 1, 0, 19},
    {4286, 13971,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evox_c", 1, 0, 19},
    {4287, 13972,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evox_d", 1, 0, 19},
    {4288, 13973,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для evox_e", 1, 0, 19},
    {4289, 13974,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fordgt_a", 1, 0, 19},
    {4290, 13975,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fordgt_b", 1, 0, 19},
    {4291, 13976,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fordgt_c", 1, 0, 19},
    {4292, 13977,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fordgt_d", 1, 0, 19},
    {4293, 13978,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для fordgt_e", 1, 0, 19},
    {4294, 13979,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impala64_a", 1, 0, 19},
    {4295, 13980,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impala64_b", 1, 0, 19},
    {4296, 13981,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impala64_c", 1, 0, 19},
    {4297, 13982,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impala64_d", 1, 0, 19},
    {4298, 13983,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impala64_e", 1, 0, 19},
    {4299, 13984,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impla67_a", 1, 0, 19},
    {4300, 13985,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impla67_b", 1, 0, 19},
    {4301, 13986,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impla67_c", 1, 0, 19},
    {4302, 13987,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impla67_d", 1, 0, 19},
    {4303, 13988,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для impla67_e", 1, 0, 19},
    {4304, 13989,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для macmp4_a", 1, 0, 19},
    {4305, 13990,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для macmp4_b", 1, 0, 19},
    {4306, 13991,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для macmp4_c", 1, 0, 19},
    {4307, 13992,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для macmp4_d", 1, 0, 19},
    {4308, 13993,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для macmp4_e", 1, 0, 19},
    {4309, 13994,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mercls_a", 1, 0, 19},
    {4310, 13995,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mercls_b", 1, 0, 19},
    {4311, 13996,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mercls_c", 1, 0, 19},
    {4312, 13997,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mercls_d", 1, 0, 19},
    {4313, 13998,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mercls_e", 1, 0, 19},
    {4314, 13999,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для phantom_a", 1, 0, 19},
    {4315, 14000,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для phantom_b", 1, 0, 19},
    {4316, 14001,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для phantom_c", 1, 0, 19},
    {4317, 14002,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для phantom_d", 1, 0, 19},
    {4318, 14003,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для phantom_e", 1, 0, 19},
    {4319, 14004,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для ttrs_a", 1, 0, 19},
    {4320, 14005,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для ttrs_b", 1, 0, 19},
    {4321, 14006,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для ttrs_c", 1, 0, 19},
    {4322, 14007,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для ttrs_d", 1, 0, 19},
    {4323, 14008,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для ttrs_e", 1, 0, 19},
    {4324, 14009,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для vwpolo_a", 1, 0, 19},
    {4325, 14010,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для vwpolo_b", 1, 0, 19},
    {4326, 14011,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для vwpolo_c", 1, 0, 19},
    {4327, 14012,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для vwpolo_d", 1, 0, 19},
    {4328, 14013,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для vwpolo_e", 1, 0, 19},
    {4329, 14014,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для wrxsti_a", 1, 0, 19},
    {4330, 14015,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для wrxsti_b", 1, 0, 19},
    {4331, 14016,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для wrxsti_c", 1, 0, 19},
    {4332, 14017,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для wrxsti_d", 1, 0, 19},
    {4333, 14018,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для wrxsti_e", 1, 0, 19},
    {4334, 14019,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер audirs5_a", 1, 0, 19},
    {4335, 14020,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер audirs5_b", 1, 0, 19},
    {4336, 14021,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер audirs5_c", 1, 0, 19},
    {4337, 14022,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер audirs5_d", 1, 0, 19},
    {4338, 14023,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер audirs5_e", 1, 0, 19},
    {4339, 14024,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aus4_a", 1, 0, 19},
    {4340, 14025,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aus4_b", 1, 0, 19},
    {4341, 14026,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aus4_c", 1, 0, 19},
    {4342, 14027,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aus4_d", 1, 0, 19},
    {4343, 14028,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aus4_e", 1, 0, 19},
    {4344, 14029,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw4s_a", 1, 0, 19},
    {4345, 14030,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw4s_b", 1, 0, 19},
    {4346, 14031,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw4s_c", 1, 0, 19},
    {4347, 14032,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw4s_d", 1, 0, 19},
    {4348, 14033,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw4s_e", 1, 0, 19},
    {4349, 14034,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cadesc_a", 1, 0, 19},
    {4350, 14035,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cadesc_b", 1, 0, 19},
    {4351, 14036,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cadesc_c", 1, 0, 19},
    {4352, 14037,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cadesc_d", 1, 0, 19},
    {4353, 14038,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cadesc_e", 1, 0, 19},
    {4354, 14039,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер chaser_a", 1, 0, 19},
    {4355, 14040,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер chaser_b", 1, 0, 19},
    {4356, 14041,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер chaser_c", 1, 0, 19},
    {4357, 14042,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер chaser_d", 1, 0, 19},
    {4358, 14043,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер chaser_e", 1, 0, 19},
    {4359, 14044,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cybertr_a", 1, 0, 19},
    {4360, 14045,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cybertr_b", 1, 0, 19},
    {4361, 14046,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cybertr_c", 1, 0, 19},
    {4362, 14047,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cybertr_d", 1, 0, 19},
    {4363, 14048,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер cybertr_e", 1, 0, 19},
    {4364, 14049,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dviper_a", 1, 0, 19},
    {4365, 14050,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dviper_b", 1, 0, 19},
    {4366, 14051,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dviper_c", 1, 0, 19},
    {4367, 14052,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dviper_d", 1, 0, 19},
    {4368, 14053,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер dviper_e", 1, 0, 19},
    {4369, 14054,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evoix_a", 1, 0, 19},
    {4370, 14055,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evoix_b", 1, 0, 19},
    {4371, 14056,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evoix_c", 1, 0, 19},
    {4372, 14057,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evoix_d", 1, 0, 19},
    {4373, 14058,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evoix_e", 1, 0, 19},
    {4374, 14059,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evox_a", 1, 0, 19},
    {4375, 14060,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evox_b", 1, 0, 19},
    {4376, 14061,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evox_c", 1, 0, 19},
    {4377, 14062,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evox_d", 1, 0, 19},
    {4378, 14063,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер evox_e", 1, 0, 19},
    {4379, 14064,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fordgt_a", 1, 0, 19},
    {4380, 14065,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fordgt_b", 1, 0, 19},
    {4381, 14066,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fordgt_c", 1, 0, 19},
    {4382, 14067,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fordgt_d", 1, 0, 19},
    {4383, 14068,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер fordgt_e", 1, 0, 19},
    {4384, 14069,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala64_a", 1, 0, 19},
    {4385, 14070,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala64_b", 1, 0, 19},
    {4386, 14071,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala64_c", 1, 0, 19},
    {4387, 14072,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala64_d", 1, 0, 19},
    {4388, 14073,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala64_e", 1, 0, 19},
    {4389, 14074,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala67_a", 1, 0, 19},
    {4390, 14075,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala67_b", 1, 0, 19},
    {4391, 14076,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala67_c", 1, 0, 19},
    {4392, 14077,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala67_d", 1, 0, 19},
    {4393, 14078,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер impala67_e", 1, 0, 19},
    {4394, 14079,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер macmp4_a", 1, 0, 19},
    {4395, 14080,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер macmp4_b", 1, 0, 19},
    {4396, 14081,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер macmp4_c", 1, 0, 19},
    {4397, 14082,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер macmp4_d", 1, 0, 19},
    {4398, 14083,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер macmp4_e", 1, 0, 19},
    {4399, 14084,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mercls_a", 1, 0, 19},
    {4400, 14085,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mercls_b", 1, 0, 19},
    {4401, 14086,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mercls_c", 1, 0, 19},
    {4402, 14087,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mercls_d", 1, 0, 19},
    {4403, 14088,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mercls_e", 1, 0, 19},
    {4404, 14089,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mersgl_a", 1, 0, 19},
    {4405, 14090,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mersgl_b", 1, 0, 19},
    {4406, 14091,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mersgl_c", 1, 0, 19},
    {4407, 14092,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mersgl_d", 1, 0, 19},
    {4408, 14093,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mersgl_e", 1, 0, 19},
    {4409, 14094,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер modelc_a", 1, 0, 19},
    {4410, 14095,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер modelc_b", 1, 0, 19},
    {4411, 14096,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер modelc_c", 1, 0, 19},
    {4412, 14097,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер modelc_d", 1, 0, 19},
    {4413, 14098,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер modelc_e", 1, 0, 19},
    {4414, 14099,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер phantom_a", 1, 0, 19},
    {4415, 14100,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер phantom_b", 1, 0, 19},
    {4416, 14101,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер phantom_c", 1, 0, 19},
    {4417, 14102,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер phantom_d", 1, 0, 19},
    {4418, 14103,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер phantom_e", 1, 0, 19},
    {4419, 14104,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ttrs_a", 1, 0, 19},
    {4420, 14105,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ttrs_b", 1, 0, 19},
    {4421, 14106,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ttrs_c", 1, 0, 19},
    {4422, 14107,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ttrs_d", 1, 0, 19},
    {4423, 14108,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ttrs_e", 1, 0, 19},
    {4424, 14109,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vwpolo_a", 1, 0, 19},
    {4425, 14110,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vwpolo_b", 1, 0, 19},
    {4426, 14111,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vwpolo_c", 1, 0, 19},
    {4427, 14112,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vwpolo_d", 1, 0, 19},
    {4428, 14113,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vwpolo_e", 1, 0, 19},
    {4429, 14114,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер wrxsti_a", 1, 0, 19},
    {4430, 14115,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер wrxsti_b", 1, 0, 19},
    {4431, 14116,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер wrxsti_c", 1, 0, 19},
    {4432, 14117,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер wrxsti_d", 1, 0, 19},
    {4433, 14118,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер wrxsti_e", 1, 0, 19},
    {4434, 14126,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mersgl_a", 1, 0, 19},
    {4435, 14127,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mersgl_b", 1, 0, 19},
    {4436, 14128,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mersgl_c", 1, 0, 19},
    {4437, 14129,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mersgl_d", 1, 0, 19},
    {4438, 14130,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mersgl_e", 1, 0, 19},
    {4439, 14920,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aveo_a", 1, 0, 19},
    {4440, 14921,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aveo_b", 1, 0, 19},
    {4441, 14922,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aveo_c", 1, 0, 19},
    {4442, 14923,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aveo_d", 1, 0, 19},
    {4443, 14924,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот aveo_e", 1, 0, 19},
    {4444, 14925,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот duster_a", 1, 0, 19},
    {4445, 14926,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот duster_b", 1, 0, 19},
    {4446, 14927,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот duster_c", 1, 0, 19},
    {4447, 14928,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот duster_d", 1, 0, 19},
    {4448, 14929,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот duster_e", 1, 0, 19},
    {4449, 14930,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g630_a", 1, 0, 19},
    {4450, 14931,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g630_b", 1, 0, 19},
    {4451, 14932,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g630_c", 1, 0, 19},
    {4452, 14933,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g630_d", 1, 0, 19},
    {4453, 14934,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот g630_e", 1, 0, 19},
    {4454, 14935,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5cs_a", 1, 0, 19},
    {4455, 14936,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5cs_b", 1, 0, 19},
    {4456, 14937,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5cs_c", 1, 0, 19},
    {4457, 14938,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5cs_d", 1, 0, 19},
    {4458, 14939,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m5cs_e", 1, 0, 19},
    {4459, 14940,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот priora_a", 1, 0, 19},
    {4460, 14941,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот priora_b", 1, 0, 19},
    {4461, 14942,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот priora_c", 1, 0, 19},
    {4462, 14943,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот priora_d", 1, 0, 19},
    {4463, 14944,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот priora_e", 1, 0, 19},
    {4464, 14945,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот quadra_a", 1, 0, 19},
    {4465, 14946,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот quadra_b", 1, 0, 19},
    {4466, 14947,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот quadra_c", 1, 0, 19},
    {4467, 14948,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот quadra_d", 1, 0, 19},
    {4468, 14949,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот quadra_e", 1, 0, 19},
    {4469, 14950,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для amgone_a", 1, 0, 19},
    {4470, 14951,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для amgone_b", 1, 0, 19},
    {4471, 14952,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для amgone_c", 1, 0, 19},
    {4472, 14953,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для amgone_d", 1, 0, 19},
    {4473, 14954,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для amgone_e", 1, 0, 19},
    {4474, 14955,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aveo_a", 1, 0, 19},
    {4475, 14956,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aveo_b", 1, 0, 19},
    {4476, 14957,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aveo_c", 1, 0, 19},
    {4477, 14958,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aveo_d", 1, 0, 19},
    {4478, 14959,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для aveo_e", 1, 0, 19},
    {4479, 14960,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для duster_a", 1, 0, 19},
    {4480, 14961,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для duster_b", 1, 0, 19},
    {4481, 14962,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для duster_c", 1, 0, 19},
    {4482, 14963,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для duster_d", 1, 0, 19},
    {4483, 14964,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для duster_e", 1, 0, 19},
    {4484, 14965,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5cs_a", 1, 0, 19},
    {4485, 14966,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5cs_b", 1, 0, 19},
    {4486, 14967,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5cs_c", 1, 0, 19},
    {4487, 14968,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5cs_d", 1, 0, 19},
    {4488, 14969,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m5cs_e", 1, 0, 19},
    {4489, 14970,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для priora_a", 1, 0, 19},
    {4490, 14971,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для priora_b", 1, 0, 19},
    {4491, 14972,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для priora_c", 1, 0, 19},
    {4492, 14973,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для priora_d", 1, 0, 19},
    {4493, 14974,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для priora_e", 1, 0, 19},
    {4494, 14975,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер amgone_a", 1, 0, 19},
    {4495, 14976,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер amgone_b", 1, 0, 19},
    {4496, 14977,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер amgone_c", 1, 0, 19},
    {4497, 14978,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер amgone_d", 1, 0, 19},
    {4498, 14979,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер amgone_e", 1, 0, 19},
    {4499, 14980,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aveo_a", 1, 0, 19},
    {4500, 14981,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aveo_b", 1, 0, 19},
    {4501, 14982,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aveo_c", 1, 0, 19},
    {4502, 14983,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aveo_d", 1, 0, 19},
    {4503, 14984,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер aveo_e", 1, 0, 19},
    {4504, 14985,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер duster_a", 1, 0, 19},
    {4505, 14986,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер duster_b", 1, 0, 19},
    {4506, 14987,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер duster_c", 1, 0, 19},
    {4507, 14988,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер duster_d", 1, 0, 19},
    {4508, 14989,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер duster_e", 1, 0, 19},
    {4509, 14990,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g630_a", 1, 0, 19},
    {4510, 14991,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g630_b", 1, 0, 19},
    {4511, 14992,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g630_c", 1, 0, 19},
    {4512, 14993,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g630_d", 1, 0, 19},
    {4513, 14994,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер g630_e", 1, 0, 19},
    {4514, 14995,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5cs_a", 1, 0, 19},
    {4515, 14996,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5cs_b", 1, 0, 19},
    {4516, 14997,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5cs_c", 1, 0, 19},
    {4517, 14998,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5cs_d", 1, 0, 19},
    {4518, 14999,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m5cs_e", 1, 0, 19},
    {4519, 15000,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер priora_a", 1, 0, 19},
    {4520, 15001,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер priora_b", 1, 0, 19},
    {4521, 15002,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер priora_c", 1, 0, 19},
    {4522, 15003,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер priora_d", 1, 0, 19},
    {4523, 15004,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер priora_e", 1, 0, 19},
    {4524, 15005,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vision_a", 1, 0, 19},
    {4525, 15006,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vision_b", 1, 0, 19},
    {4526, 15007,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vision_c", 1, 0, 19},
    {4527, 15008,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vision_d", 1, 0, 19},
    {4528, 15009,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер vision_e", 1, 0, 19},
    {4529, 15120,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот a45_a", 1, 0, 19},
    {4530, 15121,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот a45_b", 1, 0, 19},
    {4531, 15124,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот a45_e", 1, 0, 19},
    {4532, 15125,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот countach_a", 1, 0, 19},
    {4533, 15126,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот countach_b", 1, 0, 19},
    {4534, 15127,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот countach_c", 1, 0, 19},
    {4535, 15128,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот countach_d", 1, 0, 19},
    {4536, 15129,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот countach_e", 1, 0, 19},
    {4537, 15130,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот defender_a", 1, 0, 19},
    {4538, 15131,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот defender_b", 1, 0, 19},
    {4539, 15132,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот defender_c", 1, 0, 19},
    {4540, 15133,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот defender_d", 1, 0, 19},
    {4541, 15134,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот defender_e", 1, 0, 19},
    {4542, 15135,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gemera_a", 1, 0, 19},
    {4543, 15136,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gemera_b", 1, 0, 19},
    {4544, 15137,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gemera_c", 1, 0, 19},
    {4545, 15138,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gemera_d", 1, 0, 19},
    {4546, 15139,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gemera_e", 1, 0, 19},
    {4547, 15140,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kiak7_a", 1, 0, 19},
    {4548, 15141,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kiak7_b", 1, 0, 19},
    {4549, 15142,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kiak7_c", 1, 0, 19},
    {4550, 15143,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kiak7_d", 1, 0, 19},
    {4551, 15144,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот kiak7_e", 1, 0, 19},
    {4552, 15145,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lx600_a", 1, 0, 19},
    {4553, 15146,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lx600_b", 1, 0, 19},
    {4554, 15147,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lx600_c", 1, 0, 19},
    {4555, 15148,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lx600_d", 1, 0, 19},
    {4556, 15149,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот lx600_e", 1, 0, 19},
    {4557, 15150,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mach_a", 1, 0, 19},
    {4558, 15151,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mach_b", 1, 0, 19},
    {4559, 15152,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mach_c", 1, 0, 19},
    {4560, 15153,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mach_d", 1, 0, 19},
    {4561, 15154,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mach_e", 1, 0, 19},
    {4562, 15155,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mazda6_a", 1, 0, 19},
    {4563, 15156,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mazda6_b", 1, 0, 19},
    {4564, 15157,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mazda6_c", 1, 0, 19},
    {4565, 15158,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mazda6_d", 1, 0, 19},
    {4566, 15159,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mazda6_e", 1, 0, 19},
    {4567, 15160,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот qashai_a", 1, 0, 19},
    {4568, 15161,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот qashai_b", 1, 0, 19},
    {4569, 15162,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот qashai_c", 1, 0, 19},
    {4570, 15163,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот qashai_d", 1, 0, 19},
    {4571, 15164,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот qashai_e", 1, 0, 19},
    {4572, 15165,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот santafe_a", 1, 0, 19},
    {4573, 15166,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот santafe_b", 1, 0, 19},
    {4574, 15167,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот santafe_c", 1, 0, 19},
    {4575, 15168,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот santafe_d", 1, 0, 19},
    {4576, 15169,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот santafe_e", 1, 0, 19},
    {4577, 15170,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот scirroco_a", 1, 0, 19},
    {4578, 15171,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот scirroco_b", 1, 0, 19},
    {4579, 15172,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот scirroco_c", 1, 0, 19},
    {4580, 15173,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот scirroco_d", 1, 0, 19},
    {4581, 15174,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот scirroco_e", 1, 0, 19},
    {4582, 15175,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toyotagr_a", 1, 0, 19},
    {4583, 15176,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toyotagr_b", 1, 0, 19},
    {4584, 15177,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toyotagr_c", 1, 0, 19},
    {4585, 15178,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toyotagr_d", 1, 0, 19},
    {4586, 15179,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toyotagr_e", 1, 0, 19},
    {4587, 15180,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот velar_a", 1, 0, 19},
    {4588, 15181,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот velar_b", 1, 0, 19},
    {4589, 15182,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот velar_c", 1, 0, 19},
    {4590, 15183,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот velar_d", 1, 0, 19},
    {4591, 15184,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот velar_e", 1, 0, 19},
    {4592, 15185,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a45_a", 1, 0, 19},
    {4593, 15186,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a45_b", 1, 0, 19},
    {4594, 15187,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a45_c", 1, 0, 19},
    {4595, 15188,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a45_d", 1, 0, 19},
    {4596, 15189,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для a45_e", 1, 0, 19},
    {4597, 15190,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для countach_a", 1, 0, 19},
    {4598, 15191,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для countach_b", 1, 0, 19},
    {4599, 15192,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для countach_c", 1, 0, 19},
    {4600, 15193,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для countach_d", 1, 0, 19},
    {4601, 15194,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для countach_e", 1, 0, 19},
    {4602, 15195,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для defender_a", 1, 0, 19},
    {4603, 15196,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для defender_b", 1, 0, 19},
    {4604, 15197,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для defender_c", 1, 0, 19},
    {4605, 15198,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для defender_d", 1, 0, 19},
    {4606, 15199,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для defender_e", 1, 0, 19},
    {4607, 15200,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lx600_a", 1, 0, 19},
    {4608, 15201,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lx600_b", 1, 0, 19},
    {4609, 15202,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lx600_c", 1, 0, 19},
    {4610, 15203,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lx600_d", 1, 0, 19},
    {4611, 15204,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для lx600_e", 1, 0, 19},
    {4612, 15205,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mazda6_a", 1, 0, 19},
    {4613, 15206,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mazda6_b", 1, 0, 19},
    {4614, 15207,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mazda6_c", 1, 0, 19},
    {4615, 15208,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mazda6_d", 1, 0, 19},
    {4616, 15209,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mazda6_e", 1, 0, 19},
    {4617, 15210,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для qashai_a", 1, 0, 19},
    {4618, 15211,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для qashai_b", 1, 0, 19},
    {4619, 15212,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для qashai_c", 1, 0, 19},
    {4620, 15213,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для qashai_d", 1, 0, 19},
    {4621, 15214,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для qashai_e", 1, 0, 19},
    {4622, 15215,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для santafe_a", 1, 0, 19},
    {4623, 15216,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для santafe_b", 1, 0, 19},
    {4624, 15217,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для santafe_c", 1, 0, 19},
    {4625, 15218,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для santafe_d", 1, 0, 19},
    {4626, 15219,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для santafe_e", 1, 0, 19},
    {4627, 15220,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для scirroco_a", 1, 0, 19},
    {4628, 15221,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для scirroco_b", 1, 0, 19},
    {4629, 15222,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для scirroco_c", 1, 0, 19},
    {4630, 15223,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для scirroco_d", 1, 0, 19},
    {4631, 15224,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для scirroco_e", 1, 0, 19},
    {4632, 15225,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toyotagr_a", 1, 0, 19},
    {4633, 15226,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toyotagr_b", 1, 0, 19},
    {4634, 15227,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toyotagr_c", 1, 0, 19},
    {4635, 15228,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toyotagr_d", 1, 0, 19},
    {4636, 15229,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toyotagr_e", 1, 0, 19},
    {4637, 15230,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для velar_a", 1, 0, 19},
    {4638, 15231,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для velar_b", 1, 0, 19},
    {4639, 15232,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для velar_c", 1, 0, 19},
    {4640, 15233,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для velar_d", 1, 0, 19},
    {4641, 15234,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для velar_e", 1, 0, 19},
    {4642, 15235,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер a45_a", 1, 0, 19},
    {4643, 15236,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер a45_b", 1, 0, 19},
    {4644, 15237,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер a45_c", 1, 0, 19},
    {4645, 15238,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер a45_d", 1, 0, 19},
    {4646, 15239,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер a45_e", 1, 0, 19},
    {4647, 15240,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер countach_a", 1, 0, 19},
    {4648, 15241,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер countach_b", 1, 0, 19},
    {4649, 15242,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер countach_c", 1, 0, 19},
    {4650, 15243,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер countach_d", 1, 0, 19},
    {4651, 15244,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер countach_e", 1, 0, 19},
    {4652, 15245,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер defender_a", 1, 0, 19},
    {4653, 15246,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер defender_b", 1, 0, 19},
    {4654, 15247,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер defender_c", 1, 0, 19},
    {4655, 15248,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер defender_d", 1, 0, 19},
    {4656, 15249,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер defender_e", 1, 0, 19},
    {4657, 15250,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kiak7_a", 1, 0, 19},
    {4658, 15251,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kiak7_b", 1, 0, 19},
    {4659, 15252,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kiak7_c", 1, 0, 19},
    {4660, 15253,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kiak7_d", 1, 0, 19},
    {4661, 15254,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер kiak7_e", 1, 0, 19},
    {4662, 15255,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lx600_a", 1, 0, 19},
    {4663, 15256,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lx600_b", 1, 0, 19},
    {4664, 15257,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lx600_c", 1, 0, 19},
    {4665, 15258,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lx600_d", 1, 0, 19},
    {4666, 15259,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер lx600_e", 1, 0, 19},
    {4667, 15260,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mach_a", 1, 0, 19},
    {4668, 15261,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mach_b", 1, 0, 19},
    {4669, 15262,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mach_c", 1, 0, 19},
    {4670, 15263,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mach_d", 1, 0, 19},
    {4671, 15264,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mach_e", 1, 0, 19},
    {4672, 15265,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mazda6_a", 1, 0, 19},
    {4673, 15266,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mazda6_b", 1, 0, 19},
    {4674, 15267,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mazda6_c", 1, 0, 19},
    {4675, 15268,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mazda6_d", 1, 0, 19},
    {4676, 15269,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mazda6_e", 1, 0, 19},
    {4677, 15270,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер qashai_a", 1, 0, 19},
    {4678, 15271,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер qashai_b", 1, 0, 19},
    {4679, 15272,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер qashai_c", 1, 0, 19},
    {4680, 15273,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер qashai_d", 1, 0, 19},
    {4681, 15274,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер qashai_e", 1, 0, 19},
    {4682, 15275,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер santafe_a", 1, 0, 19},
    {4683, 15276,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер santafe_b", 1, 0, 19},
    {4684, 15277,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер santafe_c", 1, 0, 19},
    {4685, 15278,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер santafe_d", 1, 0, 19},
    {4686, 15279,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер santafe_e", 1, 0, 19},
    {4687, 15280,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер scirroco_a", 1, 0, 19},
    {4688, 15281,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер scirroco_b", 1, 0, 19},
    {4689, 15282,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер scirroco_c", 1, 0, 19},
    {4690, 15283,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер scirroco_d", 1, 0, 19},
    {4691, 15284,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер scirroco_e", 1, 0, 19},
    {4692, 15285,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toyotagr_a", 1, 0, 19},
    {4693, 15286,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toyotagr_b", 1, 0, 19},
    {4694, 15287,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toyotagr_c", 1, 0, 19},
    {4695, 15288,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toyotagr_d", 1, 0, 19},
    {4696, 15289,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toyotagr_e", 1, 0, 19},
    {4697, 15290,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер velar_a", 1, 0, 19},
    {4698, 15291,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер velar_b", 1, 0, 19},
    {4699, 15292,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер velar_c", 1, 0, 19},
    {4700, 15293,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер velar_d", 1, 0, 19},
    {4701, 15294,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер velar_e", 1, 0, 19},
    {4702, 15503,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwix_a", 1, 0, 19},
    {4703, 15504,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwix_b", 1, 0, 19},
    {4704, 15505,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwix_c", 1, 0, 19},
    {4705, 15506,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwix_d", 1, 0, 19},
    {4706, 15507,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmwix_e", 1, 0, 19},
    {4707, 15508,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот eqc_a", 1, 0, 19},
    {4708, 15509,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот eqc_b", 1, 0, 19},
    {4709, 15510,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот eqc_c", 1, 0, 19},
    {4710, 15511,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот eqc_d", 1, 0, 19},
    {4711, 15512,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот eqc_e", 1, 0, 19},
    {4712, 15513,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот etron_a", 1, 0, 19},
    {4713, 15514,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот etron_b", 1, 0, 19},
    {4714, 15515,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот etron_c", 1, 0, 19},
    {4715, 15516,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот etron_d", 1, 0, 19},
    {4716, 15517,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот etron_e", 1, 0, 19},
    {4717, 15518,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ipace_a", 1, 0, 19},
    {4718, 15519,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ipace_b", 1, 0, 19},
    {4719, 15520,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ipace_c", 1, 0, 19},
    {4720, 15521,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ipace_d", 1, 0, 19},
    {4721, 15522,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот ipace_e", 1, 0, 19},
    {4722, 15523,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот polestar_a", 1, 0, 19},
    {4723, 15524,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот polestar_b", 1, 0, 19},
    {4724, 15525,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот polestar_c", 1, 0, 19},
    {4725, 15526,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот polestar_d", 1, 0, 19},
    {4726, 15527,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот polestar_e", 1, 0, 19},
    {4727, 15528,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwix_a", 1, 0, 19},
    {4728, 15529,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwix_b", 1, 0, 19},
    {4729, 15530,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwix_c", 1, 0, 19},
    {4730, 15531,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwix_d", 1, 0, 19},
    {4731, 15532,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmwix_e", 1, 0, 19},
    {4732, 15533,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер eqc_a", 1, 0, 19},
    {4733, 15534,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер eqc_b", 1, 0, 19},
    {4734, 15535,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер eqc_c", 1, 0, 19},
    {4735, 15536,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер eqc_d", 1, 0, 19},
    {4736, 15537,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер eqc_e", 1, 0, 19},
    {4737, 15538,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер etron_a", 1, 0, 19},
    {4738, 15539,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер etron_b", 1, 0, 19},
    {4739, 15540,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер etron_c", 1, 0, 19},
    {4740, 15541,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер etron_d", 1, 0, 19},
    {4741, 15542,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер etron_e", 1, 0, 19},
    {4742, 15543,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ipace_a", 1, 0, 19},
    {4743, 15544,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ipace_b", 1, 0, 19},
    {4744, 15545,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ipace_c", 1, 0, 19},
    {4745, 15546,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ipace_d", 1, 0, 19},
    {4746, 15547,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер ipace_e", 1, 0, 19},
    {4747, 15548,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер polestar_a", 1, 0, 19},
    {4748, 15549,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер polestar_b", 1, 0, 19},
    {4749, 15550,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер polestar_c", 1, 0, 19},
    {4750, 15551,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер polestar_d", 1, 0, 19},
    {4751, 15552,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер polestar_e", 1, 0, 19},
    {4752, 15632,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_a", 1, 0, 19},
    {4753, 15633,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_d", 1, 0, 19},
    {4754, 15634,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_e", 1, 0, 19},
    {4755, 15635,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_f", 1, 0, 19},
    {4756, 15636,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_b", 1, 0, 19},
    {4757, 15637,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbg163_c", 1, 0, 19},
    {4758, 15638,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbg163_a", 1, 0, 19},
    {4759, 15639,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbg163_b", 1, 0, 19},
    {4760, 15640,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbg163_c", 1, 0, 19},
    {4761, 15641,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbg163_d", 1, 0, 19},
    {4762, 15642,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbg163_e", 1, 0, 19},
    {4763, 15643,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbg163_a", 1, 0, 19},
    {4764, 15644,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbg163_b", 1, 0, 19},
    {4765, 15645,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbg163_c", 1, 0, 19},
    {4766, 15646,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbg163_d", 1, 0, 19},
    {4767, 15647,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbg163_f", 1, 0, 19},
    {4768, 15648,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw7srs_a", 1, 0, 19},
    {4769, 15649,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw7srs_b", 1, 0, 19},
    {4770, 15651,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw7srs_d", 1, 0, 19},
    {4771, 15652,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw7srs_e", 1, 0, 19},
    {4772, 15653,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот bmw7srs_f", 1, 0, 19},
    {4773, 15654,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw7srs_a", 1, 0, 19},
    {4774, 15657,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw7srs_d", 1, 0, 19},
    {4775, 15658,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер bmw7srs_e", 1, 0, 19},
    {4776, 15659,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw7srs_a", 1, 0, 19},
    {4777, 15660,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw7srs_b", 1, 0, 19},
    {4778, 15661,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw7srs_c", 1, 0, 19},
    {4779, 15662,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw7srs_d", 1, 0, 19},
    {4780, 15663,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для bmw7srs_f", 1, 0, 19},
    {4781, 15664,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_a", 1, 0, 19},
    {4782, 15665,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_b", 1, 0, 19},
    {4783, 15666,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_c", 1, 0, 19},
    {4784, 15667,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_d", 1, 0, 19},
    {4785, 15668,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_e", 1, 0, 19},
    {4786, 15669,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63_f", 1, 0, 19},
    {4787, 15670,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63_a", 1, 0, 19},
    {4788, 15671,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63_b", 1, 0, 19},
    {4789, 15672,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63_c", 1, 0, 19},
    {4790, 15673,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63_d", 1, 0, 19},
    {4791, 15674,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63_e", 1, 0, 19},
    {4792, 15675,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63_a", 1, 0, 19},
    {4793, 15676,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63_b", 1, 0, 19},
    {4794, 15677,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63_c", 1, 0, 19},
    {4795, 15678,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63_d", 1, 0, 19},
    {4796, 15679,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63_f", 1, 0, 19},
    {4797, 15680,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_a", 1, 0, 19},
    {4798, 15681,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_b", 1, 0, 19},
    {4799, 15682,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_c", 1, 0, 19},
    {4800, 15683,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_d", 1, 0, 19},
    {4801, 15684,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_e", 1, 0, 19},
    {4802, 15685,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот mbc63sc_f", 1, 0, 19},
    {4803, 15686,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер mbc63sc_a", 1, 0, 19},
    {4804, 15691,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63sc_a", 1, 0, 19},
    {4805, 15692,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63sc_b", 1, 0, 19},
    {4806, 15693,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63sc_c", 1, 0, 19},
    {4807, 15694,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63sc_d", 1, 0, 19},
    {4808, 15695,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для mbc63sc_f", 1, 0, 19},
    {4809, 15753,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот seven_a", 1, 0, 19},
    {4810, 15754,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот seven_b", 1, 0, 19},
    {4811, 15755,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот seven_c", 1, 0, 19},
    {4812, 15756,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот seven_d", 1, 0, 19},
    {4813, 15757,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот seven_e", 1, 0, 19},
    {4814, 15758,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер seven_a", 1, 0, 19},
    {4815, 15759,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер seven_b", 1, 0, 19},
    {4816, 15760,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер seven_c", 1, 0, 19},
    {4817, 15761,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер seven_d", 1, 0, 19},
    {4818, 15762,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер seven_e", 1, 0, 19},
    {4819, 15763,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для seven_a", 1, 0, 19},
    {4820, 15764,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для seven_b", 1, 0, 19},
    {4821, 15765,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для seven_c", 1, 0, 19},
    {4822, 15766,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для seven_d", 1, 0, 19},
    {4823, 15767,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для seven_e", 1, 0, 19},
    {4824, 15768,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gladiator_a", 1, 0, 19},
    {4825, 15769,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gladiator_b", 1, 0, 19},
    {4826, 15770,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gladiator_c", 1, 0, 19},
    {4827, 15771,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gladiator_d", 1, 0, 19},
    {4828, 15772,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот gladiator_e", 1, 0, 19},
    {4829, 15773,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gladiator_a", 1, 0, 19},
    {4830, 15774,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gladiator_b", 1, 0, 19},
    {4831, 15775,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gladiator_c", 1, 0, 19},
    {4832, 15776,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gladiator_d", 1, 0, 19},
    {4833, 15777,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер gladiator_e", 1, 0, 19},
    {4834, 15778,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gladiator_a", 1, 0, 19},
    {4835, 15779,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gladiator_b", 1, 0, 19},
    {4836, 15780,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gladiator_c", 1, 0, 19},
    {4837, 15781,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gladiator_d", 1, 0, 19},
    {4838, 15782,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для gladiator_e", 1, 0, 19},
    {4839, 15783,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m8_a", 1, 0, 19},
    {4840, 15784,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m8_b", 1, 0, 19},
    {4841, 15785,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m8_c", 1, 0, 19},
    {4842, 15786,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m8_d", 1, 0, 19},
    {4843, 15787,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот m8_e", 1, 0, 19},
    {4844, 15788,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m8_a", 1, 0, 19},
    {4845, 15789,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m8_b", 1, 0, 19},
    {4846, 15790,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m8_c", 1, 0, 19},
    {4847, 15791,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m8_d", 1, 0, 19},
    {4848, 15792,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер m8_e", 1, 0, 19},
    {4849, 15793,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m8_a", 1, 0, 19},
    {4850, 15794,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m8_b", 1, 0, 19},
    {4851, 15795,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m8_c", 1, 0, 19},
    {4852, 15796,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m8_d", 1, 0, 19},
    {4853, 15797,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для m8_e", 1, 0, 19},
    {4854, 15798,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rover_a", 1, 0, 19},
    {4855, 15799,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rover_b", 1, 0, 19},
    {4856, 15800,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rover_c", 1, 0, 19},
    {4857, 15801,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rover_d", 1, 0, 19},
    {4858, 15802,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот rover_e", 1, 0, 19},
    {4859, 15803,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rover_a", 1, 0, 19},
    {4860, 15804,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rover_b", 1, 0, 19},
    {4861, 15805,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rover_c", 1, 0, 19},
    {4862, 15806,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rover_d", 1, 0, 19},
    {4863, 15807,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер rover_e", 1, 0, 19},
    {4864, 15808,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rover_a", 1, 0, 19},
    {4865, 15809,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rover_b", 1, 0, 19},
    {4866, 15810,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rover_c", 1, 0, 19},
    {4867, 15811,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rover_d", 1, 0, 19},
    {4868, 15812,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для rover_e", 1, 0, 19},
    {4869, 15813,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s63_a", 1, 0, 19},
    {4870, 15814,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s63_b", 1, 0, 19},
    {4871, 15815,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s63_c", 1, 0, 19},
    {4872, 15816,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s63_d", 1, 0, 19},
    {4873, 15817,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот s63_e", 1, 0, 19},
    {4874, 15818,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s63_a", 1, 0, 19},
    {4875, 15819,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s63_b", 1, 0, 19},
    {4876, 15820,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s63_c", 1, 0, 19},
    {4877, 15821,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s63_d", 1, 0, 19},
    {4878, 15822,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер s63_e", 1, 0, 19},
    {4879, 15823,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s63_a", 1, 0, 19},
    {4880, 15824,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s63_b", 1, 0, 19},
    {4881, 15825,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s63_c", 1, 0, 19},
    {4882, 15826,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s63_d", 1, 0, 19},
    {4883, 15827,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для s63_e", 1, 0, 19},
    {4884, 15828,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toureg_a", 1, 0, 19},
    {4885, 15829,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toureg_b", 1, 0, 19},
    {4886, 15830,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toureg_c", 1, 0, 19},
    {4887, 15831,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toureg_d", 1, 0, 19},
    {4888, 15832,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот toureg_e", 1, 0, 19},
    {4889, 15833,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toureg_a", 1, 0, 19},
    {4890, 15834,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toureg_b", 1, 0, 19},
    {4891, 15835,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toureg_c", 1, 0, 19},
    {4892, 15836,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toureg_d", 1, 0, 19},
    {4893, 15837,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер toureg_e", 1, 0, 19},
    {4894, 15838,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toureg_a", 1, 0, 19},
    {4895, 15839,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toureg_b", 1, 0, 19},
    {4896, 15840,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toureg_c", 1, 0, 19},
    {4897, 15841,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toureg_d", 1, 0, 19},
    {4898, 15842,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для toureg_e", 1, 0, 19},
    {4899, 15843,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот x6_a", 1, 0, 19},
    {4900, 15844,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот x6_b", 1, 0, 19},
    {4901, 15845,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот x6_c", 1, 0, 19},
    {4902, 15846,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот x6_d", 1, 0, 19},
    {4903, 15847,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот x6_e", 1, 0, 19},
    {4904, 15848,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер x6_a", 1, 0, 19},
    {4905, 15849,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер x6_b", 1, 0, 19},
    {4906, 15850,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер x6_c", 1, 0, 19},
    {4907, 15851,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер x6_d", 1, 0, 19},
    {4908, 15852,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер x6_e", 1, 0, 19},
    {4909, 15853,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для x6_a", 1, 0, 19},
    {4910, 15854,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для x6_b", 1, 0, 19},
    {4911, 15855,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для x6_c", 1, 0, 19},
    {4912, 15856,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для x6_d", 1, 0, 19},
    {4913, 15857,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот для x6_e", 1, 0, 19},
    {4914, 15864,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jmc_a", 1, 0, 19},
    {4915, 15865,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Спойлер jmc_a", 1, 0, 19},
    {4916, 15866,   90.000000,    0.000000,    0.000000,    5.000000, 1, "Капот jmc_b", 1, 0, 19},
    {4917, 16821,   90.000000,    0.000000,    0.000000,    5.000000, 1, "tuning_freewayh_b_1", 1, 0, 19},
    {4918, 16822,   90.000000,    0.000000,    0.000000,    5.000000, 1, "tuning_freewayh_b_2", 1, 0, 19},
    {4919, 2481,  352.000000,  345.000000,   20.000000,    0.832324, 100, "Запечатанный сертификат на транспорт", 1, 0, 25},
    {4920, 2481,  352.000000,  345.000000,   20.000000,    0.832324, 100, "Запечатанный сертификат на одежду", 1, 0, 26},
    {4921, 15882,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: skate", 2, 0, 10},
    {4922, 15883,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: surfboard", 2, 0, 10},
    {4923, 15960,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes GT63 Brabus", 2, 0, 10},
    {4924, 15961,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz GLE Brabus", 2, 0, 10},
    {4925, 15962,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: McLaren 720S", 2, 0, 10},
    {4926, 15963,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge RAM 3500", 2, 0, 10},
    {4927, 15964,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Helicopter", 2, 0, 10},
    {4928, 15965,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Metla", 2, 0, 10},
    {4929, 16793,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Batmobile", 2, 0, 10},
    {4930, 16794,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Zombiemobile", 2, 0, 10},
    {4931, 16795,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Devil", 2, 0, 10},
    {4932, 16796,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Police Apocalypse", 2, 0, 10},
    {4933, 16797,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chum Bucket", 2, 0, 10},
    {4934, 16798,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hellway", 2, 0, 10},
    {4935, 1649,    0.000000,    0.000000,   90.000000,    2.000000, 1, "Twin Turbo (2 уровня)", 1, 0, 21},
    {4936, 16876,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Крылья бабочки", 1, 0, 6},
    {4937, 16877,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледянные крылья", 1, 0, 6},
    {4938, 16878,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Летающие снежинки", 1, 0, 5},
    {4939, 16858,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Летающая корона", 1, 0, 5},
    {4940, 16933,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Браслет «ADMIN»", 1, 0, 3},
    {4941, 16934,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маркер «ADMIN»", 1, 0, 3},
    {4942, 16935,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Очки «ADMIN»", 1, 0, 1},
    {4943, 16936,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Амулет на спину", 1, 0, 6},
    {4944, 16937,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Эффект «Рыбки в пруду»", 1, 0, 5},
    {4945, 16938,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Анимированный Кубик-Рубика на спину", 1, 0, 6},
    {4946, 16939,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Снежная сфера", 1, 0, 5},
    {4947, 16940,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Эффект «Снежная ель»", 1, 0, 5},
    {4948, 16941,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Великие белые крылья", 1, 0, 4},
    {4949, 16908,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Новогодний компаньон", 1, 0, 4},
    {4950, 16892,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: BRAG63A", 2, 0, 10},
    {4951, 16893,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: S500W223B", 2, 0, 10},
    {4952, 16894,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mansory Stallone", 2, 0, 10},
    {4953, 16895,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: bentaygam", 2, 0, 10},
    {4954, 16896,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: gbrabus63", 2, 0, 10},
    {4955, 16897,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-AMG: G63 M", 2, 0, 10},
    {4956, 16898,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Mercedes-Benz GLS 2020", 2, 0, 10},
    {4957, 16899,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Rolls-Royce Cullinan M", 2, 0, 10},
    {4958, 16900,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Lamborghini Urus M", 2, 0, 10},
    {4959, 16903,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Bobcat [New Year]", 2, 0, 10},
    {4960, 16904,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Hotknife [New Year]", 2, 0, 10},
    {4961, 16920,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Snowboard", 2, 0, 10},
    {4962, 16951,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevrolet Corvette", 2, 0, 10},
    {4963, 16952,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Porche Carrera", 2, 0, 10},
    {4964, 16953,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Scramjet", 2, 0, 10},
    {4965, 16954,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Dodge Charger SLT", 2, 0, 10},
    {4966, 16955,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Ferrari F40", 2, 0, 10},
    {4967, 16956,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Canis", 2, 0, 10},
    {4968, 16957,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Chevrolet Tahoe", 2, 0, 10},
    {4969, 16958,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Tampa GT310", 2, 0, 10},
    {4970, 16959,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Toyota Tundra", 2, 0, 10},
    {4971, 16994,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Scooter 1", 2, 0, 10},
    {4972, 16995,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Scooter 2", 2, 0, 10},
    {4973, 16996,  352.000000,  345.000000,   20.000000,    0.832324, 1, "Сертификат: Scooter 3", 2, 0, 10},
    {4974, 15884,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: zombie_man3 (ID: 616)", 1, 0, 9},
    {4975, 16843,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: trevor (ID: 624)", 1, 0, 9},
    {4976, 16844,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dark_elf (ID: 625)", 1, 0, 9},
    {4977, 16845,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: leshiy_new (ID: 626)", 1, 0, 9},
    {4978, 16846,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: light_elf (ID: 627)", 1, 0, 9},
    {4979, 16847,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: rabbit (ID: 628)", 1, 0, 9},
    {4980, 16848,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snowman1 (ID: 629)", 1, 0, 9},
    {4981, 16849,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snowman2 (ID: 630)", 1, 0, 9},
    {4982, 16830,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snowman3 (ID: 631)", 1, 0, 9},
    {4983, 16831,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: cyberpunk_lucy (ID: 632)", 1, 0, 9},
    {4984, 16832,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: cyberpunk_rebecca (ID: 633)", 1, 0, 9},
    {4985, 16833,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: cyberpunk_david (ID: 634)", 1, 0, 9},
    {4986, 16834,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: dora (ID: 635)", 1, 0, 9},
    {4987, 16835,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: maybe_baby (ID: 636)", 1, 0, 9},
    {4988, 16836,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: witch (ID: 637)", 1, 0, 9},
    {4989, 16837,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: addams (ID: 638)", 1, 0, 9},
    {4990, 16838,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: harly_queen (ID: 639)", 1, 0, 9},
    {4991, 16839,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: scream (ID: 640)", 1, 0, 9},
    {4992, 16840,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: alice_madness (ID: 641)", 1, 0, 9},
    {4993, 16841,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: geralt_witcher (ID: 642)", 1, 0, 9},
    {4994, 16850,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ciri_witcher (ID: 643)", 1, 0, 9},
    {4995, 16851,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: albert_mironov (ID: 644)", 1, 0, 9},
    {4996, 16852,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: valentin (ID: 645)", 1, 0, 9},
    {4997, 16891,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mayson (ID: 646)", 1, 0, 9},
    {4998, 16901,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: jinx (ID: 647)", 1, 0, 9},
    {4999, 16902,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ortega (ID: 648)", 1, 0, 9},
    {5000, 16960,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: admingirl1 (ID: 649)", 1, 0, 9},
    {5001, 16961,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: admingirl2 (ID: 650)", 1, 0, 9},
    {5002, 16962,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman1 (ID: 651)", 1, 0, 9},
    {5003, 16963,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman3 (ID: 652)", 1, 0, 9},
    {5004, 16965,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman4 (ID: 653)", 1, 0, 9},
    {5005, 16966,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman5 (ID: 654)", 1, 0, 9},
    {5006, 16967,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman6 (ID: 655)", 1, 0, 9},
    {5007, 16968,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: adminman7 (ID: 656)", 1, 0, 9},
    {5008, 16997,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: security1 (ID: 657)", 1, 0, 9},
    {5009, 16998,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: security2 (ID: 658)", 1, 0, 9},
    {5010, 16999,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: security3 (ID: 659)", 1, 0, 9},
    {5011, 17475,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: security4 (ID: 660)", 1, 0, 9},
    {5012, 17476,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: willi (ID: 661)", 1, 0, 9},
    {5013, 17477,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tan (ID: 662)", 1, 0, 9},
    {5014, 17478,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: snape (ID: 663)", 1, 0, 9},
    {5015, 17479,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: ron (ID: 664)", 1, 0, 9},
    {5016, 17480,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: luci (ID: 665)", 1, 0, 9},
    {5017, 17481,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hermiona (ID: 666)", 1, 0, 9},
    {5018, 17482,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: harry (ID: 667)", 1, 0, 9},
    {5019, 17483,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: hagrid (ID: 668)", 1, 0, 9},
    {5020, 17484,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: draco (ID: 669)", 1, 0, 9},
    {5021, 24098,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: beliy (ID: 670)", 1, 0, 9},
    {5022, 24099,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: bodrov (ID: 671)", 1, 0, 9},
    {5023, 24100,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: letov (ID: 672)", 1, 0, 9},
    {5024, 24101,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: mavrodi (ID: 673)", 1, 0, 9},
    {5025, 24102,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: pyoker (ID: 674)", 1, 0, 9},
    {5026, 24103,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: drockw (ID: 675)", 1, 0, 9},
    {5027, 24104,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Скин: tsoy (ID: 676)", 1, 0, 9},
    {5028, 2481,  352.000000,  345.000000,   20.000000,    0.832324, 100, "Сертификат на магическую удачу", 3, -1728052993, 0},
    {5029, 15897,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд Абстракция", 1, 0, 6},
    {5030, 15898,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд GNU", 1, 0, 6},
    {5031, 15933,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд Santa Cruse", 1, 0, 6},
    {5032, 15938,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд INSINCT", 1, 0, 6},
    {5033, 15940,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд Horse Man", 1, 0, 6},
    {5034, 15993,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Сноуборд Trick Stick", 1, 0, 6},
    {5035, 16808,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рождественское ружья", 1, 0, 6},
    {5036, 16809,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Новогодние оленьи рога", 1, 0, 6},
    {5037, 16810,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шапка эльфа", 1, 0, 1},
    {5038, 16811,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Распределяющая шляпа", 1, 0, 1},
    {5039, 16812,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Очки эльфа", 1, 0, 2},
    {5040, 16814,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледянная маска", 1, 0, 2},
    {5041, 16823,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледяной щит", 1, 0, 3},
    {5042, 16824,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледяной меч", 1, 0, 3},
    {5043, 16825,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледянец на спину", 1, 0, 6},
    {5044, 16826,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рождественское AWP на спину", 1, 0, 6},
    {5045, 16813,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Синяя", 1, 0, 2},
    {5046, 16859,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Черно-красная 1", 1, 0, 2},
    {5047, 16860,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Розовая", 1, 0, 2},
    {5048, 16861,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Серая", 1, 0, 2},
    {5049, 16862,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Изумрудная", 1, 0, 2},
    {5050, 16863,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Бронзовая", 1, 0, 2},
    {5051, 16864,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Маска кролика Черно-красная 2", 1, 0, 2},
    {5052, 16868,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Очки Netrunnerа", 1, 0, 2},
    {5053, 16869,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шлем Braindance", 1, 0, 1},
    {5054, 16870,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Космическая маска", 1, 0, 2},
    {5055, 16871,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Дробовик \"Guts\"", 1, 0, 3},
    {5056, 16872,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Оружие cyberpunk 1", 1, 0, 3},
    {5057, 16873,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Оружие cyberpunk 2", 1, 0, 3},
    {5058, 16874,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шлем господство", 1, 0, 1},
    {5059, 16875,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледяная скорбь", 1, 0, 6},
    {5060, 16905,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бумажный самолетик на спину", 1, 0, 6},
    {5061, 16906,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рождественская накидка на спину", 1, 0, 6},
    {5062, 16907,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Пряня на спину", 1, 0, 6},
    {5063, 16909,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Левая новогодняя варежка", 1, 0, 5},
    {5064, 16910,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Правая новогодняя варежка", 1, 0, 4},
    {5065, 16911,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шлем самурая", 1, 0, 1},
    {5066, 16912,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Новогодний дождик на шею", 1, 0, 4},
    {5067, 16913,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Полумесяц на спину", 1, 0, 6},
    {5068, 16914,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Пояс Санты", 1, 0, 4},
    {5069, 16915,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Накидка Санты", 1, 0, 5},
    {5070, 16916,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Белые коньки на шею", 1, 0, 4},
    {5071, 16917,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Новогодняя здезда на голову", 1, 0, 1},
    {5072, 16918,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бант из палочек", 1, 0, 4},
    {5073, 16919,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шапка-ёлка на голову", 1, 0, 1},
    {5074, 16921,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ёлка на туловище", 1, 0, 4},
    {5075, 16922,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Прическа Фиолетовые дреды", 1, 0, 2},
    {5076, 16923,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Арфа на спину", 1, 0, 6},
    {5077, 16924,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Ледянная юбка", 1, 0, 5},
    {5078, 16925,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Рюкзак Шаманский", 1, 0, 6},
    {5079, 16926,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Пакет на голову", 1, 0, 1},
    {5080, 16927,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Наплечник из картона (левый)", 1, 0, 4},
    {5081, 16928,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Наплечник из картона (правый)", 1, 0, 5},
    {5082, 16929,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет из картона", 1, 0, 7},
    {5083, 16930,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Надувной фламинго", 1, 0, 5},
    {5084, 16931,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Анимированные очки Netrunner", 1, 0, 2},
    {5085, 16932,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет Netrunner", 1, 0, 7},
    {5086, 16973,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Кепка «Adidas» (серая)", 1, 0, 1},
    {5087, 16974,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Перчатка «ADMIN»", 1, 0, 4},
    {5088, 16975,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Бронежилет «Burger King г*вно»", 1, 0, 7},
    {5089, 16976,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Боксерская перчатка «ADMIN»", 1, 0, 4},
    {5090, 16977,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Корона «Burger King г*вн»", 1, 0, 1},
    {5091, 16978,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Клинок Хаоса (левый)", 1, 0, 4},
    {5092, 16979,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Клинок Хаоса (правый)", 1, 0, 5},
    {5093, 16980,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Клинки Хаоса на спину", 1, 0, 6},
    {5094, 16981,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Шлем «Shinobi»", 1, 0, 1},
    {5095, 16982,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Банхаммер", 1, 0, 6},
    {5096, 16983,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Мегафон «ADMIN»", 1, 0, 3},
    {5097, 16984,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Скрытый клинок", 1, 0, 4},
    {5098, 16985,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Как*шка «Burger King»", 1, 0, 1},
    {5099, 16986,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Кепка «Starbucks»", 1, 0, 1},
    {5100, 16987,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Кепка «TikTok» (1)", 1, 0, 1},
    {5101, 16988,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Кепка «TikTok» (2)", 1, 0, 1},
    {5102, 16989,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Железное сердце", 1, 0, 4},
    {5103, 16990,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Кепка «Vetements»", 1, 0, 1},
    {5104, 16991,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Переносной электросамокат (1)", 1, 0, 6},
    {5105, 16992,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Переносной электросамокат (2)", 1, 0, 6},
    {5106, 16993,    0.000000,    0.000000,    0.000000,    0.000000, 1, "Переносной электросамокат (3)", 1, 0, 6},
    {5107, 112,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Forelli’", 1, -2097522433, 105},
    {5108, 31,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Верный друг’", 1, -1431655681, 105},
    {5109, 217,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Мужчина’", 1, 634060799, 105},
    {5110, 263,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Женщина’", 1, -767963905, 105},
    {5111, 16848,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Сноумэн’", 1, 634060799, 105},
    {5112, 16841,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Геральт’", 1, -767963905, 105},
    {5113, 16838,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Уэенсдей Аддамс’", 1, -767963905, 105},
    {5114, 17483,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Хагрид’", 1, -767963905, 105},
    {5115, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5116, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хип-Хоп (1)", 3, 0, 102},
    {5117, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хлопки руками", 3, 0, 102},
    {5118, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Ковбой", 3, 0, 102},
    {5119, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Джазз (1)", 3, 0, 102},
    {5120, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Фортнайт", 3, 0, 102},
    {5121, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хип-хоп (2)", 3, 0, 102},
    {5122, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Брейк (1)", 3, 0, 102},
    {5123, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Я волна", 3, 0, 102},
    {5124, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Брейк (2)", 3, 0, 102},
    {5125, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Утят", 3, 0, 102},
    {5126, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Gangnam Style", 3, 0, 102},
    {5127, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хип-Хоп (3)", 3, 0, 102},
    {5128, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Брейк (2)", 3, 0, 102},
    {5129, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Брейк (3)", 3, 0, 102},
    {5130, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хип-Хоп (4)", 3, 0, 102},
    {5131, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Хип-Хоп (5)", 3, 0, 102},
    {5132, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Дабстеп", 3, 0, 102},
    {5133, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (1)", 3, 0, 102},
    {5134, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (2)", 3, 0, 102},
    {5135, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (3)", 3, 0, 102},
    {5136, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (4)", 3, 0, 102},
    {5137, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (5)", 3, 0, 102},
    {5138, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (6)", 3, 0, 102},
    {5139, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Самба (7)", 3, 0, 102},
    {5140, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Обычный (1)", 3, 0, 102},
    {5141, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Обычный (2)", 3, 0, 102},
    {5142, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Обычный (3)", 3, 0, 102},
    {5143, 1314,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Танец: Обычный (4)", 3, 0, 102},
    {5144, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "$", 1, 0, 0},
    {5145, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "exp", 1, 0, 0},
    {5146, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Coins", 1, 0, 0},
    {5147, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "Rubles", 1, 0, 0},
    {5148, 1265,    0.500000,    0.500000,    0.000000,    1.000000, 10000, "Мусор (ASC)", 3, 0, 0},
    {5149, 19168,   30.500000,   34.500000,    0.000000,    0.899900, 1, "Восстановленная карта кладов", 1, 0, 103},
    {5150, 19168,   30.500000,   34.500000,    0.000000,    0.899900, 1, "Старая карта кладов", 1, 0, 103},
    {5151, 19168,   30.500000,   34.500000,    0.000000,    0.899900, 1, "Современная карта кладов", 1, 0, 103},
    {5152, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "", 1, 0, 0},
    {5153, 1649,   34.500000,   30.500000,    0.000000,    1.000000, 1, "SUPREME VIP", 1, 0, 0},
    {5154, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5155, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5156, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5157, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5158, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5159, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5160, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5161, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5162, 3148,    0.000000,    0.000000,    0.000000,    1.000000, 1, "Сертификат спутника ‘Леший’", 1, 634060799, 105},
    {5163, 17989,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Капкейк", 1, 0, 1},
    {5164, 17990,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Ободок 'Валентинки'", 1, 0, 2},
    {5165, 17991,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Чокер 'Сердце под замком'", 1, 0, 3},
    {5166, 17992,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Стрела купидона", 1, 0, 6},
    {5167, 17993,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Маска 'Поцелуй'", 1, 0, 2},
    {5168, 17994,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Фата невесты", 1, 0, 3},
    {5169, 17995,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Мишка с сердцем на спину", 1, 0, 6},
    {5170, 17996,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Леденец в виде сердца на спину", 1, 0, 6},
    {5171, 17997,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Любовный букет на спину", 1, 0, 6},
    {5172, 17999,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Кепка из змеиной кожи", 1, 0, 1},
    {5173, 18037,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Очки 'Сердечки'", 1, 0, 2},
    {5174, 18103,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Красный бант на левую руку", 1, 0, 3},
    {5175, 18106,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Красный бант на правую руку", 1, 0, 4},
    {5176, 18107,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Накидка 'Красная трава'", 1, 0, 5},
    {5177, 18108,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Нагрудник 'Валентинка'", 1, 0, 5},
    {5178, 18110,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шарики 'Валентинки'", 1, 0, 5},
    {5179, 18111,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Любовный смайлик", 1, 0, 5},
    {5180, 17485,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сумка 'Путешественник'", 1, 0, 8},
    {5181, 17487,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сумка 'Молодежная'", 1, 0, 8},
    {5182, 17488,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сумка 'Сундук'", 1, 0, 8},
    {5183, 17489,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сумка 'Магнитофон BOOMIN'", 1, 0, 8},
    {5184, 17490,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Щит 'Магический бастион'", 1, 0, 6},
    {5185, 17491,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем 'Marshmello'", 1, 0, 1},
    {5186, 17492,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Соломенный капюшон", 1, 0, 2},
    {5187, 17493,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Рюкзак 'Голова голема'", 1, 0, 6},
    {5188, 17494,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Корабельный штурвал на спину", 1, 0, 6},
    {5189, 17495,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Рюкзак 'Огненный панцирь'", 1, 0, 6},
    {5190, 17496,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Меч 'Повелитель морей'", 1, 0, 6},
    {5191, 17497,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сачок на спину", 1, 0, 6},
    {5192, 17498,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Скелет рыбы на спину", 1, 0, 6},
    {5193, 17499,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Звездный компас на спину", 1, 0, 6},
    {5194, 17975,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Якорь душ на спину", 1, 0, 6},
    {5195, 17977,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем PUBG", 1, 0, 1},
    {5196, 17979,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шляпа 'Осьминожка'", 1, 0, 1},
    {5197, 17980,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шапка из газеты", 1, 0, 1},
    {5198, 17981,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Диадема из ракушек", 1, 0, 1},
    {5199, 17982,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Папайка моряка", 1, 0, 1},
    {5200, 17983,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шляпа для сафари", 1, 0, 1},
    {5201, 17984,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Маска-эмоджи 'Злой DJ'", 1, 0, 2},
    {5202, 17985,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Маска-эмоджи 'Важная рыба'", 1, 0, 2},
    {5203, 17986,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Костюм 'Банан Пили'", 1, 0, 5},
    {5204, 17987,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Соломенный нагрудник", 1, 0, 4},
    {5205, 17988,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Золотая рыбка", 1, 0, 4},
    {5206, 18169,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Ушастая кепка", 1, 0, 1},
    {5207, 18170,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Маска 'Ушастый кролик'", 1, 0, 2},
    {5208, 18171,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Маска 'Упоротый заяц'", 1, 0, 2},
    {5209, 18172,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем 'Киберзаяц'", 1, 0, 1},
    {5210, 18173,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем 'Заяц-дройд'", 1, 0, 1},
    {5211, 18174,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем 'Броня 80lvl'", 1, 0, 1},
    {5212, 18175,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Голова 'Лесная фея'", 1, 0, 1},
    {5213, 18176,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Шлем 'Железный заяц'", 1, 0, 1},
    {5214, 18177,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Кролик 'Happy Easter' на спину", 1, 0, 6},
    {5215, 18178,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Рюкзак 'К прыжку готов!'", 1, 0, 6},
    {5216, 18179,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Крылья 'Лесная фея'", 1, 0, 6},
    {5217, 18180,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Перчатка 'Киберзаяц' - Правая", 1, 0, 4},
    {5218, 18181,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наплечник 'Команда зайцев' - Правый", 1, 0, 4},
    {5219, 18182,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Перчатка 'Киберзаяц' - Левая", 1, 0, 3},
    {5220, 18183,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наплечник 'Команда зайцев' - Левый", 1, 0, 3},
    {5221, 18184,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Лучевая пушка 'МарковкаТрон'", 1, 0, 2},
    {5222, 18185,   30.500000,   34.500000,    0.000000,    1.472699, 1, "'Розовый глазастый шар' - Левый", 1, 0, 3},
    {5223, 18186,   30.500000,   34.500000,    0.000000,    1.472699, 1, "'Розовый глазастый шар' - Правый", 1, 0, 4},
    {5224, 18187,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Бронежилет 'Заяц-вожак'", 1, 0, 7},
    {5225, 18188,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Бронежилет 'Броня 80lvl'", 1, 0, 7},
    {5226, 18189,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Пояс 'Броня 80lvl'", 1, 0, 5},
    {5227, 18190,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Юбка 'Лесная фея'", 1, 0, 5},
    {5228, 18191,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наручи 'Броня 80lvl' - Правые", 1, 0, 4},
    {5229, 18192,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наручи 'Лесная фея' - Правые", 1, 0, 4},
    {5230, 18193,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Рука 'Железный заяц' - правая", 1, 0, 4},
    {5231, 18194,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наручи 'Броня 80lvl' - Левые", 1, 0, 3},
    {5232, 18195,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Наручи 'Лесная фея' - Левые", 1, 0, 3},
    {5233, 18196,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Рука 'Железный заяц' - левая", 1, 0, 3},
    {5234, 18197,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Броня 80lvl - Копье на спину", 1, 0, 6},
    {5235, 17998,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Крылья Купидона", 1, 0, 6},
    {5236, 17486,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Сумка 'Бирюзовая'", 1, 0, 8},
    {5237, 18198,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Дрон 'Пасхалка #010'", 1, 0, 5},
    {5238, 6643,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Пасхальный нимб", 1, 0, 1},
    {5239, 6644,   30.500000,   34.500000,    0.000000,    1.472699, 1, "Курочка в гнезде", 1, 0, 1},
    {5240, 2645,    0.000000,   20.000000,    0.000000,    1.000000, 1, "Сертификат бесконечного Дополнения VIP", 2, -10066177, 0},
    {5241, 2645,    0.000000,   20.000000,    0.000000,    1.000000, 1, "Сертификат Дополнения VIP", 2, 0, 0}
};
new str_GetItemInfo[2048];
#define GetItemInfo(%0,%1) (CallRemoteFunction("GetItemInfo", "id", %0,ItemsInfo[%1][ItemUID]), GetPVarString(%0, "GetItemInfo", str_GetItemInfo, 2048), str_GetItemInfo)
enum tInfo
{
    TrunkItem[60],
    TrunkItemAmount[60],
    TrunkItemSharpening[60],
	TrunkItemUID[60],
	TrunkItemColor[60],
	TrunkItemParams[60],
    bool:tOpen
};
new TrunkInfo[MAX_VEHICLES][tInfo];
enum enumGangGun
{
	Float:GangX,
	Float:GangY,
	Float:GangZ
};
static const GangGun[][enumGangGun] =
{
	{2491.9143,-1686.2834,13.5118},
	{2792.8799,-1622.2100,10.9219},
	{2004.7881,-1116.9790,26.7813},
	{2182.1643,-1812.0608,13.5469},
	{2524.5220,-2001.5774,13.7826},
	{2477.0354,-1419.5289,28.8384}
};
new InvColor[][3]=
{
	{0xBFAE56FF, 0xBF5656FF, 0x994545FF},
	{0xBFA856FF, 0xBF565BFF, 0x994549FF},
	{0xBFA356FF, 0xBF5661FF, 0x99454EFF},
	{0xBF9E56FF, 0xBF5666FF, 0x994552FF},
	{0xBF9956FF, 0xBF566BFF, 0x994556FF},
	{0xBF9356FF, 0xBF5670FF, 0x99455AFF},
	{0xBF8E56FF, 0xBF5676FF, 0x99455EFF},
	{0xBF8956FF, 0xBF567BFF, 0x994562FF},
	{0xBF8456FF, 0xBF5680FF, 0x994566FF},
	{0xBF7E56FF, 0xBF5685FF, 0x99456AFF},
	{0xBF7956FF, 0xBF568BFF, 0x99456FFF},
	{0xBF7456FF, 0xBF5690FF, 0x994573FF},
	{0xBF6F56FF, 0xBF5695FF, 0x994577FF},
	{0xBF6956FF, 0xBF569AFF, 0x99457BFF},
	{0xBF6456FF, 0xBF56A0FF, 0x994580FF},
	{0xBF5F56FF, 0xBF56A5FF, 0x994584FF},
	{0xBF5A56FF, 0xBF56AAFF, 0x994588FF},
	{0xBF5658FF, 0xBF56AFFF, 0x99458CFF},
	{0xBF565DFF, 0xBF56B5FF, 0x994591FF},
	{0xBF5662FF, 0xBF56BAFF, 0x994595FF},
	{0xBF5668FF, 0xBF56BFFF, 0x994599FF},
	{0xBF566DFF, 0xBA56BFFF, 0x954599FF},
	{0xBF5672FF, 0xB556BFFF, 0x914599FF},
	{0xBF5677FF, 0xAF56BFFF, 0x8C4599FF},
	{0xBF567DFF, 0xAA56BFFF, 0x884599FF},
	{0xBF5682FF, 0xA556BFFF, 0x844599FF},
	{0xBF5687FF, 0xA056BFFF, 0x804599FF},
	{0xBF568CFF, 0x9A56BFFF, 0x7B4599FF},
	{0xBF5692FF, 0x9556BFFF, 0x774599FF},
	{0xBF5697FF, 0x9056BFFF, 0x734599FF},
	{0xBF569CFF, 0x8B56BFFF, 0x6F4599FF},
	{0xBF56A1FF, 0x8556BFFF, 0x6A4599FF},
	{0xBF56A7FF, 0x8056BFFF, 0x664599FF},
	{0xBF56ACFF, 0x7B56BFFF, 0x624599FF},
	{0xBF56B1FF, 0x7656BFFF, 0x5E4599FF},
	{0xBF56B6FF, 0x7056BFFF, 0x5A4599FF},
	{0xBF56BCFF, 0x6B56BFFF, 0x564599FF},
	{0xBD56BFFF, 0x6656BFFF, 0x524599FF},
	{0xB856BFFF, 0x6156BFFF, 0x4E4599FF},
	{0xB356BFFF, 0x5B56BFFF, 0x494599FF},
	{0xAE56BFFF, 0x5656BFFF, 0x454599FF},
	{0xA856BFFF, 0x565BBFFF, 0x454999FF},
	{0xA356BFFF, 0x5661BFFF, 0x454E99FF},
	{0x9E56BFFF, 0x5666BFFF, 0x455299FF},
	{0x9956BFFF, 0x566BBFFF, 0x455699FF},
	{0x9356BFFF, 0x5670BFFF, 0x455A99FF},
	{0x8E56BFFF, 0x5676BFFF, 0x455E99FF},
	{0x8956BFFF, 0x567BBFFF, 0x456299FF},
	{0x8456BFFF, 0x5680BFFF, 0x456699FF},
	{0x7E56BFFF, 0x5685BFFF, 0x456A99FF},
	{0x7956BFFF, 0x568BBFFF, 0x456F99FF},
	{0x7456BFFF, 0x5690BFFF, 0x457399FF},
	{0x6F56BFFF, 0x5695BFFF, 0x457799FF},
	{0x6956BFFF, 0x569ABFFF, 0x457B99FF},
	{0x6456BFFF, 0x56A0BFFF, 0x458099FF},
	{0x5F56BFFF, 0x56A5BFFF, 0x458499FF},
	{0x5A56BFFF, 0x56AABFFF, 0x458899FF},
	{0x5658BFFF, 0x56AFBFFF, 0x458C99FF},
	{0x565DBFFF, 0x56B5BFFF, 0x459199FF},
	{0x5662BFFF, 0x56BABFFF, 0x459599FF},
	{0x5668BFFF, 0x56BFBFFF, 0x459999FF},
	{0x566DBFFF, 0x56BFBAFF, 0x459995FF},
	{0x5672BFFF, 0x56BFB5FF, 0x459991FF},
	{0x5677BFFF, 0x56BFAFFF, 0x45998CFF},
	{0x567DBFFF, 0x56BFAAFF, 0x459988FF},
	{0x5682BFFF, 0x56BFA5FF, 0x459984FF},
	{0x5687BFFF, 0x56BFA0FF, 0x459980FF},
	{0x568CBFFF, 0x56BF9AFF, 0x45997BFF},
	{0x5692BFFF, 0x56BF95FF, 0x459977FF},
	{0x5697BFFF, 0x56BF90FF, 0x459973FF},
	{0x569CBFFF, 0x56BF8BFF, 0x45996FFF},
	{0x56A1BFFF, 0x56BF85FF, 0x45996AFF},
	{0x56A7BFFF, 0x56BF80FF, 0x459966FF},
	{0x56ACBFFF, 0x56BF7BFF, 0x459962FF},
	{0x56B1BFFF, 0x56BF76FF, 0x45995EFF},
	{0x56B6BFFF, 0x56BF70FF, 0x45995AFF},
	{0x56BCBFFF, 0x56BF6BFF, 0x459956FF},
	{0x56BFBDFF, 0x56BF66FF, 0x459952FF},
	{0x56BFB8FF, 0x56BF61FF, 0x45994EFF},
	{0x56BFB3FF, 0x56BF5BFF, 0x459949FF},
	{0x56BFAEFF, 0x56BF56FF, 0x459945FF},
	{0x56BFA8FF, 0x5BBF56FF, 0x499945FF},
	{0x56BFA3FF, 0x61BF56FF, 0x4E9945FF},
	{0x56BF9EFF, 0x66BF56FF, 0x529945FF},
	{0x56BF99FF, 0x6BBF56FF, 0x569945FF},
	{0x56BF93FF, 0x70BF56FF, 0x5A9945FF},
	{0x56BF8EFF, 0x76BF56FF, 0x5E9945FF},
	{0x56BF89FF, 0x7BBF56FF, 0x629945FF},
	{0x56BF84FF, 0x80BF56FF, 0x669945FF},
	{0x56BF7EFF, 0x85BF56FF, 0x6A9945FF},
	{0x56BF79FF, 0x8BBF56FF, 0x6F9945FF},
	{0x56BF74FF, 0x90BF56FF, 0x739945FF},
	{0x56BF6FFF, 0x95BF56FF, 0x779945FF},
	{0x56BF69FF, 0x9ABF56FF, 0x7B9945FF},
	{0x56BF64FF, 0xA0BF56FF, 0x809945FF},
	{0x56BF5FFF, 0xA5BF56FF, 0x849945FF},
	{0x56BF5AFF, 0xAABF56FF, 0x889945FF},
	{0x58BF56FF, 0xAFBF56FF, 0x8C9945FF},
	{0x5DBF56FF, 0xB5BF56FF, 0x919945FF},
	{0x62BF56FF, 0xBABF56FF, 0x959945FF},
	{0x68BF56FF, 0xBFBF56FF, 0x999945FF},
	{0x6DBF56FF, 0xBFBA56FF, 0x999545FF},
	{0x72BF56FF, 0xBFB556FF, 0x999145FF},
	{0x77BF56FF, 0xBFAF56FF, 0x998C45FF},
	{0x7DBF56FF, 0xBFAA56FF, 0x998845FF},
	{0x82BF56FF, 0xBFA556FF, 0x998445FF},
	{0x87BF56FF, 0xBFA056FF, 0x998045FF},
	{0x8CBF56FF, 0xBF9A56FF, 0x997B45FF},
	{0x92BF56FF, 0xBF9556FF, 0x997745FF},
	{0x97BF56FF, 0xBF9056FF, 0x997345FF},
	{0x9CBF56FF, 0xBF8B56FF, 0x996F45FF},
	{0xA1BF56FF, 0xBF8556FF, 0x996A45FF},
	{0xA7BF56FF, 0xBF8056FF, 0x996645FF},
	{0xACBF56FF, 0xBF7B56FF, 0x996245FF},
	{0xB1BF56FF, 0xBF7656FF, 0x995E45FF},
	{0xB6BF56FF, 0xBF7056FF, 0x995A45FF},
	{0xBCBF56FF, 0xBF6B56FF, 0x995645FF},
	{0xBFBD56FF, 0xBF6656FF, 0x995245FF},
	{0xBFB856FF, 0xBF6156FF, 0x994E45FF},
	{0xBFB356FF, 0xBF5B56FF, 0x994945FF},
	{0x1C1F21FF, 0x1C1F21FF, 0x555555FF}
};
new Text3D:PlayerDescriptionText[MAX_PLAYERS] = {Text3D:-1, ...};
enum _temp_
{
	pArendaCar,
	pcarid,
	bool:SPECTPLAYER,
	pLimit,
	pSellCar,
	ReReport,
	NumReports,
	ReportID,
	pEvent,
	CoronaLevel
};
new
    Float:PlayerHealthAC[MAX_PLAYERS],
    bool:IsPlayerLogged[MAX_PLAYERS],
	GetPlayerLastDamage[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...},
	GetPlayerLastDamage_tick[MAX_PLAYERS char],
	GetPlayerLastDamageGunID[MAX_PLAYERS char],
	IsPlayerInFCapture[MAX_PLAYERS char] = {255, ...};
new pTemp[MAX_PLAYERS][_temp_];
new GlobalTick;
new PlayerTick[MAX_PLAYERS];
new PlayerTimerID[MAX_PLAYERS] = {-1, ...},
	player_authTimeOpen[MAX_PLAYERS] = {-1, ...};
new TradeTime[MAX_PLAYERS][2];
new TradeID[MAX_PLAYERS];
new TradeMoney[MAX_PLAYERS];
new TradeBTC[MAX_PLAYERS];
new TradeEURO[MAX_PLAYERS];
new bool:TradeSend[MAX_PLAYERS char];
new TradeTimeCD[MAX_PLAYERS];
new bool:TradeOpen[MAX_PLAYERS char];
new TradeLock[MAX_PLAYERS char];
new pmID[MAX_PLAYERS] = {-1, ...};
new AksSlot[MAX_PLAYERS][8],
	AksSlotUID[MAX_PLAYERS][8],
	bool:player_InvAks_CustomPosition[MAX_PLAYERS][8],
	player_InvAks_bone[MAX_PLAYERS][8],
	Float:player_InvAks_position[MAX_PLAYERS][8][9];
//Аксы для тачек
new bool:UseModCar[MAX_PLAYERS];
new bool:UseMenuModCar[MAX_PLAYERS];
new bool:InvCarOpen[MAX_PLAYERS],
	bool:InvWeapCive[MAX_PLAYERS];

new TrashID[MAX_PLAYERS];
new HouseID[MAX_PLAYERS];
new bool:AcceptGoogle[MAX_PLAYERS];
new GoogleCodeTemp[MAX_PLAYERS][16];
new gPlayerGoogleTries[MAX_PLAYERS];
new bool:ShowIP[MAX_PLAYERS];
new bool:KillList[MAX_PLAYERS];
new Reports[MAX_PLAYERS] = {-1, ...};
new Text3D:AirDropText = Text3D:-1,
	AirDropObject[2] = {-1, ...},
	AirDropOpen = -1, AirDropTimer = 600,
	AirDropItem[6],
	AirDropItemAmount[6];
static const Float:AirDropPosition[][] = {
	{1496.3793,-2016.7831,30.5807},
	{1190.0408,-2373.9395,12.2238},
	{211.6751,-909.0949,20.5897},
	{535.6306,-554.2958,25.6278},
	{2776.0000,-2204.2925,10.3054},
	{-408.2933,-1136.7814,67.7352},
	{-466.5602,702.7469,17.5519},
	{-829.7288,1273.2087,27.4134},
	{-976.5526,-1160.2388,129.1840},
	{-350.0219,-1650.8893,26.3403},
	{-545.1200,-1541.2141,8.4166},
	{497.5278,-1852.7804,3.9624},
	{942.8726,-1884.4817,4.7636},
	{826.2236,-2065.3486,12.8672},
	{1867.6088,-1198.8892,22.1373},
	{2390.1272,-821.6874,119.3096},
	{2159.7021,-326.1639,63.7765},
	{2560.8752,-109.7669,51.9526}
};
new besttime[MAX_PLAYERS];
new	PlayerText:Donate_Player[MAX_PLAYERS][45] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new	bool:donateopen[MAX_PLAYERS char];
new	Donate_Select[MAX_PLAYERS], Donate_Type[MAX_PLAYERS];
new bool:MPTeleportPlayer[MAX_PLAYERS char];
new bool:InNZone[MAX_PLAYERS char];
new bool:AcceptFam[MAX_PLAYERS char];
new bool:InventStatus[MAX_PLAYERS char],
	bool:IsPlayerInvSecurity[MAX_PLAYERS],
	bool:IsPlayerOpenInvSecurity[MAX_PLAYERS],
	bool:InventWallet[MAX_PLAYERS],
	bool:MenuStatus[MAX_PLAYERS char],
	bool:LogoStatus[MAX_PLAYERS char],
	InventClick[MAX_PLAYERS char],
	InventPage[MAX_PLAYERS],
	MenuPage[MAX_PLAYERS],
	InvTimer[MAX_PLAYERS char],
	PlayerText:InventAksEnchant[MAX_PLAYERS][8] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Invent_Menu_PageEnchant[MAX_PLAYERS][30]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Invent[MAX_PLAYERS][52]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventAks[MAX_PLAYERS][8] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventAksColor[MAX_PLAYERS][8] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InvOwnableCar[MAX_PLAYERS][56]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InvOwnableCarText[MAX_PLAYERS][11]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventSlot[MAX_PLAYERS][36] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventSlotAmount[MAX_PLAYERS][36] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventEnchant[MAX_PLAYERS][36] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventMenu[MAX_PLAYERS][14]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:InventButton[MAX_PLAYERS][2] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	InventMenuButton[MAX_PLAYERS][6] = {{-1, ...}, ...},
	PlayerText:Invent_Menu[MAX_PLAYERS][7]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Invent_Menu_Page[MAX_PLAYERS][30]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Invent_Menu_PageAmount[MAX_PLAYERS][30]  = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	PlayerText:Invent_Trade[MAX_PLAYERS][21] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...},
	RollUpdatePage[MAX_PLAYERS],
	RoulleteItem[MAX_PLAYERS][4][16], bool:RouletteOpen[MAX_PLAYERS char], RoulleteItemAmount[MAX_PLAYERS][4][16], bool:RoulleteItemMoney[MAX_PLAYERS][4][16],
	RollTimeUpdate[MAX_PLAYERS],
	bool:Proviziya[MAX_PLAYERS char];
static const slet_car_models[] = {612,613,614,662,663,665,666,667,668,909,965,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205};
new UseDrugsTime[MAX_PLAYERS];
new Text3D:v_Vehicle_LabelID[MAX_VEHICLES];
new CanUse[MAX_PLAYERS char];
new dBiz[MAX_PLAYERS];
new bool:ShowMap[MAX_PLAYERS];
new bool:NeedDell[MAX_PLAYERS char];
new TimetoReturn[MAX_PLAYERS];
new Vnedren[MAX_PLAYERS];
new StatusMoneta[6][MAX_PLAYERS];
new ZapretOrel[MAX_PLAYERS];
new OrelName[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new OrelMoney[MAX_PLAYERS];
new Getemer[MAX_PLAYERS];
new deal[MAX_PLAYERS];
new bool:gpss[MAX_PLAYERS char],
	Float:gps_position[MAX_PLAYERS][3];
new cuffer[MAX_PLAYERS];
new EngineStalled[MAX_PLAYERS];
new Carskill[MAX_PLAYERS];
new notneedm[MAX_PLAYERS];
new bool:animan[MAX_PLAYERS char];
new	bool:selfi[MAX_PLAYERS char];
new	Float:selfi1[MAX_PLAYERS][3];
new	Float:selfi2[MAX_PLAYERS];
new caoffer[MAX_PLAYERS];
new cartrade[MAX_PLAYERS];
new cardop[MAX_PLAYERS];
new bool:ReferalsInviteTD[MAX_PLAYERS],
	bool:WeaponTDStatus[MAX_PLAYERS],
	WeaponGetItemCount[MAX_PLAYERS char];
new jlock[MAX_PLAYERS];
new InJobs[MAX_PLAYERS];
//new kostiKos[MAX_PLAYERS];
new engines[MAX_PLAYERS];
//new bool:Predlog[MAX_PLAYERS];
new Healttime[MAX_PLAYERS];
new TimeMessage[MAX_PLAYERS];
new vipob[MAX_PLAYERS];
new sellcarto[MAX_PLAYERS];
new idaofcar[MAX_PLAYERS];
new PlayerAFK[MAX_PLAYERS];
new PlayerAFKTime[MAX_PLAYERS];
new bool:bumreader[MAX_PLAYERS char];
new	Text3D:PlayerFamily[MAX_PLAYERS] = {Text3D:-1, ...};
new AntiFloodTypeFamily[MAX_PLAYERS];
//boom
new NumMusic[MAX_PLAYERS];
new BoomUse[MAX_PLAYERS];
new Music[MAX_PLAYERS];
new PlayerText:boomtext_p[MAX_PLAYERS][9] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new PlayerText:pboom[MAX_PLAYERS][16] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new bool:bumboxopen[MAX_PLAYERS char];
new bumboxobject[MAX_PLAYERS];
new Float:BumBoxPos[MAX_PLAYERS][3];
new Text3D: b_box3D[MAX_PLAYERS];
new area_boombox[MAX_PLAYERS];
enum BUMBOX_INFO
{
   bName[25],
   bMusic[100]
};
static const BumInfo[][BUMBOX_INFO] =
{
    {"",""},
	{"1._Radio Record FM","http://air.radiorecord.ru:8101/rr_320"},
	{"2._Radio Europa Plus FM","http://ep128server.streamr.ru:8030/ep128"},
	{"3._Radio Premium FM","http://listen.rpfm.ru:9000/premium128"},
	{"4._Radio Zaycev FM","https://zaycevfm.cdnvideo.ru/ZaycevFM_pop_256.mp3"},
	{"5._Radio Dorognoe","http://dorognoe.hostingradio.ru:8000/dorognoe"},
	{"6._Radio Chanson FM","http://chanson.hostingradio.ru:8041/chanson-uncensored128.mp3"},
	{"7._Radio Zabawa FM","http://listen.myradio24.com:9000/8020"},
	{"8._Radio Nawe FM","http://nashe.streamr.ru/nashe-128.mp3"},
	{"9._Radio Pioner FM","http://pioner.hostingradio.ru:8008/ppr128"},
	{"10._Radio Jazz FM","http://jazz.streamr.ru/jazz-128.mp3"},
	{"11._6ix9ine-billy","http://"MUSICSITE"/bombox/6ix9ine-billy.mp3"},
	{"12._6ix9ine-kooda","http://"MUSICSITE"/bombox/6ix9ine-kooda.mp3"},
	{"13._Monetochka-kazhdyy_","http://"MUSICSITE"/bombox/monetochka-kazhdyy_raz.mp3"},
	{"14._Skriptonit-tsepi","http://"MUSICSITE"/bombox/skriptonit-tsepi.mp3"},
	{"15._t-fest_skriptonit-l","http://"MUSICSITE"/bombox/t-fest_skriptonit-lambada.mp3"},
	{"16._104-koroleva","http://"MUSICSITE"/bombox/104-koroleva.mp3"},
	{"17._Afrojack_ravitez-20","http://"MUSICSITE"/bombox/Afrojack_ravitez-2012.mp3"},
	{"18._Alejandro_fernandez","http://"MUSICSITE"/bombox/Alejandro_fernandez-s?_que_te_duele.mp3"},
	{"19._Aleksandr_dyumin-ya","http://"MUSICSITE"/bombox/Aleksandr_dyumin-ya_s_lyubovjyu_igrayu.mp3"},
	{"20._Aleksandr_yaremenko","http://"MUSICSITE"/bombox/Aleksandr_yaremenko-angely_speshili.mp3"},
	{"21._Aleksandr_zvic-vesn","http://"MUSICSITE"/bombox/Aleksandr_zvic-vesna.mp3"},
	{"22._Aleksey_bryancev-na","http://"MUSICSITE"/bombox/Aleksey_bryancev-na_rasstoyanii_lyubvi.mp3"},
	{"23._Alena_dalj-lapochka","http://"MUSICSITE"/bombox/Alena_dalj-lapochka.mp3"},
	{"24._Allj(eldzhey)-bounc","http://"MUSICSITE"/bombox/Allj(eldzhey)-bounce.mp3"},
	{"25._Anarhist_mastino-zh","http://"MUSICSITE"/bombox/Anarhist_mastino-zhenshina_skazka.mp3"},
	{"26._Andrey_klimnyuk-apr","http://"MUSICSITE"/bombox/Andrey_klimnyuk-aprelj.mp3"},
	{"27._Antirespekt-tishiny","http://"MUSICSITE"/bombox/Antirespekt-tishiny_hochu.mp3"},
	{"28._Atl-astronavt","http://"MUSICSITE"/bombox/Atl-astronavt.mp3"},
	{"29._Atl-marabu","http://"MUSICSITE"/bombox/Atl-marabu.mp3"},
	{"30._Atl-pchelki","http://"MUSICSITE"/bombox/Atl-pchelki.mp3"},
	{"31._Atl-svyashennyy_rey","http://"MUSICSITE"/bombox/Atl-svyashennyy_reyv.mp3"},
	{"32._Atl-tancuyte","http://"MUSICSITE"/bombox/Atl-tancuyte.mp3"},
	{"33._Axwell-more_than_yo","http://"MUSICSITE"/bombox/Axwell-more_than_you_know.mp3"},
	{"34._Bag_raiders_amice-s","http://"MUSICSITE"/bombox/Bag_raiders_amice-shooting_stars.mp3"},
	{"35._Bassjackers&bali_ba","http://"MUSICSITE"/bombox/Bassjackers&bali_bandits-are_you_randy.mp3"},
	{"36._Basta-sansara","http://"MUSICSITE"/bombox/Basta-sansara.mp3"},
	{"37._Bingo_players_and_g","http://"MUSICSITE"/bombox/Bingo_players_and_goshfather-everybody.mp3"},
	{"38._Bounce_inc.-nobody_","http://"MUSICSITE"/bombox/Bounce_inc.-nobody_likes.mp3"},
	{"39._Breathe_carolina&de","http://"MUSICSITE"/bombox/Breathe_carolina&delayers-long_live_house_music.mp3"},
	{"40._Breathe_carolina&dr","http://"MUSICSITE"/bombox/Breathe_carolina&dropgun-rhythm_is_a_dancer.mp3"},
	{"41._Breathe_carolina&su","http://"MUSICSITE"/bombox/Breathe_carolina&sunstars-dysylm.mp3"},
	{"42._Brohug-on_fire","http://"MUSICSITE"/bombox/Brohug-on_fire.mp3"},
	{"43._Burito-po_volnam","http://"MUSICSITE"/bombox/Burito-po_volnam.mp3"},
	{"44._Burito-shtrihi","http://"MUSICSITE"/bombox/Burito-shtrihi.mp3"},
	{"45._Coldblake&roogu-mov","http://"MUSICSITE"/bombox/Coldblake&roogu-move_it.mp3"},
	{"46._Dan_balan-nashe_let","http://"MUSICSITE"/bombox/Dan_balan-nashe_leto.mp3"},
	{"47._Dangerous_vibes-sta","http://"MUSICSITE"/bombox/Dangerous_vibes-stadiumx.mp3"},
	{"48._Daniil_danilevskiy-","http://"MUSICSITE"/bombox/Daniil_danilevskiy-odna.mp3"},
	{"49._Desiigner-panda","http://"MUSICSITE"/bombox/Desiigner-panda.mp3"},
	{"50._Dima_bilan-devochka","http://"MUSICSITE"/bombox/Dima_bilan-devochka_ne_plachj.mp3"},
	{"51._Dima_bilan-egoist","http://"MUSICSITE"/bombox/Dima_bilan-egoist.mp3"},
	{"52._Dj_slon&katya_ft._r","http://"MUSICSITE"/bombox/Dj_slon&katya_ft._roman_vasilenko-life_is_good.mp3"},
	{"53._Dnf_i.got.u-rhythm_","http://"MUSICSITE"/bombox/Dnf_i.got.u-rhythm_is_a_dancer.mp3"},
	{"54._Don_omar-te_quiero_","http://"MUSICSITE"/bombox/Don_omar-te_quiero_pa?mi.mp3"},
	{"55._Doni-son","http://"MUSICSITE"/bombox/Doni-son.mp3"},
	{"56._Ekaterina_suvorova-","http://"MUSICSITE"/bombox/Ekaterina_suvorova-vetreno.mp3"},
	{"57._Eldzhey&feduk-rozov","http://"MUSICSITE"/bombox/Eldzhey&feduk-rozovoe_vino.mp3"},
	{"58._Eldzhey-ecstasy","http://"MUSICSITE"/bombox/Eldzhey-ecstasy.mp3"},
	{"59._Eldzhey-heyguys","http://"MUSICSITE"/bombox/Eldzhey-heyguys.mp3"},
	{"60._Eldzhey-minimal","http://"MUSICSITE"/bombox/Eldzhey-minimal.mp3"},
	{"61._Eldzhey-rvanye_dzhi","http://"MUSICSITE"/bombox/Eldzhey-rvanye_dzhinsy.mp3"},
	{"62._Eldzhey-uljtramarin","http://"MUSICSITE"/bombox/Eldzhey-uljtramarinovye_tancy.mp3"},
	{"63._Eldzhey-zef","http://"MUSICSITE"/bombox/Eldzhey-zef.mp3"},
	{"64._Elka-mir_otkryvaets","http://"MUSICSITE"/bombox/Elka-mir_otkryvaetsya.mp3"},
	{"65._Elka-vpusti_muzykuм","http://"MUSICSITE"/bombox/Elka-vpusti_muzyku.mp3"},
	{"66._Eminem-untouchable","http://"MUSICSITE"/bombox/Eminem-untouchable.mp3"},
	{"67._Epiik-booty_rock","http://"MUSICSITE"/bombox/Epiik-booty_rock.mp3"},
	{"68._Estradarada-vite_na","http://"MUSICSITE"/bombox/Estradarada-vite_nado_vyyti.mp3"},
	{"69._Eva_poljna-siljnee_","http://"MUSICSITE"/bombox/Eva_poljna-siljnee_menya.mp3"},
	{"70._Exodus&saladin-keep","http://"MUSICSITE"/bombox/Exodus&saladin-keep_it_rockin.mp3"},
	{"71._Face-ya_ronyayu_zap","http://"MUSICSITE"/bombox/Face-ya_ronyayu_zapad.mp3"},
	{"72._Faderx-no_rush","http://"MUSICSITE"/bombox/Faderx-no_rush.mp3"},
	{"73._Faydee-sun_don_t_sh","http://"MUSICSITE"/bombox/Faydee-sun_don_t_shine.mp3"},
	{"74._Feduk-luna-park","http://"MUSICSITE"/bombox/Feduk-moryak.mp3"},
	{"75._Feduk-moryak","http://"MUSICSITE"/bombox/Feduk-luna-park.mp3"},
	{"76._Feenixpawl&daniel_e","http://"MUSICSITE"/bombox/Feenixpawl&daniel_etienne-dancin_.mp3"},
	{"77._Fresh_til__death-si","http://"MUSICSITE"/bombox/Fresh_til__death-sippin_.mp3"},
	{"78._Garmiani-fogo","http://"MUSICSITE"/bombox/Garmiani-fogo.mp3"},
	{"79._Gazirovka-black","http://"MUSICSITE"/bombox/Gazirovka-black.mp3"},
	{"80._Gianluca_vacchi-tru","http://"MUSICSITE"/bombox/Gianluca_vacchi-trump_it.mp3"},
	{"81._Gradusy&kravc-vyhod","http://"MUSICSITE"/bombox/Gradusy&kravc-vyhodi_za_menya.mp3"},
	{"82._Grandy-gulyaka","http://"MUSICSITE"/bombox/Grandy-gulyaka.mp3"},
	{"83._Gruppa_zapretka-ves","http://"MUSICSITE"/bombox/Gruppa_zapretka-vesna.mp3"},
	{"84._Gta&damien_n-drix-d","http://"MUSICSITE"/bombox/Gta&damien_n-drix-dundun.mp3"},
	{"85._Hanna_-puli","http://"MUSICSITE"/bombox/Hanna_-puli.mp3"},
	{"86._Haus_of_panda-rio_(","http://"MUSICSITE"/bombox/Haus_of_panda-rio_(original_mix).mp3"},
	{"87._Hot_shit!-more_ener","http://"MUSICSITE"/bombox/Hot_shit!-more_energy_more_power.mp3"},
	{"88._Humng-far_away_(ori","http://"MUSICSITE"/bombox/Humng-far_away_(original_mix).mp3"},
	{"89._Inna-don_t_mind","http://"MUSICSITE"/bombox/Inna-don_t_mind.mp3"},
	{"90._J._balvin&willy_wil","http://"MUSICSITE"/bombox/J._balvin&willy_william-mi_gente.mp3"},
	{"91._Jax_jones-breathe","http://"MUSICSITE"/bombox/Jax_jones-breathe.mp3"},
	{"92._Jax_jones-instructi","http://"MUSICSITE"/bombox/Jax_jones-instruction.mp3"},
	{"93._Joel_fletcher&reece","http://"MUSICSITE"/bombox/Joel_fletcher&reece_low-dark_beat.mp3"},
	{"94._J-trick_bonka-killa","http://"MUSICSITE"/bombox/J-trick_bonka-killa.mp3"},
	{"95._Justluke-nasty_(two","http://"MUSICSITE"/bombox/Justluke-nasty_(twoloud_edit).mp3"},
	{"96._Karandash-tissot","http://"MUSICSITE"/bombox/Karandash-tissot.mp3"},
	{"97._Ka-re-polovina","http://"MUSICSITE"/bombox/Ka-re-polovina.mp3"},
	{"98._Karmanov_fedya-sire","http://"MUSICSITE"/bombox/Karmanov_fedya-sirenj.mp3"},
	{"99._Krovostok-biografiy","http://"MUSICSITE"/bombox/Krovostok-biografiya.mp3"},
	{"100._Krovostok-bytj_plo","http://"MUSICSITE"/bombox/Krovostok-bytj_plohim.mp3"},
	{"101._Krovostok-cheburas","http://"MUSICSITE"/bombox/Krovostok-cheburashka.mp3"},
	{"102._Krovostok-cherepov","http://"MUSICSITE"/bombox/Krovostok-cherepovec.mp3"},
	{"103._Krovostok-kurtec","http://"MUSICSITE"/bombox/Krovostok-kurtec.mp3"},
	{"104._L_one-samaya_prost","http://"MUSICSITE"/bombox/L_one-samaya_prostaya_pesnya.mp3"},
	{"105._Lektrique-laidback","http://"MUSICSITE"/bombox/Lektrique-laidback.mp3"},
	{"106._Leonid_teleshev-lu","http://"MUSICSITE"/bombox/Leonid_teleshev-luchik.mp3"},
	{"107._Little_big-lolly_b","http://"MUSICSITE"/bombox/Little_big-lolly_bomb.mp3"},
	{"108._Lp-suspicion_(goin","http://"MUSICSITE"/bombox/Lp-suspicion_(going_deeper_remix).mp3"},
	{"109._Lsp-monetka","http://"MUSICSITE"/bombox/Lsp-monetka.mp3"},
	{"110._Lsp-telo_(tragic_c","http://"MUSICSITE"/bombox/Lsp-telo_(tragic_city).mp3"},
	{"111._Luciana&nytrix-tro","http://"MUSICSITE"/bombox/Luciana&nytrix-trouble.mp3"},
	{"112._Lucky_charmes-this","http://"MUSICSITE"/bombox/Lucky_charmes-this_one_here_(club_mix).mp3"},
	{"113._Maks_barskih-sdela","http://"MUSICSITE"/bombox/Maks_barskih-sdelay_gromche.mp3"},
	{"114._Maks_korzh-malinov","http://"MUSICSITE"/bombox/Maks_korzh-malinovyy_zakat.mp3"},
	{"115._Maks_korzh-optimis","http://"MUSICSITE"/bombox/Maks_korzh-optimist.mp3"},
	{"116._Maksim_fadeev_i_gr","http://"MUSICSITE"/bombox/Maksim_fadeev_i_grigoriy_leps-orly_ili_vorona.mp3"},
	{"117._Maljbek-gipnozy","http://"MUSICSITE"/bombox/Maljbek-gipnozy.mp3"},
	{"118._Mari_ferrari-maria","http://"MUSICSITE"/bombox/Mari_ferrari-maria.mp3"},
	{"119._Masha_kipish_i_maf","http://"MUSICSITE"/bombox/Masha_kipish_i_mafik-blatata.mp3"},
	{"120._Matrang-meduza","http://"MUSICSITE"/bombox/Matrang-meduza.mp3"},
	{"121._Mc_doni-ya_ukradu","http://"MUSICSITE"/bombox/Mc_doni-ya_ukradu.mp3"},
	{"122._Medyanik-ya_v_vese","http://"MUSICSITE"/bombox/Medyanik-ya_v_vesennem_lesu.mp3"},
	{"123._Mihail_krug-sveta","http://"MUSICSITE"/bombox/Mihail_krug-sveta.mp3"},
	{"124._Mihail_shufutinski","http://"MUSICSITE"/bombox/Mihail_shufutinskiy-a_kak_zhe_bytj_s_lyubovjyu.mp3"},
	{"125._Mike_candys-get_th","http://"MUSICSITE"/bombox/Mike_candys-get_the_fuck_out.mp3"},
	{"126._Mike_hawkins-croco","http://"MUSICSITE"/bombox/Mike_hawkins-crocodile.mp3"},
	{"127._Mitch_vice-get_dow","http://"MUSICSITE"/bombox/Mitch_vice-get_down.mp3"},
	{"128._Miyagi&endshpilj-","http://"MUSICSITE"/bombox/Miyagi&endshpilj-.mp3"},
	{"129._Miyagi&endshpilj-d","http://"MUSICSITE"/bombox/Miyagi&endshpilj-dlbm.mp3"},
	{"130._Miyagi&endshpilj-i","http://"MUSICSITE"/bombox/Miyagi&endshpilj-i_got_love_(ft_rem_digga).mp3"},
	{"131._Miyagi&endshpilj-l","http://"MUSICSITE"/bombox/Miyagi&endshpilj-lyubi_menya.mp3"},
	{"132._Miyagi&endshpilj-p","http://"MUSICSITE"/bombox/Miyagi&endshpilj-polovina_moya.mp3"},
	{"133._Miyagi&endshpilj-r","http://"MUSICSITE"/bombox/Miyagi&endshpilj-rapapam.mp3"},
	{"134._Mord_fustang-sorbe","http://"MUSICSITE"/bombox/Mord_fustang-sorbet.mp3"},
	{"135._Mot-kogda_ischezne","http://"MUSICSITE"/bombox/Mot-kogda_ischeznet_slovo.mp3"},
	{"136._Mot-solo","http://"MUSICSITE"/bombox/Mot-solo.mp3"},
	{"137._Moya_mishelj-santa","http://"MUSICSITE"/bombox/Moya_mishelj-santa.mp3"},
	{"138._Murekian-spin&reco","http://"MUSICSITE"/bombox/Murekian-spin&record.mp3"},
	{"139._Neizvestnostj-ulyb","http://"MUSICSITE"/bombox/Neizvestnostj-ulybnisj.mp3"},
	{"140._Niiie-my_name_is_b","http://"MUSICSITE"/bombox/Niiie-my_name_is_bop.mp3"},
	{"141._Nk_(nastya_kamensk","http://"MUSICSITE"/bombox/Nk_(nastya_kamenskih)-#etomoyanochj.mp3"},
	{"142._Oljga_buzova-hit_p","http://"MUSICSITE"/bombox/Oljga_buzova-hit_parad.mp3"},
	{"143._Pasosh_x_lsp-veche","http://"MUSICSITE"/bombox/Pasosh_x_lsp-vecherinka.mp3"},
	{"144._Pavel_filatov-vesn","http://"MUSICSITE"/bombox/Pavel_filatov-vesna!.mp3"},
	{"145._Pharaoh-glushitelj","http://"MUSICSITE"/bombox/Pharaoh-glushitelj.mp3"},
	{"146._Polina_gagarina-ob","http://"MUSICSITE"/bombox/Polina_gagarina-obezoruzhena.mp3"},
	{"147._Quintino_mightyfoo","http://"MUSICSITE"/bombox/Quintino_mightyfools-g_thing.mp3"},
	{"148._Quintino-moonrise","http://"MUSICSITE"/bombox/Quintino-moonrise.mp3"},
	{"149._Rada_ray-ty_moya","http://"MUSICSITE"/bombox/Rada_ray-ty_moya.mp3"},
	{"150._Ruki_vverh-plaches","http://"MUSICSITE"/bombox/Ruki_vverh-placheshj_v_temnote.mp3"},
	{"151._Ryan_browne-does_t","http://"MUSICSITE"/bombox/Ryan_browne-does_this_look_infected.mp3"},
	{"152._S2_(kor)-shake_it","http://"MUSICSITE"/bombox/S2_(kor)-shake_it.mp3"},
	{"153._Sergey_klushin_i_e","http://"MUSICSITE"/bombox/Sergey_klushin_i_ekaterina_ebelj-prosti.mp3"},
	{"154._Sever.17-pesnya","http://"MUSICSITE"/bombox/Sever.17-pesnya.mp3"},
	{"155._Shapov_vs_sam_bagi","http://"MUSICSITE"/bombox/Shapov_vs_sam_bagira-alternate.mp3"},
	{"156._Showtek&moby-natur","http://"MUSICSITE"/bombox/Showtek&moby-natural_blues.mp3"},
	{"157._Skrudzhi-rukalico","http://"MUSICSITE"/bombox/Skrudzhi-rukalico.mp3"},
	{"158._Slamtype-hit_em_li","http://"MUSICSITE"/bombox/Slamtype-hit_em_like.mp3"},
	{"159._Slvr-kinda","http://"MUSICSITE"/bombox/Slvr-kinda.mp3"},
	{"160._Svetlana_ternova-y","http://"MUSICSITE"/bombox/Svetlana_ternova-ya_tak_tebya_lyublyu.mp3"},
	{"161._Swanky_tunes-right","http://"MUSICSITE"/bombox/Swanky_tunes-right_about_now.mp3"},
	{"162._Tanya_dyachenko_-a","http://"MUSICSITE"/bombox/Tanya_dyachenko_-a_navkolo_vesna.mp3"},
	{"163._T-fest&skriptonit-","http://"MUSICSITE"/bombox/T-fest&skriptonit-lambada.mp3"},
	{"164._T-fest-uleti","http://"MUSICSITE"/bombox/T-fest-uleti.mp3"},
	{"165._Timur_temertey-ya_","http://"MUSICSITE"/bombox/Timur_temertey-ya_lyublyu_tebya_za_eto.mp3"},
	{"166._Timur_temirov-pros","http://"MUSICSITE"/bombox/Timur_temirov-prosto_lyubovj.mp3"},
	{"167._Tokyo_machine-cook","http://"MUSICSITE"/bombox/Tokyo_machine-cookies.mp3"},
	{"168._Tv_noise-milkshake","http://"MUSICSITE"/bombox/Tv_noise-milkshake.mp3"},
	{"169._Twisterz-back_it_i","http://"MUSICSITE"/bombox/Twisterz-back_it_in.mp3"},
	{"170._Twisterz-selecta","http://"MUSICSITE"/bombox/Twisterz-selecta.mp3"},
	{"171._Uljyana_sineckaya_","http://"MUSICSITE"/bombox/Uljyana_sineckaya_-ula_ula-la.mp3"},
	{"172._Vanotek-tell_me_wh","http://"MUSICSITE"/bombox/Vanotek-tell_me_who.mp3"},
	{"173._Vitaliy_aksenov-pr","http://"MUSICSITE"/bombox/Vitaliy_aksenov-proshay_pechalj.mp3"},
	{"174._Vlad_shatura-ty_et","http://"MUSICSITE"/bombox/Vlad_shatura-ty_eto_vybrala_sama.mp3"},
	{"175._Vladimir_bazhinovs","http://"MUSICSITE"/bombox/Vladimir_bazhinovskiy-po_gorodu_brozhu.mp3"},
	{"176._Vladimir_zhdamirov","http://"MUSICSITE"/bombox/Vladimir_zhdamirov-skvozj_son.mp3"},
	{"177._Vremya_i_steklo-tr","http://"MUSICSITE"/bombox/Vremya_i_steklo-trollj.mp3"},
	{"178._Westend_steve_dark","http://"MUSICSITE"/bombox/Westend_steve_darko-chugger.mp3"},
	{"179._Zheka-toljko_tak","http://"MUSICSITE"/bombox/Zheka-toljko_tak.mp3"},
	{"180._2Mashi-Bosaya","http://"MUSICSITE"/bombox/#2Mashi-Bosaya.mp3"},
	{"181._Big_Baby_Tape-Gimm","http://"MUSICSITE"/bombox/Big_Baby_Tape-Gimme_The_Loot.mp3"},
	{"182._Big_Baby_Tape-Hoka","http://"MUSICSITE"/bombox/Big_Baby_Tape-Hokage.mp3"},
	{"183._CYGO-Panda_E","http://"MUSICSITE"/bombox/CYGO-Panda_E.mp3"},
	{"184._DELORENZY-ZAPRETIT","http://"MUSICSITE"/bombox/DELORENZY-ZAPRETITE_ANIME.mp3"},
	{"185._Egor_Creed-Krutoi","http://"MUSICSITE"/bombox/Egor_Creed-Krutoi.mp3"},
	{"186._Erica_Lundmoen-Yad","http://"MUSICSITE"/bombox/Erica_Lundmoen-Yad.mp3"},
	{"187._FACE-MOI_KALASHNIK","http://"MUSICSITE"/bombox/FACE-MOI_KALASHNIKOV.mp3"},
	{"188._Gaullin-Moonlight","http://"MUSICSITE"/bombox/Gaullin-Moonlight.mp3"},
	{"189._GONE.Fludd-BANANOV","http://"MUSICSITE"/bombox/GONE.Fludd-BANANOVIY_SOK.mp3"},
	{"190._GONE.Fludd-CUBIK_L","http://"MUSICSITE"/bombox/GONE.Fludd-CUBIK_LDA.mp3"},
	{"191._Gone.Fludd-Dripset","http://"MUSICSITE"/bombox/Gone.Fludd-Dripset.mp3"},
	{"192._GONE.Fludd-MAMBLE","http://"MUSICSITE"/bombox/GONE.Fludd-MAMBLE.mp3"},
	{"193._GONE.Fludd-SAHARNI","http://"MUSICSITE"/bombox/GONE.Fludd-SAHARNIY_CHELOVEK.mp3"},
	{"194._IVAN_VALEEV-Novell","http://"MUSICSITE"/bombox/IVAN_VALEEV-Novella.mp3"},
	{"195._Lil_Pump-I_Love_It","http://"MUSICSITE"/bombox/Lil_Pump-I_Love_It.mp3"},
	{"196._Little_Big-SLEMATS","http://"MUSICSITE"/bombox/Little_Big-SLEMATSYA_PACANI.mp3"},
	{"197._LIZER-KORABLI","http://"MUSICSITE"/bombox/LIZER-KORABLI.mp3"},
	{"198._Morgenshtern-Cops_","http://"MUSICSITE"/bombox/Morgenshtern-Cops_na_hvoste.mp3"},
	{"199._Morgenshtern-Uff_D","http://"MUSICSITE"/bombox/Morgenshtern-Uff_Dengi.mp3"},
	{"200._MORGENSHTERN-Vot_t","http://"MUSICSITE"/bombox/MORGENSHTERN-Vot_tak.mp3"},
	{"201._MORGENSHTERN-Zelen","http://"MUSICSITE"/bombox/MORGENSHTERN-Zelenoglasie_defki.mp3"},
	{"202._Nurminskiy-Ment_Na","http://"MUSICSITE"/bombox/Nurminskiy-Ment_Na_Menya_Gazuet.mp3"},
	{"203._PHARAOH-Na_Lune","http://"MUSICSITE"/bombox/PHARAOH-Na_Lune.mp3"},
	{"204._Rauf&Faik-Detstvo","http://"MUSICSITE"/bombox/Rauf&Faik-Detstvo.mp3"},
	{"205._Rauf&Faik-I_Love_Y","http://"MUSICSITE"/bombox/Rauf&Faik-I_Love_You.mp3"},
	{"206._Rauf&Faik-Vechera","http://"MUSICSITE"/bombox/Rauf&Faik-Vechera.mp3"},
	{"207._Skriptonit_T-Fes-M","http://"MUSICSITE"/bombox/Skriptonit_T-Fes-Multibrendoviy.mp3"},
	{"208._Time_Belorusskih-N","http://"MUSICSITE"/bombox/Time_Belorusskih-Nezabudka.mp3"},
	{"209._Time_Belorusskih-V","http://"MUSICSITE"/bombox/Time_Belorusskih-Vitaminka.mp3"},
	{"210._XXL_GAMESby-trizka","http://"MUSICSITE"/bombox/Time_Belorusskih-Ya_bolwe_ne_napiwu.mp3"}
};
enum gtInfo
{
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}
new GotoInfo[MAX_PLAYERS][gtInfo];
new RadarEntered[MAX_PLAYERS];
new Fullness[MAX_PLAYERS char];
new pSportZal[MAX_PLAYERS];
new SellGzone[MAX_PLAYERS];
new SellPGzone[MAX_PLAYERS];
new AddMessages[MAX_PLAYERS][101];
new AddTimeMessages[MAX_PLAYERS];
new AddId[MAX_PLAYERS];
//new pAntiCheatSettingsPage[MAX_PLAYERS char];
//new pAntiCheatSettingsMenuListData[MAX_PLAYERS][AC_MAX_CODES_ON_PAGE];
//new pAntiCheatSettingsEditCodeId[MAX_PLAYERS];
new PlayerText:speed_prodvin[MAX_PLAYERS][42] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new PlayerText:speeddraw[MAX_PLAYERS][7] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new TempBGObject[MAX_PLAYERS] = {-1, ...};
new ArrestID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new RegPass[MAX_PLAYERS][20];
new RegSex[MAX_PLAYERS];
new RegRace[MAX_PLAYERS];
new RegReferal[MAX_PLAYERS][24];
new bool:TeamDuty[MAX_PLAYERS char];
new TimeOfCuff[MAX_PLAYERS];
new PlayerOfCuff[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new PlayerText:PlayerCarHPDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:MilageDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:ActionText[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:ActionBand[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:TaxiDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:InfoText[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:PlayerFuelBar[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:FuelCostDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:FuelCountDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:KindFuelDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...},
	bool:IsPlayerFillMenu[MAX_PLAYERS];
new PlayerText:HInfoDraw[MAX_PLAYERS][6] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
new Ring[MAX_PLAYERS];
new FirstReferal[MAX_PLAYERS];
new FirstBL[MAX_PLAYERS];
new TazerPlayer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new BuyGunAmmo[MAX_PLAYERS] = {-1, ...};
new BuyGuns[MAX_PLAYERS] = {-1, ...};
new ArendKey[MAX_PLAYERS] = INVALID_VEHICLE_ID;
enum cellarinf
{
	Float:cePosition[3],
	bool:ceStatus
};
enum cellarinfo
{
	ciName[10],
	ciCost,
	Float:ciPosPlayer[4],
	Float:ciCamPos[6],
	Float:ciCamPosLookAt[6],
	ciItem[5],
	ciAmount[5]
};
new bool:EnterCasino[MAX_PLAYERS char],
	casino_rouletta_status = -1,
	Float:casino_rouletta_velocity,
	Float:casino_rouletta_offset,
	casino_rouletta_id = -1,
	//player
	CasinoPlayerID[MAX_PLAYERS] = {-1, ...},
	CasinoPlayerRate[MAX_PLAYERS] = {-1, ...},
	bool:IsPlayerCasinoPlay[MAX_PLAYERS char],
	bool:IsPlayerCasinoPlayBTC[MAX_PLAYERS char],
	bool:IsCellarTextDraw[MAX_PLAYERS char],
	CellarPickupInfo[][cellarinf] = {
		{{1090.9180, 945.1583, 1600.9935}, false},
		{{2637.9900, 1167.2959, 1038.1185}, false},
		{{1853.5981, 2041.3138, 1016.9329}, false},
		{{2562.8533, 1048.1693, 1036.4784}, false},
		{{1090.9180, 945.1583, 1600.9935}, false}
	},
	CellarInfoVar[][cellarinfo] = {
		{"basest", 500000,	{1079.0709, 937.4053, 1604.8663, 13.3650},\
							{1084.9653320313, 939.03460693359, 1602.9073486328,\
							1085.1885986328, 951.25610351563, 1602.646484375},\
							{1086.5350341797, 943.59820556641, 1601.5997314453,\
							 1089.1707763672, 948.38104248047, 1601.7105712891},
						 	{360, 361, 362, 363}, {7500, 1000, 100, 10}},

		{"lexbase", 1500000, {2628.3157, 1183.2794, 1041.5614, 180.0},\
							{2618.658203125, 1165.2689208984, 1039.8942871094,\
							2637.5119628906, 1165.3420410156, 1039.5419921875},\
							{2623.4645996094, 1166.5141601563, 1039.3045654297 ,\
							2633.4382324219, 1168.1748046875, 1038.9251708984},\
						 	{360, 361, 362, 363}, {7500, 1000, 100, 10}},

		{"basejst", 1500000, {1850.3575,2049.3723,1020.2127,180.0},\
							{1846.4591064453, 2040.1215820313, 1018.2257080078,\
							1846.8198242188, 2024.9534912109, 1018.0561523438},\
							{1851.4447021484, 2040.0216064453, 1017.8600463867,\
							1851.50390625, 2026.7021484375, 1018.0183105469},\
						 	{360, 361, 362, 363}, {7500, 1000, 100, 10}}
	};
new DListitem[MAX_PLAYERS][21 char];
new player_GlobalID[MAX_PLAYERS][28];
new KindFuel[MAX_PLAYERS];
new Float:CountFuel[MAX_PLAYERS];
new InJob[MAX_PLAYERS];
new	bool:Cuffed[MAX_PLAYERS];
new	bool:Controllable[MAX_PLAYERS char];
new	bool:ADuty[MAX_PLAYERS char];
new HouseEntered[MAX_PLAYERS];
new GarageEntered[MAX_PLAYERS] = {-1, ...};
new ParkingEntered[MAX_PLAYERS];
new BizEntered[MAX_PLAYERS];
new RegisterState[MAX_PLAYERS];
new ClickedPlayerID[MAX_PLAYERS];
new FullnessTick[MAX_PLAYERS];
new BuyInt[MAX_PLAYERS] = {-1, ...};
new UnbanName[MAX_PLAYERS][24];
new PlayerJailCP[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new TicketPrice[MAX_PLAYERS];
new CuffedTime[MAX_PLAYERS];
new Recuffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HouseOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HousePrice[MAX_PLAYERS];
new BizOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new RHouseOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new BizPrice[MAX_PLAYERS];
new ShowVeh[MAX_PLAYERS];
new Clother[MAX_PLAYERS] = {-1, ...},
	TestDriveSphere[MAX_PLAYERS] = {-1, ...};
new Buyitem[MAX_PLAYERS] = {-1, ...};
new ShowPBiz[MAX_PLAYERS];
new TaxiTarif[MAX_PLAYERS];
new TaxiPrice[MAX_PLAYERS];
new TaxiDistance[MAX_PLAYERS];
new PlayerCar[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...};
new PlayerSeat[MAX_PLAYERS] = {-1, ...};
new TransferPlayer[MAX_PLAYERS];
new GetJob[MAX_PLAYERS];
new InfoHouse[MAX_PLAYERS];
new InfoBiz[MAX_PLAYERS];
new MLeader[MAX_PLAYERS];
new MLPlayer[MAX_PLAYERS];
new SGunMats[MAX_PLAYERS];
new SGunID[MAX_PLAYERS];
new SGunOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new SGunPrice[MAX_PLAYERS];
new SGunAmmo[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new CarPrice[MAX_PLAYERS];
new UnLeaderID[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new gPlayerLogTries[MAX_PLAYERS char];
new PanelPlayerID[MAX_PLAYERS];
new OwnableCar[MAX_OWNABLECARS];
new PassRegSex[MAX_PLAYERS];
new ClickedState[MAX_PLAYERS];
new PlayerBed[MAX_PLAYERS] = {-1, ...};
new bool:PlayerLie[MAX_PLAYERS];
new OBJECT_RAKE[MAX_PLAYERS], 
	bool:OBJECT_SLEGAN[MAX_PLAYERS], 
	bool:ShaxtaTimer[MAX_PLAYERS char];
static const unique_car[] = {16892,16900,16899};
static PlayerName[MAX_PLAYERS+1][MAX_PLAYER_NAME];
new PlayerReferal[MAX_PLAYERS][24];
new PlayerRegIP[MAX_PLAYERS][16];
new PlayerIp[MAX_PLAYERS][16];
new player_Global_Int[MAX_PLAYERS][26+sizeof(ModelLimit)+30];
enum psInfo
{
	psSeria,
	psNumber,
	psSex,
	psDate[3],
	psDateBirth[3]
}
new PassInfo[MAX_PLAYERS][psInfo];
new Text:boxaccept = Text:INVALID_TEXT_DRAW,
	Text:boxcancel = Text:INVALID_TEXT_DRAW,
	Text:Boxmenu3 = Text:INVALID_TEXT_DRAW,
	Text:ButtonLeft = Text:INVALID_TEXT_DRAW,
	Text:ButtonRight = Text:INVALID_TEXT_DRAW,
	Text:ButtonUp = Text:INVALID_TEXT_DRAW,
	Text:ButtonDown = Text:INVALID_TEXT_DRAW,
	Text:ButtonCancel = Text:INVALID_TEXT_DRAW,
	Text:ButtonSelect = Text:INVALID_TEXT_DRAW,
	Text:Boxmenu0 = Text:INVALID_TEXT_DRAW,
	Text:Boxmenu1 = Text:INVALID_TEXT_DRAW,
	Text:Boxmenu2 = Text:INVALID_TEXT_DRAW,
	Text:cardti[5] = {Text:INVALID_TEXT_DRAW},
	Text:GlobalFCapture[11] = {Text:INVALID_TEXT_DRAW},
	PlayerText:PlayerFCapture[MAX_PLAYERS][8] = {{PlayerText:INVALID_TEXT_DRAW, ...}, ...};
enum mcInfo
{
	mcState,
	mcDate[3]
}
new MedCardInfo[MAX_PLAYERS][mcInfo];
enum e_FAMILY_INFO
{
	famID,
	famName[15],
	famSlogan[40],
	famOnline,
	famMembersCount,
	famLeader,
	famZam_0,
	famZam_1,
	famZam_2,
	famChatColor,
	famGalka,
	famBrand,
	famDiscord[40],
	famHouse,
	famRep,
	famMoney,
	famType,
	famEXP,
	famLevel,
	//Улучшения
	famRespect,//Дополнительный респект
	famQuestTalon,//Успех в работе
	famBussines,//Бизнессмены в долгу
	famShadow,//Неузнаваемый
	famMedicCredit,//Медики в долгу
	famWhiteList,//Белый список
	famBankOffer,//Банковские махинации
	famMarodery,//Мародёры
	famEatFish,//Рыбный цех
	famUpgrade[3]
};
new FamilyInfo[MAX_FAMILY][e_FAMILY_INFO],
	FamilyHP,
	FamilyARM,
	bool:playerTimer_VehicleFill[MAX_PLAYERS];
#define MAX_FAM_HOUSE 					(40)
enum e_FAMILY_HOUSE_INFO
{
	fhID, //uid
	fhOwnerID, //id family owner
	fhCost, //cost
	bool:fhStatus, //status doors
	fhUpgrade[2],
	/*
		0 - аптеки
		1 - броники
		2 - какое то улучшение
	*/
	bool:fhUpgradeChar,
	/*
		0 - какое то улучшение
		1 - какое то улучшение
		2 - какое то улучшение
	*/
	Float: fh_Enter_X,
	Float: fh_Enter_Y,
	Float: fh_Enter_Z
};
new	FamilyHouse[MAX_FAM_HOUSE][e_FAMILY_HOUSE_INFO],
	Text3D:FamHouseText[MAX_FAM_HOUSE],
	famHousePickUp[MAX_FAM_HOUSE],
	famHouseBackPickUp[2],
	FamilyHouses;
//
enum SAZONE_MAIN
{
	SAZONE_NAME[10+8],
 	Float:SAZONE_AREA[6]
};
static const gSAZonesCity[][SAZONE_MAIN] =
{
	{"Los Santos",                   {44.60, -2892.90, -242.90, 2997.00, -768.00, 900.00}},
	{"Las Venturas",                 {869.40, 596.30, -242.90, 2997.00, 2993.80, 900.00}},
	{"Bone County",                  {-480.50, 596.30, -242.90, 869.40, 2993.80, 900.00}},
	{"Tierra Robada",                {-2997.40, 1659.60, -242.90, -480.50, 2993.80, 900.00}},
	{"Tierra Robada",                {-1213.90, 596.30, -242.90, -480.50, 1659.60, 900.00}},
	{"San Fierro",                   {-2997.40, -1115.50, -242.90, -1213.90, 1659.60, 900.00}},
	{"Red County",                   {-1213.90, -768.00, -242.90, 2997.00, 596.30, 900.00}},
	{"Flint County",                 {-1213.90, -2892.90, -242.90, 44.60, -768.00, 900.00}},
	{"Whetstone",                    {-2997.40, -2892.90, -242.90, -1213.90, -1115.50, 900.00}}
};
static const gSAZones[][SAZONE_MAIN] =
{
    {"The Big Ear",                  {-410.00, 1403.30, -3.00, -137.90, 1681.20, 200.00}},
    {"Aldea Malvada",                {-1372.10, 2498.50, 0.00, -1277.50, 2615.30, 200.00}},
    {"Angel Pine",                   {-2324.90, -2584.20, -6.10, -1964.20, -2212.10, 200.00}},
    {"Arco del Oeste",               {-901.10, 2221.80, 0.00, -592.00, 2571.90, 200.00}},
    {"Avispa Country Club",          {-2646.40, -355.40, 0.00, -2270.00, -222.50, 200.00}},
    {"Avispa Country Club",          {-2831.80, -430.20, -6.10, -2646.40, -222.50, 200.00}},
    {"Avispa Country Club",          {-2361.50, -417.10, 0.00, -2270.00, -355.40, 200.00}},
    {"Avispa Country Club",          {-2667.80, -302.10, -28.80, -2646.40, -262.30, 71.10}},
    {"Avispa Country Club",          {-2470.00, -355.40, 0.00, -2270.00, -318.40, 46.10}},
    {"Avispa Country Club",          {-2550.00, -355.40, 0.00, -2470.00, -318.40, 39.70}},
    {"Back o Beyond",                {-1166.90, -2641.10, 0.00, -321.70, -1856.00, 200.00}},
    {"Battery Point",                {-2741.00, 1268.40, -4.50, -2533.00, 1490.40, 200.00}},
    {"Bayside",                      {-2741.00, 2175.10, 0.00, -2353.10, 2722.70, 200.00}},
    {"Bayside Marina",               {-2353.10, 2275.70, 0.00, -2153.10, 2475.70, 200.00}},
    {"Beacon Hill",                  {-399.60, -1075.50, -1.40, -319.00, -977.50, 198.50}},
    {"Blackfield",                   {964.30, 1203.20, -89.00, 1197.30, 1403.20, 110.90}},
    {"Blackfield",                   {964.30, 1403.20, -89.00, 1197.30, 1726.20, 110.90}},
    {"Blackfield Chapel",            {1375.60, 596.30, -89.00, 1558.00, 823.20, 110.90}},
    {"Blackfield Chapel",            {1325.60, 596.30, -89.00, 1375.60, 795.00, 110.90}},
    {"Blackfield Intersection",      {1197.30, 1044.60, -89.00, 1277.00, 1163.30, 110.90}},
    {"Blackfield Intersection",      {1166.50, 795.00, -89.00, 1375.60, 1044.60, 110.90}},
    {"Blackfield Intersection",      {1277.00, 1044.60, -89.00, 1315.30, 1087.60, 110.90}},
    {"Blackfield Intersection",      {1375.60, 823.20, -89.00, 1457.30, 919.40, 110.90}},
    {"Blueberry",                    {104.50, -220.10, 2.30, 349.60, 152.20, 200.00}},
    {"Blueberry",                    {19.60, -404.10, 3.80, 349.60, -220.10, 200.00}},
    {"Blueberry Acres",              {-319.60, -220.10, 0.00, 104.50, 293.30, 200.00}},
    {"Caligula's Palace",            {2087.30, 1543.20, -89.00, 2437.30, 1703.20, 110.90}},
    {"Caligula's Palace",            {2137.40, 1703.20, -89.00, 2437.30, 1783.20, 110.90}},
    {"Calton Heights",               {-2274.10, 744.10, -6.10, -1982.30, 1358.90, 200.00}},
    {"Chinatown",                    {-2274.10, 578.30, -7.60, -2078.60, 744.10, 200.00}},
    {"City Hall",                    {-2867.80, 277.40, -9.10, -2593.40, 458.40, 200.00}},
    {"Come-A-Lot",                   {2087.30, 943.20, -89.00, 2623.10, 1203.20, 110.90}},
    {"Commerce",                     {1323.90, -1842.20, -89.00, 1701.90, -1722.20, 110.90}},
    {"Commerce",                     {1323.90, -1722.20, -89.00, 1440.90, -1577.50, 110.90}},
    {"Commerce",                     {1370.80, -1577.50, -89.00, 1463.90, -1384.90, 110.90}},
    {"Commerce",                     {1463.90, -1577.50, -89.00, 1667.90, -1430.80, 110.90}},
    {"Commerce",                     {1583.50, -1722.20, -89.00, 1758.90, -1577.50, 110.90}},
    {"Commerce",                     {1667.90, -1577.50, -89.00, 1812.60, -1430.80, 110.90}},
    {"Conference Center",            {1046.10, -1804.20, -89.00, 1323.90, -1722.20, 110.90}},
    {"Conference Center",            {1073.20, -1842.20, -89.00, 1323.90, -1804.20, 110.90}},
    {"Cranberry Station",            {-2007.80, 56.30, 0.00, -1922.00, 224.70, 100.00}},
    {"Creek",                        {2749.90, 1937.20, -89.00, 2921.60, 2669.70, 110.90}},
    {"Dillimore",                    {580.70, -674.80, -9.50, 861.00, -404.70, 200.00}},
    {"Doherty",                      {-2270.00, -324.10, -0.00, -1794.90, -222.50, 200.00}},
    {"Doherty",                      {-2173.00, -222.50, -0.00, -1794.90, 265.20, 200.00}},
    {"Downtown",                     {-1982.30, 744.10, -6.10, -1871.70, 1274.20, 200.00}},
    {"Downtown",                     {-1871.70, 1176.40, -4.50, -1620.30, 1274.20, 200.00}},
    {"Downtown",                     {-1700.00, 744.20, -6.10, -1580.00, 1176.50, 200.00}},
    {"Downtown",                     {-1580.00, 744.20, -6.10, -1499.80, 1025.90, 200.00}},
    {"Downtown",                     {-2078.60, 578.30, -7.60, -1499.80, 744.20, 200.00}},
    {"Downtown",                     {-1993.20, 265.20, -9.10, -1794.90, 578.30, 200.00}},
    {"Downtown Los Santos",          {1463.90, -1430.80, -89.00, 1724.70, -1290.80, 110.90}},
    {"Downtown Los Santos",          {1724.70, -1430.80, -89.00, 1812.60, -1250.90, 110.90}},
    {"Downtown Los Santos",          {1463.90, -1290.80, -89.00, 1724.70, -1150.80, 110.90}},
    {"Downtown Los Santos",          {1370.80, -1384.90, -89.00, 1463.90, -1170.80, 110.90}},
    {"Downtown Los Santos",          {1724.70, -1250.90, -89.00, 1812.60, -1150.80, 110.90}},
    {"Downtown Los Santos",          {1370.80, -1170.80, -89.00, 1463.90, -1130.80, 110.90}},
    {"Downtown Los Santos",          {1378.30, -1130.80, -89.00, 1463.90, -1026.30, 110.90}},
    {"Downtown Los Santos",          {1391.00, -1026.30, -89.00, 1463.90, -926.90, 110.90}},
    {"Downtown Los Santos",          {1507.50, -1385.20, 110.90, 1582.50, -1325.30, 335.90}},
    {"East Beach",                   {2632.80, -1852.80, -89.00, 2959.30, -1668.10, 110.90}},
    {"East Beach",                   {2632.80, -1668.10, -89.00, 2747.70, -1393.40, 110.90}},
    {"East Beach",                   {2747.70, -1668.10, -89.00, 2959.30, -1498.60, 110.90}},
    {"East Beach",                   {2747.70, -1498.60, -89.00, 2959.30, -1120.00, 110.90}},
    {"East Los Santos",              {2421.00, -1628.50, -89.00, 2632.80, -1454.30, 110.90}},
    {"East Los Santos",              {2222.50, -1628.50, -89.00, 2421.00, -1494.00, 110.90}},
    {"East Los Santos",              {2266.20, -1494.00, -89.00, 2381.60, -1372.00, 110.90}},
    {"East Los Santos",              {2381.60, -1494.00, -89.00, 2421.00, -1454.30, 110.90}},
    {"East Los Santos",              {2281.40, -1372.00, -89.00, 2381.60, -1135.00, 110.90}},
    {"East Los Santos",              {2381.60, -1454.30, -89.00, 2462.10, -1135.00, 110.90}},
    {"East Los Santos",              {2462.10, -1454.30, -89.00, 2581.70, -1135.00, 110.90}},
    {"Easter Basin",                 {-1794.90, 249.90, -9.10, -1242.90, 578.30, 200.00}},
    {"Easter Basin",                 {-1794.90, -50.00, -0.00, -1499.80, 249.90, 200.00}},
    {"Easter Bay Airport",           {-1499.80, -50.00, -0.00, -1242.90, 249.90, 200.00}},
    {"Easter Bay Airport",           {-1794.90, -730.10, -3.00, -1213.90, -50.00, 200.00}},
    {"Easter Bay Airport",           {-1213.90, -730.10, 0.00, -1132.80, -50.00, 200.00}},
    {"Easter Bay Airport",           {-1242.90, -50.00, 0.00, -1213.90, 578.30, 200.00}},
    {"Easter Bay Airport",           {-1213.90, -50.00, -4.50, -947.90, 578.30, 200.00}},
    {"Easter Bay Airport",           {-1315.40, -405.30, 15.40, -1264.40, -209.50, 25.40}},
    {"Easter Bay Airport",           {-1354.30, -287.30, 15.40, -1315.40, -209.50, 25.40}},
    {"Easter Bay Airport",           {-1490.30, -209.50, 15.40, -1264.40, -148.30, 25.40}},
    {"Easter Bay Chemicals",         {-1132.80, -768.00, 0.00, -956.40, -578.10, 200.00}},
    {"Easter Bay Chemicals",         {-1132.80, -787.30, 0.00, -956.40, -768.00, 200.00}},
    {"El Castillo del Diablo",       {-464.50, 2217.60, 0.00, -208.50, 2580.30, 200.00}},
    {"El Castillo del Diablo",       {-208.50, 2123.00, -7.60, 114.00, 2337.10, 200.00}},
    {"El Castillo del Diablo",       {-208.50, 2337.10, 0.00, 8.40, 2487.10, 200.00}},
    {"El Corona",                    {1812.60, -2179.20, -89.00, 1970.60, -1852.80, 110.90}},
    {"El Corona",                    {1692.60, -2179.20, -89.00, 1812.60, -1842.20, 110.90}},
    {"El Quebrados",                 {-1645.20, 2498.50, 0.00, -1372.10, 2777.80, 200.00}},
    {"Esplanade East",               {-1620.30, 1176.50, -4.50, -1580.00, 1274.20, 200.00}},
    {"Esplanade East",               {-1580.00, 1025.90, -6.10, -1499.80, 1274.20, 200.00}},
    {"Esplanade East",               {-1499.80, 578.30, -79.60, -1339.80, 1274.20, 20.30}},
    {"Esplanade North",              {-2533.00, 1358.90, -4.50, -1996.60, 1501.20, 200.00}},
    {"Esplanade North",              {-1996.60, 1358.90, -4.50, -1524.20, 1592.50, 200.00}},
    {"Esplanade North",              {-1982.30, 1274.20, -4.50, -1524.20, 1358.90, 200.00}},
    {"Fallen Tree",                  {-792.20, -698.50, -5.30, -452.40, -380.00, 200.00}},
    {"Fallow Bridge",                {434.30, 366.50, 0.00, 603.00, 555.60, 200.00}},
    {"Fern Ridge",                   {508.10, -139.20, 0.00, 1306.60, 119.50, 200.00}},
    {"Financial",                    {-1871.70, 744.10, -6.10, -1701.30, 1176.40, 300.00}},
    {"Fisher's Lagoon",              {1916.90, -233.30, -100.00, 2131.70, 13.80, 200.00}},
    {"Flint Intersection",           {-187.70, -1596.70, -89.00, 17.00, -1276.60, 110.90}},
    {"Flint Range",                  {-594.10, -1648.50, 0.00, -187.70, -1276.60, 200.00}},
    {"Fort Carson",                  {-376.20, 826.30, -3.00, 123.70, 1220.40, 200.00}},
    {"Foster Valley",                {-2270.00, -430.20, -0.00, -2178.60, -324.10, 200.00}},
    {"Foster Valley",                {-2178.60, -599.80, -0.00, -1794.90, -324.10, 200.00}},
    {"Foster Valley",                {-2178.60, -1115.50, 0.00, -1794.90, -599.80, 200.00}},
    {"Foster Valley",                {-2178.60, -1250.90, 0.00, -1794.90, -1115.50, 200.00}},
    {"Frederick Bridge",             {2759.20, 296.50, 0.00, 2774.20, 594.70, 200.00}},
    {"Gant Bridge",                  {-2741.40, 1659.60, -6.10, -2616.40, 2175.10, 200.00}},
    {"Gant Bridge",                  {-2741.00, 1490.40, -6.10, -2616.40, 1659.60, 200.00}},
    {"Ganton",                       {2222.50, -1852.80, -89.00, 2632.80, -1722.30, 110.90}},
    {"Ganton",                       {2222.50, -1722.30, -89.00, 2632.80, -1628.50, 110.90}},
    {"Garcia",                       {-2411.20, -222.50, -0.00, -2173.00, 265.20, 200.00}},
    {"Garcia",                       {-2395.10, -222.50, -5.30, -2354.00, -204.70, 200.00}},
    {"Garver Bridge",                {-1339.80, 828.10, -89.00, -1213.90, 1057.00, 110.90}},
    {"Garver Bridge",                {-1213.90, 950.00, -89.00, -1087.90, 1178.90, 110.90}},
    {"Garver Bridge",                {-1499.80, 696.40, -179.60, -1339.80, 925.30, 20.30}},
    {"Glen Park",                    {1812.60, -1449.60, -89.00, 1996.90, -1350.70, 110.90}},
    {"Glen Park",                    {1812.60, -1100.80, -89.00, 1994.30, -973.30, 110.90}},
    {"Glen Park",                    {1812.60, -1350.70, -89.00, 2056.80, -1100.80, 110.90}},
    {"Green Palms",                  {176.50, 1305.40, -3.00, 338.60, 1520.70, 200.00}},
    {"Greenglass College",           {964.30, 1044.60, -89.00, 1197.30, 1203.20, 110.90}},
    {"Greenglass College",           {964.30, 930.80, -89.00, 1166.50, 1044.60, 110.90}},
    {"Hampton Barns",                {603.00, 264.30, 0.00, 761.90, 366.50, 200.00}},
    {"Hankypanky Point",             {2576.90, 62.10, 0.00, 2759.20, 385.50, 200.00}},
    {"Harry Gold Parkway",           {1777.30, 863.20, -89.00, 1817.30, 2342.80, 110.90}},
    {"Hashbury",                     {-2593.40, -222.50, -0.00, -2411.20, 54.70, 200.00}},
    {"Hilltop Farm",                 {967.30, -450.30, -3.00, 1176.70, -217.90, 200.00}},
    {"Hunter Quarry",                {337.20, 710.80, -115.20, 860.50, 1031.70, 203.70}},
    {"Idlewood",                     {1812.60, -1852.80, -89.00, 1971.60, -1742.30, 110.90}},
    {"Idlewood",                     {1812.60, -1742.30, -89.00, 1951.60, -1602.30, 110.90}},
    {"Idlewood",                     {1951.60, -1742.30, -89.00, 2124.60, -1602.30, 110.90}},
    {"Idlewood",                     {1812.60, -1602.30, -89.00, 2124.60, -1449.60, 110.90}},
    {"Idlewood",                     {2124.60, -1742.30, -89.00, 2222.50, -1494.00, 110.90}},
    {"Idlewood",                     {1971.60, -1852.80, -89.00, 2222.50, -1742.30, 110.90}},
    {"Jefferson",                    {1996.90, -1449.60, -89.00, 2056.80, -1350.70, 110.90}},
    {"Jefferson",                    {2124.60, -1494.00, -89.00, 2266.20, -1449.60, 110.90}},
    {"Jefferson",                    {2056.80, -1372.00, -89.00, 2281.40, -1210.70, 110.90}},
    {"Jefferson",                    {2056.80, -1210.70, -89.00, 2185.30, -1126.30, 110.90}},
    {"Jefferson",                    {2185.30, -1210.70, -89.00, 2281.40, -1154.50, 110.90}},
    {"Jefferson",                    {2056.80, -1449.60, -89.00, 2266.20, -1372.00, 110.90}},
    {"Julius Thruway East",          {2623.10, 943.20, -89.00, 2749.90, 1055.90, 110.90}},
    {"Julius Thruway East",          {2685.10, 1055.90, -89.00, 2749.90, 2626.50, 110.90}},
    {"Julius Thruway East",          {2536.40, 2442.50, -89.00, 2685.10, 2542.50, 110.90}},
    {"Julius Thruway East",          {2625.10, 2202.70, -89.00, 2685.10, 2442.50, 110.90}},
    {"Julius Thruway North",         {2498.20, 2542.50, -89.00, 2685.10, 2626.50, 110.90}},
    {"Julius Thruway North",         {2237.40, 2542.50, -89.00, 2498.20, 2663.10, 110.90}},
    {"Julius Thruway North",         {2121.40, 2508.20, -89.00, 2237.40, 2663.10, 110.90}},
    {"Julius Thruway North",         {1938.80, 2508.20, -89.00, 2121.40, 2624.20, 110.90}},
    {"Julius Thruway North",         {1534.50, 2433.20, -89.00, 1848.40, 2583.20, 110.90}},
    {"Julius Thruway North",         {1848.40, 2478.40, -89.00, 1938.80, 2553.40, 110.90}},
    {"Julius Thruway North",         {1704.50, 2342.80, -89.00, 1848.40, 2433.20, 110.90}},
    {"Julius Thruway North",         {1377.30, 2433.20, -89.00, 1534.50, 2507.20, 110.90}},
    {"Julius Thruway South",         {1457.30, 823.20, -89.00, 2377.30, 863.20, 110.90}},
    {"Julius Thruway South",         {2377.30, 788.80, -89.00, 2537.30, 897.90, 110.90}},
    {"Julius Thruway West",          {1197.30, 1163.30, -89.00, 1236.60, 2243.20, 110.90}},
    {"Julius Thruway West",          {1236.60, 2142.80, -89.00, 1297.40, 2243.20, 110.90}},
    {"Juniper Hill",                 {-2533.00, 578.30, -7.60, -2274.10, 968.30, 200.00}},
    {"Juniper Hollow",               {-2533.00, 968.30, -6.10, -2274.10, 1358.90, 200.00}},
    {"K.A.C.C. Military Fuels",      {2498.20, 2626.50, -89.00, 2749.90, 2861.50, 110.90}},
    {"Kincaid Bridge",               {-1339.80, 599.20, -89.00, -1213.90, 828.10, 110.90}},
    {"Kincaid Bridge",               {-1213.90, 721.10, -89.00, -1087.90, 950.00, 110.90}},
    {"Kincaid Bridge",               {-1087.90, 855.30, -89.00, -961.90, 986.20, 110.90}},
    {"King's",                       {-2329.30, 458.40, -7.60, -1993.20, 578.30, 200.00}},
    {"King's",                       {-2411.20, 265.20, -9.10, -1993.20, 373.50, 200.00}},
    {"King's",                       {-2253.50, 373.50, -9.10, -1993.20, 458.40, 200.00}},
    {"LVA Freight Depot",            {1457.30, 863.20, -89.00, 1777.40, 1143.20, 110.90}},
    {"LVA Freight Depot",            {1375.60, 919.40, -89.00, 1457.30, 1203.20, 110.90}},
    {"LVA Freight Depot",            {1277.00, 1087.60, -89.00, 1375.60, 1203.20, 110.90}},
    {"LVA Freight Depot",            {1315.30, 1044.60, -89.00, 1375.60, 1087.60, 110.90}},
    {"LVA Freight Depot",            {1236.60, 1163.40, -89.00, 1277.00, 1203.20, 110.90}},
    {"Las Barrancas",                {-926.10, 1398.70, -3.00, -719.20, 1634.60, 200.00}},
    {"Las Brujas",                   {-365.10, 2123.00, -3.00, -208.50, 2217.60, 200.00}},
    {"Las Colinas",                  {1994.30, -1100.80, -89.00, 2056.80, -920.80, 110.90}},
    {"Las Colinas",                  {2056.80, -1126.30, -89.00, 2126.80, -920.80, 110.90}},
    {"Las Colinas",                  {2185.30, -1154.50, -89.00, 2281.40, -934.40, 110.90}},
    {"Las Colinas",                  {2126.80, -1126.30, -89.00, 2185.30, -934.40, 110.90}},
    {"Las Colinas",                  {2747.70, -1120.00, -89.00, 2959.30, -945.00, 110.90}},
    {"Las Colinas",                  {2632.70, -1135.00, -89.00, 2747.70, -945.00, 110.90}},
    {"Las Colinas",                  {2281.40, -1135.00, -89.00, 2632.70, -945.00, 110.90}},
    {"Las Payasadas",                {-354.30, 2580.30, 2.00, -133.60, 2816.80, 200.00}},
    {"Las Venturas Airport",         {1236.60, 1203.20, -89.00, 1457.30, 1883.10, 110.90}},
    {"Las Venturas Airport",         {1457.30, 1203.20, -89.00, 1777.30, 1883.10, 110.90}},
    {"Las Venturas Airport",         {1457.30, 1143.20, -89.00, 1777.40, 1203.20, 110.90}},
    {"Las Venturas Airport",         {1515.80, 1586.40, -12.50, 1729.90, 1714.50, 87.50}},
    {"Last Dime Motel",              {1823.00, 596.30, -89.00, 1997.20, 823.20, 110.90}},
    {"Leafy Hollow",                 {-1166.90, -1856.00, 0.00, -815.60, -1602.00, 200.00}},
    {"Liberty City",                 {-1000.00, 400.00, 1300.00, -700.00, 600.00, 1400.00}},
    {"Lil' Probe Inn",               {-90.20, 1286.80, -3.00, 153.80, 1554.10, 200.00}},
    {"Linden Side",                  {2749.90, 943.20, -89.00, 2923.30, 1198.90, 110.90}},
    {"Linden Station",               {2749.90, 1198.90, -89.00, 2923.30, 1548.90, 110.90}},
    {"Linden Station",               {2811.20, 1229.50, -39.50, 2861.20, 1407.50, 60.40}},
    {"Little Mexico",                {1701.90, -1842.20, -89.00, 1812.60, -1722.20, 110.90}},
    {"Little Mexico",                {1758.90, -1722.20, -89.00, 1812.60, -1577.50, 110.90}},
    {"Los Flores",                   {2581.70, -1454.30, -89.00, 2632.80, -1393.40, 110.90}},
    {"Los Flores",                   {2581.70, -1393.40, -89.00, 2747.70, -1135.00, 110.90}},
    {"Los Santos International",     {1249.60, -2394.30, -89.00, 1852.00, -2179.20, 110.90}},
    {"Los Santos International",     {1852.00, -2394.30, -89.00, 2089.00, -2179.20, 110.90}},
    {"Los Santos International",     {1382.70, -2730.80, -89.00, 2201.80, -2394.30, 110.90}},
    {"Los Santos International",     {1974.60, -2394.30, -39.00, 2089.00, -2256.50, 60.90}},
    {"Los Santos International",     {1400.90, -2669.20, -39.00, 2189.80, -2597.20, 60.90}},
    {"Los Santos International",     {2051.60, -2597.20, -39.00, 2152.40, -2394.30, 60.90}},
    {"Marina",                       {647.70, -1804.20, -89.00, 851.40, -1577.50, 110.90}},
    {"Marina",                       {647.70, -1577.50, -89.00, 807.90, -1416.20, 110.90}},
    {"Marina",                       {807.90, -1577.50, -89.00, 926.90, -1416.20, 110.90}},
    {"Market",                       {787.40, -1416.20, -89.00, 1072.60, -1310.20, 110.90}},
    {"Market",                       {952.60, -1310.20, -89.00, 1072.60, -1130.80, 110.90}},
    {"Market",                       {1072.60, -1416.20, -89.00, 1370.80, -1130.80, 110.90}},
    {"Market",                       {926.90, -1577.50, -89.00, 1370.80, -1416.20, 110.90}},
    {"Market Station",               {787.40, -1410.90, -34.10, 866.00, -1310.20, 65.80}},
    {"Martin Bridge",                {-222.10, 293.30, 0.00, -122.10, 476.40, 200.00}},
    {"Missionary Hill",              {-2994.40, -811.20, 0.00, -2178.60, -430.20, 200.00}},
    {"Montgomery",                   {1119.50, 119.50, -3.00, 1451.40, 493.30, 200.00}},
    {"Montgomery",                   {1451.40, 347.40, -6.10, 1582.40, 420.80, 200.00}},
    {"Montgomery Intersection",      {1546.60, 208.10, 0.00, 1745.80, 347.40, 200.00}},
    {"Montgomery Intersection",      {1582.40, 347.40, 0.00, 1664.60, 401.70, 200.00}},
    {"Mulholland",                   {1414.00, -768.00, -89.00, 1667.60, -452.40, 110.90}},
    {"Mulholland",                   {1281.10, -452.40, -89.00, 1641.10, -290.90, 110.90}},
    {"Mulholland",                   {1269.10, -768.00, -89.00, 1414.00, -452.40, 110.90}},
    {"Mulholland",                   {1357.00, -926.90, -89.00, 1463.90, -768.00, 110.90}},
    {"Mulholland",                   {1318.10, -910.10, -89.00, 1357.00, -768.00, 110.90}},
    {"Mulholland",                   {1169.10, -910.10, -89.00, 1318.10, -768.00, 110.90}},
    {"Mulholland",                   {768.60, -954.60, -89.00, 952.60, -860.60, 110.90}},
    {"Mulholland",                   {687.80, -860.60, -89.00, 911.80, -768.00, 110.90}},
    {"Mulholland",                   {737.50, -768.00, -89.00, 1142.20, -674.80, 110.90}},
    {"Mulholland",                   {1096.40, -910.10, -89.00, 1169.10, -768.00, 110.90}},
    {"Mulholland",                   {952.60, -937.10, -89.00, 1096.40, -860.60, 110.90}},
    {"Mulholland",                   {911.80, -860.60, -89.00, 1096.40, -768.00, 110.90}},
    {"Mulholland",                   {861.00, -674.80, -89.00, 1156.50, -600.80, 110.90}},
    {"Mulholland Intersection",      {1463.90, -1150.80, -89.00, 1812.60, -768.00, 110.90}},
    {"North Rock",                   {2285.30, -768.00, 0.00, 2770.50, -269.70, 200.00}},
    {"Ocean Docks",                  {2373.70, -2697.00, -89.00, 2809.20, -2330.40, 110.90}},
    {"Ocean Docks",                  {2201.80, -2418.30, -89.00, 2324.00, -2095.00, 110.90}},
    {"Ocean Docks",                  {2324.00, -2302.30, -89.00, 2703.50, -2145.10, 110.90}},
    {"Ocean Docks",                  {2089.00, -2394.30, -89.00, 2201.80, -2235.80, 110.90}},
    {"Ocean Docks",                  {2201.80, -2730.80, -89.00, 2324.00, -2418.30, 110.90}},
    {"Ocean Docks",                  {2703.50, -2302.30, -89.00, 2959.30, -2126.90, 110.90}},
    {"Ocean Docks",                  {2324.00, -2145.10, -89.00, 2703.50, -2059.20, 110.90}},
    {"Ocean Flats",                  {-2994.40, 277.40, -9.10, -2867.80, 458.40, 200.00}},
    {"Ocean Flats",                  {-2994.40, -222.50, -0.00, -2593.40, 277.40, 200.00}},
    {"Ocean Flats",                  {-2994.40, -430.20, -0.00, -2831.80, -222.50, 200.00}},
    {"Octane Springs",               {338.60, 1228.50, 0.00, 664.30, 1655.00, 200.00}},
    {"Old Venturas Strip",           {2162.30, 2012.10, -89.00, 2685.10, 2202.70, 110.90}},
    {"Palisades",                    {-2994.40, 458.40, -6.10, -2741.00, 1339.60, 200.00}},
    {"Palomino Creek",               {2160.20, -149.00, 0.00, 2576.90, 228.30, 200.00}},
    {"Paradiso",                     {-2741.00, 793.40, -6.10, -2533.00, 1268.40, 200.00}},
    {"Pershing Square",              {1440.90, -1722.20, -89.00, 1583.50, -1577.50, 110.90}},
    {"Pilgrim",                      {2437.30, 1383.20, -89.00, 2624.40, 1783.20, 110.90}},
    {"Pilgrim",                      {2624.40, 1383.20, -89.00, 2685.10, 1783.20, 110.90}},
    {"Pilson Intersection",          {1098.30, 2243.20, -89.00, 1377.30, 2507.20, 110.90}},
    {"Pirates in Men's Pants",       {1817.30, 1469.20, -89.00, 2027.40, 1703.20, 110.90}},
    {"Playa del Seville",            {2703.50, -2126.90, -89.00, 2959.30, -1852.80, 110.90}},
    {"Prickle Pine",                 {1534.50, 2583.20, -89.00, 1848.40, 2863.20, 110.90}},
    {"Prickle Pine",                 {1117.40, 2507.20, -89.00, 1534.50, 2723.20, 110.90}},
    {"Prickle Pine",                 {1848.40, 2553.40, -89.00, 1938.80, 2863.20, 110.90}},
    {"Prickle Pine",                 {1938.80, 2624.20, -89.00, 2121.40, 2861.50, 110.90}},
    {"Queens",                       {-2533.00, 458.40, 0.00, -2329.30, 578.30, 200.00}},
    {"Queens",                       {-2593.40, 54.70, 0.00, -2411.20, 458.40, 200.00}},
    {"Queens",                       {-2411.20, 373.50, 0.00, -2253.50, 458.40, 200.00}},
    {"Randolph Industrial Estate",   {1558.00, 596.30, -89.00, 1823.00, 823.20, 110.90}},
    {"Redsands East",                {1817.30, 2011.80, -89.00, 2106.70, 2202.70, 110.90}},
    {"Redsands East",                {1817.30, 2202.70, -89.00, 2011.90, 2342.80, 110.90}},
    {"Redsands East",                {1848.40, 2342.80, -89.00, 2011.90, 2478.40, 110.90}},
    {"Redsands West",                {1236.60, 1883.10, -89.00, 1777.30, 2142.80, 110.90}},
    {"Redsands West",                {1297.40, 2142.80, -89.00, 1777.30, 2243.20, 110.90}},
    {"Redsands West",                {1377.30, 2243.20, -89.00, 1704.50, 2433.20, 110.90}},
    {"Redsands West",                {1704.50, 2243.20, -89.00, 1777.30, 2342.80, 110.90}},
    {"Regular Tom",                  {-405.70, 1712.80, -3.00, -276.70, 1892.70, 200.00}},
    {"Richman",                      {647.50, -1118.20, -89.00, 787.40, -954.60, 110.90}},
    {"Richman",                      {647.50, -954.60, -89.00, 768.60, -860.60, 110.90}},
    {"Richman",                      {225.10, -1369.60, -89.00, 334.50, -1292.00, 110.90}},
    {"Richman",                      {225.10, -1292.00, -89.00, 466.20, -1235.00, 110.90}},
    {"Richman",                      {72.60, -1404.90, -89.00, 225.10, -1235.00, 110.90}},
    {"Richman",                      {72.60, -1235.00, -89.00, 321.30, -1008.10, 110.90}},
    {"Richman",                      {321.30, -1235.00, -89.00, 647.50, -1044.00, 110.90}},
    {"Richman",                      {321.30, -1044.00, -89.00, 647.50, -860.60, 110.90}},
    {"Richman",                      {321.30, -860.60, -89.00, 687.80, -768.00, 110.90}},
    {"Richman",                      {321.30, -768.00, -89.00, 700.70, -674.80, 110.90}},
    {"Robada Intersection",          {-1119.00, 1178.90, -89.00, -862.00, 1351.40, 110.90}},
    {"Roca Escalante",               {2237.40, 2202.70, -89.00, 2536.40, 2542.50, 110.90}},
    {"Roca Escalante",               {2536.40, 2202.70, -89.00, 2625.10, 2442.50, 110.90}},
    {"Rockshore East",               {2537.30, 676.50, -89.00, 2902.30, 943.20, 110.90}},
    {"Rockshore West",               {1997.20, 596.30, -89.00, 2377.30, 823.20, 110.90}},
    {"Rockshore West",               {2377.30, 596.30, -89.00, 2537.30, 788.80, 110.90}},
    {"Rodeo",                        {72.60, -1684.60, -89.00, 225.10, -1544.10, 110.90}},
    {"Rodeo",                        {72.60, -1544.10, -89.00, 225.10, -1404.90, 110.90}},
    {"Rodeo",                        {225.10, -1684.60, -89.00, 312.80, -1501.90, 110.90}},
    {"Rodeo",                        {225.10, -1501.90, -89.00, 334.50, -1369.60, 110.90}},
    {"Rodeo",                        {334.50, -1501.90, -89.00, 422.60, -1406.00, 110.90}},
    {"Rodeo",                        {312.80, -1684.60, -89.00, 422.60, -1501.90, 110.90}},
    {"Rodeo",                        {422.60, -1684.60, -89.00, 558.00, -1570.20, 110.90}},
    {"Rodeo",                        {558.00, -1684.60, -89.00, 647.50, -1384.90, 110.90}},
    {"Rodeo",                        {466.20, -1570.20, -89.00, 558.00, -1385.00, 110.90}},
    {"Rodeo",                        {422.60, -1570.20, -89.00, 466.20, -1406.00, 110.90}},
    {"Rodeo",                        {466.20, -1385.00, -89.00, 647.50, -1235.00, 110.90}},
    {"Rodeo",                        {334.50, -1406.00, -89.00, 466.20, -1292.00, 110.90}},
    {"Royal Casino",                 {2087.30, 1383.20, -89.00, 2437.30, 1543.20, 110.90}},
    {"San Andreas Sound",            {2450.30, 385.50, -100.00, 2759.20, 562.30, 200.00}},
    {"Santa Flora",                  {-2741.00, 458.40, -7.60, -2533.00, 793.40, 200.00}},
    {"Santa Maria Beach",            {342.60, -2173.20, -89.00, 647.70, -1684.60, 110.90}},
    {"Santa Maria Beach",            {72.60, -2173.20, -89.00, 342.60, -1684.60, 110.90}},
    {"Shady Cabin",                  {-1632.80, -2263.40, -3.00, -1601.30, -2231.70, 200.00}},
    {"Shady Creeks",                 {-1820.60, -2643.60, -8.00, -1226.70, -1771.60, 200.00}},
    {"Shady Creeks",                 {-2030.10, -2174.80, -6.10, -1820.60, -1771.60, 200.00}},
    {"Sobell Rail Yards",            {2749.90, 1548.90, -89.00, 2923.30, 1937.20, 110.90}},
    {"Spinybed",                     {2121.40, 2663.10, -89.00, 2498.20, 2861.50, 110.90}},
    {"Starfish Casino",              {2437.30, 1783.20, -89.00, 2685.10, 2012.10, 110.90}},
    {"Starfish Casino",              {2437.30, 1858.10, -39.00, 2495.00, 1970.80, 60.90}},
    {"Starfish Casino",              {2162.30, 1883.20, -89.00, 2437.30, 2012.10, 110.90}},
    {"Temple",                       {1252.30, -1130.80, -89.00, 1378.30, -1026.30, 110.90}},
    {"Temple",                       {1252.30, -1026.30, -89.00, 1391.00, -926.90, 110.90}},
    {"Temple",                       {1252.30, -926.90, -89.00, 1357.00, -910.10, 110.90}},
    {"Temple",                       {952.60, -1130.80, -89.00, 1096.40, -937.10, 110.90}},
    {"Temple",                       {1096.40, -1130.80, -89.00, 1252.30, -1026.30, 110.90}},
    {"Temple",                       {1096.40, -1026.30, -89.00, 1252.30, -910.10, 110.90}},
    {"The Camel's Toe",              {2087.30, 1203.20, -89.00, 2640.40, 1383.20, 110.90}},
    {"The Clown's Pocket",           {2162.30, 1783.20, -89.00, 2437.30, 1883.20, 110.90}},
    {"The Emerald Isle",             {2011.90, 2202.70, -89.00, 2237.40, 2508.20, 110.90}},
    {"The Farm",                     {-1209.60, -1317.10, 114.90, -908.10, -787.30, 251.90}},
    {"The Four Dragons Casino",      {1817.30, 863.20, -89.00, 2027.30, 1083.20, 110.90}},
    {"The High Roller",              {1817.30, 1283.20, -89.00, 2027.30, 1469.20, 110.90}},
    {"The Mako Span",                {1664.60, 401.70, 0.00, 1785.10, 567.20, 200.00}},
    {"The Panopticon",               {-947.90, -304.30, -1.10, -319.60, 327.00, 200.00}},
    {"The Pink Swan",                {1817.30, 1083.20, -89.00, 2027.30, 1283.20, 110.90}},
    {"The Sherman Dam",              {-968.70, 1929.40, -3.00, -481.10, 2155.20, 200.00}},
    {"The Strip",                    {2027.40, 863.20, -89.00, 2087.30, 1703.20, 110.90}},
    {"The Strip",                    {2106.70, 1863.20, -89.00, 2162.30, 2202.70, 110.90}},
    {"The Strip",                    {2027.40, 1783.20, -89.00, 2162.30, 1863.20, 110.90}},
    {"The Strip",                    {2027.40, 1703.20, -89.00, 2137.40, 1783.20, 110.90}},
    {"The Visage",                   {1817.30, 1863.20, -89.00, 2106.70, 2011.80, 110.90}},
    {"The Visage",                   {1817.30, 1703.20, -89.00, 2027.40, 1863.20, 110.90}},
    {"Unity Station",                {1692.60, -1971.80, -20.40, 1812.60, -1932.80, 79.50}},
    {"Valle Ocultado",               {-936.60, 2611.40, 2.00, -715.90, 2847.90, 200.00}},
    {"Verdant Bluffs",               {930.20, -2488.40, -89.00, 1249.60, -2006.70, 110.90}},
    {"Verdant Bluffs",               {1073.20, -2006.70, -89.00, 1249.60, -1842.20, 110.90}},
    {"Verdant Bluffs",               {1249.60, -2179.20, -89.00, 1692.60, -1842.20, 110.90}},
    {"Verdant Meadows",              {37.00, 2337.10, -3.00, 435.90, 2677.90, 200.00}},
    {"Verona Beach",                 {647.70, -2173.20, -89.00, 930.20, -1804.20, 110.90}},
    {"Verona Beach",                 {930.20, -2006.70, -89.00, 1073.20, -1804.20, 110.90}},
    {"Verona Beach",                 {851.40, -1804.20, -89.00, 1046.10, -1577.50, 110.90}},
    {"Verona Beach",                 {1161.50, -1722.20, -89.00, 1323.90, -1577.50, 110.90}},
    {"Verona Beach",                 {1046.10, -1722.20, -89.00, 1161.50, -1577.50, 110.90}},
    {"Vinewood",                     {787.40, -1310.20, -89.00, 952.60, -1130.80, 110.90}},
    {"Vinewood",                     {787.40, -1130.80, -89.00, 952.60, -954.60, 110.90}},
    {"Vinewood",                     {647.50, -1227.20, -89.00, 787.40, -1118.20, 110.90}},
    {"Vinewood",                     {647.70, -1416.20, -89.00, 787.40, -1227.20, 110.90}},
    {"Whitewood Estates",            {883.30, 1726.20, -89.00, 1098.30, 2507.20, 110.90}},
    {"Whitewood Estates",            {1098.30, 1726.20, -89.00, 1197.30, 2243.20, 110.90}},
    {"Willowfield",                  {1970.60, -2179.20, -89.00, 2089.00, -1852.80, 110.90}},
    {"Willowfield",                  {2089.00, -2235.80, -89.00, 2201.80, -1989.90, 110.90}},
    {"Willowfield",                  {2089.00, -1989.90, -89.00, 2324.00, -1852.80, 110.90}},
    {"Willowfield",                  {2201.80, -2095.00, -89.00, 2324.00, -1989.90, 110.90}},
    {"Willowfield",                  {2541.70, -1941.40, -89.00, 2703.50, -1852.80, 110.90}},
    {"Willowfield",                  {2324.00, -2059.20, -89.00, 2541.70, -1852.80, 110.90}},
    {"Willowfield",                  {2541.70, -2059.20, -89.00, 2703.50, -1941.40, 110.90}},
    {"Yellow Bell Station",          {1377.40, 2600.40, -21.90, 1492.40, 2687.30, 78.00}}
};
enum enumrollitem
{
    rollitem,
    rollmoney
}
static const RollPrizeBronze[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {316},{316},{642},
    {642}, {638}, {638}, {635},{635},{635},
    {634}, {633}, {634}, {327},{328},{328},
    {631}, {638}, {631}, {656},{328},{328},
    {631}, {638}, {631}, {656},{656},{327},
    {631}, {638}, {656}, {643},{643},{327},
    {633}, {328}, {656}, {327},{327},{327},
    {633}, {328}, {327}, {327},{327},{327}
};
static const RollPrizeSilver[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {528},{316},{642},
    {642}, {638}, {638}, {635},{635},{635},
    {634}, {633}, {634}, {327},{1081},{528},
    {631}, {638}, {1081}, {656},{328},{328},
    {631}, {528}, {631}, {656},{656},{1081},
    {631}, {638}, {656}, {643},{643},{1081},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {528}, {327}, {327},{1081},{612}
};
static const RollPrizeGold[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {350},{316},{642},
    {642}, {638}, {350}, {350},{635},{635},
    {634}, {633}, {350}, {350},{1081},{528},
    {631}, {350}, {350}, {656},{328},{328},
    {631}, {528}, {350}, {656},{656},{1081},
    {631}, {638}, {656}, {643},{643},{1081},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {350}, {327}, {327},{342},{350}
};
static const RollPrizePlatinum[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {350},{316},{642},
    {642}, {342}, {638}, {635},{635},{342},
    {634}, {342}, {634}, {327},{1081},{528},
    {631}, {350}, {1081}, {656},{328},{342},
    {631}, {528}, {631}, {656},{656},{1081},
    {631}, {638}, {656}, {643},{643},{342},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {350}, {350}, {327},{1081},{612}
};
enum FamTypeInfo
{
	typeDialog,
	typeLevel,
	typeName[11+1],
	typeNameRus[12+1],
}
static const fType[][FamTypeInfo] =
{
    {1, 1,   "Family", 		"(Семья)",		},
    {2, 10,  "Corporation", "(Корпорация)",	},
    {3, 20,  "Crew", 		"(Команда)",	},
    {4, 30,  "Squad", 		"(Отряд)",		},
    {5, 40,  "Brotherhood", "(Братство)",	},
    {6, 50,  "Dynasty", 	"(Династия)",	},
    {7, 60,  "Empire", 		"(Империя)"		}
};
new 
    Iterator: Familys<MAX_PLAYERS>,
    Iterator: Razdaha<MAX_PLAYERS>,
    Iterator: WorkNPC<MAX_PLAYERS>,
    Iterator: PickupPresent<1000>,
    Iterator: OWNABLECARS<MAX_OWNABLECARS>,
    Iterator: TREASURE<sizeof(HitchInfo)>,
    Iterator: IsPlayerBot<MAX_PLAYERS>,
    Iterator: hint_forLauncher[5]<1000>,
    Iterator: WH_DoorTimer<52>,
    Iterator: OWNABLETRi<MAX_TI>,
    Iterator: FamilysCapture<160>,//я не помню скока в lv квадратов//<289>; //limit встреч
    Iterator: EngineON_Vehicle<2000>,
    Iterator: itemSkin<sizeof(InfoConfigSkin)+312>, //item for 5000
    Iterator: itemVehicle<sizeof(InfoConfigVehicle)>,
    Iterator: itemAccessories<sizeof(ItemsInfo)>,
    Iterator: itemUnknown<sizeof(ItemsInfo)>,
    Iterator: sphereGreenZone<100>;
//
new WorkNPC_time,
	WorkNPC_pickup[15] = {-1, ...},
	WorkNPC_areaid = -1,
	CountH[MAX_PLAYERS char],
	IsPlayerToRaceID[MAX_PLAYERS] = {-1, ...},
	IsPlayerRacePresentCount[MAX_PLAYERS] = {0, ...};
//fcnpc
//new Iterator: IsPlayerFCNPC<100>;

new GetUID_PlayerNPC[MAX_PLAYERS] = {-1, ...},
	GetTimerID_PlayerNPC[MAX_PLAYERS] = {-1, ...},
	bool:IsNPCEnterVehicle[MAX_PLAYERS],
	Text3D:NameTextNPC[MAX_PLAYERS] = {Text3D:-1, ...},
	Text3D:ChatTextNPC[MAX_PLAYERS] = {Text3D:-1, ...},
	IsNPCAttack[MAX_PLAYERS] = {-1, ...};
	//GetName_PlayerFCNPC[MAX_PLAYERS][24] = {{"The_State", ...}, ...};
//
static const FamilyChatColor[][] =
{
	{"FF5E5E"},
	{"FFFFFF"},
	{"E65075"},
	{"EFA4B7"},
	{"905B69"},
	{"D052CE"},
	{"FF00FC"},
	{"5D395D"},
	{"8E38EA"},
	{"6B21BB"},
	{"2F00FF"},
	{"7456F8"},
	{"5287F1"},
	{"1DBAF2"},
	{"308EB0"},
	{"30B061"},
	{"20F271"},
	{"107135"},
	{"47EB2A"},
	{"9EE991"},
	{"C2D95E"},
	{"D1FF00"},
	{"7B9022"},
	{"FFC900"},
	{"E8CA60"},
	{"6B5B1F"},
	{"FF8400"},
	{"C04312"},
	{"5C4C45"},
	{"373534"},
	{"351204"}
};
//АНТИ ДМ ЗОНЫ
new TOTAL_GREENZONE,
    bool:player_InGreenZone[MAX_PLAYERS char];
enum antidminfo
{
	zID,
    zName[20+20],
	bool:zStatus,
	Float:zX,
	Float:zY,
	Float:zZ
};
new AntiDm[43][antidminfo];
static const Float:phonepos[][3]=
{
	{1790.6379, -1884.1139, 13.1670},
	{1791.6689, -1884.1139, 13.1670},
	{1163.6345, -1735.1443, 13.3669},
	{1162.8337, -1735.1443, 13.3669},
	{1540.81, -1720.28, 13.79},
	{1163.00, -1704.39, 14.27},
	{1212.94, -1307.07, 13.78},
	{1363.9105,-1257.7277,13.5469},
	{1517.54, -1314.19, 15.23},
	{926.32, -1313.96, 13.81},
	{1066.10, -1029.03, 32.35},
	{460.74, -1607.63, 25.92},
	{333.68, -1775.89, 5.34},
	{539.27, -1266.13, 16.83},
	{1190.87, -930.76, 43.22},
	{1558.57, -1056.97, 24.02},
	{1674.82, -1168.34, 24.19},
	{1838.52, -1374.49, 13.86},
	{1795.61, -1620.13, 13.83},
	{1345.00, -1567.78, 13.89},
	{1947.05, -1794.71, 13.85},
	{2093.51, -1790.08, 13.79},
	{1950.80, -1978.01, 13.84},
	{1466.70, -2228.48, 13.80},
	{2088.65, -2101.52, 13.84},
	{2245.30, -2199.81, 13.87},
	{2205.43, -1994.22, 13.80},
	{2170.02, -1745.22, 13.82},
	{2243.34, -1724.31, 13.82},
	{2178.41, -1629.57, 15.08},
	{2422.05, -1890.09, 13.83},
	{2503.14, -1940.56, 13.81},
	{2730.45, -1987.05, 13.84},
	{2833.71, -1645.51, 11.21},
	{2484.72, -1495.39, 24.22},
	{2307.92, -1492.46, 23.81},
	{2277.04, -1338.40, 24.26},
	{2026.62, -1267.34, 24.30},
	{2195.91, -1132.80, 25.77},
	{1876.21, -1039.23, 24.08},
	{1990.07, -1472.45, 13.83},
	{2651.60, -1415.61, 30.63},
	{2831.02, -1129.65, 25.22},
	{2251.45, -1308.21, 24.28},
	{1750.36, -1453.00, 13.81},
	{1706.17, -1319.16, 13.84},
	{1429.55, -1536.88, 13.85},
	{1290.85, -1558.72, 13.87},
	{1827.07, 824.71, 10.75},
	{2026.67, 1080.83, 11.05},
	{2085.41, 1386.88, 11.08},
	{2091.63, 1713.69, 11.08},
	{2214.46, 1780.42, 11.13},
	{2101.19, 2031.25, 11.09},
	{2271.61, 2028.42, 11.06},
	{2118.22, 2234.50, 11.07},
	{2333.44, 2421.31, 11.11},
	{2436.25, 2353.93, 11.08},
	{2174.13, 2461.80, 11.09},
	{2019.56, 2460.77, 11.11},
	{1918.68, 2310.74, 11.08},
	{1720.38, 2242.66, 11.06},
	{1486.36, 2046.84, 11.09},
	{1641.04, 1848.49, 11.09},
	{1313.80, 2059.51, 11.06},
	{1119.09, 2059.85, 11.09},
	{1060.15, 1945.67, 11.08},
	{1050.40, 1381.40, 11.10},
	{1405.17, 1199.50, 11.11},
	{1574.73, 736.68, 11.15},
	{1636.78, 939.82, 11.08},
	{1689.39, 1266.98, 11.15},
	{1715.12, 1374.58, 10.93},
	{2443.80, 2061.84, 11.09},
	{2514.01, 1910.17, 11.13},
	{2616.46, 1973.91, 11.08},
	{2811.74, 2119.81, 10.97},
	{2884.44, 2301.22, 11.09},
	{2635.13, 2307.56, 11.09},
	{2520.01, 2302.06, 11.02},
	{2333.71, 1644.22, 11.10},
	{2434.64, 1506.88, 11.12},
	{2445.94, 1366.45, 11.10},
	{2591.83, 1185.00, 11.08},
	{2798.67, 1322.22, 11.20},
	{2560.91, 1367.11, 11.13},
	{2208.06, 1366.71, 11.08},
	{1853.97, 2061.76, 11.14},
	{1936.07, 2165.18, 11.13},
	{1934.44, 2048.72, 11.06},
	{-1807.46, -128.81, 5.97},
	{-2019.60, -61.78, 35.64},
	{-1996.47, 132.13, 27.94},
	{-2114.38, 327.02, 35.45},
	{-2258.88, 135.45, 35.62},
	{-2268.38, -174.33, 35.57},
	{-2363.64, -146.05, 35.61},
	{-2180.08, 313.92, 35.53},
	{-2018.43, 471.62, 35.47},
	{-2266.92, -36.03, 35.58},
	{-2427.97, -52.55, 35.58},
	{-2410.60, 310.71, 35.44},
	{-2237.71, 552.46, 35.44},
	{-2077.99, 557.22, 35.58},
	{-1824.78, 615.24, 35.48},
	{-1928.06, 720.37, 45.65},
	{-1986.18, 831.29, 45.68},
	{-1752.72, 829.49, 25.22},
	{-1723.04, 655.50, 25.18},
	{-1705.30, 825.06, 25.09},
	{-1805.25, 893.59, 25.08},
	{-1910.16, 867.79, 35.36},
	{-1993.13, 893.16, 45.72},
	{-2154.95, 763.83, 69.90},
	{-1982.00, 1088.07, 56.05},
	{-2643.99, 576.62, 14.94},
	{-2446.00, 716.49, 35.43},
	{-2246.69, 674.83, 49.70},
	{-2133.04, 896.79, 80.27},
	{-1631.27, 740.87, 14.90},
	{-1570.14, 508.45, 7.49},
	{-1673.62, 391.68, 7.44},
	{-1813.99, 71.72, 15.33},
	{-2245.78, -150.15, 35.57},
	{-2427.68, -135.93, 35.56},
	{-2508.02, -116.00, 25.91},
	{-2507.95, 17.15, 26.10},
	{-2363.44, -2.61, 35.51},
	{-2672.04, -63.73, 4.56},
	{-2664.74, -218.79, 4.61},
	{-2692.48, 280.11, 4.64},
	{-2732.06, 421.79, 4.60},
	{-1999.5015,96.6074, 27.6875},
	{1721.2460,-1720.8604, 13.5433},
	{1381.9146,-1802.9962, 13.5469},
	{1394.5167,-1765.7505, 13.5469},
	{547.3615,-1499.2080, 14.5036}
};
static const Float:bandos[60][3]=
{
	{2233.0774,1475.2439,1008.7850},
	{2233.0815,1476.0844,1008.7850},
	{2233.0876,1476.8563,1008.7850},
	{2242.8633,1476.5896,1008.8050},
	{2242.2935,1474.9698,1008.8050},
	{2241.7361,1473.3971,1008.8050},
	{2244.4163,1473.3989,1008.8050},
	{2244.9553,1474.9136,1008.8050},
	{2245.2385,1475.7191,1008.8050},
	{2245.9319,1477.2651,1008.8050},
	{2246.6765,1478.8392,1008.8050},
	{2247.3647,1480.2955,1008.8050},
	{2240.2263,1466.0715,1008.8050},
	{2240.0969,1464.3121,1008.8050},
	{2239.9758,1462.6632,1008.8050},
	{2239.9646,1460.7588,1008.8050},
	{2240.0850,1459.1825,1008.8050},
	{2240.2317,1457.3335,1008.8050},
	{2242.6799,1458.4329,1008.8050},
	{2242.5483,1460.0923,1008.8050},
	{2242.4939,1462.4752,1008.8050},
	{2242.6262,1464.2798,1008.8050},
	{2242.7603,1466.1064,1008.8050},
	{2241.5342,1450.1553,1008.8050},
	{2242.3086,1447.7734,1008.8050},
	{2245.0100,1447.6300,1008.8050},
	{2244.4626,1449.3169,1008.8050},
	{2243.9109,1451.0253,1008.8050},
	{2233.0776,1446.6803,1008.7850},
	{2233.0820,1447.5133,1008.7850},
	{2233.0862,1448.3518,1008.7850},
	{2257.4321,1450.1003,1008.8250},
	{2257.9380,1448.5487,1008.8250},
	{2258.4634,1446.9368,1008.8250},
	{2259.2690,1445.0492,1008.8250},
	{2259.9658,1443.5535,1008.8250},
	{2260.7292,1441.9319,1008.8250},
	{2262.6479,1443.7881,1008.8250},
	{2261.9199,1445.3485,1008.8250},
	{2260.8752,1447.7039,1008.8250},
	{2260.3955,1449.1791,1008.8250},
	{2259.8262,1450.9192,1008.8250},
	{2258.5652,1457.5267,1008.8250},
	{2258.4287,1459.2351,1008.8250},
	{2258.2988,1460.8838,1008.8250},
	{2258.2830,1462.4269,1008.8250},
	{2258.4055,1464.1061,1008.8250},
	{2258.5430,1465.9584,1008.8250},
	{2256.0105,1465.9784,1008.8250},
	{2255.8953,1464.4044,1008.8250},
	{2255.7607,1462.5662,1008.8250},
	{2255.7773,1460.7660,1008.8250},
	{2255.9106,1459.0460,1008.8250},
	{2256.0439,1457.3485,1008.8250},
	{2259.9385,1472.6371,1008.8250},
	{2260.4741,1474.1526,1008.8250},
	{2261.0583,1475.8008,1008.8250},
	{2258.6958,1476.6913,1008.8250},
	{2258.0996,1475.0142,1008.8250},
	{2257.5776,1473.5343,1008.8250}
};
new WSCM[64] = "NONE",
    CodeCheckDostup[24],
	xFinka;

enum Mode_Data
{
	CFG_Name[50],
	CFG_PASS_SERVER,
	RESTART_ETAPE
};

new
	Mode[Mode_Data];
	
enum rInfo
{
	rID,
	rName[MAX_PLAYER_NAME+1],
	Float:radX,
	Float:radY,
	Float:radZ,
	Float:radA,
	rObj,
	Text3D: radText,
	radArea
}
new RadarInfo[MAX_RADARS][rInfo], OWNABLERADAR;
new GLS[36];
new
	bitprice,
	bitamount;
new adddonate;
new Weather;

new HealSG[94];
new amybank;
new Text3D:bittext;
new demorgan;
new Float:GunPos[47][3] =
{
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.35999924, 1001.59997559},
	{295.00001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{294.90001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.33999924, 1001.59997559},
	{295.20001221, -39.33999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.20999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559}
};
//------------------------------------------------------------------------------
const MAX_MINE_OBJECT = 35;
new Bar_CP[MAX_BARSs] = {-1, ...};
new ScrapCP;
new Yakydzapick;
new Zek_CP = -1;
new RingCP = -1;
new Reklam;
new CaptureDef = -1;
new CaptureAtac = -1;
new CaptureDefKill;
new CaptureAtacKill;
new CaptureTime[2];
new CaptureZone = -1;
new HealExitPickup = -1;
new EnterBankPickup;
new ExitBankPickup;
//----------------COUNT------------------------------
new OWNABLEHOUSES,
	TOTAL_WAREHOUSES,
	OWNABLEBIZES,
	GANGZONES,
	TOTAL_FAMILYS;
//----------------COUNT------------------------------
new ARENDCARS;
new Binko_CP = -1;
new HideMapZone;
new ZavodPutCP[8];
new ZavodClotherCP[6];
static const FuelName[4][7] = { "Diesel", "A-92", "A-95", "A-98" };
//--------------------------------------
new Inc_CP[3] = -1;
new bool:RepairVehicleStatus[MAX_PLAYERS],
	RepairVehicleActor[MAX_PLAYERS][4] = {{-1, ...}, ...};
static const Float:CoordsRepairVehicle[][3] = {
	{-837.4872, 1629.7141, 27.3887},
	{-1985.3345, 587.0827, 35.5000},
	{-1987.9779, -39.6849, 35.6260},
	{-1781.1832, -603.8986, 16.8407},
	{-9.3753, -1544.6251, 3.5243},
	{1010.0450, -1357.6993, 13.5883},
	{1394.8033, -1164.0570, 24.0168},
	{1839.2080, 812.1641, 11.0701},
	{2846.5886, 1401.9969, 11.4165},
	{2054.8440, 2625.1570, 11.2851},
	{161.9641, 1133.8613, 15.1284},
	{645.8422, -499.5731, 16.5585},
	{1394.8033, -1164.0570, 24.0168},
	{-1537.8805, 603.9349, 7.3880},
	{1372.7007, -1771.3696, 14.0457}
};

stock LogoStrOne(string[])
{
    new result[300];

    for (new i = 0; i < 1; i++)
    {
        result[i] = string[i];
    }
    return result;
}
stock NameStrOne(string[], size)
{
    new result[300];

    for (new i = 0; i < size; i++)
    {
        result[i] = string[i];
    }
    return result;
}
stock strDel(dest[], ...)
{
    new
        n = ((numargs() - 1) << 2),
        arg_start,
        arg_addr,
        arg_pos,
        arg_len
    ;

    #emit ADDR.pri      dest
    #emit ADD.c     4
    #emit STOR.S.pri        arg_start

    for(new arg_end = (arg_start + n); arg_end != arg_start; arg_start += 4)
    {
        #emit LOAD.S.pri    arg_start
        #emit LOAD.i
        #emit STOR.S.pri    arg_addr
        #emit PUSH.s        arg_addr
        #emit PUSH.c        4
        #emit SYSREQ.c      strlen
        #emit INC.pri
        #emit STOR.S.pri    arg_len
        #emit STACK         8

        REPEAT:

        #emit PUSH.c        0
        #emit PUSH.c        true
        #emit PUSH.s        arg_addr
        #emit PUSH.adr      dest
        #emit PUSH.c        16
        #emit SYSREQ.c      strfind
        #emit STACK         20
        #emit STOR.S.pri    arg_pos

        if(arg_pos != -1)
        {
            #emit LOAD.S.pri    arg_pos
            #emit LOAD.S.alt    arg_len
            #emit ADD
            #emit DEC.pri
            #emit PUSH.pri
            #emit PUSH.s        arg_pos
            #emit PUSH.adr      dest
            #emit PUSH.c        12
            #emit SYSREQ.c      strdel
            #emit STACK         16
            #emit JUMP          REPEAT
        }
    }
    return 1;
}
stock LoadPickupRepairVehicle()
{
	for(new i; i < sizeof CoordsRepairVehicle; i++)
	{
		CreateDynamic3DTextLabel(!"Место проведеня ремонта\n\n{ffffff}Посигнальте, чтобы начать ремонт", 0xFFFF00FF, CoordsRepairVehicle[i][0], CoordsRepairVehicle[i][1], CoordsRepairVehicle[i][2], 10.0000);
		CreateDynamicPickup(3096, 23, CoordsRepairVehicle[i][0], CoordsRepairVehicle[i][1], CoordsRepairVehicle[i][2]);
	}
}
new Text3D:NarkoText[5];

new Text3D:FactoryText[3];
new FactoryFerum;
new FactoryMats;
new FactoryFuel;
new HEnter[MAX_HOUSES] = {-1, ...};
new HEnterCP[MAX_HOUSES] = {-1, ...},
	HExitPickup[MAX_HOUSES] = {-1, ...},
	Text3D:HExit3DLabel[MAX_HOUSES] = {Text3D:-1, ...};
new HouseIcon[MAX_HOUSES] = {-1, ...};
new Text3D:House3DText[MAX_HOUSES] = {NONE_3D_TEXT, ...};
new HouseGaragePickup[MAX_HOUSES] = {-1, ...};
new Text3D:HouseGarage3DText[MAX_HOUSES] =  {NONE_3D_TEXT, ...};
new BizCP[MAX_BIZ] = {-1, ...};
new BizCPSphere[MAX_BIZ] = {-1, ...};
new Text3D:Biz3DText[MAX_BIZ] = {NONE_3D_TEXT, ...};
new Text3D:Biz3DText2[MAX_BIZ] = {NONE_3D_TEXT, ...};
new BizPick[MAX_BIZ];
new BizIcon[MAX_HOUSES] = {-1, ...};
new Text3D:CarText[MAX_OWNABLECARS] = {Text3D:-1, ...},
	Text3D:CarTextTrunk[MAX_OWNABLECARS] = {Text3D:-1, ...};
//=============================[ MAX_VEHICLES ]=============================//
new AttachVehicle[MAX_VEHICLES][SLOT_ATTACH_EDIT+10] = {{-1, ...}, ...}; //60-65 edit
enum pTwinTurbo
{
	bool:Engine,
	bool:cStatus
};
new TwinTurbo[MAX_VEHICLES][pTwinTurbo],
	Streamer_Types[STREAMER_MAX_TYPES] =
{
	STREAMER_TYPE_MAP_ICON,
	STREAMER_TYPE_3D_TEXT_LABEL,
	STREAMER_TYPE_PICKUP,
	STREAMER_TYPE_CP,
	STREAMER_TYPE_RACE_CP,
	STREAMER_TYPE_ACTOR,
	STREAMER_TYPE_AREA,
	STREAMER_TYPE_OBJECT
};
new bool:UseTurbo[MAX_PLAYERS],
	bool:UseStripe[MAX_PLAYERS];
new VehicleState[MAX_VEHICLES];
new CarScrap[MAX_VEHICLES] = {-1,...};
new VehicleSeat[MAX_VEHICLES][10];
new Text3D:TaxiText[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new UnEngine[MAX_VEHICLES];
new Float:VehicleHealth[MAX_VEHICLES];
enum VehTemp
{
	vCena,
	vModel,
	Float:vPos_X,
	Float:vPos_Y,
	Float:vPos_Z,
	Float:vPos_A,
	bool:vEngine,
	vLights,
	vJob,
	vTeam,
	vRank,
	vLock,
	vPlayer,
	Float:VehicleMilage,
	Float:Fuel
}
new vTemp[MAX_VEHICLES][VehTemp];
//-----------------------------------------------------

enum gInfo
{
	gOrg,
	gObID,
	Float:gClose_X,
	Float:gClose_Y,
	Float:gClose_Z,
	Float:gClose_A,
	Float:gOpen_X,
	Float:gOpen_Y,
	Float:gOpen_Z,
	bool:gOpen,
	gForGateid,
	bool:gCreated,
	gWorld
}
new GateInfo[][gInfo] =
{
	{TEAM_ARMYSF, 988, -1524.347656, 481.746613, 7.186400, 180.000000, -1529.820068, 481.746613, 7.186399, false,-1,false,-1},
	{TEAM_ARMY,976, 2720.25, -2508.42, 12.09,90.0,2720.25, -2516.92, 12.09,false,-1,false,-1},
	{TEAM_ARMY,976,  2720.10, -2409.59, 12.09,90.0, 2720.10, -2418.17, 12.09,false,-1,false,-1},
	{TEAM_LSPD,11327, 1589.33, -1638.27, 14.86,270.09, 1596.37, -1638.27, 14.86,false,-1,false,-1},
	{TEAM_ARMYLV,19313,  134.9800, 1941.5500, 21.7700,0.00,121.8900, 1941.5500, 21.7700,false,-1,false,-1},
	{TEAM_ARMYLV,19313,  285.98, 1822.27, 20.10,270.00,285.9800, 1833.4900, 20.1000,false,-1,false,-1},
    {TEAM_SFPD,19313, -1630.27258, 688.22009, 8.80640, 360.00000, -1644.25256, 688.22009, 8.80640,false,-1,false,-1},
    {TEAM_SFPD,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false},
	{TEAM_RCPD,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false,11},
	{TEAM_LVPD,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false,12},
	{TEAM_ARMYLV, 988, 78.341499, 1917.810913, 17.770300, 90.0, 78.341499, 1912.190795, 17.770299,false,10,false},
	{TEAM_ARMYLV, 988, 78.341499, 1923.300781, 17.770321, 90.0, 78.341499, 1928.991699, 17.770320,false,9,false},
	{TEAM_ARMYLV, 988, -12.598400, 2034.224487, 17.738600, 180.00, -6.958378, 2034.224487, 17.738599, false, -1, false, 0},
	{TEAM_ARMYLV, 988, -46.010799, 1982.251831, 17.738600, -90.000000, -46.010799, 1987.871826, 17.738599, false, -1, false, 0}
};
new gGate[ sizeof GateInfo ];
enum gfinfo
{
	Float:gfPos_X,
	Float:gfPos_Y,
	Float:gfPos_Z
}
new GoFuel[][gfinfo] =
{
	{1004.4177,-940.2440,42.1797},
	{1944.3726,-1773.2112,13.3906},
	{300.1025,-172.2511,1.3289},
	{653.9818,-569.3989,16.3359},
	{612.1644,-1511.0835,14.9344},
	{1378.2557,456.6682,19.8868},
	{2202.4253,2473.4390,10.8203},
	{1598.4116,2199.1228,10.8203},
	{611.7775,1694.6161,6.9922},
	{2145.7642,2748.0129,10.8203},
	{-1328.3707,2677.3887,50.0625},
	{-1472.3184,1864.2222,32.6328},
	{-98.7537,-1166.8053,2.5993},//dirka
	{22.4816,-2646.1042,40.4618},
	{-1606.3723,-2713.6147,48.5335},
	{-2249.9185,-2558.6838,31.8938},
	{-1666.6174,408.5915,7.1797},
	{-2022.0974,155.9591,28.8359},
	{-2261.1799,-2.6144,35.1719},
	{-2405.7432,974.6953,45.2969},
	{2631.1118,1106.5516,10.8130},
	{70.6129,1219.1520,18.8123},
	{-2572.0552,2404.1240,14.8748},
	{1841.9207,634.7351,10.8451},
	{1020.9476,1351.1295,10.8250},
	{-2115.1206,-724.0286,32.1945},
	{1031.3010,-1865.9609,14.1385},
	{1381.1553,18.7641,34.2854}
};
new Text3D:FuelText[sizeof(GoFuel)];
enum brInfo
{
	brOrg,
	Float:brPos_X,
	Float:brPos_Y,
	Float:brPos_Z,
	Float:brPos_A,
	bool:brOpen,
	brForBarrierID,
	Float:brData[6]
}
new BarrierInfo[][brInfo] =
{
    {TEAM_NONE, 		-2669.5933, 2121.8530, 54.3169, 0.000000, false, -1},
    {TEAM_NONE, 		-2686.4246, 2141.3667, 54.3169, 0.000000, false, -1},
	{TEAM_NONE, 		73.637833, -1535.661255, 5.043927, 90.000000, false, -1},
    {TEAM_NONE, 		31.207512, -1527.308350, 4.993926, 90.000000, false, -1},
	{TEAM_NONE, 		1640.88, -1147.39, 22.91, 0.00, false, -1},
	{TEAM_MERIALS,    	1521.98, -1282.21, 13.45,0.00, false, -1},
	{TEAM_LSPD,    		1544.71, -1630.79, 12.36,-90.00, false, -1},
	{TEAM_ARMYLV, 		1152.94, 1362.98, 9.76, 360.00, false, -1},
	{TEAM_ARMYLV, 		347.99, 1799.77, 17.37, 34.51, false, -1},
	{TEAM_RM, 			997.12, 1752.23, 9.74, 269.34, false, -1},
	{TEAM_RM, 			997.09, 1707.56, 9.74, 269.34, false, -1},
	{TEAM_NONE, 		2478.63, 2516.68, 9.79, 90.07, false, -1},
	{TEAM_NONE, 		2523.94, 2424.26, 9.79, 179.62, false, -1},
	{TEAM_NONE, 		-75.67, -349.27, 0.40, 89.15, false, -1},
	{TEAM_MEDICLV, 		1637.15, 1829.90, 9.63, 269.13, false, -1},
	{TEAM_MEDICLV, 		1577.66, 1829.97, 9.63, 270.69, false, -1},
	{TEAM_LVPD, 		2238.18, 2450.46, 9.80, -90.00, false, -1},
	{TEAM_RADIOLV, 		2617.45, 1169.65, 9.65, 268.97, false, -1},
	{TEAM_NONE, 		428.671,615.601,17.941, 34.000, false, -1},
	{TEAM_NONE, 		423.585,599.148,17.941, 213.997, false, -1},
	{TEAM_NONE, 		-144.712,482.638,11.078, 165.997, false, -1},
	{TEAM_NONE, 		-128.746,490.219,10.383, 345.992, false, -1},
	{TEAM_NONE, 		1792.316772, 800.371582, 10.961740, 90.0, false, -1},
	{TEAM_NONE, 		1800.232666, 822.460571, 10.511731, 90.0, false, -1},
	{TEAM_SFPD,			-1701.43, 687.59, 23.88, 90.00, false, -1},
	{TEAM_SFPD,			-1572.20, 658.84, 6.08, 270.00, false, -1},
    {TEAM_NONE, 		-2154.069580, -745.830383, 31.006355, 90.00, false, -1},
    {TEAM_NONE, 		-2154.069580, -967.349243, 31.006355, 90.00, false, -1},
    {TEAM_NONE, 		-2049.517822, -217.969101, 34.188900, 0.00, false, -1},
    {TEAM_FBI, 		-2436.851563, 495.453094, 28.953100, 205.000000, false, -1},
    {TEAM_NONE, 			1811.663818, -1886.248169, 12.369600, 90.000000, false, -1}
};
new gBarrier[sizeof(BarrierInfo)];
enum doorInfo // 0 просто, с +-
{
	dTypeMove, 
	dOrg,
	dObID,
	Float:dPos[4],
	Float:dPosEnd[4],
	bool:dStatus,
    dWorld,
	dInterior,
	Float:dSpeed,
	dName[47],

}

new DoorInfo[][doorInfo] =
{
	//LSPD
	{0, TEAM_FBI, 19303, {-759.968140, 2345.674805, 1401.285767, 89.0}, {-759.942443, 2347.126220, 1401.285766,89.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-750.836426, 2358.453857, 1401.285767, 90.0}, {-750.836425, 2360.155517, 1401.285766,90.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-750.836426, 2358.453857, 1404.714844, 89.0}, {-750.806030, 2360.165527, 1404.714843,89.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-750.836426, 2345.633057, 1401.285767, 90.0}, {-750.836425, 2347.343261, 1401.285766,90.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-750.836426, 2345.633057, 1404.714844, 89.0}, {-750.806823, 2347.314208, 1404.714843,89.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-743.016174, 2358.445313, 1401.285767, 90.0}, {-743.016174, 2356.974609, 1401.285766,90.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-743.016174, 2358.445313, 1404.714844, 89.0}, {-743.041687, 2356.985107, 1404.714843,89.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-743.016174, 2345.633057, 1401.285767, 90.0}, {-743.016174, 2344.171630, 1401.285766,90.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-743.016174, 2345.633057, 1404.714844, 89.0}, {-743.042053, 2344.181640, 1404.714843,89.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_FBI, 19303, {-752.556213, 2344.091797, 1401.285767, 180.0}, {-754.045776, 2344.091796, 1401.285766,180.0}, false, -1,-1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},

	{1, TEAM_LSPD, 1495, {-476.120453, 2204.334717, 1600.070313, 180.000000}, {-476.059692, 2204.298095, 1600.070312, 180.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-465.676300, 2194.274658, 1600.070313, 90.000000}, {-465.752593, 2194.211181, 1600.070312, 90.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-460.397339, 2206.019287, 1600.070313, 0.000000}, {-460.459320, 2206.056884, 1600.070312, 0.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-480.859741, 2202.000000, 1600.070313, 90.000000}, {-480.894195, 2201.912841, 1600.070312, 90.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-469.717407, 2189.848633, 1600.070313, 180.000000}, {-469.646972, 2189.799072, 1600.070312, 180.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-469.717407, 2186.706299, 1600.070313, 180.000000}, {-469.656707, 2186.666503, 1600.070312, 180.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-460.303162, 2187.655762, 1600.070313, 180.000000}, {-460.250976, 2187.583251, 1600.070312, 180.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-460.303162, 2178.173340, 1600.070313, 180.000000}, {-460.240570, 2178.106445, 1600.070312, 180.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-472.156158, 2200.668701, 1600.070313, 90.000000}, {-472.227996, 2200.595947, 1600.070312, 90.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	{1, TEAM_LSPD, 1495, {-472.180695, 2191.246826, 1600.070313, 90.000000}, {-472.200073, 2191.196533, 1600.070312, 90.0}, false, 2, -1, 0.25, "{A19D9D}Открыть\n{FFFFFF}H"},
	//RCPD
	{1, TEAM_RCPD, 1495, {-476.120453, 2204.334717, 1600.070313, 180.000000}, {-476.059692, 2204.298095, 1600.070312, 180.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-465.676300, 2194.274658, 1600.070313, 90.000000}, {-465.752593, 2194.211181, 1600.070312, 90.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-460.397339, 2206.019287, 1600.070313, 0.000000}, {-460.459320, 2206.056884, 1600.070312, 0.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-480.859741, 2202.000000, 1600.070313, 90.000000}, {-480.894195, 2201.912841, 1600.070312, 90.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-469.717407, 2189.848633, 1600.070313, 180.000000}, {-469.646972, 2189.799072, 1600.070312, 180.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-469.717407, 2186.706299, 1600.070313, 180.000000}, {-469.656707, 2186.666503, 1600.070312, 180.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-460.303162, 2187.655762, 1600.070313, 180.000000}, {-460.250976, 2187.583251, 1600.070312, 180.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-460.303162, 2178.173340, 1600.070313, 180.000000}, {-460.240570, 2178.106445, 1600.070312, 180.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-472.156158, 2200.668701, 1600.070313, 90.000000}, {-472.227996, 2200.595947, 1600.070312, 90.0}, false, 3, -1, 0.25, "None"},
	{1, TEAM_RCPD, 1495, {-472.180695, 2191.246826, 1600.070313, 90.000000}, {-472.200073, 2191.196533, 1600.070312, 90.0}, false, 3, -1, 0.25, "None"},
	//SFPD
	{1, TEAM_SFPD, 1495, {-476.120453, 2204.334717, 1600.070313, 180.000000}, {-476.059692, 2204.298095, 1600.070312, 180.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-465.676300, 2194.274658, 1600.070313, 90.000000}, {-465.752593, 2194.211181, 1600.070312, 90.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-460.397339, 2206.019287, 1600.070313, 0.000000}, {-460.459320, 2206.056884, 1600.070312, 0.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-480.859741, 2202.000000, 1600.070313, 90.000000}, {-480.894195, 2201.912841, 1600.070312, 90.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-469.717407, 2189.848633, 1600.070313, 180.000000}, {-469.646972, 2189.799072, 1600.070312, 180.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-469.717407, 2186.706299, 1600.070313, 180.000000}, {-469.656707, 2186.666503, 1600.070312, 180.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-460.303162, 2187.655762, 1600.070313, 180.000000}, {-460.250976, 2187.583251, 1600.070312, 180.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-460.303162, 2178.173340, 1600.070313, 180.000000}, {-460.240570, 2178.106445, 1600.070312, 180.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-472.156158, 2200.668701, 1600.070313, 90.000000}, {-472.227996, 2200.595947, 1600.070312, 90.0}, false, 4, -1, 0.25, "None"},
	{1, TEAM_SFPD, 1495, {-472.180695, 2191.246826, 1600.070313, 90.000000}, {-472.200073, 2191.196533, 1600.070312, 90.0}, false, 4, -1, 0.25, "None"},
	//LVPD	
	{1, TEAM_LVPD, 1495, {-476.120453, 2204.334717, 1600.070313, 180.000000}, {-476.059692, 2204.298095, 1600.070312, 180.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-465.676300, 2194.274658, 1600.070313, 90.000000}, {-465.752593, 2194.211181, 1600.070312, 90.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-460.397339, 2206.019287, 1600.070313, 0.000000}, {-460.459320, 2206.056884, 1600.070312, 0.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-480.859741, 2202.000000, 1600.070313, 90.000000}, {-480.894195, 2201.912841, 1600.070312, 90.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-469.717407, 2189.848633, 1600.070313, 180.000000}, {-469.646972, 2189.799072, 1600.070312, 180.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-469.717407, 2186.706299, 1600.070313, 180.000000}, {-469.656707, 2186.666503, 1600.070312, 180.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-460.303162, 2187.655762, 1600.070313, 180.000000}, {-460.250976, 2187.583251, 1600.070312, 180.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-460.303162, 2178.173340, 1600.070313, 180.000000}, {-460.240570, 2178.106445, 1600.070312, 180.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-472.156158, 2200.668701, 1600.070313, 90.000000}, {-472.227996, 2200.595947, 1600.070312, 90.0}, false, 5, -1, 0.25, "None"},
	{1, TEAM_LVPD, 1495, {-472.180695, 2191.246826, 1600.070313, 90.000000}, {-472.200073, 2191.196533, 1600.070312, 90.0}, false, 5, -1, 0.25, "None"},
	{0, TEAM_BANK, 1495, {-2690.8259, 807.4251, 1499.9404, 0.00}, {-2692.1459, 807.4251, 1499.9404, 0.0}, false, -1, -1, 3.0, "{A19D9D}[ ALT - для сотрудников ]"},
	//
	{0, TEAM_LICENSERS, 19859, {1534.893311, 1273.516724, 11.067500, 0.0}, {1533.693311, 1273.516724, 11.067500, 0.0}, false, 5, -1, 3.0, "None"},
	{0, TEAM_MERIALS, 1495, {1490.244873, -1282.072144, 112.792702, 90.0}, {1490.24, -1283.57, 112.79, 90.0}, false, 2, -1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MERIALS, 1495, {1995.655518, 1138.021729, 1037.639526, 0.0}, {1994.364013, 1138.021728, 1037.639526, 0.0}, false, 2, -1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MERIALS, 1495, {1995.673462, 1109.162598, 1037.639526, 0.0}, {1994.362792, 1109.162597, 1037.639526, 0.0}, false, 2, -1, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	//
	{0, TEAM_NONE, 1569, {-2095.651611, 509.676605, 1486.664429, 270.0}, {-2095.651611, 510.966583, 1486.664428, 270.0}, false, 5, -1, 3.0, "{FFFFFF}Служебный вход\n\n{F9AD43}Открыть \'ALT\'"},
	{0, TEAM_LICENSERS, 19859, {1525.322876, 1273.516724, 11.067504, 0.0}, {1524.122876, 1273.516724, 11.067504, 0.0}, false, 5, -1, 3.0, "None"},
	{0, TEAM_LICENSERS, 19859, {1543.593750, 1296.593262, 11.067504, 270.0}, {1543.593750, 1297.793262, 11.067504, 270.0}, false, 5, -1, 3.0, "None"},
	{0, TEAM_LICENSERS, 19859, {1538.090576, 1297.344849, 11.067504, 0.0}, {1536.890576, 1297.344849, 11.067504, 0.0}, false, 5, -1, 3.0, "None"},
	{0, TEAM_MEDICLV, 3089, {657.187988, -1247.457275, 1024.733154, 00.00}, {655.717346, -1247.457275, 1024.733154, 0.0}, false, 2,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MEDICLV, 3089, {658.161193, -1262.722045, 1024.733154, 00.00}, {656.700561, -1262.722045, 1024.733154, 0.0}, false, 2,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MEDICLV, 3089, {676.304321, -1262.856567, 1024.733154, 180.0}, {677.784851, -1262.856567, 1024.733154, 180.0}, false, 2,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MEDICSF, 3089, {657.187988, -1247.457275, 1024.733154, 00.00}, {655.717346, -1247.457275, 1024.733154, 0.0}, false, 3,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MEDICSF, 3089, {658.161193, -1262.722045, 1024.733154, 00.00}, {656.700561, -1262.722045, 1024.733154, 0.0}, false, 3,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	{0, TEAM_MEDICSF, 3089, {676.304321, -1262.856567, 1024.733154, 180.0}, {677.784851, -1262.856567, 1024.733154, 180.0}, false, 3,3, 3.0, "{FB8F4C}Открыть\n\n{FFFFFF}H"},
	// SMI LS
	{0, TEAM_RADIO, 3089, {2137.968262, 2511.630371, 1025.276367, 90.0}, {2137.968261, 2510.409179, 1025.276367, 90.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2132.879395, 2514.468262, 1025.276367, 180.0}, {2134.100585, 2514.468261, 1025.276367, 180.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2128.218506, 2514.470215, 1025.276367, 180.0}, {2129.439697, 2514.470214, 1025.276367, 180.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2115.410156, 2504.860352, 1025.276367, 180.0}, {2116.631347, 2504.860351, 1025.276367, 180.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2115.410156, 2514.470215, 1025.276367, 180.0}, {2116.621337, 2514.470214, 1025.276367, 180.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2106.558594, 2507.943359, 1025.276367, 90.0}, {2106.558593, 2506.722167, 1025.276367, 90.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2109.057617, 2519.400391, 1024.815918, 180.0}, {2110.268798, 2519.400390, 1024.815917, 180.0}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {2098.798584, 2487.779785, 1024.815918, 224.999802}, {2099.655273, 2488.636474, 1024.815917, 224.999801}, false, 1, 157, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {1511.430542, 1946.574707, 1026.397217, 90.0}, {1511.430541, 1945.353515, 1026.397216, 90.0}, false, 1, 158, 3.0, "None"},
	{0, TEAM_RADIO, 3089, {1511.430542, 1952.786499, 1026.397217, -90.0}, {1511.430541, 1953.997680, 1026.397216, -90.0}, false, 1, 158, 3.0, "None"},
	
	// SMI LV
	{0, TEAM_RADIOLV, 3089, {2137.968262, 2511.630371, 1025.276367, 90.0}, {2137.968261, 2510.409179, 1025.276367, 90.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2132.879395, 2514.468262, 1025.276367, 180.0}, {2134.100585, 2514.468261, 1025.276367, 180.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2128.218506, 2514.470215, 1025.276367, 180.0}, {2129.439697, 2514.470214, 1025.276367, 180.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2115.410156, 2504.860352, 1025.276367, 180.0}, {2116.631347, 2504.860351, 1025.276367, 180.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2115.410156, 2514.470215, 1025.276367, 180.0}, {2116.621337, 2514.470214, 1025.276367, 180.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2106.558594, 2507.943359, 1025.276367, 90.0}, {2106.558593, 2506.722167, 1025.276367, 90.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2109.057617, 2519.400391, 1024.815918, 180.0}, {2110.268798, 2519.400390, 1024.815917, 180.0}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {2098.798584, 2487.779785, 1024.815918, 224.999802}, {2099.655273, 2488.636474, 1024.815917, 224.999801}, false, 2, 157, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {1511.430542, 1946.574707, 1026.397217, 90.0}, {1511.430541, 1945.353515, 1026.397216, 90.0}, false, 2, 158, 3.0, "None"},
	{0, TEAM_RADIOLV, 3089, {1511.430542, 1952.786499, 1026.397217, -90.0}, {1511.430541, 1953.997680, 1026.397216, -90.0}, false, 2, 158, 3.0, "None"},
	
	// SMI SF
	{0, TEAM_RADIOSF, 3089, {2137.968262, 2511.630371, 1025.276367, 90.0}, {2137.968261, 2510.409179, 1025.276367, 90.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2132.879395, 2514.468262, 1025.276367, 180.0}, {2134.100585, 2514.468261, 1025.276367, 180.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2128.218506, 2514.470215, 1025.276367, 180.0}, {2129.439697, 2514.470214, 1025.276367, 180.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2115.410156, 2504.860352, 1025.276367, 180.0}, {2116.631347, 2504.860351, 1025.276367, 180.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2115.410156, 2514.470215, 1025.276367, 180.0}, {2116.621337, 2514.470214, 1025.276367, 180.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2106.558594, 2507.943359, 1025.276367, 90.0}, {2106.558593, 2506.722167, 1025.276367, 90.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2109.057617, 2519.400391, 1024.815918, 180.0}, {2110.268798, 2519.400390, 1024.815917, 180.0}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {2098.798584, 2487.779785, 1024.815918, 224.999802}, {2099.655273, 2488.636474, 1024.815917, 224.999801}, false, 3, 157, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {1511.430542, 1946.574707, 1026.397217, 90.0}, {1511.430541, 1945.353515, 1026.397216, 90.0}, false, 3, 158, 3.0, "None"},
	{0, TEAM_RADIOSF, 3089, {1511.430542, 1952.786499, 1026.397217, -90.0}, {1511.430541, 1953.997680, 1026.397216, -90.0}, false, 3, 158, 3.0, "None"}
};

new dDoor[sizeof(DoorInfo)];
enum bgInfo
{
	bgGunid,
	bgAmmo[5],
	bgGPrice,
	bgPrice
}
new CostGiveMoney[MAX_PLAYERS];
new BuyGunInfo[11][bgInfo] =
{
	{1, 	{1, 0, 0, 0, 0}, 			0, 		60},
	{5, 	{1, 0, 0, 0, 0}, 			0, 		120},
	{8, 	{1, 0, 0, 0, 0}, 			0, 		300},
	{46, 	{1, 0, 0, 0, 0}, 			0, 		240},
	{17, 	{1, 2, 3, 4, 5}, 			0, 		50},
	{24, 	{50, 75, 100, 125, 150}, 	900, 	100},
	{25,	{50, 75, 100, 125, 150}, 	1100, 	120},
	{29, 	{100, 150, 200, 250, 300}, 	1300, 	200},
	{30, 	{100, 150, 200, 250, 300}, 	1400, 	250},
	{31, 	{100, 150, 200, 250, 300}, 	1450, 	280},
	{33, 	{50, 100, 150, 200, 250}, 	1510, 	300}
};
new Float:CarPounds[14][4] =
{
    {1611.3163,-1140.9514,1679.1689,-1073.6880},
    {1603.515625,-1089.84375,1806.640625,-1039.0625},
	{1566.40625,-1041.015625,1755.859375,-1007.8125},
	{1751.953125,-1041.015625,1792.96875,-1021.484375},
	{1755.859375,-1021.484375,1783.203125,-1011.71875},
	{1617.1875,-1140.625,1685.546875,-1091.796875},
	{1615.234375,-1095.703125,1685.546875,-1085.9375},
	{1578.125,-1056.640625,1609.375,-1039.0625},
	{1591.796875,-1068.359375,1607.421875,-1056.640625},
	{1599.609375,-1076.171875,1607.421875,-1066.40625},
	{1825.6003,-1147.3049,1547.0156,-1006.9152},
	{2480.0544,2482.7708,2534.8032,2543.1504},
	{2399.3401,2525.1711,2479.9580,2557.8350},
	{2458.6350,2482.7695,2479.3079,2500.5684}
};
new SEAT_SYSTEM_AREAS[2],
	help_id[MAX_PLAYERS];
enum seatinfo
{
	Float:Sx,
	Float:Sy,
	Float:Sz,
	Float:Aa
};

static const SEAT_SYSTEM_POS[][seatinfo] =
{
	//Полиция новая
	{-466.8706,2198.2207,1601.0879,-96.2315},
	{-466.7608,2202.4924,1601.0879,-96.0},
	{-468.1943,2190.6765,1601.0879,360.0},
	{-468.8845,2190.6765,1601.0879,360.0},
	{-468.4259,2188.9282,1601.0898,180.0},
	{-467.6705,2188.9282,1601.0898,180.0},
	{-467.0096,2188.9282,1601.0898,180.0},
	{-470.1731,2183.3760,1601.0898,225.5548},
	{-467.9887,2183.3806,1601.0898,-90.0},
	{-475.9600,2192.5593,1601.0898,-90.0},
	{-477.5327,2192.5632,1601.0898,270.0},
	{-476.8985,2195.0366,1601.0898,180.0},
	{-475.4872,2191.2385,1601.0898,-30.0},
	{-479.5884,2191.1143,1601.0898,270.0},
	{-458.9076,2209.4297,1601.0859,360.0},
	{-457.2297,2209.4536,1601.0859,360.0},
	{-457.2651,2211.7693,1601.0859,180.0},
	{-458.8352,2211.6760,1601.0859,180.0},
	{-458.8753,2225.2576,1601.0859,-180.0},
	{-457.3227,2225.1711,1601.0859,-180.0},
	{-457.3354,2222.8882,1601.0859,360.0},
	{-458.9830,2222.9192,1601.0859,360.0},
	{-462.8026,2206.9001,1601.0859,360.0},
	{-463.5026,2206.8628,1601.0859,360.0},
	{-464.2313,2206.8628,1601.0859,360.0},
	{-476.5695,2207.8359,1601.0947,360.0},
	{-477.2571,2207.8359,1601.0947,360.0},
	{-478.0418,2207.8367,1601.0947,360.0},
	{-478.7602,2207.8381,1601.0947,360.0},
	{-479.4343,2207.8379,1601.0947,360.0},
	{-479.4205,2209.0393,1601.0947,360.0},
	{-478.7849,2209.0378,1601.0947,360.0},
	{-478.0733,2209.0530,1601.0947,360.0},
	{-477.3272,2209.0393,1601.0947,360.0},
	{-476.5752,2209.0383,1601.0947,360.0},
	{-476.6061,2210.2842,1601.0947,360.0},
	{-477.2795,2210.2385,1601.0947,360.0},
	{-478.0536,2210.2378,1601.0947,360.0},
	{-478.7401,2210.2393,1601.0947,360.0},
	{-479.4264,2210.2383,1601.0947,360.0},
	//Больница
	{-1318.3417,21.0172,1601.0859,81.6747},
	{-1318.3411,20.0371,1601.0859,82.5585},
	{-1318.3401,19.0038,1601.0859,80.3089},
	{-1318.3430,17.9302,1601.0859,82.1327},
	{-1318.3418,17.0294,1601.0859,80.8232},
	{-1318.3425,15.9728,1601.0859,85.1537},
	{-1318.3409,14.9573,1601.0859,81.0241},
	{-1318.8937,27.0994,1601.0979,84.9892},
	{-1318.8933,25.7675,1601.0979,84.6197},
	{-1320.6290,28.6220,1601.0979,284.9306},
	{-1319.7896,29.6285,1601.0979,169.3891},
	{-1322.0007,30.7811,1601.0979,232.1126},
	{-1318.3413,9.4630,1601.0859,81.2337},
	{-1318.3401,8.3976,1601.0859,81.2577},
	{-1318.3430,7.4056,1601.0859,83.1700},
	{-1318.3417,6.4439,1601.0859,81.8281},
	{-1318.3422,5.4149,1601.0859,79.4662},
	{-1318.3436,4.4566,1601.0859,83.0253},
	{-1318.3448,3.3938,1601.0859,84.5357},
	{-1318.5466,-2.7670,1601.0979,71.5162},
	{-1319.8229,-2.7586,1601.0979,301.8746},
	{-1319.2006,-5.1612,1601.0979,6.4781},
	{-1329.3148,7.6078,1601.0889,90.0884},
	{-1334.8037,7.6043,1601.0889,92.0247},
	{-1334.7456,16.5302,1601.0889,87.0909},
	{-1329.2629,16.5246,1601.0889,91.1971},
	{-1344.3643,16.5272,1601.0889,90.4490},
	{-1338.9866,16.5438,1601.0889,87.0351},
	{-1335.1154,13.0879,1601.0859,354.9133},
	{-1337.6379,13.0383,1601.0859,356.8496},
	{-1337.6271,10.9995,1601.0859,173.1133},
	{-1335.1929,10.9793,1601.0859,174.2542},
	{-1353.4728,10.8000,1601.0859,352.6789},
	{-1354.8430,10.7932,1601.0859,356.0694},
	{-1354.8398,13.0721,1601.0859,175.7798},
	{-1353.4786,13.0730,1601.0859,176.0369},
	{-1353.4795,19.0992,1601.0859,353.8672},
	{-1354.8455,19.1001,1601.0859,355.6911},
	{-1354.8312,21.3819,1601.0859,175.0881},
	{-1353.4843,21.3709,1601.0859,174.0919},
	{-1354.8018,5.1273,1601.0859,175.5315},
	{-1353.4875,5.1291,1601.0859,174.5353},
	{-1353.5409,2.8515,1601.0859,354.3107},
	{-1354.8235,2.8517,1601.0859,353.9411},
	{-1351.0001,26.5556,1601.0919,84.6560},
	{-1355.1270,27.9257,1601.0919,183.8947},
	{-1356.9272,28.0993,1601.0919,262.2616},
	{-1351.0013,30.4578,1601.0919,83.5122},
	{-1355.0883,32.1785,1601.0919,197.2000},
	{-1356.9304,32.3180,1601.0919,262.0934},
	{-1352.4381,-2.4434,1601.0919,172.2303},
	{-1351.3690,-2.4424,1601.0919,172.1741},
	{-1350.3479,-2.4442,1601.0919,174.6246},
	{-1352.2032,-6.2920,1601.0919,91.1324},
	{-1353.4506,-6.2578,1601.0919,294.5439},
	{-1355.1294,-3.7436,1601.0919,182.0556},
	{-1356.9276,-3.5791,1601.0919,266.3759},
	{-1352.7837,-8.6517,1601.0919,4.4741},
	{-1350.6627,0.9639,1601.0859,86.5737},
	{-1350.6624,2.0711,1601.0859,80.9899},
	{-1350.6628,3.0639,1601.0859,84.1794},
	{-1350.6638,4.0969,1601.0859,85.4890},
	{-1350.6625,5.1102,1601.0859,82.4118},
	{-1350.6611,6.0411,1601.0859,82.1547},
	{-1350.6630,7.1190,1601.0859,82.5243},
	{-1350.6635,17.2722,1601.0859,81.5041},
	{-1350.6608,18.3023,1601.0859,84.5812},
	{-1350.6608,19.2633,1601.0859,86.7183},
	{-1350.6591,20.3232,1601.0859,84.1554},
	{-1350.6616,21.2785,1601.0859,84.0992},
	{-1350.6619,22.3041,1601.0859,79.9697},
	{-1350.6638,23.3073,1601.0859,85.5535},
	{-1344.4104,7.6072,1601.0889,87.1966},
	{-1338.6211,7.6074,1601.0889,88.4499},
	{-2057.4275,2662.5461,1498.7651,92.4898},
	{-2072.5027,2662.5964,1498.7651,266.3680},
	{-2052.2087,2664.7334,1500.9767,90.6332},
	{-2052.2410,2668.6936,1500.9767,93.4532},
	{-2052.2087,2673.2471,1500.9767,86.8731},
	{-2052.2573,2676.7971,1500.9767,90.9465},
	{-2059.2041,2682.1130,1501.1035,181.1874},
	{-2071.4055,2682.1711,1501.1086,180.8505},
	{-2077.8584,2677.2463,1500.9767,269.1881},
	{-2077.8367,2673.4421,1500.9767,268.2481},
	{-2077.8584,2668.7153,1500.9767,272.6349},
	{-2077.8186,2664.9199,1500.9767,275.1416},
	{-2066.2188,2674.8052,1500.9670,1.9591},
	{-2063.7134,2674.8237,1500.9670,359.1390},
	{-2068.0747,2670.6509,1500.9670,267.3315},
	{-2063.4387,2687.2922,1501.0114,88.3092},
	{-2063.4326,2689.0349,1501.0171,93.0091},
	{-2063.3186,2697.6870,1500.9766,90.8157},
	{-2063.3420,2701.6309,1500.9767,88.9356},
	{-2066.4656,2707.5627,1500.9767,274.4307},
	{-2066.4402,2709.2356,1500.9767,257.5106},
	{-2071.0881,2702.3376,1500.9766,357.7783},
	{-2069.1980,2707.4236,1500.9805,87.9956},
	{-2072.3289,2707.0867,1500.9805,264.7173},
	{-2071.0693,2703.9197,1500.9766,90.0673},
	{-2058.6841,2707.5212,1500.9766,174.6682},
	{-2058.6897,2703.8418,1500.9766,352.6432},
	{-2060.9380,2701.9387,1500.9766,276.5024},
	{-2060.9441,2703.6448,1500.9766,258.6422},
	{-2055.9844,2705.9670,1500.9766,178.7415},
	{-2054.0500,2705.6143,1500.9766,91.9474},
	{-2060.9136,2697.5815,1500.9766,262.1124},
	{-2060.9399,2695.8162,1500.9766,278.4059},
	{-2058.5352,2695.5154,1500.9805,180.6683},
	{-2058.6736,2692.2698,1500.9805,357.0533},
	{-2057.0635,2693.8503,1500.9805,87.2942},
	{-2054.2791,2692.9548,1500.9766,359.8733},
	{-2052.9912,2692.9585,1500.9766,354.2334},
	{-2052.4202,2690.2549,1500.9766,355.4867},
	{-2050.4709,2693.9380,1500.9766,91.3676},
	{-2052.9272,2695.0029,1500.9766,182.5486},
	{-2054.2939,2695.0896,1500.9766,174.5702},
	{-2068.7693,2690.9534,1501.0243,88.2058},
	{-2068.7805,2696.6553,1500.9766,92.2794},
	{-2070.9875,2695.1572,1500.9805,178.4468},
	{-2072.3467,2695.1475,1500.9805,181.8936},
	{-2073.6907,2695.3020,1500.9766,181.1685},
	{-2075.0608,2693.8206,1500.9766,271.4562},
	{-2073.6404,2692.0481,1500.9766,358.3954},
	{-2072.4119,2692.1292,1500.9766,3.6988},
	{-2070.9919,2692.1670,1500.9766,2.7588},
	//Банк
	{-2693.5850,804.0917,1500.9688,268.8689},
	{-2686.6924,799.1106,1501.0259,179.1095},
	{-2686.6072,793.9982,1501.0259,0.8446},
	{-2674.1150,794.0876,1501.0238,1.1579},
	{-2674.0935,799.1278,1501.0238,177.5662},
	{-2683.9451,809.0971,1500.9688,180.6763},
	{-2676.4595,809.1057,1500.9688,179.3994},
	{-2668.9709,809.2889,1500.9688,181.2794},
	{-2665.0186,805.8173,1500.9688,90.4118},
	{-2665.0776,799.2978,1500.9688,84.7717},
	{-2665.1338,792.5804,1500.9688,86.0251},
	{-2654.2834,800.6328,1500.9728,336.0915},
	{-2654.5762,802.7427,1500.9728,230.2072},
	{-2652.8401,802.5717,1500.9728,52.8589},
	{-2653.9722,792.0073,1500.9738,92.9892},
	{-2654.0149,793.1967,1500.9738,86.0957},
	{-2653.9976,794.4031,1500.9738,90.7958},
	{-2657.6299,794.3018,1500.9738,271.1092},
	{-2657.6992,793.2300,1500.9738,271.1092},
	{-2657.6377,791.9526,1500.9738,272.3626},
	{-2655.8013,805.2926,1500.9728,269.9775},
	{-2654.3057,805.2916,1500.9728,269.0375},
	{-2652.8376,805.2196,1500.9728,269.3509},
	{-2652.7659,807.2693,1500.9728,270.6042},
	{-2655.7664,807.2498,1500.9728,269.9774},
	{-2663.6299,811.6951,1500.9688,183.6650},
	{-2681.1680,818.6574,1500.9707,50.0152},
	{-2683.3774,821.2565,1500.9707,178.0009},
	{-2676.0173,816.8318,1500.9707,50.0385},
	{-2676.2837,819.2120,1500.9707,175.6629},
	{-2670.4272,818.9778,1500.9707,228.0135},
	{-2668.6702,818.8135,1500.9707,56.3053},
	{-2668.7029,816.8666,1500.9707,149.3427},
	{-2666.2612,814.7369,1500.9707,91.2072},
	//правительство
	{1994.9618,1102.2811,1038.6843,356.7990},
	{1996.9562,1102.2815,1038.6843,356.6437},
	{1998.7500,1102.2985,1038.6843,357.6538},
	{2002.2504,1104.1162,1038.6843,81.6462},
	{1998.7200,1106.0907,1038.6843,170.3971},
	{1996.8427,1106.0313,1038.6843,179.8386},
	{1994.9193,1106.0958,1038.6843,179.4888},
	{1991.2620,1113.3726,1038.6882,273.8942},
	{1991.2814,1114.9927,1038.6882,272.3789},
	{1991.2621,1132.5085,1038.6882,274.2438},
	{1991.2899,1134.1901,1038.6882,273.3113},
	{1987.8716,1142.4884,1038.6882,275.2151},
	{1987.8727,1143.5354,1038.6882,271.5240},
	{1992.2212,1139.1704,1038.6882,1.1023},
	{1991.1102,1139.1755,1038.6882,0.9469},
	{2004.0697,1141.4380,1038.6882,94.8766},
	{2004.0660,1144.4678,1038.6882,91.3798},
	{2000.9705,1143.4717,1038.6982,273.0986},
	{2000.9595,1142.5038,1038.6982,273.0986},
	{1996.4487,1147.7543,1038.6982,47.3975},
	{1995.5842,1147.7661,1038.6982,311.7008},
	{1995.8796,1150.6567,1038.6882,134.2765},
	//СМИ
	{-207.6315,1341.8110,1500.9788,181.3997},
	{-207.5164,1344.8932,1500.9788,358.8930},
	{-199.0293,1334.9362,1500.9788,269.1105},
	{-195.1335,1331.3098,1500.9823,273.9788},
	{-189.5421,1331.1632,1500.9823,104.0055},
	{-185.3515,1334.6813,1500.9788,90.3638},
	{-177.0305,1337.3638,1500.9788,359.9780},
	{-176.9752,1342.3977,1500.9788,181.8581},
	{-176.3520,1321.2124,1500.9888,0.5161},
	{-173.6424,1321.1659,1500.9888,1.1428},
	{-173.5621,1323.2734,1500.9888,0.1793},
	{-176.3484,1323.0828,1500.9888,0.1793},
	{-176.4288,1325.2229,1500.9888,0.3477},
	{-173.5993,1325.2953,1500.9888,359.2393},
	{-177.6250,1315.7168,1500.9888,224.8650},
	{-175.0172,1316.5818,1500.9888,312.5757},
	{-190.9861,1333.4534,1500.9823,204.4415},
	{-191.0896,1336.5474,1500.9823,342.9362},
	{-193.9646,1336.3262,1500.9823,24.2966},
	{-193.8572,1333.4756,1500.9823,161.2011},
	{-195.1984,1338.6049,1500.9823,276.6538},
	{-199.0293,1334.9362,1500.9788,269.1105},
	{-185.3530,1334.6813,1500.9788,90.3638},
	{-209.5785,1315.8187,1500.9888,0.3946},
	{-211.6852,1317.6647,1500.9888,268.5870},
	{-207.6581,1325.1835,1507.6281,272.2438},
	{-207.5859,1318.9081,1507.6270,270.0505},
	{-203.6230,1307.2788,1507.6416,358.4115},
	{-198.3401,1307.4397,1507.6416,283.2108},
	{-194.5429,1307.3259,1507.6416,83.1573},
	{-190.5260,1307.3118,1507.6416,274.4374},
	{-186.8858,1307.3112,1507.6416,87.8573},
	{-181.8569,1307.4370,1507.6416,0.6049},
	{-174.6543,1303.4330,1507.6692,0.4173},
	{-174.0945,1307.1216,1507.6692,93.0395},
	{-174.0721,1308.4802,1507.6692,92.2443},
	{-174.9118,1310.6234,1507.6692,194.5603},
	{-176.0843,1308.4719,1507.6692,268.3394},
	{-176.0110,1307.1038,1507.6692,263.9528},
	{-209.3879,1304.4447,1507.6592,89.2368},
	{-209.5183,1305.8198,1507.6592,90.1768},
	{-210.5679,1308.0991,1507.6592,168.0292},
	{-211.6062,1305.8553,1507.6592,270.0316},
	{-211.6220,1304.4248,1507.6592,270.3214},
	{-210.2797,1297.6603,1507.6692,177.7661},
	{-205.3184,1300.3325,1507.6770,177.4527},
	{-205.3562,1296.8512,1507.6770,179.1877},
	{-200.9476,1300.3524,1507.6770,179.9594},
	{-202.1382,1298.1035,1507.6770,44.4532},
	{-189.6395,1299.4836,1507.6692,49.1532},
	{-181.1057,1297.2567,1507.6770,359.4778},
	{1286.7871,1257.9496,1501.4446,270.7400},
	{1286.9519,1259.0729,1501.4446,268.5676},
	{1311.9211,1266.1979,1501.0850,176.9502},
	{1312.8167,1257.9292,1501.4446,85.4353},
	{1311.1794,1258.1483,1501.4446,276.7978},
	{1136.2168,-1313.4524,1019.4266,86.5420},
	{1124.2358,-1301.2222,1019.4119,167.4156},
	{1160.2675,-1307.7512,1019.4139,353.5351},
	{1161.5634,-1307.7534,1019.4139,355.1580},
	{1162.9611,-1307.7537,1019.4160,353.6476},
	{1162.9215,-1309.7764,1019.4366,174.7320},
	{1161.5592,-1309.7784,1019.4366,176.4111},
	{1160.1932,-1309.7760,1019.4366,176.7807},
	{1160.2428,-1311.8062,1019.4366,352.5150},
	{1161.5793,-1311.8037,1019.4139,355.7046},
	{1162.8589,-1311.8026,1019.4160,355.1341},
	{1162.8766,-1313.8331,1019.4160,175.0214},
	{1161.4160,-1313.8575,1019.4139,175.0777},
	{1160.2308,-1313.8302,1019.4139,175.7605},
	{1153.3185,-1318.8204,1019.4139,355.3853},
	{1151.9861,-1318.8199,1019.4139,353.8748},
	{1150.6752,-1318.8225,1019.4139,356.7512},
	{1163.8397,-1294.5349,1019.4429,175.3855},
	{639.6194,-1252.5067,1024.3918,88.2736},
	{660.5119,-1248.0835,1024.3918,99.5104},
	{661.7143,-1260.0275,1024.4025,359.1802},
	{672.2171,-1261.1982,1024.3898,350.8390},
	{1543.1919,1103.9862,1033.8420,264.1510},
	{1543.2411,1106.2540,1033.8420,265.7738},
	{1541.0267,1106.1937,1033.8420,85.3717},
	{1541.1099,1103.9041,1033.8420,88.5612},
	{1541.1667,1099.7755,1033.8420,85.7974},
	{1541.2025,1097.5541,1033.8420,86.1670},
	{1543.2742,1099.7288,1033.8420,263.1547},
	{1543.3160,1097.6709,1033.8420,263.0984},
	{1532.6499,1097.5995,1033.8420,266.0783},
	{1532.7040,1099.8573,1033.8420,267.7010},
	{1532.7830,1104.0338,1033.8420,267.1868},
	{1532.6212,1106.1837,1033.8420,268.8095},
	{1530.6226,1106.2130,1033.8420,86.8407},
	{1530.6738,1103.9364,1033.8420,91.9103},
	{1530.6107,1099.7714,1033.8420,85.1293},
	{1530.5903,1097.5658,1033.8420,85.1855},
	{1527.9868,1081.2531,1033.8420,269.2949},
	{1522.8346,1081.2760,1033.8420,83.8794},
	{1522.8347,1093.0416,1033.8420,87.6955},
	{1527.9882,1093.0002,1033.8420,265.0999},
	{1545.7462,1081.2747,1033.8420,86.5870},
	{1550.8984,1092.9987,1033.8420,265.2355},
	{1545.7455,1092.9656,1033.8420,86.5777},
	{1562.7045,1079.9401,1033.8420,85.3421},
	{1562.7023,1078.5278,1033.8420,87.2784},
	{1555.6422,1109.5750,1033.8420,83.4059},
	{1555.6437,1111.0873,1033.8420,84.9164},
	{1510.3081,1079.9293,1033.8420,266.1136},
	{1510.3032,1078.5006,1033.8420,268.0498},
	{1529.4449,1063.2816,1033.8420,265.8003},
	{1529.4432,1061.9354,1033.8420,267.7365},
	{1529.4434,1059.7543,1033.8420,262.7794},
	{1529.4427,1058.1899,1033.8420,268.4756},
	{1543.3600,1058.3333,1033.8420,92.6850},
	{1543.3826,1059.6991,1033.8420,86.7878},
	{1543.3834,1061.9421,1033.8420,82.0641},
	{1543.3833,1063.4388,1033.8420,82.0079},
	{1542.0238,1050.2928,1033.8420,85.7354},
	{1542.0234,1048.8182,1033.8420,87.8725},
	{1530.9623,1048.7632,1033.8420,260.1279},
	{1530.9637,1050.1621,1033.8420,267.9052},
	{1170.9265,-1337.7183,1019.4198,356.2634},
	{1169.0707,-1303.0797,1019.4160,177.2269},
	{1168.1678,-1303.0826,1019.4160,177.5402},
	{1166.9916,-1303.2217,1019.4160,174.7201},
	{1168.4250,-1318.8064,1019.4160,359.6867},
	{1167.0670,-1318.9265,1019.4160,3.1334},
	{1165.8439,-1318.8385,1019.4160,0.9400}
};
enum healinfo
{
	Float:hCP[3],
	Float:hBed[4],
	hInt,
	hWorld,
	hOwnerID,
	hID
}
new HealInfo[][healinfo] =
{
	//======== армия лс
	{{475.0580,881.4573,1500.9648}, {474.2541,882.6597,1501.7046,176.4830}, 2, 1},
	{{474.7939,878.9459,1500.9648}, {474.2385,880.2708,1501.7046}, 2, 1},
	{{474.8464,876.4988,1500.9648}, {474.2596,877.5931,1501.7046,177.7363}, 2, 1},
	{{469.3206,876.6762,1500.9648}, {469.6721,877.7086,1501.7046,178.3630}, 2, 1},
	{{468.8999,879.0249,1500.9648}, {469.6091,880.3200,1501.7046,176.4830}, 2, 1},
	{{469.1370,881.5439,1500.9648}, {469.7407,882.8210,1501.7046,172.4096}, 2, 1},
	{{665.2261,-1645.7203,871.2830}, {665.4257,-1644.4720,872.0491,360.9180}, 2, 1},
	{{665.2272,-1648.9058,871.2830}, {665.2230,-1647.4235,872.0491,360.9648}, 2, 1},
	{{665.2266,-1652.2651,871.2830}, {665.2241,-1650.9515,872.0491,360.5449}, 2, 1},
	{{665.2271,-1655.5231,871.2830}, {664.8909,-1654.2736,872.0491,360.7849}, 2, 1},
	{{665.2271,-1658.8093,871.2830}, {664.9766,-1657.5874,872.0491,360.0381}, 2, 1},
	{{665.2266,-1662.1066,871.2830}, {665.1637,-1660.6273,872.0491,360.9182}, 2, 1},
	//----- аримия лв
	{{1408.4559,2226.3911,1500.9758}, {1411.0278,2226.5242,1502.6790}, 2, 1},
	{{1408.4603,2229.4749,1500.9758}, {1411.0908,2229.6311,1501.7292}, 2, 1},
	{{1408.4614,2232.4238,1500.9758}, {1411.0118,2232.5901,1502.6790}, 2, 1},
	{{1408.4606,2235.4446,1500.9758}, {1411.3333,2235.5259,1501.7292,91.9787}, 2, 1},
	{{1405.9020,2235.4319,1500.9758}, {1403.1829,2235.4490,1502.6790}, 2, 1},
	{{1405.9017,2232.4692,1500.9758}, {1403.3075,2232.3398,1501.7292}, 2, 1},
	{{1405.9203,2229.4402,1500.9758}, {1403.2659,2229.3323,1502.6790}, 2, 1},
	{{1405.9016,2226.4155,1500.9758}, {1403.3746,2226.2559,1501.7292}, 2, 1},
	{{581.9430,1473.0494,1900.7980}, {582.0636,1471.6813,1901.3696,269.4877}, 2, 1},
	{{560.8146,1464.4045,1900.7980}, {560.7758,1465.9836,1901.3696,91.5853}, 2, 1},
	{{562.7275,1464.4045,1900.7980}, {562.5922,1465.5350,1901.3696,89.3919}, 2, 1},
	{{564.5573,1464.3945,1900.7980}, {564.4336,1465.8134,1901.3696,87.8252}, 2, 1},
	//------армия сф
	{{-245.8549,773.5187,1500.9608}, {-246.3846,772.4424,1501.7023,90.6452}, 2, 1},
	{{-246.1114,776.4058,1500.9608}, {-246.0742,775.0745,1501.7023,87.8252}, 2, 1},
	{{-245.9987,779.1506,1500.9608}, {-246.1480,778.0243,1501.7023,91.2718}, 2, 1},
	{{-253.2200,779.3099,1500.9608}, {-252.5794,778.1177,1501.7023,91.2719}, 2, 1},
	{{-252.9414,776.6205,1500.9608}, {-252.9280,775.2576,1501.7023,89.3918}, 2, 1},
	{{-253.1636,773.8773,1500.9608}, {-252.7694,772.4310,1501.7023,91.8986}, 2, 1},
	{{-257.6242,773.5765,1500.9608}, {-258.0037,772.4193,1501.7023,271.0}, 2, 1},
	{{-257.7185,776.6430,1500.9608}, {-258.2042,775.1196,1501.7023,271.0}, 2, 1},
	{{-257.4765,779.2451,1500.9608}, {-257.9967,777.8847,1501.7023,271.0}, 2, 1},
	{{-264.4723,779.1538,1500.9608}, {-264.2581,778.1091,1501.7023,271.0}, 2, 1},
	{{-264.6790,776.6020,1500.9608}, {-264.2261,775.1929,1501.7023,271.0}, 2, 1},
	{{-264.4290,773.7004,1500.9608}, {-264.1872,772.3896,1501.7023,271.0}, 2, 1},
	//Больница ЛС
	{{1172.6887,-1321.2982,1019.4198}, {1173.8040,-1321.2913,1020.1516,357.1938}, 2, 1},
	{{1172.6882,-1325.2946,1019.4198}, {1173.7703,-1325.2457,1020.1516,356.9429}, 2, 1},
	{{1172.6884,-1327.7837,1019.4198}, {1173.9479,-1327.8196,1020.1516,358.7439}, 2, 1},
	{{1172.6887,-1331.7935,1019.4198}, {1173.7963,-1331.8044,1020.1516,359.7070}, 2, 1},
	{{1172.6885,-1334.4177,1019.4198}, {1173.8689,-1334.3051,1020.1516,356.1581}, 2, 1},
	{{1172.6880,-1338.4117,1019.4198}, {1173.9248,-1338.3370,1020.1516,359.1660}, 2, 1},
	{{1167.2292,-1338.2488,1019.4328}, {1166.0342,-1338.1913,1020.1516,178.8329}, 2, 1},
	{{1167.2284,-1334.2716,1019.4388}, {1166.1112,-1334.1987,1020.1516,178.8560}, 2, 1},
	{{1167.2269,-1331.5552,1019.4388}, {1166.0276,-1331.5204,1020.1516,180.9472}, 2, 1},
	{{1167.2269,-1327.5594,1019.4388}, {1166.1130,-1327.7128,1020.1516,180.3437}, 2, 1},
	{{634.9568,-1265.8804,1024.3953}, {634.9429,-1266.9633,1025.1271,267.1423}, 2, 1},
	{{630.9718,-1265.8800,1024.3953}, {631.0143,-1266.9772,1025.1271,269.0457}, 2, 1},
	{{628.4539,-1265.8805,1024.3953}, {628.5046,-1267.1179,1025.1271,270.1347}, 2, 1},
	{{624.4891,-1265.8796,1024.3912}, {624.5866,-1267.0580,1025.1271,270.3463}, 2, 1},
	{{621.8549,-1265.8799,1024.3912}, {622.0068,-1267.0673,1025.1271,272.1249}, 2, 1},
	{{617.8741,-1265.8794,1024.3912}, {617.8881,-1266.8965,1025.1271,269.7042}, 2, 1},
	{{618.0135,-1260.4241,1024.4082}, {617.9693,-1259.1128,1025.1271,89.4337}, 2, 1},
	{{622.0015,-1260.4189,1024.4143}, {621.9385,-1259.3341,1025.1271,87.4515}, 2, 1},
	{{624.7184,-1260.4189,1024.4143}, {624.7662,-1259.1753,1025.1271,88.9160}, 2, 1},
	{{628.6884,-1260.4189,1024.4143}, {628.6650,-1259.2665,1025.1271,89.9812}, 2, 1},
	//Больница ЛВ
	{{1172.6887,-1321.2982,1019.4198}, {1173.8040,-1321.2913,1020.1516,357.1938}, 3, 2},
	{{1172.6882,-1325.2946,1019.4198}, {1173.7703,-1325.2457,1020.1516,356.9429}, 3, 2},
	{{1172.6884,-1327.7837,1019.4198}, {1173.9479,-1327.8196,1020.1516,358.7439}, 3, 2},
	{{1172.6887,-1331.7935,1019.4198}, {1173.7963,-1331.8044,1020.1516,359.7070}, 3, 2},
	{{1172.6885,-1334.4177,1019.4198}, {1173.8689,-1334.3051,1020.1516,356.1581}, 3, 2},
	{{1172.6880,-1338.4117,1019.4198}, {1173.9248,-1338.3370,1020.1516,359.1660}, 3, 2},
	{{1167.2292,-1338.2488,1019.4328}, {1166.0342,-1338.1913,1020.1516,178.8329}, 3, 2},
	{{1167.2284,-1334.2716,1019.4388}, {1166.1112,-1334.1987,1020.1516,178.8560}, 3, 2},
	{{1167.2269,-1331.5552,1019.4388}, {1166.0276,-1331.5204,1020.1516,180.9472}, 3, 2},
	{{1167.2269,-1327.5594,1019.4388}, {1166.1130,-1327.7128,1020.1516,180.3437}, 3, 2},
	{{634.9568,-1265.8804,1024.3953}, {634.9429,-1266.9633,1025.1271,267.1423}, 3, 2},
	{{630.9718,-1265.8800,1024.3953}, {631.0143,-1266.9772,1025.1271,269.0457}, 3, 2},
	{{628.4539,-1265.8805,1024.3953}, {628.5046,-1267.1179,1025.1271,270.1347}, 3, 2},
	{{624.4891,-1265.8796,1024.3912}, {624.5866,-1267.0580,1025.1271,270.3463}, 3, 2},
	{{621.8549,-1265.8799,1024.3912}, {622.0068,-1267.0673,1025.1271,272.1249}, 3, 2},
	{{617.8741,-1265.8794,1024.3912}, {617.8881,-1266.8965,1025.1271,269.7042}, 3, 2},
	{{618.0135,-1260.4241,1024.4082}, {617.9693,-1259.1128,1025.1271,89.4337}, 3, 2},
	{{622.0015,-1260.4189,1024.4143}, {621.9385,-1259.3341,1025.1271,87.4515}, 3, 2},
	{{624.7184,-1260.4189,1024.4143}, {624.7662,-1259.1753,1025.1271,88.9160}, 3, 2},
	{{628.6884,-1260.4189,1024.4143}, {628.6650,-1259.2665,1025.1271,89.9812}, 3, 2},
	//Больница СФ
	{{1172.6887,-1321.2982,1019.4198}, {1173.8040,-1321.2913,1020.1516,357.1938}, 3, 3},
	{{1172.6882,-1325.2946,1019.4198}, {1173.7703,-1325.2457,1020.1516,356.9429}, 3, 3},
	{{1172.6884,-1327.7837,1019.4198}, {1173.9479,-1327.8196,1020.1516,358.7439}, 3, 3},
	{{1172.6887,-1331.7935,1019.4198}, {1173.7963,-1331.8044,1020.1516,359.7070}, 3, 3},
	{{1172.6885,-1334.4177,1019.4198}, {1173.8689,-1334.3051,1020.1516,356.1581}, 3, 3},
	{{1172.6880,-1338.4117,1019.4198}, {1173.9248,-1338.3370,1020.1516,359.1660}, 3, 3},
	{{1167.2292,-1338.2488,1019.4328}, {1166.0342,-1338.1913,1020.1516,178.8329}, 3, 3,},
	{{1167.2284,-1334.2716,1019.4388}, {1166.1112,-1334.1987,1020.1516,178.8560}, 3, 3},
	{{1167.2269,-1331.5552,1019.4388}, {1166.0276,-1331.5204,1020.1516,180.9472}, 3, 3},
	{{1167.2269,-1327.5594,1019.4388}, {1166.1130,-1327.7128,1020.1516,180.3437}, 3, 3},
	{{634.9568,-1265.8804,1024.3953}, {634.9429,-1266.9633,1025.1271,267.1423}, 3, 3},
	{{630.9718,-1265.8800,1024.3953}, {631.0143,-1266.9772,1025.1271,269.0457}, 3, 3},
	{{628.4539,-1265.8805,1024.3953}, {628.5046,-1267.1179,1025.1271,270.1347}, 3, 3},
	{{624.4891,-1265.8796,1024.3912}, {624.5866,-1267.0580,1025.1271,270.3463}, 3, 3},
	{{621.8549,-1265.8799,1024.3912}, {622.0068,-1267.0673,1025.1271,272.1249}, 3, 3},
	{{617.8741,-1265.8794,1024.3912}, {617.8881,-1266.8965,1025.1271,269.7042}, 3, 3},
	{{618.0135,-1260.4241,1024.4082}, {617.9693,-1259.1128,1025.1271,89.4337}, 3, 3},
	{{622.0015,-1260.4189,1024.4143}, {621.9385,-1259.3341,1025.1271,87.4515}, 3, 3},
	{{624.7184,-1260.4189,1024.4143}, {624.7662,-1259.1753,1025.1271,88.9160}, 3, 3},
	{{628.6884,-1260.4189,1024.4143}, {628.6650,-1259.2665,1025.1271,89.9812}, 3, 3},
	{{1166.8461,-1293.7300,1019.4286}, {1165.6946,-1293.6831,1020.1516,177.1325}, 2, 1},
	{{1166.8452,-1289.7845,1019.4327}, {1165.5620,-1289.8551,1020.1516,177.0303}, 2, 1},
	{{1166.8462,-1287.0424,1019.4327}, {1165.6301,-1287.2201,1020.1516,178.7456}, 2, 1},
	{{1166.8455,-1283.0601,1019.4327}, {1165.5736,-1282.9172,1020.1516,179.3327}, 2, 1},
	{{1172.6873,-1283.4474,1019.4117}, {1173.9271,-1283.4998,1020.1516,0.5036}, 2, 1},
	{{1172.6865,-1287.4456,1019.4117}, {1173.8052,-1287.4023,1020.1516,2.0932}, 2, 1},
	{{1172.6874,-1289.9575,1019.4117}, {1173.9336,-1289.9407,1020.1516,359.6097}, 2, 1},
	{{1172.6881,-1293.9618,1019.4178}, {1173.8495,-1294.1090,1020.1516,357.3770}, 2, 1},
	{{1172.6876,-1296.5741,1019.4178}, {1173.7949,-1296.4060,1020.1516,356.3347}, 2, 1},
	{{1172.6885,-1300.5250,1019.4178}, {1173.8025,-1300.5476,1020.1516,359.8442}, 2, 1},
	{{1166.8461,-1293.7300,1019.4286}, {1165.6946,-1293.6831,1020.1516,177.1325}, 3, 2},
	{{1166.8452,-1289.7845,1019.4327}, {1165.5620,-1289.8551,1020.1516,177.0303}, 3, 2},
	{{1166.8462,-1287.0424,1019.4327}, {1165.6301,-1287.2201,1020.1516,178.7456}, 3, 2},
	{{1166.8455,-1283.0601,1019.4327}, {1165.5736,-1282.9172,1020.1516,179.3327}, 3, 2},
	{{1172.6873,-1283.4474,1019.4117}, {1173.9271,-1283.4998,1020.1516,0.5036}, 3, 2},
	{{1172.6865,-1287.4456,1019.4117}, {1173.8052,-1287.4023,1020.1516,2.0932}, 3, 2},
	{{1172.6874,-1289.9575,1019.4117}, {1173.9336,-1289.9407,1020.1516,359.6097}, 3, 2},
	{{1172.6881,-1293.9618,1019.4178}, {1173.8495,-1294.1090,1020.1516,357.3770}, 3, 2},
	{{1172.6876,-1296.5741,1019.4178}, {1173.7949,-1296.4060,1020.1516,356.3347}, 3, 2},
	{{1172.6885,-1300.5250,1019.4178}, {1173.8025,-1300.5476,1020.1516,359.8442}, 3, 2},
	{{1166.8461,-1293.7300,1019.4286}, {1165.6946,-1293.6831,1020.1516,177.1325}, 3, 3},
	{{1166.8452,-1289.7845,1019.4327}, {1165.5620,-1289.8551,1020.1516,177.0303}, 3, 3},
	{{1166.8462,-1287.0424,1019.4327}, {1165.6301,-1287.2201,1020.1516,178.7456}, 3, 3},
	{{1166.8455,-1283.0601,1019.4327}, {1165.5736,-1282.9172,1020.1516,179.3327}, 3, 3},
	{{1172.6873,-1283.4474,1019.4117}, {1173.9271,-1283.4998,1020.1516,0.5036}, 3, 3},
	{{1172.6865,-1287.4456,1019.4117}, {1173.8052,-1287.4023,1020.1516,2.0932}, 3, 3},
	{{1172.6874,-1289.9575,1019.4117}, {1173.9336,-1289.9407,1020.1516,359.6097}, 3, 3},
	{{1172.6881,-1293.9618,1019.4178}, {1173.8495,-1294.1090,1020.1516,357.3770}, 3, 3},
	{{1172.6876,-1296.5741,1019.4178}, {1173.7949,-1296.4060,1020.1516,356.3347}, 3, 3},
	{{1172.6885,-1300.5250,1019.4178}, {1173.8025,-1300.5476,1020.1516,359.8442}, 3, 3}
};
new Text3D:HealText[sizeof(HealInfo)] = {NONE_3D_TEXT, ...};
//====================================================
const MAX_LINEN_OBJECT = 11;
enum linenInfo
{
    bool: linenStatus,
    Float:linenPosX,
    Float:linenPosY,
    Float:linenPosZ,
    linenObject,
    Text3D: linenLabel,
    linenScore,
    linenSecund,
    linenTimer,
    linenStatusTimer
}
new LinenInfo[MAX_LINEN_OBJECT][linenInfo] =
{
    {true, -264.8821, -1393.6427, 11.4850},
    {true, -288.1983, -1396.1859, 12.2953},
    {true, -310.4437, -1416.4810, 15.0943},
    {true, -290.1641, -1416.4885, 13.1366},
    {true, -265.3173, -1415.6331, 10.4779},
    {true, -239.7378, -1413.1207, 8.4944},
    {true, -214.3640, -1411.2096, 6.3158},
    {true, -189.4012, -1408.9705, 4.3835},
    {true, -189.3507, -1388.5031, 5.8134},
    {true, -213.2893, -1389.5488, 7.4410},
    {true, -240.2519, -1391.7345, 10.5762}
};
const MAX_COTTON_OBJECT = 15;
enum cottonInfo
{
    bool:cottonStatus,
    Float:cottonPosX,
    Float:cottonPosY,
    Float:cottonPosZ,
    cottonObject,
    Text3D:cottonLabel,
    cottonScore,
    cottonSecund,
    cottonTimer,
    cottonStatusTimer
}
new CottonInfo[MAX_COTTON_OBJECT][cottonInfo] =
{
    {true, -225.0934, -1538.5936, 7.4748},
    {true, -244.9032, -1538.2950, 6.3041},
    {true, -266.6799, -1538.8119, 4.8946},
    {true, -290.5024, -1538.9031, 8.4306},
    {true, -313.8723, -1539.2168, 12.9345},
    {true, -315.5166, -1515.1859, 12.9114},
    {true, -292.6646, -1514.9556, 8.9786},
    {true, -268.7896, -1514.8757, 5.9850},
    {true, -247.3963, -1514.4823, 7.5544},
    {true, -226.8527, -1515.3866, 7.9063},
    {true, -225.5202, -1489.0884, 8.2394},
    {true, -246.1186, -1488.9327, 6.9872},
    {true, -268.2265, -1490.1191, 5.8928},
    {true, -291.3911, -1489.0592, 8.3316},
    {true, -315.4521, -1489.0024, 12.6806}
};
enum buymine_
{
	mName[7+1],
	mNameEng[7],
	mCost
};
static const BuyMineInfo[][buymine_] = {
	{"Камень", "Stone", 5000},
	{"Металл", "Metal", 10000},
	{"Бронза", "Bronze", 15000},
	{"Серебро", "Silver", 25000},
	{"Золото", "Gold", 60000},
	{"-", "-", 180000},
	{"-", "-",10000}
};
enum mineInfo
{
    Float:minePosX,
    Float:minePosY,
    Float:minePosZ,
    mineObject[2],
    Text3D:mineLabel,
    mineTimer,
    minePoroda,
	bool:mineStatus
}
new MineInfo[][mineInfo] =
{
    {619.2419, 941.3776, -37.2434},
    {661.9933, 936.9175, -37.8092},
    {629.8119, 947.0472, -35.2863},
    {632.1992, 953.4025, -34.3900},
    {644.1904, 955.9868, -34.1643},
    {646.9728, 941.4316, -35.6497},
    {584.6645, 949.8398, -30.6175},
    {563.0754, 944.5233, -29.5798},
    {497.0916, 917.7969, -29.9888},
    {508.1040, 924.3862, -28.4721},
    {508.4806, 938.4163, -27.7112},
    {518.5377, 944.4051, -25.3424},
    {528.7015, 958.9933, -22.2651},
    {532.1467, 969.0619, -21.7194},
    {518.7510, 969.2048, -23.7236},
    {488.4578, 896.8007, -30.5957},
    {470.8828, 871.3386, -28.9356},
    {496.9825, 850.9363, -29.4746},
    {510.7053, 835.5143, -26.7997},
    {514.9717, 822.7236, -24.7397},
    {518.4806, 809.1451, -23.2232},
    {506.6518, 805.2540, -21.9453},
    {500.1867, 792.5642, -21.6318},
    {517.2272, 790.6378, -21.3920},
    {565.3442, 770.0980, -16.5111},
    {582.7704, 791.1359, -29.9858},
    {692.9124, 799.8726, -30.2292},
    {716.2703, 816.9769, -30.2541},
    {713.0031, 833.7784, -30.2268},
    {719.2053, 847.8356, -29.9590},
    {686.4009, 788.7589, -29.9033},
    {561.9888, 800.1697, -28.0481},
    {615.9201, 777.2510, -31.8031},
    {648.7132, 777.1953, -29.9342},
    {663.9606, 788.6589, -29.9526}
};
enum autoBazar
{
    Float:autoBazarPosX,
    Float:autoBazarPosY,
    Float:autoBazarPosZ,
    Float:autoBazarZAngle,
    autoBazarType,
    Float:autoBazar2PosX,
    Float:autoBazar2PosY,
    Float:autoBazar2PosZ,
    Text3D:autoBazarLabel,
    Text3D:autoBazarLabel2,
	autoBazarObject[4],
	autoBazarArea,
	autoBazarCost,
	autoBazarCarID,
	autoBazarplayerid
}
new autoBazarInfo[][autoBazar] =
{
    {-2133.7847,-757.5536,32.0234,90.0,1},
    {-2133.2046,-760.4934,32.0234,90.0,1},
    {-2133.4939,-763.5651,32.0234,90.0,1},
    {-2133.6294,-766.5255,32.0234,90.0,1},
    {-2133.7976,-769.6598,32.0234,90.0,1},
    {-2133.4438,-772.4928,32.0234,90.0,1},
    {-2133.3384,-775.6821,32.0234,90.0,1},
    {-2133.0896,-778.6199,32.0234,90.0,1},
    {-2133.5383,-781.6777,32.0234,90.0,1},
    {-2133.5181,-784.6282,32.0234,90.0,1},
    {-2133.0618,-787.7657,32.0234,90.0,1},
    {-2133.6675,-790.4675,32.0234,90.0,1},
    {-2134.1685,-793.5968,32.0234,90.0,1},
    {-2134.0239,-796.6945,32.0234,90.0,1},
    {-2133.9241,-799.5476,32.0234,90.0,1},
    {-2133.3132,-802.7231,32.0234,90.0,1},
    {-2149.8672,-757.6962,32.0234,270.0,1},
    {-2149.7026,-760.7056,32.0234,270.0,1},
    {-2150.0671,-763.4629,32.0234,270.0,1},
    {-2150.1787,-766.7797,32.0234,270.0,1},
    {-2149.8430,-769.5658,32.0234,270.0,1},
    {-2149.7102,-772.5457,32.0234,270.0,1},
    {-2150.1123,-775.5920,32.0234,270.0,1},
    {-2150.0867,-778.6870,32.0234,270.0,1},
    {-2149.9207,-781.6351,32.0234,270.0,1},
    {-2150.4460,-784.5776,32.0234,270.0,1},
    {-2150.0620,-787.5490,32.0234,270.0,1},
    {-2149.3301,-790.8079,32.0234,270.0,1},
    {-2149.0452,-793.5135,32.0234,270.0,1},
    {-2149.4521,-796.5894,32.0234,270.0,1},
    {-2149.1191,-799.6165,32.0234,270.0,1},
    {-2148.6055,-802.5846,32.0234,270.0,1},
    {-2148.5591,-805.8231,32.0234,270.0,1},
    {-2148.9773,-808.6389,32.0234,270.0,1},
    {-2148.9690,-811.6345,32.0234,270.0,1},
    {-2148.9536,-814.8036,32.0234,270.0,1},
    {-2149.1687,-818.1646,32.0234,270.0,1},
    {-2148.6953,-821.4638,32.0234,270.0,1},
    {-2148.1729,-824.8022,32.0234,270.0,1},
    {-2148.3762,-828.0490,32.0234,270.0,1},
    {-2148.8687,-831.1489,32.0234,270.0,1},
    {-2148.8994,-834.4568,32.0234,270.0,1},
    {-2148.9795,-837.8000,32.0234,270.0,1},
    {-2149.3828,-841.1108,32.0234,270.0,1},
    {-2148.8235,-844.0851,32.0234,270.0,1},
    {-2148.8108,-847.5101,32.0234,270.0,1},
    {-2148.9412,-850.5940,32.0234,270.0,1},
    {-2149.1848,-853.8034,32.0234,270.0,1},
    {-2133.0254,-815.0574,31.5958,90.0,1},
    {-2132.6958,-818.0237,31.5993,90.0,1},
    {-2132.7507,-821.6968,31.5902,90.0,1},
    {-2132.5005,-825.0496,31.5951,90.0,1},
    {-2133.5005,-827.8699,31.5961,90.0,1},
    {-2133.2410,-831.3567,31.5764,90.0,1},
    {-2132.7981,-834.1809,31.5931,90.0,1},
    {-2132.7905,-837.5715,31.5955,90.0,1},
    {-2132.9663,-840.7917,31.5957,90.0,1},
    {-2134.0847,-843.8647,31.5991,90.0,1},
    {-2133.9458,-847.4242,31.5995,90.0,1},
    {-2133.8171,-850.4931,31.5986,90.0,1},
    {-2133.8945,-853.6144,31.5965,90.0,1},
    {-2125.8113,-815.0848,31.5946,270.0,1},
    {-2125.0237,-817.9536,31.5991,270.0,1},
    {-2124.2620,-821.3064,31.5990,270.0,1},
    {-2124.3130,-824.7056,31.5983,270.0,1},
    {-2124.7581,-827.9227,31.5993,270.0,1},
    {-2124.6248,-831.1382,31.5978,270.0,1},
    {-2123.8840,-834.4582,31.5867,270.0,1},
    {-2125.5986,-837.7907,31.5971,270.0,1},
    {-2124.4814,-840.9609,31.5986,270.0,1},
    {-2123.9492,-844.0683,31.5961,270.0,1},
    {-2124.2764,-847.1362,31.5978,270.0,1},
    {-2124.5750,-850.5481,31.5980,270.0,1},
    {-2124.9832,-853.7025,31.5993,270.0,1},
    {-2125.5747,-757.4848,31.5940,270.0,1},
    {-2125.6846,-760.1937,31.5950,270.0,1},
    {-2124.6802,-763.2191,31.5962,270.0,1},
    {-2124.7546,-766.5494,31.5977,270.0,1},
    {-2125.0969,-769.7847,31.5962,270.0,1},
    {-2124.9866,-772.8482,31.5991,270.0,1},
    {-2124.4126,-775.4781,31.5949,270.0,1},
    {-2124.3528,-778.7167,31.5971,270.0,1},
    {-2124.7014,-781.6792,31.5983,270.0,1},
    {-2125.0100,-784.6066,31.5977,270.0,1},
    {-2124.3083,-787.3878,31.5947,270.0,1},
    {-2124.5654,-790.5499,31.5930,270.0,1},
    {-2125.3350,-793.4932,31.5978,270.0,1},
    {-2124.6309,-796.6444,31.5975,270.0,1},
    {-2124.8667,-799.8256,31.5988,270.0,1},
    {-2124.6003,-802.5762,31.5983,270.0,1},
    {-2141.0378,-956.4103,31.6296,90.0,2},
    {-2141.0786,-936.3013,31.6199,90.0,2},
    {-2141.6599,-916.4990,31.6182,90.0,2},
    {-2141.4026,-896.4485,31.6288,90.0,2},
    {-2140.7351,-876.3362,31.6300,90.0,2}
};
enum pInfo
{
	pID,
	pOldRepl,
	pAllRepl,
	pLevel,
	pMoney,
	pExp,
	pWanted,
	pChestTime,
	pAdmin,
	pForumID,
	pVIP[2],
	pMember,
	//pLicense[9],
	pVirMoney,
	pWarns,
	pFWarns,
	pDemorgan,
	pRank,
	pContractTime,
	pSex,
	pRace,
	pBank[2],
	pSkin,
	pTelNum,
	pJob,
	pMuteTime,
	pFMuteTime,
	bool:pHeal,
	pHealTime,
	pBailPrice,
	pMaskON,
	pDCTime,
	pSkill[9],
	bool:pObmen,
	pBankPass,
	pDemogran,
	pBL,
	pZKP,
	Float:pArmour,
	pPrison,
	pHospCity,
	pCredit,
 	bool:pHungryShow,
	bool:pActionShow,
	pAdmAction,
	pDepChat,
	pTelWork,
	pNewsChat,
	pTelBalance,
	pRacia,
	pRabRacia,
	pKillShow,
	pVipChat,
	pFamilyChat,
	bool:pShowName,
	plveh,
	pTimeToLastWarn,
	pScutes,
	pMScutes,
	pVID,
	pType,
	pSlotGun[6],
	pHospital,
	bool:pShowCase,
	pVipTime,
	pBuildType,
	pZall,
	pPlayedTime,
	pTir,
	pTirUp,
	pFamilyMute,
	pFamilyMember,
	pDeposit,
	pDepositChar,
	pDepositChar2,
	pLastIP[16+1],
	pReputation,
	bool:pShowDokument,
	pCarSkill,
	pAWarns,
	pDataReg[12],
	pRespawnChat,
	pReferalReturn,
	bool:pInvLang,
	pInvItem[MAX_SLOT_INV],
	pInvItemAmount[MAX_SLOT_INV],
	pInvItemUID[MAX_SLOT_INV],
	bool:pInvItemLock[MAX_SLOT_INV],
	pInvItemLockTrade[10],
	pAcsCellLock[8],
	pTradeItem[10],
	pTradeItemAmount[10],
	pInvColor,
	pInvCell,
	pModSlot,
	Float:pInvPos_X,
	Float:pInvPos_Y,
	Float:pInvSize_X,
	Float:pInvSize_Y,
	pGoogle,
	pGoogleKey[17],
	bool:pInvBlack,
	pHouseMain,
	pGameStavka,
	pRewards[10],
	pRewardsComplete[10],
	pChestTimeDonate,
	pAccessAdmin,
	pRub,
	pTypeSpeed,
	pPrefixVip[11],
	pVipColor,
	pAcsUsed[6],
	pCorona,
	pRCBlock,
	pAPM,
	pAKick,
	pAWarn,
	pABan,
	pAMute,
	pAJail,
	pLastOnline,
	pDescription[150],
	bool:pGuardMode,
	pPromo[22],
	pCustomInterface[10],
	pAPass,
	Float:pVKCoins,
	pVKBoost[7],
	pFracBonus,
	pVKStatus,
	pInvWallet[12],
	Float:pDamageBoost[39],
	pPrefixAFK_0[64],
	pPrefixAFK_1[64],
	pPrefixAFK_2[64],
	bool:pNoConnect,
	pVkontakte,
	pStyleWalk,
	pLevelWalk,
	bool:pImprovement[11],
	pAddSlotCar,
	pAddSlotHouse,
	pStyleBoxing,
	pItemRandom,
	pCasinoTime,
	bool:pCasinoUsed,
	Float:pLast_Pos[4],
	Float:pPoint_Pos[4],
	pPhoneBackground,
	bool:pShowDescription,
	bool:pShowFamilyName,
	bool:pShowAddVIP,
	bool:pShowBattlePass,
	bool:pShowSetText,
	bool:pShowNotif,
	bool:pTypeCaptcha,
	pAntiFlood_present
};
new PI[MAX_PLAYERS][pInfo],
	bool:IsVerifyBankCode[MAX_PLAYERS char],
	bool:player_IsPreloadAnimation[MAX_PLAYERS],
    player_TypeClient[MAX_PLAYERS char] = {255, ...};
stock PreloadAnimationInfo(playerid)
{
	if(player_IsPreloadAnimation[playerid]) return 0;
	player_IsPreloadAnimation[playerid] = true;
	for(new i; i < sizeof(animInfo); i++)
	{
		ApplyAnimation(playerid, animInfo[i][animLib],"null",0.0,0,0,0,0,0);
	}
	return 1;
}
//pawnbots in mode
new
	bool:IsStartBot,
	AtHourBot[24],
	IsTimeUpdateBotOnLeave,
	IsCountBotOnTime,
	botCheckName[MAX_PLAYER_NAME] = "The_State",
	botMaxTick_Timer,
	botLastTick_Timer,
	botConnect_Timer;
//bonus new
enum playerbonus_data
{
	bCountMinute,
	bName[68],
	bInvItem[2],
	bInvItemAmount[2],
	bGiveSizeof
};
static const player_BonusInfo[][playerbonus_data] =
{
	{40, "{FFFFFF}2222 AZ-RUB и BonusLand VIP на 1 день", {5147, 5153}, {2222, 1}, 0},
	{80, "{FFFFFF}50 точильных камней + рука бесконечности с заточкой +15", {1167, 1796}, {50, 1}, 15},
	{120, "{FFFFFF}3 Видеокарты + 3 Сертификат на магическую удачу", {1136, 5028}, {3, 3}, 0},
	{160, "{FFFFFF}15 охлаждающих жидкостей + 15 смазок для разгона видеокарты", {1200, 1201}, {15, 15}, 0},
	{240, "{FFFFFF}Уникальный сертификат спутника \"Снеговик\"", {5111, 0}, {1, 0}, 0},
	{300, "{FFFFFF}Набор модификаций для транспорта SPORT+", {1469, 1478}, {1, 1}, 1},
	{450, "{FFFFFF}Уникальный сертификат спутника \"Леший\"", {5115, 0}, {1, 0}, 0},
	{550, "{FFFFFF}5555 AZ-RUB, 5.555.555 AZ-COINS", {5147, 5146}, {5555, 5555555}, 0},
	{660, "{FFFFFF}6666 AZ-RUB, 6.666.666 AZ-COINS", {5147, 5146}, {6666, 6666666} ,0},
	{770, "{FFFFFF}7777 AZ-RUB, 7.777.777 AZ-COINS", {5147, 5146}, {7777, 7777777}, 0},
	{1000, "{FFFFFF}Военный самолет \"Hydra\"", {520, 0}, {1, 0}, 0},
	{1110, "{FF69B4}Редчайший статус - BonusLand VIP ( НАВСЕГДА )", {5153, 0}, {365, 0}, 0}
};
new
	pTempBonusMinute[MAX_PLAYERS char],
	player_BonusMinute[MAX_PLAYERS],
	global_BonusMinute[MAX_PLAYERS],
	global_GetTimeIsFinal,
	bool:player_BonusStatus[MAX_PLAYERS][sizeof player_BonusInfo];
//cmd bonus
alias:topbonus("allbonus", "globalbonus", "topminute", "tophours", "adm", "arz");
CMD:topbonus(playerid) mysql_tquery(mysql, "SELECT `NickName`, `global_BonusMinute` FROM `accounts` ORDER BY global_BonusMinute DESC LIMIT 10;", "global_topminute", "d", playerid);
public: global_topminute(playerid)
{
	static const global_BonusInfo[10][] =
	{
		{"{FFFFFF}2222 AZ-RUB и BonusLand VIP на 1 день"},
		{"{FFFFFF}50 точильных камней + рука бесконечности с заточкой +15"},
		{"{FFFFFF}3 Видеокарты + 3 Сертификат на магическую удачу"},
		{"{FFFFFF}15 охлаждающих жидкостей + 15 смазок для разгона видеокарты"},
		{"{FFFFFF}Уникальный сертификат спутника \"Снеговик\""},
		{"{FFFFFF}Набор модификаций для транспорта SPORT+"},
		{"{FFFFFF}Уникальный сертификат спутника \"Леший\""},
		{"{FFFFFF}5555 AZ-RUB, 5.555.555 AZ-COINS"},
		{"{FFFFFF}6666 AZ-RUB, 6.666.666 AZ-COINS"},
		{"{FFFFFF}7777 AZ-RUB, 7.777.777 AZ-COINS"}
	};

	str_1 = "{FFFF00}Место\t{FFFF00}Игрок\t{FFFF00}Отыгранно\t{FFFF00}Приз\n";
	new count = 1;
	for(new i; i < sizeof global_BonusInfo; i++)
	{
		new nickname[MAX_PLAYER_NAME],
			global_minute;
		cache_get_string(i, !"NickName", nickname);
		cache_get_int(i, !"global_BonusMinute", global_minute);

		str_q2[0] = EOS;
		if(GetString(PN(playerid), nickname)) strcat(str_q2, "1.(ВЫ)");
		else f(str_q2, sizeof(str_q2), "%i.", count);

		str_2[0] = EOS, f(str_2, sizeof(str_2), "{00cc66}%s\t%s\t{00cc66}%i(минут)\t{00cc66}[%s{00cc66}]\n", str_q2, nickname, global_minute, global_BonusInfo[i]);
		strcat(str_1, str_2);
		count++;
	}
	str_q2[0] = EOS;
	if(global_GetTimeIsFinal-global_time > 1) f(str_q2, sizeof(str_q2), "До окончания состязания осталось %s", Convert(global_GetTimeIsFinal-global_time, false));
	else strcat(str_q2, "Состязание по \'TOP MINUTE\' окончено, происходит выдача призов!");
	SCMf(playerid, 0x0bda51FF, "%s", str_q2);
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Топ отыгранного времени", str_1, !"Дальше", !"Отмена");
}
alias:bonus("bonusminute", "minute", "hours", "playerbonus");
CMD:bonus(playerid)
{
	str_1 = "{00FF00}Награда\t{00FF00}Необходимо отыграть\t{00FF00}Статус\n";
	for(new i; i < sizeof player_BonusInfo; i++) 
	{
		f(str_1, sizeof(str_1), "%s\
			{00FF00}[%d] %s\t{FFFFFF}%i минут\t%s\n",\
			str_1, i + 1, player_BonusInfo[i][bName], player_BonusInfo[i][bCountMinute],\
				(player_BonusStatus[playerid][i] != false ? "{cccccc}Уже получено" : player_BonusMinute[playerid] < player_BonusInfo[i][bCountMinute] ? "{fe4e4e}Недоступно":"{00FF00}Можно получить"));
	}
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}Бонусная система | Вы отыграли: {FFFF00}%i минут", player_BonusMinute[playerid]);
	return SPD(playerid, 25113, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, !"Дальше", !"Отмена");
}
//
enum styleinfo
{
	name_style[25],
	count_style
};
static const StyleWalkInfo[][styleinfo] = {
	{"Стандартный", 0},
	{"Нормальная", 150},
	{"Нормальная 2", 200},
	{"Гангстерская", 300},
	{"Гангстерская 2", 400},
	{"Старческая", 600},
	{"Старческая 2", 700},
	{"Серьезная", 900},
	{"Женская", 1100},
	{"Женская 2", 1200},
	{"На пафосе", 1500},
	{"На пафосе 2", 1600},
	{"С выпрямленой рукой", 1800}
};
new bool:LarecOpen[MAX_PLAYERS];
new PlayerTag[MAX_PLAYERS][20];
enum tpInfo
{
	tpPickupModelID,
	tpName[25+20],
	Float:tpEnterPos_X,
	Float:tpEnterPos_Y,
	Float:tpEnterPos_Z,
	tpEnterWorld,
	tpEnterInt,
	Float:tpExitPos_X,
	Float:tpExitPos_Y,
	Float:tpExitPos_Z,
	Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
};
static const TeleportInfo[][tpInfo] =
{
	{1318, "", 2729.3306,-2451.4917,17.5937, 0, 0, 458.32, 864.39, 1500.96, 270.0, 2, 1},
	{1318, "", 455.93, 864.44, 1500.96, 1, 2, 2732.3691, -2451.3196, 17.5937, 0.0, 0, 0},

    {1318, "", 248.9158,1835.3197,17.6991, 0, 0, 1432.9978,2209.8962,1500.9758, 0.0, 2, 1},
    {1318, "", 1432.9978,2204.8962,1500.9758, 1, 2, 253.2157,1838.9449,17.6568, 0.0, 0, 0},
	
    {1318, "", -1373.0448,499.0130,11.1953, 0, 0, -264.9353,782.7507,1500.9608, 0.0, 2, 1},
    {1318, "", -268.0087,782.8901,1500.9608, 1, 2, -1367.9514,499.0130,11.1953, 0.0, 0, 0},

    {19132, "Мэрия", 1495.1898,-1279.9283,14.5749, 0, 0, 1498.6855, 1337.0830, 10.9790, 270.0, 220, 1},
	{19132, "Выход на улицу", 1495.9725, 1337.0320, 10.9785, 1, 220, 1495.1967, -1283.5261,14.5414,184.2417, 0, 0},
	//
	{19132, "FBI",-2456.1494,503.8981,30.0781, 0, 0, -745.2844,2330.0024,1404.5189, 89.4646, 2, 0},
	{19132, "Выход на улицу",-743.3647,2331.3530,1404.5189, 0, 2, -2453.7112,503.8358,30.0799, 272.1426, 0, 0},
	//
	{19132, "Полицейский участок LS",1554.866943, -1675.680297, 16.195312, 0, 0, -454.7704,2214.1042,1601.0859,90.0, 11, 2},
	{19132, "Выход на улицу",-450.6910,2216.4705,1601.0859, 2, 11, 1552.4646,-1675.4471,16.1953, 90.0, 0, 0},
	{19132, "Выход на улицу",-450.7023,2209.4355,1601.0859, 2, 11, 1552.4646,-1675.4471,16.1953, 90.0, 0, 0},
	{19132, "Полицейский участок LS",1568.5947,-1689.9709,6.2188, 0, 0, -451.3889,2175.6819,1601.0908, 90.00, 11, 2},
	{19132, "Выход в гараж", -448.1903, 2175.7390, 1601.0908, 2, 11, 1568.4929,-1692.5367,5.8906, 180.0, 0, 0},
	//
	{19132, "Полицейский участок RC",627.3923,-571.7623,17.9145, 0, 0, -454.7704,2214.1042,1601.0859,90.0, 11, 3},
	{19132, "Выход на улицу",-450.6910,2216.4705,1601.0859, 3, 11, 631.0835,-571.6002,16.3359, 270.0, 0, 0},
	{19132, "Выход на улицу",-450.7023,2209.4355,1601.0859, 3, 11, 631.0835,-571.6002,16.3359, 270.0, 0, 0},
	//
	{19132, "Тюрьма Сан Фиерро",-1606.3378,672.0713,-4.9063, 0, 0, 325.8035,94.0766,1001.0410,268.4566, 6, 13},
	{19132, "Выход на улицу",323.9006,94.2639,1001.0410, 13, 6, -1606.3887,675.7780,-5.2422,359.2028, 0, 0},

	{19132, "Полицейский участок SF",-1605.5493,710.2738,13.8672, 0, 0, -454.7704,2214.1042,1601.0859,90.0, 11, 4},
	{19132, "Выход на улицу",-450.6910,2216.4705,1601.0859, 4, 11, -1606.1509,713.7501,13.2903,359.7803, 0, 0},
	{19132, "Выход на улицу",-450.7023,2209.4355,1601.0859, 4, 11, -1606.1509,713.7501,13.2903,359.7803, 0, 0},
	{19132, "Полицейский участок SF",-1594.2084,716.2449,-4.9063, 0, 0, -454.7704,2214.1042,1601.0859,90.0, 11, 4},
	{19132, "Выход в гараж", -448.1903, 2175.7390, 1601.0908, 4, 11, -1592.1372,715.8721,-5.2422,268.9620, 0, 0},

	{19132, "Полицейский участок LV",2287.0254,2432.3618,10.8203, 0, 0, -454.7704,2214.1042,1601.0859,90.0, 11, 5},
	{19132, "Выход на улицу",-450.6910,2216.4705,1601.0859, 5, 11, 2287.0684,2428.8718,10.8203,179.2759, 0, 0},
	{19132, "Выход на улицу",-450.7023,2209.4355,1601.0859, 5, 11, 2287.0684,2428.8718,10.8203,179.2759, 0, 0},
	{19132, "Выход в гараж", -448.1903, 2175.7390, 1601.0908, 5, 11, 2293.2761,2451.4275,10.8203,87.4205, 0, 0},
	{19132, "Полицейский участок LV",2297.1162,2451.5430,10.8203, 0, 0, -451.3889,2175.6819,1601.0908, 90.00, 11, 5},
	//
    {19132, "Церковь", 2491.4995,918.3869,11.0234,0,0,2351.4946,-1958.6272,1601.0859,269.7597,0},
	{19132, "Лас Вентурас", 2349.7522,-1958.6034,1601.0859,0,0,2489.3921,918.2584,11.0234,93.7449,0},
	{19132, "Банковское отделение города Las Venturas",2375.5674,2306.3022,8.1406, 0, 0, 1527.8733,1280.4817,10.9708,90.0, 220, 2},
	{19132, "Выход на улицу",1530.3773,1280.5374,10.9708,2,220, 2375.3784,2310.3059,8.1406,0.0, 0, 0},
	//
	{19132, "Sport Club LS",2229.631835, -1721.709350, 13.565642, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 0},
	{19132, "Los Santos",773.8964,-78.8464,1000.6628, 0, 7, 2228.418701,-1722.766357,13.554397, 137.274353, 0, 0},
    {19132, "Sport Club LV",2092.6499,2493.1968,14.8390, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 1},
	{19132, "Las Venturas",773.8964,-78.8464,1000.6628, 1, 7, 2095.5288,2493.2524,14.8390,267.9022, 0, 0},
	//

    {19132, "Завод",-86.3057, -299.6985, 2.7646, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 10},
	{19132, "Лос Сантос",2577.3730,-1289.8970,1044.1250, 10, 2, -86.3985, -301.6363, 2.7646, 170.0, 0, 0},
	{19132, "Завод Армия LS",2731.6279,-2417.5535,13.6280, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 11},
	{19132, "Выход",2577.3730,-1289.8970,1044.1250, 11, 2, 2731.6812,-2416.2803,13.6277,0.7204, 0, 0},
    {19132, "Завод Армия LV",237.8633,1872.3997,11.4609, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 12},
	{19132, "Выход",2577.3730,-1289.8970,1044.1250, 12, 2, 233.9474,1872.2189,11.4609,90.4364, 0, 0},
	{19132, "Завод Армия SF",-1510.6035,459.8911,7.1875, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 13},
	{19132, "Выход",2577.3730,-1289.8970,1044.1250, 13, 2, -1510.6216,462.8984,7.1875,357.1089, 0, 0},
    //
	{19132, "Автошкола",-2038.5787, -86.3088, 35.4019, 0, 0, 1546.6743,1269.5719,10.8475, 0.0, 240, 5},
	{19132, "San-Fierro", 1546.6564,1267.0314,10.8475, 5, 240, -2040.3466, -85.1591, 35.4019,50.00, 0, 0},
	{19132, "Задний двор", 1546.7007,1298.1721,10.8475, 5, 240, -2044.7375, -119.6919, 35.3930,90.0, 0, 0},
	{19132, "Автошкола",-2043.2159, -119.6945, 35.3930, 0, 0, 1546.7125,1294.6796,10.8475, 180.0, 240, 5},
    {19132, "АвиаШкола",2427.6968,1662.9028,10.8203, 0, 0, -2027.7902,-105.3816,1035.1719,90.0, 3, 1},
	{19132, "Las Venturas",-2026.8085,-103.6107,1035.1798, 1, 3, 2423.1008,1662.2064,10.8203,89.7324, 0, 0},
    //
    {19132, "Radio студия LS",1653.9441,-1654.7587,22.5156, 0, 0, 1537.5176,1937.8842,1020.9574,357.9794, 158, 1},
	{19132, "Los Santos", 1537.4601,1935.3938,1020.9454, 1, 158, 1653.5554,-1658.9841,22.5156,181.2989, 0, 0},

    {19132, "Radio студия SF",-1941.0482,456.0038,35.1719, 0, 0, 1537.5176,1937.8842,1020.9574,357.9794, 158, 3},
	{19132, "San Fierro", 1537.4601,1935.3938,1020.9454, 3, 158, -1941.4008,459.7771,35.1719,1.2511, 0, 0},

	{19132, "Radio студия LV",2637.8018,1185.2871,10.8203, 0, 0, 1537.5176,1937.8842,1020.9574,357.9794, 158, 2},
	{19132, "Las-Venturas", 1537.4601,1935.3938,1020.9454, 2, 158, 2637.8726,1182.4669,10.8203,179.5183, 0, 0},
    //
	{19132, "La Cosa Nostra",1456.1313,2773.3252,10.8203, 0, 0, -1126.26, 1884.15, 1502.01,0.00, 5, 1},
	{19132, "Las Venturas",-1125.94, 1881.66, 1502.01, 1, 5, 1460.8861,2773.1716,10.8203,269.9729, 0, 0},
	{19132, "Yakuza",-2463.4805,131.7678,35.1719, 0, 0, -1418.83, 2098.87, 1502.02,180.0, 5, 0},
	{19132, "San Fierro",-1418.83, 2100.82, 1502.02, 0, 5, -2460.8835,134.6681,35.1719,318.6300, 0, 0},
	{19132, "Русская Мафия",937.0781,1731.0668,8.8516, 0, 0, -1423.74, 1723.25, 1502.00,270.0, 3, 0},
	{19132, "Las Venturas",-1426.71, 1723.33, 1502.00, 0, 3, 940.1907,1731.1997,8.8516,271.1088, 0, 0},
    {19132, "Warlock MC", -2191.5746, -2348.6829, 30.6186, 0, 0, 800.2677, 2518.0256, 1501.9982, 90.0, 3, 1},
	{19132, "Выход на улицу", 801.6673, 2517.9797, 1501.9982, 1, 3, -2189.8608,-2350.1213,30.6250,230.0000, 0, 0},
    //
    {19132, "Varrios Los Aztecas",2524.1243,-1998.7643,13.7826, 0, 0, -719.47, 2235.79, 1500.97,0.000, 7, 4},
	{19132, "Выход на улицу",-719.51, 2233.60, 1500.97, 4, 7, 2521.5767,-2001.4885,13.5469,137.3131, 0, 0},
	{19132, "Los Santos Vagos",2795.966552, -1619.309692, 10.921875, 0, 0, -404.95, 2416.19, 1500.97,90.0, 7, 2},
	{19132, "Выход на улицу",-402.28, 2416.12, 1500.97, 2, 7, 2793.590820,-1618.637817,10.921875, 79.540718, 0, 0},
	{19132, "Grove Street",2495.311035, -1690.930175, 14.765625, 0, 0, -560.5607, 2414.4805, 1500.9701,90.000, 7, 1},
	{19132, "Выход на улицу",-558.6435, 2414.4875, 1500.9701, 1, 7, 2495.2034,-1689.1195,14.2319, 0.9635, 0, 0},
	{19132, "The Rifa",2185.7822, -1815.2261, 13.5469, 0, 0, -561.1273, 2259.4351, 1500.9692,180.00, 7, 5},
	{19132, "Выход на улицу",-561.1097, 2261.1970, 1500.9692, 5, 7, 2185.8145,-1810.8423, 13.5469, 1.5911, 0, 0},
	{19132, "East Side Ballas",1996.9843,-1108.9388,26.8068, 0, 0, -725.4955, 2402.1990, 1500.9508,0.00, 7, 3},
	{19132, "Выход на улицу",-725.4694, 2400.6169, 1500.9508, 3, 7, 1999.6416,-1108.8407,26.7737,270.0559, 0, 0},
    {19132, "Night Wolfs",2473.1143,-1424.5762,29.0816, 0, 0, -579.2181,127.4654,1501.0900,90.4372, 7, 7},
 	{19132, "Выход на улицу",-577.2973,126.9751,1501.0859, 7, 7, 2473.1699,-1422.2638,28.8397,357.6896, 0, 0},
    //
  	{19132, "Наркопритон",2166.124267, -1671.345947, 15.073492, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 1},
	{19132, "The Ghetto",318.586029, 1114.793212, 1083.882812, 1, 5, 2167.414550,-1672.636352,15.080650, 223.037063, 0, 0},
	{19132, "Наркопритон",1814.4722,-1995.8588,13.5544, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 2},
	{19132, "The Ghetto",318.586029, 1114.793212, 1083.882812, 2, 5, 1811.2611,-1996.1890,13.5513,87.3189, 0, 0},
	{19132, "Наркопритон",2286.6912,-2012.8440,13.5447, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 3},
	{19132, "The Ghetto",318.586029, 1114.793212, 1083.882812, 3, 5, 2285.3196,-2015.5061,13.5434,131.0462, 0, 0},
	{19132, "Наркопритон",2333.4478,-1922.6251,12.2991, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 4},
	{19132, "The Ghetto",318.586029, 1114.793212, 1083.882812, 4, 5, 2333.2817,-1919.0001,12.9586,359.0316, 0, 0},
	{19132, "Наркопритон",2175.9934,-1503.9364,23.9520, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 5},
	{19132, "The Ghetto",318.586029, 1114.793212, 1083.882812, 5, 5, 2176.1218,-1501.6234,23.9621,1.0594, 0, 0},
    //
	{19132, "ЖК Аксиома", 1803.1802, 410.1853, 20.2294, 0, 0, 2788.6782, 738.2451, 1500.1187, 138.3252, 206, 15},
	{19132, "Выход", 2790.6880, 739.5242, 1500.1187, 15, 206, 1802.9182, 407.6309, 20.2294, 175.2988, 0, 0},
	//
	{19132, "Психиатрическая больница", -2156.5039, 645.3629, 52.3672, 0, 0, -809.3956, 2800.9446, 1501.9896, 358.2348, 6, 6},
	{19132, "Крыша", 1499.9198, -1334.7799, 14.0258, 0, 0, 1489.1989,-1327.4569,23.6172,295.4271, 0, 0},
	{19132, "Выход", 1486.5768, -1328.6232, 23.6172, 0, 0, 1502.0079,-1334.2809,14.0059,285.6668, 0, 0},
	{19132, "Банковское отделение города San Fierro", -1703.9647,785.6906,25.7360, 0, 0, 957.6198,2460.6807,1601.9771,133.3242, 1, 2},
	{19132, "Выход", 959.4328,2462.5598,1601.9771, 2, 1, -1705.4897,788.4920,24.8906,12.0529, 0, 0},
	{19132, "Салон ''Сотовая связь''", 561.9577, -1506.6360,14.5488, 0, 0, 1754.342163, -246.678802, 1701.085693, 90.0, 1, 0},
	{19132, "Выход", 1755.4420,-246.6395,1701.0857, 0, 1, 561.9577, -1506.6360,14.5488, 90.0, 0, 0},
	{19132, "",-2071.5891,-2445.5686,30.7183, 0, 0, 2359.8989,2846.0955,1500.9688,88.1161, 1, 1}, // 1 Инта, 0 вирт мир //Салон трейлеров, пикап входа в салон
	{19132, "",2360.0332,2847.5222,1500.9688, 1, 1, -2073.0798,-2444.9373,30.7183,140.0198, 0, 0}, // 1 Инта, 0 вирт мир //Салон трейлеров, пикап выхода из салона
    {19132, "Больница LS",1172.6415, -1323.3395, 15.4030, 0, 0, 1169.6666,-1306.3390,1019.4160,89.2103, 2, 1},
    {19132, "Больница LV",1607.4197,1815.2408,10.8203, 0, 0, 1169.6666,-1306.3390,1019.4160,89.2103, 3, 2},
    {19132, "Больница SF",-2668.8684,640.1640,14.4531, 0, 0, 1169.6666,-1306.3390,1019.4160,89.2103, 3, 3},
	{19132, "Выход", 1538.2891,1046.0059,1033.8420, 2,2,1495.1898,-1279.9283,14.5749, 0.0, 0},
	{19132, "Вход", 1791.4739,-1297.0667,13.4334, 0,0, 1791.4902,-1298.9351,13.5180,184.3282, 0},
	{19132, "Выход", 1785.2805, -1297.9734, 13.4862, 0,0, 1785.4012,-1295.2101,13.4513,0.0, 0},
	{19132, "Депо электропоезда", 1742.9917,-1943.5721,13.5698, 0,0, -2099.2454,513.7471,1487.6927,180.0000, 1}, // w,i , i, w
	{19132, "Выход", -2099.3435,516.3708,1487.6927, 0, 1, 1743.0687,-1946.5758,13.5588,180.0000, 0},

	{19132, "Лотерейный магазин \'Победа\'", 1411.1970, -1700.0333, 13.5395, 0,0, 831.9501, 7.1396, 1004.1797, 87.0, 3,3},
	{19132, "Выход", 834.6684, 7.4453, 1004.1870, 3,3, 1414.9802, -1701.6910, 13.5395, 240.0, 0},

	{19132, "ЖК Авантаж", 2461.4622, 2245.1499, 10.8203, 0, 0, 1484.8649,1528.8020,1601.0859,158.4146, 207, 10},
	{19132, "Выход", 1486.8573,1530.3585,1601.0859, 10, 207, 2461.4236,2242.4377,10.8203,176.6225, 0, 0},

	{19132, "ЖК Ультра", -2050.9949, 450.4646, 35.1719, 0, 0, 1895.8622,740.1544,1500.1459,90.1548, 208, 10},
	{19132, "Выход", 1898.8169, 740.3632, 1500.1459, 10, 208, -2049.5986,453.7315,35.1719,336.0418, 0, 0}
};
new TeleportPickup[sizeof(TeleportInfo)];
//command war
new
	bool:OpenMP,
	bool:StartMP,
	bool:TypeMP,
	WarTimer[2],
	WarKill_1,
	WarKill_2,
	WarDropAll,
	WarStartMap,
	bool:IsPlayerPlayMP[MAX_PLAYERS],
	bool:IsPlayerWarTeam[MAX_PLAYERS];
	//
/*	DerbyTimer[2],
	DerbyKill,
	DerbyStartMap;*/
enum warinfo
{
	bool:warType,
	warMap,
	Float:warPosX,
	Float:warPosY,
	Float:warPosZ
};
enum wardropinfo
{
	wardropMap,
	Float:wardropPosX,
	Float:wardropPosY,
	Float:wardropPosZ,
	bool:wardropStatus
};
static const InfoWar[][warinfo] = {
	{false, 0, 1546.6750,2.6024,23.2196},
	{false, 0, 1518.0050,-0.8982,23.7380},
	{false, 0, 1570.4690,12.0617,23.3316},
	{false, 0, 1590.4227,19.3249,23.8310},
	{false, 0, 1577.0442,3.1540,22.4671},
	{false, 0, 1560.9233,-3.0014,22.7041},
	{false, 0, 1534.6099,-4.1605,22.8830},
	{true, 0, 1512.1429,36.0681,25.0124},
	{true, 0, 1540.2596,39.7132,24.4334},
	{true, 0, 1568.2655,38.4563,24.5036},
	{true, 0, 1586.5061,40.9034,24.9489},
	{true, 0, 1577.2802,40.0130,24.8303},
	{true, 0, 1553.6313,38.5252,24.1537},
	{true, 0, 1528.3868,37.1655,24.3220},

	{false, 1,-2125.7991,196.0642,35.2726},
	{false, 1,-2108.6975,152.3934,35.1320},
	{false, 1,-2127.1267,153.7108,35.3314},
	{false, 1,-2088.4878,163.7023,35.0547},
	{false, 1,-2090.6072,188.7897,35.0547},
	{false, 1,-2110.2371,170.8389,35.1440},
	{false, 1,-2110.4460,183.5911,35.1762},
	{true, 1,-2128.7954,270.1597,35.7351},
	{true, 1,-2109.5249,271.1685,35.3802},
	{true, 1,-2095.7786,267.1087,35.5107},
	{true, 1,-2092.3091,302.5244,35.3483},
	{true, 1,-2068.9077,299.6589,35.8448},
	{true, 1,-2062.0845,298.3391,35.3232},
	{true, 1,-2070.2751,272.2680,35.5543},

	{false, 2,-1451.9446,-1553.1543,101.7578},
	{false, 2,-1456.4420,-1541.1302,103.5552},
	{false, 2,-1433.8860,-1560.6804,101.7578},
	{false, 2,-1410.9377,-1551.8934,101.7578},
	{false, 2,-1438.2434,-1574.3589,101.7578},
	{false, 2,-1463.9408,-1571.1448,101.7578},
	{false, 2,-1468.4661,-1534.9741,101.7578},
	{true, 2,-1420.5266,-1450.4568,101.7331},
	{true, 2,-1427.4240,-1465.0631,101.6686},
	{true, 2,-1426.5621,-1482.9608,101.6641},
	{true, 2,-1458.0005,-1474.9785,101.7578},
	{true, 2,-1461.3901,-1453.3167,101.7578},
	{true, 2,-1444.5085,-1444.4530,101.7578},
	{true, 2,-1434.5040,-1487.4534,101.7084},

	{false, 3,-1812.0635,-1617.6831,23.0215},
	{false, 3,-1825.9829,-1615.1470,23.0215},
	{false, 3,-1806.9467,-1630.8218,23.0156},
	{false, 3,-1782.9167,-1629.7692,23.7469},
	{false, 3,-1766.5496,-1623.2744,21.8724},
	{false, 3,-1788.7622,-1613.4379,21.7841},
	{false, 3,-1797.0615,-1603.8251,26.9688},
	{true, 3,-1777.3615,-1667.3309,21.9560},
	{true, 3,-1793.6544,-1677.7537,22.0170},
	{true, 3,-1815.0103,-1689.7771,21.8156},
	{true, 3,-1826.0176,-1704.0776,25.0422},
	{true, 3,-1829.0953,-1689.0031,23.7031},
	{true, 3,-1837.6620,-1698.6887,28.1642},
	{true, 3,-1842.7339,-1680.2792,21.7500}
};
new DropPickup[20] = {-1, ...};
new InfoWarDrop[][wardropinfo] = {
	{0,1542.8461,16.2114,24.1406},
	{0,1550.5350,16.5838,24.1382},
	{0,1554.6235,25.2407,24.1471},
	{0,1565.8557,27.0852,24.1641},
	{0,1567.7876,30.1784,24.1641},
	{0,1585.4622,33.1257,24.4578},
	{0,1577.6537,25.0630,24.1300},
	{0,1587.7572,26.4274,24.2208},
	{0,1565.7607,21.9326,24.1641},
	{0,1541.5062,28.1743,28.4650},
	{0,1522.0946,23.9739,28.4980},
	{0,1514.7112,22.1697,24.1406},
	{0,1515.7535,12.1474,24.1406},
	{0,1536.3663,14.6432,24.1406},
	{0,1529.4773,23.2116,24.1354},
	{0,1531.5658,11.1158,24.1406},
	{0,1546.8789,17.1512,34.0780},

	{1,-2077.8752,264.8664,35.4569},
	{1,-2077.9238,254.3263,39.3953},
	{1,-2083.5105,252.4975,39.3953},
	{1,-2096.1213,260.3900,38.6118},
	{1,-2069.5693,231.0577,39.0518},
	{1,-2060.7422,243.0935,35.5055},
	{1,-2058.0442,247.4917,35.1406},
	{1,-2061.1636,253.5513,35.0385},
	{1,-2078.9658,230.4818,35.3720},
	{1,-2096.7393,219.6639,35.1477},
	{1,-2089.3081,201.9173,35.0128},
	{1,-2088.4331,187.8345,35.0547},
	{1,-2113.0122,185.3028,34.9104},
	{1,-2130.7341,225.0818,35.9321},
	{1,-2127.9202,234.3781,36.6724},
	{1,-2129.0054,243.0834,36.9159},
	{1,-2092.2527,296.0534,40.7626},

	{2,-1452.9344,-1499.2169,110.2906},
	{2,-1452.6580,-1519.0020,108.0804},
	{2,-1457.1816,-1511.2354,101.7578},
	{2,-1438.1416,-1506.5023,101.7422},
	{2,-1446.4012,-1494.6377,101.7578},
	{2,-1456.0688,-1487.5082,101.7578},
	{2,-1426.6025,-1482.3768,101.6641},
	{2,-1424.0731,-1500.0295,104.5556},
	{2,-1420.5410,-1497.9882,105.0391},
	{2,-1425.4579,-1529.8156,102.2422},
	{2,-1436.0072,-1519.2285,101.7503},
	{2,-1426.8654,-1499.8081,107.0707},
	{2,-1459.1656,-1494.1248,106.8408},
	{2,-1440.5861,-1462.2894,109.1594},

	{3,-1857.6179,-1650.2234,26.4314},
	{3,-1870.4819,-1659.5258,22.6796},
	{3,-1856.9526,-1656.7408,24.3002},
	{3,-1831.1274,-1650.2354,21.7564},
	{3,-1803.9625,-1653.0198,25.6118},
	{3,-1792.6807,-1649.2225,32.8838},
	{3,-1770.3291,-1635.7031,24.5619},
	{3,-1795.7117,-1608.9703,26.9688},
	{3,-1801.9822,-1636.4421,23.0883},
	{3,-1849.9418,-1633.5011,21.7500},
	{3,-1844.1372,-1624.9711,21.8288},
	{3,-1823.6255,-1604.9633,23.0156},
	{3,-1859.5562,-1662.8035,26.6309}
};
new 
	Float:DanceFloat[MAX_PLAYERS][4],
	DanceTimer[MAX_PLAYERS],
	DanceKey[MAX_PLAYERS][4],
	DanceCount[MAX_PLAYERS][4],
	UseDanceKey[MAX_PLAYERS];
/*-------- [ Система контейнеров ] --------*/
new Text3D:Conteinertext[10],
	Text3D:PrizeCont[10],
	Item_SelectID[MAX_PLAYERS],
	Item_Select[MAX_PLAYERS],
	ContainerTime,
	ContainerMapText[5+5],
	ContainerMaterialObject[13+4],
	ContainerLeftDoor[10], ContainerRightDoor[10],
	ContainerPickup[10] = {-1, ...},
	bool:ContainerTakeOpen[MAX_PLAYERS];

enum ContInfo
{
	Float:ContPos[3],
	Float:ContDoorLeftPos[3],
	Float:ContDoorRightPos[3],
	Float:ContDoorLeftPosOpen[3],
	Float:ContDoorRightPosOpen[3],
	ContName[48+4],
	ContText[5+5],
	ContID,
	ContCost,
	ContType,
	ContObjectMaterial,
	ContObjectName[5+5],
	ContObjectText[13+4],
}
new ContainerInfo[][ContInfo] =
{
	{{-1739.3700, 191.8370, 3.5547}, {-1738.607178, 191.400772, 5.178199}, {-1740.197998, 191.400772, 5.178199}, {-1737.3541259766, 192.06979370117, 5.1782002449036}, {-1741.4504394531, 192.02169799805, 5.1782002449036}}, // 1
 	{{-1733.1174, 189.2473, 3.5692}, {-1732.354614, 188.811066, 5.192699}, {-1733.945435, 188.811066, 5.192699}, {-1731.1015625, 189.48008728027, 5.1926999092102}, {-1735.1978759766, 189.43199157715, 5.1926999092102}}, // 2
	{{-1722.5510, 123.7143, 3.5547}, {-1721.788208, 123.278084, 5.178199}, {-1723.379028, 123.278084, 5.178199}, {-1720.53515625, 123.94710540771, 5.1782002449036}, {-1724.6314697266, 123.8990020752, 5.1782002449036}}, // 3
	{{-1739.4506, 139.3234, 3.5547}, {-1738.687744, 138.887177, 5.178199}, {-1740.278564, 138.887177, 5.178199}, {-1737.4346923828, 139.55619812012, 5.1782002449036}, {-1741.5310058594, 139.50810241699, 5.1782002449036}}, // 4
	{{-1733.1399, 121.1817, 3.5692}, {-1732.377075, 120.745483, 5.192699}, {-1733.967896, 120.745483, 5.192699}, {-1731.1240234375, 121.41450500488, 5.1926999092102}, {-1735.2203369141, 121.36640167236, 5.1926999092102}}, // 5
	{{-1729.1691, 137.4484, 3.5692}, {-1728.406250, 137.012177, 5.192699}, {-1729.997070, 137.012177, 5.192699}, {-1727.1531982422, 137.68119812012, 5.1926999092102}, {-1731.2495117188, 137.63310241699, 5.1926999092102}}, // 6
	{{-1733.1394, 157.0623, 3.5692}, {-1732.376587, 156.626068, 5.192699}, {-1733.967407, 156.626068, 5.192699}, {-1731.1235351563, 157.29508972168, 5.1926999092102}, {-1735.2198486328, 157.24699401855, 5.1926999092102}}, // 7
	{{-1722.5177, 154.0429, 3.5547}, {-1721.754883, 153.606674, 5.178199}, {-1723.345703, 153.606674, 5.178199}, {-1720.5018310547, 154.27569580078, 5.1782002449036}, {-1724.5981445313, 154.22760009766, 5.1782002449036}}, // 8
	{{-1729.1296, 175.0755, 3.5692}, {-1728.366821, 174.639267, 5.192699}, {-1729.957642, 174.639267, 5.192699}, {-1727.1137695313, 175.30828857422, 5.1926999092102}, {-1731.2100830078, 175.26019287109, 5.1926999092102}}, // 9
	{{-1722.5579, 186.6828, 3.5547}, {-1721.795044, 186.246567, 5.178199}, {-1723.385864, 186.246567, 5.178199}, {-1720.5419921875, 186.91558837891, 5.1782002449036}, {-1724.6383056641, 186.86749267578, 5.1782002449036}} // 10
};
enum ContMap
{
	Float:ContTextLeftPos[3],
	Float:ContTextRightPos[3],
	Float:ContMapLeftPos[3],
	Float:ContMapRightPos[3],
	Float:ContMapMiddlePos[3],
	Float:ContMapDownPos[3],
}
new ContainerMap[][ContMap] =
{
	{{-1737.715942, 186.514862, 5.140759}, {-1741.056030, 186.514862, 5.140759}, {-1737.721802, 186.653641, 5.192191}, {-1741.061768, 186.653641, 5.192191}, {-1739.390503, 186.655655, 6.853194}, {-1739.393677, 186.651627, 3.527187}}, // 1
	{{-1731.463379, 183.925156, 5.155259}, {-1734.803467, 183.925156, 5.155259}, {-1731.469238, 184.063934, 5.206691}, {-1734.809204, 184.063934, 5.206691}, {-1733.137939, 184.065948, 6.867694}, {-1733.141113, 184.061920, 3.541687}}, // 2
	{{-1720.896973, 118.392174, 5.140759}, {-1724.237061, 118.392174, 5.140759}, {-1720.902832, 118.530952, 5.192191}, {-1724.242798, 118.530952, 5.192191}, {-1722.571533, 118.532967, 6.853194}, {-1722.574707, 118.528938, 3.527187}}, // 3
	{{-1737.796509, 134.001266, 5.140759}, {-1741.136597, 134.001266, 5.140759}, {-1737.802368, 134.140045, 5.192191}, {-1741.142334, 134.140045, 5.192191}, {-1739.471069, 134.142059, 6.853194}, {-1739.474243, 134.138031, 3.527187}}, // 4
	{{-1731.485840, 115.859573, 5.155259}, {-1734.825928, 115.859573, 5.155259}, {-1731.491699, 115.998352, 5.206691}, {-1734.831665, 115.998352, 5.206691}, {-1733.160400, 116.000366, 6.867694}, {-1733.163574, 115.996338, 3.541687}}, // 5
	{{-1727.515015, 132.126266, 5.155259}, {-1730.855103, 132.126266, 5.155259}, {-1727.520874, 132.265045, 5.206691}, {-1730.860840, 132.265045, 5.206691}, {-1729.189575, 132.267059, 6.867694}, {-1729.192749, 132.263031, 3.541687}}, // 6
	{{-1731.485352, 151.740158, 5.155259}, {-1734.825439, 151.740158, 5.155259}, {-1731.491211, 151.878937, 5.206691}, {-1734.831177, 151.878937, 5.206691}, {-1733.159912, 151.880951, 6.867694}, {-1733.163086, 151.876923, 3.541687}}, // 7
	{{-1720.863647, 148.720764, 5.140759}, {-1724.203735, 148.720764, 5.140759}, {-1720.869507, 148.859543, 5.192191}, {-1724.209473, 148.859543, 5.192191}, {-1722.538208, 148.861557, 6.853194}, {-1722.541382, 148.857529, 3.527187}}, // 8
	{{-1727.475586, 169.753357, 5.155259}, {-1730.815674, 169.753357, 5.155259}, {-1727.481445, 169.892136, 5.206691}, {-1730.821411, 169.892136, 5.206691}, {-1729.150146, 169.894150, 6.867694}, {-1729.153320, 169.890121, 3.541687}}, // 9
	{{-1720.903809, 181.360657, 5.140759}, {-1724.243896, 181.360657, 5.140759}, {-1720.909668, 181.499435, 5.192191}, {-1724.249634, 181.499435, 5.192191}, {-1722.578369, 181.501450, 6.853194}, {-1722.581543, 181.497421, 3.527187}} // 10
};
enum ContTemp
{
	ContID,
	ContType,
	ContName[48+4],
	ContText[5+5],
	ContCost
}
new ContainerTemp[][ContTemp] =
{
	{0, 0, "{FAAC58}Ультра {FFFFFF} ( {FAAC58}Ultra{FFFFFF} )", "Ultra", 20000000}, // 1
	{1, 0, "{FAAC58}Премиум {FFFFFF}( {E98E52}Premium{FFFFFF} )", "Premium", 15000000}, // 2
	{2, 0, "{FAAC58}Средний {FFFFFF}( {E98E52}Middle{FFFFFF} )", "Middle", 10000000}, // 3
	{3, 1, "{FAAC58}Бизнес {FFFFFF}( {E98E52}Business{FFFFFF} )", "Business", 2000}, // 4
	{4, 0, "{FAAC58}Обычный {FFFFFF}( {FAAC58}Usual{FFFFFF} )", "Usual", 4000000} // 5
};
enum ContRandom
{
	ContItem[30],
	ContMinChance[30],
	ContMaxChance[30],
	ContMinValue[30],
	ContMaxValue[30]
}
static const ContainerRandom[][ContRandom] =
{
	{
		{775, 1080, 641, 1079, 1077, 1096, 365, 364, 315, 314, 562, 415, 328, 327, 355, 571, 1210, 1086, 1083, 1082, 774, 378, 389, 1234, 1235, 1241, 1242, 1245},
		{1, 14, 20, 27, 35, 43, 51, 57, 65, 75, 88, 95, 105, 112, 121, 129, 140, 148, 155, 164, 170, 177, 187, 197, 201, 205, 210, 215},
		{13, 19, 26, 34, 42, 50, 56, 64, 74, 87, 94, 104, 111, 120, 128, 139, 147, 154, 163, 169, 176, 186, 196, 200, 204, 209, 214, 218},
		{30, 1, 1, 1, 1, 1, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 300, 1, 1, 1, 1, 1, 1, 1},
		{80, 1, 1, 1, 1, 1, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 600, 1, 1, 1, 1, 1, 1, 1}
		//Ultra
	},
	{
		{775, 1077, 1096, 774, 365, 364, 315, 314, 562, 415, 328, 327, 352, 1078, 1079, 627, 649, 650, 651, 378, 389, 1236, 1237, 1239, 1251},
		{1, 15, 19, 24, 32, 39, 47, 54, 60, 68, 77, 83, 91, 98, 105, 112, 120, 129, 131, 138, 147, 156, 159, 165, 168},
		{14, 18, 23, 31, 38, 46, 53, 59, 67, 76, 82, 90, 97, 104, 111, 119, 128, 130, 137, 146, 155, 158, 164, 167, 176},
		{30, 1, 1, 300, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{80, 1, 1, 600, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		//Premium
	},
	{
		{775, 774, 365, 364, 315, 314, 562, 415, 328, 327, 383, 649, 411, 389, 378},
		{1, 17, 27, 34, 40, 48, 59, 66, 74, 84, 97, 112, 121, 129, 138},
		{16, 26, 33, 39, 47, 58, 65, 73, 83, 96, 111, 120, 128, 137, 145},
		{30, 300, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1},
		{80, 600, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		// Middle
	},
	{
		{775, 1079, 1096, 1077, 365, 364, 315, 314, 562, 415, 328, 327, 349, 346, 348, 380, 391, 779, 1084, 1100, 1243, 1244, 1238, 1173},
		{1, 11, 20, 28, 40, 49, 58, 70, 83, 88, 97, 112, 121, 130, 138, 150, 159, 169, 177, 186, 195, 196, 200, 203},
		{10, 19, 27, 39, 48, 57, 69, 82, 87, 96, 111, 120, 129, 137, 149, 158, 168, 176, 185, 194, 196, 199, 202, 205},
		{30, 1, 1, 1, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{80, 1, 1, 1, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		// Business
	},
	{
		{775, 774, 365, 364, 315, 314, 562, 415, 328, 327, 349, 346, 348},
		{1, 19, 29, 39, 47, 54, 69, 87, 97, 109, 116, 130, 138},
		{18, 28, 38, 46, 53, 68, 86, 96, 108, 115, 129, 137, 142},
		{30, 200, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1},
		{80, 400, 0, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1}
		//Usual
	}
};
enum ContMatObject
{
	ContObjectMaterial,
	ContObjectName[13+4],
	ContObjectText[13+4],
}
new ContainerMatObject[][ContMatObject] =
{
	{11450, "des_nwtown", "gymtop1_LAe"},
	{11450, "des_nwtown", "gymtop1c_LAe"},
	{10850, "bakerybit2_sfse", "frate64_yellow"},
	{11450, "des_nwtown", "gymtop1b_LAe"},
	{10850, "bakerybit2_sfse", "frate64_red"},
	{5461,  "glenpark6d_lae", "GB_truckdepot20"},
	{10850, "bakerybit2_sfse", "frate64_blue"}
};
enum gCont
{
	gID,
	gOwned,
	gCash,
	gTime,
	gTimeClose,
	gTimeDell,
	gPrize[6],
	gPrizeAmount[6],
	bool:gBlockSlot[6],
	gStatus
}
new gContainer[10][gCont];
//===============================
static const HouseRooms[] = { 0, 1, 1, 4, 1, 5, 2, 4, 1, 1, 2, 1, 2, 4 , 2, 3, 3, 5, 2, 2, 1, 2, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5};
new Float:GHSPos[][3] =
{
	{0.000000, 0.000000, 0.000000},
	{-2170.0378,-2135.9548,1501.1005}, // 1
	{-675.0056,-2165.9714,1501.0964}, // 2
	{-407.2970,-2086.5059,1501.0964}, // 3
	{-1498.7726,-1824.6176,1501.0964}, // 4
	{-1036.5250,-2205.9414,1501.0859},// 5
	{2180.9111,-567.4000,1502.0050}, // 6
	{2195.7341,-738.3850,1502.0032}, // 7
	{2206.6499,-402.6779,1502.0081}, // 8
	{-1415.0792,-219.2375,1501.0168},// 9
	{-1561.9678,-252.9322,1501.0166},// 10
	{-1348.6167,-462.3033,1501.0168}, // 11
	{-1323.2323,-465.1029,1501.0168}, // 12
	{2216.3684,2078.3318,100.3735}, // 13
	{-228.1436,2353.3589,1013.2214}, // 14
	{-343.1263,1874.3909,1026.3966}, // 15
	{1986.4630,2254.3328,1027.7534}
};
enum nozoneinfo
{
	Float:zEnter_x,
	Float:zEnter_y,
	Float:zEnter_z,
	zDistance,
	zArea
};
new nzone[][nozoneinfo] =
{
	{280.1964,   840.0210,    18.1845, 	  150},
	{1421.4620,  -1735.1715,  13.0778,    100},
	{1172.8483,  -1393.1085,  13.0592,    100},
	{1809.0847,  -1891.0630,  13.1014,    100},
	{-2019.9607, -1002.5316,  31.7185,    100},
	{-1958.8065, 225.4428,    32.1599,    100},
	{-1992.9835, 165.4760,    27.2341,    100},
	{-2094.9800, -67.3422,    34.8602,    150},
	{-2140.2649, -782.1013,   32.0234,	  100},
	{-2142.2278, -948.1774,   32.0234,    100}
};

enum parkinginfo
{
    Float:pEnter_x,
	Float:pEnter_y,
	Float:pEnter_z,
	Float:pEnter_a,
	pVWorld,
    Float:pExit_x,
    Float:pExit_y,
    Float:pExit_z,
    Float:pExit_a,
    Float:pVExit_x,
    Float:pVExit_y,
    Float:pVExit_z,
    Float:pVExit_a,
	pInt,
};
static const parking[][parkinginfo] =
{
	{1169.3123, -1705.2046, 13.9510, 90.0, 555, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1159.0061, -1412.9017, 13.2993, 92.1731, 1, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1814.3567, -1877.0453, 13.5781, 3.1156, 2, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-78.3442,1180.6338,19.4433,178.3271, 3, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2811.5740,1235.1237,10.4653,88.9500, 5, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2650.6873,1181.1444,10.8203,91.8699, 6, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1790.0857,418.0161,19.9621,86.8489, 7, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1504.7184,-1325.3362,13.7060,271.2840, 8, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1436.8799,-1578.2943,13.2682,1.1519, 9, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1637.1638,-1684.8743,13.2173,93.0377, 10, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1403.2896,-1652.7843,13.1607,271.2161, 11, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1283.7948,-1349.4983,13.1657,3.1795, 12, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1175.3805,-1308.6919,13.6326,269.0903, 13, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{340.4299,-1618.8706,32.7566,179.5325, 14, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{611.8994,-1348.3763,13.4575,279.0285, 15, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{167.3457,-183.4712,1.3028,269.8813, 16, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-1452.4008,457.6721,6.9208,0.1636, 17, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-1991.2229,235.8233,28.6959,91.8888, 18, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2099.6377,-52.8561,35.0399,181.8297, 19, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2079.7205,-54.8950,34.9738,0.5623, 20, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2153.8198,277.4999,35.0464,181.6078, 21, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2443.9368,523.5727,29.9163,181.6118, 22, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-1967.0040,548.9451,34.8768,90.3882, 23, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2565.8049,556.1598,14.1902,269.6837, 24, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2627.1423,627.0738,14.1298,181.6917, 25, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2730.2429,75.1695,4.0616,271.5603, 26, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-1994.6035,-1032.1533,31.8478,359.2426, 27, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1613.7208,1721.5741,10.5646,265.7845, 28, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2201.0083,2411.4814,10.4901,177.4481, 29, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2255.9700,-1135.6167,26.4331,246.4052, 30, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2248.2683,-1726.0171,13.2362,268.7718, 31, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{2773.5608,-1649.4165,11.4144,270.2876, 32, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2123.9248,-2295.5845,30.3705,142.9485, 33, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2443.9199,105.2780,34.8502,258.0834, 34, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1446.2391,2816.8208,10.5487,271.3440, 35, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{946.8265,1660.0414,8.3660,268.2236, 36, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2456.6633,2292.8625,4.7045,1.0456, 37, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1156.6422,-1627.2762,13.6746,0.0072, 38, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1798.8214,-1442.1119,13.4887,1.6389, 39, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{-2093.2893,94.9678,35.3392,90.5946, 40, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872,1},
	{1485.8976,-1024.4525,24.8063,182.3029, 0, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872, 0}
};
enum e_GARAGE_INTERIORS
{
	Float:e_GARAGE_INTERIOR_X,
	Float:e_GARAGE_INTERIOR_Y,
	Float:e_GARAGE_INTERIOR_Z,
	e_GARAGE_INTERIOR_INT
}

static const GaragesInteriors[][e_GARAGE_INTERIORS] = { //Интерьер будет зависить от класса дома [hKlass]
	{2623.8853,1795.6268,1502.0000, 1},//1
	{340.1541,34.9017,829.3619, 1},//2
	{-1277.325928, -279.933807, 1501.000000, 1},//3
	{2570.1963,1750.9730,1501.9946, 1},//3
	{2696.876465, 1658.765991, 1502.083740, 1},//5
	{1862.762451, -2442.002441, 1500.968750, 1}//5
};

enum iInfo
{
	Float:iCam_X,
	Float:iCam_Y,
	Float:iCam_Z,
	Float:iCamAt_X,
	Float:iCamAt_Y,
	Float:iCamAt_Z,
	iInterior,
	iLevel,
	iCost
}
static const stock Float:IntInfo[][iInfo] =
{
	{	0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0,0},
	{	-2155.3071, -2131.8706, 1503.2584,	-2155.9573, -2131.1160, 1503.0336,	10,2,	75000000},//1
	{	-647.9572,  -2179.6384, 1502.9762,	-648.8239,  -2179.1418, 1502.7513,	10,2,	75000000},//2
	{	-400.7250,  -2086.1755, 1502.5798,	-401.5462,  -2085.6079, 1502.4802,	10,2,	75000000},//3
	{	-1519.6600, -1824.6500, 1503.1500,	-1519.6600, -1814.6500, 1503.1500,	10,2,	75000000},//4
	{	-1040.0017, -2186.1450, 1502.1348,	-1040.4255, -2187.0496, 1502.0493,	10,2,	75000000},//5
	{	2181.1086,  -580.2449,  1504.2460,	2181.9258,  -579.6741,  1503.9709,	10,2,	75000000},//6
	{	2176.2957,  -738.4600,  1503.3000,	2176.6794,  -739.3814,  1503.1348,	10,1,	150000000},//7
	{	2202.0627,  -401.4944,  1504.5913,	2201.7144,  -402.4331,  1504.2576,	10,1,	150000000},//8
	{	-1400.609985, -235.440002, 1503.209961, -1401.199951, -234.330002, 1502.920044,	10,1,	150000000},//9
	{	-1571.150024, -246.940002, 1501.949951, -1571.609985, -247.380005, 1501.880005,	10,1,	150000000},//10
	{	-1348.3101, -456.4200, 1502.2100,	-1348.3101, -446.4200, 1502.2100,	10,1,	150000000},//11
	{	-1322.750000, -471.070007, 1502.819946, -1322.760010, -469.829987, 1502.569946,	10,1,	150000000},//12
	{	2230.254883, 2084.683105, 103.128685, 2226.894043, 2081.586426, 101.100266,		34,1,	250000000},//13
	{	-236.2160, 2365.5305, 1013.6716,	-234.7695, 2367.7783, 1013.2214,	28,1,	250000000},//14
	{	-338.2830, 1886.0707, 1026.8037,	-331.2830, 1886.0707, 1023.8037,	27,1,	250000000},//15
	{	1994.9556, 2250.2732, 1027.7534,	2000.9556, 2250.2732, 1025.7534,	29,1,	250000000}//16
};
static const Float:PrisonPos[5][3] =
{
 	{610.9518,-586.3849,17.2266},
	{-1590.2208,716.0150,-5.2422},
	{1568.9985,-1694.6547,5.8906},
	{2286.9282,2427.9839,10.8203},
	{-1591.2236,716.0541,-5.2422}
};
static const Float:JailPos[3][3] =
{
	{2314.43, 74.15, 1502.00},
	{2309.30, 73.72, 1502.00},
	{325.4229,89.3657,1001.0410}
};
enum arInfo
{
	aID,
	Float:aPos_X,
	Float:aPos_Y,
	Float:aPos_Z,
	Float:aPos_A,
	aRentID,
	aRendCarID
};
new ArendInfo[][arInfo] =
{
	/*ЖД г. Лос-Сантос №1*/
    {14119, 1838.0161, -1871.9659, 13.1197, 360.0000},
    {14123, 1841.2599, -1871.9659, 13.1197, 360.0000},
	{14121, 1834.8230, -1871.9659, 13.1197, 360.0000},
	{14119, 1844.3335, -1871.9659, 13.1197, 360.0000},

	/*ЖД г. Лос-Сантос №2*/
	{14121, 2161.2803, -1192.2465, 23.5259, 90.0000},
	{14119, 2161.4214, -1187.2465, 23.5259, 90.0000},
	{14122, 2161.5625, -1182.2465, 23.5259, 90.0000},
	{14121, 2161.6877, -1177.2465, 23.5259, 90.0000},

	/*Авиа-школа г. Лас-Вентурас*/
	{14120, 2402.1697, 1667.7183, 10.5668, 359.0430},
    {14119, 2395.7109, 1667.7183, 10.4994, 359.6040},
    {14121, 2386.3408, 1658.7183, 10.4994, 179.7020},

	/*RCPD г. Лос-Сантос*/
    {14123, 667.6203, -543.1777, 16.2203, 89.3185},
    {14120, 667.6231, -546.1777, 16.2203, 89.3185},
    {14122, 667.5521, -549.1777, 16.2203, 89.3185},

    /*Больница г. Лос-Сантос*/
    {14119, 1280.7815, -1292.0701, 13.1210, 90.0676},
	{14123, 1280.8137, -1295.0701, 13.1210, 90.0676},
	{14121, 1280.8157, -1299.0701, 13.1210, 90.0676},
	{14119, 1281.2010, -1303.0701, 13.1210, 90.0676},
	{14121, 1280.8484, -1307.0701, 13.1210, 90.0676},
	{14123, 1280.9872, -1310.0701, 13.1210, 90.0676},

	/*Ферма новичков*/
	{14123, 196.5415, -155.3585, 1.2498, 180.0000},
	{14123, 199.4011, -155.3585, 1.3298, 180.0000},
	{14119, 218.6169, -173.3585, 1.2898, 90.0000},

	/*ЖД г. Лас-Вентурас*/
	{14123, 2760.3621, 1432.2369, 10.2147, 270.0000},
	{14122, 2760.4126, 1429.2369, 10.2147, 270.0000},
	{14120, 2760.6042, 1426.2369, 10.2147, 270.0000},
	{ 462, 1509.6296, -1280.8462, 14.0600, 137.3464},
    { 462, 1510.4818, -1281.5426, 14.0600, 137.3464},
    { 462, 1511.3479, -1282.1930, 14.0600, 137.3464},
    { 462, 1512.3319, -1282.9500, 14.0600, 137.3464},

	{ 462, -2029.5892, -57.5981, 34.8291, 180.0000},
	{ 462, -2026.9446, -57.7941, 34.8291, 180.0000},
	{ 462, -2024.0134, -58.0167, 34.8291, 180.0000},
	{ 462, -2020.9968, -58.1063, 34.8291, 180.0000},
	{ 462, -2679.0906, 576.9824, 14.1563, 180.0000},
	{ 462, -2680.5342, 577.0114, 14.1563, 180.0000},
	{ 462, -2681.9968, 577.0459, 14.1563, 180.0000},
	{ 462, -2683.5112, 577.0217, 14.1563, 180.0000},

	{ 462, 652.4126, -588.9568, 15.8675, 0.0000},
    { 462, 653.6716, -588.8953, 15.8675, 0.0000},
    { 462, 655.0917, -588.9109, 15.8675, 0.0000},
    { 462, 656.5114, -588.8748, 15.8675, 0.0000},

    {409, 2461.7688,918.7493,10.6470,269.5557},

	{578, 1746.7456, 381.2450, 20.3878, 267.1472 },
	{578, 1774.6460, 379.7216, 19.9795, 265.7042 },
	{578, 1800.9841, 377.1846, 19.6196, 260.5329 },
	{578, 1819.5880, 371.7882, 19.5521, 252.5589 },
	{578, 1844.4434, 364.3566, 20.0035, 251.7380 },
	{578, 1874.5470, 355.5519, 20.7511, 258.1940 },

	{ 586, 1593.6954, 1832.7589, 10.2700, 180.5820},
    { 462, 1595.8210, 1832.8043, 10.3100, 180.5820},
    { 462, 1597.9672, 1832.8949, 10.3100, 180.5820},
    { 586, 1600.0338, 1832.6292, 10.2700, 180.5820},
    { 586, 1602.2183, 1832.6133, 10.2700, 180.5820},
    { 586, 1604.3276, 1832.6333, 10.2700, 180.5820},
    { 462, 1606.4049, 1832.9114, 10.3100, 180.5820},

 	{ 547, 1392.1981, 385.5167, 19.4100, 246.3684},
	{ 547, 1390.7390, 382.2040, 19.4100, 246.3684},
	{ 546, 1389.3024, 378.8274, 19.4100, 246.3684},
	{ 546, 1387.8916, 375.5937, 19.4100, 246.3684},
	{ 546, 1386.3928, 372.3194, 19.4100, 246.3684},
	{ 547, 1393.5696, 388.9565, 19.4100, 246.3684},
	{ 547, 1394.9910, 392.3134, 19.4100, 246.3684},
	{ 546, 2475.6345, -1526.8542, 23.6052, 359.0000},
	{ 546, 2478.8823, -1526.9244, 23.6052, 359.0000},
	{ 547, 2481.9150, -1526.8684, 23.6052, 359.0000},
	{ 546, 2484.2478, -1517.7936, 23.6052, 181.9089},
	{ 547, 2487.3140, -1517.7598, 23.6052, 181.9089},
	{ 547, 2490.3770, -1517.8289, 23.6052, 181.9089},
	{ 540,552.2256,-1263.0308,16.8377,215.0},
	{ 540,549.2261,-1265.1127,16.8615,215.0},
	{ 540,546.2819,-1267.1350,16.8603,216.0},
	{ 540,543.2506,-1269.3328,16.8853,212.0},
	{ 540,540.3386,-1271.8612,16.9312,218.0},
	{ 540,537.4234,-1274.1729,16.8892,218.0},
	{ 540,534.7526,-1276.3138,16.8918,219.0},
	{ 540,531.9340,-1278.4873,16.8892,218.0},
	{ 540,565.7926,-1283.7555,17.0098,103.0},
	{ 540,564.8121,-1279.5139,17.0102,103.0},
	{ 540,563.9153,-1275.2931,17.0073,102.0},
	{ 540,563.3939,-1271.1617,16.9935,103.0},
	{ 540,562.5081,-1267.2034,16.9659,103.0},
	{ 487, 1875.0159, -2270.8831, 14.4766, -90.0000},
	{ 487, 1875.0159, -2286.0461, 14.4766, -90.0000},
	{ 487, 1875.0159, -2302.0259, 14.4766, -90.0000},
	{ 487, 1859.6726, -2292.7288, 14.4766, -90.0000},
	{ 487, 1859.6726, -2277.2041, 14.4766, -90.0000},
	{ 469, 1884.0103, -2354.0991, 14.4766, -90.0000},
	{ 469, 1884.0103, -2366.1475, 14.4766, -90.0000},
	{ 469, 1884.0103, -2378.2358, 14.4766, -90.0000},
	{ 469, 1870.8276, -2372.3872, 14.4766, -90.0000},
	{ 469, 1870.8276, -2359.9214, 14.4766, -90.0000},
	{ 484, 130.5295,-1836.3340,0.2430,89.8457},
	{ 484, 135.2226,-1887.9935,0.0909,93.2317},
	{ 484, 135.2712,-1882.1295,0.1079,95.1366},
	{ 484, 135.3813,-1873.3422,0.0287,92.2677},
	{ 484, 135.5959,-1867.2753,0.0326,94.8338},
	{ 484, 135.7223,-1858.2585,0.1352,96.5957},
	{ 484, 135.7435,-1852.0146,0.0225,96.9833},
	{ 558, 2148.7693, 1398.1857, 10.3921, 180.0000},
	{ 558, 2145.5740, 1398.1857, 10.3921, 180.0000},
	{ 558, 2139.1221, 1398.1857, 10.3921, 180.0000},
	{ 558, 2135.9407, 1398.1857, 10.3921, 180.0000},
	{ 541, 2126.3281, 1398.1857, 10.3921, 180.0000},
	{ 541, 2119.9055, 1398.1857, 10.3921, 180.0000},
	{ 541, 2116.7261, 1398.1857, 10.3921, 180.0000},
	{ 542, 2116.8022, 1409.0896, 10.5221, 360.0000},
	{ 542, 2110.3604, 1409.0831, 10.5221, 360.0000},
	{ 542, 2107.2341, 1409.0896, 10.5221, 360.0000},
	{ 560, 2216.1982, 2034.6406, 10.3637, 270.0000},
	{ 560, 2216.1982, 2038.1283, 10.3637, 270.0000},
	{ 560, 2216.1982, 2041.7065, 10.3637, 270.0000},
	{ 560, 2216.1982, 2045.4866, 10.3637, 270.0000},
	{ 496, 2246.2927, 2046.3232, 10.4237, 270.0000},
	{ 496, 2246.2927, 2042.3247, 10.4237, 270.0000},
	{ 496, 2246.2927, 2038.5048, 10.4237, 270.0000},
	{ 426, 2235.0664, 2038.6821, 10.4637, 90.0000},
	{ 426, 2235.0664, 2042.5248, 10.4637, 90.0000},
	{ 426, 2235.0664, 2050.1907, 10.4637, 90.0000},
	{ 410, 1731.6844, 1885.4795, 10.3846, 90.5101},
	{ 410, 1731.6948, 1890.8372, 10.3846, 90.5101},
	{ 410, 1731.6909, 1893.6300, 10.3846, 90.5101},
	{ 404, 1731.2958, 1899.5796, 10.3846, 90.5101},
	{ 404, 1731.2533, 1902.0092, 10.3846, 90.5101},
	{ 404, 1731.2714, 1905.6315, 10.3846, 90.5101},
	{ 400, 1741.6327, 1885.7103, 10.7886, 270.0000},
	{ 400, 1741.6398, 1888.6401, 10.7886, 270.0000},
	{ 400, 1741.6577, 1895.1151, 10.7886, 270.0000},
	{ 401, 1741.7596, 1897.8267, 10.5856, 270.0000},
	{ 400, 2080.5874, 2468.3430, 10.7266, 0.0190},
	{ 400, 2084.7898, 2468.3430, 10.7266, 0.0190},
	{ 400, 2088.9299, 2468.3430, 10.7266, 0.0190},
	{ 401, 2082.2666, 2480.2153, 10.7266, 180.0000},
	{ 401, 2078.1626, 2480.2153, 10.7266, 180.0000},
	{ 401, 2073.9431, 2480.2153, 10.7266, 180.0000},
	{ 401, 2069.8408, 2480.2153, 10.7266, 180.0000},
	{ 404, 2057.1904, 2480.2153, 10.7266, 180.0000},
	{ 404, 2053.1138, 2480.2007, 10.7266, 180.0000},
	{ 422, -30.8412, 1166.7690, 19.3222, 360.0000},
	{ 422, -34.2425, 1166.7690, 19.3222, 360.0000},
	{ 422, -37.8182, 1166.7690, 19.3222, 360.0000},
	{ 527, -44.6972, 1166.7690, 19.3222, 360.0000},
	{ 527, -48.3838, 1166.7690, 19.3222, 360.0000},
	{400, -1989.9163, 275.5569, 35.1662, 267.0000},
    {400, -1990.0594, 272.2518, 35.1662, 267.0000},
    {400, -1990.3448, 269.0416, 35.1662, 267.0000},
    {401, -1990.7004, 263.9048, 34.8462, 267.0000},
    {401, -1990.9237, 261.2656, 34.8462, 267.0000},
    {404, -1991.3481, 255.2821, 34.8462, 264.0474},
    {404, -1991.6816, 252.6617, 34.8462, 264.0474},
    {410, -1992.7944, 248.2620, 34.8462, 264.0474},
    {410, -1993.0652, 245.8304, 34.8462, 264.0474},
    {400, -2585.8699, 335.4568, 4.9638, 90.0000},
    {400, -2585.8457, 331.9096, 4.9638, 90.0000},
    {401, -2585.9548, 328.1809, 4.9638, 90.0000},
    {401, -2585.9983, 324.8647, 4.9638, 90.0000},
    {404, -2585.9209, 321.3739, 4.9638, 90.0000},
    {404, -2585.9912, 317.6576, 4.9638, 90.0000},
    {410, -2586.1077, 314.0794, 4.9638, 90.0000},
    {410, -2586.0518, 310.8368, 4.9638, 90.0000},
    {400, -2493.7048, 795.6027, 35.2550, 270.0000},
    {400, -2493.6475, 792.7779, 35.2550, 270.0000},
    {401, -2493.6985, 790.0810, 35.1350, 270.0000},
    {401, -2493.7954, 787.2208, 35.1350, 270.0000},
    {404, -2493.5164, 784.3647, 34.7750, 270.0000},
    {404, -2493.6309, 781.4155, 34.7750, 270.0000},
    {410, -2459.8179, 779.5052, 34.7350, 90.0000},
    {410, -2459.4915, 786.4857, 34.7350, 90.0000},
    {409, -1764.7040, 956.2208, 24.4421, 270.0000},
    {409, -1752.3950, 956.3077, 24.4421, 270.0000},
    {409, -1760.8821, 947.5552, 24.4421, 270.0000},
    {409, -1750.7251, 947.5801, 24.4421, 270.0000},
    {409, -1740.4351, 955.3890, 24.4421, 258.6977},
	{415, -2197.2468, 971.6848, 79.7720, 270.0000},
	{429, -2197.2410, 977.7761, 79.6647, 269.9763},
	{411, -2197.2402, 989.8215, 79.7179, 270.0000},
	{451, -2197.2356, 995.7289, 79.7076, 269.9999},
	{506, -2197.2402, 1001.9411, 79.6714, 270.0000},
	{481, 1863.5612, -1398.4520, 12.9585, 261.0214},
	{481, 1863.5105, -1401.0997, 12.9626, 264.6744},
	{481, 1864.3284, -1405.0979, 12.9516, 253.1930},
	{481, 1864.5745, -1408.2422, 12.9564, 255.2842},
	{453, 2966.3306, -2020.8579, 0.3133, 279.6246},
	{453, 2966.4080, -2015.0914, 0.2930, 285.7707},
	{453, 2966.3630, -2009.5854, 0.2314, 271.8062},
	{453, 2966.3481, -2003.7334, -0.8248, 276.4967},
	{453, 2966.4287, -1997.7563, -0.6937, 288.3154},
	{453, 2966.3748, -1991.5703, -0.5333, 270.0859},
	{453, 2966.3374, -1985.8020, -0.9594, 271.3583},
	{453, 2966.4446, -1980.1864, 0.2038, 280.8868},
	{453, 2967.0342, -1972.9269, 0.0905, 282.4146}
};
new
	JailCP[5],
	BankCP[4],
	besthours,
	besthoursPN[24] = "The State",

	bestAZCoins,
	bestAZCoinsPN[24] = "The State",

	Float:bestCaptcha,
	bestCaptchaPN[24] = "The State",

	bestLuckyPN[24] = "The State",
	Text3D:Best3DText[2] = {Text3D:-1, ...};

static const Float:StandartCarParking[][4]=
{
	{-1872.279296, -963.665039, 31.918937, 90.0},
	{-1872.279296, -960.602050, 31.918949, 90.0},
	{-1872.279296, -957.617492, 31.918937, 90.0},
	{-1872.279296, -954.680541, 31.918933, 90.0},
	{-1872.279296, -951.696960, 31.918947, 90.0},
	{-1872.279296, -948.595031, 31.918933, 90.0},
	{-1872.279296, -945.634216, 31.918935, 90.0},
	{-1872.279296, -942.588745, 31.918937, 90.0},
	{-1872.279296, -939.666137, 31.918949, 90.0},
	{-1872.279296, -936.634460, 31.918949, 90.0},
	{-1872.279296, -933.674011, 31.918933, 90.0},
	{-1872.279296, -930.650512, 31.918952, 90.0},
	{-1872.279296, -927.639160, 31.918935, 90.0},
	{-1872.279296, -924.678527, 31.918937, 90.0},
	{-1872.279296, -921.692321, 31.918951, 90.0},
	{-1872.279296, -918.671813, 31.918933, 90.0},
	{-1872.279296, -915.735534, 31.918949, 90.0},
	{-1872.279296, -912.569519, 31.918931, 90.0},
	{-1872.279296, -909.541320, 31.918935, 90.0},
	{-1872.279296, -906.532165, 31.918937, 90.0},
	{-1872.279296, -903.428771, 31.918949, 90.0},
	{-1872.279296, -900.177978, 31.918949, 90.0},
	{-1872.279296, -896.965270, 31.918931, 90.0},
	{-1872.279296, -893.701782, 31.918933, 90.0},
	{-1872.279296, -890.494567, 31.918933, 90.0},
	{-1872.279296, -887.240661, 31.918931, 90.0},
	{-1872.279296, -883.987731, 31.918951, 90.0},
	{-1872.279296, -880.828613, 31.918951, 90.0},
	{-1872.279296, -877.533020, 31.918949, 90.0},
	{-1872.279296, -874.405395, 31.918935, 90.0},
	{-1872.279296, -871.067138, 31.918947, 90.0},
	{-1872.279296, -867.829895, 31.918949, 90.0},
	{-1872.279296, -864.612426, 31.918947, 90.0},
	{-1872.279296, -861.602600, 31.918951, 90.0},
	{-1872.279296, -858.923828, 31.918937, 90.0},
	{-1872.279296, -856.202514, 31.918937, 90.0},
	{-1872.279296, -853.267883, 31.918933, 90.0},
	{-1872.279296, -850.059997, 31.918935, 90.0},
	{-1872.279296, -846.796325, 31.918947, 90.0},
	{-1872.279296, -843.557128, 31.918947, 90.0},
	{-1872.279296, -840.290893, 31.918933, 90.0},
	{-1872.279296, -837.055725, 31.918949, 90.0},
	{-1872.279296, -833.751770, 31.918933, 90.0},
	{-1872.279296, -830.474670, 31.918951, 90.0},
	{-1872.279296, -827.312011, 31.918949, 90.0},
	{-1872.279296, -823.997680, 31.918933, 90.0},
	{-1872.279296, -820.869689, 31.918937, 90.0},
	{-1872.279296, -817.614196, 31.918952, 90.0},
	{-1872.279296, -814.314941, 31.918951, 90.0},
	{-1872.279296, -811.078674, 31.918935, 90.0},
	{-1872.279296, -808.194152, 31.918935, 90.0},
	{-1872.279296, -805.125671, 31.918947, 90.0},
	{-1872.279296, -802.064575, 31.918949, 90.0},
	{-1872.279296, -799.062561, 31.918935, 90.0},
	{-1872.279296, -796.059143, 31.918951, 90.0},
	{-1872.279296, -793.154174, 31.918937, 90.0},
	{-1872.279296, -789.992675, 31.918935, 90.0},
	{-1872.279296, -787.102478, 31.918935, 90.0},
	{-1872.279296, -784.031066, 31.918951, 90.0},
	{-1872.279296, -781.072753, 31.918949, 90.0},
	{-1872.279296, -777.969848, 31.918949, 90.0},
	{-1872.279296, -774.972473, 31.918937, 90.0},
	{-1872.279296, -772.010192, 31.918931, 90.0},
	{-1872.279296, -768.962463, 31.918947, 90.0},
	{-1872.279296, -765.971313, 31.918947, 90.0},
	{-1872.279296, -762.953918, 31.918937, 90.0},
	{-1872.279296, -759.949401, 31.918952, 90.0},
	{-1872.279296, -756.982849, 31.918951, 90.0},
	{-1872.279296, -754.001586, 31.918933, 90.0}
};

static const TeamColors[]=
{
	0xFFFFFF80, //None
    0x0049FF80, //LSPD
    0x0049FF80, //LVPD
    0x00000080, //FBI
    0x004eff80, //SWAT
    0xFF7E7E80, //Medic
    0xCCFF0080, //Meria LS
    0x99663380, //ARMY LV
    0xFF7E7E80, //Meria LV
    0xFF663380, //Licensers
    0xFF800080, //Radio
    0x00932799, //Groove Street
    0xD1DB1C99, //LS Vagos
    0xcc00cc99, //Ballas
    0x00FFE299, //El Coronos
    0x6666FF99, //SF Rifa
    0x33669980, //Russian Mafia
    0x96020280, //Yakuza Mafia
    0x99336680, //La Cosa Nostra
    0xBA541D80, //Bikers
	0x99663380, //army
	0x298CB780, //bank
	0xFF7E7E80, //hospital lv
	0x0049FF80, //LVPD
	0xFF800080, //cnn lv
	0x7F646480, //wolfs
	0xFF800080, //cnn SF
	0x99663380 //cnn SF
};
static const WeaponNames[][10+21] =
{
	{"Fist"},//0
	{"Brass Knuckles"}, //1
	{"Golf Club"}, //2
	{"Night Stick"}, //3
	{"Knife"},//4
	{"Baseball Bat"},//5
	{"Shovel"},//6
	{"Pool Cue"},//7
	{"Katana"},//8
	{"Chainsaw"},//9
	{"Purple Dildo"},//10
	{"Big White Vibrator"},//11
	{"Medium White Vibrator"},//12
	{"Small White Vibrator"},//13
	{"Flowers"},//14
	{"Cane"},//15
	{"Grenade"},//16
	{"Teargas"},//17
	{"Molotov"},//18
	{" "},//19
	{" "},//20
	{" "},//21
	{"Pistols"},//21
	{"Desert Eagle (Silencer)"},//22
	{"Desert Eagle"},//23
	{"Shotgun"},
	{"Sawnoff Shotgun"},
	{"Combat Shotgun"},
	{"Micro Uzi (Mac 10)"},
	{"MP5"},
	{"AK47"},
	{"M4"},
	{"Tec9"},
	{"Country Rifle"},
	{"Sniper Rifle"},
	{"Rocket Launcher"},
	{"Auto Rocket Launcher"},
	{"Flamethrower"},
	{"Minigun"},
	{"Satchel Charge"},
	{"Detonator"},
	{"Spray Can"},
	{"Fire Extinguisher"},
	{"Camera"},
	{"Night Vision Goggles"},
	{"Infrared Vision Goggles"},
	{"Parachute"},
	{"Fake Pistol"}
};
static const stock OrgSalary[][14] =
{
	{0,0,0,0,0,0,0,0,0,0,0,0,0}, //None
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000}, //Police LS
	{4050,5000,5500,6000,6050,7000,8000,8500,9000,10000,10500,11000,11050,12000}, //Police LS
	{6500,7000,7500,8000,8500,9000,9500,10000,10500,11000,11500,12000,12050,13000}, //CIA
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000}, //S.W.A.T
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000}, //Medic
	{6000,7000,8000,8500,9000,9500,10000,10500,11000,11500,12000,12500,13000,13500}, //Meria LS
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000}, //Meria SF
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000}, //medic sf
	{3800,4000,4200,4300,4500,4700,5000,5300,5600,5900,6100,6400,6700,7000}, //Licensers
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000}, //Radio
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Groove
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Vagos
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Ballas
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Coronos
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Rifa
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //Russian Mafia
	{4800,4900,5000,6000,6500,7000,8000,8050,9000,9500,10000,10500,10000,11000}, //Yakuza
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //LCN
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //Bikers
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000}, //army
	{5500,5800,5900,6000,6200,6500,6700,7000,8000,10000,11000,12000,12800,13000}, //bank
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000},
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000},
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000},
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10},
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000}, //RadioSF
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000} //army
};
static const stock MOrgSkins[][] =
{
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
    {71,266,284,267,267,265,282,282,311,17,295},//Police LS
    {71,266,284,267,267,265,282,282,288,283,283},//Police rcpd
    {286,286,286,286,163,163,163,165,165,165,166,166},//FBI
    {71,266,284,267,267,265,282,282,311,17,295},//Police SF
    {274,274,276,276,276,275,275,275,275, 70,70},//M4C
    {164,164, 164,163, 163,187,187,57,57,147,147},//Meria LS
    {287,287,287,179,179,253,253,61,61,255,255},//Army лв
    {274,274,274,274,274,275,275,275,275, 70,70},//M
    {59,59,59,59, 59, 59, 59, 59,59,240,240},//Licensers
    {188,188,188,188,250,250,250,250,250,261,261}, //Radio
    {105,105,105,105,106,106,106,107,269,271,270,270,270,270},//Groove Street
    {108,108,108,108,108,108,109,109,109,110,110,110,110,110},//LS Vagos
    {103,103,103,103,103,103,102,102,102,104,104,104,104,104},//Ballas
    {114,114,114,114,116,116,116,116,115,292,292,115,115},//El'Coronos
    {175,175,175,175,174,174,174,174,173,173,273,273,173,173},//SF Rifa
    {112,112,112,112,111,111,111,46,46,125,125,125, 125, 126},//Русская Мафия
    {122,122,122,208,208,123,123,123,186,186,118,118,228,228},//Yakuza
    {124,124,124,98,98,127,127,223,223,113,113,113,113,113},//LCN Male
    {181,242,241,181,181,248,248,248,248,247,247,110,110,100},//Bikers
    {287,287,287,179,179,253,253,61,61,255,255},//Army
    {164,171, 164,163, 171,166,153,118,153,227,227},//BANK
    {274,274,274,274,274,275,275,275,275, 70,70},//MEDIC LV
    {71,266,284,267,267,265,282,282,311,17,295},//Police LV
    {188,188,188,188,250,250,250,250,250,261,261}, //Radio lv
    {21,21,21,21,28,28,28,293,293,297,297}, //Wolfs
    {188,188,188,188,250,250,250,250,250,261,261}, //Radio
    {287,287,287,179,179,253,253,61,61,255,255,0}//Army sf
};
static const stock GOrgSkins[][] =
{
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police LS
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police LV
    {141,141,141,141,141,141,141,141,141,141,141,141,141,141},//F.B.I
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police SF
    {219,308,308,308,308,308,150,150,150,150,150,219,219,219},//M4C
    {150,150,150,150,150,150,150,150,150,150,150,150,150,150},//Meria LS
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191},//Army
    {219,308,308,308,308,308,219,219,219,219,219,219,219,219},//M4C SF
    {150,11,11,11,11,11,172,172,172,172,172,150,150,150},//Licensers
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio
    {65,65,65,65,65,65,207,207,207,207,207,207,298,298},//Groove Street
    {190,190,190,190,190,190,190,190,190,190,190,190,190,190},//LS Vagos
    {195,195,195,195,195,195,195,195,195,195,195,195,195,195},//Ballas
    {41,193,193,193,193,193,193,193,193,193,193,41,41,41},//El'Coronos
    {226,226,226,226,226,226,226,226,226,226,226,226,226,226},//SF Rifa
    {214,233,233,233,233,233,214,214,214,214,214,214,214,214},//Русская Мафия Female
    {169,169,169,169,169,169, 169, 169, 169,169,169,169,169,169},//Yakuza
    {91,91,91,91,91,91,91,91,91,91,91,91,91,91},//LCN Female
    {233,233,233,233,233,233,233,233,233,233,233,233,233,233},//Bikers
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191},//Army
    {141,141,141,141,141,141,141,141,141,141,141,141,141,141},//BANK
    {219,308,308,308,308,308,219,219,219,219,219,219,219,219},//M4C LV
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},    //Police LV
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio lv
    {56,56,56,56,56,56,56,56,56,56,56,56,56,56}, //wolfs
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio lv
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191}
};
static const ItemsId[][] =
{
	{ 19421,19422,19423,19424,1}, //Наушники
	{ 19069,19068,19067,19554,18953,18954,1},//Шапки
	{ 18968,18967,18969,1},//Панамки
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//Кепки
	{ 19104,19105,19106,19107,19108,19109,1},//Каски
	{ 18925,18922,18923,18924,18921,1},//Береты
	{ 19519,19274,1},//Парики
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//Очки
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //Банданы
	{ 18947,18948,18949,18950,18951,1 }, //Шляпы
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //Часы
	{ 3026,371,19559,1 },//портфели
	{ 18970, 18973, 18972, 18971,1 },//Шляпы
	{ 18910, 18909, 18908, 18907, 18906,1 }// Банданы на голову
};
static const ItemsCost[][] =
{
	{ 3000,3000,3000,3000,1}, //Наушники
	{ 2500,2500,4000,6000,3000,3000,1},//Шапки
	{ 1500,1500,1500,1},//Панамки
	{ 1000,1000,1000,2000,2000,1500,4000,4000,3000,2500,2500,4000,1},//Кепки
	{ 2500,2500,3000,3000,3000,3000,1},//Каски
	{ 2000,2200,2200,2500,3000,1},//Береты
	{ 3000,3000,1},//Парики
	{ 500,2000,500,700,1200,1800,2800,2800,2800,3000,3000,3000,3000,3000,2000,2100,2100,4000,1},//Очки
	{ 2000,1000,1000,1700,1700,1700,1300,1000,1000,1700,1 }, //Банданы
	{ 2100,2100,2100,2100,2100,1 }, //Шляпы
	{ 40000,30000,45000,50000,60000,4000,4000,4000,5000,5500,5000,5200,5400,1 }, //Часы
	{1000,800,1200,1},//портфели
	{3400,3200,3500,3300,1},//шляпы
	{2000,2000,2000,2000,2000,1}//Банданы
};
static const MSkins[][] =
{
	{ 1,   78,135,137,2,3,50,29,  37,  44,58, 68,  72,167,  73,  96,  97, 101, 119,153, 184, 206, 235, 236,20,242, 252, 258,98, 289, 290, 291, 294,299},
	{14, 79,134, 136,15,4,5,  19,21,22,143,67,  24,  25,  28,  36,	83,  84, 128, 156,182,144,183, 220, 221, 222, 241,18,262,180,293, 292, 297,296}
};
static const GSkins[][] =
{
	{91,90, 93,150,138, 216, 226,56,55,225,233},
	{9, 11, 12, 40, 76, 190,215, 192,298,211,214}
};
static const MSkinCost[] =
{
 	2000,2000,2000,2000,2000,4000,2000,4000,4000,4000,
	4000,6000,6000,7000,7000,7000,10000,
	13000,14000,20000,20000,20000,20000,21000,
	50000,75000,76000,77000,150000,250000,100000,
	100000,450000,500000,

	2000,2000,2000,2000,2000,4000,4000,4000,4000,4000,6000,6000,6000,
	6000,7000,7000,25000,25000,15000,15000,
	15000,25000,25000,20000,50000,60000,61000,80000,
	20000,25000,150000,150000,200000,450000
};
static const GSkinCost[] =
{
 	2000,2000,5000,7000,10000,10000,
	10000,10000,20000,100000,200000,
	2000,2000,2000,5000,7000,
	25000,50000,70000,100000,350000,500000
};
static const MBomzSkins[][] =
{
    {78, 135, 137, 200, 213, 230},
	{79, 136, 134, 35, 4 , 5}
};
static const GBomzSkins[][] =
{
	{41, 77, 226},
	{13, 245, 214}
};
enum fillinfo
{
	Float:fPos_X,
	Float:fPos_Y,
	Float:fPos_Z
}
static const FuelInfo[][fillinfo] =
{
    {1007.7967,-939.0165,42.1797},
	{1000.0021,-939.7214,42.1797},
	{1943.9103,-1778.4739,13.3906},
	{1944.1837,-1774.2662,13.3906},
	{1944.1002,-1771.2139,13.3900},
	{1944.1849,-1767.2201,13.3828},
	{296.1086,-171.5746,1.5781},
	{296.0072,-181.3552,1.5781},
	{300.9220,-181.4067,1.5781},
	{300.3612,-171.8585,1.5781},
	{653.0966,-559.7371,16.3359},
	{653.5595,-570.3958,16.3359},
	{612.1537,-1510.7721,14.9320},
	{1379.0016,459.1470,19.9564},
	{1383.4531,456.9103,19.9467},
	{1385.5155,461.5921,20.1510},
	{1380.5353,463.0790,20.1233},
	{2205.3462,2476.8647,10.4015},
	{1594.2661,2202.1384,10.4015},
	{609.9623,1700.6389,6.5774},
	{2147.2593,2750.6055,10.4014},
	{-1329.8168,2672.0408,49.6437},
	{-1470.7079,1863.8987,32.6328},
	{-98.7537,-1166.8053,2.5993},
	{22.4816,-2646.1042,40.4618},
	{-1606.3723,-2713.6147,48.5335},
	{-2249.9185,-2558.6838,31.8938},
	{-1666.6174,408.5915,7.1797},
	{-2022.0974,155.9591,28.8359},
	{-2261.1799,-2.6144,35.1719},
	{-2405.7432,974.6953,45.2969},
	{70.6129,1219.1520,18.8123},
	{-2572.0552,2404.1240,14.8748},
	{1841.9207,634.7351,10.8451},
	{1020.9476,1351.1295,10.8250},
	{-2115.1206,-724.0286,32.1945},
	{1031.3010,-1865.9609,14.1385},
	{1381.1553,18.7641,34.2854}

};
enum g_oInfo
{
    g_oID,
    g_oName[19],
    g_oSpawnIntWorld[2],
    Float:g_oSpawnInfo[4],
    Float:g_oDutyPos[3]
};
static const global_OrgInfo[][g_oInfo] = {
    {0, "Не имеется", {0,0}, {0.0,0.0,0.0}, {0.0,0.0,0.0}},
    {1, "Полиция LS", {11,2}, {-484.3358,2211.0371,1601.0938,204.0896}, {-483.8583, 2204.3967, 1601.0938}},
    {2, "RCPD", {11,3}, {-484.3358,2211.0371,1601.0938,204.0896}, {0.0, 0.0, 0.0}},
    {3, "FBI", {2,0}, {-758.1761,2354.3984,1401.0859,181.5621}, {-739.6190,2356.9202,1404.5170}},
    {4, "Полиция SF", {11,4}, {-484.3358,2211.0371,1601.0938,204.0896}, {0.0, 0.0, 0.0}},
    {5, "Больница LS", {2,1}, {667.2817,-1242.1737,1024.4080,88.1921}, {1154.5444,-1321.0308,1019.4178}}, 
    {6, "Правительство", {0,2}, {1498.7437,-1284.4575,113.8212,59.1108}, {1492.8477,-1277.4307,113.8064}},
    {7, "Армия LV", {2,1}, {1403.7043,2239.7979,1500.9758,225.8291}, {1408.7905,2211.2410,1500.9758}},
    {8, "Больница SF", {3,3}, {667.2817,-1242.1737,1024.4080,88.1921}, {0.0, 0.0, 0.0}},
    {9, "Лицензеры", {240,5}, {-2587.53, -1390.88, 1500.76,0.000}, {1543.7091, 1298.8573, 10.8475}},
    {10, "Radio LS", {157,1}, {-211.50, 1300.34, 1507.68,270.0}, {2127.4995, 2523.0295, 1024.9781}},
    {11, "Grove", {7,1}, {-560.5607, 2414.4805, 1500.9701, 90.0}, {-590.6566, 2405.8647, 1503.81}},
    {12, "Vagos", {7,2}, {-404.95, 2416.19, 1500.97,90.0}, {-436.4060, 2414.9927, 1500.02}},
    {13, "Ballas", {7,3}, {-725.4955, 2402.1990, 1500.9508,0.0}, {-739.9849, 2418.2139, 1500.02}},
    {14, "Aztecas", {7,4}, {-719.47, 2235.79, 1500.97,0.000}, {-708.18, 2247.16, 1500.02}},
    {15, "Rifa", {7,5}, {-561.1273, 2259.4351, 1500.9692,180.0}, {-567.9110, 2244.9880, 1500.02}},
    {16, "Russian Mafia", {3,0}, {-1390.49, 1718.02, 1502.28,90.0}, {-1376.59, 1730.02, 1501.45}},
    {17, "Yakuza", {5,0}, {-1409.89, 2072.84, 1502.02,0.000}, {-1394.2540, 2101.7390, 1501.2599}},
    {18, "La Cosa Nostra", {5,1}, {-1126.22, 1931.18, 1501.96,180.0}, {-1147.6879, 1926.7343, 1501.1862}},
    {19, "Warlock MC", {3,1}, {778.4115, 2509.0295, 1501.9790,270.0}, {778.4292, 2518.5076, 1502.0092}},
    {20, "Армия LS", {2,1}, {477.0396,873.4634,1500.9648,89.7077}, {458.16, 880.03, 1500.96}},
    {21, "Центральный Банк", {22,1}, {-2684.58740, 820.24365, 1500.97046,180.000}, {-2687.48438, 820.49432, 1500.75085}},
    {22, "Больница LV", {3,2}, {667.2817,-1242.1737,1024.4080,88.1921}, {0.0, 0.0, 0.0}},
    {23, "Полиция LV", {11,5}, {-484.3358,2211.0371,1601.0938,204.0896}, {0.0, 0.0, 0.0}},
    {24, "Radio LV", {157,2}, {-211.50, 1300.34, 1507.68,270.0}, {0.0, 0.0, 0.0}},
    {25, "Night Wolfs", {7,7}, {-211.50, 1300.34, 1507.68,270.0}, {-599.0525,112.0772,1503.5990}},
    {26, "Radio SF", {157,3}, {-211.50, 1300.34, 1507.68,270.0}, {0.0, 0.0, 0.0}},
    {27, "Армия SF", {2,1}, {-260.9593,775.6158,1500.9608,358.8753}, {-271.4484,799.2384,1500.9608}}
};
enum oInfo
{
    oUID,
    oLeaderUID, //-1 ? free : playerUID
    oBank,
    bool:oWareHouse,
    oItemCount[2],
    oFamilyFraction //-1 ? default : family
};
new 
    OrgInfo[MAX_ORGS][oInfo],
    SobesTime1[MAX_ORGS] = {-1, ...},
    SobesTime2[MAX_ORGS] = {-1, ...},
    SobesMesto[MAX_ORGS][16],
    TeamDutyCP[MAX_ORGS],
    RankName[MAX_ORGS][10][20],
    Dorm_CP[MAX_ORGS] = {-1, ...},
    Text3D:DormText[MAX_ORGS] = {NONE_3D_TEXT, ...};
enum gzInfo
{
	gzFracID,
	bool:gzIsFamily,
	Float:gzMin_X,
	Float:gzMin_Y,
	Float:gzMax_X,
	Float:gzMax_Y
};
new GZInfo[289][gzInfo],
	GangZone[289],
	GangZone_Flash[2] = {-1, ...},
	GangZone_FlashColor[2] = {-1, ...},
	Float:GangZone_X[289],
	Float:GangZone_Y[289],
	Float:GangZone_Z[289],
	GangZone_FamAttackID[158] = {-1, ...},
	GangZone_FamDataWar[158][3],
	lv_id = -1,
	GangZone_CaptureTime[158],
	GangZone_CaptureKill[2];
static const Float:Bankomats[][4] =
{
	{1491.64, -1279.95, 14.27,90.00},
	{ 1641.49, -1172.26, 23.59, 270.00},
	{2250.82, -1667.82, 15.13,255.48},
	{461.87, -1512.79, 30.63,1.38},
	{2820.09, -1468.37, 15.97, 90.00},
	{-107.03, -305.86, 1.13, 180.00},
	{-1823.97, 1284.36, 16.03,110.70},
	{1810.93, -1905.23, 13.25,0.00},
	{1918.69, -1766.31, 13.25,-90.00},
	{1364.10, -1751.19, 13.25, 0.00},
	{1225.59, -1811.40, 16.25,90.00},
	{1147.24, -1773.07, 16.25,-90.00},
	{1232.28, -1415.86, 13.11,-90.00},
	{1367.62, -1290.17, 13.11,0.00},
	{753.93, -1384.86, 13.37,89.32},
	{1650.38, -1655.55, 22.19,90.50},
	{1949.18, -1986.50, 13.43,180.73},
	{2423.85, -1906.82, 13.22,359.22},
	{2233.128906, -1758.811646, 13.367500,269.85},
	{2351.486328, -1758.965332, 13.367500,269.85},
	{669.08, -577.52, 16.18,89.33},
	{ 2733.04, -2458.37, 13.41,179.86},
	{ -68.99, 1209.25, 19.61,90.00},
	{ 652.04, 1705.81, 6.99,41.29},
	{ 1154.41, 1363.19, 10.63,270.00},
	{ 1626.66, 1814.01, 10.53,270.00},
	{ 2018.83, 1005.11, 10.53,180.00},
	{ 2239.50, 1282.36, 10.63,360.00},
	{ 2197.74, 1395.31, 11.02,90.00},
	{ 2093.95, 1450.54, 10.48, 134.65},
	{ 2185.11, 1660.57, 10.76,285.21},
	{ 2257.25, 1804.71, 10.63,359.10},
	{ 2332.84, 2171.95, 10.60,180.00},
	{ 2619.40, 2345.90, 10.52,111.19},
	{ 2889.23, 2459.36, 10.89,134.97},
	{ 2597.39, 1086.47, 10.65,180.00},
	{ 2283.26, 2432.83, 10.62,90.00},
	{ 2479.92, 2520.86, 10.61,180.00},
	{ 2098.86, 2484.50, 10.90,89.78},
	{1177.1570, -610.8480, 1104.8850},
	{127.77, 1910.33, 18.55, 0.00},
	{-2674.95, 635.06, 14.30,90.0},
	{-2276.68, 535.11, 34.98,180.0},
	{-2186.82, 330.27, 35.09,90.0},
	{-2241.62, 83.38, 35.26,360.0},
	{-2034.73, -60.15, 35.11,90.0},
	{-2020.87, 128.47, 28.31,180.0},
	{-2017.89, 450.44, 35.05,180.0},
	{-1624.12, 716.50, 14.5,270.0},
	{-1712.51, 1349.73, 6.88,47.0},
	{-2765.62, 372.16, 6.00,180.0},
	{-2629.31, 1407.91, 6.85,159.0},
	{2847.007080, 1295.574707, 11.271100, 90.0},
	{-1970.933228, 116.201599, 27.543800, 270.0},
	{1496.193726, -1750.358398, 15.176110, 270.0},
	{1131.687622, -1473.322998, 15.690900, 270.0},
	{-2129.861084, -765.109985, 31.764299, 360.0},
	{1172.423584, -1329.188843, 15.149100, 270.0}
};
enum cInfo
{
    cID,
    cModel,
    Float:cSell_X,
	Float:cSell_Y,
	Float:cSell_Z,
    Float:cSell_A,
	Float:cPos_X,
	Float:cPos_Y,
	Float:cPos_Z,
    Float:cPos_A,
 	cInterior,
	cVirtualWorld,
	cColor_1,
	cColor_2,
	cOwner[22+2],
	cOwnerFamily,
	cOwnerFamilyUID,
	bool:cOwnerFamilySpawn,
	cNalog,
	cNumber[39],
	cKeyer,
	bool:cLock,
	cCost,
	cShtraf,
	bool:cAlarmON,
	bool:cKeyIN,
	Float:cMilage,
	cParkedInGarage,
	cParkedInParking,
	cShtrafName,
	cSlotItem[21],
	cModelObject[10],
	Float:cObjectPosX[10],
	Float:cObjectPosY[10],
	Float:cObjectPosZ[10],
	Float:cObjectRotX[10],
	Float:cObjectRotY[10],
	Float:cObjectRotZ[10],
	cObjectUsed[10],
};
new CarInfo[MAX_OWNABLECARS][cInfo];
enum hInfo
{
	hID,
	Float:hEnter_X,
	Float:hEnter_Y,
	Float:hEnter_Z,
	Float:hExit_X,
	Float:hExit_Y,
	Float:hExit_Z,
	hCost,
	hLevel,
	hOwner[24],
	hInt,
	bool:hLock,
	hMoney,
	hPodval,
	hVentPodval,
	hNalog,
	hNalog2,
	hKlass,
	hGarage,
	Float:hGarage_X,
	Float:hGarage_Y,
	Float:hGarage_Z,
	hDescription[32],
	hItem[90],
	hItemAmount[90],
	hModelObject[20],
	Float:hObjectPosX[20],
	Float:hObjectPosY[20],
	Float:hObjectPosZ[20],
	Float:hObjectRotX[20],
	Float:hObjectRotY[20],
	Float:hObjectRotZ[20],
	hObjectEdit[20],
	hObjectVW[20],
	bool:hTableNalog,
	Float:hTable_XYZ[3],
	Float:hTable_Rot[3]
};
new HouseInfo[MAX_HOUSES][hInfo];
new HRoomOwner[MAX_HOUSES][5] = {{-1, ...}, ...};
//warehouses
enum wInfo
{
	wID,
	wNameOwner[24],
	Float:wEnter_X,
	Float:wEnter_Y,
	Float:wEnter_Z,
	Float:wMenu_X,
	Float:wMenu_Y,
	Float:wMenu_Z,
	wTypeAngle,
	wItem[151],
	wItemAmount[150],
	wCodeDostup,
	wVirtualWorld,
	wDoor
};
new
	WareHouse[MAX_WAREHOUSES][wInfo],
	Text3D:ware3DText[MAX_WAREHOUSES] = {NONE_3D_TEXT, ...},
	Text3D:ware3DTextInside[MAX_WAREHOUSES] = {NONE_3D_TEXT, ...},
	warePickup[MAX_WAREHOUSES] = {-1, ...},
	warePickupInside[MAX_WAREHOUSES] = {-1, ...};
enum e_FightingStyleInfo
{
    fsID,
    fsName[13]
};
static const fighting_style_info[][e_FightingStyleInfo] =
{
    { FIGHT_STYLE_NORMAL, "Обычный" },
    { FIGHT_STYLE_BOXING, "Бокс" },
    { FIGHT_STYLE_KUNGFU, "Кунг-фу" },
    { FIGHT_STYLE_KNEEHEAD, "Без правил" },
    { FIGHT_STYLE_GRABKICK, "Grabkick" },
    { FIGHT_STYLE_ELBOW, "Удары локтём" }
};
//trailer
enum tinfo
{
	tID,
	tOwner[22-2],
	Float:tPos_X,
	Float:tPos_Y,
	Float:tPos_Z,
	Float:tPos_rX,
	Float:tPos_rY,
	Float:tPos_rZ,
	tLock,
	tPark,
	tActivated,
	tNalog,
	tModel,
	tObject,
	tPickup,
	Text3D:tLPickup
};
new TRi[MAX_TI][tinfo];
new TRiVehicle[MAX_PLAYERS];
//
enum bInfo
{
	bID,
	bState,
	Float:bEnter_X,
	Float:bEnter_Y,
	Float:bEnter_Z,
	Float:bExit_X,
	Float:bExit_Y,
	Float:bExit_Z,
	bOwner[24],
	bZam,
	bDescription[32],
	bCost,
	bNalog,
	bInt,
	bLock,
	bMoney,
	Float:bEnterPrice,
	bProducts,
	Float:bProdPrice,
	bKrasher,
	bNum,
	bVisit,
	bWin,
	bBuyCost,
	bNeedItem,
	bDayOfWeak[7],
	bItemCost[20],
	bModelObject[10],
	Float:bObjectPosX[10],
	Float:bObjectPosY[10],
	Float:bObjectPosZ[10],
	Float:bObjectRotX[10],
	Float:bObjectRotY[10],
	Float:bObjectRotZ[10],
	bObjectEdit[10]
}
new BizInfo[MAX_BIZ][bInfo];
//new questinfo from xxl games
enum g_QuestInfo
{
	qType, //для открытия
	qCountProgress,
	qName[50],
	Float:qGPS[3],
	qPresentItem[2],
	qPresentItemCount[2]
};
/*
	5144{1649, 34.5,  30.5,  0.000,  1.000000, 1, "", "$", 1},
	5145{1649, 34.5,  30.5,  0.000,  1.000000, 1, "", "exp", 1},
	5146{1649, 34.5,  30.5,  0.000,  1.000000, 1, "", "Coins", 1},
	5147{1649, 34.5,  30.5,  0.000,  1.000000, 1, "", "Rubles", 1}
*/
static const global_Quest[][g_QuestInfo] =
{
    {0, 2, "Начало жизни в штате {6DA5EF}[Сюжет]", {1495.1967,-1283.5261,14.5414}, {5146, 5145}, {1000000,16}},
	{0, 33,"Помощь прорабу {6DA5EF}[Сюжет]", {1467.7723, -1673.4635, 13.3729}, {5147, 5145}, {1000,32}},
	{0, 1, "Сложный выбор {6DA5EF}[Сюжет]", {1773.6545,-1897.6843,13.3857}, {5147, 5145}, {2200,48}},
	{0, 3, "[ПОДГОТОВКА] Форсаж 10 {6DA5EF}[Сюжет]", {1637.9214,-2239.6021,13.5015}, {5146, 5147}, {1000000,3333}},
	{0, 2, "Форсаж 10 {6DA5EF}[Сюжет]", {1637.9214,-2239.6021,13.5015}, {5146, 5145}, {500000,8}},
	{0, 2, "Спасатель экономики {6DA5EF}[Сюжет]", {1637.9214,-2239.6021,13.5015}, {5146, 5145}, {500000,8}},
	{0, 2, "Пора бы приодеться {6DA5EF}[Сюжет]", {1637.9214,-2239.6021,13.5015}, {5146, 5145}, {500000,8}},
	{0, 2, "Финальный этап {6DA5EF}[Сюжет]", {1637.9214,-2239.6021,13.5015}, {5114, 5147}, {1,5000}}
	//
};
//
new
	bool:player_Vue_Init[MAX_PLAYERS],
	bool:player_Svetle_Init[MAX_PLAYERS],
	bool:player_Status_Focus[MAX_PLAYERS],
	player_Cef_PositionWindow_X[MAX_PLAYERS],
	player_Cef_PositionWindow_Y[MAX_PLAYERS],
	player_Cef_PositionWindow_rX[MAX_PLAYERS],
	player_Cef_PositionWindow_rY[MAX_PLAYERS],
	bool:player_Cef_ShowChat[MAX_PLAYERS];
//
enum p_QuestInfo
{
	qProgress[sizeof global_Quest],
	qStatus[sizeof global_Quest]
	/*
	0 не принят
	1 принят(не выполнен)
	2 принят(выполнен)
	*/
};
new player_Quest[MAX_PLAYERS][p_QuestInfo],
	player_QuestSave[MAX_PLAYERS char],
	player_InvSave[MAX_PLAYERS char],
	player_InterfaceSave[MAX_PLAYERS char];
stock ShowInfoQuest(i, string[])
{
	switch(i)
	{
		case 0: strcat(string, "{FFFFFF}\
								- Привет дружище, наверняка мы знакомы, поэтому я представлюсь.\n\
								- Я сотрудник компании \"Путь к успеху\" и я буду первым кто поможет тебе...\n\
								- ...изменить свою жизнь в лучшую сторону!\n\
								{DA9815}- Первым заданием будет сделать паспорт в Мерии ( /gps -> Важные места ),\n\
								 ищи свободный транспорт и двигайся в путь, но перед этим посети внутриигровой магазин ( /donate ) и приобрети пакет лицензий.\n\
								- Следующим шагом будет покупка дома, машины и бизнеса, после чего можешь возвращаться ко мне, для получения награды.", 500);
		
		case 1: strcat(string, "{FFFFFF}\
								- Привет приятель, закончил свой первый квест? Отлично, у меня для тебя ещё много заданий.\n\
								- Следующее задание \"Помощь Прорабу\".\n\
								- На площади в скором времени начнётся стройка и он в поисках быстрых рабочих за неплохую сумму.\n\
								{DA9815}- Всё что тебе нужно будет сделать, убрать с площади Центрального Банка 33 мусора.\n\
								- По завершению отправляйся ко мне и забирай свою награду.", 500);
		case 2: strcat(string, "{FFFFFF}\
								- Привет дружище, я вижу ты неплохо подкачался помогая прорабу.\n\
								{DA9815}- Сейчас от тебя требуется найти работу...\n\
								...они все абсолютно разные, но тебе нужно выбрать только одну!\n\
								- Это довольно таки сложный выбор, идти ловить преступников и стать на порядок закона\n\
								или пойти в нелегальную группировку, и крышевать школьников после магазинов.\n\
								Выбор за тобой!", 500);
		case 3: strcat(string, "{FFFFFF}\
								- Оооо, какие люди, да ты зачастил. \n\
								- Хочешь очередное задание? Нет проблем. \n\
								- Считал себя водилой из Форсажа? Тогда слушай. \n\
								- \"Опасное вождение{AAAAAA}[ПОДГОТОВКА]{FFFFFF}\" твой тест на прочность. \n\
								{DA9815}- Тебе необходимо совершить 3 гонки подряд и выиграть их, \n\
								- чтобы начать гонку тебе нужно посигналить рядом со стоящим автомобилем\n\
								- и следовать всем указаниям уведомления.", 500);
		/*case 4: strcat(string, "\n{FFFFFF}\
								- Оооо, какие люди, да ты зачастил. \n\
								- Хочешь очередное задание? Нет проблем. \n\
								- Считал себя водилой из Форсажа? Тогда слушай. \n\
								- \"Опасное вождение\" твой тест на прочность. \n\
								{DA9815}- На GPS будут показаны чекпоинты, проезжая которые у тебя будет меняться вид транспорта. \n\
								- Учти, испортишь имущество, не засчитаю выполнение. \n\
								- Что глаза вылупил, данные у тебя на навигаторе, счастливой дороги", 500);*/
		default: strcat(string, "{FFFFFF}Квест будет доступен после 10:00, 21 января 2023 года{DA9815}", 500);
	}
}
CMD:quest(playerid) SPD(playerid, 25857, DIALOG_STYLE_LIST, !"Квесты", !"{ff6666}[1] {ffffff}Список принятых квестов", !"Выбрать", !"Отмена");
stock ShowQuest(playerid, type)
{
	str_1[0] = EOS;
	new count;
	for(new i; i < sizeof global_Quest; i++)
	{
		if(global_Quest[i][qType] != type) continue;
		UpdatePlayerQuest(playerid, i);
		str_2[0] = EOS;
		if(!player_Quest[playerid][qStatus][i]) player_Global_Int[playerid][count] = -1, f(str_2, sizeof(str_2), "%s {3A8819}[Доступен]\n",global_Quest[i][qName]);
		else if(player_Quest[playerid][qStatus][i] == 1 && player_Quest[playerid][qProgress][i] < global_Quest[i][qCountProgress]) player_Global_Int[playerid][count] = 0, f(str_2, sizeof(str_2), "%s {DA9815}[В процессе]\n",global_Quest[i][qName]);
		else if(player_Quest[playerid][qStatus][i] == 1 && player_Quest[playerid][qProgress][i] == global_Quest[i][qCountProgress]) player_Global_Int[playerid][count] = 1, f(str_2, sizeof(str_2), "%s {307CDA}[Можно завершить]\n",global_Quest[i][qName]);
		else if(player_Quest[playerid][qStatus][i] == 2) player_Global_Int[playerid][count] = 2, f(str_2, sizeof(str_2), "%s {C71D1D}[Выполнен]\n",global_Quest[i][qName]);
		strcat(str_1, str_2);
		player_Global_Int[playerid][100+count] = i;
		count++;
	}
	SPD(playerid, 7971, DIALOG_STYLE_LIST, !"Квесты", str_1, !"Принять", !"Отмена");
}
stock ShowQuestInfo(playerid, i, dialogid, const str[], const str2[], const button1[], const button2[])
{
	if(player_Quest[playerid][qStatus][i] == 2) return SendBotMessage(playerid,!"Вы уже выполняли у меня это задание!");
	str_2[0] = EOS;
	for(new j; j < 2; j++)
	{
		switch(global_Quest[i][qPresentItem][j])
		{
			case 5144..5147:
			{
				if(j == 1) f(str_2, sizeof(str_2), "%s%i%s", str_2, global_Quest[i][qPresentItemCount][j], ItemsInfo[global_Quest[i][qPresentItem][j]][ItemName]);
				else f(str_2, sizeof(str_2), "%s%i%s, ", str_2, global_Quest[i][qPresentItemCount][j], ItemsInfo[global_Quest[i][qPresentItem][j]][ItemName]);
			}
			default:
			{
				if(j == 1) f(str_2, sizeof(str_2), "%s%s( %i шт. )", str_2, ItemsInfo[global_Quest[i][qPresentItem][j]][ItemName],global_Quest[i][qPresentItemCount][j]);
				else f(str_2, sizeof(str_2), "%s%s( %i шт. ), ", str_2, ItemsInfo[global_Quest[i][qPresentItem][j]][ItemName],global_Quest[i][qPresentItemCount][j]);
			}
		}
	}
	str_1[0] = EOS;
	ShowInfoQuest(i, str_1);
	f(str_1, sizeof(str_1), "%s\n\nНаграда за выполение:\n%s\n\n%s", str_1, str_2, str);
	SPD(playerid, dialogid, DIALOG_STYLE_MSGBOX, str2, str_1, button1, button2);
	return 1;
}
stock UpdatePlayerQuest(playerid, i, add=0)     //	Обновить квест игрока
{
	new bool:over = true;
	switch(i)
	{
		case 0: 
		{
			if(player_Quest[playerid][qStatus][i] == 1)
			{
				if(IsValidPassport(playerid) && GetPlayerHouses(playerid) != -1 && GetPlayerBiz(playerid) != -1 && GetNumberCars(playerid) != 0) player_Quest[playerid][qProgress][i] = global_Quest[i][qCountProgress];
			}
		}
		case 1,3: 
		{
			if(player_Quest[playerid][qStatus][i] == 1 && add != 0 && player_Quest[playerid][qProgress][i] < global_Quest[i][qCountProgress]) player_Quest[playerid][qProgress][i] += add;
		}
		case 2: if(player_Quest[playerid][qStatus][i] == 1 && PI[playerid][pMember] != 0) player_Quest[playerid][qProgress][i] = global_Quest[i][qCountProgress];
	}
	if(player_Quest[playerid][qProgress][i] == global_Quest[i][qCountProgress] && player_Quest[playerid][qStatus][i] == 1) over = false;
	if(!over)
	{
		if(!PI[playerid][pRace]) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
		else EnableGPSForPlayer(playerid,1163.6832, -1754.9606, 13.6179);
		SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
		SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
		if(player_QuestSave{playerid} == 0) player_QuestSave{playerid} = 5;
	}
}
enum billboard 
{ 
	Float:bPosBill[3], 
	Float:bPosObject1[6], 
	Float:bPosObject2[6], 
	Float:bPosObject3[6], 
	Float:bPosCamera[6], 
	bObject[2], 
	bText[80], 
	bLine1[25], 
	bLine2[25], 
	bLine3[25], 
	bID, 
	bHours, 
	bFon, 
	bColor, 
	bOwner
};
new BillboardInfo[][billboard] = {
	{{2814.4243, -1881.8254, 11.1016}, 
		{2825.994141, -1884.047363, 22.811729, 0.000055, 0.000012, 0.499870}, 
		{2826.005859, -1884.087402, 22.781731, 0.000055, 0.000012, 0.499870}, 
		{2823.808350, -1884.100098, 16.836166, 0.000012, -0.000055, 90.499992}, 
		{2818.717285, -1906.293579, 25.081020, 2820.087158, -1901.508178, 24.608188}},
		//7,288574	//?+22,206177 //?2,299289 //+-5,918701 //+?17,420776 //?1,826457
	{{2421.7739, -2100.3008, 13.5538}, \
		{2423.374756, -2089.530273, 24.094213, 0.000080, -0.000011, 89.799675}, 
		{2423.414551, -2089.519043, 24.064215, 0.000080, -0.000011, 89.799675}, 
		{2423.400635, -2091.716553, 18.118649, -0.000011, -0.000080, 179.800171}, 
		{2441.101318, -2095.126220, 25.195625, 2436.239990, -2093.981201, 24.957344}},

	{{2455.7642, -1741.9806, 13.6264}, \
		{2457.274902, -1733.206299, 23.977331, 0.000059, 0.000125, 90.000343},\
		{2457.313965, -1733.194580, 23.947332, 0.000059, 0.000125, 90.000343}, \
		{2457.308105, -1735.392578, 18.001774, 0.000125, -0.000059, -179.999908}, \
		{2473.917480, -1738.536499, 25.454164, 2469.041503, -1737.469970, 25.159669}},

	{{2272.8809, -1721.9061, 13.5469}, {2271.649414, -1731.535278, 23.917362, 0.000059, 0.000118, -89.999596}, {2271.610107, -1731.546753, 23.887363, 0.000059, 0.000118, -89.999596}, {2271.615967, -1729.348877, 17.941805, 0.000118, -0.000059, 0.000044}, {2253.558349, -1726.319213, 24.586248, 2258.456054, -1727.308227, 24.402603}},
	{{2107.9106, -1762.6115, 13.5625}, {2109.385254, -1752.157959, 24.872065, 0.000068, 0.000125, 90.000320}, {2109.424316, -1752.146240, 24.842066, 0.000068, 0.000125, 90.000320}, {2109.418457, -1754.344238, 18.896507, 0.000125, -0.000068, -179.999863}, {2125.802490, -1757.924804, 25.855955, 2120.931152, -1756.822753, 25.617963}},
	{{1970.5095, -1743.8407, 13.5469}, {1968.290894, -1755.428833, 25.348219, 0.000071, 0.000004, -89.500145}, {1968.250854, -1755.440552, 25.318220, 0.000071, 0.000004, -89.500145}, {1968.238159, -1753.243164, 19.372656, 0.000004, -0.000071, 0.500045}, {1952.338623, -1750.441528, 26.072139, 1957.236206, -1751.446533, 26.006944}},
	{{1828.9608, -1877.9484, 13.5602}, {1827.507324, -1888.672241, 23.627796, 0.000086, 0.000019, -89.500275}, {1827.467285, -1888.683960, 23.597797, 0.000086, 0.000019, -89.500275}, {1827.454590, -1886.486572, 17.652233, 0.000019, -0.000086, 0.500002}, {1809.830200, -1882.564331, 24.352703, 1814.664306, -1883.833251, 24.209430}},
	{{1654.2416, -1742.0699, 13.5469}, {1655.917603, -1732.081787, 25.367352, 0.000075, 0.000142, 89.600464}, {1655.937134, -1732.010254, 25.337353, 0.000075, 0.000142, 89.600464}, {1655.841187, -1733.756714, 19.391794, 0.000142, -0.000075, 179.599991}, {1673.198120, -1736.680419, 26.835289, 1668.289062, -1735.833862, 26.406040}},
	{{1543.5693, -1721.4807, 13.5546}, {1540.699707, -1732.408691, 25.547424, 0.000075, 0.000134, -90.399544}, {1540.679810, -1732.520264, 25.517426, 0.000075, 0.000134, -90.399544}, {1540.776123, -1730.733765, 19.571865, 0.000134, -0.000075, -0.400000}, {1522.064819, -1726.937133, 27.307518, 1526.942993, -1727.934448, 26.851030}},
	{{1156.2915, -2366.6169, 12.0365}, {1158.100342, -2377.443604, 24.532982, -0.000053, 0.000002, -77.399330}, {1158.089600, -2377.488281, 24.502983, -0.000053, 0.000002, -77.399330}, {1157.802368, -2375.803467, 18.557411, 0.000002, 0.000053, 12.600249}, {1139.878662, -2373.654052, 25.240688, 1144.854003, -2374.140625, 25.142045}},
	{{1187.6422, -1841.1423, 13.5703}, {1185.958862, -1851.410889, 25.700323, -0.000007, 0.000007, -89.999947}, {1185.938843, -1851.492065, 25.670321, -0.000007, 0.000007, -89.999947}, {1186.025757, -1849.734741, 19.724751, 0.000007, 0.000007, 0.000007}, {1167.017700, -1846.797973, 26.853553, 1171.940673, -1847.639404, 26.615272}},
	{{894.8101, -1794.7205, 13.6182}, {896.291077, -1783.707275, 23.767418, 0.000044, 0.000155, 86.600334}, {896.319031, -1783.566406, 23.737419, 0.000044, 0.000155, 86.600334}, {896.126099, -1785.364990, 17.791855, 0.000155, -0.000044, 176.600098}, {913.641723, -1789.216064, 24.112100, 908.788024, -1788.015380, 24.128934}},
	{{620.9211, -1688.0077, 15.8665}, {632.326904, -1691.010010, 27.637426, 0.000059, 0.000150, -3.399770}, {632.336182, -1691.049805, 27.607428, 0.000059, 0.000150, -3.399770}, {630.142578, -1690.913574, 21.661863, 0.000150, -0.000059, 86.600060}, {627.365051, -1707.684936, 28.829441, 628.330200, -1702.782714, 28.636690}},
	{{698.9892, -1740.1584, 13.5912}, {692.985840, -1749.742065, 25.867443, 0.000045, 0.000153, -109.699715}, {692.934875, -1749.767944, 25.837446, 0.000045, 0.000153, -109.699715}, {693.610962, -1748.195313, 19.891882, 0.000153, -0.000045, -19.699945}, {679.688964, -1741.118652, 27.191175, 684.163879, -1743.346923, 27.089529}},
	{{644.4193, -1527.4099, 15.1707}, {632.834229, -1525.240723, 27.650446, 0.000031, 0.000027, -179.199997}, {632.822571, -1525.200806, 27.620447, 0.000031, 0.000027, -179.199997}, {635.020142, -1525.176880, 21.674877, 0.000027, -0.000031, -89.199760}, {636.706726, -1508.403198, 29.561685, 636.034179, -1513.337646, 29.115606}},
	{{658.9831, -1387.7284, 13.6697}, {656.543396, -1399.284668, 24.985287, -0.000014, 0.000007, -89.999924}, {656.503357, -1399.295776, 24.955284, -0.000014, 0.000007, -89.999924}, {656.510193, -1397.098022, 19.009714, 0.000007, 0.000014, 0.000007}, {640.786804, -1395.585449, 26.373048, 645.745788, -1396.153686, 26.080156}},
	{{812.8994, -1413.4307, 13.5306}, {813.365173, -1401.844238, 25.759979, -0.000012, 0.000012, 91.299988}, {813.404968, -1401.832520, 25.729977, -0.000012, 0.000012, 91.299988}, {813.447998, -1404.029663, 19.784409, 0.000012, 0.000012, -178.699997}, {831.107360, -1404.219604, 26.618478, 826.114318, -1403.964355, 26.553283}},
	{{1110.5092, -1412.7762, 13.5807}, {1112.805664, -1401.168823, 25.002289, 0.000038, 0.000018, 90.099953}, {1112.845703, -1401.157593, 24.972290, 0.000038, 0.000018, 90.099953}, {1112.842773, -1403.355225, 19.026720, 0.000018, -0.000038, -179.899673}, {1129.035400, -1403.853881, 26.898286, 1124.055541, -1403.544067, 26.573524}},
	{{1249.7881, -1413.0706, 13.3337}, {1239.014771, -1411.572754, 24.947016, 0.000054, 0.000012, -179.899994}, {1239.003540, -1411.532715, 24.917015, 0.000054, 0.000012, -179.899994}, {1241.201172, -1411.535645, 18.971445, 0.000012, -0.000054, -89.899590}, {1241.928466, -1395.984008, 26.418136, 1241.544433, -1400.963500, 26.179861}},
	{{1320.4818, -1581.4617, 13.5469}, {1309.076660, -1578.713501, 24.877363, 0.000068, 0.000127, 179.600372}, {1309.065430, -1578.674316, 24.847364, 0.000068, 0.000127, 179.600372}, {1311.263306, -1578.695190, 18.901806, 0.000127, -0.000068, -90.399948}, {1313.081298, -1563.673461, 26.233474, 1312.452148, -1568.626953, 25.975156}},
	{{1262.0665, -1704.1217, 13.5469}, {1259.794067, -1715.752563, 24.257418, 0.000079, 0.000148, -89.799759}, {1259.754761, -1715.764282, 24.227419, 0.000079, 0.000148, -89.799759}, {1259.752808, -1713.566040, 18.281862, 0.000148, -0.000079, 0.199911}, {1243.515747, -1712.396118, 25.364488, 1248.480346, -1712.954711, 25.162630}},
	{{1528.1219, -1290.0034, 15.5296}, {1525.721680, -1301.564209, 28.657431, 0.000075, 0.000134, -90.399475}, {1525.682495, -1301.575439, 28.627432, 0.000075, 0.000134, -90.399475}, {1525.703369, -1299.377563, 22.681873, 0.000134, -0.000075, -0.399890}, {1510.277709, -1298.953369, 29.930749, 1515.260986, -1299.256103, 29.656059}},
	{{1334.1090, -1157.6360, 23.8281}, {1344.888428, -1159.202515, 36.111992, 0.000051, 0.000050, 0.099853}, {1344.900146, -1159.242432, 36.081993, 0.000051, 0.000050, 0.099853}, {1342.702637, -1159.239990, 30.136429, 0.000050, -0.000051, 90.099892}, {1343.003540, -1173.497802, 36.276576, 1343.287841, -1168.505859, 36.284297}},
	{{1365.4429, -1128.7878, 23.8475}, {1353.885864, -1128.097412, 34.847549, 0.000073, 0.000140, -179.799667}, {1353.874146, -1128.058105, 34.817551, 0.000073, 0.000140, -179.799667}, {1356.072388, -1128.056152, 28.871992, 0.000140, -0.000073, -89.800034}, {1356.599121, -1112.905517, 35.274463, 1356.326660, -1117.897338, 35.362201}},
	{{1132.5563, -1133.3685, 23.8281}, {1131.828003, -1144.960083, 36.057590, 0.000044, 0.000148, -89.999611}, {1131.788940, -1144.971558, 36.027592, 0.000044, 0.000148, -89.999611}, {1131.794678, -1142.773804, 30.082027, 0.000148, -0.000044, 0.000128}, {1116.983032, -1142.319580, 36.420783, 1121.967041, -1142.706542, 36.519645}},
	{{983.5571, -1156.7943, 23.8625}, {985.839233, -1145.238037, 36.006256, 0.000015, 0.000035, 90.199905}, {985.879272, -1145.226807, 35.976257, 0.000015, 0.000035, 90.199905}, {985.880249, -1147.424561, 30.030687, 0.000035, -0.000015, -179.799835}, {1000.664123, -1148.143554, 36.731964, 995.683105, -1147.713500, 36.666770}}
};
new bool:BillOpen[MAX_PLAYERS char];
//
//captcha
stock Float:frandom(Float:min, Float:max) return float(random(0)) / (float(cellmax) / (max - min)) + min;
const 
	Float:CAPTCHA_WINDOW_STANDART_X = 248.848007,
	Float:CAPTCHA_WINDOW_STANDART_Y = 123.900002,
	Float:CAPTCHA_NUMBER_STANDART_X = 281.389984,
	Float:CAPTCHA_NUMBER_STANDART_Y = 132.508331;

const 
	Float:CAPTCHA_WINDOW_MIN_X = 225.848007,
	Float:CAPTCHA_WINDOW_MAX_X = 250.848007,
	Float:CAPTCHA_WINDOW_MIN_Y = 117.900002,
	Float:CAPTCHA_WINDOW_MAX_Y = 129.900002;

enum captcha_player_data 
{
	PlayerText:captcha_window_td[2],
	PlayerText:number_window_td[5],
	PlayerText:number_td[30],
	Float:CaptchaSize_X,
	Float:CaptchaSize_Y,
	Numberstr[6]
};

new CaptchaData[MAX_PLAYERS][captcha_player_data];

stock Float:GetCaptchaSize_Y(Float:one)
{
	new Float:test = 0.0, count = floatround(one - 118.000);

	test = 0.09 * count;

	return test;
}

stock Float:GetCaptchaSize_X(Float:one)
	return (one/5);

stock CreateCapcha_windownumber(playerid, Float:X, Float:sizeX, Float:Y, position)
{
	new 
		Float:pos_X = X + 32.541977 + (GetCaptchaSize_X(sizeX) * position) -(1.5 * position), 
		Float:pos_Y = Y + 8.608329,
		Float:size_X = X + 4.5 + (GetCaptchaSize_X(sizeX) * position)-position,
		Float:size_Y = 4.524949 + frandom(0.0, GetCaptchaSize_Y(Y));

	CaptchaData[playerid][number_window_td][position] = CreatePlayerTextDraw(playerid, pos_X, pos_Y, "usebox");
	PlayerTextDrawLetterSize(playerid, CaptchaData[playerid][number_window_td][position], 0.000000, size_Y );
	PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_window_td][position], size_X, 0.000000);
	PlayerTextDrawAlignment(playerid, CaptchaData[playerid][number_window_td][position], 1);
	PlayerTextDrawColor(playerid, CaptchaData[playerid][number_window_td][position], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, CaptchaData[playerid][number_window_td][position], 1);
	PlayerTextDrawBoxColor(playerid, CaptchaData[playerid][number_window_td][position], 0x1A2432FF);
	PlayerTextDrawSetShadow(playerid, CaptchaData[playerid][number_window_td][position], 2);
	PlayerTextDrawSetOutline(playerid, CaptchaData[playerid][number_window_td][position], 0);
	PlayerTextDrawBackgroundColor(playerid, CaptchaData[playerid][number_window_td][position], 0x000000FF);
	PlayerTextDrawFont(playerid, CaptchaData[playerid][number_window_td][position], 0);
	PlayerTextDrawSetProportional(playerid, CaptchaData[playerid][number_window_td][position], 1);
	PlayerTextDrawSetSelectable(playerid, CaptchaData[playerid][number_window_td][position], 0);

	PlayerTextDrawShow(playerid, CaptchaData[playerid][number_window_td][position]);
	
	return CreateNumberCaptchaTD(playerid, pos_X, pos_Y, size_X, size_Y, position);
}
#define default_captcha(%1,%0) PlayerTextDrawAlignment(%1, %0, 1), PlayerTextDrawColor(%1, %0, 0x759DA3FF), PlayerTextDrawLetterSize(%1, %0, 0.480000, 1.120000), PlayerTextDrawUseBox(%1, %0, 0), PlayerTextDrawBoxColor(%1, %0, 0x80808080), PlayerTextDrawSetShadow(%1, %0, 2), PlayerTextDrawSetOutline(%1, %0, 0), PlayerTextDrawBackgroundColor(%1, %0, 0x00000000), PlayerTextDrawFont(%1, %0, 4), PlayerTextDrawSetProportional(%1, %0, 1), PlayerTextDrawSetSelectable(%1, %0, 0), PlayerTextDrawShow(%1, %0)
stock CreateNumberCaptchaTD(playerid, Float:X, Float:Y, Float:sizeX, Float:sizeY, td)
{
	new 
		number,	Float:randomX, Float:randomY = frandom(-7.0, 1.0);

	number = td == 4 ? (random(100) < 9 ? random(10):0):(random(10));
	strcat(CaptchaData[playerid][Numberstr], IntToStr(number));

	switch(number)
	{
		case 0:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			randomX = frandom(-3.0, -1.5);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X + (-3.3 + randomX), Y - randomY, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 6.3 + (randomX * -2), (Y / 4.3) + 6.3 + randomY * 2);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
		}

		case 1:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - 6.3, Y - 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 6.3, (Y / 4.0) + 15.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
		}

		case 2:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - 4.3, Y + 5.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 4.3, (Y / 8.0) - 5.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X, Y + 23.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 5.3, (Y / 4.0) - 23.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 3:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - 4.3, Y + 5.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 4.3, (Y / 8.0) - 5.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X - 4.3, Y + 23.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 4.3, (Y / 4.0) - 23.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 4:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			randomX = frandom(-4.0, 0.5);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X + (-6.0 + randomX), Y - 4.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 12.0 + (randomX * -2), (Y / 8.0) + 4.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X + (-5.7 + randomX), Y + 23.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 6.3 + (randomX * -1.5), (Y / 4.0) - 10.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 5:
		{

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X - 8.3, Y + 23.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 8.3, (Y / 4.0) - 23.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 6:
		{
			randomX = frandom(-1.5, 1.5), randomY = frandom(0.0, 2.0);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - randomX, Y + 5.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0 + randomX*1.5, (Y / 8.0) - 5.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X - 4.3 - randomX, Y + 23.3 + randomY, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 12.3 + randomX*3, (Y / 4.0) - 23.3 + randomY*2);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 7:
		{

			randomY = frandom(0.0, 2.5);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X + (-6.3 + randomX) - randomY, Y + 4.3 + randomY, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 6.3 + (randomX * -1.5) + randomY, (Y / 2.9) - 4.3 - randomY);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
		}

		case 8:
		{

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - 6.0, Y + 4.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 12.0, (Y / 8.0) - 4.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X - 6.0, Y + 23.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 12.0, (Y / 4.0) - 23.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}

		case 9:
		{
			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X , Y + 3.0, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 8.0, (Y / 8.0) - 3.0);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);
			DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			randomX = frandom(0.0, 2.5), randomY = frandom(0.0, 2.0);

			CaptchaData[playerid][number_td][0 + td *6] = CreatePlayerTextDraw(playerid, X - 8.3 + randomX, Y + 5.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][0 + td * 6], sizeX - X + 16.0 - randomX*2, (Y / 8.0) - 5.3);
			default_captcha(playerid, CaptchaData[playerid][number_td][0 + td * 6]);

			CaptchaData[playerid][number_td][1 + td *6] = CreatePlayerTextDraw(playerid, X - 6.3, Y + 23.3, "LD_SPAC:white");
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][number_td][1 + td * 6], sizeX - X + 6.3, (Y / 4.0) - 23.3 + frandom(0.0, (sizeY - 4.2) * 10));
			default_captcha(playerid, CaptchaData[playerid][number_td][1 + td * 6]);
		}
	}

	return 1;
}

stock CreateCaptchaWindow(playerid, Float:X, Float:Y)
{
	new 
		Float:sizeX = X - (X > CAPTCHA_WINDOW_STANDART_X ? (102.226013 + (CAPTCHA_WINDOW_STANDART_X - X)*2):(102.226013 - (CAPTCHA_WINDOW_STANDART_X - X)*2)), 
		Float:sizeY = Y - 63.630002;

	CaptchaData[playerid][CaptchaSize_X] = CAPTCHA_WINDOW_STANDART_X - X;
	CaptchaData[playerid][CaptchaSize_Y] = CAPTCHA_WINDOW_STANDART_Y - Y;

	for(new i = 1; i > -1; i--)
	{		
		if(!i)
		{
			CaptchaData[playerid][captcha_window_td][i] = CreatePlayerTextDraw(playerid, X + 3.0, Y + 3.0, "LD_SPAC:white"),
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][captcha_window_td][i], sizeX - 6.0, sizeY - 6.0);
		}
		else
		{
			CaptchaData[playerid][captcha_window_td][i] = CreatePlayerTextDraw(playerid, X, Y, "LD_SPAC:white"),
			PlayerTextDrawTextSize(playerid, CaptchaData[playerid][captcha_window_td][i], sizeX, sizeY);
		}
		PlayerTextDrawLetterSize(playerid, CaptchaData[playerid][captcha_window_td][i], 0.480000, 1.120000);
		PlayerTextDrawAlignment(playerid, CaptchaData[playerid][captcha_window_td][i], 1);
		PlayerTextDrawColor(playerid, CaptchaData[playerid][captcha_window_td][i], !i ? 0x759DA3FF:0x1A2432FF);
		PlayerTextDrawUseBox(playerid, CaptchaData[playerid][captcha_window_td][i], 0);
		PlayerTextDrawBoxColor(playerid, CaptchaData[playerid][captcha_window_td][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, CaptchaData[playerid][captcha_window_td][i], 2);
		PlayerTextDrawSetOutline(playerid, CaptchaData[playerid][captcha_window_td][i], 0);
		PlayerTextDrawBackgroundColor(playerid, CaptchaData[playerid][captcha_window_td][i], 0x000000FF);
		PlayerTextDrawFont(playerid, CaptchaData[playerid][captcha_window_td][i], 4);
		PlayerTextDrawSetProportional(playerid, CaptchaData[playerid][captcha_window_td][i], 1);
		PlayerTextDrawSetSelectable(playerid, CaptchaData[playerid][captcha_window_td][i], 0);
		PlayerTextDrawShow(playerid, CaptchaData[playerid][captcha_window_td][i]);
	}
	for(new i; i < 5; i++) CreateCapcha_windownumber(playerid, X, sizeX, Y, i);
	return 1;
}
new const captchatop_type[][] = {"Undef", "Дома", "Бизнесы", "Свободный ввод"};
public: @captchatop(playerid)
{
	str_1 = "{FFFF00}№записи | Ник (uID)\t{FFFF00}Тип\t{FFFF00}Капча | timeMS\t{FFFF00}~= Время записи в память";
	for(new i; i < cache_num_rows(); i++)
	{
		new Float:ms;
		cache_get_string(i, !"captcha", SQL_GET_ROW_STR[0]);
		cache_get_string(i, !"data", SQL_GET_ROW_STR[1]);
		cache_get_string(i, !"ownerName", SQL_GET_ROW_STR[2]);
		cache_get_int(i, !"id", player_Global_Int[playerid][0]);
		cache_get_int(i, !"ownerId", player_Global_Int[playerid][1]); 
		cache_get_int(i, !"type", player_Global_Int[playerid][2]);
		cache_get_float(i, "MS", ms);
		strcat(str_1, (str_f("\n#%d | {FFFF00}%s (%d)\t%s\t%s | {FFFF00}%.2f ms\t%s",\
		player_Global_Int[playerid][0],SQL_GET_ROW_STR[2],\
		player_Global_Int[playerid][1],captchatop_type[player_Global_Int[playerid][2]],\
		SQL_GET_ROW_STR[0], ms, SQL_GET_ROW_STR[1])));
	}
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"»", !"«");
}

CMD:captchatop(playerid) return SPD(playerid, 9929, DIALOG_STYLE_LIST, !"Выберите какой формат", !"{D08D94}»{FFFFFF} Топ 30 за последний час\n{D08D94}»{FFFFFF} Топ 30 за день\n{D08D94}»{FFFFFF} Топ 30 за неделю\n{D08D94}»{FFFFFF} Топ 50 за месяц\n{D08D94}»{FFFFFF} Личный топ ( список вашего лучшего времени )", !"Выбрать", !"Отмена");
stock DestroyCaptcha_BOT(playerid)
{
	CreateBrowser(playerid, 3, "https://");
	SetFocusBrowser(playerid, 3, false);
	for(new i; i < 30; i++)
	{
		if(i < 2) DestroyPlayerTD(playerid, CaptchaData[playerid][captcha_window_td][i]);
		if(i < 5) DestroyPlayerTD(playerid, CaptchaData[playerid][number_window_td][i]);
		DestroyPlayerTD(playerid, CaptchaData[playerid][number_td][i]);
	}
	CaptchaData[playerid][Numberstr][0] = EOS;
	DeletePVar(playerid, !"captchaOpen");
	DeletePVar(playerid, !"CaptchAntiDeBug");
	DeletePVar(playerid, !"CaptchaAPIstr");
	return DeletePVar(playerid, !"lsd");
}

stock CreateCaptcha_BOT(playerid, type)
{
	if(GetPVarInt(playerid, !"captchaOpen")) return 0;
	DestroyCaptcha_BOT(playerid);
	if(!PI[playerid][pTypeCaptcha])
	{
		CreateCaptchaWindow(playerid, frandom(CAPTCHA_WINDOW_MIN_X, CAPTCHA_WINDOW_MAX_X), frandom(CAPTCHA_WINDOW_MIN_Y, CAPTCHA_WINDOW_MAX_Y) );
		SPD(playerid, 23045, DIALOG_STYLE_INPUT, !"{ab6c59}Проверка на робота", !"{FFFFFF}Введите {abaf67}5{FFFFFF} символов, которые\nвидно на {abaf67}вашем{FFFFFF} экране.", !"Принять", !"Отмена");
	}
	else
	{
		CreateBrowser(playerid, 3, "https://api-samp.arizona-five.com/hcaptcha.php");
		SetFocusBrowser(playerid, 3, true);
	}
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%i,%s", type, CaptchaData[playerid][Numberstr]);
	SetPVarString(playerid, "CaptchaAPIstr", str_1);
	SetPVarInt(playerid, !"CaptchAntiDeBug", type == 1 ? InfoHouse[playerid] : InfoBiz[playerid]);
	SetPVarInt(playerid, !"lsd", GetTickCount());
	return SetPVarInt(playerid, !"captchaOpen", true);
}
//
static const Float:MusorPos[][4] = {
	{1407.202026, -1725.166992, 13.397000, 180.000000},
	{1369.020020, -1740.078003, 13.428000, 360.000000},
	{851.635010, -1761.807007, 13.458000, 180.000000},
	{661.043030, -1761.879028, 13.439000, 346.000000},
	{2074.790039, -1624.520020, 13.500000, 270.549011},
	{349.023010, -1815.030029, 4.289000, 360.000000},
	{-33.243999, -1534.015015, 2.236000, 262.657013},
	{1214.468018, -1374.000000, 13.423000, 90.000000},
	{1446.828979, -1265.609009, 13.350000, 270.000000},
	{-1999.123047, -109.058998, 35.923000, 90.000000},
	{-2015.042969, 155.531006, 27.562000, 270.000000},
	{-2140.270020, 296.269989, 35.473999, 90.000000},
	{-2167.326904, 313.368011, 35.187000, 360.000000},
	{533.750000, 842.809021, -42.380001, 65.767998},
	{526.330017, 840.280029, -42.868000, 339.230011},
	{526.330017, 840.280029, -42.868000, 339.230011},
	{1190.879028, -1745.456055, 13.414000, 90.000000},
    {1464.30004883,-725.00000000,92.50000000,110.00000000},
	{1514.50000000,-776.00000000,79.69999695,126.00000000},
	{1523.40002441,-794.79998779,74.09999847,87.99670410},
	{1522.69995117,-837.29998779,67.00000000,87.99499512},
	{1459.30004883,-888.09997559,55.29999924,337.99499512},
	{1415.69995117,-930.59997559,35.70000076,175.99438477},
	{1444.40002441,-934.40002441,36.09999847,175.98999023},
	{1273.50000000,-914.29998779,42.00000000,185.98999023},
	{1236.59997559,-920.79998779,42.70000076,189.98754883},
	{1179.19995117,-932.09997559,43.00000000,189.98657227},
	{1133.69995117,-1033.09997559,31.70000076,179.98657227},
	{1116.69995117,-1033.19995117,31.70000076,179.98352051},
	{1091.90002441,-1071.90002441,27.89999962,89.98352051},
	{1091.90002441,-1097.69995117,24.89999962,89.97802734},
	{1172.00000000,-1104.69995117,24.70000076,89.97802734},
	{1171.90002441,-1070.80004883,28.10000038,89.97802734},
	{1199.50000000,-1029.09997559,31.79999924,179.97802734},
	{1237.30004883,-1028.50000000,31.79999924,179.97802734},
	{820.79998779,-1411.90002441,13.30000019,359.97802734},
	{848.90002441,-1412.09997559,13.19999981,359.97253418},
	{883.79998779,-1412.30004883,12.89999962,359.97253418},
	{908.59997559,-1467.90002441,13.39999962,269.97253418},
	{908.29998779,-1509.59997559,13.39999962,269.96704102},
	{858.09997559,-1523.90002441,13.39999962,269.96704102},
	{801.00000000,-1689.40002441,13.39999962,269.96704102},
	{801.29998779,-1703.59997559,13.39999962,269.96704102},
	{801.09997559,-1724.00000000,13.39999962,269.96704102},
	{796.00000000,-1759.90002441,13.30000019,179.96704102},
	{764.29998779,-1744.19995117,12.10000038,89.96704102},
	{763.40002441,-1690.69995117,4.30000019,89.96154785},
	{788.09997559,-1665.59997559,13.30000019,179.96154785},
	{648.29998779,-1644.30004883,14.80000019,89.95605469},
	{647.59997559,-1614.40002441,15.00000000,89.95056152},
	{196.10000610,-1389.90002441,48.00000000,40.00000000},
	{255.50000000,-1337.59997559,52.70000076,39.99572754},
	{289.29998779,-1314.19995117,53.90000153,39.99572754},
	{347.29998779,-1280.59997559,53.79999924,29.99572754},
	{409.60000610,-1252.90002441,51.59999847,29.99267578},
	{563.00000000,-1196.00000000,44.59999847,20.00000000},
	{634.90002441,-1111.09997559,46.50000000,39.99511719},
	{684.40002441,-1061.69995117,49.40000153,59.99023438},
	{725.79998779,-985.70001221,52.70000076,59.98535156},
	{312.60000610,-1196.09997559,76.00000000,219.98535156},
	{253.89999390,-1239.09997559,72.30000305,210.98474121},
	{220.69999695,-1267.30004883,65.19999695,239.98474121},
	{339.50000000,-1197.19995117,76.30000305,39.97985840},
	{402.70001221,-1168.40002441,78.30000305,149.97924805},
	{579.20001221,-1127.40002441,49.20000076,199.97436523},
	{632.59997559,-1093.40002441,46.79999924,213.97314453},
	{668.00000000,-1057.00000000,49.29999924,233.96972656},
	{691.40002441,-1014.79998779,51.70000076,243.96484375},
	{828.70001221,-868.50000000,68.59999847,201.96240234},
	{872.20001221,-855.09997559,77.30000305,201.96166992},
	{921.09997559,-832.20001221,93.59999847,201.96166992},
	{831.59997559,-880.29998779,68.19999695,331.96166992},
	{924.59997559,-842.20001221,93.59999847,21.95739746},
	{976.59997559,-814.29998779,97.59999847,21.95617676},
	{1030.19995117,-791.50000000,102.80000305,21.95617676},
	{1081.80004883,-777.50000000,107.69999695,1.95617676},
	{1077.90002441,-765.50000000,107.59999847,189.95556641},
	{1063.90002441,-623.79998779,115.69999695,9.95361328},
	{1082.59997559,-626.00000000,113.00000000,9.94812012},
	{998.20001221,-644.50000000,121.50000000,29.94812012},
	{910.70001221,-681.79998779,116.19999695,229.94323730},
	{949.00000000,-696.29998779,121.90000153,29.93835449},
	{898.40002441,-769.40002441,97.09999847,9.93774414},
	{832.79998779,-798.29998779,73.09999847,9.93713379},
	{794.29998779,-807.40002441,65.90000153,9.93713379},
	{897.29998779,-711.79998779,109.59999847,260.00000000},
	{239.65, -95.84, 1.58,   91.32},
	{239.74, -118.88, 1.58,   91.32},
	{325.93, -121.10, 1.58,   271.10},
	{325.89, -95.86, 1.58,   271.10},
	{265.45, -64.92, 1.58,   179.96},
	{239.69, -26.58, 1.58,   89.71},
	{736.57, -523.21, 16.21,   179.02},
	{779.00, -523.25, 16.21,   179.02},
	{813.12, -523.26, 16.21,   179.96},
	{738.81, -536.99, 16.21,   1.11},
	{777.70, -536.99, 16.21,   1.94},
	{2350.80, 188.64, 26.22,   91.00},
	{2350.75, 134.63, 26.22,   91.00},
	{2350.71, 105.32, 26.22,   91.00},
	{2400.71, 22.17, 26.22,   91.00},
	{2470.83, 66.71, 26.22,   91.00},
	{2540.73, 76.81, 26.22,   91.00},
	{2540.66, 5.85, 26.22,   91.00},
	{2498.47, 104.91, 26.22,   359.23},
	{2431.72, -35.15, 26.22,   359.23},
	{2378.88, -35.13, 26.22,   359.23},
	{2313.62, -105.08, 26.22,   359.23},
	{2259.08, -105.03, 26.22,   359.23},
	{2443.21, 48.53, 26.22,   178.94},
	{2421.21, 48.45, 26.22,   178.94},
	{2383.01, 98.79, 26.22,   178.94},
	{2475.12, 118.51, 26.22,   178.94},
	{2512.74, 118.49, 26.22,   178.94},
	{2509.32, -15.08, 26.22,   359.23},
	{1903.05, -1049.86, 23.89,   358.00},
	{1953.33, -1054.39, 24.10,   350.34},
	{2026.01, -1060.01, 24.55,   157.00},
	{2065.52, -1077.81, 24.76,   157.00},
	{2105.70, -1095.61, 25.04,   155.39},
	{2153.94, -1088.39, 25.03,   155.00},
	{2023.31, -1129.72, 24.72,   179.00},
	{1992.58, -1129.78, 25.64,   179.00},
	{1944.96, -1129.73, 25.64,   181.21},
	{1904.3395, -1129.8004, 24.6400,   181.21},
	{2077.97, -1127.56, 23.92,   90.31},
	{2077.91, -1163.08, 23.92,   89.89},
	{2089.25, -1294.75, 23.89,   179.96},
	{2128.76, -1294.73, 23.89,   179.96},
	{2191.03, -1294.59, 23.89,   179.96},
	{2247.32, -1294.73, 23.89,   179.96},
	{2094.57, -1226.91, 23.89,   360.00},
	{2154.48, -1226.86, 23.89,   360.00},
	{2205.32, -1226.86, 23.89,   360.00},
	{2253.96, -1226.92, 23.89,   360.00},
	{2151.10, -1306.91, 23.89,   360.00},
	{2107.25, -1306.97, 23.89,   360.00},
	{2227.45, -1390.26, 23.89,   360.00},
	{2263.73, -1390.36, 23.89,   360.00},
	{2206.45, -1403.90, 23.89,   269.38},
	{2147.68, -1378.29, 23.89,   179.96},
	{2135.47, -1426.23, 23.89,   90.49},
	{2135.48, -1470.86, 23.89,   90.49},
	{2186.56, -1378.25, 23.89,   179.96},
	{2206.53, -1488.03, 23.89,   269.38},
	{1855.69, -1926.20, 13.44,   180.00},
	{1903.58, -1926.18, 13.44,   180.00},
	{1944.11, -1926.27, 13.44,   180.00},
	{1995.55, -1718.13, 13.50,   270.55},
	{1995.59, -1647.34, 13.50,   270.55},
	{2074.87, -1728.97, 13.50,   270.55},
	{2074.88, -1706.43, 13.50,   270.55},
	{2074.80, -1649.38, 13.50,   270.55},
	{2074.79, -1624.52, 13.50,   270.55},
	{2008.48, -1635.21, 13.50,   90.28},
	{2008.48, -1721.76, 13.50,   90.28},
	{2314.05, -1726.07, 13.42,   179.55},
	{2386.48, -1725.76, 13.42,   179.55},
	{2389.23, -1653.06, 13.42,   179.55},
	{2366.88, -1652.96, 13.42,   179.55},
	{2285.65, -1652.69, 14.98,   182.25},
	{2642.57, 767.02, 10.84,   0.59},
	{2618.29, 767.06, 10.84,   0.59},
	{2565.09, 767.02, 10.84,   0.59},
	{2529.38, 766.97, 10.84,   0.59},
	{2551.88, 699.42, 10.87,   180.32},
	{2398.52, 706.79, 10.84,   0.59},
	{2369.56, 706.98, 10.84,   0.59},
	{2329.12, 706.88, 10.84,   0.59},
	{2258.87, 706.79, 10.84,   0.59},
	{2203.37, 706.77, 10.84,   0.59},
	{2122.67, 666.96, 10.84,   0.59},
	{2075.39, 667.23, 10.84,   0.59},
	{2030.08, 666.90, 10.84,   0.59},
	{2028.57, 746.85, 10.84,   0.59},
	{2072.46, 746.99, 10.84,   0.59},
	{2114.22, 747.03, 10.84,   0.59},
	{2394.46, 719.40, 10.87,   180.32},
	{2433.57, 724.43, 10.87,   90.27},
	{2433.68, 679.99, 10.87,   90.27},
	{2343.90, 719.52, 10.87,   180.32},
	{2393.25, 639.58, 10.87,   180.32},
	{2341.52, 639.45, 10.87,   180.32},
	{2252.82, 639.42, 10.87,   180.32},
	{2203.64, 639.33, 10.87,   180.32},
	{2201.28, 719.26, 10.87,   180.32},
	{2120.93, 759.50, 10.87,   180.32},
	{2070.09, 759.47, 10.87,   180.32},
	{2023.90, 759.45, 10.87,   180.32},
	{2034.44, 679.66, 10.87,   180.32},
	{2095.44, 679.43, 10.87,   180.32},
	{2153.85, 764.59, 10.87,   90.27},
	{1861.23, 708.06, 10.87,   270.72},
	{1303.57, 2034.20, 10.63,   89.38},
	{1303.69, 2001.51, 10.63,   89.38},
	{1394.07, 1990.95, 10.63,   89.38},
	{1393.90, 2024.64, 10.63,   89.38},
	{1393.58, 1926.95, 10.63,   89.38},
	{1533.87, 2074.94, 10.63,   89.38},
	{1533.83, 2114.63, 10.63,   89.38},
	{1624.99, 2154.48, 10.63,   89.38},
	{1624.71, 2096.19, 10.63,   89.38},
	{1624.71, 2045.27, 10.63,   89.38},
	{1381.06, 1994.91, 10.63,   271.13},
	{1380.93, 2035.42, 10.63,   269.63},
	{1612.15, 2035.01, 10.63,   269.63},
	{1611.98, 2065.01, 10.63,   269.63},
	{1612.14, 2115.02, 10.63,   269.63},
	{1611.95, 2148.89, 10.63,   269.63},
	{1699.60, 2121.21, 10.63,   269.63},
	{1700.27, 2075.47, 10.63,   269.63},
	{1700.60, 2040.05, 10.63,   269.63},
	{1700.92, 1985.08, 10.63,   269.63},
	{1560.99, 2011.05, 10.63,   270.30},
	{1561.03, 1989.74, 10.63,   270.30},
	{1380.92, 1895.00, 10.63,   271.13},
	{1480.91, 1892.00, 10.63,   271.13},
	{1480.97, 1937.24, 10.63,   271.13},
	{1300.29, 2547.20, 10.88,   90.08},
	{1391.93, 2551.38, 10.87,   90.08},
	{1484.43, 2532.94, 10.87,   90.08},
	{1594.32, 2663.57, 10.87,   90.08},
	{1914.71, 2753.74, 10.87,   90.08},
	{1953.12, 2748.35, 10.87,   180.72},
	{1989.09, 2748.43, 10.87,   180.72},
	{2023.63, 2748.47, 10.87,   180.72},
	{2064.93, 2748.47, 10.87,   180.72},
	{2053.51, 2650.59, 10.87,   180.72},
	{2011.46, 2650.65, 10.87,   180.72},
	{1985.99, 2650.74, 10.87,   180.72},
	{1943.95, 2650.69, 10.87,   180.72},
	{1659.71, 2739.69, 10.87,   180.72},
	{1623.39, 2740.00, 10.87,   180.72},
	{1578.96, 2739.51, 10.87,   180.72},
	{1564.48, 2827.96, 10.87,   180.72},
	{1606.19, 2828.01, 10.87,   180.72},
	{1669.44, 2828.21, 10.87,   180.72},
	{1615.70, 2596.47, 10.87,   180.72},
	{1653.03, 2596.10, 10.87,   180.72},
	{1551.35, 2596.23, 10.87,   180.72},
	{1499.03, 2596.12, 10.87,   180.72},
	{1335.61, 2596.18, 10.87,   180.72},
	{1306.87, 2596.19, 10.87,   180.72},
	{1281.20, 2596.15, 10.87,   180.72},
	{1240.80, 2601.34, 10.87,   269.24},
	{1285.23, 2561.32, 10.87,   269.24},
	{1285.18, 2537.78, 10.87,   269.51},
	{1379.27, 2536.53, 10.87,   269.51},
	{1471.01, 2534.72, 10.87,   269.51},
	{1332.01, 2583.56, 10.87,   360.00},
	{1355.20, 2583.58, 10.87,   360.00},
	{1421.89, 2583.46, 10.87,   360.00},
	{1446.24, 2583.39, 10.87,   360.00},
	{1488.70, 2582.01, 10.878,   360.00},
	{1510.08, 2581.70, 10.87,   360.00},
	{1529.74, 2582.02, 10.87,   360.00},
	{1582.53, 2582.17, 10.87,   360.00},
	{1650.35, 2582.03, 10.87,   360.00},
	{1557.09, 2727.03, 10.87,   360.00},
	{1595.83, 2726.94, 10.87,   360.00},
	{1628.76, 2726.99, 10.87,   360.00},
	{1668.93, 2727.10, 10.87,   360.00},
	{1699.00, 2706.95, 10.87,   360.00},
	{1720.95, 2707.02, 10.87,   360.00},
	{1001.12, 2025.14, 10.69,   269.86},
	{1001.23, 1976.18, 10.69,   269.86},
	{1001.18, 1924.32, 10.69,   269.86},
	{1001.16, 1878.22, 10.69,   269.86},
	{1101.15, 1974.30, 10.69,   269.86},
	{1101.13, 2024.37, 10.69,   269.86},
	{901.13, 2051.30, 10.69,   269.86},
	{901.12, 1984.46, 10.69,   269.86},
	{913.65, 2031.43, 10.69,   90.34},
	{913.78, 1932.05, 10.69,   90.34},
	{1013.64, 1929.09, 10.69,   90.34},
	{1013.67, 1876.48, 10.69,   90.34},
	{1013.65, 1848.01, 10.69,  90.34},
	{1013.70, 1976.77, 10.69,   90.34},
	{1013.65, 2029.22, 10.69,   90.34},
	{-2800.30004883,-187.19999695,7.00000000,270.00000000},
	{-2800.30004883,-162.69999695,7.00000000,270.00000000},
	{-2800.19995117,-137.00000000,7.00000000,270.00000000},
	{-2800.89990234,-124.40000153,7.00000000,270.00000000},
	{-2800.00000000,-97.30000305,7.00000000,270.00000000},
	{-2800.19995117,-86.09999847,7.00000000,270.00000000},
	{-2799.80004883,-44.40000153,7.00000000,270.00000000},
	{-2800.19995117,-22.89999962,7.00000000,270.00000000},
	{-2800.60009766,3.59999990,7.00000000,270.00000000},
	{-2800.80004883,24.10000038,7.00000000,270.00000000},
	{-2800.00000000,76.00000000,7.00000000,270.00000000},
	{-2799.89990234,93.90000153,7.00000000,270.00000000},
	{-2800.00000000,115.19999695,7.00000000,270.00000000},
	{-2800.30004883,138.89999390,7.00000000,270.00000000},
	{-2800.10009766,177.69999695,7.00000000,270.00000000},
	{-2800.60009766,202.60000610,7.00000000,270.00000000},
	{-2800.19995117,220.60000610,7.00000000,270.00000000},
	{-2714.80004883,-176.30000305,4.09999990,90.00000000},
	{-2715.10009766,-149.60000610,4.09999990,90.00000000},
	{-2714.89990234,-130.00000000,4.09999990,90.00000000},
	{-2715.00000000,-111.69999695,4.09999990,90.00000000},
	{-2715.00000000,-86.59999847,4.09999990,90.00000000},
	{-2714.89990234,-54.50000000,4.09999990,90.00000000},
	{-2714.80004883,-37.09999847,4.09999990,90.00000000},
	{-2715.10009766,-16.50000000,4.09999990,90.00000000},
	{-2714.80004883,3.40000010,4.09999990,90.00000000},
	{-2714.69995117,23.60000038,4.09999990,90.00000000},
	{-2695.39990234,5.30000019,4.09999990,270.00000000},
	{-2695.80004883,-16.39999962,4.09999990,270.00000000},
	{-2697.80004883,-92.50000000,4.09999990,270.00000000},
	{-2697.60009766,-111.80000305,4.09999990,270.00000000},
	{-2697.69995117,-130.50000000,4.09999990,270.00000000},
	{-2698.10009766,-150.69999695,4.09999990,270.00000000},
	{-2697.50000000,-168.89999390,4.09999990,270.00000000},
	{-2697.19995117,-178.60000610,4.09999990,270.00000000},
	{-2697.60009766,-194.39999390,4.09999990,270.00000000},
	{-2612.80004883,-194.50000000,4.09999990,90.00000000},
	{-2612.89990234,-171.19999695,4.09999990,90.00000000},
	{-2612.89990234,-152.10000610,4.09999990,90.00000000},
	{-2612.80004883,-129.39999390,4.09999990,90.00000000},
	{-2612.69995117,-114.19999695,4.09999990,90.00000000},
	{-2612.50000000,-93.50000000,4.09999990,90.00000000},
	{-2510.19995117,-187.00000000,25.39999962,90.00000000},
	{-2509.89990234,-164.89999390,25.39999962,90.00000000},
	{-2509.80004883,-148.10000610,25.39999962,90.00000000},
	{-2595.10009766,-116.30000305,4.09999990,270.00000000},
	{-2596.00000000,-88.40000153,4.09999990,270.00000000},
	{-2868.19995117,802.70001221,37.00000000,70.00000000},
	{-2874.50000000,751.29998779,31.29999924,99.99938965},
	{-2865.39990234,723.90002441,28.89999962,119.99752808},
	{-2856.69995117,711.40002441,26.79999924,129.99267578},
	{-2839.69995117,686.59997559,21.50000000,129.99023438},
	{-2833.00000000,861.20001221,43.90000153,89.99023438},
	{-2832.30004883,890.50000000,43.90000153,89.98901367},
	{-2833.80004883,931.20001221,43.90000153,89.98901367},
	{-2832.30004883,908.79998779,43.90000153,89.98901367},
	{-2837.19995117,948.20001221,43.90000153,97.98901367},
	{-2852.60009766,976.09997559,43.09999847,127.98706055},
	{-2880.00000000,1008.70001221,37.90000153,107.98526001},
	{-2887.69995117,1028.69995117,35.29999924,107.98461914},
	{-2890.69995117,1059.59997559,32.09999847,85.98461914},
	{-2890.69995117,1082.80004883,30.29999924,85.98449707},
	{-2890.50000000,1108.40002441,26.50000000,85.98449707},
	{-2648.60009766,166.60000610,4.09999990,0.00000000},
	{-2621.10009766,166.69999695,4.09999990,0.00000000},
	{-2697.19995117,92.90000153,4.09999990,270.00000000},
	{-2697.50000000,118.59999847,4.09999990,270.00000000},
	{1190.651001, -1704.479004, 13.486500, 180.000000}
};
enum minfo
{
	TrashItem[150],
	TrashItemAmount[150]
};
new TrashInfo[sizeof(MusorPos)][minfo];
public: AntiFloodInv(playerid) SetPVarInt(playerid, !"antifloodinv", 0);
#define KickEx(%0) SetTimerEx("PlayKick",1000,false,"d",%0)
public: PlayKick(playerid) 
{
	//if(!FCNPC_IsValid(playerid)) 
	//{
	Kick(playerid);
	//}
}
public: GetCarPrice(model)
{
	/*new cost;
	switch(model)
	{
		case 400: cost = 5000000;//Landstalker B
		case 401: cost = 1800000;//Bravura D
		case 402: cost = 15000000;//Buffalo A
		case 403: cost = 420000000;//Linerunner
		case 404: cost = 1600000;//Perenniel C
		case 405: cost = 3400000;//Sentinel C
		case 406: cost = 120000000;//Dumper
		case 407: cost = 140000000;//Firetruck
		case 408: cost = 130000000;//Trashmaster
		case 409: cost = 320000000;//Stretch
		case 410: cost = 1300000;//Manana D
	    case 411: cost = 90000000;//Инфернус S
		case 412: cost = 2600000;//Voodoo D
		case 413: cost = 3600000;//Pony D
		case 414: cost = 7400000;//Mule
		case 415: cost = 32000000;//Cheetah A
		case 416: cost = 180000000;//Ambulance
		case 417: cost = 2000000000;//Leviathan
		case 418: cost = 3600000;//Moonbeam C
		case 419: cost = 2600000;//Esperanto D
		case 420: cost = 70000000;//Taxi
		case 421: cost = 4000000;//Washington D
		case 422: cost = 1800000;//Bobcat C
		case 423: cost = 5600000;//Mr Whoopee
		case 424: cost = 80000000;//BF Injection
		case 425: cost = 2000000000;//Hunter
		case 426: cost = 2200000;//Premier D
		case 427: cost = 200000000;//Enforcer
		case 428: cost = 160000000;//Securicar
		case 429: cost = 30000000;//Banshee A
		case 430: cost = 30000000;//Predator
		case 431: cost = 120000000;//Bus
		case 432: cost = 2000000000;//Rhino
		case 433: cost = 2000000000;//Barracks
		case 434: cost = 7000000;//Hotknife B
		case 435: cost = 9000000;//Article Trailer
		case 490: cost = 11000000;//FBI Rancher
		case 487: cost = 145000000;//Maverick Вертолет
	    case 469: cost = 52000000;//Sparrow Вертолет
		case 541: cost = 68000000;//Булка S
		case 451: cost = 60000000;//Туризмо S
		case 506: cost = 28000000;//Super GT A
		case 560: cost = 27000000;//Султан A
		case 559: cost = 24000000;//Jester A
		case 562: cost = 18000000;//Elegy A
		case 495: cost = 14000000;//Sandking A
		case 477: cost = 13800000;//ZR-350 A
		case 565: cost = 13000000;//Flash A
		case 480: cost = 22000000;//Comet B
		case 603: cost = 17400000;//Phoenix B
		case 558: cost = 15800000;//Uranus B
		case 579: cost = 12000000;//Huntley B
		case 554: cost = 12000000;//Yosemite B
		case 602: cost = 8600000;//Alpha B
		case 533: cost = 8000000;//Feltzer B
		case 587: cost = 6800000;//Euros B
		case 535: cost = 4600000;//Slamvan B
		case 555: cost = 3500000;//Windsor B
		case 561: cost = 10200000;//Stratum C
		case 589: cost = 6300000;//Club C
		case 600: cost = 6000000;//Picador C
		case 458: cost = 5600000;//Solair C
		case 439: cost = 5300000;//Stallion C
		case 491: cost = 4600000;//Virgo C
		case 475: cost = 4400000;//Sabre C
		case 545: cost = 4200000;//Hustler C
		case 482: cost = 4000000;//Burrito C
		case 549: cost = 3600000;//Tampa C
		case 580: cost = 3200000;//Stafford C
		case 567: cost = 3200000;//Savanna C
		case 575: cost = 2600000;//Broadway C
		case 474: cost = 2400000;//Hermes C
		case 518: cost = 2400000;//Buccaneer C
		case 507: cost = 2300000;//Elegant C
		case 479: cost = 2100000;//Regina C
		case 496: cost = 2000000;//Blista Compact C
		case 516: cost = 1960000;//Nebula C
		case 529: cost = 1940000;//Willard C
		case 576: cost = 1900000;//Tornado C
		case 466: cost = 1900000;//Glendale C
		case 478: cost = 1700000;//Walton C
		case 547: cost = 1620000;//Primo C
		case 526: cost = 1600000;//Fortune C
		case 517: cost = 1580000;//Majestic C
		case 436: cost = 1560000;//Previon C
		case 546: cost = 1520000;//Intruder C
		case 542: cost = 1400000;//Clover C
		case 536: cost = 6400000;//Blade D
		case 489: cost = 5800000;//Rancher D
		case 534: cost = 5000000;//Remington D
		case 566: cost = 4000000;//Tahoma D
		case 459: cost = 3600000;//Berkley's RC Van D
		case 550: cost = 3600000;//Sunrise D
		case 483: cost = 2800000;//Camper D
		case 551: cost = 2600000;//Merit D
		case 492: cost = 2200000;//Greenwood D
		case 445: cost = 2200000;//Admiral D
		case 500: cost = 2000000;//Mesa D
		case 540: cost = 1800000;//Vincent D
		case 543: cost = 1160000;//Sadler D
		case 527: cost = 980000;//Cadrona D
		case 522: cost = 2000000;//NRG-500 Мото
		case 521: cost = 3600000;//FCR-900 Мото
		case 461: cost = 1800000;//PCJ-600 Мото
		case 468: cost = 1400000;//Sanchez Мото
		case 581: cost = 1300000;//BF-400 Мото
		case 463: cost = 1000000;//Freeway Мото
		case 586: cost = 900000;//Wayfarer Мото
		case 471: cost = 700000;//Quad Мото
		case 462: cost = 300000;//Faggio Мото
		case 510: cost = 200000;//Mountain Bike Мото
		case 481: cost = 150000;//BMX Мото
		case 509: cost = 100000;//Bike Мото
		//Черный рынок
		case 573: cost = 15000000;//Dune
		case 528: cost = 15000000;//FBI Truck
		case 438: cost = 15000000;//Cabbie(Taxi)
		case 504: cost = 15000000;//Bloodring Banger
		case 455: cost = 15000000;//Flatbed
		case 539: cost = 15000000;//Vortex
		case 494: cost = 15000000;//Hotring Racer S
		case 502: cost = 15000000;//Hotring Racer S
		case 503: cost = 15000000;//Hotring Racer S
		case 519: cost = 15000000;//Shamal
		default: cost = 15000000;
	}*/
	return 15000000;
}

forward Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2);
public Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
{
	return floatsqroot(floatpower(floatabs(floatsub(x2,x)),2)+floatpower(floatabs(floatsub(y2,y)),2)+floatpower(floatabs(floatsub(z2,z)),2));
}
public: MysqlReferalCheck(playerid)
{
	if(!cache_num_rows()) return 1;
	new Referal[24];
	cache_get_string(0, !"Referal", Referal);
	if(GetString(Referal, "No Referal"))
	{
		new refid = GetNameID(Referal);
  		if(refid != INVALID_PLAYER_ID)
		{
		    if(PI[refid][pReferalReturn])
		    {
		        GiveMoney(playerid, PI[refid][pReferalReturn]);
		        SCMf(playerid, COLOR_VALIK, "%s осуществил Вам возврат реферальной суммы в размере $%i", PlayerName[refid], PI[refid][pReferalReturn]);
		    }
		    if(PI[refid][pReferalReturn] != 300000)
		    {
				GiveMoney(refid, 300000-PI[refid][pReferalReturn]);
				SCMf(refid, COLOR_VALIK, "Вы получаете $%i за приведенного вами игрока %s", 300000-PI[refid][pReferalReturn], PlayerName[playerid]);
		    }
		}
		else
		{
		    new RefMoney;
			mysql_queryf_fix(mysql, "SELECT `ReferalReturn` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1",true, Referal);
			if(cache_num_rows()) cache_get_int(0, !"ReferalReturn", RefMoney);
			cache_delete(result1);
		    if(RefMoney != 0)
		    {
		        GiveMoney(playerid, RefMoney);
		        SCMf(playerid, COLOR_VALIK, "%s осуществил Вам возврат реферальной суммы в размере $%i", Referal, RefMoney);
		    }
		    if(RefMoney != 300000)  mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Money`=`Money`+%i WHERE `NickName`='%s' LIMIT 1", RefMoney, Referal);
		}
	}
	return 1;
}
stock SaveServer()
{
	new currenttime = GetTickCount();
	str_1[0] = EOS;
	for(new i; i < 7; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, Reconstruction[i][ReconstructionMoney]);
	mysql_pqueryf(mysql, "UPDATE `config` SET `Reconstruction` = '%s' LIMIT 1;", str_1);
	//
	GlobalSavePlayer();
	printf("GlobalSave сохранился за %i ms", GetTickCount() - currenttime);
	currenttime = GetTickCount();
    for(new i = 1; i < sizeof(OrgInfo); i ++) SaveOrg(i);
    printf("SaveOrgs сохранился за %i ms", GetTickCount() - currenttime);
   	for(new houseid; houseid < OWNABLEHOUSES; houseid++) if(!GetString(HouseInfo[houseid][hOwner], "The State")) UpdateDataStr("houses", "Owner", HouseInfo[houseid][hOwner], HouseInfo[houseid][hID]);
    for(new bizid; bizid < OWNABLEBIZES; bizid++) if(!GetString(BizInfo[bizid][bOwner], "The State")) UpdateDataStr("businesses", "Owner", BizInfo[bizid][bOwner], BizInfo[bizid][bID]);
    SaveServerConfig();
	return 1;
}

stock CreateRestartServer()
{
	if !Mode[RESTART_ETAPE] && !Mode[CFG_PASS_SERVER] *then
		ServerRestart(), Mode[CFG_PASS_SERVER] = 1;

	return true;
}


public: ServerRestart()
{
	SCMAll(0xBE2D2DFF, !"Внимание!");

	switch Mode[RESTART_ETAPE] do
	{
		case 0:
		{
            SetModOptions();

			SCMAll(COLOR_RED, !"Внимание!");
			SCMAll(COLOR_RED, !"Технический рестарт через 02 минут. Советуем завершить текущую сессию");
			
			DontEnterServer = true;
			print(!"[RESTART] 5051++");
			
			SetTimer("ServerRestart", 60000, false);

			SendRconCommandf("hostname %s RP | %s | Технический рестарт!", ServerCFG[server_name], ServerCFG[server_logo]);
		}

		case 1:
		{
			SCMAll(COLOR_RED, !"Внимание!");
			SCMAll(COLOR_RED, !"Технический рестарт через 01 минут. Советуем завершить текущую сессию");

			print(!"[RESTART] 5052++");
			DontEnterServer = true;
			SaveServer();

			GlobalSavePlayer();
			
			foreach(Player,i)
			{
				J_Kick(i);
			}

			SetTimer("ServerRestart", 60000, false);

			for(new i; i < OWNABLEBIZES; i++)
			{
				for(new j; j < 7; j++) BizInfo[i][bDayOfWeak][j] = 0;
				SaveDayOfWeakBiz(i);
			}
		}

		case 2:
		{
		    DontEnterServer = true;
			SCMAll(COLOR_RED, !"Внимание!");
			SCMAll(COLOR_RED, !"Технический рестарт через 30 сек. Сессия завершена принудительно");

			foreach_player(i) J_Kick(i, 345);
			print(!"[RESTART] 5053++");
			//SendRconCommand("gmx");

			Mode[RESTART_ETAPE] =
			Mode[CFG_PASS_SERVER] = 0;

			return SaveServerConfig(), SetModOptions();
		}
	}

	return Mode[RESTART_ETAPE]++;
}

stock PlayerSpawn(playerid) {
    if(pTemp[playerid][SPECTPLAYER] == true) SpecPl(playerid, false);
	SettingSpawn(playerid);
	return SpawnPlayer(playerid);
}
public: LoginCodeDostup(playerid)
{
	J_SetPlayerHealth(playerid, 100);
	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);
	return SPD(playerid, 2394, DIALOG_STYLE_PASSWORD, !"{FFFFFF}Аутентификация", !"{FFFFFF}Введите пароль от сервера\nАвторизация/Регистрация автоматически появится при {FFCD00}СНЯТИИ {FFFFFF}пароля!", !"Далее", !"");
}
stock MysqlPreLoadingIDAccount(playerid)
{
	if(player_authTimeOpen[playerid] != -1) KillTimer(player_authTimeOpen[playerid]), player_authTimeOpen[playerid] = -1;
	player_authTimeOpen[playerid] = SetTimerEx("authTimeOpen", 3000, 0, "i", playerid);
	return 1;
}
public: authTimeOpen(playerid)
{
	player_authTimeOpen[playerid] = -1;
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `ID`, `IsRakBot`, `RegIP` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", PN(playerid));
	mysql_tquery(mysql, str_q, "MysqlLoadingIDAccount", "is", playerid, PN(playerid));
}
public: MysqlLoadingIDAccount(playerid, namez[])
{
	if(cache_num_rows()) 
	{
		cache_get_int(0, !"ID", PI[playerid][pID]);
		if(Iter_Contains(IsPlayerBot, playerid) == 1)
		{
			str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
			mysql_tquery(mysql, str_q, "OnPlayerLoginMysql", "ii", playerid, 0);
			return 1;
		}
		cache_get_int(0, !"IsRakBot", player_Global_Int[playerid][1]);
		if(player_Global_Int[playerid][1] != 0)
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "Player_%i(%i)", random(22222)+111111, playerid);
			SetPlayerName(playerid, str_1);
		}
		foreach_player(i)
		{
			if(GetString(PlayerName[playerid], PlayerName[i]) && IsPlayerLogged[i] != false) return SCM(playerid, -1, !"Внутриигровая ошибка. Вы отключены от сервера ( Данный аккаунт уже авторизован )."), KickEx(playerid);
		}
	}
	else
	{
		PI[playerid][pID] = -1;
		if(Iter_Contains(IsPlayerBot, playerid) == 1)
		{
			f(RegPass[playerid], 20, "%i", randomEx(100000, 1000000));
			PlayerReg(playerid);
			return 1;
		}
		RegisterState[playerid] = 1;
	}
	if(GetString(CodeCheckDostup, "0")) Autorisation(playerid);
	else ShowCheckPassword(playerid);
 	J_SetPlayerHealth(playerid, 100);
    SpecPl(playerid, true);
    SetPlayerVirtualWorldEx(playerid, 1228);
	InterpolateCameraPos(playerid, 2172.4255, -1043.7322, 73.9263, 2172.4255, -1043.7322, 73.9263, 10000);
	InterpolateCameraLookAt(playerid, 2170.4832, -1045.6545, 73.8663, 2170.4832, -1045.6545, 73.8663, 10000);
	for(new i; i < 11; i++) TextDrawShowForPlayer(playerid, IntroLogo[i]);
	return 1;
}
forward EngineVehicle(playerid,vehicleid);
public EngineVehicle(playerid, vehicleid)
{
    if(IsPlayerInVehicle(playerid,vehicleid))
    {
        new number = GetVehicleID(vehicleid);
        if(!IsAOwnableCar(number) || CarInfo[number][cKeyIN])
        {
            new Float:Health;
            GetVehicleHealth(vehicleid, Health);
            if(Health > 1000.0) Health = 1000.0;
            new hp = 11 - floatround(Health / 100.0);
            new uEngine = random(hp);
            if(uEngine < 4)
            {
				SendPlayerGameText_cef(playerid, "success","Уведомление","Двигатель успешно заведён",1500);
                SetEngineStatus(vehicleid, true, playerid);
                str_1[0] = EOS, f(str_1, sizeof(str_1), " Двигатель успешно завелся | -  %s .", PN(playerid));
                ProxDetector(25.0,playerid,str_1,COLOR_DOCHAT);
            }
            else
            {
                str_1[0] = EOS, f(str_1, sizeof(str_1), " Двигатель не завелся | -  %s.",PN(playerid));
                ProxDetector(25.0, playerid, str_1, COLOR_DOCHAT);
            }
        }
    }
    return 1;
}
forward MysqlCheckNickReferal(playerid, inputtext[]);
public MysqlCheckNickReferal(playerid, inputtext[])
{
	if(!strlen(inputtext) || (cache_num_rows() > 0 && !GetString(inputtext, PlayerName[playerid])))
    {
        RegisterState[playerid] = 0;
        if(!strlen(inputtext)) SetString(RegReferal[playerid], "No Referal");
		else
		{
			mysql_escape_string(inputtext, RegReferal[playerid]);
			new refid = GetNameID(RegReferal[playerid]);
			if(refid != INVALID_PLAYER_ID)
			{
			    SCMf(refid, -1, "Только что игрок {FF9900}%s{FFFFFF} указал ваш ник при регистрации, при достижении 3 уровня вы получите 300 000$!", PN(playerid));
			    SCM(refid, COLOR_VALIK, !"Посмотреть весь список указавших ваш ник игроков вы можете введя /referals");
			}
		}
		PlayerReg(playerid);
   	}
   	else
   	{
   	    SCM(playerid, COLOR_RED, !"_________________Ошибка_____________________");
   	    SCM(playerid, COLOR_RED, !"Возможные причины:");
   	    SCM(playerid, COLOR_LIGHTGREEN, !"    - Вы указали свой ник");
   	    SCM(playerid, COLOR_LIGHTGREEN, !"    - Такого аккаунта не существует");
   	    SCM(playerid, COLOR_RED, !"_____________________________________________");
   	    ShowRegisterDialog(playerid, RegisterState[playerid]);
   	}
   	return 1;
}
forward MysqlCheckNameBuyName(playerid, name[]);
public MysqlCheckNameBuyName(playerid, name[])
{
	if(cache_num_rows() > 0) return SPD(playerid, 224, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник занят", !"Сменить", !"Отмена");
	if(GetDonate(playerid) < 20) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
	GiveDonate(playerid, -20);
	////aml(17, playerid, name, "донат");
	RenamePlayer(playerid, name);
	return SCM(playerid, COLOR_VALIK, !"Вы успешно сменили свой ник");
}
forward MysqlCheckNameBuyNames(playerid, name[]);
public MysqlCheckNameBuyNames(playerid, name[])
{
	if(cache_num_rows() > 0) return SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"\n\n{F47F51}Ошибка. Этот ник занят!", !"Сменить", !"Отмена");
	RenamePlayer(playerid, name);
	return SCM(playerid, COLOR_VALIK, !"Вы успешно сменили свой ник");
}
new bool:IsPlayerLoadPassport[MAX_PLAYERS],
	bool:PlayerLoadPassport[MAX_PLAYERS];
public: MysqlLoadPassport(playerid)
{
	if(cache_num_rows())
	{
		cache_get_int(0, !"Seria", PassInfo[playerid][psSeria]);
		cache_get_int(0, !"Number", PassInfo[playerid][psNumber]);
		cache_get_int(0, !"Sex", PassInfo[playerid][psSex]);
		cache_get_int(0, !"D_Day", PassInfo[playerid][psDate][0]);
		cache_get_int(0, !"D_Month", PassInfo[playerid][psDate][1]);
		cache_get_int(0, !"D_Year", PassInfo[playerid][psDate][2]);
		cache_get_int(0, !"DB_Day", PassInfo[playerid][psDateBirth][0]);
		cache_get_int(0, !"DB_Month", PassInfo[playerid][psDateBirth][1]);
		cache_get_int(0, !"DB_Year", PassInfo[playerid][psDateBirth][2]);
		cache_get_string(0, !"McDate", MedCardInfo[playerid][mcDate]);
		cache_get_int(0, !"McState", MedCardInfo[playerid][mcState]);
		PlayerLoadPassport[playerid] = false;
		IsPlayerLoadPassport[playerid] = true;
	}
	else
	{
		PlayerLoadPassport[playerid] = false;
		IsPlayerLoadPassport[playerid] = false;
	}
	return 1;
}
public: OnPlayerRegisterMysql(playerid)
{
    PI[playerid][pID] = cache_insert_id();
	SetString(PlayerRegIP[playerid], PlayerIp[playerid]);
    //aml(-3, playerid, "", PlayerIP(playerid));
	return OnPlayerLogin(playerid);
}
new
	//rent inv
	InvPlayerRentUID[MAX_PLAYERS][10] = {-1, ...}, //кому передали
	InvPlayerRentInvSlot[MAX_PLAYERS][10] = {-1, ...}, //слот кому передали
	InvPlayerRentTimeOut[MAX_PLAYERS][10] = {-1, ...},
	//
	InvAksRentUID[MAX_PLAYERS][8], //кому передали
	InvAksRentTimeOut[MAX_PLAYERS][8],
	//
	InvPlayerParams[2][MAX_PLAYERS][MAX_SLOT_INV],
	//
	InvPlayerColor[MAX_PLAYERS][MAX_SLOT_INV],
	InvAksColor[MAX_PLAYERS][8],
	InvTradeColor[MAX_PLAYERS][10],
	InvTrashColor[sizeof(MusorPos)][150],
	InvHouseColor[MAX_HOUSES][90],
	InvWareHouseColor[MAX_PLAYERS][150],
	//
	InvAksParams[2][MAX_PLAYERS][8],
	InvTradeParams[2][MAX_PLAYERS][10],
	InvTradeUID[MAX_PLAYERS][10],
	InvTrashParams[2][sizeof(MusorPos)][150],
	InvTrashUID[sizeof(MusorPos)][150],
	InvHouseParams[2][MAX_HOUSES][90],
	InvHouseUID[MAX_HOUSES][90],
	InvWareHouseParams[2][MAX_WAREHOUSES][150],
	InvWareHouseUID[MAX_WAREHOUSES][150];

new
	OpenCharity= -1, //1 rub & 2 hours
	CountCharity,
	Count2Charity,
	bool:PlayerUsedCharity[MAX_PLAYERS],
	healthsharp[MAX_PLAYERS char];
static pPickupID[MAX_PLAYERS];
public: OnPlayerLoginMysql(playerid)
{
	StopAudioStreamForPlayer(playerid);
	pPickupID[playerid] = 0;
	cache_get_int(0, !"IsRakBot", player_Global_Int[playerid][1]);
	if(player_Global_Int[playerid][1] == 1)
	{
		foreach_player(i)
		{
			if(GetString(PlayerName[playerid], PlayerName[i]) && !IsPlayerLogged[i]) SCM(i, -1, !"Внутриигровая ошибка. Вы отключены от сервера ( Данный аккаунт уже авторизован )."), Kick(i);
		}
		SetPlayerName(playerid, PN(playerid));
	}
	IsPlayerLogged[playerid] = true;
	//sql
	GetPlayerIp(playerid, PlayerIp[playerid], 16);
    mysql_tqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `LastIP` = '%s', `Online_status`='%i' WHERE `ID` = '%i' LIMIT 1", PlayerIp[playerid], playerid, PI[playerid][pID]);
	//new
	cache_get_int(0, !"ID", PI[playerid][pID]);
    cache_get_int(0, !"Level", PI[playerid][pLevel]);
    cache_get_int(0, !"Exp", PI[playerid][pExp]);
    cache_get_int(0, !"Sex", PI[playerid][pSex]);
    cache_get_int(0, !"Race", PI[playerid][pRace]);
    cache_get_int(0, !"Admin", PI[playerid][pAdmin]);
	cache_get_int(0, !"ForumID", PI[playerid][pForumID]);
    cache_get_int(0, !"Money", PI[playerid][pMoney]);
    cache_get_int(0, !"Wanted", PI[playerid][pWanted]);
	if(PI[playerid][pWanted] <= 0) PI[playerid][pWanted] = 0;
	else if(PI[playerid][pWanted] >= 6) PI[playerid][pWanted] = 6;
    cache_get_int(0, !"Member", PI[playerid][pMember]);
   	cache_get_int(0, !"Rank", PI[playerid][pRank]);
	cache_get_string(0, !"Bank", str_2), sscanf(str_2, "p<,>a<i>[2]", PI[playerid][pBank]);
	//cache_get_string(0, !"License", str_2), sscanf(str_2, "p<,>a<i>[9]", PI[playerid][pLicense]);
	cache_get_string(0, !"CustomInterface", str_2), sscanf(str_2, "p<,>a<i>[10]", PI[playerid][pCustomInterface]);
	cache_get_string(0, !"VIP", str_2), sscanf(str_2, "p<,>a<i>[2]", PI[playerid][pVIP]);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "p<,>a<i>[%i]", sizeof global_Quest); 
	cache_get_string(0, !"qProgress", str_2), sscanf(str_2, str_1, player_Quest[playerid][qProgress]);
	cache_get_string(0, !"qStatus", str_2), sscanf(str_2, str_1, player_Quest[playerid][qStatus]);
    cache_get_int(0, !"Warns", PI[playerid][pWarns]);
    cache_get_int(0, !"TimeToLastWarn", PI[playerid][pTimeToLastWarn]);
    cache_get_int(0, !"FWarns", PI[playerid][pFWarns]);
    cache_get_int(0, !"Skin", PI[playerid][pSkin]);
	if(!PI[playerid][pSkin])
	{
		if(Iter_Contains(IsPlayerBot, playerid) == 1) PI[playerid][pSkin] = MSkins[0][random(sizeof MSkins)];
	}
    cache_get_int(0, !"TelNum", PI[playerid][pTelNum]);
    cache_get_int(0, !"TelWork", PI[playerid][pTelWork]);
    cache_get_int(0, !"TelBalance", PI[playerid][pTelBalance]);
    cache_get_int(0, !"Job", PI[playerid][pJob]);
    cache_get_int(0, !"MuteTime", PI[playerid][pMuteTime]);
    cache_get_int(0, !"FMuteTime", PI[playerid][pFMuteTime]);
    cache_get_int(0, !"BailPrice", PI[playerid][pBailPrice]);
    cache_get_int(0, !"DCTime", PI[playerid][pDCTime]);
    cache_get_int(0, !"BankPass", PI[playerid][pBankPass]);
    cache_get_int(0, !"ZKP", PI[playerid][pZKP]);
    cache_get_int(0, !"Heal", PI[playerid][pHeal]);
    cache_get_int(0, !"Prison", PI[playerid][pPrison]);
    cache_get_int(0, !"HospCity", PI[playerid][pHospCity]);
    cache_get_int(0, !"VirMoney", PI[playerid][pVirMoney]);
    cache_get_int(0, !"OldRepl", PI[playerid][pOldRepl]);
    cache_get_int(0, !"AllRepl", PI[playerid][pAllRepl]);
    cache_get_int(0, !"Credit", PI[playerid][pCredit]);
    cache_get_int(0, !"Demorgan", PI[playerid][pDemorgan]);
    cache_get_int(0, !"Obmen", PI[playerid][pObmen]);
    cache_get_int(0, !"ContractTime", PI[playerid][pContractTime]);
    cache_get_int(0, !"PlayedTime", PI[playerid][pPlayedTime]);
	cache_get_int(0, !"AdmAction", PI[playerid][pAdmAction]);
    cache_get_int(0, !"DepChat", PI[playerid][pDepChat]);
    cache_get_int(0, !"VipChat", PI[playerid][pVipChat]);
    cache_get_int(0, !"FamilyChat", PI[playerid][pFamilyChat]);
	cache_get_int(0, !"NewsChat", PI[playerid][pNewsChat]);
	cache_get_int(0, !"Racia", PI[playerid][pRacia]);
	cache_get_int(0, !"RabRacia", PI[playerid][pRabRacia]);
    cache_get_int(0, !"VipTime", PI[playerid][pVipTime]);
	cache_get_int(0, !"ShowCase", PI[playerid][pShowCase]);
	cache_get_int(0, !"HungryShow", PI[playerid][pHungryShow]);
	cache_get_int(0, !"ShowAuctionCar", PI[playerid][pActionShow]);
	cache_get_int(0, !"Hospital", PI[playerid][pHospital]);
    cache_get_int(0, !"KillShow", PI[playerid][pKillShow]);
  	cache_get_int(0, !"FamilyMember", PI[playerid][pFamilyMember]);
    cache_get_int(0, !"FamilyMute", PI[playerid][pFamilyMute]);
	cache_get_int(0, !"Deposit", PI[playerid][pDeposit]);
	cache_get_int(0, !"DepositChar", PI[playerid][pDepositChar]);
	cache_get_int(0, !"DepositChar2", PI[playerid][pDepositChar2]);
	cache_get_int(0, !"Reputation", PI[playerid][pReputation]);
	cache_get_int(0, !"InvLang", PI[playerid][pInvLang]);
	cache_get_int(0, !"ShowDokument", PI[playerid][pShowDokument]);
	cache_get_int(0, !"CarSkill", PI[playerid][pCarSkill]);
	cache_get_int(0, !"AWarns", PI[playerid][pAWarns]);
	cache_get_int(0, !"RespawnChat", PI[playerid][pRespawnChat]);
    cache_get_int(0, !"ReferalReturn", PI[playerid][pReferalReturn]);
	cache_get_int(0, !"InvColor", PI[playerid][pInvColor]);
	cache_get_int(0, !"InvCell", PI[playerid][pInvCell]);
	cache_get_int(0, !"ChestTime", PI[playerid][pChestTime]);
	cache_get_float(0, "HP", PlayerHealthAC[playerid]);
	if(PlayerHealthAC[playerid] < 20) PlayerHealthAC[playerid] = 20.0;
	J_SetPlayerHealth(playerid, PlayerHealthAC[playerid]);
	cache_get_float(0, "ARM", PI[playerid][pArmour]);
	J_SetPlayerArmour(playerid, PI[playerid][pArmour]);
	cache_get_float(0, "InvPos_X", PI[playerid][pInvPos_X]);
	cache_get_float(0, "InvPos_Y", PI[playerid][pInvPos_Y]);
	cache_get_float(0, "InvSize_X", PI[playerid][pInvSize_X]);
	cache_get_float(0, "InvSize_Y", PI[playerid][pInvSize_Y]);
    cache_get_string(0, !"RegIP", PlayerRegIP[playerid]);
    cache_get_string(0, !"LastIP", PlayerIp[playerid]);
    cache_get_string(0, !"Referal", PlayerReferal[playerid]);
    cache_get_string(0, !"PrefixVip", PI[playerid][pPrefixVip]);
	cache_get_string(0, !"PrefixAFK_0", PI[playerid][pPrefixAFK_0]);
	cache_get_string(0, !"PrefixAFK_1", PI[playerid][pPrefixAFK_1]);
	cache_get_string(0, !"PrefixAFK_2", PI[playerid][pPrefixAFK_2]);
	cache_get_int(0, !"APass", PI[playerid][pAPass]);
    cache_get_int(0, !"InvBlack", PI[playerid][pInvBlack]);
	str_2[0] = EOS, cache_get_string(0, !"Improvement", str_2), sscanf(str_2, "p<,>a<i>[11]", PI[playerid][pImprovement]);
	cache_get_int(0, !"AddSlotHouse", PI[playerid][pAddSlotHouse]);
	cache_get_int(0, !"AddSlotCar", PI[playerid][pAddSlotCar]);
	cache_get_int(0, !"StyleBoxing", PI[playerid][pStyleBoxing]);
	cache_get_int(0, !"ItemRandom", PI[playerid][pItemRandom]);
	cache_get_int(0, !"CasinoTime", PI[playerid][pCasinoTime]);
	cache_get_int(0, !"CasinoUsed", PI[playerid][pCasinoUsed]);
	cache_get_string(0, !"Rewards", str_2), sscanf(str_2, "p<,>a<i>[10]", PI[playerid][pRewards]);
	cache_get_string(0, !"RewardsComplete", str_2), sscanf(str_2, "p<,>a<i>[10]", PI[playerid][pRewardsComplete]);
    cache_get_int(0, !"ChestTimeDonate", PI[playerid][pChestTimeDonate]);
    cache_get_int(0, !"pRub", PI[playerid][pRub]);
	cache_get_string(0, !"Skill", str_2), sscanf(str_2, "p<,>a<i>[9]", PI[playerid][pSkill]);
    cache_get_int(0, !"VipColor", PI[playerid][pVipColor]);
	cache_get_int(0, !"Corona", PI[playerid][pCorona]);
	cache_get_string(0, !"datareg", PI[playerid][pDataReg]);
	cache_get_int(0, !"AccessAdmin", PI[playerid][pAccessAdmin]);
	cache_get_int(0, !"ModSlot", PI[playerid][pModSlot]);
    cache_get_int(0, !"RCBlock", PI[playerid][pRCBlock]);
	cache_get_int(0, !"TypeSpeed", PI[playerid][pTypeSpeed]);
	cache_get_int(0, !"HouseSpawned", PI[playerid][pHouseMain]);
	cache_get_string(0, !"Description", PI[playerid][pDescription]);
	cache_get_string(0, !"PlayerTag", PlayerTag[playerid]);
	cache_get_string(0, !"Promo", PI[playerid][pPromo]);
	cache_get_int(0, !"FracBonus", PI[playerid][pFracBonus]);

	cache_get_int(0, !"BonusMinute", player_BonusMinute[playerid]);
	cache_get_int(0, !"global_BonusMinute", global_BonusMinute[playerid]);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "p<,>a<i>[%i]", sizeof player_BonusInfo);
	cache_get_string(0, !"BonusStatus", str_2), sscanf(str_2, str_1, player_BonusStatus[playerid]);

	cache_get_float(0, "VKCoins", PI[playerid][pVKCoins]);
	cache_get_string(0, !"VKBoost", str_2), sscanf(str_2, "p<,>a<i>[7]", PI[playerid][pVKBoost]);
	cache_get_string(0, !"DamageBoost", str_2), sscanf(str_2, "p<,>a<f>[39]", PI[playerid][pDamageBoost]);
	cache_get_string(0, !"Last_Pos", str_2), sscanf(str_2, "p<,>a<f>[4]", PI[playerid][pLast_Pos]);
	cache_get_string(0, !"Point_Pos", str_2), sscanf(str_2, "p<,>a<f>[4]", PI[playerid][pPoint_Pos]);
	cache_get_int(0, !"LevelWalk", PI[playerid][pLevelWalk]);
	cache_get_int(0, !"StyleWalk", PI[playerid][pStyleWalk]);
	cache_get_int(0, !"PlayerUsedCharity", PlayerUsedCharity[playerid]);
	cache_get_int(0, !"PhoneBackground", PI[playerid][pPhoneBackground]);

	cache_get_int(0, !"ShowDescription", PI[playerid][pShowDescription]);
	cache_get_int(0, !"ShowFamilyName", PI[playerid][pShowFamilyName]);
	cache_get_int(0, !"ShowAddVIP", PI[playerid][pShowAddVIP]);
	ChangeStatus_AddVIP(playerid);
	cache_get_int(0, !"ShowBattlePass", PI[playerid][pShowBattlePass]);
	cache_get_int(0, !"ShowSetText", PI[playerid][pShowSetText]);
	cache_get_int(0, !"ShowNotif", PI[playerid][pShowNotif]);
	cache_get_int(0, !"TypeCaptcha", PI[playerid][pTypeCaptcha]);
	cache_get_int(0, !"AntiFlood_present", PI[playerid][pAntiFlood_present]);
	if(!IsValidSkin(PI[playerid][pSkin])) PI[playerid][pSkin] = 4;
	LoadInventory(playerid);
	SetPlayerFightingStyle(playerid, PI[playerid][pStyleBoxing]);
	for(new i; i < 11; i++) TextDrawHideForPlayer(playerid, IntroLogo[i]);
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		for(new i; i < 9; i++) ShowPlayer_CustomInterface(playerid, i, false);
	}
	else ShowLogo(playerid);
	SetPlayerScore(playerid, PI[playerid][pLevel]);
	GivePlayerMoney(playerid, PI[playerid][pMoney]);
	PlayerLoadPassport[playerid] = true;
	IsPlayerLoadPassport[playerid] = false; 
	LoadOnlineInfo(playerid);
	CheckLic(playerid);
	if(PI[playerid][pRank] == 10 || PI[playerid][pAdmin] && PI[playerid][pAdmin] != 8)
	{
	    foreach_player(i)
	    {
			if(!PI[i][pAdmin] || !ADuty{playerid}) continue;
		    if(ShowIP[i]) SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел.", PN(playerid), playerid);
 	    	else SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел [reg ip:%s] -- [norm ip: %s]", PN(playerid), playerid, PlayerRegIP[playerid], PlayerIp[playerid]);
			break;
		}
	}
	//PI[playerid][pHungryShow] = (!PI[playerid][pHungryShow]) ? false:PI[playerid][pHungryShow];
	if(PI[playerid][pRank] > 0 && !PI[playerid][pMember])PI[playerid][pRank] = 0;
	if(PI[playerid][pCredit] > 200000)
	{
	    SCMf(playerid, COLOR_ACHAT, "Долг центральному банку штата составляет: %i$. Оплатите кредит во избежание блокировки аккаунта.", PI[playerid][pCredit]);
	    SendAdminsMessagef(COLOR_ORANGE, "[A] %s[%i] зашел в игру. На данный момент у него задолженность в банке %i$", PN(playerid), playerid, PI[playerid][pCredit]);
	    OrgInfo[TEAM_BANK][oBank] += 100000;
	    SaveOrg(TEAM_BANK);
	}
	if(PI[playerid][pWarns] > 0)
	{
		PI[playerid][pMember] =
		PI[playerid][pRank] = 0;
		UpdatePlayerDataInt(playerid, "Rank", 0);
		UpdatePlayerDataInt(playerid, "Member", 0);
	}
    if(PI[playerid][pWarns] > 2)
	{
	    SCM(playerid, COLOR_RED, !"Ваш аккаунт заблокирован!");
	    UpdatePlayerDataInt(playerid, "Warns", 0);
		BanPlayer(playerid);
	}
	switch(PI[playerid][pDCTime])
	{
	    case 1: if(PI[playerid][pHouseMain] == -1) PI[playerid][pDCTime] = 0, SetSpawnPI(playerid, 0);
	    case 2: if(!PI[playerid][pMember]) PI[playerid][pDCTime] = 0, SetSpawnPI(playerid, 0);
		case 3: if(PI[playerid][pFamilyMember] == -1 || FamilyInfo[pFamilyID(playerid)][famHouse] == -1) PI[playerid][pDCTime] = 0, SetSpawnPI(playerid, 0);
	}
	foreach(new i: OWNABLECARS)
	{
		if(IsPlayerHaveCar(playerid, i) == 1)
		{
			if(PI[playerid][pCredit] > 300000)
			{
				SCM(playerid, COLOR_GREY, !"За неоплату кредита, Центральный банк изъял у вас автомобиль!");
				PI[playerid][pCredit] = 0;
				UpdatePlayerDataInt(playerid, "Credit", PI[playerid][pCredit]);
				SellCar(i, i, playerid);
			}
		}
	}
	CreatePlayerMapDraws(playerid);
	GetPlayerIp(playerid, PI[playerid][pLastIP], 17);
	if(PI[playerid][pVIP][0] < 5)
	{
		if(!ActualVIP(playerid))
	    {
	        if(PI[playerid][pVIP][0] > 0)
	     	{
		        if(PI[playerid][pVIP][0] > 1)
		    	{
			     	SCM(playerid, COLOR_LIGHTBLUE, !"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, уровень VIP понижен и продлен!");
			    	PI[playerid][pVipTime] = unixtime(30);
			    	UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
		    	}
                else if(PI[playerid][pVIP][0] == 1) SCM(playerid, COLOR_LIGHTBLUE, !"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, уровень VIP был снят.");
	       		PI[playerid][pVIP][0] --;
     		}
    	}
	}
	if(PI[playerid][pCorona] > 0) Corona++, UpdateTextCorona();
	if(PI[playerid][pAWarns] > 2)
	{
		PI[playerid][pAWarns] = 0;
		UpdatePlayerDataInt(playerid, "AWarns", PI[playerid][pAWarns]);
		SetAdminLevel(playerid, 0);
		SCM(playerid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы были сняты с поста администратора!");
		J_Kick(playerid, 123);
	}
	if(PI[playerid][pFamilyMember] != -1) UpdatePlayerFamily(playerid, true);
	BonusInfo(playerid);
	if(!GetInvCount(playerid, 312)) InvAdd(playerid, 312, 1);
	if(Teleport) for(new i; i < 14; i++) TextDrawShowForPlayer(playerid, TeleportEvent[i]);
	UpdateDescription(playerid, "", 2);
 	GameTextForPlayer(playerid, (str_f("~n~~n~~n~~n~~n~~n~~w~Welcome~n~~b~%s", PN(playerid))), 5000, 6);
	if(IsPlayerLauncher(playerid) != -1)
	{
		SCM(playerid, -1, (str_f("{00FF00}[%s] {FFFFFF}Вы зашли в игру с лаунчером Limonchyk Games! Вам доступны все функции сервера!", ServerCFG[server_logo])));
		SetLauncherStatus(playerid, true);
	}
	else
	{
		SCM(playerid, -1, (str_f("{00FF00}[%s] {FFFFFF}Вы зашли в игру не с лаунчера Limonchyk Games! Функционал сервера ограничен!", ServerCFG[server_logo])));
		SCM(playerid, -1, (str_f("{00FF00}[%s] {FFFFFF}Скачать лаунчер можно на сайте: {00FF00}%s", ServerCFG[server_logo], ServerCFG[server_launcher])));
		SetLauncherStatus(playerid, false);
	}
	//SPD(playerid, 15590, DIALOG_STYLE_MSGBOX, !"Внимание!", "{FFFFFF}\nУ вас не привязан {FF2B20}e-mail{FFFFFF} адрес!\nНастоятельно рекомендуем воспользоваться\n{FFC720}/mm - Настройки - E-Mail{FFFFFF} адрес и привязать\nсвою почту. Это поможет защитить ваш аккаунт\nот взлома, которые очень распостранены на\nпросторах {FF2B20}SAMP!", "Закрыть", "");
	/*if(PI[playerid][pForumID] == -1 && PI[playerid][pAdmin] != 0)
	{
		pTempForumVar{playerid} = 1;
		SPD(playerid, 15900, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Verification Forum Accounts", "\
		{FFFFFF}Для продолжения работы с {FA5858}админ-функциями, привяжите свой форумный аккаунт.\n\
		{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!", !"Продолжить", !"");
	}
	else */
	str_1[0] = EOS,
	f(str_1, sizeof(str_1), "\
		{ffffff}Мы рады видеть вас на проекте %s Role Play.\n\
		Сейчас на сервере проходит акция {FA5858}Х%i пополнение счета {ffffff}и {FA5858}Х%i PayDay\n\n\n\
		{ffffff}Наш сайт: {cccccc}%s\n\
		{ffffff}Паблик ВКонтакте: {cccccc}%s\n\
		{ffffff}Форум проекта: {cccccc}%s\n\
		{FFD700}»{FFFFFF} Вам доступны уникальные промокоды - {FFD700}/PROMO{FFFFFF}!\n\n\
		{ffffff}Приятной игры на %s Role Play.",ServerCFG[server_name],adddonate,GLS[29],ServerCFG[server_site],ServerCFG[server_group_vk],ServerCFG[server_forum],ServerCFG[server_name]);
		
	SPD(playerid, 15590, DIALOG_STYLE_MSGBOX, (str_f("Акции на %s Role Play", ServerCFG[server_name])), str_1, !"Закрыть", !"");

	if(!GetString(WSCM, "NONE")) SCMf(playerid, COLOR_GOLD, "Сообщение от администрации: %s",WSCM);
	//aml(-6, playerid, "", PlayerIP(playerid));
	switch(OpenCharity)
	{
		case 1:
		{
			SCMf(playerid, 0x666699FF, "Запустили раздачу /takerub на %i AZ-Rubles для первых %i игроков!", CountCharity, Count2Charity);
			SCM(playerid, -1, !"УСПЕЙ ВВЕСТИ /TAKERUB {9999FF}<<<");
		}
		case 2:
		{
			SCMf(playerid, 0x666699FF, "Запустили раздачу /takeminute на %i ЧАСОВ для первых %i игроков!", CountCharity, Count2Charity);
			SCM(playerid, -1, !"УСПЕЙ ВВЕСТИ /TAKEMINUTE {9999FF}<<<");
		}
		case 3:
		{
			SCMf(playerid, 0x666699FF, "Запустили раздачу /takecoins на %i AZ-COINS для первых %i игроков!", CountCharity, Count2Charity);
			SCM(playerid, -1, !"УСПЕЙ ВВЕСТИ /TAKECOINS {9999FF}<<<");
		}
	}
	//if(typepassword != 0) SCM(playerid, COLOR_LIGHTRED, !"[ВАЖНАЯ РЕКОМЕНДАЦИЯ] {FFFFFF}Ваш аккаунт может быть подвергнут взлому, для полной безопаности смените пароль."), callcmd::passwd(playerid, "");
	LoadOwnableCars(playerid);
	
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[ null ]');");
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.azpotify.stopTrackEvent', '[ null ]');");
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.auth.updateVideoBackgroundVisible', '[false]')");
	SetFocusBrowser(playerid, svelte, false);

	if(PI[playerid][pVIP][0] > 6) ViewSpawn(playerid);
	else PlayerSpawn(playerid);
	return 1;
}
CMD:actioncar(playerid)
{
	#include modules/TEXTDRAWS/actioncar
	ActionCarOpen[playerid] = true;
	if(PI[playerid][pInvLang])
	{
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], FixText("Акция"));
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][2], FixText("Отыграй 48 часов"));
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][1], FixText("И получи автомобиль"));
	}
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][7],"%i/48",(player_BonusMinute[playerid]/60));
	SelectTextDraw(playerid, 0xFF6347FF);
	return 1;
}
stock HideActionCar(playerid)
{
	if(!ActionCarOpen[playerid]) return 1;
	ActionCarOpen[playerid] = false;
	for(new i; i < 46; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock LoadInventory(playerid)
{
	cache_get_string(0, !"InvItem", str_1), sscanf(str_1, "p<,>a<i>[144]", PI[playerid][pInvItem]);
	cache_get_string(0, !"InvItemUID", str_1), sscanf(str_1, "p<,>a<i>[144]", PI[playerid][pInvItemUID]);
	cache_get_string(0, !"InvItemAmount", str_1), sscanf(str_1, "p<,>a<i>[144]", PI[playerid][pInvItemAmount]);
	cache_get_string(0, !"InvItemAks", str_1), sscanf(str_1, "p<,>a<i>[8]", AksSlot[playerid]);
	cache_get_string(0, !"InvItemAksUID", str_1), sscanf(str_1, "p<,>a<i>[8]", AksSlotUID[playerid]);
	cache_get_string(0, !"InvItemAks_CustomPosition", str_1), sscanf(str_1, "p<,>a<i>[8]", player_InvAks_CustomPosition[playerid]);
	cache_get_string(0, !"InvItemAksAmount", str_1), sscanf(str_1, "p<,>a<i>[8]", InvAksParams[1][playerid]);
	cache_get_string(0, !"InvAksColor", str_1), sscanf(str_1, "p<,>a<i>[8]", InvAksColor[playerid]);
	cache_get_string(0, !"InvPlayerParams", str_1), sscanf(str_1, "p<,>a<i>[144]", InvPlayerParams[0][playerid]);
	cache_get_string(0, !"InvPlayerParams_2", str_1), sscanf(str_1, "p<,>a<i>[144]", InvPlayerParams[1][playerid]);
	//cache_get_string(0, !"InvPlayerRentUID", str_1), sscanf(str_1, "p<,>a<i>[10]", InvPlayerRentUID[playerid]);
	//cache_get_string(0, !"InvPlayerRentInvSlot", str_1), sscanf(str_1, "p<,>a<i>[10]", InvPlayerRentInvSlot[playerid]);
	//cache_get_string(0, !"InvPlayerRentTimeOut", str_1), sscanf(str_1, "p<,>a<i>[10]", InvPlayerRentTimeOut[playerid]);

	//cache_get_string(0, !"InvAksRentUID", str_1), sscanf(str_1, "p<,>a<i>[8]", InvAksRentUID[playerid]);
	//cache_get_string(0, !"InvAksRentTimeOut", str_1), sscanf(str_1, "p<,>a<i>[8]", InvAksRentTimeOut[playerid]);

	cache_get_string(0, !"InvPlayerColor", str_1), sscanf(str_1, "p<,>a<i>[144]", InvPlayerColor[playerid]);
	cache_get_string(0, !"InvAksParams", str_1), sscanf(str_1, "p<,>a<i>[8]", InvAksParams[0][playerid]);
	cache_get_string(0, !"InvAddSlot", str_1), sscanf(str_1, "p<,>a<i>[6]", PI[playerid][pSlotGun]);
	new dell;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		//invalid
		if(PI[playerid][pInvItem][i] >= sizeof(ItemsInfo) || !PI[playerid][pInvItem][i])
		{
			dell++;
			RefreshInv(playerid, i, 921);
			continue;
		}
		else if(PI[playerid][pInvItem][i] >= 1781 && PI[playerid][pInvItem][i] <= 1785)
		{
			if(!InvPlayerParams[0][playerid][i]) InvPlayerParams[0][playerid][i] = 1;
			else if(InvPlayerParams[0][playerid][i] > 3) InvPlayerParams[0][playerid][i] = 3;
		}
		if(PI[playerid][pInvItemAmount][i] > ItemsInfo[PI[playerid][pInvItem][i]][ItemLCount]) PI[playerid][pInvItemAmount][i] = ItemsInfo[PI[playerid][pInvItem][i]][ItemLCount];
		if(!PI[playerid][pInvItemAmount][i]) PI[playerid][pInvItemAmount][i] = 1;
		switch(ItemsInfo[PI[playerid][pInvItem][i]][ItemView])
		{
			case 1..8:
			{
				if(InvPlayerParams[0][playerid][i] > 15) InvPlayerParams[0][playerid][i] = 15;
				else if(InvPlayerParams[0][playerid][i] < 0) InvPlayerParams[0][playerid][i] = 0;
			}
			case 256: if(!InvPlayerParams[0][playerid][i]) RefreshInv(playerid, i), dell++;
			case 1781..1785:
			{
				if(InvPlayerParams[0][playerid][i] > 3) RefreshInv(playerid, i, 4124), dell++;
				else if(InvPlayerParams[0][playerid][i] < 0) RefreshInv(playerid, i, 341), dell++;
			}
			case 27: { }
			default: 
			{
				if(InvPlayerParams[0][playerid][i] > 0) RefreshInv(playerid, i, 4512), dell++;
				else if(InvPlayerParams[0][playerid][i] < 0) RefreshInv(playerid, i, 3212), dell++;
				InvPlayerParams[0][playerid][i] = 0, PI[playerid][pInvItemUID][i] = 0, InvPlayerColor[playerid][i] = 0, InvPlayerParams[1][playerid][i] = 0;
			}
		}
	}
	if(dell) 
	{
		SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}При загрузке инвентаря произошла ошибка! %i предмета было удалено",dell);
		player_InvSave{playerid} = 6;
	}
}
public: AutoCarSpawnStart()
{
    if(AutoRespawn)
	{
		foreach_vehicle(i)
		{
			if(VALID_VEHICLE_ID(i)) continue;
			SetVehicleToRespawn(i);
		}
	}
	return 1;
}
stock OnPlayerSaveAccount(playerid)
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 1;
	for(new j; j < 8; j++) 
	{
		SavePlayer(playerid,j);
		SavePlayerQuest(playerid);
		if(j < 6) SaveInventory(playerid,j);
	}
	return 1;
}
stock GlobalSavePlayer()
{
	foreach_player(i) OnPlayerSaveAccount(i);
}
static const randomcode32[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "2", "3", "4", "5", "6", "7"};
new WHDoorUsed[52 char],
	WareHouseObject[52];
//warehouses
enum DoorForWareHouse
{
	Float:wPosition[6],
	VirtualWorld,
	personalID
};
new WareHouseDoor[][DoorForWareHouse] = {
	{{1540.812988, 1289.850220, 11.632491, 0.000000, 0.000000, 179.999878},1, 49},
	{{1528.186523, 1292.370361, 11.632491, -0.000000, 0.000000, -0.000015},1, 3},
	{{1521.547607, 1285.701782, 11.632492, 0.000000, 0.000000, 540.000000},1, 1},
	{{1540.812988, 1293.970215, 11.632491, 0.000000, 0.000000, 179.999878},1, 47},
	{{1547.439575, 1288.248169, 11.632491, -0.000000, 0.000000, -0.000015},1, 50},
	{{1521.547607, 1289.821777, 11.632491, 0.000000, 0.000000, 540.000000},1, 2},
	{{1528.186523, 1296.490356, 11.632491, -0.000000, 0.000000, -0.000015},1, 5},
	{{1547.439575, 1292.368164, 11.632491, -0.000000, 0.000000, -0.000015},1, 48},
	{{1540.812988, 1298.090210, 11.632491, 0.000000, 0.000000, 179.999878},1, 45},
	{{1521.547607, 1293.941772, 11.632491, 0.000000, 0.000000, 540.000000},1, 4},
	{{1547.439575, 1296.488159, 11.632491, -0.000000, 0.000000, -0.000015},1, 46},
	{{1528.186523, 1300.610352, 11.632491, -0.000000, 0.000000, -0.000015},1, 7},
	{{1521.547607, 1298.061768, 11.632491, 0.000000, 0.000000, 540.000000},1, 6},
	{{1540.812988, 1302.210205, 11.632491, 0.000000, 0.000000, 179.999878},1, 43},
	{{1547.439575, 1300.608154, 11.632491, -0.000000, 0.000000, -0.000015},1, 44},
	{{1528.186523, 1304.730347, 11.632491, -0.000000, 0.000000, -0.000015},1, 9},
	{{1521.547607, 1302.181763, 11.632491, 0.000000, 0.000000, 540.000000},1, 8},
	{{1540.812988, 1306.330200, 11.632491, 0.000000, 0.000000, 179.999878},1, 41},
	{{1547.439575, 1304.728149, 11.632491, -0.000000, 0.000000, -0.000015},1, 42},
	{{1521.547607, 1306.301758, 11.632491, 0.000000, 0.000000, 540.000000},1, 10},
	{{1528.186523, 1308.850342, 11.632491, -0.000000, 0.000000, -0.000015},1, 11},
	{{1540.812988, 1310.450195, 11.632491, 0.000000, 0.000000, 179.999878},1, 39},
	{{1547.439575, 1308.848145, 11.632491, -0.000000, 0.000000, -0.000015},1, 40},
	{{1521.547607, 1310.421753, 11.632491, 0.000000, 0.000000, 540.000000},1, 12},
	{{1528.186523, 1312.970337, 11.632491, -0.000000, 0.000000, -0.000015},1, 13},
	{{1540.812988, 1314.570190, 11.632491, 0.000000, 0.000000, 179.999878},1, 37},
	{{1547.439575, 1312.968140, 11.632491, -0.000000, 0.000000, -0.000015},1, 38},
	{{1521.547607, 1314.541748, 11.632491, 0.000000, 0.000000, 540.000000},1, 14},
	{{1528.186523, 1317.090332, 11.632491, -0.000000, 0.000000, -0.000015},1, 15},
	{{1540.812988, 1318.690186, 11.632491, 0.000000, 0.000000, 179.999878},1, 35},
	{{1547.439575, 1317.088135, 11.632491, -0.000000, 0.000000, -0.000015},1, 36},
	{{1521.547607, 1318.661743, 11.632491, 0.000000, 0.000000, 540.000000},1, 16},
	{{1528.186523, 1321.210327, 11.632491, -0.000000, 0.000000, -0.000015},1, 17},
	{{1547.439575, 1321.208130, 11.632491, -0.000000, 0.000000, -0.000015},1, 34},
	{{1540.812988, 1322.810181, 11.632491, 0.000000, 0.000000, 179.999878},1, 33},
	{{1521.547607, 1322.781738, 11.632491, 0.000000, 0.000000, 540.000000},1, 18},
	{{1528.186523, 1325.330322, 11.632491, -0.000000, 0.000000, -0.000015},1, 19},
	{{1547.439575, 1325.328125, 11.632491, -0.000000, 0.000000, -0.000015},1, 32},
	{{1540.812988, 1326.930176, 11.632491, 0.000000, 0.000000, 179.999878},1, 31},
	{{1521.547607, 1326.901733, 11.632491, 0.000000, 0.000000, 540.000000},1, 20},
	{{1528.186523, 1329.450317, 11.632491, -0.000000, 0.000000, -0.000015},1, 21},
	{{1547.439575, 1329.448120, 11.632491, -0.000000, 0.000000, -0.000015},1, 30},
	{{1521.547607, 1331.021729, 11.632491, 0.000000, 0.000000, 540.000000},1, 22},
	{{1547.439575, 1333.568115, 11.632491, -0.000000, 0.000000, -0.000015},1, 29},
	{{1535.300537, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 26},
	{{1531.180542, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 25},
	{{1539.420532, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 27},
	{{1527.060547, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 24},
	{{1543.540527, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 28},
	{{1522.940552, 1337.535400, 11.632491, 0.000022, -0.000007, 89.999916},1, 23}
};
new
	Float:PositionWar[MAX_PLAYERS][3];
CMD:gomp(playerid)
{
	if(IsPlayerPlayMP[playerid]) return SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Вы не можете покинуть лобби, так как вы уже зарегистрировались!");
	if(IsPlayerInRangeOfPoint(playerid, 30.0, 1615.4910,2340.7800,695.3304))
	{
		SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Вы успешно покинули мероприятие!");
		if(PositionWar[playerid][0] == 0.0) return PlayerSpawn(playerid);
		J_SetPlayerPos(playerid, PositionWar[playerid][0], PositionWar[playerid][1], PositionWar[playerid][2]);
		SetPlayerVirtualWorldEx(playerid, 0);
		return SetPlayerInteriorEx(playerid, 0);
	}
	if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Вы должны находиться на улице!");
	if(OpenMP != false && StartMP != true) return SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Не было объявлений о начале мероприятия");
	GetPlayerPos(playerid, PositionWar[playerid][0], PositionWar[playerid][1], PositionWar[playerid][2]);
	J_SetPlayerPos(playerid, 1615.4910,2340.7800,695.3304);
	SetPlayerVirtualWorldEx(playerid, 1);
	SetPlayerInteriorEx(playerid, 1);
	return SCM(playerid,0x00CCCCFF, !">>> {FFFFFF}Чтобы покинуть лобби, пропишите команду повторно!");
}
CMD:startwar(playerid)
{
	if(CheckAdmin(playerid, 8, 2)) return 1;
	return NextStartWar(playerid);
}
CMD:startderby(playerid)
{
	if(CheckAdmin(playerid, 8, 2)) return 1;
	return NextStartDerby(playerid);
}
stock NextStartWar(playerid=-1)
{
	if(OpenMP != true)
	{
		SCMAll(0x00CCCCFF, !"======================================");
		SCMAll(0x00CCCCFF, !"Через 5 минут будет запущено мероприятие 'Командный бой', для того, чтобы...");
		SCMAll(0x00CCCCFF, !"...телепортироваться в лобби, пропишите команду /gomp!");
		SCMAll(0x00CCCCFF, !"======================================");
		OpenMP = true,StartMP = false, TypeMP = false;
	}
	else if(playerid != -1) SCM(playerid,-1,!"Уже начато!");
	return 1;
}
stock NextStartDerby(playerid=-1)
{
	if(OpenMP != true)
	{
		SCMAll(0xFFD700FF, !"======================================");
		SCMAll(0xFFD700FF, !"Через 5 минут будет запущено мероприятие 'Дерби', для того, чтобы...");
		SCMAll(0xFFD700FF, !"...телепортироваться в лобби, пропишите команду /gomp!");
		SCMAll(0xFFD700FF, !"======================================");
		OpenMP = true,StartMP = false, TypeMP = false;
	}
	else if(playerid != -1) SCM(playerid,-1,!"Уже начато!");
	return 1;
}
stock ConnectFCapture(playerid, i, mi)
{
	PlayerFCapture[playerid][7] = CreatePlayerTextDraw(playerid, 549.500000, 60.000000, "____");
	PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][7], 0.490000, -0.000000);
	PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][7], 604.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][7], 0);
	PlayerTextDrawColor(playerid, PlayerFCapture[playerid][7], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][7], 0x7CAC5AAA);
	PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][7], 1);
	PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][7], 0x000000FF);
	PlayerTextDrawFont(playerid, PlayerFCapture[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][7], 0);

	PlayerFCapture[playerid][6] = CreatePlayerTextDraw(playerid, 549.500000, 60.000000, "____");
	PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][6], 0.490000, -0.000000);
	PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][6], 604.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][6], 0);
	PlayerTextDrawColor(playerid, PlayerFCapture[playerid][6], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][6], 0x7CAC5AAA);
	PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][6], 1);
	PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, PlayerFCapture[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][6], 0);

	str_1[0] = EOS, f(str_1, sizeof(str_1), "WAR FOR TERRITORY %i", mi+1);
	PlayerFCapture[playerid][5] = CreatePlayerTextDraw(playerid, 218.866302, 307.155609, str_1);
	PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][5], 0.123400, 0.600000);
	PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][5], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][5], 2);
	PlayerTextDrawColor(playerid, PlayerFCapture[playerid][5], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, PlayerFCapture[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][5], 0);

	PlayerFCapture[playerid][4] = CreatePlayerTextDraw(playerid, 239.466507, 339.940704, "0");

	PlayerFCapture[playerid][3] = CreatePlayerTextDraw(playerid, 261.832703, 346.496613, "10:00");
	PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][3], 0.128000, 0.811600);
	PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][3], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][3], 2);
	PlayerTextDrawColor(playerid, PlayerFCapture[playerid][3], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][3], 0);
	PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][3], 0x80808080);
	PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][3], 0x000000FF);
	PlayerTextDrawFont(playerid, PlayerFCapture[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][3], 0);

	PlayerFCapture[playerid][2] = CreatePlayerTextDraw(playerid, 239.299805, 323.118713, "0");
	if(PI[playerid][pFamilyMember] == GangZone_FamAttackID[mi]) IsPlayerInFCapture{playerid} = 0;
	else IsPlayerInFCapture{playerid} = 1;
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", FamilyInfo[FamilyID_(GangZone_FamAttackID[mi])][famName]);
	PlayerFCapture[playerid][1] = CreatePlayerTextDraw(playerid, 167.433105, 327.881500, str_1);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName]);
	PlayerFCapture[playerid][0] = CreatePlayerTextDraw(playerid, 167.433105, 344.929504, str_1);

	for(new j; j < 8; j++) 
	{
		if(j == 2 || j == 4)
		{
			PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][j], 0.259600, 1.687000);
			PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][j], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][j], 2);
			PlayerTextDrawColor(playerid, PlayerFCapture[playerid][j], 0xA52A2AFF);
			PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][j], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][j], 0x000000FF);
			PlayerTextDrawFont(playerid, PlayerFCapture[playerid][j], 2);
			PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][j], 1);
			PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][j], 0);
		}
		else if(j < 2)
		{
			PlayerTextDrawLetterSize(playerid, PlayerFCapture[playerid][j], 0.185200, 0.786800);
			PlayerTextDrawTextSize(playerid, PlayerFCapture[playerid][j], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, PlayerFCapture[playerid][j], 1);
			PlayerTextDrawColor(playerid, PlayerFCapture[playerid][j], 0xFFFFFFFF);
			PlayerTextDrawUseBox(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawBoxColor(playerid, PlayerFCapture[playerid][j], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawSetOutline(playerid, PlayerFCapture[playerid][j], 0);
			PlayerTextDrawBackgroundColor(playerid, PlayerFCapture[playerid][j], 0x000000FF);
			PlayerTextDrawFont(playerid, PlayerFCapture[playerid][j], 1);
			PlayerTextDrawSetProportional(playerid, PlayerFCapture[playerid][j], 1);
			PlayerTextDrawSetSelectable(playerid, PlayerFCapture[playerid][j], 0);
		}
		PlayerTextDrawShow(playerid, PlayerFCapture[playerid][j]);
	}
	for(new j; j < 11; j++) TextDrawShowForPlayer(playerid, GlobalFCapture[j]);
}
stock UpdateFCapture(i, mi, bool:connect=false)
{
	if(connect != false)
	{
		GangZone_CaptureTime[mi] = 600;
		for(new j; j < 2; j++) GangZone_CaptureKill[j] = 0;
	}
	foreach_family(playerid)
	{
		if(PI[playerid][pFamilyMember] != GangZone_FamAttackID[mi] && PI[playerid][pFamilyMember] != GZInfo[i][gzFracID]) continue;
		if(connect == true) ConnectFCapture(playerid, i, mi);
		else 
		{
			if(PlayerFCapture[playerid][3] != PlayerText:INVALID_TEXT_DRAW && !(!IsPlayerTextDrawVisible(playerid, PlayerFCapture[playerid][3]))) 
			{
				PlayerTDSetStringf(playerid, PlayerFCapture[playerid][4], "%i", GangZone_CaptureKill[0]);
				PlayerTDSetStringf(playerid, PlayerFCapture[playerid][2], "%i", GangZone_CaptureKill[1]);
				PlayerTDSetStringf(playerid, PlayerFCapture[playerid][3], "%s", Convert(GangZone_CaptureTime[mi]));
			}
			else ConnectFCapture(playerid, i, mi);
		}
	}
}
stock DisconnectFCapture(i, mi)
{
	if(GangZone_CaptureKill[0] < GangZone_CaptureKill[1]) //передаем теру
	{
		SendFamilyMessagef(GangZone_FamAttackID[mi], "\
			[Family War] Ваша семья захватила территорию №%i, которая принадлежала ранее семье %s.",\
				mi+1, FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName]);
		SendFamilyMessage(GZInfo[i][gzFracID], !"[Информация] {FFFFFF}Вы проиграли сражение за территорию!");
		GZInfo[i][gzFracID] = GangZone_FamAttackID[mi];
	}
	else
	{
		SendFamilyMessagef(GZInfo[i][gzFracID], "\
			[Family War] Ваша семья смогла отстоять права на свою территорию №%i против семьи %s.",\
			 mi+1, \
			 FamilyInfo[FamilyID_(GangZone_FamAttackID[mi])][famName]);

		SendFamilyMessagef(GZInfo[i][gzFracID], "\
			[Family War] Счёт: %s [%i] : [%i] %s",\
			 FamilyInfo[FamilyID_(GangZone_FamAttackID[mi])][famName], \
			 GangZone_CaptureKill[1], \
			 GangZone_CaptureKill[0], \
			 FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName]);
		SendFamilyMessage(GangZone_FamAttackID[mi], "[Информация] {FFFFFF}Вы проиграли сражение за территорию!");
	}
	GangZoneHideForAll(GangZone[i]);
	GangZone_Flash[1] = -1;
	GangZone_FlashColor[1] = -1;
	str_1[0] = EOS, f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ FamilyID_(GZInfo[i][gzFracID]) ][famChatColor] ]);
	GangZoneShowForAll(GangZone[i], HexStr(str_1));
	GangZone_FamAttackID[mi] = -1;
	Iter_SafeRemove(FamilysCapture, i, i);
	for(new j; j < 3; j++) 
	{
		GangZone_FamDataWar[mi][j] = 0;
		if(i < 2) GangZone_CaptureKill[j] = 0;
	}
	GangZone_CaptureTime[mi] = 0;
	foreach_family(playerid)
	{
		IsPlayerInFCapture{playerid} = 255;
		for(new j; j < 11; j++)
		{
			TextDrawHideForPlayer(playerid, GlobalFCapture[j]);
			if(j < 8) DestroyPlayerTD(playerid, PlayerFCapture[playerid][j]);
		}
	}
	return 1;
}
new bool:yes5,
	//top system by triazov
	pickupkrytoe,
	krytoe_timer;
#include modules/SetAttachToSkin
CMD:gotopresent(playerid, params[])
{
	if(CheckAdmin(playerid,8)) return 1;
    extract params -> new id; else return SCM(playerid, COLOR_RED, !"Используй: /gotopresent [id]");
    if(id > Iter_Count(PickupPresent)-1) return SCMf(playerid,-1,"не больше %i",Iter_Count(PickupPresent)-1);
	new id2 = Iter_Index(PickupPresent,id),
		Float:Position_[3];
	GetDynamicPickupPos(id2, Position_[0], Position_[1], Position_[2]);
    J_SetPlayerPos(playerid,Position_[0]+3, Position_[1]+2, Position_[2]);
	return SCMf(playerid, -1, "Вы телепортировались к подарку [ID - Params: %i, UID: %i]",id, id2);
}
stock GetDynamicPickupPos(pickupid, &Float:x, &Float:y, &Float:z)
{
	if(!IsValidDynamicPickup(pickupid)) return 0;
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_X, x);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Y, y);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Z, z);
	return 1;
}
stock GetDynamicPickupModel(pickupid) return Streamer_GetIntData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_MODEL_ID);
stock BotUpdate()
{
	if(IsStartBot != false)
	{
		new hour, tick = GetTickCount(), minute;
		gettime(hour, minute);
		new botcount = Iter_Count(IsPlayerBot);
		if(!GetString(botCheckName, "The_State")) 
		{
			if(!botConnect_Timer) SetString(botCheckName, "The_State");
			else botConnect_Timer--;
		}
		else if(botcount != AtHourBot[hour] && !botConnect_Timer)
		{
			if(AtHourBot[hour] == -1)
			{
				if(IsTimeUpdateBotOnLeave <= 1)
				{
					//50 реального 25 боты = 75
					new count_bot = (Iter_Count(Player)-botcount) / 2;
					IsCountBotOnTime = count_bot;
					IsTimeUpdateBotOnLeave = randomEx(2,25);
					if(count_bot < botcount) DeleteBot();
					else if(count_bot > botcount) AddBot();
				}
				else IsTimeUpdateBotOnLeave--;
			}
			else
			{
				IsCountBotOnTime = AtHourBot[hour];
				if(AtHourBot[hour] < botcount) DeleteBot();
				else if(AtHourBot[hour] > botcount) AddBot();
			}
		}
		new diff = GetTickDiff(GetTickCount(), tick);
		botLastTick_Timer = diff;
		if(diff > botMaxTick_Timer) botMaxTick_Timer = diff;
	}
}
//new global_tick;
new tick_hostname = 1;
public: GrandTimer()
{
	if(GetTickCount() - GlobalTick < 950) return 1;
	GlobalTick = GetTickCount();
	//printf("grand timer %i", GetTickCount() - global_tick);
	//global_tick = GetTickCount();
	global_time = gettime();
	BotUpdate();
	static minuite,second,hour;
	gettime(hour,minuite,second);
	if(!minuite && !second) PayDay(), SetWorldTime(hour),CheckNalog(),GlobalSavePlayer();
	else
	{
		if(tick_hostname == 1)
		{
			switch(random(7))
			{
				case 0: SendRconCommandf("hostname %s | 99kk, 999K-AZ ( + /adm )", Mode[CFG_Name]);
				case 1: SendRconCommandf("hostname %s | ОХРАННИКИ/КЛАДЫ/ЗАТОЧКИ ", Mode[CFG_Name]);
				case 3: SendRconCommandf("hostname %s | ПЛАТИМ ЗА 2 ЧАСА ИГРЫ ", Mode[CFG_Name]);
				case 4: SendRconCommandf("hostname %s | ИНТЕРЕСНЫЕ КВЕСТЫ НА КРУТЫЕ ПРИЗЫ!", Mode[CFG_Name]);
				case 5: SendRconCommandf("hostname %s | СЛЕТЫ/РАЗДАЧИ ( /minute ) ", Mode[CFG_Name]);
				case 6: SendRconCommandf("hostname %s | ВЫИГРАЙ ФУЛЛ ДОСТУП В /topminute ", Mode[CFG_Name]);
			}
			tick_hostname = 4;
		}
		else if(tick_hostname > 1) tick_hostname--;
		if(minuite == 1 && !second) func_Present(false);
		if(CountForSpawn != 0)
		{
			for(new i=CountForSpawn-1; i >= 0; --i)
			{
				if(IDforSpawn[i] == -1) continue;
				new j = IDforSpawn[i];
				CreateOwnableCar(ModelLimit[j][vehID], ModelLimit[j][vehX],ModelLimit[j][vehY], ModelLimit[j][vehZ], ModelLimit[j][vehA], "The State", 0);
				IDforSpawn[i] = -1;
				break;
			}
			CountForSpawn--;
		}
		if(Iter_Count(WorkNPC) != 0)
		{
			if(WorkNPC_time == 60)
			{
				WorkNPC_time = 0;
				for(new i; i < sizeof WorkNPC_pickup; i++)
				{
					if(WorkNPC_pickup[i] != -1) DestroyDynamicPickupEx(WorkNPC_pickup[i]), WorkNPC_pickup[i] = -1;
					new Float:Position_r[3] = {1478.9828,-1632.3662,13.3234};
					for(new j; j < 2; j++) Position_r[j] += frandom(-40.0, 40.0);
					MapAndreas_FindZ_For2DCoord(Position_r[0], Position_r[1], Position_r[2]);
					WorkNPC_pickup[i] = CreateDynamicPickup(1265, 23, Position_r[0], Position_r[1], Position_r[2]+0.2);
				}
			}
			else WorkNPC_time++;
			if(WorkNPC_time >= 50) foreach(new i: WorkNPC) GameTextForPlayer(i, (str_f("respawn %i sec", WorkNPC_time)), 500, 4);
		}
		if(krytoe_timer == 60)
		{
			krytoe_timer = 0;
			foreach(new i: Razdaha)
			{
				if(!GetInvCount(i, 5028)) 
				{
					if(random(100) >= 75) InvAdd(i, 5028, randomEx(1,2));
					continue;
				}
				InvAdd(i, 5028, -1);
				new random_ = ItemAttached[random(sizeof(ItemAttached))][attachItemID],
					random_enchant = randomEx(0,14);
				InvAdd(i, random_, 1, 0, random_enchant);
				if(random_enchant > 12) 
				{
					SendClientMessageToAllf(0xFF6666FF, "[МАГИЧЕСКАЯ УДАЧА] {FFFFFF}Игрок %s[%i] выбивает\
					 у Johny Star аксессуар %s(+%i)", PN(i), i, ItemsInfo[random_][ItemName], random_enchant);
					mysql_pqueryf(mysql, "UPDATE `accounts` SET `Luck` = `Luck`+1 WHERE `ID` = '%i' LIMIT 1;", PI[i][pID]);
					SCMf(i, 0xFF6666FF, "[УСПЕХ] {FFFFFF}Вы получили аксессуар %s{FF6666}(+%i){FFFFFF} с магической удачи!", ItemsInfo[random_][ItemName], random_enchant);
				}
				else SCMf(i, COLOR_VALIK, "[Информация] {FFFFFF}Вы получили аксессуар %s(+%i) с магической удачи!", ItemsInfo[random_][ItemName], random_enchant);
			}
		}
		else krytoe_timer++;
		switch(minuite)
		{
			case 10,40:
			{
				if(random(100) > 50) NextStartWar();
				//else NextStartDerby();
			}
			case 1,21,51: 
			{
				if(CarSletInfo[1] - global_time <= 0)
				{
					AddCarsSalon(CarSletInfo[0]);
					CarSletInfo[0] = slet_car_models[random ( sizeof slet_car_models )];
					CarSletInfo[1] = 28800 + global_time;
				}
				if(AirDropTimer < 300) CreateAirDrop();
			}
		}
		foreach(new i: FamilysCapture)
		{
			new mi = i-lv_id;
			if(GangZone_FamDataWar[mi][0] == global_day 
				&& GangZone_FamDataWar[mi][1] == hour 
				&& GangZone_FamDataWar[mi][2] == minuite && !GangZone_CaptureTime[mi])
			{
				UpdateFCapture(i, mi, true);
				SendFamilyMessagef(GangZone_FamAttackID[mi], "{%s}[Family War] У вашей семьи сейчас началась встреча с семьей %s на территории №%i .", \
				FamilyChatColor[FamilyInfo[ FamilyID_(GangZone_FamAttackID[mi]) ][famChatColor]], \
				FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName], mi+1); // атака

				SendFamilyMessagef(GZInfo[i][gzFracID], "{%s}[Family War] У вашей семьи сейчас началась встреча с семьей %s на территории №%i.", \
				FamilyChatColor[FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famChatColor]], \
				FamilyInfo[FamilyID_(GangZone_FamAttackID[mi])][famName], mi+1); // защита

				str_1[0] = EOS, f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ FamilyID_(GangZone_FamAttackID[mi]) ][famChatColor] ]);
				GangZoneFlashForAll(GangZone[i], HexStr(str_1));
				GangZone_Flash[1] = i;
				str_1[0] = EOS, f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ FamilyID_(GangZone_FamAttackID[mi]) ][famChatColor] ]);
				GangZone_FlashColor[1] = HexStr(str_1);
			}
			else if(GangZone_CaptureTime[mi] > 0)
			{
				GangZone_CaptureTime[mi]--;
				if(!GangZone_CaptureTime[mi]) 
				{
					DisconnectFCapture(i, mi);
					break; //saferemove iter
				}
				else UpdateFCapture(i, mi);
			}
		}
		if(AirDropTimer)
		{
			if(AirDropTimer == 1) DeleteAirDrop();
			else if(AirDropTimer == 480 && AirDropOpen != -1)
			{
				if(!yes5)
				{
					foreach_player(i)
					{
						SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Один из бандитов слил информацию о грузе контрабандистов!");
						SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Метка груза установлена, поторопитесь, вы можете не успеть!");
						EnableGPSForPlayer(i, AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2]);
					}
					yes5 = true;
				}
			}
			AirDropTimer--;
		}
		Reklam++;
		foreach(new i: WH_DoorTimer)
		{
			if(WHDoorUsed{i} == 1)
			{
				new id = SearchDoorWareHouse(i+1);
				if(id == -1) continue;
				MoveDynamicObject(WareHouseObject[id],WareHouseDoor[id][wPosition][0],WareHouseDoor[id][wPosition][1],11.632491,3.0);
				Iter_SafeRemove(WH_DoorTimer, i, i);
				WHDoorUsed{i} = 0;
			}
			else if(WHDoorUsed{i} != 0) WHDoorUsed{i}--;
		}
		ContainerTimer();
		if(admin_stop > 0)
		{
			if(!admin_stop) admin_stop = 0;
			else admin_stop--;
		}
		if(minuite == 40 && (second >= 0 && second <= 3))
		{
			foreach(new i: Player)
			{
				if(BizEntered[i] == -1) continue;
				new bizid = BizEntered[i];
				if(BizInfo[bizid][bState] != 22) continue;
				if(Second_Hand[FindSecondHandBizID(bizid)][sSaleHour] != hour+1) continue;
				BizEntered[i] = -1;
				SetPlayerInteriorEx(i, 0);
				SetPlayerVirtualWorldEx(i, 0);
				J_SetPlayerPos(i, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z]);
				SCM(i, COLOR_GREY, !"Секонд-хенд сейчас закрыт, проходит подготовка к распродаже (в течении 20 минут открытие).");
			}
		}
		for(new i; i < sizeof(Second_Hand); i++)
		{
			new bizid = Second_Hand[i][sBizID];
			new secondid = i;
			if(Second_Hand[secondid][sSaleHour] == hour && Second_Hand[secondid][sSaleStatus])
			{
				UpdateDynamic3DTextLabelTextf(Second_Hand[secondid][sSaleTextRoom], 0xFFFFFFFF, "Идёт распродажа одежды!\nЗавершиться в {FF0000}%2d:00\n\n{ffffff}Всего было одежды на распродажу: {FFFF00}%d шт.\n{ffffff}Сколько осталось одежды: {FFFF00}%d шт.\n\n{CCCCCC}До следующего выноса одежды в зал осталось %d секунд.", Second_Hand[secondid][sSaleHour]+1, 300, Second_Hand[secondid][sSaleCount], 60 - second);
				if(Second_Hand[secondid][sSaleLastMinute] != minuite)
				{
					for(new a; a < sizeof(Second_Hand_Pickup_Pos); a++)
					{
						if(Second_Hand[secondid][sSalePickup][a]) continue;
						Second_Hand[secondid][sSaleText][a] = CreateDynamic3DTextLabel(!"Одежда из секонд-хенда\n{cccccc}ALT - чтобы подобрать", 0xFFFFFFFF, Second_Hand_Pickup_Pos[a][0], Second_Hand_Pickup_Pos[a][1], Second_Hand_Pickup_Pos[a][2], 3.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, bizid+100, 30);
						Second_Hand[secondid][sSalePickup][a] = CreateDynamicPickup(2401, 23, Second_Hand_Pickup_Pos[a][0], Second_Hand_Pickup_Pos[a][1], Second_Hand_Pickup_Pos[a][2], bizid+100, 30);
					}
					Second_Hand[secondid][sSaleLastMinute] = minuite;
					foreach(new d: Player)
					{
						if(BizEntered[d] == bizid) SCM(d, COLOR_YELLOW, !"Внимание! В зал вынесли новую одежду, ищите её возле вешалок.");
					}
				}
			}
			else if(Second_Hand[secondid][sSaleHour] == hour-1 && Second_Hand[secondid][sSaleLastMinute] != 0 && (minuite == 0 && second >= 0 && second <= 3))
			{
				UpdateDynamic3DTextLabelText(Second_Hand[secondid][sSaleTextRoom], 0xFFFFFFFF, !"Распродажа одежды уже прошла!");
				for(new a; a < sizeof(Second_Hand_Pickup_Pos); a++)
				{
					if(!Second_Hand[secondid][sSalePickup][a]) continue;
					DestroyDynamic3DTextLabel(Second_Hand[secondid][sSaleText][a]);
					DestroyDynamicPickupEx(Second_Hand[secondid][sSalePickup][a]);
					Second_Hand[secondid][sSalePickup][a] = 0;
				}
				Second_Hand[secondid][sSaleStatus] = false;
				Second_Hand[secondid][sSaleCount] = 0;
				Second_Hand[secondid][sSaleLastMinute] = 0;
				foreach(new d: Player)
				{
					if(BizEntered[d] != bizid) continue;
					SCM(d, COLOR_YELLOW, !"Внимание! Закончилась распродажа одежды.");
					SCMf(d, -1, "Всего продано: %dшт одежды из секонд-хенда.", Second_Hand[secondid][sSaleCount]);
				}
			}
		}
		for(new i = 1; i < MAX_ORGS; i++)
		{
			if(hour == SobesTime1[i] && minuite == SobesTime2[i])
			{
				SCMAll(-1, !" ");
				SCMAll(COLOR_GOV, (str_f("Гос.Новости: [ %s ] Здравствуйте, хотим сообщить, что сейчас проходит собеседование в %s!",global_OrgInfo[i][g_oName],global_OrgInfo[i][g_oName])));
				SCMAll(COLOR_GOV, (str_f("Гос.Новости: [ %s ] Собеседование будет проходить в %s!",global_OrgInfo[i][g_oName],SobesMesto[i])));
				SCMAll(COLOR_GOV, (str_f("Гос.Новости: [ %s ] При себе иметь: паспорт, лицензии!",global_OrgInfo[i][g_oName])));
				SCMAll(-1, !" ");
				SobesTime1[i]	= -1;
				SobesTime2[i]	= -1;
			}
		}
		if((hour == 5 && minuite == 55 && !second))
		{
		    CreateRestartServer();
		}
		else if((hour == 5 && minuite == 57 && !second))
		{
		    CreateRestartServer();
		}
		else if((hour == 5 && minuite == 58 && !second))
		{
		    CreateRestartServer();
		}
		if((!minuite || minuite == 29) && !second && AutoRespawn) AutoCarSpawn();
		if(Teleport)
		{
			MPTime --;
			TDSetStringf(TeleportEvent[1], "%s_~W~-_/GOTP", Convert(MPTime));
		}
		if(MPTime == 0)
		{
			SCMAll(0x40FF00FF, !"[Мероприятие]{FFFFFF} Телепорт на мероприятие закрыт, время вышло.");
			Teleport = false;
			MPTime = 60;
			for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
		}
		switch(Reklam)
		{
			case 0,300,900,1500,3500:
			{
				GLS[35]=0;
				SCMAll(COLOR_YELLOW, !"• {ffffff}СЕГОДНЯ У НАС ДЕЙСТВУЕТ {FFFF00}АКЦИЯ Х2 ДОНАТ{ffffff}! ПОПОЛНИ 100 РУБЛЕЙ, ПРИДЁТ 200!");
				SCMAll(COLOR_YELLOW, !"• {ffffff}У вас вы можете приобрести {BE2D2D}АДМИНКУ {ffffff}по самым {BE2D2D}выгодным ценам{ffffff}! Подробней: {ffff00}/buyadm");
				SCMAll(COLOR_YELLOW, !"• {ffffff}Так-же у нас есть много других крутых привилегий. Подробней: {ffff00}/donaterub");
				SCMAll(COLOR_YELLOW, (str_f("• {ffffff}Пополнить счёт можно у нас на сайте: {ffff00}%s", ServerCFG[server_site])));
				SCMAll(COLOR_YELLOW, !"• {ffffff}Хочешь быстрее всех перестреливать игроков? Прокачай урон! {ffff00}/donaterub ( 2 пункт )");
				SCMAll(COLOR_YELLOW, !"• {ffffff}Список ТОП капчеров по команде -> {ffff00}/captchatop");
				SCMAll(COLOR_YELLOW, !"• {ffffff}Нашли недоработку? Напишите это нам! {ffff00}/bugreport [текст]");
			}
			case 420,870,1190,1705,2300:
			{
				SCMAll(0xae433dFF, !""),SCMAll(0xae433dFF, !"");
				SCMAll(0xae433dFF, !"Хочешь выделится среди всех игроков сервера, а так-же");
				SCMAll(0xae433dFF, !"чтобы твое игровое имя было в виде 3D текста на Спавне?");
				SCMAll(0xae433dFF, !"Тогда бей рекорды которые находятся ниже:");
				SCMAll(0xae433dFF, (str_f("Игроман сервера {dbdbdb}%s{ae433d}(Наиграл {dbdbdb}%i{ae433d} серверных часов)", besthoursPN, besthours)));
				SCMAll(0xae433dFF, (str_f("Состоятельный бизнесмен {dbdbdb}%s{ae433d}(Насчитывает у себя {dbdbdb}%i{ae433d} AZCoins)", bestAZCoinsPN, bestAZCoins)));
				SCMAll(0xae433dFF, (str_f("Гений печати {dbdbdb}%s{ae433d}(Вводит капчу за {dbdbdb}%.2f{ae433d} ms.)", bestCaptchaPN, bestCaptcha)));
				SCMAll(0xae433dFF, (str_f("Самый везучий {dbdbdb}%s{ae433d}(Удача на его стороне)", bestLuckyPN)));
				SCMAll(0xae433dFF, !""),SCMAll(0xae433dFF, !"");
			}
			case 600,2000,2200:
			{
				if(hour < 19 && hour > 5) SetWeather(Weather);
				SCMAll(COLOR_LIGHTBLUE, !"В нашем магазине ты можешь приобрести нужное количество игровых денег и потратить");
				SCMAll(COLOR_LIGHTBLUE, !"их на желаемый тобой {FFFFFF}бизнес, дом, аксессуар {6495ED}или на покупку каких-нибудь безделушек.");
				SCMAll(COLOR_LIGHTBLUE, !" - Игроки со статусом {FFFFFF}VIP {6495ED}имеют большие возможности, подробнее /help [Преимущества VIP]");
				SCMAll(COLOR_LIGHTBLUE, !" - В магазине также можно приобрести редкие {FFFFFF}автомобили, аксессуары, воздушные шары{6495ED},");
				SCMAll(COLOR_LIGHTBLUE, (str_f("   предметы, которые выделят тебя из толпы! Наш сайт: {FFFFFF}%s", ServerCFG[server_site])));
			}
			case 1200,2800:
			{
				if(hour < 19 && hour > 5) SetWeather(Weather);
				SCMAll(COLOR_LIGHTBLUE, !"[Подсказка] Вы можете купить складское помещение /gps - складские помещения.");
				SCMAll(COLOR_LIGHTBLUE, !"Этот тип недвижимости будет навсегда закреплен за вами и за него не нужно платить.");
				SCMAll(COLOR_LIGHTBLUE, !"Таким образом вы можете сберечь своё имущество, даже если вас забанят.");
			}
			case 500,1000,2100,2599:
			{
				SCMAll(-1, !"======================================================================");
				SCMAll(0x6495EDFF, !"{30D5C8}[BONUS] {FFFFFF}На ЖДЛС можно пройти квесты на {30D5C8}AZ Coins!");
				SCMAll(0x6495EDFF, (str_f("{30D5C8}[BONUS] {FFFFFF}Напиши в ЛС группы #ПОДАРОК {30D5C8}(%s) {FFFFFF}и получи {30D5C8}AZ-RUB/АДМИНКУ!", ServerCFG[server_group_vk])));
				SCMAll(0x6495EDFF, !"{30D5C8}[BONUS] {FFFFFF}Хочешь поднять много {30D5C8}AZ-COINS?{FFFFFF} Пиши команду - {30D5C8}/captcha");
				SCMAll(0x6495EDFF, !"{30D5C8}[BONUS] {FFFFFF}Происходит конкурс на АДМИНКУ {30D5C8}/topminute <<<");
				SCMAll(-1, !"======================================================================");
			}
			case 1800,2500:
			{
				SCMAll(COLOR_ORANGE, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
				SCMAll(COLOR_ORANGE, !"- Основные команды сервера: /menu /help /gps /settings");
				SCMAll(COLOR_ORANGE, !"- Пригласи друга и получи бонус в размере $300 000!");
				SCMAll(COLOR_ORANGE, (str_f("- Донат и получение дополнительных средств %s", ServerCFG[server_site])));
				SCMAll(COLOR_ORANGE, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			}
			case 2600: Reklam = 0;
		}
		CheckGas();
		if(StartMP != false && OpenMP != true && !TypeMP)
		{
			if(!WarTimer[1]) WarTimer[0]--, WarTimer[1] = 60;
			WarTimer[1]--;
			str_1[0] = EOS, str_2[0] = EOS;
			if(WarTimer[1]<10) f(str_1, sizeof(str_1), "0%i", WarTimer[1]);
			else f(str_1, sizeof(str_1), "%i", WarTimer[1]);
			if(WarTimer[0]<10)f(str_2, sizeof(str_2), "0%i", WarTimer[0]);
			else f(str_2, sizeof(str_2), "%i", WarTimer[0]);
			TDSetStringf(GrandKapt[0], "%s:%s", str_2, str_1);
			TDSetStringf(GrandKapt[1], "%i", WarKill_1);
			TDSetStringf(GrandKapt[2], "%i", WarKill_2);
			TextDrawColor(GrandKapt[1], 0x66CCFFFF);
			TextDrawColor(GrandKapt[2], 0xFFCC33FF);
			foreach_player(playerid)
			{
				if(!IsPlayerPlayMP[playerid]) continue;
				for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, GrandKapt[i]);
			}
			if(!WarTimer[0])
			{
				foreach_player(i)
				{
					if(!IsPlayerPlayMP[i]) continue;
					for(new j; j < 5; j++) TextDrawHideForPlayer(i, GrandKapt[j]);
					J_SetPlayerPos(i, 1615.4910,2340.7800,695.3304);
					if(WarKill_1 < WarKill_2) SCMf(i,0x42AAFFFF, "[WAR] Команда {FFCC33}Золотых{42AAFF} одержала победу над {66CCFF}Голубыми {AFAFAF}(голубые %i: золотые %i)", WarKill_1, WarKill_2);
					else SCMf(i,0x42AAFFFF, "[WAR] Команда {66CCFF}Голубых{42AAFF} одержала победу над {FFCC33}Золотыми {AFAFAF}(голубые %i: золотые %i)", WarKill_1, WarKill_2);
					IsPlayerPlayMP[i] = false;
					IsPlayerWarTeam[i] = false;
					callcmd::gomp(i);
					GiveDonateRub(i, random(10));
					ResetPlayerWeapons(i);
				}
				StartMP 	= false,
				OpenMP 		= false,
				TypeMP		= false,
				WarDropAll 	=
				WarKill_1 	=
				WarKill_2	= 0;
			}
		}
		if(CaptureTime[0]>0 || CaptureTime[1]>0)
		{
			if(CaptureTime[1]==0)
			{
				CaptureTime[0]--;
				CaptureTime[1]=60;
			}
			CaptureTime[1] --;
			static tmin[3], tsec[3];
			tmin[0] = EOS, tsec[0] = EOS;
			if(CaptureTime[1]<10)f(tsec, sizeof(tsec), "0%i", CaptureTime[1]);
			else f(tsec, sizeof(tsec), "%i", CaptureTime[1]);
			if(CaptureTime[0]<10)f(tmin, sizeof(tmin), "0%i", CaptureTime[0]);
			else f(tmin, sizeof(tmin), "%i", CaptureTime[0]);
			TDSetStringf(GrandKapt[0], "%s:%s", tmin, tsec);
			TDSetStringf(GrandKapt[1], "%i", CaptureDefKill);
			TDSetStringf(GrandKapt[2], "%i", CaptureAtacKill);
			TextDrawColor(GrandKapt[1], TeamColors[CaptureDef]);
			TextDrawColor(GrandKapt[2], TeamColors[CaptureAtac]);
			foreach(new playerid: Player)
			{
				if((GetTeamID(playerid)==CaptureAtac || GetTeamID(playerid)==CaptureDef))
				for(new i; i<5; i++) TextDrawShowForPlayer(playerid, GrandKapt[i]);
				else for(new i; i<5; i++) TextDrawHideForPlayer(playerid, GrandKapt[i]);
			}
			GangZoneFlashForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
			GangZone_Flash[0] = CaptureZone;
			GangZone_FlashColor[0] = TeamColors[CaptureAtac];
		}
		if(CaptureTime[0]==0 && CaptureTime[1]==1)
		{
			GangZoneStopFlashForAll(GangZone[CaptureZone]);
			if(CaptureAtacKill > CaptureDefKill)
			{
				STM(CaptureDef, COLOR_RED, "Вы проиграли сражение за территорию");
				STM(CaptureAtac, COLOR_VALIK, "Вы выиграли сражение за территорию!");
				GangZone_Flash[0] = -1;
				GangZone_FlashColor[0] = -1;
				GangZoneHideForAll(GangZone[CaptureZone]);
				GangZoneShowForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
				GZInfo[CaptureZone][gzFracID] = CaptureAtac;
			}
			else {
				STM(CaptureAtac, COLOR_RED, "Вы проиграли сражение за территорию");
				STM(CaptureDef, COLOR_VALIK, "Вы выиграли сражение за территорию!");
			}
			CaptureTime[0]=0; CaptureTime[1]=0;
			for(new i; i<5; i++){TextDrawHideForAll(GrandKapt[i]);}
			UpdateDorm(CaptureDef);
			UpdateDorm(CaptureAtac);
			CaptureDef = -1;
			CaptureAtac = -1;
			SaveGangZone(CaptureZone);
			CaptureZone = -1;
		}
		//printf("GrandTimer прокрутился за %i ms", GetTickCount() - currenttime);
	}
	return 1;
}
public: GateClose(gate)
{
	GateInfo[gate][gOpen] = false;
	MoveDynamicObject(gGate[gate],GateInfo[gate][gClose_X],GateInfo[gate][gClose_Y],GateInfo[gate][gClose_Z],3.0);
    new gateid = GateInfo[gate][gForGateid];
    if(gateid != -1)
    {
        GateInfo[gateid][gOpen] = false;
		MoveDynamicObject(gGate[gateid],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],3.0);
    }
    return 1;
}
public: DoorClose(i)
{
	DoorInfo[i][dStatus] = false;
	MoveDynamicObject(dDoor[i], DoorInfo[i][dPos][0], DoorInfo[i][dPos][1], DoorInfo[i][dPos][2], DoorInfo[i][dSpeed], 0.0, 0.0, DoorInfo[i][dPos][3]);
	return false;
}
public: DoorCustomClose(i)
{
	if(CustomDoor[i][cStatus] != true) return 1;
	CustomDoor[i][cStatus] = false;
	MoveDynamicObject(CustomDoorUID[i], CustomDoor[i][customX], CustomDoor[i][customY], CustomDoor[i][customZ], 0.4, CustomDoor[i][cOffSetX], CustomDoor[i][cOffSetY], CustomDoor[i][cOffSetZ]);
	return 0;
}
public: BarrierClose(id)
{
	BarrierInfo[id][brOpen] = false;
    MoveDynamicObject(gBarrier[id], BarrierInfo[id][brData][0], BarrierInfo[id][brData][1], BarrierInfo[id][brData][2], BARRIER_SPEED, BarrierInfo[id][brData][3], BarrierInfo[id][brData][4], BarrierInfo[id][brData][5]);
    
    new barrierid = BarrierInfo[id][brForBarrierID];    
    if(barrierid != -1)
    {
        BarrierInfo[barrierid][brOpen] = false;
    	MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[barrierid][brPos_A]+180);
    }
    return 1;
}
public: ChangeInterior(playerid)
{
	if(BuyInt[playerid] == 1)
	{
		SetPlayerInteriorEx(playerid,IntInfo[1][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[1][iCam_X],IntInfo[1][iCam_Y],IntInfo[1][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[1][iCamAt_X],IntInfo[1][iCamAt_Y],IntInfo[1][iCamAt_Z]); //
		PlayerTDSetStringf(playerid, InfoText[playerid],"Level: %i~n~Cost: $%i",1,IntInfo[1][iCost]);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
		TextDrawShowForPlayer(playerid,Boxmenu0);
		TextDrawShowForPlayer(playerid,Boxmenu1);
		TextDrawShowForPlayer(playerid,Boxmenu2);
		TextDrawShowForPlayer(playerid,Boxmenu3);
		TextDrawShowForPlayer(playerid,ButtonRight);
		TextDrawShowForPlayer(playerid,ButtonCancel);
		TextDrawShowForPlayer(playerid,ButtonSelect);
		TextDrawShowForPlayer(playerid,boxaccept);
		TextDrawShowForPlayer(playerid,boxcancel);
		SelectTextDraw(playerid, 0xFF6347FF); //0xFFFFFFFF
		SCM(playerid, COLOR_WHITE, !"[Информация] Подождите немного ...");
	}
	return 1;
}
forward MysqlCheckNameSetName(playerid, id, name[]);
public MysqlCheckNameSetName(playerid, id, name[])
{
    if(cache_num_rows() > 0) return SCM(playerid, -1, !"Это имя уже занято");
    if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"Лидер не может сменить ник!");
    SCMf(playerid, -1, "Вы сменили имя игрока %s[%i] на %s", PN(id), id, name);
    SCMf(id, -1, " А: %s сменил вам ник на %s", PN(playerid), name);
    RenamePlayer(id, name);
    return 1;
}
public: MysqlCheckBanned(playerid)
{
	str_1[0] = EOS;
	new accounts = cache_num_rows();
	if(!accounts) return SCM(playerid, COLOR_GREY, !"Больше нет забаненных");
	for(new i; i < accounts; i ++) str_2[0] = EOS, cache_get_string(i, !"Name", str_2),f(str_1, sizeof(str_1), "%s%s\n",str_1, str_2);
	if(accounts == 20) strcat(str_1, !"{AFAFAF}Далее >>>\n");
	if(FirstBL[playerid]) strcat(str_1, !"{AFAFAF}<<< Назад");
	return SPD(playerid, 96, DIALOG_STYLE_LIST, !"Забаненые", str_1, !"Выбор", !"Назад");
}
public: CheckPlayer(playerid)
{
    if(cache_num_rows())
    {
        new reason[7+23], admin[MAX_PLAYER_NAME], date[22], seconds;
        cache_get_string(0, !"BanAdmin", admin);
        cache_get_string(0, !"BanReason", reason);
        cache_get_int(0, !"BanSeconds", seconds);
        cache_get_string(0, !"BanDate", date);
        new dima = floatround((seconds-global_time) / 60 / 60 / 24, floatround_ceil);
        if(global_time < seconds)
		{
			str_d[0] = EOS, ConvertUnixTime(seconds, str_d);
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Ваш игровой аккаунт: {FF0000}%s {FFFFFF}заблокирован!\n\n\
			{ffffff}Администратор: {cccccc}%s\n\
			{ffffff}Причина: {cccccc}%s\n\
			{ffffff}Дата блокировки: {cccccc}%s\n\
			{ffffff}Дата разблокировки: {cccccc}%d-%02d-%02d %02d:%02d:%02d\n\
			{ffffff}До разблокировки еще {cccccc}%i дня(ей).\n\n\n\
			{ffffff}Если вы не согласны c блокировкой аккаунта,\n\
			вы можете подать заявку на разблокировку на форуме: %s", PN(playerid), admin, reason, date, \
			str_d, dima, ServerCFG[server_forum]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Этот аккаунт заблокирован!", str_1, !"Ок", !"");
			return J_Kick(playerid, 562);
		}
        else
		{
		    mysql_tqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `Warns` = '0' WHERE `NickName` = '%s' LIMIT 1", PN(playerid));
			mysql_tqueryf(mysql,"DELETE FROM `bannames` WHERE `Name` = '%s' LIMIT 1", PN(playerid));
			if(PI[playerid][pGoogle]) ShowGoogleLogin(playerid);
			else
			{
				//if(PI[playerid][pVK] != 0 && !IsASuccesIP(PlayerRegIP[playerid], PlayerIp[playerid])) ShowVKLogin(playerid);
				OnPlayerLogin(playerid);
			}
		}
    }
    else
    {
		if(PI[playerid][pGoogle]) ShowGoogleLogin(playerid);
		else
		{
			//if(PI[playerid][pVK] != 0 && !IsASuccesIP(PlayerRegIP[playerid], PlayerIp[playerid])) ShowVKLogin(playerid);
			OnPlayerLogin(playerid);
		}
	}
	return 1;
}
stock strtoupper(const string[], dest[], const size = sizeof(dest))
{
    for(new i = 0, c; (c = string[i]); i++)
    {
        if(i == size - 1) break;
        dest[i] = toupper(c);
    }
}
public: LoginDialogMysql(playerid, inputtextsave[])
{
	cache_get_string(0, !"Password", str_1);
	cache_get_int(0, !"Google", PI[playerid][pGoogle]);
	cache_get_string(0, !"GoogleKey", PI[playerid][pGoogleKey]);
	cache_get_string(0, !"RegIP", PlayerRegIP[playerid]);
    bcrypt_check(inputtextsave, str_1,  "OnSafePassword_Auth", "i", playerid);
	return 1;
}
static const ac_code_name[][15+10] =
{
	{"Обход Аутентификации"},
	{"isvalid packet"},
	{"Unoccupied Bypasser"},
	{"fmop"},
	{"AirBreak"},
	{"teleport on foot"},
	{"dgun"},
	{"nop resetweapon"},
	{"damager"},
	{"nop position"},
	{"flood auto-callable func"},
	{"flood many requests"},
	{"teleport with car"},
	{"speedhack with car"},
	{"Fast Walk"}
};
public: OnCheatDetected(playerid, code, type)
{
	if(!IsPlayerConnected(playerid)) return 1;
	//
	if(IsPlayerLogged{playerid} != false && !code) return -1;
	switch(code)
	{
		case 3..5,9,12,13: if(PI[playerid][pAdmin] > 5) return -2;
	}
	switch(type)
	{
		case 1:
		{
			//warning
			SendAdminsMessagef(0xD2B88FFF, "[XXL Guard] %s[%i] подозревается в использовании чит-программ: %s [code: %03i].", PN(playerid), playerid, ac_code_name[code], code + 100);
			printf("[XXL Guard] %s[%i] подозревается в использовании чит-программ: %s [code: %03i].", PN(playerid), playerid, ac_code_name[code], code + 100);
			//continue
		}
		case 2:
		{
			//kick
			SendAdminsMessagef(0xD2B88FFF, "[XXL Guard] %s[%i] был кикнут по подозрению в использовании чит-программ: %s [code: %03i].", PN(playerid), playerid, ac_code_name[code], code + 100);
			printf("[XXL Guard] %s[%i] был кикнут по подозрению в использовании чит-программ: %s [code: %03i].", PN(playerid), playerid, ac_code_name[code], code + 100);
			ToCheat(playerid, code);
		}
	}
	//end
	return 1;
}
stock ToCheat(playerid, code)
{
	static hour, minute, day, month, year;
	gettime(hour, minute);
	getdate(year, month, day);
	str_2[0] = EOS, f(str_2, sizeof(str_2), "\n\n{FF6347}Вы были кикнуты за подозрение в читерстве\n\
	Чтобы избежать подобных ситуаций в будущем\n\
	удалите все клео и другие модификации для игры.\n\n\
	{FFFFFF}Аккаунт: %s\n\
	Код причины: %s(%i / 1)\n\
	NetStat: %i(%.2f%%)\n\n\
	Для выхода из игры используйте /q(uit)\n\
	В распозновании был применён XXL Guard", PN(playerid), ac_code_name[code], code+100, GetPlayerPing(playerid), NetStats_PacketLossPercent(playerid));
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%02i:%02i %02i.%02i.%i", hour, minute, day, month, year);
	SPD(playerid, 0, 0, str_1, str_2, !"X", !"");
	Kick(playerid);
}
public: OnDelAccount(playerid, name[])
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Игрок с указанным ником не найден");
    SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Аккаунт с именем %s успешно удален!", name);
    SendAdminsMessagef(COLOR_LIGHTRED, "[Внимание]{FFFFFF} А: %s удалил аккаунт игрока %s", PN(playerid), name);
    new getplayer = GetNameID(name);
    if(getplayer != INVALID_PLAYER_ID)
    {
		SCM(getplayer, COLOR_LIGHTRED, !"Ваш аккаунт был удалён за нарушение правил сервера");
		Kick(getplayer);
	}
	mysql_pqueryf(mysql, "UPDATE `houses` SET `Owner`= 'The State' WHERE `Owner`='%s'", name);
	mysql_pqueryf(mysql, "UPDATE `businesses` SET `Owner`= 'The State' WHERE `Owner`='%s'", name);
	mysql_tqueryf(mysql, "DELETE FROM `ownable` WHERE `Owner` = '%s';", name);
    mysql_tqueryf(mysql, "DELETE FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1;", name);
    return 1;
}
stock GoogleLogin(playerid)
{
	for(new i;i<8;i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
	for(new i=1;i<8;i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
	for(new i;i<5;i++) TextDrawHideForPlayer(playerid, GoogleStep4[i]);
	OnPlayerLogin(playerid);
}
stock GoogleSteep(playerid, steep, hide = 0)
{
	switch(steep)
	{
		case 0:
		{
			for(new i;i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
			for(new i = 1;i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
			for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, GoogleStep4[i]);
		}
		case 1:
		{
		    //AC_FIX_DIALOG_F(playerid, 8919);
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GooglePhone[i]);
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep1[i]);
			SPD(playerid, 8919, DIALOG_STYLE_MSGBOX, !"1-вый шаг", !"{FFFFFF}\n\nНачнем с того, что если у вас нет приложения, то его нужно\nзагрузить.Заходим в {FDC459}Play Market или App Store{FFFFFF} и ищем\nGoogle Authenticator.\n\n{B0FD59}Нашли? Нажимаем загрузить приложение.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", !"Дальше", !"Отмена");
		}
		case 2:
		{
		    //AC_FIX_DIALOG_F(playerid, 8920);
			if(hide)
			{
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return 1;
			}
			for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep2[i]);
			SPD(playerid, 8920, DIALOG_STYLE_MSGBOX, !"2-ой шаг", !"{FFFFFF}\n\nОтлично! Вы загрузили приложение, теперь давайте его запустим.\nНажимаем на {FDC459}+{FFFFFF}, так как показано на примере.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", !"Дальше", !"Отмена");
		}
		case 3:
		{
			if(hide)
			{
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return 1;
			}
			for(new i; i < 6; i++) TextDrawShowForPlayer(playerid, GoogleStep3[i]);
			TextDrawHideForPlayer(playerid, GoogleStep2[0]);
		}
		case 4:
		{
		    //AC_FIX_DIALOG_F(playerid, 8922);
			if(hide)
			{
				for(new i = 1; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
				for(new i ; i < 6; i++) TextDrawHideForPlayer(playerid, GoogleStep3[i]);
				for(new i ; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return 1;
			}
			for(new i; i < 6; i++) TextDrawHideForPlayer(playerid, GoogleStep3[i]);
			for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, GoogleStep4[i]);
			SPD(playerid, 8922, DIALOG_STYLE_INPUT, !"4-тый шаг", !"{FFFFFF}\n\nЕсли вы правильно ввели код, то теперь\nу вас в приложении будет обновляться другой код, который\nвы будете использовать для авторизации на сервере.\n(Код, который на компютере, это пример!)\n\n{ED4242}Теперь введите код с вашего телефона в этот диалог.\nЕсли он совпадет, значит все получилось!\n\n", !"Дальше", !"Отмена");
		}
	}
	return 1;
}
stock ShowGoogleLogin(playerid)
{
    //AC_FIX_DIALOG_F(playerid, 8929);
	for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GooglePhone[i]);
	for(new i = 1; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep2[i]);
	for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, GoogleStep4[i]);
	SPD(playerid, 8929, DIALOG_STYLE_INPUT, !"Подтверждение", (str_f("\
		{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\n\
		Введите код подтверждения для входа в игру.\n\n{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\n\
		идентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\n\
		отключить Google Authenticator на сайте:\n\n{FFFFFF}%s/profile/in", ServerCFG[server_site])), !"Принять", !"Отмена");
}
stock AddReport(playerid)
{
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] == -1)
		{
			Reports[i] = playerid;
			pTemp[playerid][NumReports] = i;
			break;
		}
	}
	return 1;
}
stock TotalReport()
{
	new num;
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] != -1) num ++;
	}
	return num;
}
//
public: LoadRadars()
{
 	new currenttime = GetTickCount();
	OWNABLERADAR = cache_num_rows();
    for(new i; i < OWNABLERADAR; i++) LoadOwnableRadars(i,i);
    return printf("LoadRadars загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadOwnableRadars(i,id)
{
	cache_get_int(i, !"ID", RadarInfo[i][rID]);
	cache_get_string(i, !"Name", RadarInfo[i][rName]);
	cache_get_float(i, "X", RadarInfo[i][radX]);
	cache_get_float(i, "Y", RadarInfo[i][radY]);
	cache_get_float(i, "Z", RadarInfo[i][radZ]);
	cache_get_float(i, "A", RadarInfo[i][radA]);
    static const fmt_str[] = "Радар\nМаксимальная скорость: {9ACD32}120 км/ч.\n{FFFFFF}Штраф за нарушение: {9ACD32}1500$.\n{FFFFFF}Поставил: {9ACD32}%s";
    static string[sizeof(fmt_str)+MAX_PLAYER_NAME-1];
    string[0] = EOS,f(string, sizeof(string), fmt_str, RadarInfo[id][rName]);
    RadarInfo[id][radText] = CreateDynamic3DTextLabel(string, -1, RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ] + 2.0, 20.0);
    RadarInfo[id][rObj] = CreateDynamicObject(18880, RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ]-1.3, 0, 0, RadarInfo[id][radA]);
    RadarInfo[id][radArea] = CreateDynamicSphere(RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ], 10.0, 0, 0, -1);
}
stock UpdatePlayerFamily(playerid, bool:connect=false)
{
	new id = pFamilyID(playerid);
	if(id == -1228 || id == -1) return 1;
	if(connect != false) Iter_Add(Familys, playerid);
	if(PI[playerid][pFamilyMember] == -1 || GetString(FamilyInfo[id][famName], "default") || GetString(FamilyInfo[id][famSlogan], "default")) return 1;
	new brand = FamilyInfo[pFamilyID(playerid)][famBrand], galka = FamilyInfo[pFamilyID(playerid)][famGalka], FamZnak[5];
	if(brand < 0) brand = 0;
	if(galka < 0) galka = 0;
	if(!brand && !galka) FamZnak[0] = EOS;
	else if(galka && !brand) SetString(FamZnak, "[$] ");
	else if(galka && brand) SetString(FamZnak, "© ");
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s{%s}%s {FFFFFF}%s", FamZnak, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famName], fType[FamilyInfo[pFamilyID(playerid)][famType]][typeName]);
	if(!IsValidDynamic3DTextLabel(PlayerFamily[playerid]) && PlayerFamily[playerid] == Text3D:-1) PlayerFamily[playerid] = CreateDynamic3DTextLabel(str_1, 0xFFFFFFFF, 0.000000, 0.000000, 0.050000, 5.000000, playerid, -1, 1, -1, -1, -1);
	else if(PlayerFamily[playerid] != Text3D:-1) UpdateDynamic3DTextLabelText(PlayerFamily[playerid], 0xFFFFFFFF, str_1);
	return 1;
}
public: LinenProgressGrow(linenid)
{
	KillTimer(LinenInfo[linenid][linenTimer]);
    LinenInfo[linenid][linenObject] = CreateDynamicObject(865, LinenInfo[linenid][linenPosX], LinenInfo[linenid][linenPosY], LinenInfo[linenid][linenPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
    SetDynamicObjectMaterial(LinenInfo[linenid][linenObject], 0, 812, "gta_proc_grassland", "oak2b", 0);

    str_2[0] = EOS, f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[linenid][linenScore]);
    LinenInfo[linenid][linenLabel] = CreateDynamic3DTextLabel(str_2, -1, LinenInfo[linenid][linenPosX], LinenInfo[linenid][linenPosY], LinenInfo[linenid][linenPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	LinenInfo[linenid][linenStatusTimer] = 1;
	LinenInfo[linenid][linenTimer] = SetTimerEx("LinenProgressGrow2", 1000, false, "i", linenid);
    return 1;
}
public: LinenProgressGrow2(linenid)
{
    LinenInfo[linenid][linenSecund] --;
    str_2[0] = EOS, f(str_2, sizeof(str_2), "Лён в процессе роста\n{FFFFFF}Осталось %s", Convert(LinenInfo[linenid][linenSecund]));
    UpdateDynamic3DTextLabelText(LinenInfo[linenid][linenLabel], COLOR_VALIK, str_2);

    if(LinenInfo[linenid][linenSecund] <= 0)
    {
        LinenInfo[linenid][linenStatus] = true;
        LinenInfo[linenid][linenScore] = 10;
        LinenInfo[linenid][linenStatusTimer] = 0;

		str_2[0] = EOS, f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[linenid][linenScore]);
        UpdateDynamic3DTextLabelText(LinenInfo[linenid][linenLabel], -1, str_2);
        KillTimer(LinenInfo[linenid][linenTimer]);
        SetDynamicObjectMaterial(LinenInfo[linenid][linenObject], 0, 817, "gta_procflowers", "gras07Si", 0);
    }
    return 1;
}
public: CottonProgressGrow(cottonid)
{
	KillTimer(CottonInfo[cottonid][cottonTimer]);
    CottonInfo[cottonid][cottonObject] = CreateDynamicObject(819, CottonInfo[cottonid][cottonPosX], CottonInfo[cottonid][cottonPosY], CottonInfo[cottonid][cottonPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
    SetDynamicObjectMaterial(CottonInfo[cottonid][cottonObject], 0, 812, "gta_proc_grassland", "oak2b", 0);

    str_2[0] = EOS, f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[cottonid][cottonScore]);
    CottonInfo[cottonid][cottonLabel] = CreateDynamic3DTextLabel(str_2, -1, CottonInfo[cottonid][cottonPosX], CottonInfo[cottonid][cottonPosY], CottonInfo[cottonid][cottonPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	CottonInfo[cottonid][cottonStatusTimer] = 1;
	CottonInfo[cottonid][cottonTimer] = SetTimerEx("CottonProgressGrow2", 1000, false, "i", cottonid);
    return 1;
}
public: CottonProgressGrow2(cottonid)
{
    CottonInfo[cottonid][cottonSecund] --;
    str_2[0] = EOS, f(str_2, sizeof(str_2), "Хлопок в процессе роста\n{FFFFFF}Осталось %s", Convert(CottonInfo[cottonid][cottonSecund]));
    UpdateDynamic3DTextLabelText(CottonInfo[cottonid][cottonLabel], COLOR_VALIK, str_2);

    if(CottonInfo[cottonid][cottonSecund] <= 0)
    {
        CottonInfo[cottonid][cottonStatus] = true;
        CottonInfo[cottonid][cottonScore] = 10;
        CottonInfo[cottonid][cottonStatusTimer] = 0;

		str_2[0] = EOS, f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[cottonid][cottonScore]);
        UpdateDynamic3DTextLabelText(CottonInfo[cottonid][cottonLabel], -1, str_2);
        KillTimer(CottonInfo[cottonid][cottonTimer]);
        SetDynamicObjectMaterial(CottonInfo[cottonid][cottonObject], 0, 817, "gta_procflowers", "gras07Si", 0);
    }
    return 1;
}
public: MineProgressGrow(mineid)
{
	CreateMineInfo(mineid);
    return 1;
}
public: DeleteFamily(playerid, params[])
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Семьи с таким названием не существует!");
	new familyid;
	cache_get_int(0, !"id", familyid);
	SCMf(playerid, COLOR_RED, "[Информация] {FFFFFF}Семья {%s}%s {FFFFFF}успешно удалена!", FamilyChatColor[FamilyInfo[familyid][famChatColor]], FamilyInfo[familyid][famName]);
    SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) удалил семью (%s)",PN(playerid), playerid, params);
	foreach_family(i)
	{
		if(!GetString(params, FamilyInfo[pFamilyID(i)][famName])) continue;
        PI[i][pFamilyMember] = -1;
        UpdatePlayerDataInt(i, "FamilyMember", -1);
		if(PI[i][pDCTime] == 4){
		    PI[i][pDCTime] = 0;
			SetSpawnPI(playerid, 0);
		    SCM(i, COLOR_RED, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
		}
		SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Семья в которой вы состояли, была расформирована!");
	}
    mysql_tqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `FamilyMember` = '-1' WHERE `FamilyMember` = '%i'", familyid);
    return 1;
}
public: MysqlDonationBlago(playerid)
{
	if(cache_num_rows())
	{
        //static name[MAX_PLAYER_NAME + 1], str[34] = "Место\tИгрок\tПожертвовал денег\n";
        new money;
		str_2 = "Место\tИгрок\tПожертвовал денег\n";
        for(new i; i < cache_num_rows(); i++) {

            str_1[0] = EOS, cache_get_string(i, !"NickName", str_1);
            cache_get_int(i, !"donation", money);
            f(str_2, sizeof(str_2), "%s{b2ff52}%i.\t{FFFFFF}%s\t{b2ff52}$%i\n",str_2, i+1, str_1, money);
        }
		SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Топ благотворителей",str_2, !"Закрыть", !"");
    }
    return 1;
}
public: OfflineFamilyMembers(playerid)
{
    /*new rows,fields,full = 0,name[MAX_PLAYER_NAME];
    str_1[0] = EOS;
    if (rows > 0)
    {
        for(new i = 0; i < rows; i++)
        {
            cache_get_string(i, !"NickName", name, mysql, MAX_PLAYER_NAME);
            foreach(new j : Player)
            {
                if (!strcmp(PlayerName[j], name))
                    continue;
                strcat(str_1, name);
                strcat(str_1, !"\n");
                full++;
            }
        }
    }*/
    //AC_FIX_DIALOG_F(playerid, 0);
    return SPD(playerid, 0, DIALOG_STYLE_LIST, "{FFCC00}Члены семьи", "{FFFFFF}Ничего не найдено", !"Закрыть", "");
}
forward OfflineUninvite(playerid, name[]);
public OfflineUninvite(playerid, name[])
{
	if(!cache_num_rows()) return SCM(playerid, -1, !"Аккаунт игрока не найден или игрок не состоит в Вашей фракции.");
	SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал оффлайн из семьи: %s!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, name);
	mysql_tqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `FamilyMember` = '0' WHERE `NickName` = '%s' LIMIT 1", name);
	return 1;
}
stock ServerInfo()
{
	printf("[Server]: Создано динамических объектов: %i",CountDynamicObjects());
    printf("[Server]: Создано транспорта на продажу: %i",sizeof(ModelLimit));
    printf("[Server]: Создано кладов: %i", Iter_Count(TREASURE));
	printf("[Server]: Создано транспорта: %i", CountVehicles());
	printf("[Server]: Создано гангзон: %i", GANGZONES);
	printf("[Server]: Создано иконок: %i", CountDynamicMapIcons());
	printf("[Server]: Создано 3D текстов: %i", CountDynamic3DTextLabels());
    printf("[Server INFO]: Аксессуаров загружено: %i", Iter_Count(itemAccessories));
    printf("[Server INFO]: Сертификатов(skin) загружено: %i", Iter_Count(itemSkin));
    printf("[Server INFO]: Сертификатов(vehicle) загружено: %i", Iter_Count(itemVehicle));
    printf("[Server]: Успешно запущен | Сервер: %s", ServerCFG[server_logo]);
    return 1;
}
stock ConvertToNegativeNumber(number) return -number;
new IsPlayerZoneTime[MAX_PLAYERS char], bool:IsPlayerZone[MAX_PLAYERS], PlayerGangZoneID[MAX_PLAYERS];
stock OnPlayerResetInfo(playerid, id_invalid = 0)
{
    player_InGreenZone{playerid} = false;
    player_TypeClient{playerid} = 255;
	player_Status_Focus[playerid] = false;
	player_IsPreloadAnimation[playerid] = false;
	IsPlayerFillMenu[playerid] = false; 
	playerTimer_VehicleFill[playerid] = false;
	IsPlayerAnimationMenu[playerid] = false;
	player_Cef_ShowChat[playerid] = false;
	IsVerifyBankCode{playerid} = false;
	player_Vue_Init[playerid] = false;
	player_Svetle_Init[playerid] = false;
	if(TestDriveSphere[playerid] != -1) DestroyDynamicArea(TestDriveSphere[playerid]), TestDriveSphere[playerid] = -1;
	GetUID_PlayerNPC[playerid] = -1;
	ShopUID{playerid} = 255;
	IsPlayerLogged[playerid] = false;
	PlayerTick[playerid] = 0;
	InvTimer{playerid} = 255;
	ResetRacePlayer(playerid);
	player_InterfaceSave{playerid} = 0;
	player_InvSave{playerid} = 0;
	for(new i; i < sizeof global_Quest; i++)
	{
		if(!i) player_QuestSave{playerid} = 0;
		player_Quest[playerid][qProgress][i] = 0;
		player_Quest[playerid][qStatus][i] = 0;
	}
	if(GetTimerID_PlayerNPC[playerid] != -1) KillTimer(GetTimerID_PlayerNPC[playerid]);
	GetTimerID_PlayerNPC[playerid] = -1;
	IsNPCEnterVehicle[playerid] = false;
	NameTextNPC[playerid] = Text3D:-1;
	ChatTextNPC[playerid] = Text3D:-1;
	IsNPCAttack[playerid] = -1;
	PlayerLoadPassport[playerid] = false;
	IsPlayerLoadPassport[playerid] = false;
	PItreasure[playerid][tTD] = false;
	PItreasure[playerid][tID] = -1;
	WeaponTDStatus[playerid] = false;
	WeaponGetItemCount{playerid} = 0;
	gps_position[playerid][0] = 0.0, gps_position[playerid][1] = 0.0, gps_position[playerid][2] = 0.0;
	GetPlayerLastDamage[playerid] = INVALID_PLAYER_ID;
	if(pTemp[playerid][ReportID] != -1) 
	{
		pTemp[playerid][ReportID] = -1;
	}
	GetPlayerUpdateCard[playerid]	= false;
	UseStripe[playerid] 			= false;
	healthsharp{playerid}			= 0;
	PI[playerid][pAdmin]			= 0;
	PI[playerid][pForumID]			= -1;
	FamilyAutoResponse[playerid] 	= 0;
	PI[playerid][pPhoneBackground]	= 0;
	FamilyAutoUID[playerid]		 	= -1;
	FamilyAutoSpawn[playerid] 		= false;
	IsPlayerPlayMP[playerid] 		= false;
	PI[playerid][pGuardMode] 		= false;
	PlayerUsedCharity[playerid] 	= false;
    LarecOpen[playerid] 			= false;
	IsPlayerZoneTime{playerid} 		= 0;
	IsPlayerZone[playerid] 			= false;
	PlayerGangZoneID[playerid] 		= -1;
    for(new pInfo: i; i < pInfo;i++) PI[playerid][i]=0;
    for(new _temp_: i; i < _temp_;i++) pTemp[playerid][i]=0;
	Second_Hand_Clother_Select_Time[playerid]   = 0;
	ContainerTakeOpen[playerid] = false;
	ReferalsInviteTD[playerid] = false;
	RepairVehicleStatus[playerid] = false;
	for(new i; i < 4; i++) RepairVehicleActor[playerid][i] = -1;
	BalloonObject[playerid] 					= -1;
    BalloonVehicle[playerid]                    = INVALID_VEHICLE_ID;
    BalloonTimer[playerid] = -1;
	Item_SelectID[playerid]						= 0;
	Item_Select[playerid]						= 0;
	Second_Hand_Clother_Select[playerid]        = -1;
    PI[playerid][pID] 							=
	PI[playerid][pHouseMain] 					=
	PI[playerid][pBuildType] 					=
	PI[playerid][pType] 						=
	PI[playerid][pScutes] 						=
	PI[playerid][pZall] 						=
    pTemp[playerid][pArendaCar] 				=
 	pTemp[playerid][pSellCar] 					=
	pTemp[playerid][NumReports]					=
	SelectSlotEdit[playerid]                    = -1;
	ObjectCarSelect[playerid]                   = -1;
	Invent_CraftColorBoxCreated[playerid]   = false;
	CraftOpened[playerid] = false;
	CraftColorOpened[playerid] = false;
	CraftAmount[playerid] = 1;
	CraftSelectColor[playerid] = 0;
	CraftTabSelect[playerid] = 1;
	CraftItemSelect[playerid] = 0;
	CraftPageSelect[playerid] = 1;
	CraftWriteSlot[playerid][0] = 0;
	CraftWriteSlot[playerid][1] = 0;
	UseTurbo[playerid] = false;
    PAI[playerid][open_td]						= false;
    eatopen[playerid]                           = false;
    IsPlayerModeEditor[playerid]                     = false;
    debuggga[playerid]                          = false;
    MeriaOpen[playerid] 						= false;
    FamMenu1[playerid] 							= false;
    FamMenu2[playerid] 							= false;
    FamMenu3[playerid] 							= false;
	FamZones[playerid]							= false;
    RecInfo[playerid][rOpen]                    = false;
    ShopOpen[playerid] 						= false;
	AcceptGoogle[playerid] 						= false;
	pTemp[playerid][SPECTPLAYER] 				= false;
	NeedDell{playerid} 							= false;
	AcceptFam{playerid} 						= false;
	InNZone{playerid} 							= false;
	NumMusic[playerid] 							= false;
	bumboxobject[playerid]						= false;
 	BoomUse[playerid] 							= false;
	Music[playerid] 							= false;
	bumboxopen{playerid} 						= false;
	Proviziya{playerid} 						= false;
	animan{playerid} 							= false;
	selfi{playerid} 							= false;
	donateopen{playerid} 						= false;
	EnterCasino{playerid} 						= false;
	ShowMap[playerid] 							= false;
	Controllable{playerid} 						= false;
	TeamDuty{playerid}                          = false;
	ADuty{playerid}                             = false;
	Cuffed[playerid]                        	= false;
	PlayerLie[playerid]                         = false;
	RouletteOpen{playerid} 						= false;
	InventStatus{playerid} 						= false;
	IsPlayerInvSecurity[playerid]				= false;
	IsPlayerOpenInvSecurity[playerid]			= false;
	InventWallet[playerid]						= false;
	MenuStatus{playerid}						= false;
	LogoStatus{playerid} 						= false;
 	KillList[playerid]							= false;
//	Predlog[playerid]							= false;
    TradeSend{playerid}                         = false;
    TradeOpen{playerid}                         = false;
	InvCarOpen[playerid]						= false;
	phone_2[playerid]                           = false;
    PI[playerid][pFamilyMember]						                = -1;
    dialogforplayer[playerid]                   = true;
	TradeLock{playerid}							= 0;
	TradeTimeCD[playerid]						= 0;
	TradeTime[playerid][0] 						= 0;
	TradeTime[playerid][1] 						= 10;
	PlayerTimerID[playerid]						= 0;
    OBJECT_RAKE[playerid] 						= 0;
    OBJECT_SLEGAN[playerid] 					= false;
	ShaxtaTimer{playerid}						= false;
    cardop[playerid] 							= 0;
	CanUse{playerid} 							= 0;
	Vnedren[playerid] 							= 0;
    TimetoReturn[playerid] 						= 0;
	PlayerAFKTime[playerid]                     = 0;
	Getemer[playerid] 							= 0;
	deal[playerid] 								= 0;
	gpss{playerid} 								= false;
	ZapretOrel[playerid] 						= 0;
	OrelMoney[playerid] 						= 0;
    cuffer[playerid] 							= 0;
    EngineStalled[playerid] 					= 0;
    Carskill[playerid] 							= 0;
    
    notneedm[playerid] 							= 0;
    caoffer[playerid] 							= 0;
    //pAntiCheatSettingsPage{playerid} 			= 0;
    InJobs[playerid] 							= 0;
    //kostiKos[playerid] 							= 0;
    engines[playerid] 							= 0;
	Healttime[playerid] 						= 0;
	TimeMessage[playerid] 						= 0;
	vipob[playerid] 							= 0;
	sellcarto[playerid] 						= 0;
	idaofcar[playerid] 							= 0;
	TimeOfCuff[playerid]                        = 0;
	GotoInfo[playerid][gtState]                 = 0;
	UseDrugsTime[playerid]                      = 0;
	ClickedState[playerid]                      = 0;
	BizPrice[playerid]                          = 0;
	FullnessTick[playerid]                      = 0;
	CuffedTime[playerid] 						= 0;
	Upgrade_Open[playerid]  	= false;
	Upgrade_Start[playerid] 	= false;
	if(Upgrade_TimerID[playerid] != -1)
	{
		KillTimer(Upgrade_TimerID[playerid]);
		Upgrade_TimerID[playerid] = -1;
	}
	Upgrade_ProgressWhite[playerid] = 0.0;
	Upgrade_GetSlotAcs{playerid} = 255;
	Upgrade_GetSlotStone{playerid} = 255;
	for(new i; i < 156; i++) //fix td
	{
		GlobalTDPlayer[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(!i) Upgrade_ColorTD[playerid] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 30)
		{
			Invent_Menu_PageEnchant[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			Invent_Menu_Page[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			Invent_Menu_PageAmount[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 36)
		{
			InventSlot[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			InventSlotAmount[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			InventEnchant[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 8)
		{
			InventAks[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			InventAksEnchant[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			InventAksColor[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 52) Invent[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 14) InventMenu[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 11) InvOwnableCarText[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 56) InvOwnableCar[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 64) InvPlayerSecurity[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 7) 
		{
			Upgrade_ProgreesTD[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			others[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			Item_Menu_Shop[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 28)
		{
			Upgrade_InventTD[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 2) 
		{
			td_damage[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			InventButton[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(i < 25) vkcoin_menu[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 3) ispug_PTD[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 45) Donate_Player[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 3) Donate_Text[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 21) Invent_Trade[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
		if(i < 18) eatfree2[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i; i < MAX_SLOT_INV; i++)
	{
		if(i < 10)
		{
			InvPlayerRentUID[playerid][i] = -1;
			InvPlayerRentInvSlot[playerid][i] = -1;
			InvPlayerRentTimeOut[playerid][i] = -1;
		}
		if(i < 39) PI[playerid][pDamageBoost][i] = 0.0;
		if(i < sizeof player_BonusInfo) 
		{
			if(!i) player_BonusMinute[playerid] = 0, global_BonusMinute[playerid] = 0;
			player_BonusStatus[playerid][i] = false;
		}
		PI[playerid][pInvItem][i] = 0;
		PI[playerid][pInvItemAmount][i] = 0;
		PI[playerid][pInvItemLock][i] = false;
		PI[playerid][pInvItemUID][i] = 0;
		InvPlayerParams[0][playerid][i] = 0;
		InvPlayerParams[1][playerid][i] = 0;
		InvPlayerColor[playerid][i] = 0;
		if(i < 8)
		{
			PlayerFCapture[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
			PI[playerid][pAcsCellLock][i] = 0;
			InvAksParams[0][playerid][i] = 0;
			InvAksColor[playerid][i] = 0;
			InvAksRentUID[playerid][i] = -1, //кому передали
			InvAksRentTimeOut[playerid][i] = -1;
		}
		if(i < 10)
		{
			PI[playerid][pTradeItem][i] = 0;
			PI[playerid][pTradeItemAmount][i] = 0;
            InvTradeParams[0][playerid][i] = 0;
			InvTradeParams[1][playerid][i] = 0;
			InvTradeColor[playerid][i] = 0;
			InvTradeUID[playerid][i] = 0;
			PI[playerid][pInvItemLockTrade][i] = -1;
		}
	}
	InJob[playerid] 							= 0;
	RegisterState[playerid] 					= 0;
    jlock[playerid] 							= 0;
    InventPage[playerid] 						= 0;
    MenuPage[playerid] 							= 0;
	PassInfo[playerid][psDateBirth][0] 			= 0;
 	PassInfo[playerid][psDateBirth][1] 			= 0;
 	PassInfo[playerid][psDateBirth][2] 			= 0;
 	PassInfo[playerid][psDate][0] 				= 0;
 	PassInfo[playerid][psDate][1] 				= 0;
 	PassInfo[playerid][psDate][2] 				= 0;
 	TaxiTarif[playerid] 						= 0;
	TaxiPrice[playerid] 						= 0;
	TaxiDistance[playerid] 						= 0;
	Ring[playerid]                    			= 0;
	MLeader[playerid] 							= 0;
	SGunMats[playerid] 							= 0;
	SGunID[playerid] 							= 0;
	SGunPrice[playerid] 						= 0;
	SGunAmmo[playerid] 							= 0;
	CarPrice[playerid] 							= 0;
	PI[playerid][pTir]                          = 0;
	RecInfo[playerid][VirtualWorld]             = 0;
	RecInfo[playerid][TimeWork]             	= 0;
	RecInfo[playerid][menuopen]                 = 0;
	RecInfo[playerid][Interior]                 = 0;
	RollUpdatePage[playerid] 					= 0;
	RollTimeUpdate[playerid] 					= 0;
	PI[playerid][pTirUp]                        = 0;
	CasinoPlayerID[playerid] 					= -1;
	CasinoPlayerRate[playerid]					= -1;
	IsPlayerCasinoPlay{playerid}				= false;
	IsPlayerCasinoPlayBTC{playerid}				= false;
	TransferPlayer[playerid] 					=
	GetJob[playerid] 							=
	TradeMoney[playerid] 						= 0;
	PAI[playerid][select_td]                    = 0;
	PAI[playerid][number_td]                    = -1;
	PAI[playerid][secondupdate]                 = 0;
	for(new i; i < 21; i++)
	{
	    if(i < 6) PI[playerid][pSlotGun][i] = 0;
		if(i < 8) 
		{
			AksSlot[playerid][i] = 0, InvAksParams[1][playerid][i] = 0, AksSlotUID[playerid][i] = 0;
			player_InvAks_CustomPosition[playerid][i] = false;
		}
	}
	UseModCar[playerid] = false;
    SelectedRoulette[playerid] 					= -1;
	OrelName[playerid] 							= INVALID_PLAYER_ID;
	pmID[playerid]								= -1;
	TrashID[playerid]							= -1;
	HouseID[playerid]							= -1;
	TradeID[playerid] 							= -1;
	Donate_Select[playerid] 					= -1;
	Donate_Type[playerid]						= -1;
	InventClick{playerid} 						= 255;
    cartrade[playerid] 							= -1;
	dBiz[playerid] 								= -1;
	PlayerJailCP[playerid]                      = -1;
	PlayerBed[playerid]                         = -1;
	HouseEntered[playerid] 						= -1;
	GarageEntered[playerid] 					= -1;
	ParkingEntered[playerid] 					= -1;
	BizEntered[playerid] 						= -1;
	BuyGuns[playerid]                           = -1;
	BuyInt[playerid] 							= -1;
	Clother[playerid] 							= -1;
	Buyitem[playerid]                           = -1;
	PlayerSeat[playerid] 						= -1;
	PI[playerid][plveh]                         = -1;
	InfoHouse[playerid] 						= -1;
	InfoBiz[playerid]                           = -1;
	PanelPlayerID[playerid] 					= -1;
 	MedCardInfo[playerid][mcState] 				= -1;
	//pAntiCheatSettingsEditCodeId[playerid] 		= -1;
//    for(new i; i < sizeof(AC_CODE); i++) pAntiCheatLastCodeTriggerTime[playerid][i] = -1;
    for(new i; i < 6; i ++) InventMenuButton[playerid][i] = -1;
	RecInfo[playerid][rPlayer]                  = INVALID_PLAYER_ID;
	MLPlayer[playerid] 							= INVALID_PLAYER_ID;
	SGunOffer[playerid] 						= INVALID_PLAYER_ID;
	CarOffer[playerid] 							= INVALID_PLAYER_ID;
	InviteOffer[playerid] 						= INVALID_PLAYER_ID;
	HouseOffer[playerid] 						= INVALID_PLAYER_ID;
	BizOffer[playerid] 							= INVALID_PLAYER_ID;
	RHouseOffer[playerid]						= INVALID_PLAYER_ID;
	ArrestID[playerid]                        	= INVALID_PLAYER_ID;
	TazerPlayer[playerid]                       = INVALID_PLAYER_ID;
	PlayerOfCuff[playerid]                      = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtID]                    = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID] 					= INVALID_PLAYER_ID;
	Recuffer[playerid]                          = INVALID_PLAYER_ID;
	//KostiName[playerid] 						= INVALID_PLAYER_ID;
	PlayerCar[playerid] 						= INVALID_PLAYER_ID;
	pTemp[playerid][pcarid] 					= INVALID_PLAYER_ID;
	ArendKey[playerid]                          = INVALID_VEHICLE_ID;

	GotoInfo[playerid][gtX]                     = 0.0;
	GotoInfo[playerid][gtY]                     = 0.0;
	GotoInfo[playerid][gtZ]                     = 0.0;
	GotoInfo[playerid][gtTPX]                   = 0.0;
	GotoInfo[playerid][gtTPY]                   = 0.0;
	GotoInfo[playerid][gtTPZ]                   = 0.0;
	GoogleCodeTemp[playerid]					= "None";
 	Fullness{playerid}                     		= 100;
	PI[playerid][pShowName]                 	= true;
	PI[playerid][pVIP][0] 						= 0;
	PI[playerid][pVIP][1] 						= 0;
	gPlayerLogTries{playerid} 					= 3;
	gPlayerGoogleTries[playerid] 				= 3;
    if(Iter_Contains(Familys, playerid) == 1) Iter_Remove(Familys, playerid);
	if(Iter_Contains(Razdaha, playerid) == 1) Iter_Remove(Razdaha, playerid);
	if(Iter_Contains(WorkNPC, playerid) == 1) Iter_Remove(WorkNPC, playerid);
	if(Iter_Contains(IsPlayerBot, playerid) == 1) Iter_Remove(IsPlayerBot, playerid);
    if(id_invalid) 
	{
		SetString(PlayerName[playerid], "The_State");
		playerid = INVALID_PLAYER_ID;
	}
	return 1;
}
/*stock SearchSystem(playerid,string[])
{
	static sendmes[100+50*2-25-2];
	if(playerid != INVALID_PLAYER_ID) sendmes[0] = EOS, f(sendmes,sizeof(sendmes),"[SEARCH-SCRIPT] %s[playerid: %i | ID: %i][IP: %s] %s",PN(playerid), playerid, PI[playerid][pID], PlayerIp[playerid],string);
	else sendmes[0] = EOS, f(sendmes,sizeof(sendmes),"[SEARCH-SCRIPT] %s",string);
    SearchLog("default",sendmes);
}
stock SearchLog(namelog[],string[])
{
    static text[125],log[25];
    text[0] = EOS, log[0] = EOS;
	new computation1, computation2, computation3,File:LogFile,i;
    gettime(computation1, computation2, computation3);
    f(text, sizeof(text), "[%02d:%02d:%02d]%s\r\n",computation1,computation2,computation3,string);
    getdate(computation1, computation2, computation3);
    f(log,sizeof(log),"logs/%s/[%02d][%02d]%s.txt",namelog,computation3,computation2,namelog);
    LogFile = fopen(log, io_append);
    while(text[i] != EOS)
    {
        fputchar(LogFile, text[i], false);
        i++;
    }
    fclose(LogFile);
}*/
stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}
stock Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y)
{
    new Float:ix, Float:iy, Float:iz, Float:a;
	GetVehicleZAngle(vehicleid, a);
	GetVehiclePos(vehicleid, ix, iy, iz);
	return GetAngleToPoint(ix, iy, a, x, y);
}
stock CreateTeamVehicle(org,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime=RES_CAR_TIME)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime),
		FSOAV;
	TwinTurbo[carid][Engine] = 
	TwinTurbo[carid][cStatus] = true;
	if(model == 497)
	{
		FSOAV = CreateDynamicObject(19848, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 0
		AttachDynamicObjectToVehicle(FSOAV, carid, 1.181000, 0.710000, -0.940000, 0.000000, 0.000000, 180.000000);
	}
	else if(model == 490 && org == TEAM_FBI)
	{
		FSOAV = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 1
		SetDynamicObjectMaterialText(FSOAV, 0, "F.B.I", 130, "Arial", 50, 1, 0xDCFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(FSOAV, carid, -1.201000, 1.638000, 0.170000, 0.000000, 0.000000, 270.000000);

		FSOAV = CreateDynamicObject(19620, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 0
		AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, 0.540000, 1.140000, 0.000000, 0.000000, 0.000000);

		FSOAV = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 1
		SetDynamicObjectMaterialText(FSOAV, 0, "F.B.I", 130, "Arial", 50, 1, 0xDCFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(FSOAV, carid, 1.201000, 1.611000, 0.170000, 0.000000, 0.000000, 90.000000);
	}
	else if(model == 415 && org == TEAM_FBI)
	{
		FSOAV = CreateDynamicObject(19620, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 0
		AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, -0.550000, 0.630000, 0.000000, 0.000000, 0.000000);
	}
	else if(org == TEAM_ARMY || org == TEAM_ARMYSF || org == TEAM_ARMYLV)
	{
		if(model == 470)
		{
			if(random(100) >= 60)
			{
				FSOAV = CreateDynamicObject(2040, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 0
				AttachDynamicObjectToVehicle(FSOAV, carid, -0.740000, -0.460000, 1.130000, 0.000000, 0.000000, -8.199000);

				FSOAV = CreateDynamicObject(19846, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 1
				SetDynamicObjectMaterial(FSOAV, 0, 1560, "7_11_door", "cj_sheetmetal2", 0);
				AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, 0.023000, 1.562000, -76.299004, 0.000000, 0.000000);

				FSOAV = CreateDynamicObject(19844, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 1
				SetDynamicObjectMaterial(FSOAV, 0, 10765, "airportgnd_sfse", "black64", 0);
				AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, -0.460000, 1.000000, 0.000000, 0.000000, 0.000000);

				FSOAV = CreateDynamicObject(2724, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 2
				SetDynamicObjectMaterial(FSOAV, 1, 16644, "a51_detailstuff", "steel256128", 0xFFFFFFFF);
				SetDynamicObjectMaterial(FSOAV, 0, 1714, "cj_office", "est_chair", 0xFF3D3D3D);
				AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, -1.000000, 1.560000, 0.000000, 0.000000, 180.000000);

				FSOAV = CreateDynamicObject(2189, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 2
				SetDynamicObjectMaterial(FSOAV, 1, 16644, "a51_detailstuff", "steel256128", 0xFFFFFFFF);
				SetDynamicObjectMaterial(FSOAV, 0, 915, "airconext", "CJ_plating", 0xFFFFFFFF);
				AttachDynamicObjectToVehicle(FSOAV, carid, 0.000000, -0.490000, 1.050000, 0.000000, 0.000000, 0.000000);

				FSOAV = CreateDynamicObject(1815, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 100.0); // 1
				SetDynamicObjectMaterial(FSOAV, 0, 16644, "a51_detailstuff", "steel256128", 0xFFFFFFFF);
				AttachDynamicObjectToVehicle(FSOAV, carid, 0.530000, -0.950000, 1.510000, 0.000000, 180.000000, 0.000000);
			}
		}
		else if(model == 433) CreateDynamic3DTextLabel(!"Загружено: 0/100%%\n\n{cccccc}Чтобы загрузить/разгрузить\nнажмите N сзади грузовика", 0xFFFFFFFF, 1000.0000, 1000.0000, 1000.0000, 15.0000, INVALID_PLAYER_ID, carid, 0, 0, 0, -1);
	}
	vTemp[carid][vTeam] = org;
	vTemp[carid][vRank] = rank;
	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime);
	vTemp[carid][vJob] = job;
	return carid;
}
#include modules/TEXTDRAWS/speed/other
stock SetBootStatus(carid,status) { static engine,lights,alarm,doors,bonnet,boot,objective; GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective); SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,status,objective); return 1; }
stock SetAlarmStatus(carid,status) { static engine,lights,alarm,doors,bonnet,boot,objective; GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective); SetVehicleParamsEx(carid,engine,lights,status,doors,bonnet,boot,objective); return 1; }
stock GetEngineStatus(carid)
{
	if(vTemp[carid][vEngine] != false && Iter_Contains(EngineON_Vehicle, carid) != 1) 
	{
		Iter_Add(EngineON_Vehicle, carid);
		return true;
	}
	if(vTemp[carid][vEngine] != false && Iter_Contains(EngineON_Vehicle, carid) != 0) return true;
	return false;
}
stock GetLightsStatus(carid) return vTemp[carid][vLights];

stock SaveServerConfig()
{
    if !fexist("cfg_server.ini") *then
		return print("file 'cfg_server.ini' not found");

    new GetFile = ini_openFile("cfg_server.ini");
	ini_setInteger(GetFile,"server_id",NumberServID);
	ini_closeFile(GetFile);

    new FileID = ini_openFile("cfg_server.ini");
    ini_setString(FileID,"server_name",ServerCFG[server_name]);
    ini_setString(FileID,"server_logo",ServerCFG[server_logo]);
    ini_setString(FileID,"full_server_name",Mode[CFG_Name]);
    ini_setString(FileID,"server_number",ServerCFG[server_number]);
    ini_setString(FileID,"server_mode",ServerCFG[server_mode]);
    ini_setString(FileID,"server_mail",ServerCFG[server_mail]);
    ini_setString(FileID,"server_group_vk",ServerCFG[server_group_vk]);
    ini_setString(FileID,"server_forum",ServerCFG[server_forum]);
    ini_setString(FileID,"server_site",ServerCFG[server_site]);
    ini_setString(FileID,"server_discord",ServerCFG[server_discord]);
    ini_setString(FileID,"server_reklama",ServerCFG[server_reklama]);
    ini_closeFile(FileID);
    return 1;
}

stock SetModOptions()
{
    if(Mode[CFG_PASS_SERVER] != 0)
	{
	    new rconpassstr[30];
		f(rconpassstr, sizeof(rconpassstr), "password %d", random(10000));
	 	SendRconCommand(rconpassstr);
	 	
		SetString(CodeCheckDostup, rconpassstr);
		
		mysql_tqueryf(mysql, "UPDATE `config` SET `password` = '%s', `TexRestart` = '1' LIMIT 1;", CodeCheckDostup);

	 	SendRconCommandf("password %s", CodeCheckDostup);
 	}
 	else
 	{
 	    foreach_player(i)
		{
			if(IsPlayerLogged[i] != false) continue;
			Autorisation(i);
		}
		SetString(CodeCheckDostup, "0");
			
		mysql_tqueryf(mysql, "UPDATE `config` SET `password` = '%s', `TexRestart` = '0' LIMIT 1;", CodeCheckDostup);
			
	 	SendRconCommand("password 0");
 	}
	SendRconCommandf("hostname %s", Mode[CFG_Name]);//| 999k AZ + 99kk + /bonus < ADM");
	SendRconCommandf("weburl %s", ServerCFG[server_site]);
	SendRconCommand("mapname San Andreas");
	return 1;
}

stock LoadServerConfig()
{
    if !fexist("cfg_server.ini") *then
		return print("file 'cfg_server.ini' not found");

	new GetFile = ini_openFile("cfg_server.ini");
	ini_getInteger(GetFile,"server_id",NumberServID);
	ini_closeFile(GetFile);

    new FileID = ini_openFile("cfg_server.ini");
    ini_getString(FileID,"server_name",ServerCFG[server_name]);
    ini_getString(FileID,"server_logo",ServerCFG[server_logo]);
    ini_getString(FileID,"full_server_name",Mode[CFG_Name]);
    ini_getString(FileID,"server_number",ServerCFG[server_number]);
    ini_getString(FileID,"server_mode",ServerCFG[server_mode]);
    ini_getString(FileID,"server_mail",ServerCFG[server_mail]);
    ini_getString(FileID,"server_group_vk",ServerCFG[server_group_vk]);
    ini_getString(FileID,"server_forum",ServerCFG[server_forum]);
    ini_getString(FileID,"server_site",ServerCFG[server_site]);
    ini_getString(FileID,"server_discord",ServerCFG[server_discord]);
    ini_getString(FileID,"server_reklama",ServerCFG[server_reklama]);

    ini_closeFile(FileID);
    return 1;
}
stock LoadMySQL()
{
    new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, false);
	
	#if MySQLType

    if !fexist("mysql_settings.ini") *then
		return print("file 'mysql_settings.ini' not found");

    new FileID = ini_openFile("mysql_settings.ini");
    ini_getString(FileID,"host",ServerCFG[DB_HOST]);
    ini_getString(FileID,"username",ServerCFG[DB_USERNAME]);
    ini_getString(FileID,"database",ServerCFG[DB_DATABASE]);
    ini_getString(FileID,"password",ServerCFG[DB_PASSWORD]);
    ini_closeFile(FileID);
    
    mysql = mysql_connect(ServerCFG[DB_HOST], ServerCFG[DB_USERNAME], ServerCFG[DB_PASSWORD], ServerCFG[DB_DATABASE], option_id);

    #else

	mysql = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_BASE, option_id);

 	#endif
	return 1;
}
stock CountVehicles()
{
	new carid = AddStaticVehicleEx(400, -100, -100, -100, 0, 0, 0, 0);
	DestroyVehicleEx(carid);
	return carid;
}
stock bool:floatcomp(Float:X1, Float:X2, Float:Delta = 0.05)
{
    return (floatabs(X1-X2) < Delta) ? true : false;
}
stock IsAtGang(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_GROOVE,TEAM_VAGOS,TEAM_BALLAS,TEAM_CORONOS,TEAM_RIFA,TEAM_WOLFS: return team;
	    default: return 0;
	}
	return 0;
}
stock IsAtMafia(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RM,TEAM_YAKUZA,TEAM_LCN,TEAM_BIKERS: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsAtFrakcia(playerid, onlygos = 0)
{
	new team = GetTeamID(playerid);
	if(onlygos)
	{
	    switch(team)
		{
		    case TEAM_LSPD,TEAM_LVPD,TEAM_RCPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_MEDICLS,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_BANK,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMYSF: return 1;
		    default: return 0;
		}
	}
	else
	{
		switch(team)
		{
		    case TEAM_LSPD,TEAM_LVPD,TEAM_RCPD,TEAM_FBI,TEAM_SFPD,TEAM_MEDICLS,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_LICENSERS,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF: return 1;
		    default: return 0;
		}
	}
	return 0;
}
stock GetPlayerFAngle(playerid, &Float:angle)
{
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}
stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
	    {
	        a += 90.0;
	        x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
	    }
	    case 3:
		{
		    a -= 90.0;
      		x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}
stock ShiftCords(style, &Float:x, &Float:y, Float:a, Float:distance)
{
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}
stock IsGangToZone(gangid, zone, Float:kolvo = 50.0)
{
	new Count, InZone, Float:All;
 	foreach_player(i)
	{
	    if(GetTeamID(i) == gangid)
	    {
	        Count ++;
	        if(IsPlayerToKvadrat(i, GZInfo[zone][gzMin_X], GZInfo[zone][gzMin_Y], GZInfo[zone][gzMax_X], GZInfo[zone][gzMax_Y])) InZone ++;
		}
	}
	if(!Count || !InZone) return 0;
	All = 100.0 * float(InZone) / Count;
	return (All >= kolvo);
}
stock GetPlayerGangZone(playerid, j=-1)
{
	for(new i=1; i < GANGZONES; i++)
	{
	    if(IsPlayerToKvadrat(playerid, GZInfo[i][gzMin_X], GZInfo[i][gzMin_Y], GZInfo[i][gzMax_X], GZInfo[i][gzMax_Y], j)) return i;
	}
	return 0;
}
stock IsTeamConnected(gangid)
{
	new count;
    foreach_player(i)
	{
        if(GetTeamID(i) == gangid) count++;
	}
	return count;
}
stock SPD(playerid, dialogid, style, const caption[], const info[], const button1[], const button2[])
{
	static dcaption[100];
	dcaption = "{ffffff}";
	strcat(dcaption, caption);
	ShowPlayerDialog(playerid, dialogid, style, dcaption, info, button1, button2);
	//SetFocusBrowser(playerid, svelte, true);
	return 1;
}
stock ResetDynamicCPs(playerid)
{
	TogglePlayerDynamicCP(playerid, Binko_CP, true);
	TogglePlayerDynamicCP(playerid, ScrapCP, false);
	for(new i; i < sizeof(PrisonPos); i ++) 
	{
		if(i < 4) TogglePlayerDynamicCP(playerid, BankCP[i], false);
		TogglePlayerDynamicCP(playerid, JailCP[i], false);
	}
	return 1;
}
stock DisableAllRaceCPs(playerid)
{
    for(new i = 1;i <= CountDynamicRaceCPs();i ++) TogglePlayerDynamicRaceCP(playerid, i, false);
	return 1;
}
stock Autorisation(playerid)
{
    SetPlayerVirtualWorldEx(playerid, 1228);
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		if(PI[playerid][pID] != -1)
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"Auth\"]');");
			ExecuteEventf(13, playerid, svelte, "window.executeEvent('event.auth.initializeServerInformation',\
			 '[{ \"id\": 1,\
			  \"title\": \"%s\",\
			   \"flag\": \"https://pc.az-ins.com/resource/image/project_icons/1.png\",\
			    \"online\": %i,\
				 \"status\": \"good\",\
				  \"username\": \"%s\",\
				   \"password\": \"\",\
				    \"remember\": false }]');", ServerCFG[server_logo], Iter_Count(Player), PN(playerid));
		}
		else
		{
			RegisterState[playerid] = 1;
			ShowRegisterDialog(playerid,RegisterState[playerid]);
			
			//ExecuteEvent(playerid, svelte, "window.executeEvent('event.auth.initializeSignupPage', '[ null ]');");
		}
	}
	else if(PI[playerid][pID] != -1) ShowLoginDialog(playerid);
	else
	{
	    RegisterState[playerid] = 1;
	   	ShowRegisterDialog(playerid,RegisterState[playerid]);
	}
	return 1;
}
enum infoBusinesses
{
	BName[20+25+10],
	BCost,
    BState,
    BType,
    BIcon,
}
static const InfoBusinesses[][infoBusinesses] =
{
	{"Амуниция/Тир",			20000000,0,0,6},
	{"Бар",						450000000,1,0,49},
	{"Магазин 24/7",			90000000,2,0,17},
	{"Магазин одежды",			85000000,3,0,45},
	{"Предприятие",				150000000,4,0,-1},
	{"Автомастерская",				250000000,5,0,27},
	{"АЗС/Магазин механики",	150000000,6,0,-1},
	{"Закусочная",				60000000,7,0,14},
	{"Аренда транспорта",		90000000,8,1,-1},
	{"Магазин аксессуаров",		230000000,9,0,56},
	{"Информационный центр",	19000000,10,0,-1},
	{"Ферма",					160000000,11,1,56},
	{"Концертный зал",			19000000,12,1,-1},
	{"Шахта",					19000000,13,1,-1},
	{"Магазин тюнинга",			25000000,14,0,56},
	{"Аукцион контейнеров",		1800000000,15,1,-1},//check
	{"Нефтевышка",				60000000,16,0,-1},
	{"Сельскохозяйственный магазин", 45000000,17,0,-1},
	{"Школа танцев",			20000000,18,0,36},
	{"Ларёк с уличной едой",	40000000,19,2,-1},
	{"Автосалон эконом",		1800000000,20,0,23},
	{"Автосалон люкс",			1800000000,21,0,23},
	{"Автосалон средний",		1800000000,22,0,23},
	{"Автосалон Luxe",			1800000000,23,0,23},
	{"Магазин видеокарт",		300000000,24,0,42},
	{"Спортивная площадка",		300000000,25,0,54},
	{"Мастерская одежды",		300000000,26,0,46},
	{"Центральный рынок",		100000000,27,1,-1},
	{"Кинотеатр AZMAX",			300000000,28,0,-1},
	{"Авто Тест-Драйв",			300000000,29,1,-1},
	{"Секонд-хенд",				300000000,30,0,12},
	{"Букмекерская компания",	300000000,31,0,-1},
	{"Отель",					300000000,32,0,35},
	{"Автобазар",				150000000,33,0,-1},
	{"Казино (4 Дракона)",      1800000000,34,1,-1},
	{"Конные ставки",      		50000000,35,0,27},
	{"Автосервис",      		20000000,36,0,27},
	{"Склад дальнобойщиков",      100000000,37,0,56},
	{"Тюнинг салон", 140000000,38,0,27},
	{"Ломбард", 110000000,39,0,0}
};
stock UpdateBiz(bizid, set = 0, add = 0)
{
	static mafiastr[14];
    mafiastr[0] = EOS;
	switch(BizInfo[bizid][bKrasher])
	{
	    case TEAM_RM: mafiastr = "Русская Мафия";
		case TEAM_YAKUZA: mafiastr = "Якудза";
		case TEAM_LCN: mafiastr = "ЛКН";
		case TEAM_BIKERS: mafiastr = "Байкеры";
		default: mafiastr = "none";
	}
	BizInfo[bizid][bExit_X] = 0.0;
	BizInfo[bizid][bExit_Y] = 0.0;
	BizInfo[bizid][bExit_Z] = 0.0;
    BizInfo[bizid][bInt] = 0;
	new bstate = BizInfo[bizid][bState];
	BizInfo[bizid][bCost] = InfoBusinesses[bstate][BCost];
	switch(bstate)
	{
	    case 0: BizInfo[bizid][bInt] = 1,BizInfo[bizid][bExit_X] = 285.4,BizInfo[bizid][bExit_Y] = -41.228,BizInfo[bizid][bExit_Z] = 1001.52,BizInfo[bizid][bInt] = 1;
		case 1: BizInfo[bizid][bInt] = 17, BizInfo[bizid][bExit_X] = 493.32, BizInfo[bizid][bExit_Y] = -24.8194, BizInfo[bizid][bExit_Z] = 1000.68;
		case 2:	BizInfo[bizid][bExit_X] = 2586.03, BizInfo[bizid][bExit_Y] = 1437.58, BizInfo[bizid][bExit_Z] = 1800.97, BizInfo[bizid][bInt] = 16;
		case 3: BizInfo[bizid][bExit_X] = 207.011, BizInfo[bizid][bExit_Y] = -140.115, BizInfo[bizid][bExit_Z] = 1003.51, BizInfo[bizid][bInt] = 3;
		case 6: BizInfo[bizid][bExit_X] = 671.706, BizInfo[bizid][bExit_Y] = -579.11, BizInfo[bizid][bExit_Z] = 1700.74, BizInfo[bizid][bInt] = 3;
		case 7: BizInfo[bizid][bExit_X] = 1085.87, BizInfo[bizid][bExit_Y] = 1005.05, BizInfo[bizid][bExit_Z] = 1601.0, BizInfo[bizid][bInt] = 9;
		case 9:	BizInfo[bizid][bExit_X] = -401.596, BizInfo[bizid][bExit_Y] = 2227.4, BizInfo[bizid][bExit_Z] = 1801.09, BizInfo[bizid][bInt] = 3;
		case 10: BizInfo[bizid][bExit_X] = 368.666, BizInfo[bizid][bExit_Y] = 162.288, BizInfo[bizid][bExit_Z] = 1025.79, BizInfo[bizid][bInt] = 3;
		case 14: BizInfo[bizid][bExit_X] = 1086.78, BizInfo[bizid][bExit_Y] = 1521.4, BizInfo[bizid][bExit_Z] = 1716.0868, BizInfo[bizid][bInt] = 1;
		case 18: 
		{
			BizInfo[bizid][bExit_X] = 1762.2700, BizInfo[bizid][bExit_Y] = -316.8030, BizInfo[bizid][bExit_Z] = 1654.5100, BizInfo[bizid][bInt] = 144;
			CreateDynamicActor(5, 1756.8585, -315.0686, 1654.5055, 0.0779, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(65, 1762.2511, -311.4434, 1654.5376, 177.4816, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(291, 1751.3325, -311.4510, 1654.5376, 179.3616, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(19, 1751.2542, -304.3473, 1654.5376, 180.3017, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(69, 1762.1484, -308.1914, 1654.5376, 182.1817, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(19, 1756.7582, -311.4861, 1654.5376, 180.9283, 1, 100.0, bizid+100, 144);
			CreateDynamicActor(52, 1756.7922, -304.4434, 1654.5376, 180.3017, 1, 100.0, bizid+100, 144);
		}
		case 24: BizInfo[bizid][bExit_X] = 1393.5872, BizInfo[bizid][bExit_Y] = -21.8212, BizInfo[bizid][bExit_Z] = 1000.9160,BizInfo[bizid][bInt] = 7;
		case 26: BizInfo[bizid][bExit_X] = 1548.1307, BizInfo[bizid][bExit_Y] = 1645.8788, BizInfo[bizid][bExit_Z] = 10.8203, BizInfo[bizid][bInt] = 155;
		case 30:
		{
			new secondid = FindSecondHandBizID(bizid);
			if(IsValidDynamic3DTextLabel(Second_Hand[secondid][sSaleTextStreet])) DestroyDynamic3DTextLabel(Second_Hand[secondid][sSaleTextStreet]);
			if(IsValidDynamic3DTextLabel(Second_Hand[secondid][sSaleTextRoom])) DestroyDynamic3DTextLabel(Second_Hand[secondid][sSaleTextRoom]);
			Second_Hand[secondid][sSaleTextStreet] = CreateDynamic3DTextLabel(!"Начало распродажи одежды в {00ff00}00:00", 0xFFFFFFFF, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z]+1, 10.0);
			Second_Hand[secondid][sSaleTextRoom] = CreateDynamic3DTextLabel(!"Начало распродажи одежды в {00ff00}00:00", 0xFFFFFFFF, 1529.5388, 1572.8647, 10.9252, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, bizid+100, 30);
			new hour, minute, second;
			gettime(hour, minute, second);
			if(Second_Hand[secondid][sSaleHour] == hour && Second_Hand[secondid][sSaleStatus])
			{
				f(str_1, 100, "Идёт распродажа одежды!\nЗавершиться в {FF0000}%2d:00", Second_Hand[secondid][sSaleHour]+1);
				Second_Hand[secondid][sSaleCount] = 0;
				Second_Hand[secondid][sSaleLastMinute] = minute;
			}
			else if(Second_Hand[secondid][sSaleHour] != hour && Second_Hand[secondid][sSaleStatus]) f(str_1, 100, "Начало распродажи одежды в {00ff00}%2d:00", Second_Hand[secondid][sSaleHour]);
			else f(str_1, 100, "Распродажа одежды уже прошла!");
			UpdateDynamic3DTextLabelText(Second_Hand[secondid][sSaleTextStreet], 0xFFFFFFFF, str_1);
			UpdateDynamic3DTextLabelText(Second_Hand[secondid][sSaleTextRoom], 0xFFFFFFFF, str_1);
			f(str_1, 100, "{73B461}Количество одежды: {FFFFFF}%d ед.", BizInfo[bizid][bProducts]);
			BizInfo[bizid][bExit_X] = 1529.6801,BizInfo[bizid][bExit_Y] = 1562.3700,BizInfo[bizid][bExit_Z] = 10.9252,BizInfo[bizid][bInt] = 30;
		}
		case 38: 
		{
			//bizid+100
			//Create3DTextLabel("Баланс ломбарда: {67DAFF}\n8499 Евро\n0 BTC\n\n\n{cccccc}Чтобы сдать/выкупить предмет\nНажмите ALT", 0xFFFFFFFF, 1531.1866, 1437.1147, 10.9674, 7.0000, 0, 1);
			BizInfo[bizid][bInt] = 82, BizInfo[bizid][bExit_X] = 1525.4100, BizInfo[bizid][bExit_Y] = 1432.1899, BizInfo[bizid][bExit_Z] = 10.9674;
		}
	}
	if(set)
	{
		if(IsValidDynamicPickup(BizCP[bizid])) DestroyDynamicPickupEx(BizCP[bizid]);
		if(IsValidDynamicArea(BizCPSphere[bizid])) DestroyDynamicArea(BizCPSphere[bizid]);
		switch(InfoBusinesses[bstate][BType])
		{
			case 0:
			{
				BizCP[bizid] = CreateDynamicPickup(19132, 1, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z],0);
				BizCPSphere[bizid] = CreateDynamicSphere(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 3.0, 0, 0);
			}
			case 1: BizCP[bizid] = CreateDynamicPickup(1317, 1, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z]-2,0);
			case 2: BizCP[bizid] = CreateDynamicPickup(2663, 1, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z],0);
		}
		if(InfoBusinesses[bstate][BIcon] != -1)
		{
			if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
			BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], InfoBusinesses[bstate][BIcon], 0, -1, -1, -1, 300.0);
		}
		//
		if(IsValidDynamic3DTextLabel(Biz3DText[bizid])) DestroyDynamic3DTextLabel(Biz3DText[bizid]);
		Biz3DText[bizid] = CreateDynamic3DTextLabel(!" Бизнес ", 0x4CD10FF, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y],BizInfo[bizid][bEnter_Z], 20.0);
		if(!IsNoEnterBiz(bizid))
		{
			if(IsValidDynamic3DTextLabel(Biz3DText2[bizid])) DestroyDynamic3DTextLabel(Biz3DText2[bizid]);
			Biz3DText2[bizid] = CreateDynamic3DTextLabel(!"[ Выход ]\nНажмите ALT", 0xAFAFAFFF, BizInfo[bizid][bExit_X], BizInfo[bizid][bExit_Y], BizInfo[bizid][bExit_Z], 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, bizid+100, BizInfo[bizid][bInt]);
			if(IsValidDynamicPickup(BizPick[bizid])) DestroyDynamicPickupEx(BizPick[bizid]);
			BizPick[bizid] = CreateDynamicPickup(19132, 1, BizInfo[bizid][bExit_X], BizInfo[bizid][bExit_Y], BizInfo[bizid][bExit_Z], bizid+100, BizInfo[bizid][bInt]);
		}
	}
    if(GetString(BizInfo[bizid][bOwner], "The State") && !GetString(InfoBusinesses[bstate][BName], "Ларёк с уличной едой")) UpdateDynamic3DTextLabelTextf(Biz3DText[bizid], -1, "{FAAC58}Бизнес продается \n\n{73B461}Тип бизнеса: {FFFFFF}%s\n{73B461}Номер бизнеса: {FFFFFF}%i\n{73B461}Цена: {FFFFFF}$%i\n{73B461}Можно приобрести: {FFFFFF}/buybiz",InfoBusinesses[bstate][BName], bizid, BizInfo[bizid][bCost]);
	else if(GetString(BizInfo[bizid][bOwner], "The State") && GetString(InfoBusinesses[bstate][BName], "Ларёк с уличной едой")) UpdateDynamic3DTextLabelTextf(Biz3DText[bizid], -1, "{FAAC58}Бизнес продается\n\n{bf9a92}Тип бизнеса: {FFFFFF}%s\n{bf9a92}Номер бизнеса: {FFFFFF}%i\n{bf9a92}Цена: {FFFFFF}$%i\n{bf9a92}Можно приобрести: {FFFFFF}/buybiz",InfoBusinesses[bstate][BName], bizid, BizInfo[bizid][bCost]);
	else
	{
	    if(!IsNoEnterBiz(bizid) && !GetString(InfoBusinesses[bstate][BName], "Ларёк с уличной едой"))
	    {
			fmt(str_1, "{FFFF00}%s\n\n{73B461}Номер бизнеса: {FFFFFF}%i\n{73B461}Тип бизнеса: {FFFFFF}%s\n{73B461}Владелец: {FFFFFF}%s\n{73B461}Крыша: {FFFFFF}%s",BizInfo[bizid][bDescription], bizid, InfoBusinesses[BizInfo[bizid][bState]][BName], BizInfo[bizid][bOwner], mafiastr);
   			if(BizInfo[bizid][bState] == 7 || BizInfo[bizid][bState] == 1 || BizInfo[bizid][bState] == 2 || BizInfo[bizid][bState] == 3 || BizInfo[bizid][bState] == 9)
			{
	            if(BizInfo[bizid][bBuyCost] > 0 && BizInfo[bizid][bNeedItem] > 0)
				{
				    if(BizInfo[bizid][bState] == 7) f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Скупает {CBB42F}%i{FFFFFF} продуктов со склада фермы\nСтоимость 1-го продукта: {CBB42F}%i$\nНажмите 'H' чтобы разгрузить продукты.",str_1, BizInfo[bizid][bNeedItem], BizInfo[bizid][bBuyCost]);
				    else f(str_1, sizeof(str_1), "%s\n\nСкупает {CBB42F}%i{FFFFFF} продуктов с разгрузочной станции.\nСтоимость 1-го предмета: {CBB42F}%i$\nНажмите 'H' чтобы разгрузить продукты.",str_1, BizInfo[bizid][bNeedItem], BizInfo[bizid][bBuyCost]);
				}
			}
	        UpdateDynamic3DTextLabelText(Biz3DText[bizid], -1, str_1);
		}
		else if(GetString(InfoBusinesses[bstate][BName], "Ларёк с уличной едой")) UpdateDynamic3DTextLabelTextf(Biz3DText[bizid], -1, "{FFFF00}%s\n\n{bf9a92}Номер бизнеса: {FFFFFF}%i\n{bf9a92}Тип бизнеса: {FFFFFF}%s\n{bf9a92}Владелец: {FFFFFF}%s\n{73B461}Крыша: {FFFFFF}%s\n{73B461}Бургер: {FFFFFF}$30000 {73B461}Пицца: {FFFFFF}$30000\n{73B461}Продуктов: {FFFFFF}%i{FFFFFF}",BizInfo[bizid][bDescription], bizid, InfoBusinesses[BizInfo[bizid][bState]][BName], BizInfo[bizid][bOwner],mafiastr,BizInfo[bizid][bProducts]);
		else UpdateDynamic3DTextLabelTextf(Biz3DText[bizid], -1, "{FFFF00}%s\n\n{73B461}Номер бизнеса: {FFFFFF}%i\n{73B461}Тип бизнеса: {FFFFFF}%s\n{73B461}Владелец: {FFFFFF}%s\n{73B461}Крыша: {FFFFFF}%s\n{CB2424}Входа нет!",BizInfo[bizid][bDescription], bizid, InfoBusinesses[bstate][BName], BizInfo[bizid][bOwner], mafiastr);
	}
	if(add)
	{
	    UpdateDataInt("businesses", "Cost", BizInfo[bizid][bCost], BizInfo[bizid][bID],"=");
	    UpdateDataInt("businesses", "Interior", BizInfo[bizid][bInt], BizInfo[bizid][bID],"=");
	    UpdateDataFloat("businesses", "Exit_X", BizInfo[bizid][bExit_X], BizInfo[bizid][bID], 1);
	    UpdateDataFloat("businesses", "Exit_Y", BizInfo[bizid][bExit_Y], BizInfo[bizid][bID], 1);
	    UpdateDataFloat("businesses", "Exit_Z", BizInfo[bizid][bExit_Z], BizInfo[bizid][bID], 1);
	}
	return 1;
}
stock UpdateHouseGarage(house)
{
	if(IsValidDynamicPickup(HouseGaragePickup[house])) DestroyDynamicPickupEx(HouseGaragePickup[house]);
	if(IsValidDynamic3DTextLabel(HouseGarage3DText[house])) DestroyDynamic3DTextLabel(HouseGarage3DText[house]);
	if(HouseInfo[house][hGarage])
	{
		HouseGaragePickup[house] = CreateDynamicPickup(19133, 23, HouseInfo[house][hGarage_X], HouseInfo[house][hGarage_Y], HouseInfo[house][hGarage_Z], 0, 0, -1, 25.0);
		fmt(str_1, "{FFFFFF}Гараж ( %i )\nВойти: {f4e451}ALT{FFFFFF}\nЗаехать: {f4e451}H",house);
		HouseGarage3DText[house] = CreateDynamic3DTextLabel(str_1,-1, HouseInfo[house][hGarage_X],HouseInfo[house][hGarage_Y], HouseInfo[house][hGarage_Z], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}
	return 1;
}
stock SearchHouseIcon(i)
{
    if(GetString(HouseInfo[i][hOwner], "The State")) return 31;
    return 32;
}
stock UpdateHouse(house)
{
	if(IsValidDynamicMapIcon(HouseIcon[house])) DestroyDynamicMapIcon(HouseIcon[house]);
	if(IsValidDynamicPickup(HEnter[house])) DestroyDynamicPickupEx(HEnter[house]);
	if(IsValidDynamicArea(HEnterCP[house])) DestroyDynamicArea(HEnterCP[house]);
	if(IsValidDynamicPickup(HExitPickup[house])) DestroyDynamicPickupEx(HExitPickup[house]);
	if(IsValidDynamic3DTextLabel(HExit3DLabel[house])) DestroyDynamic3DTextLabel(HExit3DLabel[house]);
	HEnter[house] = CreateDynamicPickup(SearchHouseCP(house), 1, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z],0,0);
	HEnterCP[house] = CreateDynamicSphere(HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z], 2.5, 0, 0);
	if(HouseInfo[house][hKlass] != 22) HouseIcon[house] = CreateDynamicMapIcon(HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z], SearchHouseIcon(house), 0,0,0);
	if(IsValidDynamic3DTextLabel(HExit3DLabel[house])) DestroyDynamic3DTextLabel(HExit3DLabel[house]);
	HExit3DLabel[house] = CreateDynamic3DTextLabel(!"[ Выход ]\nНажмите ALT", 0xAFAFAFFF, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z], 10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, (house+50), -1);
	if(IsValidDynamicPickup(HExitPickup[house])) DestroyDynamicPickupEx(HExitPickup[house]);
	HExitPickup[house] = CreateDynamicPickup(19132, 1, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z], (house+50), -1);

	static const dour_status[2][23 + 1] = {
		"{3D9829}Открыта{FFFFFF}",
		"{C22323}Закрыта{FFFFFF}"
	};
	static const hgarage_status[2][24 + 1] = {
		"[{fa736c} НЕТ {FFFFFF}]",
		"[{27c627} ЕСТЬ {FFFFFF}]"
	};
	if(GetString(HouseInfo[house][hOwner], "The State"))
	{
		if(HouseInfo[house][hKlass] == 22)
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1),
			"{FF9900}*** Квартира продается ***\
			\n\n{FFFFFF}Номер квартиры: {AFAFAF}%d\
			\n{FFFFFF}Стоимость: {AFAFAF}$%d", house, HouseInfo[house][hCost]);
		}
		else
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1),
			"{FF9900}*** Дом продается ***\
			\n\n{FFFFFF}Номер дома: {AFAFAF}%d\
			\n{FFFFFF}Класс дома: {AFAFAF}%d\
			\n{FFFFFF}Стоимость: {AFAFAF}$%d\
			\n{FFFFFF}Гараж: {AFAFAF}%s",
			house,
			HouseInfo[house][hKlass],
			HouseInfo[house][hCost],
			hgarage_status[HouseInfo[house][hGarage]]);
		}
	}
	else
	{
		if(HouseInfo[house][hKlass] == 22)
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1),
			"{FF9900}*** Квартира занята ***\
			\n\n{FFFFFF}Номер квартиры: {AFAFAF}%d\
			\n{FFFFFF}Владелец: {AFAFAF}%s\
			\n{FFFFFF}Дверь: %s",house,HouseInfo[house][hOwner], dour_status[HouseInfo[house][hLock]]);
		}
		else
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1),
				"{FF9900}*** Дом занят ***\n\
				{FFFF00}%s\
				\n\n{FFFFFF}Номер дома: {AFAFAF}%d\
				\n{FFFFFF}Класс дома: {AFAFAF}%d\
				\n{FFFFFF}Дверь: %s\
				\n{FFFFFF}Гараж: {AFAFAF}%s",
				HouseInfo[house][hDescription],
				house,
				HouseInfo[house][hKlass],
				dour_status[HouseInfo[house][hLock]],
				hgarage_status[HouseInfo[house][hGarage]]
			);
		}
	}
	UpdateDynamic3DTextLabelText(House3DText[house], -1, str_1);
	return 1;
}
stock DestroyAllTextDraws(playerid)
{
	for(new i; i < 6; i ++) DestroyPlayerTD(playerid, HInfoDraw[playerid][i]);
	DestroyPlayerTD(playerid, PlayerCarHPDraw[playerid]);
	DestroyPlayerTD(playerid, InfoText[playerid]);
	DestroyPlayerTD(playerid, TaxiDraw[playerid]);
	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);

	DestroyPlayerTD(playerid, PlayerFuelBar[playerid]);
	DestroyPlayerTD(playerid, KindFuelDraw[playerid]);
	DestroyPlayerTD(playerid, FuelCountDraw[playerid]);
	DestroyPlayerTD(playerid, FuelCostDraw[playerid]);
	DestroyPlayerTD(playerid, MilageDraw[playerid]);
	IsPlayerFillMenu[playerid] = false;
	return 1;
}
stock CreateAllTextDraws(playerid)
{
	DestroyAllTextDraws(playerid);
	#include modules\TEXTDRAWS\CreatePlayerTD
	DestroyPlayerTD(playerid, td_damage[playerid][0]);
	DestroyPlayerTD(playerid, td_damage[playerid][1]);
	td_damage[playerid][0] = CreatePlayerTextDraw(playerid, 200.000000, 365.000000, "Nick - Weapon +damage");
	PlayerTextDrawLetterSize(playerid, td_damage[playerid][0], 0.200000, 0.900000);
	PlayerTextDrawTextSize(playerid, td_damage[playerid][0], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, td_damage[playerid][0], 2);
	PlayerTextDrawColor(playerid, td_damage[playerid][0], 0x82E1B3FF);
	PlayerTextDrawUseBox(playerid, td_damage[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, td_damage[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, td_damage[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, td_damage[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, td_damage[playerid][0], 0x0000001A);
	PlayerTextDrawFont(playerid, td_damage[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, td_damage[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, td_damage[playerid][0], 0);

	td_damage[playerid][1] = CreatePlayerTextDraw(playerid, 440.000000, 365.000000, "Nick - Weapon -damage");
	PlayerTextDrawLetterSize(playerid, td_damage[playerid][1], 0.200000, 0.900000);
	PlayerTextDrawTextSize(playerid, td_damage[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, td_damage[playerid][1], 2);
	PlayerTextDrawColor(playerid, td_damage[playerid][1], 0xEEA2ADFF);
	PlayerTextDrawUseBox(playerid, td_damage[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, td_damage[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, td_damage[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, td_damage[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, td_damage[playerid][1], 0x0000001A);
	PlayerTextDrawFont(playerid, td_damage[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, td_damage[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, td_damage[playerid][1], 0);
	return 1;
}
stock Float:fmax(Float:v1, Float:v2) return v1 > v2?v1:v2;
stock Float:fmin(Float:v1, Float:v2) return v1 < v2?v1:v2;
stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock ShowPlayerActionText(playerid, const text[])
{
	PlayerTextDrawSetString(playerid, ActionText[playerid], text);
	PlayerTextDrawShow(playerid, ActionText[playerid]);
	return 1;
}
stock HidePlayerActionText(playerid)
{
	PlayerTextDrawHide(playerid, ActionText[playerid]);
	return 1;
}
stock ShowPlayerActionBand(playerid, status, endstatus)
{
	new Float:part = 100.0 / float(endstatus) * float(status);
	new Float:length = 201.0 + part * 2.42;
	if(length > 443.0) length = 443.0;
	else if(length < 201.0) length = 201.0;
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], length, 0.0);
	PlayerTextDrawShow(playerid, ActionBand[playerid]);
	TextDrawShowForPlayer(playerid, BandDrawBG[0]);
	TextDrawShowForPlayer(playerid, BandDrawBG[1]);
	return 1;
}
stock HidePlayerActionBand(playerid)
{
	PlayerTextDrawHide(playerid, ActionBand[playerid]);
	TextDrawHideForPlayer(playerid, BandDrawBG[0]);
	TextDrawHideForPlayer(playerid, BandDrawBG[1]);
	return 1;
}
stock ResetDoorsStatus(carid)
{
	new status;
	new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) status = false;
	else status = CarInfo[number][cLock];
	SetDoorsStatus(carid, status);
	return status;
}
stock Isameria(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MERIALS: return 1;
		default: return 0;
	}
	return 0;
}
stock IsAMedic(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MEDICSF: return 1;
		case TEAM_MEDICLS: return 1;
		case TEAM_MEDICLV: return 1;
		default: return 0;
	}
	return 0;
}
stock VehicleSeatState(seat)
{
	new seatstate;
	switch(seat)
	{
	    case 0: seatstate = 2;
	    default: seatstate = PLAYER_STATE_PASSENGER;
	}
	return seatstate;
}
stock GetVehicleSeat(vehicleid, seatid)
{
    if(IsPlayerInVehicle(VehicleSeat[vehicleid][seatid], vehicleid)) if(GetPlayerState(VehicleSeat[vehicleid][seatid]) == VehicleSeatState(seatid)) return VehicleSeat[vehicleid][seatid];
    VehicleSeat[vehicleid][seatid] = INVALID_PLAYER_ID;
    return VehicleSeat[vehicleid][seatid];
}
stock GetSkinOfPlayer(playerid)
{
	new skin, org = GetTeamID(playerid), rank = PI[playerid][pRank];
	if(!org) skin = PI[playerid][pSkin];
	else
	{
	    if(TeamDuty{playerid}) skin = (PI[playerid][pSex] == 2) ? GOrgSkins[org][rank] : MOrgSkins[org][rank];
		else skin = PI[playerid][pSkin];
		if(IsAtGang(playerid) || IsAtMafia(playerid) )skin = (PI[playerid][pSex] == 2) ? GOrgSkins[org][rank] : MOrgSkins[org][rank];
	}
	return skin;
}
stock PlVeh(playerid, model, Float:X, Float:Y, Float:Z, Float:A,world=0)
{
    if(IsPlayerInAnyVehicle(playerid)) return 1;
    if(PI[playerid][plveh] != -1) destroyvehicle_(PI[playerid][plveh]);
    PI[playerid][plveh] = J_AddStaticVehicleEx(model, X, Y, Z+1, A, 1, 1,300,0,world);
    vTemp[PI[playerid][plveh]][Fuel] = 100.00;
    VehicleHealth[PI[playerid][plveh]] = 1500;
    PutPlayerInVehicle(playerid, PI[playerid][plveh], 0);
    if(!IsAVelik(PI[playerid][plveh])) SetEngineStatus(PI[playerid][plveh], false, playerid);
    return 1;
}
stock SpawnPlayer0(playerid)
{
	new skin = GetSkinOfPlayer(playerid);
	switch(random(11))
	{
		case 0: SetSpawnInfoEx(playerid, skin, 1765.5046, -1892.7008, 13.5611, 175.9128);
		case 1: SetSpawnInfoEx(playerid, skin, 1765.3536, -1902.9863+random(3), 13.5661, 355.7444);
		case 2: SetSpawnInfoEx(playerid, skin, 1758.8562, -1903.0684, 13.5646+random(3), 357.3111);
		case 3: SetSpawnInfoEx(playerid, skin, 1758.8551, -1892.5815+random(3), 13.5559, 177.4561);
		case 4..8: SetSpawnInfoEx(playerid, skin, 1153.4486,-1771.2213+random(3),16.5992+random(3),358.8202);
		default: SetSpawnInfoEx(playerid, skin, 1144.0490+random(2),-1769.3396+random(3),16.5992, 270.0);
	}
	SetPlayerInteriorEx(playerid, 0);
	if(Iter_Contains(IsPlayerBot, playerid) == 0) SetPlayerVirtualWorldEx(playerid, 0);
	else SetPlayerVirtualWorldEx(playerid, 1);
}
stock CheckSpawnPlayer(playerid, type, UID_=-1)
{
	//0 вокзал
	//1 дом
	//2 организация
	//3 семейная
	//4 на точку
	new bool:progress, skin = GetSkinOfPlayer(playerid);
	switch(type)
	{
		case 0: SpawnPlayer0(playerid), progress = true;
		case 1: //дом
		{
			new house = PI[playerid][pHouseMain];
			if(UID_ != -1) house = UID_;
			if(house != -1)
			{
				if(GetString(HouseInfo[house][hOwner],PN(playerid)))
				{
					HouseEntered[playerid] = house;
					SetSpawnInfoEx(playerid, skin, HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z],0.0);
					SetPlayerInteriorEx(playerid,HouseInfo[house][hInt]);
					SetPlayerVirtualWorldEx(playerid,house+50);
					progress = true;
				}
				else
				{
					new s = GetHouseStyle(house);
					for(new i;i < HouseRooms[s];i ++)
					{
						if(HRoomOwner[house][i] == PI[playerid][pID])
						{
							HouseEntered[playerid] = house;
							SetSpawnInfoEx(playerid, skin, HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z],0.0);
							SetPlayerInteriorEx(playerid,HouseInfo[house][hInt]);
							SetPlayerVirtualWorldEx(playerid,house+50);
							progress = true;
						}
					}
				}
			}
			else
			{
				SetSpawnPI(playerid, 0);
				SpawnPlayer0(playerid), progress = true;
			}
		}
		case 2: //организация
		{
			if(PI[playerid][pMember] != 0)
			{
				SetSpawnInfoEx(playerid, skin, global_OrgInfo[PI[playerid][pMember]][g_oSpawnInfo][0], global_OrgInfo[PI[playerid][pMember]][g_oSpawnInfo][1], global_OrgInfo[PI[playerid][pMember]][g_oSpawnInfo][2], global_OrgInfo[PI[playerid][pMember]][g_oSpawnInfo][3]);
                SetPlayerInteriorEx(playerid, global_OrgInfo[PI[playerid][pMember]][g_oSpawnIntWorld][0]);
				SetPlayerVirtualWorldEx(playerid, global_OrgInfo[PI[playerid][pMember]][g_oSpawnIntWorld][1]);
				progress = true;
			}
			else return -1;
		}
		case 3: //family
		{
			if(PI[playerid][pFamilyMember] != -1 && FamilyInfo[pFamilyID(playerid)][famHouse] != -1)
			{
				SetSpawnInfoEx(playerid, skin, -1496.9866, 2718.3179, 1500.9674, 46.0202);
				SetPlayerInteriorEx(playerid, 1);
				SetPlayerVirtualWorldEx(playerid, (PI[playerid][pFamilyMember]+50));
				progress = true;
			}
			else return -1;
		}
		case 4: //pos
		{
			if(PI[playerid][pVIP][0] > 5 && PI[playerid][pPoint_Pos][0] != 0.0)
			{
				SetSpawnInfoEx(playerid, skin, PI[playerid][pPoint_Pos][0],PI[playerid][pPoint_Pos][1],PI[playerid][pPoint_Pos][2],PI[playerid][pPoint_Pos][3]);
				SetPlayerVirtualWorldEx(playerid, 0);
				SetPlayerInteriorEx(playerid, 0);
				progress = true;
			}
			else return -1;
		}
		case 5: //pos
		{
			if(PI[playerid][pVIP][0] > 5 && PI[playerid][pLast_Pos][0] != 0.0)
			{
				SetSpawnInfoEx(playerid, skin, PI[playerid][pLast_Pos][0],PI[playerid][pLast_Pos][1],PI[playerid][pLast_Pos][2],PI[playerid][pLast_Pos][3]);
				SetPlayerVirtualWorldEx(playerid, 0);
				SetPlayerInteriorEx(playerid, 0);
				progress = true;
			}
			else return -1;
		}
	}
	if(!progress) SpawnPlayer0(playerid), SetSpawnPI(playerid, 0);
	return 1;
}
stock SettingSpawn(playerid)
{
	if(RecInfo[playerid][rOpen] || !IsPlayerLogged[playerid]) return 1;
	new skin = GetSkinOfPlayer(playerid);
	if(PI[playerid][pDemorgan] > 0)
	{
		SetSpawnInfoEx(playerid, skin, -799.1370,2831.1130,1501.9896,90.0);
		SetPlayerVirtualWorldEx(playerid, 1), SetPlayerInteriorEx(playerid, 6);
		return 1;
	}
	if(IsPlayerPlayMP[playerid] != false && StartMP != false && OpenMP != true && !TypeMP) return SetSpawnInfoForWar(playerid, true);
	CheckSharpeningSet(playerid);
	CheckDuty(playerid);
 	if(PI[playerid][pHeal])
	{
		if(PI[playerid][pMember] && PI[playerid][pDCTime] == 2) return CheckSpawnPlayer(playerid, 2),J_SetPlayerHealth(playerid, 100);
		else
		{
			if(PlayerHealthAC[playerid] > 20) J_SetPlayerHealth(playerid,PlayerHealthAC[playerid]);
			else J_SetPlayerHealth(playerid, 20);
			PI[playerid][pHospital] = 1;
			UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
            if(PI[playerid][pLevel] < 20)
            {
                switch(random(2))
                {
                    case 0: SetSpawnInfoEx(playerid, skin, 1169.9442,-1335.3043,1019.4198,358.9693);
                    case 1: SetSpawnInfoEx(playerid, skin, 1169.4475,-1285.9355,1019.4117,179.9430);
                }
            }
            else SetSpawnInfoEx(playerid, skin, 620.8149,-1263.0205,1024.3912,269.7074);
            switch(PI[playerid][pHospCity])
            {
                case 1: SetPlayerVirtualWorldEx(playerid, 1), SetPlayerInteriorEx(playerid, 2);
                case 2: SetPlayerVirtualWorldEx(playerid, 2), SetPlayerInteriorEx(playerid, 3);
                default: SetPlayerVirtualWorldEx(playerid, 3), SetPlayerInteriorEx(playerid, 3);
            }
			return 1;
		}
	}
	return CheckSpawnPlayer(playerid, PI[playerid][pDCTime]);
}
stock UpdateCarInfo(vehicleid)
{
	new number = GetVehicleID(vehicleid);
    if(IsAOwnableCar(number))
	{
        if(IsASellCar(number) && CarText[number] == Text3D:-1) CarText[number] = CreateDynamic3DTextLabel(!" ",-1,0,0,0.5,5.0,INVALID_PLAYER_ID,OwnableCar[number]);
		if(IsASellCar(number) && CarText[number] != Text3D:-1) UpdateDynamic3DTextLabelTextf(CarText[number],-1,"{FF9900} Транспорт продается {FFFFFF}\n\nМодель: {AFAFAF}%s (%i){FFFFFF}\nНомер: {AFAFAF}SP %i{FFFFFF}\nСтоимость: {AFAFAF}$%i\n\nКоличество на продаже: {AFAFAF}1 шт.", InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(vehicleid))][Model_Name],GetVehicleModelEx(vehicleid), vehicleid, CarInfo[number][cCost]);
        else DestroyDynamic3DTextLabel(CarText[number]), CarText[number] = Text3D:-1;
        str_2[0] = EOS, f(str_2, sizeof(str_2), "{000000}%s", CarInfo[number][cNumber]);
        SetVehicleNumberPlate(vehicleid, str_2);
		switch(VehicleState[vehicleid])
		{
			case VEHICLE_STATE_BIKE, VEHICLE_STATE_BOAT, VEHICLE_STATE_PLANE:
			{
				if(CarTextTrunk[number] == Text3D:-1) CarTextTrunk[number] = CreateDynamic3DTextLabel(!" ",-1,0,0,0.5,5.0,INVALID_PLAYER_ID,OwnableCar[number]);
				if(CarTextTrunk[number] != Text3D:-1) UpdateDynamic3DTextLabelTextf(CarTextTrunk[number], 0xFFFFFF35,"Открыть багажник:\n/trunk %i", vehicleid);
			}
			default: if(CarTextTrunk[number] != Text3D:-1) DestroyDynamic3DTextLabel(CarTextTrunk[number]), CarTextTrunk[number] = Text3D:-1;
		}
	}
	return 1;
}
stock ClearChatForPlayer(playerid)
{
	for(new i; i < 20; i ++)SCM(playerid, -1, !" ");
	return 1;
}
stock IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
stock IsAVelik(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
stock IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
stock IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);
stock Isamoped(carid) return (GetVehicleState(carid) == VEHICLE_STATE_MOPED);
stock IsACar(carid) return (GetVehicleState(carid) == VEHICLE_STATE_CAR);
stock DestroyVehicleEx(vehicleid)
{
	VehicleState[vehicleid] = 0;
	vTemp[vehicleid][vModel] = 0;
	vTemp[vehicleid][vPos_X] = 0;
	vTemp[vehicleid][vPos_Y] = 0;
	vTemp[vehicleid][vPos_Z] = 0;
	vTemp[vehicleid][vPos_A] = 0;
	vTemp[vehicleid][vLights] = false;
	vTemp[vehicleid][vEngine] = false;
	vTemp[vehicleid][vJob] = 0;
	vTemp[vehicleid][vTeam] = 0;
	vTemp[vehicleid][vRank] = 0;
	vTemp[vehicleid][vLock] = 0;
	vTemp[vehicleid][vPlayer] = -1;
	TwinTurbo[vehicleid][Engine] = false;
	TwinTurbo[vehicleid][cStatus] = false;
	return destroyvehicle_(vehicleid);
}
stock GetVehicleID(carid) 
{
	if(carid == INVALID_VEHICLE_ID) return INVALID_VEHICLE_ID; 
	foreach(new i: OWNABLECARS) if(OwnableCar[i] == carid) return i; 
	return INVALID_VEHICLE_ID; 
}
stock IsAOwnableCar(number)
{
	if(number == INVALID_VEHICLE_ID) return 0;
	if(Iter_Contains(OWNABLECARS, number)) return 1;
    return 0;
}
stock IsASellCar(number) { if(number == INVALID_VEHICLE_ID) return 0; if(IsAOwnableCar(number) && GetString(CarInfo[number][cOwner], "The State")) return 1; return 0; }
stock IsPlayerHaveCar(playerid, number)
{
	if(number == INVALID_VEHICLE_ID) return 0;
	if(IsAOwnableCar(number)) 
	{
		if(CarInfo[number][cOwnerFamily] == -1 && (CarInfo[number][cKeyer] == PI[playerid][pID] || GetString(CarInfo[number][cOwner], PN(playerid)))) return 1;
		if(CarInfo[number][cOwnerFamily] != -1 && CarInfo[number][cOwnerFamilyUID] == PI[playerid][pID]) return 2;
	}
	return 0;
}
stock IsPlayerRegCar(playerid, number) { if(number == INVALID_VEHICLE_ID) return 0; if(IsAOwnableCar(number) && GetString(CarInfo[number][cOwner], PN(playerid))) return 1; return 0; }
stock GetNumberCars(playerid) 
{ 
	new cars; 
	foreach(new i: OWNABLECARS) if(IsPlayerHaveCar(playerid, i) == 1) cars ++; 
	return cars;
}
stock SetCarOwner(carid, const name[])
{
	SetString(CarInfo[GetVehicleID(carid)][cOwner],name);
	return UpdateDataStr("ownable","Owner", name, CarInfo[GetVehicleID(carid)][cID]);
}
stock SetCarKeyer(carid, playerid)
{
	CarInfo[GetVehicleID(carid)][cKeyer] = PI[playerid][pID];
	return UpdateDataInt("ownable","Keyer", CarInfo[GetVehicleID(carid)][cKeyer], CarInfo[GetVehicleID(carid)][cID], "=");
}
stock GetString(const param1[], const param2[]) return !strcmp(param1, param2, false);
stock IsATaxi(carid) return (vTemp[carid][vJob] == 5);
stock GetIntCars(playerid)
{
    new cars;
    foreach(new i: OWNABLECARS) if(IsPlayerHaveCar(playerid, i) == 1) cars++;
    return cars;
}
stock CheckEnterCar(playerid, vehicleid)
{
	if(GetPlayerVirtualWorld(playerid)!=1228)
	{
		if(vTemp[vehicleid][vJob] != 0)
		{
		    new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
			{
		 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
		 		ExitCar(playerid);
		 		return 1;
			}
			if(PI[playerid][pJob] != vTemp[vehicleid][vJob])
			{
			    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого транспорта!");
				ExitCar(playerid);
			}
			else if(!InJob[playerid] && vTemp[vehicleid][vJob] == JOB_COLLECTOR)
			{
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Ошибка", !"{FFFFFF}Сначала переоденьтесь", !"Ок", !"");
				ExitCar(playerid);
			}
		}
		else if(vTemp[vehicleid][vTeam] != 0)
		{
			if(!TeamDuty{playerid} && vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
		        SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Служебный транспорт доступен только во время работы!");
	   			ExitCar(playerid);
				return 0;
			}
			if(GetTeamID(playerid) != vTemp[vehicleid][vTeam] && (vTemp[vehicleid][vTeam] != TEAM_LICENSERS))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого транспорта!");
				ExitCar(playerid);
			}
			else
			{
			    if(PI[playerid][pRank] < vTemp[vehicleid][vRank] && (vTemp[vehicleid][vTeam] != TEAM_LICENSERS))
			    {
			        SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Ваш ранг недостаточно высок!");
					ExitCar(playerid);
			    }
			}
		}
		else if(IsAPlane(vehicleid))
		{
		    if(vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
		    {
				if(!GetInvCount(playerid, 759))
				{
				    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на полеты, поэтому вы не можете водить этот транспорт!");
					ExitCar(playerid);
					return 1;
				}
			}
		}
		else if(IsABoat(vehicleid))
		{
			if(!GetInvCount(playerid, 760))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение водного транспорта, поэтому вы не можете водить на этой лодке!");
				ExitCar(playerid);
				return 1;
			}
		}
		else if(IsABike(vehicleid))
		{
            if(vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
				if(!GetInvCount(playerid, 758))
			    {
	   				SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение мотоцикла, поэтому вы не можете водить этот транспорт!");
			    	ExitCar(playerid);
			    	return 1;
	    		}
			}
		}
		else if(!IsABike(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsAVelik(vehicleid) && !Isamoped(vehicleid))
		{
			if(vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
				if(!GetInvCount(playerid, 757))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение, поэтому вы не можете водить это авто.");
					ExitCar(playerid);
					return 1;
				}
			}
		}
		else if(IsAArendCar(vehicleid))
		{
		    if(ArendInfo[GetArendCarID(vehicleid)][aID] == 578)
		    {
				if(PI[playerid][pFamilyMember] == -1)
				{
					ExitCar(playerid);
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт доступен только для членов семьи!");
				}
			}
		}
	}
	return 1;
}
stock ExitCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
	else ClearAnimations(playerid);//SCM(playerid, -1, "1");
	return 1;
}
stock SetPlayerMoney(playerid, money)
{
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, money);
	PI[playerid][pMoney] = money;
	UpdatePlayerDataInt(playerid, "Money", PI[playerid][pMoney]);
	return 1;
}
stock IsAArended(carid)
{
    if(IsAArendCar(carid) && ArendInfo[GetArendCarID(carid)][aRentID] != INVALID_PLAYER_ID) return 1;
	return 0;
}
stock CreateGate(gateid)
{
    gGate[gateid] = CreateDynamicObject(GateInfo[gateid][gObID],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],0,0,GateInfo[gateid][gClose_A],GateInfo[gateid][gWorld]);
	GateInfo[gateid][gCreated] = true;
	return 1;
}
stock CreateDoor(doorid)
{
    dDoor[doorid] = CreateDynamicObject(DoorInfo[doorid][dObID], DoorInfo[doorid][dPos][0],DoorInfo[doorid][dPos][1],DoorInfo[doorid][dPos][2], 0,0, DoorInfo[doorid][dPos][3], DoorInfo[doorid][dWorld], DoorInfo[doorid][dInterior]);
	
	switch(DoorInfo[doorid][dOrg])
	{
		case 9: SetDynamicObjectMaterial(dDoor[doorid], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0);
		case TEAM_RADIO, TEAM_RADIOSF, TEAM_RADIOLV:
		{			
			SetDynamicObjectMaterial(dDoor[doorid], 2, 19595, "lsappartments1", "carpet4-256x256", 0);
			SetDynamicObjectMaterial(dDoor[doorid], 1, 19800, "lsacarpark1", "dt_officewall1", 0);
			SetDynamicObjectMaterial(dDoor[doorid], 0, 19480, "signsurf", "sign", 0);
		}
		default:
		{
			SetDynamicObjectMaterial(dDoor[doorid], 2, 3440, "airportpillar", "metalic_64", 0),
			SetDynamicObjectMaterial(dDoor[doorid], 1, 4830, "airport2", "sanairtex3", 0),
			SetDynamicObjectMaterial(dDoor[doorid], 0, 3440, "airportpillar", "metalic_64", 0xFFD3D3D3);
		}
	}
	return false;
}
stock SetBuyGunCamera(playerid)
{
	SetPlayerCameraPos(playerid, 295.1925, -36.7806, 1002.9);
	SetPlayerCameraLookAt(playerid, 295.1925, -39.7806, 1002.9);
	InterpolateCameraPos(playerid, 295.1925, -35.7806, 1002.9, 295.1925, -38.7, 1002.9, 1000);
	InterpolateCameraLookAt(playerid, 295.1925, -38.7, 1002.9, 295.20001221, -39.29999924, 1001.59997559, 1000, CAMERA_MOVE);
	return 1;
}
stock GetVehicleMaxSeat(vehicleid)
{
    static MaxSeats[] =
	{
		3,1,1,1,3,3,0,1,1,3,1,1,1,3,1,1,3,1,3,1,3,
		3,1,1,1,0,3,3,3,1,0,8,0,1,1,15,1,8,3,1,3,0,
		1,1,1,3,0,1,0,1,15,1,0,0,0,1,1,1,3,3,1,1,1,
		1,1,1,3,3,1,1,3,1,0,0,1,1,0,1,1,3,1,0,3,1,
		0,0,0,3,1,1,3,1,3,0,1,1,1,3,3,1,1,1,1,1,1,
		1,1,3,1,0,0,1,0,0,1,1,3,1,1,0,0,1,1,1,1,1,
		1,1,1,3,0,0,0,1,1,1,1,2,2,0,3,1,1,1,1,1,3,
		3,1,1,3,3,1,0,1,1,1,1,1,1,3,3,1,1,0,1,3,3,
		0,15,1,0,0,1,0,1,1,1,1,3,3,1,3,0,15,3,1,1,1,
		1,15,15,1,1,1,0,3,3,3,1,1,1,1,1,3,1,15,15,15,3,
		15,15
	};
	new model = GetVehicleModelEx(vehicleid) - 400;
	if(model >= 0) return MaxSeats[model];
	return -1;
}
stock SetPlayerBuyItem(playerid)
{
    new race = PI[playerid][pType];
	SetPlayerCameraPos(playerid,-398.04,2229.84,1801.91);
	SetPlayerCameraLookAt(playerid,-397.68,2230.35,1801.47);
	Buyitem[playerid] = 0;
	ClearChatForPlayer(playerid);
	SCM(playerid,-1,!"система в переработке!");
    /*switch(ItemsId[race][0])
	{
		//наушники
		case 19421: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
		//шапки
		case 19069: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
		//панамки
		case 18968: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
		//кепки
		case 18955: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
		//каски
		case 19104: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
		//береты
		case 18925: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
		//парики
		case 19519: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.8564, 2231.0369, 1801.5004,269.0000, 345.0000, 86.1028);
		//очки
		case 19011: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
		//банданы
		case 18911: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
		//шляпы
		case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
		//часы
		case 19042: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
		//портфели
		case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
		case 18970: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
        case 18910: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
	}*/
	PlayerTDSetStringf(playerid, InfoText[playerid], "~g~Cost: ~r~$%i", ItemsCost[race][0]);
	PlayerTextDrawShow(playerid,InfoText[playerid]);
	BuyInt[playerid] = -1;
	TogglePlayerControllable(playerid, false);
	TextDrawShowForPlayer(playerid,Boxmenu0);
	TextDrawShowForPlayer(playerid,Boxmenu1);
	TextDrawShowForPlayer(playerid,Boxmenu2);
	TextDrawShowForPlayer(playerid,Boxmenu3);
	TextDrawShowForPlayer(playerid,ButtonRight);
	TextDrawShowForPlayer(playerid,ButtonCancel);
	TextDrawShowForPlayer(playerid,ButtonSelect);
	TextDrawShowForPlayer(playerid,boxaccept);
	TextDrawShowForPlayer(playerid,boxcancel);
 	SelectTextDraw(playerid, -16776961);
	return 1;
}
stock SetPlayerBuySkin(playerid, bool:shop=false)
{
    new race = PI[playerid][pRace];
	if(shop)
	{
		GetPlayerSkin(playerid);
		ClearChatForPlayer(playerid);
		SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Для отмены нажмите {FFFFFF}Cancel");
		SPD(playerid, 0, 0, !"", !"\n{FFFFFF}Для отмены нажмите {FF6347}Cancel\n{FFFFFF}Чтобы купить скин нажмите {FF6347}Accept\n", "Принять", "");
	    TogglePlayerDynamicCP(playerid, Binko_CP, false);
	    SetPlayerFacingAngle(playerid,180.0);
		J_SetPlayerPos(playerid,199.1063, -128.3574, 1003.5152);
		SetPlayerCameraPos(playerid,199.2,-134.3,1003.5);
		SetPlayerCameraLookAt(playerid,199.1,-131.6,1003.5);

		if(PI[playerid][pSex] <= 1)
		{
		    str_2[0] = EOS, f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[0]);
			SetPlayerSkinEx(playerid,MSkins[race][0]);
		}
		else
		{
		    str_2[0] = EOS, f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[0]);
			SetPlayerSkinEx(playerid,GSkins[race][0]);
		}
		PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
	}
	else
	{
	    PlayerTextDrawHide(playerid,InfoText[playerid]);
		J_SetPlayerPos(playerid, 1874.8156, 2228.1123, 1036.3204);
	    SetPlayerFacingAngle(playerid, 90.7581);
     	ClearChatForPlayer(playerid);
		SetPlayerCameraPos(playerid, 1871.5439, 2226.6455, 1037.3204);
		SetPlayerCameraLookAt(playerid, 1876.0872, 2228.6479, 1036.3204);
		if(PI[playerid][pSex] <= 1) SetPlayerSkinEx(playerid,MBomzSkins[race][0]);
		else SetPlayerSkinEx(playerid,GBomzSkins[race][0]);
	}
	BuyInt[playerid] = -1;
	Clother[playerid] = 0;
	player_Global_Int[playerid][2] = GetPlayerVirtualWorld(playerid);
	SetPlayerVirtualWorldEx(playerid,playerid + 5);
	TogglePlayerControllable(playerid, false);
	//
	TextDrawShowForPlayer(playerid,Boxmenu0);
	TextDrawShowForPlayer(playerid,Boxmenu1);
	TextDrawShowForPlayer(playerid,Boxmenu2);
	TextDrawShowForPlayer(playerid,Boxmenu3);
	TextDrawShowForPlayer(playerid,ButtonRight);
	TextDrawShowForPlayer(playerid,ButtonCancel);
	TextDrawShowForPlayer(playerid,ButtonSelect);
	TextDrawShowForPlayer(playerid,boxaccept);
	TextDrawShowForPlayer(playerid,boxcancel);
    return SelectTextDraw(playerid, -16776961);
}
stock ShowBankMenu(playerid, bool:isAtBank=true)
{
	if(PI[playerid][pBankPass] == -1) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Вы не можете воспользоватся банком/банкоматом.{FFFFFF}\nУ вас нет банковской карты. Получить ее можно в\nбанковском отделении Las Venturas ,или у сотрудника банка!", !"Закрыть", !"");
	if(!IsVerifyBankCode{playerid}) return SPD(playerid, 991, DIALOG_STYLE_INPUT, !"", !"{929290}Вы должны подтвердить свой PIN-код к карточке.\nВведите свой код в ниже указаную строку.", !"Принять", !"Закрыть");
	for(new i; i < 21; i++) DListitem[playerid]{i} = -1;
	new list;
	if(isAtBank)
	{
		str_1 = "\
		{FFFFFF}Состояние основного счета\n\
		Снять с Основного счета\n\
		Пополнить основной счет\n\
		Перевести деньги с основного счета\n\
		{FFFF00}Оплата всех налогов\n\
		{73B461}Оплатить налог на транспорт\n\
		{FFFFFF}Пополнить депозит {FCBE52}[20.00 - 12.00]\n\
		{FFFFFF}Снять деньги с депозита {FCBE52}[20.00 - 12.00]\n\
		{FFFFFF}Внести залог на транспорт\n\
		Купить валюту ЕВРО\n\
		Продать валюту ЕВРО\n\
		Состояние {ff6a0d}личного{FFFFFF} счета\n\
		Снять с {ff6a0d}личного{FFFFFF} счета\n\
		Пополнить {ff6a0d}личный{FFFFFF} счет\n";
		list = 14;
	}
	else
	{
		str_1 = "\
		{FFFFFF}Состояние основного счета\n\
		Снять с Основного счета\n";
		list = 2;
		//
	}
	if(GetPlayerHouses(playerid) != -1) strcat(str_1, "{73B461}Оплатить налоги на дом\n"), DListitem[playerid]{14} = list,list++;

	if(GetPlayerBiz(playerid) != -1) strcat(str_1, "{73B461}Оплатить налоги на бизнес\n"), DListitem[playerid]{15} = list,list++;

	if(PI[playerid][pMember] > 0) strcat(str_1, "Пополнить счет организации\n"), DListitem[playerid]{16} = list,list++;

	if(PI[playerid][pTelNum] > 0) strcat(str_1, "Пополнить счет sim карты мобильного телефона"), DListitem[playerid]{17} = list,list++;

	return SPD(playerid, 33, DIALOG_STYLE_LIST, isAtBank ? "Банк" : "Банкомат", str_1, !"Выбор", !"Отмена");
}
stock SetPlayerSkills(playerid)
{
    if(!IsPlayerConnectEx(playerid)) return 1;
    SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,			PI[playerid][pSkill][0]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,	PI[playerid][pSkill][1]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,		PI[playerid][pSkill][2]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,			PI[playerid][pSkill][3]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,			PI[playerid][pSkill][4]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,				PI[playerid][pSkill][5]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,				PI[playerid][pSkill][6]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,				PI[playerid][pSkill][7]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,		PI[playerid][pSkill][8]/10);
	return 1;
}
stock MuchNumber(...)
{
	new count = numargs(), maxnum;
	for(new i; i < count; i ++)
	{
	    new temp = getarg(i);
	    if(temp > maxnum) maxnum = temp;
	}
	return maxnum;
}
stock bool:bollean(value)
{
	return value?true:false;
}
stock CuffedPlayer(playerid, cuffedtime)
{
	TogglePlayerControllable(playerid, true);
	CuffedTime[playerid] = cuffedtime;
	Cuffed[playerid] = bollean(cuffedtime == 0);
	if(IsACop(playerid))
	{
	    new cuffid = PlayerOfCuff[playerid];
	    if(cuffid != INVALID_PLAYER_ID)
	    {
	        if(PlayerOfCuff[cuffid] == playerid) PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
	        PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	        TimeOfCuff[playerid] = 0;
	    }
	}
	if(cuffedtime <= 0)
	{
	    new tazer = TazerPlayer[playerid];
		if(tazer != INVALID_PLAYER_ID)
  		{
 			TazerPlayer[playerid] = INVALID_PLAYER_ID;
 			TazerPlayer[tazer] = INVALID_PLAYER_ID;
  		}
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	}
	CancelCuff(playerid);
	return 1;
}
stock UnCuffPlayer(playerid)
{
	Cuffed[playerid] = false;
	CuffedTime[playerid] = 0;
	SetPlayerSpecialAction(playerid, 0);
    TogglePlayerControllable(playerid, true);
 	HidePlayerActionText(playerid);
	HidePlayerActionBand(playerid);
	ClearAnimations(playerid);//SCM(playerid, -1, "2");
	return 1;
}
stock Parking(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
    if(ParkingEntered[playerid] == -1)
    {
        for(new i; i < sizeof(parking); i++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
        	{
            	SPD(playerid, 1981, DIALOG_STYLE_LIST, !"Выберите этаж!", !"{FFFFFF}1.\n2.", !"Принять", !"Отмена");
                break;
            }
        }
    }
    else
    {
        new i = ParkingEntered[playerid];
        if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z]))
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
			{
				J_SetVehiclePos(carid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
				SetVehicleZAngle(carid, parking[i][pExit_a]);
				LinkVehicleToInterior(carid, 0);
				SetVehicleVirtualWorld(carid, 0);
                //
                SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
                SetPlayerInteriorEx(playerid, 0);
                SetPlayerVirtualWorldEx(playerid, 0);
                ParkingEntered[playerid] = -1;
			}
            else //Когда игрок не в тачке
            {
    			J_SetPlayerPos(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
    			SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
    			SetPlayerInteriorEx(playerid, 0);
    			SetPlayerVirtualWorldEx(playerid, 0);
    			ParkingEntered[playerid] = -1;
            }
        }
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z]))
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
			{
				J_SetVehiclePos(carid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
				SetVehicleZAngle(carid, parking[i][pExit_a]);
				LinkVehicleToInterior(carid, 0);
				SetVehicleVirtualWorld(carid, 0);
                //
                SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
                SetPlayerInteriorEx(playerid, 0);
                SetPlayerVirtualWorldEx(playerid, 0);
                ParkingEntered[playerid] = -1;
			}
            else //Когда игрок не в тачке
            {
    			J_SetPlayerPos(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
    			SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
    			SetPlayerInteriorEx(playerid, 0);
    			SetPlayerVirtualWorldEx(playerid, 0);
    			ParkingEntered[playerid] = -1;
            }
        }
    }
    return 1;
}
stock GarageMovement(playerid)
{
	new veh_id = GetPlayerVehicleID(playerid);
  	if GarageEntered[playerid] == -1 *then
	{
		for new i; i < OWNABLEHOUSES; i++ do
		{
			if IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hGarage_X], HouseInfo[i][hGarage_Y], HouseInfo[i][hGarage_Z]) *then
			{
				if HouseInfo[i][hGarage] *then
				{
					if((!GetString(HouseInfo[i][hOwner], PN(playerid)) || GetPlayerTenant(playerid, i) != 0) && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Это не ваш гараж!");
					SetPlayerVirtualWorldEx(playerid, i + 50), SetPlayerInteriorEx(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
					J_SetPlayerPos(playerid,
					GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X],
					GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y],
					GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z] + 1.0,
					-1);
					SetPlayerInteriorEx(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
					SetPlayerVirtualWorldEx(playerid, i + 50);
					if veh_id *then
					{
						new count = 0;
						foreach(Vehicle, vehid)
						{
							if(GetVehicleVirtualWorld(vehid) != (i+50)) continue;
							count ++;
						}
						if(count == 1 && HouseInfo[i][hKlass] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 1 машина!");

						if(count == 2 && HouseInfo[i][hKlass] == 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 2 машины!");

						if(count == 3 && (HouseInfo[i][hKlass] == 3 || HouseInfo[i][hKlass] == 4)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 3 машины!");

						if(count == 5 && HouseInfo[i][hKlass] == 5) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 5 машин!");

						SetVehiclePos(veh_id,GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y],
						GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z]+1.0);
						LinkVehicleToInterior(veh_id, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
						SetVehicleVirtualWorld(veh_id, i + 50);
						PutPlayerInVehicleEx(playerid, veh_id, 0);
					}
					return GarageEntered[playerid] = i;
				}
				else continue;
			}
		}
	}
	else
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_Y], GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_Z]))
		{
			if(GetPlayerVirtualWorld(playerid) == (GarageEntered[playerid] + 50))
			{
				if(veh_id)
				{
					SetVehiclePos(
						veh_id,
						HouseInfo[GarageEntered[playerid]][hGarage_X],
						HouseInfo[GarageEntered[playerid]][hGarage_Y],
						HouseInfo[GarageEntered[playerid]][hGarage_Z] + 0.6
					);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, 0);
				}
				J_SetPlayerPos(playerid, HouseInfo[GarageEntered[playerid]][hGarage_X], HouseInfo[GarageEntered[playerid]][hGarage_Y], HouseInfo[GarageEntered[playerid]][hGarage_Z] + 0.6 );
				SetPlayerInteriorEx(playerid, 0);
				SetPlayerVirtualWorldEx(playerid, 0);
				if(veh_id != 0)	PutPlayerInVehicle(playerid, veh_id, 0);
				GarageEntered[playerid] = -1;
				return 1;
			}
		}
	}
	return 0;
}
stock EnterBiz(playerid,bizid)
{
    if(!IsNoEnterBiz(bizid))
	{
		if(!BizInfo[bizid][bLock])
		{
			new hour, minute;
			gettime(hour, minute, _);
			if((BizInfo[bizid][bState] == 22 && Second_Hand[FindSecondHandBizID(bizid)][sSaleHour] == hour+1 && Second_Hand[FindSecondHandBizID(bizid)][sSaleStatus]) && minute >= 40) return SCM(playerid, COLOR_GREY, !"Секонд-хенд сейчас закрыт, проходит подготовка к распродаже (в течении 20 минут открытие).");
		    if(GetPlayerVirtualWorld(playerid)!=0)return 1;
			BizEntered[playerid] = bizid;
			SetPlayerInteriorEx(playerid,BizInfo[bizid][bInt]);
			SetPlayerVirtualWorldEx(playerid,(bizid+100));
			J_SetPlayerPos(playerid,BizInfo[bizid][bExit_X],BizInfo[bizid][bExit_Y],BizInfo[bizid][bExit_Z]);
	    	TogglePlayerControllable(playerid,false);
	    	SetCameraBehindPlayer(playerid);
			BizInfo[bizid][bVisit] ++;
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} В этот бизнес невозможно войти, потому что он не имеет интерьера.");
	return 1;
}
stock IsNoEnterBiz(bizid)
{
	if(BizInfo[bizid][bExit_X] == 0.0 && BizInfo[bizid][bExit_Y] == 0.0 && BizInfo[bizid][bExit_Z] == 0.0) return 1;
	return 0;
}
stock CheckBed(playerid)
{
	if(PI[playerid][pHeal] != false)
	{
	    if(PlayerLie[playerid])
	    {
	    	new bed = PlayerBed[playerid];
	    	PlayerLie[playerid] = false;
	    	TogglePlayerControllable(playerid,true);
			HealInfo[PlayerBed[playerid]][hOwnerID] = INVALID_PLAYER_ID;
			PlayerBed[playerid] = -1;
			UpdateDynamic3DTextLabelText(HealText[bed],-1,!"Койка {33AA33}[Свободна]\n{AFAFAF}Нажмите N чтобы занять.\nНеобходимо начать лечение!");
		}
	}
	return 1;
}
stock ShowLoginDialog(playerid)
{
	DisableAllRaceCPs(playerid);
	ResetDynamicCPs(playerid);
	ClearChatForPlayer(playerid);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Добро пожаловать на {EBA225}%s Role Play{FFFFFF}\n\nВведите свой пароль\n{FFFFFF}Попыток для ввода пароля: {28910B}%i",
		ServerCFG[server_name], gPlayerLogTries{playerid});
		
	SPD(playerid, 2, 3, !"Авторизация", str_1, !"Принять", !"Контекст");
	return 1;
}
stock ShowJobInfo(playerid = INVALID_PLAYER_ID, job = 1)
{
    str_1[0] = EOS;
	switch(job)
	{
		case 1:
		{
			strcat(str_1,!"{4F943D}Работа 'Водитель автобуса'{FFFFFF}\n");
			strcat(str_1,!"Для начала вам надо арендовать свободный автобус. Стоимость его аренды\n");
			strcat(str_1,!"зависит от установленой цены губернатором штата.\n");
			strcat(str_1,!"После того как вы арендуете автобус ,вам необходимо установить цену за проезд и\n");
			strcat(str_1,!"выбрать рейс по какому будете передвигатся. После того как вы выбрали рейс\n");
			strcat(str_1,!"вам надо будет ездить по чекпоинтам и останавлеватся на остановках.\n");
			strcat(str_1,!"За 1 чекпоинт вы будете получать столько денег, сколько установит губернатор!\n\n");
			strcat(str_1,!"Удачной работы!");
		}
		case 3:
		{
			strcat(str_1,!"{4F943D}Работа 'Развозчик продуктов'{FFFFFF}\n");
			strcat(str_1,!"Для начала вам необходимо найти свободный транспорт для перевозки продуктов, для этого введите /gps - По работе - Продуктовозы.\n");
			strcat(str_1,!"После того как вы нашли свободный автомобиль вам необходимо закупить продукты. Закупить их можно на складе фермы - даст возможность развозить продукты по закусочным,\n");
			strcat(str_1,!"или на складе разгрузочной станции, что даст возможность развозить продукты по магазинам 24/7 , магазинам аксесуаров, магазинам одежды и другим.\n");
			strcat(str_1,!"Стоимость закупки и перепродажи может быть разная, так как их стоимость регулирует губернатор и владельцы бизнесов, которые в свою очередь делают заказы на закупку.\n");
			strcat(str_1,!"Чтобы найти заказчика продуктов используйте /orderlist и выберите нужный вам бизнес. Обратите внимание что некоторые бизнесы могут быть не багаты, и они не смогут оплатить\n");
			strcat(str_1,!"заказ, по этому следите за состоянием их банка. Так же будьте внимательны, ведь закусочные не принимают груз из разгрузочных станций!\nСледите за выгодой при продажи, ибо вы можете уйти в минус.");
			strcat(str_1,!"Для того чтобы заработать еще, закупайте продукты заново и ищите предпринимателей!\n\n");
			strcat(str_1,!"Удачной работы!\n");
		}
		case 4:
		{
			strcat(str_1,!"{4F943D}Работа 'Механик' - на фирме{FFFFFF}\n");
			strcat(str_1,!"Суть работы заключается в починке, ремонте двигателя , а также доставки транспорта в автомастерскую.\n");
			strcat(str_1,!"Для того чтобы начать свою работу , вам необходимо добратся в автомастерскую , ее можно найти с \n");
			strcat(str_1,!"помощью команды /gps. После того переодеться и ждать клиентов для начала работы.\n");
			strcat(str_1,!"При нажатии клавищи ALT у машины в которой сидит игрок , вы начнете ее чинить. Если там не будет игрока,\n");
			strcat(str_1,!"то у вас ничего не получится. Ремонт двигателя сбивает пробег автомобиля и уменьшит шанс поломки авто в дальнейшем.\n");
			strcat(str_1,!"Для того чтобы чинить двигатель , станьте у капота авто и жмите клавишу ALT.\n");
			strcat(str_1,!"С ремонта авто вы получите $1000, за ремонт двигателя $20.000.\n\n");
			strcat(str_1,!"{4F943D}Работа 'Механик' - по городу{FFFFFF}\n");
			strcat(str_1,!"Суть работы заключается в ремонте и заправке транспорта автомобилям, которые застряли в дороге.\n");
			strcat(str_1,!"Для того чтобы начать работу необходимо найти авто махаников, после чего направится в одну из АЗС\n");
			strcat(str_1,!"и заключить с ней контракт, продавая бензин в 2 раза дешевле и получая 50 процентов от прибыли.\n\n");
			strcat(str_1,!"{4F943D}Команды: /filscar - заправить авто. /repare - отремонтировать авто. /contractfill - заключить контракт на работу\n/azsmonitor - Мониторинг заправок");
		}
		case 5:
		{
			strcat(str_1,!"{4F943D}Работа 'Таксист'{FFFFFF}\n");
			strcat(str_1,!"Суть работы заключается в развозке игроков в заданую точку.\n");
			strcat(str_1,!"Чтобы работать вы должны сесть в 1 из авто такси и ввести трафик.\n");
			strcat(str_1,!"После подтверждения все получат сообщение о том, что вы вышли на работу.\n");
			strcat(str_1,!"Если игрок закажет такси{FFFFFF} всем таксистам поступит заказ.\n");
			strcat(str_1,!"Чтобы принять заказ нужно ввести {10F441}/gotaxi [id игрока]{FFFFFF}.\n");
			strcat(str_1,!"После принятия вызова игрок будет отмечен на карте красным маркером.\n");
			strcat(str_1,!"Когда игрок сядет к вам в такси вы будете оповещены об этом.\n");
			strcat(str_1,!"По ходу перевозке будет начисляться сумма проезда.\n");
			strcat(str_1,!"Как только игрок выйдет из такси вы получите деньги.\n\n");
			strcat(str_1,!"Удачной работы!");
		}
		case JOB_ADVOKAT:
		{
			strcat(str_1,!"{4F943D}Работа 'Адвокат'{FFFFFF}\n");
			strcat(str_1,!"Основная цель вашей работы заключается в помощи игрокам которые\n");
			strcat(str_1,!"попали в тюрьму. Вы можете помочь им с сокращением срока за определенную\n");
			strcat(str_1,!"сумму денег, собственно с этого и идет ваша прибыль. Найти заключенных\n");
			strcat(str_1,!"можно в 3 полицейских участках, а именно RCPD, LVPD и SFPD.\n");
			strcat(str_1,!"У вас есть возможность просмотреть базу заключенных чтобы узнать уровень\n");
			strcat(str_1,!"их преступления (чем выше их уровень преступления тем больше плата за сокращение срока)\n");
			strcat(str_1,!"и их местоположение чтобы приехать и помочь им в освобождении.\n\n");
			strcat(str_1,!"{E4AE25}База заключенных - /zeks.\nСократить срок заключенному - /free.\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}
		case 8:
		{
			strcat(str_1,!"{4F943D}Работа 'Крупье'{FFFFFF}\n");
			strcat(str_1,!"Для начала вам надо отправится в само казино,\n");
			strcat(str_1,!"найти его можно с помощью /gps развлечения - казино.\n");
			strcat(str_1,!"В здании будет раздевалка , где вы сможете начать рабочий день.\n");
			strcat(str_1,!"После начала работы , ваша цель будет заключатся в том что , бы\n");
			strcat(str_1,!"следить за игроками которые играют в кости( Cтоять у игрального стола ).\n");
			strcat(str_1,!"За каждую проведенную игру в кости, вы будете получать деньги которые установит казино.\n");
			strcat(str_1,!"Забрать зарплату вы сможете в специальном месте, не подалеку от раздевалки.\n\n");
			strcat(str_1,!"Удачной работы!\n\n");
		}
		case 9:
		{
			strcat(str_1,!"{4F943D}Работа 'Инкассатор'{FFFFFF}\n");
			strcat(str_1,!"Суть работы заключается в сборе денег из определенных точек.\n");
			strcat(str_1,!"Чтобы начать работать переоденьтесь и сядьте в один из грузовиков.\n");
			strcat(str_1,!"Далее едьте на маркер обозначеный на карте.\n");
			strcat(str_1,!"Заберите деньги и положите их в багажник грузовика.\n");
			strcat(str_1,!"Далее едьте на маркер обозначеный на карте (Банк).\n");
			strcat(str_1,!"Заберие деньги из багажника и отнесите их на чекпоинт.\n");
			strcat(str_1,!"Во время работы на вас могут напасть и убить.\n");
			strcat(str_1,!"Если это случится, то убийца сможет забрать деньги.\n\n");
			strcat(str_1,!"Удачной работы!");
		}
		case 11:
		{
		    strcat(str_1,!"{4F943D}Работа 'Дальнобойщик'{FFFFFF}\n");
		    strcat(str_1,!"Суть этой работы заключается в перевозке груза из одной точки в другую.\n");
		    strcat(str_1,!"Садьте в 1 из грузовиков и подъедьте задом к 1 из трейлеров.\n");
		    strcat(str_1,!"Трейлер прицеплен, направляйтесь в точку указаную на карте.\n");
		    strcat(str_1,!"Далее отвозите грузовик назад и получаете деньги.\n\n");
		    strcat(str_1,!"Удачной работы!");
		}
		case 12:
		{
		    strcat(str_1,!"{4F943D}Работа 'Развозчик пиццы'{FFFFFF}\n");
		    strcat(str_1,!"Суть этой работы заключается в перевозке пиццы в жилые дома и другие места.\n");
		    strcat(str_1,!"Для начала переоденьтесь, а потом возьмите пиццу в пункте выдачи.\n");
		    strcat(str_1,!"После сядьте на мопед, положите пиццу в багажник и следуйте указаниям.\n");
		    strcat(str_1,!"За каждую отвезенную пиццу вы будете получать зарплату в размере 550$\n\n");
		    strcat(str_1,!"Удачной работы!");
		}
		case 13:
		{
		    strcat(str_1,!"{4F943D}Работа 'Развозчик металлолома'{FFFFFF}\n");
		    strcat(str_1,!"Суть работы заключается в перевозе спресованного металлолома.\n");
		    strcat(str_1,!"Сядьте в 1 из эвакуаторов и подъедте задом к металлолому.\n");
		    strcat(str_1,!"Отвезите его на отмеченую на карте точку.\n");
		    strcat(str_1,!"Удачной работы!");
		}
		case 14:
		{
		    strcat(str_1,!"{4F943D}Работа 'Мусоровозчик'{FFFFFF}\n");
		    strcat(str_1,!"Суть работы заключается в собирании мусора с контейнеров.\n");
		    strcat(str_1,!"Сядьте в 1 из мусоровозов и подъедте задом к контейнеру.\n");
		    strcat(str_1,!"Подождите пока пройдет загрузка мусора.\n");
		    strcat(str_1,!"Повторяйте это до тех пор пока мусоровоз не заполнится на 100\%.\n");
		    strcat(str_1,!"После загрузки направляйтесь на свалку.\n");
		    strcat(str_1,!"Удачной работы!");
		}
		case 15:
		{
		    strcat(str_1,!"{4F943D}Работа 'Грузчик'{FFFFFF}\n");
	    	strcat(str_1,!"Суть работы заключается в переносе груза с одной точки в другую.\n");
			strcat(str_1,!"В этой работе не используются команды, все выполняется по чекпоинтам.\n");
			strcat(str_1,!"Чтобы начать работу переоденьтесь в раздевалке и идите к вагонам.\n");
			strcat(str_1,!"После станьте на пикап и возьмите мешок, который вы должны отнести на склад.\n");
			strcat(str_1,!"Чтобы получить заработанные деньги нужно переодеться.\n\n");
			strcat(str_1,!"Удачной работы!");
		}
		case 16:
		{
		    strcat(str_1,!"{4F943D}Работа 'Налоговая'{FFFFFF}\n");
		    strcat(str_1,!"Суть работы заключается в сборе налогов с \n");
		    strcat(str_1,!"Недвижемого имущества , Подписания соответствующих документов\n");
		    strcat(str_1,!"и оформления выплат.\n");
		    strcat(str_1,!"Для начала направляйтесь в первый офис налоговой(/gps/Важные места)\n");
		    strcat(str_1,!"После чего вы сможете выбрать работу для себя\n");
		    strcat(str_1,!"Удачной работы!");
		}

		case 17:
		{
		    strcat(str_1,!"{4F943D}Работа 'Начинающий фермер'{FFFFFF}\n");
	    	strcat(str_1,!"В этой работе не используются команды.\n");
			strcat(str_1,!"Все выполняется по чекпоинтам.\n");
			strcat(str_1,!"Чтобы начать работу переоденьтесь в раздевалке.\n");
			strcat(str_1,!"Далее идите на точку обозначеную на мини-карте.\n");
			strcat(str_1,!"Ваша цель переносить обработаные продукты на склад нашей\n");
			strcat(str_1,!"фермы, для того чтобы развозчики продуктов могли их закупить.\n");
			strcat(str_1,!"Чтобы получить заработанные деньги нужно забрать их в здании фермы.\n\n");
			strcat(str_1,!"{99E05A}Обратите внимание! Работая здесь, вы можете развить ветку достижений\n");
			strcat(str_1,!"и получить доступ к новой работе, под названием тракторист.\n");
			strcat(str_1,!"Для этого необходимо заработать 500 очк. работы начинающего фермера.\n\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}

		case 18:
		{
		    strcat(str_1,!"{4F943D}Работа 'Тракторист'{FFFFFF}\n");
	    	strcat(str_1,!"Для начала вам надо найти свободный трактор в одном из ангаров фермы.\n");
			strcat(str_1,!"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,!"передвигатся на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str_1,!"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,!"вы сможете забрать в здании фермы, при окончании работы.\n\n");
  			strcat(str_1,!"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 500 очк.\n");
			strcat(str_1,!"работы фермера, работая начинающим фермером. Набрав 3200 очк. роботы вы откроете доступ\n");
			strcat(str_1,!"к новому виду работы на ферме, под названием 'Комбайнер'\n\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}

		case 19:
		{
		    strcat(str_1,!"{4F943D}Работа 'Комбайнер'{FFFFFF}\n");
	    	strcat(str_1,!"Для начала вам надо найти свободный комбайн в одном из ангаров фермы.\n");
			strcat(str_1,!"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,!"передвигатся на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str_1,!"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,!"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str_1,!"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 3200 очк.\n");
			strcat(str_1,!"работы фермера, работая начинающим фермером или трактористом. Набрав 7000 очк. роботы вы откроете доступ\n");
			strcat(str_1,!"к новому виду работы на ферме, под названием 'Водитель кукурузника'\n\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}

		case 20:
		{
		    strcat(str_1,!"{4F943D}Работа 'Водитель кукурузника'{FFFFFF}\n");
	    	strcat(str_1,!"Для начала вам надо найти свободный кукурузник в одном из ангаров фермы.\n");
			strcat(str_1,!"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,!"передвигатся на показаных вам чекпоинтам на мини-карте, латая над фермами всего штата, удобряя их землю.\n");
			strcat(str_1,!"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,!"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str_1,!"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 7000 очк.\n");
			strcat(str_1,!"работы фермера, работая начинающим фермером или трактористом или комбайнером.\n");
			strcat(str_1,!"Эта работа является вершиной ветки, работника фермы, и она является самой оплачеваемой в нашем штате.\n\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}
		case 21:
		{
		    strcat(str_1,!"{4F943D}Работа 'Строитель'{FFFFFF}\n");
		    strcat(str_1,!"Для начала работы необходимо переодеться в том месте где вы устроились на работу.\n");
	    	strcat(str_1,!"Эта работа будет функционировать до тех пор, пока будет идти строительство\n");
			strcat(str_1,!"концертного зала. По окончанию его постройки рабочих мест не будет!\n\n");
			strcat(str_1,!"Суть вашей работы очень проста, брать материалы и бегать по чекпоинтам,\n");
			strcat(str_1,!"если закончились материалы, то вернуться обратно и начать заново.\n");
			strcat(str_1,!"Чтобы забрать зарплату, необходимо подойти к месту где вы начинали работу и переодется.\n\n\n");
			strcat(str_1,!"{4F943D}Удачной работы!");
		}
		default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы нигде не работаете!");
	}
	return SPD(playerid, 0, 0, "Информация о работе", str_1, !"Дальше", !"");
}
stock TextFind(const text[], const findtext[]) return strfind(text, findtext, false) != -1;
stock ShowPlayerSettings(playerid)
{
	str_1[0] = EOS, f(str_1, sizeof(str_1),\
	 "{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
	 {ff6666}[1] {ffffff}Отображение никнеймов\t{CCCCCC}%s\n\
	 {ff6666}[2] {ffffff}Место спавна\t{CCCCCC}[ изменить ]\n\
	 {ff6666}[3] {ffffff}Отмена показа документов\t{CCCCCC}%s\n\
	 {ff6666}[4] {ffffff}Предложения о продаже/обмене\t{CCCCCC}%s\n\
	 {ff6666}[5] {ffffff}Язык инвентаря / интерфейсов\t{CCCCCC}[ %s ]\n\
	 {ff6666}[6] {ffffff}Damage Informer\t{CCCCCC}{9ACD32}[ включено ]{FFFFFF}\n\
	 {222222}Прочие параметры:\n\
	 {73B461}[»] {ffffff}Безопасность аккаунта\n\
	 {73B461}[»] {ffffff}Настройки персонажа\n\
	 {73B461}[»] {ffffff}Настройки отображения\n\
	 {73B461}[»] {ffffff}Настройки управления\n\
	 {73B461}[»] {ffffff}Настройки инвентаря\n\
	 {73B461}[»] {ffffff}Настройки звука\n\
	 {73B461}[»] {ffffff}Кастомизация интерфейса\n\
	 {73B461}[»] {ffffff}Настройки телефона",\
	 PI[playerid][pShowName] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),\
	 PI[playerid][pShowDokument] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),\
	 PI[playerid][pObmen] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),\
	 PI[playerid][pInvLang] ? ("русский") : ("английский"));
	//154
	//26036
	return SPD(playerid, 26036, 5, !"Личные настройки", str_1, "Выбрать", "Назад");
}
stock Show2UpdateSettings(playerid) return SPDf(playerid, 799, DIALOG_STYLE_TABLIST, !"Выберите пункт", !"Выбор", !"Отмена","\
	{AFAFAF}Шумахер [3lvl]\t| %s\n\
	{AFAFAF}Халявщик [4lvl]\t| %s\n\
	{AFAFAF}Бизнесмен [1lvl]\t| %s\n\
	{AFAFAF}Планшет [1lvl]\t| %s\n\
	{AFAFAF}Вечный Car Skill [1lvl]\t| %s\n\
	{AFAFAF}Больше недвижимости [1lvl]\t| %s\n\
	{AFAFAF}Нет налогам [1lvl]\t| %s\n\
	{AFAFAF}Семь бизнесов [1lvl]\t| %s\n\
	{AFAFAF}Семейный сертификат [1lvl]\t| %s\n\
	{AFAFAF}Пенсионное страхование [1lvl]\t| %s\n\
	{AFAFAF}Выгодная рассрочка [3lvl]\t| %s\n\
	{AFAFAF}Дополнительный слот транспорта [1lvl]\t| %s\n\
	{AFAFAF}Дополнительный слот дома [1lvl]\t| %s\n\
	{AFAFAF}Помощь\t ",\
	PI[playerid][pImprovement][0] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [850000$]"),\
	PI[playerid][pImprovement][1] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [800 AZ coin's]"),\
	PI[playerid][pImprovement][2] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2000 AZ coins`s]"),\
	PI[playerid][pImprovement][3] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2000000$]"),\
	PI[playerid][pImprovement][4] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется ( /donate )"),\
	PI[playerid][pImprovement][5] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2300 AZ coin's]"),\
	PI[playerid][pImprovement][6] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [1500 AZ coin's]"),\
	PI[playerid][pImprovement][7] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [25000.0 BTC]"),\
	PI[playerid][pImprovement][8] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется ( покупка в страховой компании )"),\
	PI[playerid][pImprovement][9] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется ( покупка в страховой компании )"),\
	PI[playerid][pImprovement][10] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [600 000 000$]"),\
	PI[playerid][pAddSlotCar] != 0 ? ("{9ACD32}Куплено ( Докупить )") : ("{FF6347}Не имеется [50 000 000$]"),\
	PI[playerid][pAddSlotHouse] != 0 ? ("{9ACD32}Куплено ( Докупить )") : ("{FF6347}Не имеется [60 000 000$]"));
stock Show3UpdateSettings(playerid)
{
	return SPDf(playerid, 800, 2, !"Выберите пункт", !"Выбор", !"Отмена", "\
	{AFAFAF}Объявления (/ad/благотворительность/Эдвард)\t\t%s\n\
	{AFAFAF}Рация (/r)\t\t\t%s\n\
	{AFAFAF}Департамент (/d)\t\t%s\n\
	{AFAFAF}Действия админов\t\t%s\n\
    {AFAFAF}Сообщения об убийствах\t%s\n\
	{AFAFAF}VIP чат (/vr)\t\t\t%s\n\
	{AFAFAF}Рация семьи\t\t\t%s\n\
	{AFAFAF}Сообщения спавна авто\t\t\t%s",!PI[playerid][pNewsChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pRacia] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pDepChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pAdmAction] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pKillShow] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pVipChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pFamilyChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pRespawnChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"));
}
stock ResetSpawnInfo(playerid, team)
{
	new skin = GetSkinOfPlayer(playerid);
	SetSpawnInfo( playerid, 255, skin, global_OrgInfo[team][g_oSpawnInfo][0], global_OrgInfo[team][g_oSpawnInfo][1], global_OrgInfo[team][g_oSpawnInfo][2], global_OrgInfo[team][g_oSpawnInfo][3], 0, 0, 0, 0, 0, 0);
	return 1;
}
stock ValidChar(mailchar)
{
	if((mailchar >= 'A' && mailchar <= 'Z') 	||
	(mailchar >= 'a' && mailchar <= 'z') 	||
	(mailchar >= '0' && mailchar <= '9') 	||
	(mailchar == '-') || (mailchar == '_') 	||
	(mailchar == '@') || (mailchar == '.'))return 1;
	return 0;
}
stock IsValidEMail(const email[])
{
	new bool:Succes = true;
	new bool:Good;
	for(new i;i < strlen(email);i ++)
	{
	    if(email[i] == '@')
		{
		    if(!Good) Good = true;
		    else
			{
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}
stock ShowGrandRegiserDialog(playerid)
{
    //AC_FIX_DIALOG_F(playerid, 1);
    PlayerPlaySound(playerid, 1062, 0, 0, 0);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	return SPDf(playerid, 1, DIALOG_STYLE_INPUT, !"{E88813}(1/4) Пароль", !"Принять", !"Выход", "{FFFFFF}Добро пожаловать, {205CA2}%s{FFFFFF}\n\nЭтот аккаунт {FF6347}не зарегистрирован {FFFFFF}на нашем сервере.\nДля регистрации введите пароль.\nОн будет использоваться для авторизации на нашем сервере.\n\n{BF2F2F}\tПримечания:\n\t- Длина пароля от 6 до 30 символов\n\t- Пароль должен состоять из букв и цифр\n\t- Пароль чувствителен к регистру\n", PN(playerid));
}
stock ShowRegisterDialog(playerid, rstate)
{
	switch(rstate)
	{
	    case 1: ShowGrandRegiserDialog(playerid);
	    case 2: SPD(playerid, 1, DIALOG_STYLE_LIST, !"{E88813}[2/5] Выберите ваш пол","Мужчина\nЖенщина", !"Принять", !"Выход");
		case 3: SPD(playerid, 1, DIALOG_STYLE_LIST, !"{E88813}[3/5] Выберите цвет кожи","{FFCC99}Светлый\n{FFCC99}Тёмный", !"Принять", !"Выход");
		case 4: SPD(playerid, 1, DIALOG_STYLE_LIST, !"[3/4] Откуда вы о нас узнали?","Вкладка 'Hosted'\nОт друзей\nНа порталах/форумах\nВ поисковике\nДругое", !"Принять", !"Выход");
	    case 5: SPD(playerid, 1, DIALOG_STYLE_INPUT, !"{E88813}[5/5] Введите ник пригласившего?","{FFFFFF}Введите ник игрока пригласившего вас.\nПример: {E88813}Carl_Johnson\n", !"Принять", !"Выход");
        default: return 0;
	}
	return 1;
}
stock CheckPassword(const passws[])
{
	for(new i; i < strlen(passws); i ++)
	{
	    if( (passws[i] >= 'a' && passws[i] <= 'z') ||
		(passws[i] >= 'A' && passws[i] <= 'Z') ||
		(passws[i] >= 'а' && passws[i] <= 'я') ||
		(passws[i] >= 'А' && passws[i] <= 'Я') ||
		(passws[i] >= '0' && passws[i] <= '9')  ) continue;
		else return 0;
	}
	return 1;
}
stock CheckInput(const input[])
{
	for(new i;i < strlen(input);i ++)
	{
		switch(input[i])
		{
		    case '0'..'9': continue;
			default: return 0;
		}
	}
	return 1;
}
stock IsAGameNick(const name[])
{
	for(new i;i < strlen(name);i ++)
	{
		switch(name[i])
		{
		    case 'a'..'z', 'A'..'Z', '0'..'9', '.', '_', '[', ']', '(', ')', '$', '@', '-': continue;
		}
	}
	return 1;
}
stock UpdateDorm(i)
{
    new count_gz;
    for(new d; d < lv_id; d++) if(GZInfo[d][gzFracID] == i) count_gz++;

    str_1[0] = EOS, f(str_1, sizeof(str_1), "\
        Количество\n\
        Территорий: {FAAC58}%i{FFFFFF}\n\
        Наркопритонов: {FAAC58}%i{FFFFFF}\n\n\
        Склад %s\n{FAAC58}%s{FFFFFF}\n\n\
        Наркотики: {FAAC58}%i г{FFFFFF}\n\
        Патроны: {FAAC58}%i шт{FFFFFF}", \
        count_gz, 0, \
        global_OrgInfo[i][g_oName], (!OrgInfo[i][oWareHouse] ? "{3FA924}Открыт{FFFFFF}" : "{A92424}Закрыт{FFFFFF}"),\
        OrgInfo[i][oItemCount][1],OrgInfo[i][oItemCount][0]);
	UpdateDynamic3DTextLabelText(DormText[i],-1, str_1);
	return 1;
}
stock PlayerUnleader(playerid = INVALID_PLAYER_ID, Name[] = "None")
{
    if(playerid != INVALID_PLAYER_ID)
    {
        PI[playerid][pRank] = 
        PI[playerid][pMember] =
        PI[playerid][pDCTime] = 0;
        UpdatePlayerDataInt(playerid, "DCTime", 0);
        UpdatePlayerDataInt(playerid, "Member", 0);
        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
        PI[playerid][pRank] = 0;
        UpdatePlayerDataInt(playerid, "Rank", 0);
        SetBumSkin(playerid);
        PI[playerid][pJob] = JOB_NONE;
        UpdatePlayerDataInt(playerid, "Job", 0);
        SetPlayerColor(playerid,TeamColors[0]);
        ResetSpawnInfo(playerid, 0);
        SCM(playerid, COLOR_LIGHTBLUE, !"Вы были сняты со своей должности");
    }
    else mysql_tqueryf(mysql, "UPDATE `accounts` SET `Leader` = '0',`Member` = '0', `Job` = '0',`Rank` = '0' WHERE `NickName` = '%e'", Name);
    return 1;
}
stock IntToStr(value)
{
  	static str[3];
  	valstr(str, value);
  	return str;
}
stock GetNameID(const name[])
{
	extract name -> new player: ID;
	ID = INVALID_PLAYER_ID;
	if(IsPlayerConnectEx(ID)) return ID;
	return INVALID_PLAYER_ID;
}
stock GetHouseStyle(houseid)
{
	for(new i = 1;i < sizeof(GHSPos);i ++)
	{
	    if(floatcomp(GHSPos[i][0], 0.000000)) continue;
	    if(	floatcomp(HouseInfo[houseid][hExit_X], GHSPos[i][0]) &&
	    	floatcomp(HouseInfo[houseid][hExit_Y], GHSPos[i][1]) &&
	    	floatcomp(HouseInfo[houseid][hExit_Z], GHSPos[i][2])) return i;
	}
	return 0;
}
stock CheckFuelDraws(playerid)
{
    for(new i; i < 31; i++) TextDrawHideForPlayer(playerid, FillTD[i]);
	PlayerTextDrawHide(playerid, PlayerFuelBar[playerid]);
	PlayerTextDrawHide(playerid, FuelCostDraw[playerid]);
	PlayerTextDrawHide(playerid, KindFuelDraw[playerid]);
	IsPlayerFillMenu[playerid] = false;
	return 1;
}
stock UpdateFuels(biz)
{
	if(BizInfo[biz][bState] == 6)
	{
		for(new i;i < sizeof(GoFuel);i ++)
		{
			new benz = BizInfo[biz][bProducts];
			new Float:cost = BizInfo[biz][bEnterPrice];
			f(str_2, sizeof(str_2),"\
			{FAAC58} Заправка \n\n\
			{FFFFFF}Введите {73B461}/fill {FFFFFF}около бензокалонки\n\
			Стоимость 1-го литра: {73B461}$%.1f\n\
			{FFFFFF}Всего топлива: {73B461}%iл.", cost, benz);
			UpdateDynamic3DTextLabelText(FuelText[i],-1, str_2);
		}
	}
	return 1;
}
stock IsAFexistMail(const Mail[])
{
	static mail[50];
	mail[0] = EOS;
	mysql_escape_string(Mail, mail);
    str_2[0] = EOS, f(str_2, sizeof(str_2), "SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `Mail` = '%s' LIMIT 1", mail);
	new Cache:result = mysql_query(mysql, str_2);
	new num = cache_num_rows();
	cache_delete(result);
	return num;
}
stock IsAArendCar(carid)
{
	if(carid >= ArendInfo[0][aRendCarID] && carid <= ArendInfo[sizeof(ArendInfo)-1][aRendCarID]) return 1;
	return 0;
}
stock GetArendCarID(carid) return carid - ArendInfo[0][aRendCarID];

stock IsPlayerInIncVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new carid = GetPlayerVehicleID(playerid);
		if(vTemp[carid][vJob] == 9) return 1;
	}
	return 0;
}
stock ProxDetector(Float:radius, playerid, const text[], color)
{
	//if(chatbubble != false) SetPlayerChatBubble(playerid, text, color, 20.0, 10000);
	static Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(i,radius,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) SCM(i, color, text);
	return 1;
}
stock IsValidPassport(playerid)
{
	/*mysql_queryf_fix(mysql, "SELECT `playerUID` FROM `passports` WHERE `playerUID` = '%i' LIMIT 1", true, PI[playerid][pID]);
	new s = cache_num_rows();
	cache_delete(result1);
	return s;*/
	return IsPlayerLoadPassport[playerid];
}
stock OnRegPass(playerid)
{
	mysql_tqueryf(mysql, "INSERT INTO `passports` (`playerUID`,`Seria`,`Number`,`Sex`,`D_Day`,`D_Month`,`D_Year`,`DB_Day`,`DB_Month`,`DB_Year`,`McState`) VALUE ('%i','%i','%i','%i','%i','%i','%i','%i','%i','%i','-1')", PI[playerid][pID], PassInfo[playerid][psSeria], PassInfo[playerid][psNumber], PassInfo[playerid][psSex], PassInfo[playerid][psDate][0], PassInfo[playerid][psDate][1], PassInfo[playerid][psDate][2], PassInfo[playerid][psDateBirth][0], PassInfo[playerid][psDateBirth][1], PassInfo[playerid][psDateBirth][2]);
	IsPlayerLoadPassport[playerid] = false;
	PlayerLoadPassport[playerid] = true;
	UpdatePlayerQuest(playerid, 0);
}
stock OnLoadPass(playerid)
{
	str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT * FROM `passports` WHERE `playerUID` = '%i' LIMIT 1", PI[playerid][pID]);
	mysql_tquery(mysql, str_1, "MysqlLoadPassport", "i", playerid);
	return 1;
}
stock OnPlayerRegister(playerid, password[])
{
	str_1[0] = EOS;
	mysql_escape_string(password, str_1);
    bcrypt_hash(str_1, 12, "OnSafePassword_Create", "ii", playerid, 0);
 	return 1;
}
public: OnSafePassword_Create(playerid, type)
{
	static hash[BCRYPT_HASH_LENGTH];
	bcrypt_get_hash(hash);
    switch(type)
    {
        case 0:
        {
            str_1[0] = EOS, f(str_1, sizeof(str_1), "%d-%d-%d", global_year, global_month, global_day);
            
            str_2[0] = EOS, f(str_2, sizeof(str_2), "\
				INSERT INTO `"TABLE_ACCOUNTS"` (`NickName`,`Password`,`RegIP`,`Level`,`Sex`,`Race`,`Referal`,`Mail`,`Money`,`VirMoney`,`datareg`) \
				VALUES ('%s', '%s','%s', '%i', '%i', '%i', '%s', 'No Mail Adress', '%i', '%i', '%s');",\
            	PN(playerid), hash, PlayerIP(playerid), LVLBONUS, RegSex[playerid], RegRace[playerid], RegReferal[playerid], MONEYBONUS, DONATEBONUS, str_1);
            	
            mysql_tquery(mysql, str_2, "OnPlayerRegisterMysql", "i", playerid);
        }
        case 1: mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `Password` = '%s' WHERE `ID` = '%i' LIMIT 1;", hash, PI[playerid][pID]);
    }
    return 1;
}
public: OnSafePassword_Auth(playerid)
{
	new bool:match = bcrypt_is_equal();
    //printf("%i", match);
	if(match != false)
	{
		IsPlayerLogged[playerid] = true;
		str_q[0] = EOS,f(str_q, sizeof(str_q), "SELECT * FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", PN(playerid));
		mysql_tquery(mysql, str_q, "CheckPlayer", "i", playerid);
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.azpotify.stopTrackEvent', '[ null ]');");
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[ null ]');");
	}
	else
	{
		gPlayerLogTries{playerid} --;
		if(gPlayerLogTries{playerid} <= 0) return J_Kick(playerid, 7740);
	  	ClearChatForPlayer(playerid);
		if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.auth.sendPasswordError', '[ \"Данные от аккаунта неверны или аккаунт не существует!\" ]');", 13);
		}
		else
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Добро пожаловать на {EBA225}%s Role Play{FFFFFF}\n\n{FF0000}Неверный пароль!\n{FFFFFF}Попыток для ввода пароля: {28910B}%i",
				ServerCFG[server_name], gPlayerLogTries{playerid});
				
			SPD(playerid, 2, 3, !"Авторизация", str_1, !"Принять", !"Контекст");
		}
	}
    return 1;
}
stock GetPlayerID(const name[])
{
    new num;
    foreach_player(i)
    {
        if(GetString(PN(i), name)) num = i;
        else num = INVALID_PLAYER_ID;
    }
    return num;
}
stock RenamePlayer(playerid, name[])
{
	if(PI[playerid][pRank] == 10) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Лидер не может сменить ник!");
	if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Админ не может сменить ник!");
	if(GetPlayerHouses(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можите сменить ник пока у вас есть дом!");
	if(GetPlayerBiz(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можите сменить ник пока у вас есть бизнес!");
	if(GetNumberCars(playerid) != 0) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можите сменить ник пока у вас есть автомобиль!");
	static oldname[MAX_PLAYER_NAME];
	oldname[0] = EOS;
	GetPlayerName(playerid, oldname, 24);
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `NickName` = '%s' WHERE `ID` = '%i' LIMIT 1", name, PI[playerid][pID]);
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Referal` = '%s' WHERE `Referal` = '%s'",  oldname, name);
	mysql_tqueryf(mysql, "INSERT INTO `namehistory` (`nh_owner`,`nh_oldname`,`nh_date`) VALUES ('%i','%s',NOW())", PI[playerid][pID], oldname);
	SCM(playerid, COLOR_ACHAT, !"[Информация] {FFFFFF}По скольку вы сменили имя, вам необходимо сделать новый паспорт и мед-карту.");
	return J_Kick(playerid, 231);
}
stock SavePlayer(playerid,type=0)
{
    if(!IsPlayerLogged[playerid]) return 0;
	switch(type)
	{
	    case 0: //global
		{
		    mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `HP` = '%f', `ARM` = '%f', `MuteTime` = '%i',\
			`FMuteTime` = '%i', `Demorgan` = '%i',`TelBalance` = '%i', `FamilyMute` = '%i',\
			`LastIP` = '%s', `ChestTime` = '%i', `ChestTimeDonate` = '%i', `Corona` = '%i', `VirMoney` = '%i',\
		 	`Member` = '%i', `Rank` = '%i', `FWarns` = '%i',`RCBlock` = '%i', `Reputation` = '%i',`VKCoins` = '%.6f', `pRub` = '%i' WHERE `ID` = '%i' LIMIT 1",\
			PlayerHealthAC[playerid],\
			PI[playerid][pArmour],\
			PI[playerid][pMuteTime],\
			PI[playerid][pFMuteTime],\
			PI[playerid][pDemorgan],\
			PI[playerid][pTelBalance],\
			PI[playerid][pFamilyMute],\
			PI[playerid][pLastIP],\
			PI[playerid][pChestTime],\
		    PI[playerid][pChestTimeDonate],\
			PI[playerid][pCorona],\
		    PI[playerid][pVirMoney],\
		    PI[playerid][pMember],\
		 	PI[playerid][pRank],\
		    PI[playerid][pFWarns],\
		  	PI[playerid][pRCBlock],\
		    PI[playerid][pReputation],\
		    PI[playerid][pVKCoins],\
			PI[playerid][pRub],\
			PI[playerid][pID]);
			str_1[0] = EOS;
			for(new i; i < 7; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pVKBoost][i]);
			UpdatePlayerDataStr(playerid, "VKBoost", str_1);
			UpdatePlayerDataInt(playerid, "CasinoTime", PI[playerid][pCasinoTime]);
		}
		case 1: //bonus
		{
			str_1[0] = EOS;
			for(new i; i < sizeof player_BonusInfo; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, player_BonusStatus[playerid][i]);
			UpdatePlayerDataStr(playerid, "BonusStatus", str_1);
			UpdatePlayerDataInt(playerid, "BonusMinute", player_BonusMinute[playerid]);
			UpdatePlayerDataInt(playerid, "global_BonusMinute", global_BonusMinute[playerid]);
			UpdatePlayerDataInt(playerid, "FracBonus", PI[playerid][pFracBonus]);
		}
		case 2: //astats
		{
			if(!PI[playerid][pAdmin]) return 0;
		}
		case 3: //online
		{
			new Second, Minute, Hour;
			mysql_tqueryf(mysql,"DELETE FROM `onlineinfo` WHERE `Name` = '%s' LIMIT 1", PN(playerid));
			gettime(Hour, Minute, Second);
			mysql_tqueryf(mysql,"INSERT INTO `onlineinfo` (`Name`, `IP`, `Second`, `Minute`, `Hour`, `Day`,`Month`,`Year`) VALUE ('%s','%s','%i','%i','%i','%i','%i','%i')", PN(playerid), PlayerIp[playerid], Second, Minute, Hour, global_day, global_month, global_year);
		}
		case 4: //lic
		{
			/*str_q2[0] = EOS;
			for(new i; i < 9; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pLicense][i]);
			UpdatePlayerDataStr(playerid, "License", str_q2);*/
		}
		case 5: //rewards
		{
			str_q2[0] = EOS;
		    for(new i; i < 10; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pRewards][i]);
   			UpdatePlayerDataStr(playerid, "Rewards", str_q2);
			str_q2[0] = EOS;
			for(new i; i < 10; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pRewardsComplete][i]);
			UpdatePlayerDataStr(playerid, "RewardsComplete", str_q2);
		}
		case 6: //skill
		{
			str_q2[0] = EOS;
			for(new i; i < 9; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pSkill][i]);
			UpdatePlayerDataStr(playerid, "Skill", str_q2);
		}
		case 7: //bankf
		{
			str_q2[0] = EOS;
			for(new i; i < 2; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pBank][i]);
			UpdatePlayerDataStr(playerid, "Bank", str_q2);
		}
	}
	return 1;
}
stock UpdatePlayerDataInt(playerid, const field[], data)
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%i' WHERE `ID` = '%i' LIMIT 1;", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataFloat(playerid, const field[], Float:data, const type[] = "%f")
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	if(!strcmp(type, "%.2f", true)) mysql_tqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%.2f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	else mysql_tqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataStr(playerid, const field[], const data[])
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1;", field, data, PI[playerid][pID]);
	return 1;
}
stock OnPlayerLogin(playerid)
{
	Iter_Add(PlayerPlayersStream[playerid], playerid);
	if(IsPlayerLauncher(playerid) == -1) SetPlayerName(playerid, PN(playerid));
	PlayerTimerID[playerid] = SetTimerEx("UpdatePlayer", 240, 1, "i", playerid);
    str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
    mysql_tquery(mysql, str_q, "OnPlayerLoginMysql", "i", playerid);
    return 1;
}
stock LoadOnlineInfo(playerid)
{
	mysql_tqueryf(mysql,"DELETE FROM `onlineinfo` WHERE `Name` = '%s' LIMIT 1",PN(playerid));
	return 1;
}
stock IsARPPN(const Name[])
{
	if(strlen(Name)>19) return 0;
	if(!strlen(Name)) return 0;
	new simb_, num;
	static RP_Name[2][24];
	for(new i;i < strlen(Name);i ++)
	{
	    if(Name[i] == '_') {simb_ ++; num=i;}
	}
	if(simb_ != 1) return 0;
	strmid(RP_Name[0], Name, 0, num-1);
	strmid(RP_Name[1], Name, num+1, strlen(Name));
	if( !IsAGoodPN(RP_Name[0]) || !IsAGoodPN(RP_Name[1]) ) return 0;
	return 1;
}
stock IsAGoodPN(const Name[])
{
	new NameChars;
	if(strlen(Name) < 2) return 0;
	if(Name[0] < 'A' || Name[0] > 'Z') return 0;
	for(new i = 1;i < strlen(Name);i ++)
	{
	    if(Name[i] < 'a' || Name[i] > 'z')
		{
		    if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
		    else return 0;
		}
	    if(NameChars > 1) return 0;
	}
	return 1;
}
stock IsAFireGun(gunid) return (gunid >= 22 && gunid <= 38);
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z)
{
	if(gpss{playerid} == true && IsPlayerToRaceID[playerid] != -1 && IsPlayerRacePresentCount[playerid] != 0) return 0;
	if(!(!PI[playerid][pAdmin]) && !(!ADuty{playerid})) SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Для быстрого телепорта используйте /tp_point");
	gpss{playerid}=true;
	if(IsPlayerToRaceID[playerid] != -1 && !IsPlayerRacePresentCount[playerid]) SPD(playerid, 1125, DIALOG_STYLE_INPUT, !"Гонка", !"\
		Введите количество AZ Coins, которое вы хотите поставить!", !"Предложить", !"Закрыть");
		
	gps_position[playerid][0] = x, gps_position[playerid][1] = y, gps_position[playerid][2] = z;
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	GameTextForPlayer(playerid, !"GPS: ON", 0, 1);
	return 1;
}
stock CheckPointForPlayer(playerid, Float:x, Float:y, Float:z)
{
	gpss{playerid}=true;
	gps_position[playerid][0] = x, gps_position[playerid][1] = y, gps_position[playerid][2] = z;
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	return 1;
}
stock GetTeamID(playerid)
{
	if(PI[playerid][pMember] > 0) return PI[playerid][pMember];
	if(PI[playerid][pRank] == 10) return PI[playerid][pRank] == 10;
	return 0;
}
stock SetPlayerVehicleSpeed(vehicleid, mph)
{
	new Float:Vx, Float:Vy, Float:Vz ,Float:speeds, Float:multiple;
	GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
	speeds = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
	if(speeds > 0)
	{
		multiple = (mph / (speeds * 180));
		return SetVehicleVelocity(vehicleid, Vx*multiple, Vy*multiple, Vz*multiple);
	}
	return 1;
}
stock SetVehicleSpeed(vehicleid, speed_kmph)
{
	if(speed_kmph < 1) speed_kmph = 1;
	new Float: v[3], cur_speed_kmph;
	GetVehicleVelocity(vehicleid, v[0], v[1], v[2]);
	cur_speed_kmph = floatround(200.0 * floatsqroot( v[0]*v[0] + v[1]*v[1] + v[2]*v[2]), floatround_floor);
	if(cur_speed_kmph <= 0)
	{
		new Float: zAngle;
		GetVehicleZAngle(vehicleid, zAngle);
		new Float: newVelX = floatcos((zAngle -= 270.0), degrees ) * speed_kmph / 200.0;
		SetVehicleVelocity(vehicleid, newVelX, floattan(zAngle,degrees) * newVelX, 0.0);
		return 1;
	}
	new Float:vMultiplier = float(speed_kmph) / float(cur_speed_kmph);
	SetVehicleVelocity(vehicleid, v[0] * vMultiplier, v[1] * vMultiplier, v[2] * vMultiplier);
	return 1;
}
stock GetPlayerVehicleSpeedZ(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y) * 190.0 );
}
stock GetPlayerVehicleSpeed(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 190.0 );
}
stock PlayerSpeed(playerid)
{
    new Float:X, Float:Y, Float:Z;
    if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
    return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}
stock GetVehicleState(vehicleid) return VehicleState[vehicleid];
stock SetPlayerNameEx(playerid, name[])
{
    SetPlayerName(playerid, name);
	printf("CHANGENAME -> old %s >> NEW %s", PlayerName[playerid], name);
	SetString(PlayerName[playerid], name);
	return 1;
}
stock GetVehicleModelEx(carid) return vTemp[carid][vModel];
stock AutoCarSpawn()
{
 	foreach_player(i)
	{
		if(!PI[i][pRespawnChat])
		{
			SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Уважаемые игроки!");
		    SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Через 60 секунд произойдет респаун транспорта!");
		    SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Займите автомобили, чтобы они не пропали");
		    GameTextForPlayer(i, !"RESPAWN CARS 60 SEC", 0, 1);
		}
	}
    return SetTimer("AutoCarSpawnStart", 60000, false);
}
stock SetBumSkin(playerid)
{
	SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
	return TogglePlayerControllable(playerid,true);
}
//==============================[ TIMER GLOBALS ]===========================//
stock CheckGas()
{
	foreach(new carid: EngineON_Vehicle)
	{
		if(carid > MAX_VEHICLES-1) continue;
		if(vTemp[carid][Fuel] > 0.0)
		{
			if(!IsAVelik(carid) && !Isamoped(carid) && !IsAPlane(carid))
			{
				if(vTemp[carid][Fuel] > 0.0)
				{
					vTemp[carid][Fuel] -= 0.07;
					if(vTemp[carid][Fuel] <= 0.0)
					{
						SetEngineStatus(carid, false, -1);
						NoVehicleFuel(carid);
						vTemp[carid][Fuel] = 0.0;
					}
				}
			}
		}
	}
	return 1;
}
stock CheckNalog()
{
	if(DisableNalog) return 1;
	admin_stop = 300;
    for(new i; i < sizeof(BillboardInfo); i++){
		if(BillboardInfo[i][bHours]) {
            BillboardInfo[i][bHours]--;
			if(!BillboardInfo[i][bHours]) ResetBill(i);
			else SaveBillboard(i);
		}
	}
	foreach(new number: OWNABLECARS)
	{
		if(!IsUniqueCar(CarInfo[number][cModel])) continue;
		if(!GetString(CarInfo[number][cOwner], !"The State"))
		{
			if(!CarInfo[number][cShtraf])
			{
				if(GetString(CarInfo[number][cNumber], ServerCFG[server_number])) CarInfo[number][cNalog] += GLS[1]*2;
				else CarInfo[number][cNalog] += GLS[1];
			}
			else CarInfo[number][cShtraf] += GLS[1];
	  		if(CarInfo[number][cNalog] > 24000 && CarInfo[number][cNalog] < 29999)
			{
       			foreach_player(i)
			    {
			        if(GetString(CarInfo[number][cOwner],PN(i))) SCM(i, COLOR_BLUE, !"Налог за автомобиль превысил уже 70%!");
				}
			}
			if(CarInfo[number][cNalog] > 30000)
			{
				new bool:qu = true;
				foreach(Player,i)
				{
					if(GetString(CarInfo[number][cOwner],PN(i)))
					{
						if(IsPlayerLogged[i])
						{
							SCM(i,COLOR_RED,!"За неоплату счетов у вас отобрали личный автомобиль!");
							GiveMoney(i,CarInfo[number][cCost]/2);
							qu = false;
							SellCar(number, number, i);
							break;
						}
					}
				}
				if(qu)
				{
					mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Money`=`Money`+'%i' WHERE `NickName` = '%s' LIMIT 1", CarInfo[number][cCost]/2, CarInfo[number][cOwner]);
					mysql_tqueryf(mysql, "DELETE FROM `ownable` WHERE `ID` = '%i' LIMIT 1", CarInfo[number][cID]);
				}
			}
		}
	}
//	new Float:rand;
	for(new houseid; houseid < OWNABLEHOUSES; houseid++)
	{
 		if(GetString(HouseInfo[houseid][hOwner], "wipeHouse")) continue;
 		if(GetString(HouseInfo[houseid][hOwner], "The State") && !HouseInfo[houseid][hNalog]) continue;
		if(GetString(HouseInfo[houseid][hOwner], "The State") && HouseInfo[houseid][hNalog] >= LIMITNALOG && HouseInfo[houseid][hNalog] <= LIMITNALOG+4000)
		{
		    HouseInfo[houseid][hNalog] += GLS[2];
		    UpdateDataInt("houses", "Nalog", HouseInfo[houseid][hNalog], HouseInfo[houseid][hID],"=");
			continue;
		}
		HouseInfo[houseid][hNalog] += GLS[2];
		UpdateDataInt("houses", "Nalog", HouseInfo[houseid][hNalog], HouseInfo[houseid][hID],"=");
  		if(HouseInfo[houseid][hNalog] > 49000 && HouseInfo[houseid][hNalog] < LIMITNALOG-1000)
		{
      		foreach_player(i)
		    {
				if(GetString(HouseInfo[houseid][hOwner], PN(i))) SCM(i, COLOR_BLUE, !"Налог за дом/квартиру превысил уже 70%!");
			}
		}
		if(HouseInfo[houseid][hNalog] >= LIMITNALOG)
		{
  			SellHouse(houseid);
			foreach_player(p)
			{
				if(IsPlayerLogged[p])
				{
					if(GetString(HouseInfo[houseid][hOwner], PN(p)))
					{
						SCM(p, COLOR_BLUE, !"За неоплату счетов у вас отобрали дом!");
						GiveMoney(p, HouseInfo[houseid][hCost]);
						SetSpawnPI(p, 0);
					}
				}
			}
     	}
	}
	for(new bizid; bizid < OWNABLEBIZES; bizid++)
	{
		if(BizInfo[bizid][bState] == 30)
		{
			new hour;
			gettime(hour, _, _);
			if(hour < 5 || hour > Second_Hand[FindSecondHandBizID(bizid)][sSaleHour]) Second_Hand[FindSecondHandBizID(bizid)][sSaleStatus] = false;
			else Second_Hand[FindSecondHandBizID(bizid)][sSaleStatus] = true;
			UpdateBiz(bizid);
		}
	    if(GetString(BizInfo[bizid][bOwner], "wipeHouse")) continue;
	    if(GetString(BizInfo[bizid][bOwner], "The State") && !BizInfo[bizid][bNalog]) continue;
		if(GetString(BizInfo[bizid][bOwner], "The State") && BizInfo[bizid][bNalog] >= LIMITNALOG && BizInfo[bizid][bNalog] <= LIMITNALOG+4000)
		{
		    BizInfo[bizid][bNalog] += GLS[3];
		    UpdateDataInt("businesses", "Level", BizInfo[bizid][bNalog], BizInfo[bizid][bID],"=");
			continue;
		}
		BizInfo[bizid][bProducts] += 10;
		BizInfo[bizid][bNalog] += GLS[3];
		UpdateDataInt("businesses", "Level", BizInfo[bizid][bNalog], BizInfo[bizid][bID],"=");
		BizInfo[bizid][bNum] ++;
		if(BizInfo[bizid][bNum] > 23)
	    {
	        BizInfo[bizid][bNum] =
	        BizInfo[bizid][bVisit] =
	        BizInfo[bizid][bWin] = 0;
	    }
	    if(BizInfo[bizid][bNalog] > 49000 && BizInfo[bizid][bNalog] < LIMITNALOG-1000)
		{
      		foreach_player(i)
		    {
		        if(GetString(BizInfo[bizid][bOwner], PN(i)))
		        {
     				SCM(i, COLOR_BLUE, !"Налог за бизнес превысил уже 70%!");
				}
			}
		}
	    else if(BizInfo[bizid][bNalog] >= LIMITNALOG && !GetString(BizInfo[bizid][bOwner], "The State"))
	    {
	        foreach_player(p)
	        {
				if(GetString(BizInfo[bizid][bOwner], PN(p)))
				{
				    SCM(p, COLOR_BLUE, !"За неоплату счетов у вас отобрали бизнес/предприятие!");
				    GiveMoney(p, BizInfo[bizid][bCost]);
				}
			}
			SellBiz(bizid);
	    }
	}
	return 1;
}
stock GiveItemRewards(i)
{
	static text[33]; text[0] = EOS; new amount;
	if(PI[i][pRewards][0] < 5) PI[i][pRewards][0] ++;

    if(PI[i][pRewards][0] >= 5 && !PI[i][pRewardsComplete][0])
    {
        PI[i][pRewardsComplete][0] = 1;
        text = "Отыграть 5 часов";
        amount = 1000;
    }
    if(PI[i][pRewards][1] < 10) PI[i][pRewards][1] ++;
    if(PI[i][pRewards][1] >= 10 && !PI[i][pRewardsComplete][1])
    {
        PI[i][pRewardsComplete][1] = 1;
        text = "Отыграть 10 часов";
        amount = 2000;
    }
    if(PI[i][pRewards][2] < 20) PI[i][pRewards][2] ++;
    if(PI[i][pRewards][2] >= 20 && !PI[i][pRewardsComplete][2])
    {
        PI[i][pRewardsComplete][2] = 1;
        text = "Отыграть 20 часов";
        amount = 4000;
    }
    if(PI[i][pRewards][6] < 15 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i}) PI[i][pRewards][6] ++;
    if(PI[i][pRewards][6] >= 15 && !PI[i][pRewardsComplete][6])
    {
        PI[i][pRewardsComplete][6] = 1;
        text = "Отслужить 15 часов в Армии";
        amount = 2500;
  		if(!GetInvCount(i, 808))
  		{
  			InvAdd(i, 808, 1);
  		}
  	}
    if(PI[i][pRewards][7] < 30 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i}) PI[i][pRewards][7] ++;
    if(PI[i][pRewards][7] >= 30 && PI[i][pRewardsComplete][7] == 0)
    {
        PI[i][pRewardsComplete][7] = 1;
       	text = "Отслужить 30 часов в Армии";
        amount = 5000;
  		if(!GetInvCount(i, 808))
  		{
  			InvAdd(i, 808, 1);
  		}
  	}
    if(PI[i][pRewards][8] < 60 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i})PI[i][pRewards][8] ++;
    if(PI[i][pRewards][8] >= 60 && PI[i][pRewardsComplete][8] == 0)
    {
        PI[i][pRewardsComplete][8] = 1;
       	text = "Отслужить 60 часов в Армии";
        amount = 10000;
  		if(!GetInvCount(i, 808))
  		{
  			InvAdd(i, 808, 1);
  		}
    }
    InvAdd(i, 806, amount, text);
    SCMf(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили ежедневное достижение '%s'", text);
    return SavePlayer(i,5);
}
stock UpdateDialogRare(playerid, dlg)
{
    new amount = RareBoxAmount{dlg};
    switch(dlg)
    {
        case 0: str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Предмет: {FDCF28}Rare Box Blue {cccccc}(в наличии: %iшт.){FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{0080ff}В сундуке Rare Box BLUE:\n{cccccc}- Mercedes S63 Coupe AMG\n- Mercedes G63 AMG\n- Volkswagen Touareg\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}750{FFFFFF} AZ Coins\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", amount);
        case 1: str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Предмет: {FDCF28}Rare Box Red {cccccc}(в наличии: %iшт.){FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ff0000}В сундуке Rare Box RED:\n{cccccc}- Bentley Continental\n- Audi RS6\n- Mercedes E63s AMG (2020)\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}750{FFFFFF} AZ Coins\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", amount);
        case 2: str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Предмет: {FDCF28}Rare Box Yellow {cccccc}(в наличии: %iшт.){FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ffff00}В сундуке Rare Box YELLOW:\n{cccccc}- Lamborghini Urus\n- BMW M8\n- Mercedes GT63s AMG\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}750{FFFFFF} AZ Coins\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", amount);
    }
    return SPD(playerid, 8105, 0, !"", str_1, !"Обмен", !"Отмена");
}
new Text3D:ConceptLuxury,
	ConceptCount;
stock PayDay()
{
	//Profiler_Dump();
	CheckBestRewards();
	ConceptCount = randomEx(5,10);
	UpdateDynamic3DTextLabelTextf(ConceptLuxury, -1, "{FFFF00}[Ларцы Concept Car Luxury]{FFFFFF}\n\nВ наличии: %iшт.\nСледующий завоз в {FFFF00}PayDay\nЦена: 150 Euro\n\n{FFFFFF}Чтобы купить, нажмите ALT", ConceptCount);
	GlobalSavePlayer();
	UpdateTreasure();
	UpdateDataConfig("global_GetTimeIsFinal",global_GetTimeIsFinal);
	GLS[33] = random(900000)+900000;
	UpdateDataConfig("euro",GLS[33]);
	if(bitamount <= 10000)
	{
		bitamount = randomEx(20000,70000);
		UpdateDataConfig("bitamount",bitamount);
	}
	for(new i; i < 3; i++) if(RareBoxAmount{i} <= 50) RareBoxAmount{i} += randomEx(5,25);
	UpdateDynamic3DTextLabelTextf(bittext, 0xFFFF00FF, "[ Операции с криптовалютой ]\n{ffffff}Сейчас в банке: %i BTC\n\nБанк покупает 1 BTC за $%i\nБанк продаёт 1 BTC за $%i\n\n{cccccc}Нажмите N", bitamount, bitprice,bitprice-10000);
	UpdateDynamic3DTextLabelTextf(cretits,-1,"{FFFFFF}\t\tПолучение кредитa\nКредитная ставка {9ACD32}%i{FFFFFF} процента(ов).\nПолучить кредит или начать работу с {9ACD32}депозитом{FFFFFF},\n(Получить/Снять деньги) можно через сотрудника банка!\n\n\tФонд премии инкасаторам: {9ACD32}0${FFFFFF}\nВыделеная премия на одного работника: {9ACD32}0${FFFFFF}\n\n\t\t\t{FFFF00}КУРС ЕВРО: {FFFFFF}%i$",GLS[0],GLS[33]);
 	foreach_player(i)
	{
	    if(IsPlayerLogged[i])
	    {
	        if(PI[i][pAdmin]) SCMf(i, COLOR_YELLOW, "[Информация] {FFFFFF}Вы получили %i AZ за администрирование",20000*PI[i][pAdmin]),PI[i][pVirMoney] += 20000*PI[i][pAdmin];
	        if(PI[i][pVIP][0]) GiveDonate(i,60);
			if(PI[i][pMember]) PI[i][pFracBonus]++;
			new Bank, VIP = PI[i][pVIP][0];
			PI[i][pExp] += 2*GLS[29];
			if(!PI[i][pCredit])
			{
				if((PI[i][pMoney] + PI[i][pBank][0]) < 5000000)
				{
					switch(VIP)
					{
						case 0: Bank = floatround(float(PI[i][pBank][0]) / 1200.0);
						case 1: Bank = floatround(float(PI[i][pBank][0]) / 900.0);
						case 2: Bank = floatround(float(PI[i][pBank][0]) / 800.0);
						case 3:
						{
							PI[i][pExp] += 1*GLS[29];
							Bank = floatround(float(PI[i][pBank][0]) / 800.0);
						}
						case 4:
						{
							PI[i][pExp] += 1*GLS[29];
							Bank = floatround(float(PI[i][pBank][0]) / 700.0);
						}
					}
				}
				switch(VIP)
				{
					case 0: Bank = floatround(float(PI[i][pBank][0]) / 1300.0);
					case 1: Bank = floatround(float(PI[i][pBank][0]) / 1200.0);
					case 2: Bank = floatround(float(PI[i][pBank][0]) / 1100.0);
					case 3:
					{
						PI[i][pExp] += 1*GLS[29];
						Bank = floatround(float(PI[i][pBank][0]) / 1050.0);
					}
					case 4:
					{
						PI[i][pExp] += 1*GLS[29];
						Bank = floatround(float(PI[i][pBank][0]) / 1000.0);
					}
				}
			}
			else
			{
				if(PI[i][pCredit] > 150000 && PI[i][pWanted] < 6)
				{
					PI[i][pWanted] ++*GLS[29];
					J_SetPlayerWantedLevel(i, PI[i][pWanted]);
					SCM(i, COLOR_RED, !"Вы попали в розыск за неоплату кредита!");
				}
				SCMf(i, -1, "Кредитная ставка %i процент [+%i]", GLS[0], ((PI[i][pCredit] * GLS[0]) / 100) / 25);
				PI[i][pCredit] += floatround((float(PI[i][pCredit] * GLS[0]) / 100) / 25);
				UpdatePlayerDataInt(i, "Credit", PI[i][pCredit]);
			}
			new money;
			SCM(i, COLOR_VALIK, !"__________Банковский чек__________");
			if(GetTeamID(i) > 0 && TeamDuty{i})
			{
				money += GLS[29]*OrgSalary[GetTeamID(i)][PI[i][pRank]];
				SCMf(i, -1, "{9ACD32}Организационная зарплата: $%i", GLS[29]*(OrgSalary[GetTeamID(i)][PI[i][pRank]]));
			}
			else if(IsAtFrakcia(i) && !TeamDuty{i}) SCM(i, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы не получили зарплату с организации, так как вы сейчас не в рабочей форме!");
			new deposit;
			if(PI[i][pVIP][0] < 4) deposit = floatround(float(PI[i][pDeposit]) * 0.001);
			else deposit = floatround(float(PI[i][pDeposit]) * 0.0008);
			if(PI[i][pMember] == TEAM_BIKERS) InvAdd(i, 654, 1,0);
			if(PI[i][pDepositChar])
			{
				PI[i][pDepositChar] -= 1*GLS[29];
				UpdatePlayerDataInt(i, "DepositChar", PI[i][pDepositChar]);
			}
			if(PI[i][pDepositChar2])
			{
				PI[i][pDepositChar2] -= 1*GLS[29];
				UpdatePlayerDataInt(i, "DepositChar2", PI[i][pDepositChar2]);
			}
			SCMf(i, -1, "Депозит в банке: $%i", deposit);
			money += Bank*GLS[29];
			SCMf(i, -1, "Сумма к выплате: $%i", money);
			PI[i][pBank][0] += money*GLS[29];
			UpdatePlayerDataInt(i, "Bank", PI[i][pBank][0]);
			SCMf(i, -1, "Текущая сумма в банке: $%i", PI[i][pBank][0]);
			PI[i][pDeposit] += GLS[29]*deposit;
			UpdatePlayerDataInt(i, "Deposit", PI[i][pDeposit]);
			SCMf(i, -1, "Текущая сумма на депозите: $%i", PI[i][pDeposit]);
			if(PI[i][pVIP][0] < 4) GiveDonate(i, 5*GLS[29]);
			SCMf(i, -1, "На данный момент у вас %i-й уровень и %i/%i респектов", PI[i][pLevel], PI[i][pExp], (PI[i][pLevel] + 1) * 4);
			if(PI[i][pWanted] > 0)
			{
				PI[i][pWanted] -= GLS[29];
				J_SetPlayerWantedLevel(i, PI[i][pWanted]);
				SCMf(i, -1, "Уровень розыска: -%i (%i)", GLS[29], PI[i][pWanted]);
			}
			else
			{
				if(PI[i][pZKP] > 100) PI[i][pZKP] = 100;
				else if(PI[i][pZKP] < 0) PI[i][pZKP] = 0;
				if(PI[i][pZKP] < 100)
				{
					PI[i][pZKP] +=GLS[29];
					UpdatePlayerDataInt(i, "ZKP", PI[i][pZKP]);
					SCMf(i, -1, "Законопослушность: +%i (%i)",GLS[29], PI[i][pZKP]);
				}
			}
			SCM(i, COLOR_VALIK, !"__________________________________");
			GameTextForPlayer(i, !"~y~PAYDAY", 3000, 1);
			if(PI[i][pRewards][0] < 5) PI[i][pRewards][0]++;
			if(PI[i][pRewards][0] >= 5 && PI[i][pRewardsComplete][0] == 0)
			{
				PI[i][pRewardsComplete][0] = 1;
				InvAdd(i, 806, 1000);
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили ежедневное достижение 'Отыграть 5 часов'");
			}
			if(PI[i][pRewards][1] < 10) PI[i][pRewards][1]++;
			if(PI[i][pRewards][1] >= 10 && PI[i][pRewardsComplete][1] == 0)
			{
				PI[i][pRewardsComplete][1] = 1;
				InvAdd(i, 806, 2000);
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили ежедневное достижение 'Отыграть 10 часов'");
			}
			if(PI[i][pRewards][2] < 20) PI[i][pRewards][2]++;
			if(PI[i][pRewards][2] >= 20 && PI[i][pRewardsComplete][2] == 0)
			{
				PI[i][pRewardsComplete][2] = 1;
				InvAdd(i, 806, 4000);
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили ежедневное достижение 'Отыграть 20 часов'");
			}
			if(PI[i][pRewards][6] < 15 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i}) PI[i][pRewards][6]++;
			if(PI[i][pRewards][6] >= 15 && PI[i][pRewardsComplete][6] == 0)
			{
				PI[i][pRewardsComplete][6] = 1;
				InvAdd(i, 806, 2500);
				if(!GetInvCount(i, 808))
				{
					InvAdd(i, 808, 1);
				}
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили фракционное достижение 'Отслужить 15 часов в Армии'");
			}
			if(PI[i][pRewards][7] < 30 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i}) PI[i][pRewards][7]++;
			if(PI[i][pRewards][7] >= 30 && PI[i][pRewardsComplete][7] == 0)
			{
				PI[i][pRewardsComplete][7] = 1;
				InvAdd(i, 806, 5000);
				if(!GetInvCount(i, 808))
				{
					InvAdd(i, 808, 1);
				}
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили фракционное достижение 'Отслужить 30 часов в Армии'");
			}
			if(PI[i][pRewards][8] < 60 && PI[i][pMember] == TEAM_ARMY || PI[i][pMember] == TEAM_ARMYSF || PI[i][pMember] == TEAM_ARMYLV && TeamDuty{i})  PI[i][pRewards][8]++;
			if(PI[i][pRewards][8] >= 60 && PI[i][pRewardsComplete][8] == 0)
			{
				PI[i][pRewardsComplete][8] = 1;
				InvAdd(i, 806, 10000);
				if(!GetInvCount(i, 808))
				{
					InvAdd(i, 808, 1);
				}
				SCM(i, COLOR_RED, !"[Достижение]: {FFFFFF}Поздравляем, вы выполнили фракционное достижение 'Отслужить 60 часов в Армии'");
			}
			SavePlayer(i,5);
			if(PI[i][pCredit] > 0 && PI[i][pVIP][0] > 0) SCM(i, COLOR_RED, !"Приемущества VIP не действуют, так как вы имеете долг в центральном банке!");
			if(PI[i][pVIP][0] == 7) GiveDonate(i, 400*GLS[29]);
			if(IsPlayerLauncher(i) != -1) GiveMoney(i, 10000*GLS[29]), InvAdd(i,366,1);
			CheckNextLevel(i);
			new count;
			for(new j; j < sizeof player_BonusInfo; j++) if(player_BonusMinute[i] >= player_BonusInfo[j][bCountMinute] && player_BonusStatus[i][j] != true) count++;
			if(count != 0) SCMf(i, COLOR_VALIK, "[Информация] {FFFFFF}%i призов, доступно для получения в /bonus", count);
		}
		else SCM(i, -1, !"Вы не авторизированы для получения зарплаты");
	}
	//for(new i=1; i < GANGZONES; i++) if(GZInfo[i][gzFracID] > 0) OrgInfo[GZInfo[i][gzFracID]][oBank] += 650;
	return 1;
}
stock CheckNextLevel(playerid)
{
	if(PI[playerid][pExp] >= (PI[playerid][pLevel] + 1)*4)
	{
        while(PI[playerid][pExp] >= (PI[playerid][pLevel]+1)*4)
		{
            PI[playerid][pLevel] ++;
            PI[playerid][pExp] -= (PI[playerid][pLevel] + 1)*4;
			if(PI[playerid][pLevel] == 3)
			{
				str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `Referal` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1;", PN(playerid));
				mysql_tquery(mysql, str_q, "MysqlReferalCheck", "d", playerid);
			}
		}
		SetPlayerScore(playerid,PI[playerid][pLevel]);
		SCMf(playerid,COLOR_VALIK,"Поздравляю! Вы достигли %d-го уровня!",PI[playerid][pLevel]);
	}
	UpdatePlayerDataInt(playerid, "Level", PI[playerid][pLevel]);
	UpdatePlayerDataInt(playerid, "Exp", PI[playerid][pExp]);
	return 1;
}
stock IsVehicleConnected(vehicleid) return (GetVehicleModelEx(vehicleid) != 0);
stock SendAdminsMessage(color, const text[])
{
 	foreach_player(i)
	{
		if(!PI[i][pAdmin] || !ADuty{i}) continue;
		SCM(i, color, text);
	}
	return 1;
}
stock BanPlayer(playerid)
{
	BanName(PN(playerid),"который выдал варн в оффлайне",5,"Заблокирован за получение 3-ех варнов");
	return J_Kick(playerid, 152);
}
stock IsBannedName(name[])
{
	mysql_queryf_fix(mysql, "SELECT `Name` FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", true, name);
	new query = cache_num_rows();
    cache_delete(result1);
	return query;
}
stock BanName(const name[], const namez[], days, const reason[])
{
    mysql_tqueryf(mysql,"INSERT INTO `bannames` (`Name`, `BanAdmin`, `BanSeconds`, `BanReason`) VALUE ('%s', '%s', '%i', '%s')",name, namez, global_time+days*60*60*24, reason);
}
stock BanIP(const IP[])
{
	mysql_tqueryf(mysql,"INSERT INTO `banip` (`IP`) VALUE ('%s')",IP);
	BlockIpAddress(IP, 60000);
}
stock Convert(number, bool:type=false)
{
	static hours, mins, secs, string[7];
	string[0] = EOS;
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(!type)
	{
		if(hours > 0) f(string, sizeof(string), "%i:%02d:%02d", hours, mins, secs);
		else f(string, sizeof(string), "%i:%02i", mins, secs);
	}
	else
	{
		if(hours > 0) f(string, sizeof(string), "%i.%02d.%02d", hours, mins, secs);
		else f(string, sizeof(string), "%i.%02d", mins, secs);
	}
	return string;
}
stock UnBanName(const name[])
{
	mysql_tqueryf(mysql,"DELETE FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	return 1;
}
stock IsAZavodSkin(playerid)
{
	new skin = GetPlayerSkin(playerid);
	return (skin == 259 || skin == 260);
}
enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];
public OnPlayerUpdate(playerid)
{
    if(IsPlayerLogged[playerid])
    {
		if(noclipdata[playerid][cameramode])
		{
			new keyss,ud,lr;
			GetPlayerKeys(playerid,keyss,ud,lr);
			if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100)) MoveCamera(playerid);
			if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
			{
				if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
				{
					StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
					noclipdata[playerid][mode]      = 0;
					noclipdata[playerid][accelmul]  = 0.0;
				}
				else noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr), MoveCamera(playerid);
			}
			noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
		}
        if(PlayerAFKTime[playerid] > 30)
        {
            if(PlayerAFKTime[playerid] <= MAX_AFK_TIME) SCMf(playerid, -1, "{FFFFFF}Вы простояли в AFK {FF9900}%s.",Convert(PlayerAFKTime[playerid]));
            else SCMf(playerid, -1, "{FFFFFF}Вы простояли в AFK {FF9900}%s. {FFFFFF}Из них {FF9900}%s{FFFFFF} не засчитаны!",Convert(PlayerAFKTime[playerid]), Convert(PlayerAFKTime[playerid]-MAX_AFK_TIME));
            SetPlayerChatBubble(playerid, !" ", -1, 30.0, 1);
        }
        PlayerAFK[playerid]++;
        PlayerAFKTime[playerid] = 0;
    }
    return 1;
}
enum defaultboost
{
	nboost[15+6],
	Float:pboost,
};
static const DefaultVKBoost[][defaultboost] = {
	{"Клик мыши",0.000009},
	{"Видеокарта",0.000009},
	{"Стойка видеокарт",0.000039},
	{"Суперкомпьютер",0.000099},
	{"Сервер",0.0003},
	{"Квантовый компьютер",0.001},
	{"Датацентр",0.003}
};
stock SearchBoostForVehicle(vehicleid)
{
	new number = GetVehicleID(vehicleid);
	if(number == INVALID_VEHICLE_ID) return 0;
	new boost;
	for(new i; i < 21; i++) if(ItemsInfo[CarInfo[number][cSlotItem][i]][ItemView] == 24) boost++;
	if(boost != 0) boost += 10;
	return boost;
}
enum walkinfo
{
	namelib[4+10],
	namelib2[20]
};
static const StyleWalkList[][walkinfo] = {
	{"PED","WALK_player"}, // норм
	{"PED","HIT_walk"}, // норм 2
	{"PED","WALK_gang1"}, // ганг
	{"PED","WALK_gang2"}, //ганг 2
	{"PED","WALK_old"}, // old
	{"PED","WALK_fatold"}, // old2
	{"PED","MuscleWalk"}, // серьёзная
	{"PED","WOMAN_walknorm"}, // Женская
	{"PED","woman_run"}, // женская 2
	{"MUSCULAR","MuscleWalk"}, // На пафосе
	{"MUSCULAR","Musclewalk_Csaw"}, // на пафосе 2
	{"PED","Walk_Wuzi"} // с выпрям рукой
};
new bool:TargetOpen[MAX_PLAYERS],
	bool:UseAksSlot_3[MAX_PLAYERS char];
stock pub_healthsharp(playerid)
{
	switch(healthsharp{playerid})
	{
		case 60:
		{
			if(WeaponGetItemCount{playerid} < 7) WeaponGetItemCount{playerid} = 0;
			healthsharp{playerid} = 0;
			if(PlayerHealthAC[playerid] < 100 && GetAcsUpdate(InvAksParams[0][playerid][0]) != 0) J_SetPlayerHealth(playerid, PlayerHealthAC[playerid]+GetAcsUpdate(InvAksParams[0][playerid][0]));
		}
		case 8,16,32,39,51,58:
		{
			if(ShaxtaTimer{playerid} != false)
			{
				ShaxtaTimer{playerid} = false;
				animan{playerid} = false;
				ApplyAnimation(playerid,StyleWalkList[0][namelib],StyleWalkList[0][namelib2],4.0,0,0,0,0,1);
				if(!MineInfo[player_Global_Int[playerid][111]][mineStatus]) return 1;
				new slot2 = player_Global_Int[playerid][111],
					count = UseAksSlot_3{playerid} != false ? 2 : 1;
				str_1[0] = EOS, f(str_1, sizeof(str_1), "%s + %i", BuyMineInfo[MineInfo[slot2][minePoroda]-1][mNameEng],\
				count);
				GameTextForPlayer(playerid, str_1, 0, 1);
				InvAdd(playerid, 361+(MineInfo[slot2][minePoroda]-1), count);
				MineInfo[slot2][mineStatus] = false;
		       	DestroyDynamic3DTextLabel(MineInfo[slot2][mineLabel]);
		        DestroyDynamicObject(MineInfo[slot2][mineObject][0]);
				DestroyDynamicObject(MineInfo[slot2][mineObject][1]);
		        PlayerPlaySound(playerid, 36400, 0.0, 0.0, 0.0);
		        MineInfo[slot2][mineTimer] = SetTimerEx("MineProgressGrow", randomEx(100000, 120000), false, "i", slot2);
			}
			if(GetPlayerUpdateCard[playerid] != false)
			{
				GetPlayerUpdateCard[playerid] = false;
				new slot = player_Global_Int[playerid][80];
				if(slot >= MAX_SLOT_INV) return 1;
				ClearAnimations(playerid);//SCM(playerid, -1, "3");
				TogglePlayerControllable(playerid, true);
				InvPlayerParams[0][playerid][slot]++;
				if(random(101) <= ChanceUpdateVideoCard[InvPlayerParams[0][playerid][slot]])
				{
					SaveInventory(playerid, 0);
					InvSlotUpdate(playerid, slot);
					SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Вы успешно улучшили выбранную видеокарту до %i-го уровня.", InvPlayerParams[0][playerid][slot]);
					GameTextForPlayer(playerid, "~g~Successfully", 1000, 1);
				}
				else
				{
					InvPlayerParams[0][playerid][slot]--;
					SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} При улучшении видеокарты вы допустили техническую ошибку, попробуйте еще раз.");
					GameTextForPlayer(playerid, "~r~Failing", 1000, 1);
				}
			}
		}
		case 5,10,15,20,25,30,35,40,45,50,55: 
		{
			if(PI[playerid][pNoConnect] != false)
			{
				new cops;
				foreach_player(id)
				{
					if((!ProxDetectorS(200.0, playerid, id, 1) && IsACop(id) && IsPlayerLogged[id] && TeamDuty{id})) cops ++;
				}
				if(!cops)
				{
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы скрылись от погони!");
					PI[playerid][pNoConnect] = false;
				}
			}
			if(AksSlot[playerid][0] == 612 && PlayerHealthAC[playerid] < 100) J_SetPlayerHealth(playerid, PlayerHealthAC[playerid]+5);
		}
	}
	healthsharp{playerid}++;
	return 1;
}
new player_timerchat[MAX_PLAYERS char],
    InvTypePlayer[MAX_PLAYERS char];
stock UpdatePlayerOnFoot(playerid)
{
    if(player_timerchat{playerid} == 1)
    {
        ClearAnimations(playerid);//SCM(playerid, -1, "4");
        player_timerchat{playerid} = 0;
    }
    else if(player_timerchat{playerid} > 1) player_timerchat{playerid}--;
	if(pTempBonusMinute{playerid} >= 60)
	{
		player_BonusMinute[playerid]++;
		if(global_GetTimeIsFinal-global_time > 1) 
		{
			if(Iter_Contains(IsPlayerBot, playerid) == 0) global_BonusMinute[playerid]++;
			else if(random(100) > 60) global_BonusMinute[playerid]++;
		}
		pTempBonusMinute{playerid} = 0;
	}
	else pTempBonusMinute{playerid}++;
	if(debug_timer[playerid] != 9999) printf("[UPDATEPLAYERONFOOT] %s(%i) споткнулся на %i", PN(playerid), playerid, debug_timer[playerid]);
	debug_timer[playerid] = 0;
	//safesave quest
	if(player_QuestSave{playerid} == 1) SavePlayerQuest(playerid), player_QuestSave{playerid} = 0;
	else if(player_QuestSave{playerid} != 0) player_QuestSave{playerid}--;
	//safesave interface
	
	if(player_InterfaceSave{playerid} == 1)
	{
		str_1[0] = EOS;
		for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pCustomInterface][i]);
		UpdatePlayerDataStr(playerid, "CustomInterface", str_1);
		player_InterfaceSave{playerid} = 0;
	}
	else if(player_InterfaceSave{playerid} != 0) player_InterfaceSave{playerid}--;
	//
	debug_timer[playerid] = 1;
	//safesave inv
	if(player_InvSave{playerid} == 1)
	{
		for(new i; i < 3; i++) SaveInventory(playerid, i);
		player_InvSave{playerid} = 0;
	}
	else if(player_InvSave{playerid} != 0) player_InvSave{playerid}--;
	//
	debug_timer[playerid] = 2;
	/*if(GetTimerID_PlayerNPC[playerid] != 0 && GetUID_PlayerNPC[playerid] != -1)
	{
		GameTextForPlayer(playerid, 1000, 6, (str_f("%i", GetTimerID_PlayerNPC[playerid])));
		GetTimerID_PlayerNPC[playerid]--;
		if(!GetTimerID_PlayerNPC[playerid]) 
		{
			FCNPC_SetVirtualWorld(GetUID_PlayerNPC[playerid], GetPlayerVirtualWorld(playerid));
			new page = InventPage[playerid];
			if(!page) page = 1;
			HideInventory(playerid);
			IsPlayerOpenInvSecurity[playerid] = true;
			InvTypePlayer{playerid} = 0;
			IsPlayerInvSecurity[playerid] = false;
			ShowInventory(playerid, true, page, 24);
		}
	}*/
	debug_timer[playerid] = 3;
	if(PlayerLoadPassport[playerid] != false && !IsPlayerLoadPassport[playerid]) 
	{
		PlayerLoadPassport[playerid] = false;
		OnLoadPass(playerid);
	}
	debug_timer[playerid] = 4;
	if(GetPlayerLastDamage_tick{playerid} < 255) GetPlayerLastDamage_tick{playerid}++;
	if(EnterCasino{playerid} != false && PI[playerid][pCasinoTime] < 1200 && !PI[playerid][pCasinoUsed]) 
	{
		if(PI[playerid][pCasinoTime] == 1198) SCM(playerid, COLOR_VALIK, "[Информация]{ffffff} Вам стала доступна прокрутка колеса фортуны в казино. (/GPS - Разное - Казино 4 дракона)");
		PI[playerid][pCasinoTime]++;
	}
	debug_timer[playerid] = 5;
	if(GetPVarType(playerid, !"TimerDance") != PLAYER_VARTYPE_NONE && !UseDanceKey[playerid])
	{
		new keys,lr,ud;
		GetPlayerKeys(playerid,keys,ud,lr);
		if(lr == KEY_LEFT) CheckDanceKey(playerid, 0);
		else if(ud == KEY_UP) CheckDanceKey(playerid, 1);
		else if(ud == KEY_DOWN) CheckDanceKey(playerid, 2);
	}
	else if(GetPVarType(playerid, !"TimerDance") != PLAYER_VARTYPE_NONE) CheckDance(playerid);
	pub_healthsharp(playerid);
	debug_timer[playerid] = 7;
	if(!IsPlayerInAnyVehicle(playerid) && FamilyAutoUID[playerid] != -1)
	{
		debug_timer[playerid] = 8;
		if(FamilyAutoResponse[playerid] == 360)
		{
			debug_timer[playerid] = 9;
			FamilyAutoResponse[playerid] = 0;
			new number = GetVehicleID(FamilyAutoUID[playerid]);
			if(number != INVALID_VEHICLE_ID)
			{
				SendFamilyMessagef(PI[playerid][pFamilyMember], "[Family Car] У члена семьи %s[%i] был эвакуирован транспорт '%s' в автопарк семьи.", PN(playerid), playerid, InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name]);
				SCMf(playerid, COLOR_VALIK, "Ваш транспорт %s(carid: %i) был отправлен в семейный паркинг. (сдача автомобиля)",InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name],FamilyAutoUID[playerid]);
				SafeRemoveCar(number, number);
			}
		}
		else FamilyAutoResponse[playerid]++;
	}
	debug_timer[playerid] = 10;
	if(FamilyAutoSpawn[playerid] != false && FamilyAutoUID[playerid] > 0 && GetVehicleID(FamilyAutoUID[playerid]) != INVALID_VEHICLE_ID)
	{
		FamilyAutoSpawn[playerid] = false;
		new number = GetVehicleID(FamilyAutoUID[playerid]);
		CarInfo[number][cOwnerFamilyUID] = PI[playerid][pID];
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1753.3832,438.5953,19.8877)) J_SetVehiclePos(FamilyAutoUID[playerid], 1753.3832,438.5953,19.8877),SetVehicleZAngle(FamilyAutoUID[playerid], 180.0);
		else J_SetVehiclePos(FamilyAutoUID[playerid], -2014.1184,425.2711,34.8857),SetVehicleZAngle(FamilyAutoUID[playerid], 180.0+90);
		PutPlayerInVehicleEx(playerid, FamilyAutoUID[playerid], 0);
	}
	debug_timer[playerid] = 11;
	if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)
	{
		new target = GetPlayerTargetPlayer(playerid);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "%s - %i", PN(target), target);
		#include modules/TEXTDRAWS/target
		SetPlayerChatBubblef(playerid, COLOR_PURPLE, 15.0, 1000,"Смотрит на{FFFFFF} %s", PN(target));
	}
	else if(TargetOpen[playerid])
	{
		TargetOpen[playerid] = false;
		for(new i; i < 9; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	}
	debug_timer[playerid] = 12;
	if(!PlayerAFK[playerid])
	{
		PlayerAFKTime[playerid] ++;
		str_1[0] = EOS;
		static text[64];
		text[0] = EOS;
		strcat(text, "{73B461}AFK {FFFFFF}");
		if(PlayerAFKTime[playerid] <= MAX_AFK_TIME)
		{
			strcat(text, PI[playerid][pPrefixAFK_0]);
			new one = strfind(text, "s");
			if(one != -1)
			{
				strdel(text, one, one+1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", Convert(PlayerAFKTime[playerid]));
				strins(text, str_1, one);
			}
		}
		else if(PlayerAFKTime[playerid] >= 3000)
		{
			strcat(text, PI[playerid][pPrefixAFK_2]);
			new one = strfind(text, "s");
			if(one != -1)
			{
				strdel(text, one, one+1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", Convert(PlayerAFKTime[playerid]));
				strins(text, str_1, one);
			}
		}
		else
		{
			strcat(text, PI[playerid][pPrefixAFK_1]);
			new one = strfind(text, "s");
			if(one != -1)
			{
				strdel(text, one, one+1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", Convert(PlayerAFKTime[playerid]));
				strins(text, str_1, one);
			}
		}
		SetPlayerChatBubble(playerid, text, -1, 30.0, 3000);
	}
	debug_timer[playerid] = 13;
	PlayerAFK[playerid] = 0;
	if(IsPlayerZoneTime{playerid}) IsPlayerZoneTime{playerid}--;
	if(!IsPlayerZoneTime{playerid} && IsPlayerZone[playerid])
	{
		new BitStream:bs = BS_New();
		BS_WriteValue(bs, PR_UINT16, PlayerGangZoneID[playerid]);
		PR_SendRPC(bs, playerid, 85);
		BS_Delete(bs);

		new BitStream:bs_ = BS_New();
		BS_WriteValue(bs_, PR_UINT16, PlayerGangZoneID[playerid]);
		PR_SendRPC(bs_, playerid, 120);
		BS_Delete(bs_);
		IsPlayerZone[playerid] = false;
	}
	debug_timer[playerid] = 14;
	if(PI[playerid][pMoney] < 0)
	{
		ResetPlayerMoney(playerid);
		PI[playerid][pMoney] = 0;
		GiveMoney(playerid, 2000000000);
		SendClientMessage(playerid, COLOR_RED, !"Вы превышаете лимит денег.");
		SendAdminsMessagef(COLOR_RED, "< Money [-] > %s[%i] Подозревается в использование багов", PN(playerid), playerid);
	}
	debug_timer[playerid] = 15;
	for(new i; i < 2; i++)
	{
		if(PI[playerid][pBank][i] < 0)
		{
			PI[playerid][pBank][i] = 2000000000;
			UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank][i]);
			SendClientMessage(playerid, COLOR_RED, !"Вы превышаете лимит денег в банке.");
			SendAdminsMessagef(COLOR_RED, "< Bank [number: %i] > %s[%i] Подозревается в использование багов", i, PN(playerid), playerid);
		}
	}
	debug_timer[playerid] = 16;
	if(Second_Hand_Clother_Select_Time[playerid] && Second_Hand_Clother_Select[playerid] != -1)
	{
		Second_Hand_Clother_Select_Time[playerid]--;
		PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][11], "00:%02d", Second_Hand_Clother_Select_Time[playerid]);
		if(!Second_Hand_Clother_Select_Time[playerid]) ShowSecondHandClotherSelect(playerid, -1);
	}
	for(new i; i < 7; i++) PI[playerid][pVKCoins] += PI[playerid][pVKBoost][i]*DefaultVKBoost[i][pboost];
	UpdateVisubleCoins(playerid);
	UpdateTime(playerid);
	debug_timer[playerid] = 17;
	if(dialogforplayer[playerid]) dialogforplayer[playerid] = false;
	if(PAI[playerid][secondupdate] > 0)
	{
		if(PAI[playerid][secondupdate] <= 1) ExitPAI(playerid);
		else PAI[playerid][secondupdate]--;
		PlayerTDSetStringf(playerid, PAI[playerid][testdrive_td][1], "%s", Convert(PAI[playerid][secondupdate], false));
	}
	debug_timer[playerid] = 18;
	if(PI[playerid][pRCBlock] > 0)
	{
		if(!PI[playerid][pRCBlock])
		{
			PI[playerid][pRCBlock]=0;
			UpdatePlayerDataInt(playerid, "RCBlock", 0);
		}
		else PI[playerid][pRCBlock]--;
	}
	debug_timer[playerid] = 19;
	if(PI[playerid][pAdmin])
	{
		if(RecInfo[playerid][rTime])
		{
			RecInfo[playerid][rTime]--;
			if(!RecInfo[playerid][rTime]) RecInfo[playerid][rOpen] = false;
		}
		if(RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime]) RecInfo[playerid][TimeWork]++, UpdateRecMenu(playerid, RecInfo[playerid][rPlayer]);
	}
	debug_timer[playerid] = 20;
	//2;
	if(!PlayerAFKTime[playerid] && PI[playerid][pPlayedTime] <= 3600) PI[playerid][pPlayedTime]++;
	//7003;
	if(GetMoney(playerid) >= 5000000 && !IsPlayerInAnyVehicle(playerid) && !GetPlayerWeapon(playerid))
	{
		if(PI[playerid][pShowCase] && !IsPlayerAttachedObjectSlotUsed(playerid, 7))
		{
			if(!AksSlot[playerid][7]) SetPlayerAttachedObject(playerid, 7, 1210, 5, 0.299999, 0.099999, 0.000000, 0.000000, -83.000000, 0.000000, 1.0, 1.0, 1.000000);
			else UseItemAttached(playerid, 7);
		}
	}
	else if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
	//7005;
	debug_timer[playerid] = 22;
	if(PI[playerid][pMuteTime] > 0) 
	{ 
		PI[playerid][pMuteTime] --; 
		if(!PI[playerid][pMuteTime]) SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером."); 
	}
	if(PI[playerid][pFMuteTime] > 0) 
	{ 
		PI[playerid][pFMuteTime] --; 
		if(!PI[playerid][pFMuteTime]) SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером."); 
	}
	if(PI[playerid][pFamilyMute] > 0) 
	{ 
		PI[playerid][pFamilyMute] --; 
		if(!PI[playerid][pFamilyMute]) SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером.");
	}
	debug_timer[playerid] = 23;
	//6;
	if(TimeOfCuff[playerid] > 0)
	{
		//7096;
		if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID)
		{
			//7097;
			new cuffid = PlayerOfCuff[playerid];
			//7098;
			if(PlayerOfCuff[cuffid] == playerid)
			{
				//7099;
				if(!Cuffed[playerid] && !Cuffed[cuffid])
				{
					//7100;
					if(ProxDetectorS(3.0, playerid, cuffid, 1))
					{
						//7101;
						TimeOfCuff[playerid] --;
						if(TimeOfCuff[playerid] <= 0)
						{
							//7102;
							ClearAnimations(playerid);//SCM(playerid, -1, "5");
							//7103;
							PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
							PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
							f(str_2,sizeof(str_2)," %s сковал %s",PN(playerid),PN(cuffid));
							ProxDetector(25,playerid,str_2,COLOR_PURPLE);
							SCM(playerid, -1, !"Чтобы расковать игрока введите {33AA33}/uncuff");
							SCM(playerid, -1, !"Чтобы взять игрока под конвой введите {33AA33}/gotome");
							CuffedPlayer(cuffid, 0);
							//7104;
						}
						//7105;
					}
					else CancelCuff(playerid);
				}
				else CancelCuff(playerid);
			}
			else CancelCuff(playerid);
		}
		//7106;
	}
	//7;
	debug_timer[playerid] = 26;
	if(!PI[playerid][pAdmin] || PI[playerid][pVIP][1] < global_time)
	{
		//7107;
		new speed = PlayerSpeed(playerid);
		if(!speed) FullnessTick[playerid] ++;
		else FullnessTick[playerid] += speed/4;
		//7108;
		if(Fullness{playerid} > 0)
		{
			//7109;
			if(FullnessTick[playerid] >= 340)
			{
				//7110;
				new Float:Health = PlayerHealthAC[playerid];
				//7111;
				if(PI[playerid][pVIP][0]>=2)Fullness{playerid}-=1;
				else Fullness{playerid}-=2;
				//7112;
				FullnessTick[playerid] = 0;
				SetFullness(playerid,Fullness{playerid});
				//7113;
				switch(Fullness{playerid})
				{
					case 1..15:
					{
						J_SetPlayerHealth(playerid, Health-2);
						GameTextForPlayer(playerid, !"~r~You are very hungry!", 0, 1);
					}
					case 0:
					{
						J_SetPlayerHealth(playerid, Health-5);
						SetFullness(playerid,5);
						SCM(playerid, -1, !"Вы очень хотите есть, посетите закусочную или купите Хот-Дог!");
						if(PI[playerid][pHospital]>0)
						{
							PI[playerid][pHospital]--;
							UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
							SCM(playerid, COLOR_LIGHTBLUE, !"Ваше здоровье понизилось. Если вы долго не будете есть, вам придётся посетить больницу и платить за лечение!");
						}

					}
				}
				//7114;
			}
			//7133;
		}
		//7134;
		//7139;
	}
	debug_timer[playerid] = 28;
	//9;
	if(CuffedTime[playerid] > 0)
	{
		//7156;
		CuffedTime[playerid] --;
		J_ApplyAnimation(playerid, !"CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
		//7157;
		if(CuffedTime[playerid] <= 0)
		{
			//7158;
			new tazer = TazerPlayer[playerid];
			if(tazer != INVALID_PLAYER_ID)
			{
				//7159;
				TazerPlayer[playerid] = INVALID_PLAYER_ID;
				TazerPlayer[tazer] = INVALID_PLAYER_ID;
			}
			//7160;
		}
		//7161;
	}
	//12;
	if(PI[playerid][pHeal])
	{
		SMD(playerid, "лечит-1");
		//7168;
		PI[playerid][pHealTime] ++;
		//7169;
		if(PI[playerid][pHealTime] >= (8+random(3)))
		{
			//7170;
			SMD(playerid, "лечит");
			new Float:Health = PlayerHealthAC[playerid];
			if(!PlayerLie[playerid])
			{
				//7171;
				if(PI[playerid][pVIP][0]>=2) GameTextForPlayer(playerid, !"+4.0 HP", 0, 1),J_SetPlayerHealth(playerid,Health+4);
				else GameTextForPlayer(playerid, !"+2.0 HP", 0, 1),J_SetPlayerHealth(playerid,Health+2);
				//7172;
			}
			else
			{
				//7173;
				if(PI[playerid][pVIP][0]>=2) GameTextForPlayer(playerid, !"+10.0 HP", 0, 1),J_SetPlayerHealth(playerid,Health+10);
				else GameTextForPlayer(playerid, !"+5.0 HP", 0, 1),J_SetPlayerHealth(playerid,Health+5);
			}
			if(PlayerHealthAC[playerid] >= 100)
			{
				//7175;
				if(PlayerLie[playerid])
				{
					new bed = PlayerBed[playerid];
					ClearAnimations(playerid);//SCM(playerid, -1, "6");
					J_SetPlayerPos(playerid,HealInfo[bed][hCP][0],HealInfo[bed][hCP][1],HealInfo[bed][hCP][2]-0.5);
					CheckBed(playerid);
				}
				//7176;
				PI[playerid][pHeal] = false;
				UpdatePlayerDataInt(playerid, "Heal", 0);
				PI[playerid][pHospCity] = 0;
				UpdatePlayerDataInt(playerid, "HospCity", 0);
				ResetSpawnInfo(playerid, GetTeamID(playerid));
				TogglePlayerControllable(playerid,true);
				SCM(playerid, COLOR_LIGHTBLUE, !"Вы закончили свое лечение.");
				//7177;
			}
			PI[playerid][pHealTime] = 0;
			//7178;
		}
		//7179;
	}
	else
	{
		if(PI[playerid][pDemorgan] > 0)
		{
			//7189;
			PI[playerid][pDemorgan] --;
			GameTextForPlayer(playerid, (str_f("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Jailed %d Sec.", PI[playerid][pDemorgan])), 1000, 3);
			if(!IsPlayerInRangeOfPoint(playerid, 60.0, -799.1370,2831.1130,1501.9896)) PlayerSpawn(playerid);
			if(!PI[playerid][pDemorgan])
			{
				SCM(playerid, COLOR_LIGHTRED, !"Вы вышли из психиатрической больницы!");
				PlayerSpawn(playerid);
			}
			//7190;
		}
		//7191;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 450.0, RcInfo[playerid][rcPosX], RcInfo[playerid][rcPosY], RcInfo[playerid][rcPosZ]))
	{
		if(GetPlayerState(playerid) != 1 && GetPVarInt(playerid, !"rccar"))
		{
			GameTextForPlayer(playerid, (str_f("Return %i/10", RcInfo[playerid][rcTime])), 1000, 4);
			RcInfo[playerid][rcTime]++;
			if(RcInfo[playerid][rcTime] == 10) RemoveRc(playerid);
		}
		else RcInfo[playerid][rcTime] = 0;
		//13;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(IsACar(GetPlayerVehicleID(playerid)) && PI[playerid][pCarSkill] < 70)
		{
			SMD(playerid, "carskill"),SetVehicleSpeed(GetPlayerVehicleID(playerid), GetPlayerVehicleSpeedZ(playerid)-2);
		}
	}
	debug_timer[playerid] = 29;
	if(PI[playerid][pChestTime] > 0) PI[playerid][pChestTime] --;
	if(PI[playerid][pChestTimeDonate] > 0) PI[playerid][pChestTimeDonate] --;
	//20;
	NoRoof(playerid);
	//21;
	debug_timer[playerid] = 30;
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
	{
		//7206;
		new cuffed = GotoInfo[playerid][gtID];
		if(!IsPlayerLogged[cuffed])
		{
			//7207;
			GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
			GotoInfo[playerid][gtTPX] = 0.0;
			GotoInfo[playerid][gtTPY] = 0.0;
			GotoInfo[playerid][gtTPZ] = 0.0;
			GotoInfo[cuffed][gtState] = 0;
			GotoInfo[cuffed][gtStayed] = 0;
			GotoInfo[cuffed][gtGoID] = INVALID_PLAYER_ID;
			GotoInfo[cuffed][gtX] = 0.0;
			GotoInfo[cuffed][gtY] = 0.0;
			GotoInfo[cuffed][gtZ] = 0.0;
			//7208;
		}
		//7209;
	}
	debug_timer[playerid] = 31;
	//22;
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID)
	{
		//7210;
		new goid = GotoInfo[playerid][gtGoID];
		if(IsPlayerLogged[goid])
		{
			//7211;
			new Float:xX, Float:xY, Float:xZ,Float:agle;
			GetPlayerPos(goid, xX, xY, xZ);
			GetPlayerFacingAngle(playerid, agle);
			if(!IsPlayerInRangeOfPoint(playerid, 20, xX, xY, xZ))
			{
				SetPlayerInteriorEx(playerid, GetPlayerInterior(goid));
				SetPlayerVirtualWorldEx(playerid, GetPlayerVirtualWorld(goid));
				SetPlayerFacingAngle(playerid,agle);
				J_SetPlayerPos(playerid, xX,xY,xZ);
			}
			//7212;
			if(GetPlayerState(goid)==1)
			{
				//7213;
				new ANIMATION;
				if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0)
				{
					SetPlayerFaceToPoint(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
					ANIMATION = GoPlayerAnimation(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
				}
				else
				{
					TurnPlayerFaceToPlayer(playerid, goid);
					ANIMATION = GoPlayerAnimation(playerid, xX, xY, xZ);
				}
				//7214;
				if(ANIMATION != 1)
				{
					if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]))
					{
						//7215;
						GotoInfo[playerid][gtStayed] ++;
						if(GotoInfo[playerid][gtStayed] >= 10)
						{
							//7216;
							new Float:xA;
							GetPlayerPos(playerid, xX, xY, xZ);
							GetPlayerFacingAngle(playerid, xA);
							ShiftCords(0, xX, xY, xA, 1.5);
							J_SetPlayerPos(playerid, xX, xY, xZ);
							GotoInfo[playerid][gtStayed] = 0;
						}
						//7217;
					}
					else GotoInfo[playerid][gtStayed] = 0;
					GetPlayerPos(playerid, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]);
				}
				//7218;
			}
			//7219;
		}
		else
		{
			//7220;
			GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
			GotoInfo[playerid][gtX] = 0.0;
			GotoInfo[playerid][gtY] = 0.0;
			GotoInfo[playerid][gtZ] = 0.0;
		}
		//7221;
	}
	//23;
	if(TimetoReturn[playerid] > 0 && BalloonSphere[playerid] != -1)
	{
		if(GetPlayerVehicleID(playerid) != BalloonVehicle[playerid])
		{
			TimetoReturn[playerid] --;
			GameTextForPlayer(playerid, (str_f("Return %d/20",TimetoReturn[playerid])), 1000, 4);
			if(!TimetoReturn[playerid])
			{
				DestroyBalloon(playerid);
				CheckItem(playerid);
			}
		}
		else if(BalloonVehicle[playerid] != INVALID_VEHICLE_ID)
		{
			TimetoReturn[playerid]=0;
			DestroyDynamicArea(BalloonSphere[playerid]);
			BalloonSphere[playerid] = -1;
		}
	}
	else if(TimetoReturn[playerid] > 0)
	{
		TimetoReturn[playerid] --;
		if(!TimetoReturn[playerid])
		{

		}
	}
	else if(TimetoReturn[playerid])
	{
		GameTextForPlayer(playerid, (str_f("Return %i/30", TimetoReturn[playerid])), 1000, 4);
		TimetoReturn[playerid]--;
	}
	else if(TimetoReturn[playerid] > 0 && pTemp[playerid][pArendaCar] != -1)
	{
		//7222;
		TimetoReturn[playerid]--;
		GameTextForPlayer(playerid, (str_f("Return %i/120", TimetoReturn[playerid])), 1000, 4);
		if(!TimetoReturn[playerid])
		{
			//7223;
			GetVehicleHealth(pTemp[playerid][pArendaCar],VehicleHealth[pTemp[playerid][pArendaCar]] );
			if(VehicleHealth[pTemp[playerid][pArendaCar]]<700)
			{
				//7224;
				new moneyki = floatround(1000.0-VehicleHealth[pTemp[playerid][pArendaCar]]);
				if(GetMoney(playerid)>=moneyki)
				{
					//7225;
					GiveMoney(playerid,-moneyki);
					SCMf(playerid,COLOR_LIGHTRED,"Вы заплатили {FFFFFF}%i${FF6347} за порчу государственного имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).",moneyki);
				}
				else if(PI[playerid][pBank][0]>=moneyki)
				{
					//7226;
					//aml(40, playerid, "потерял деньги с банка", "аренда транспорта", moneyki);
					PI[playerid][pBank][0] -= moneyki;
					UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank][0]);
					SCMf(playerid,COLOR_LIGHTRED,"С банковского счета было изьято {FFFFFF}%i${FF6347} за порчу гос. имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).",moneyki);
				}
				else if(PI[playerid][pZKP]>=10)
				{
					//7227;
					PI[playerid][pZKP]-=10;
					UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
					SCM(playerid, COLOR_LIGHTRED, !"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена!");
				}
				//7228;
			}
			//7229;

			switch(vTemp[pTemp[playerid][pArendaCar]][vJob])
			{
				case 11:
				{
					new vehsid = GetVehicleTrailer(pTemp[playerid][pArendaCar]);
					SetVehicleToRespawn(vehsid);
					SetVehicleToRespawn(pTemp[playerid][pArendaCar]);
				}
				default: SetVehicleToRespawn(pTemp[playerid][pArendaCar]);
			}
			SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Ваш рабочий транспорт был отбуксирован на стоянку!");
			//7230;
		}
		//7231;
	}
	else if(TimetoReturn[playerid] > 0 && (pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid))
	{
		//7232;
		TimetoReturn[playerid] --;
		GameTextForPlayer(playerid, (str_f("Return %i/10", TimetoReturn[playerid])), 1000, 4);
		//7233;
		if(!TimetoReturn[playerid])
		{
			//7234;
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Транспорт снят с продажи, из-за того что вы или транспорт покинули место!");
			new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
			autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
			autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
			DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
			DestroyAutoBazarTable(i);
			pTemp[playerid][pSellCar] = -1;
			DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
			if(autoBazarInfo[i][autoBazarType] == 1) {
				UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			}
			else {
				UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			}
			//7235;
		}
		//7236;
	}
	debug_timer[playerid] = 32;
	//24;
	//25;
	debug_timer[playerid] = 34;
	if(Recuffer[playerid]!=INVALID_PLAYER_ID)
	{
		new Float:x,Float:y,Float:z;
		GetPlayerPos(Recuffer[playerid],x,y,z);
		if(!IsPlayerInRangeOfPoint(playerid, 50, x, y, z))
		{
			cuffer[playerid]++;
			GameTextForPlayer(playerid, (str_f("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Free %d/10 Sec.", cuffer[playerid])), 1000, 3);

			if(cuffer[playerid]>=10)
			{
				if(IsPlayerConnectEx(Recuffer[playerid]))SCM(Recuffer[playerid],COLOR_GREY,"[Ошибка] {FFFFFF} Вы отошли слишком далеко от игрока которого сковали!");
				Cuffed[playerid] = false;
				CuffedTime[playerid] = 0;
				TogglePlayerControllable(playerid,true);
				SetPlayerSpecialAction(playerid, 0);
				ClearAnimations(playerid);
				SCM(playerid, COLOR_GREY, !"[Информация]{FFFFFF} Вы успешно избавились от наручников.");
				CheckPlayerGoCuff(Recuffer[playerid]);
				CheckPlayerGoCuff(playerid);
			}
		}
		else if(cuffer[playerid]>0)cuffer[playerid]--;
	}
	debug_timer[playerid] = 35;
	if(PI[playerid][pMaskON]>0)
	{
		debug_timer[playerid] = 36;
		PI[playerid][pMaskON]--;
		if(PI[playerid][pMaskON]==0)
		{
			CheckDuty(playerid);
			SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски истекло, вам пришлось ее выбросить.");
			SetPlayerChatBubble(playerid, !"Выбросил маску", COLOR_PURPLE, 10.0, 5000);
		}
	}
	debug_timer[playerid] = 37;
	if(CasinoPlayerID[playerid] >= 2000 && CasinoPlayerRate[playerid] == -1)
	{
		CasinoPlayerID[playerid] -= 1000;
		if(CasinoPlayerID[playerid] == 1000) 
		{
			ApplyAnimation(playerid, !"BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1),CheckSharpeningSet(playerid);
			CasinoPlayerID[playerid] 				= -1;
			CasinoPlayerRate[playerid]				= -1;
			IsPlayerCasinoPlay{playerid}			= false;
			IsPlayerCasinoPlayBTC{playerid}			= false;
		}
	}
	debug_timer[playerid] = 38;
	if(PI[playerid][pWarns]>0 && PI[playerid][pTimeToLastWarn]+(3600*24*10)<global_time)
	{
		PI[playerid][pWarns]--;
		UpdatePlayerDataInt(playerid, "Warns", PI[playerid][pWarns]);
		PI[playerid][pTimeToLastWarn]=global_time;
		UpdatePlayerDataInt(playerid, "TimeToLastWarn", PI[playerid][pTimeToLastWarn]);
		SCM(playerid, -1, !"Прошло 10 дней и мы спешим вам сообщить что один варн снят.");
	}
	debug_timer[playerid] = 9999;
	return 1;
}
/*		    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593, 441,464,465,501,564:  VehicleState[carid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510,15882,15883: VehicleState[carid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[carid] = VEHICLE_STATE_CAR;*/
enum infoupgradespeed
{
	type_model,
	speed_model[5],
	velocity_model[5]
};
static const SpeedUpgradeInfo[][infoupgradespeed] = {
	{VEHICLE_STATE_BOAT, {20, 60, 120, 180, 240}, {22, 29, 40, 48}},
	{VEHICLE_STATE_PLANE, {25, 60, 120, 180, 240}, {22, 33, 44, 55}},
	{VEHICLE_STATE_BIKE, {20, 60, 120, 180, 240}, {25, 27, 29, 33}},
	{VEHICLE_STATE_VELIK, {20, 60, 120, 180, 240}, {10, 15, 20, 25}},
	{VEHICLE_STATE_MOPED, {20, 60, 120, 180, 240}, {13, 30, 37, 45}},
	{VEHICLE_STATE_TRAIN, {20, 60, 120, 180, 240}, {0, 0, 0, 0}},
	{VEHICLE_STATE_CAR, {20, 60, 120, 180, 240}, {17, 33, 43, 53}}
};
stock SearchUpgradeSpeed(playerid, carid)
{
	static veh_state;
	for(new i; i < sizeof SpeedUpgradeInfo; i++) 
	{
		if(SpeedUpgradeInfo[i][type_model] == VehicleState[carid]) 
		{
			veh_state = i;
			break;
		}
	}
	for(new i=4; i >= 0; i--) 
	{
		if(GetPlayerVehicleSpeed(playerid) <= SpeedUpgradeInfo[veh_state][speed_model][i])
		{	
			printf("%i",SpeedUpgradeInfo[i][velocity_model]);
			return SpeedUpgradeInfo[i][velocity_model];
		}
	}
	return 0;
}
stock UpdatePlayerInCar(playerid)
{
	if(GetPlayerState(playerid) != 2) return 1;
	if(playerTimer_VehicleFill[playerid] != false)
	{
		PlayerInterface_GasStation(playerid);
		playerTimer_VehicleFill[playerid] = false;
	}
	if(besttime[playerid] >= 500)
	{
		if(GetPVarInt(playerid, !"besttime") < global_time)
		{
			SetPVarInt(playerid, !"besttime", global_time + 11);
			besttime[playerid] = 0;
			if(PI[playerid][pCarSkill] > 99) return 1;
			PI[playerid][pCarSkill] += 5;
			if(PI[playerid][pCarSkill] > 100) PI[playerid][pCarSkill] = 100;
			UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
			SCMf(playerid, COLOR_LIGHTBLUE, "Ваш навык вождения повышен! Теперь ваш навык: {FFFFFF}%i/100", PI[playerid][pCarSkill]);
		}
	}
	else besttime[playerid]++;
	new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
	if(GetEngineStatus(carid) && GetPlayerVehicleSpeed(playerid) > 10 && UseTurbo[playerid])
	{
		if(TwinTurbo[carid][Engine] && UseTurbo[playerid] && TwinTurbo[carid][cStatus])
		{
			new boost = SearchBoostForVehicle(carid);
			if(number != INVALID_VEHICLE_ID)
			{
				if(CarInfo[number][cSlotItem][20] == 4935) boost = boost+(SearchUpgradeSpeed(playerid, carid)*2);
				else boost = boost+(SearchUpgradeSpeed(playerid, carid));
			}
			else boost = boost+(SearchUpgradeSpeed(playerid, carid));
			if(boost != 0) SetVehicleSpeed(carid, GetPlayerVehicleSpeed(playerid) + boost + 10);
		}
	}
	if(GetVehicleModel(carid) != 494 && GetVehicleModel(carid) != 433 && GetVehicleModel(carid) != 548)
	{
		new Float:hpveh;
		GetVehicleHealth(carid, hpveh);
		if(hpveh < 300.0) J_SetVehicleHealth(carid, 350.0);
	}
	if(GetEngineStatus(carid))
	{
		new speed = GetPlayerVehicleSpeed(playerid);
		if(pTemp[playerid][pLimit] > 0 && !PI[playerid][pCustomInterface][customInterface_speed])
		{
			if(pTemp[playerid][pLimit] < speed)
			{
				SetPlayerVehicleSpeed(carid,pTemp[playerid][pLimit]);
				if(!PI[playerid][pTypeSpeed]) PlayerTDSetStringf(playerid, speeddraw[playerid][4], "~y~%03i", pTemp[playerid][pLimit]);
				else PlayerTDSetStringf(playerid, speed_prodvin[playerid][33], "~y~%03i", pTemp[playerid][pLimit]);
			}
			else
			{
				if(!PI[playerid][pTypeSpeed]) PlayerTDSetStringf(playerid, speeddraw[playerid][4], "~y~%03i", speed);
				else PlayerTDSetStringf(playerid, speed_prodvin[playerid][33], "~y~%03i", speed);
			}
		}
		else
		{
			if(!PI[playerid][pTypeSpeed]) PlayerTDSetStringf(playerid, speeddraw[playerid][4], "%03i", speed);
			else PlayerTDSetStringf(playerid, speed_prodvin[playerid][33], "%03i", speed);
		}
		if(GetPVarInt(playerid, !"pSpeed") == 1) UpdateSpeed(playerid, !PI[playerid][pTypeSpeed] ? (false) : (true));
		SMD(playerid, "timercarplayer");
		if(IsAOwnableCar(number))
		{
			vTemp[carid][VehicleMilage] += float(speed)/20.0;
			if(vTemp[carid][VehicleMilage] >= 3000.0)
			{
				vTemp[carid][VehicleMilage] = 0.0;
				CarInfo[number][cMilage] += 1.0;
				str_2[0] = EOS, f(str_2, sizeof(str_2), "%08.0f", CarInfo[number][cMilage]);
				if(!PI[playerid][pTypeSpeed] && !PI[playerid][pCustomInterface][customInterface_speed]) PlayerTextDrawSetString(playerid, speeddraw[playerid][6], str_2);
				else if(!PI[playerid][pCustomInterface][customInterface_speed]) PlayerTextDrawSetString(playerid, speed_prodvin[playerid][12], str_2);
				if(CarInfo[number][cMilage] > 700.0)
				{
					switch(random(76))
					{
						case 0..55: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель этой машины необходимо отремонтировать. Возможна поломка машины! ((Используйте /gps важные места - автомастерская))");
						case 56..60: SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас задымелся двигатель! Почините двигатель у механика и отремонтируйте двигатель.((Используйте /gps важные места - автомастерская))"), J_SetVehicleHealth(carid,250);
						case 61..75: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель этой машины необходимо отремонтировать. Возможна поломка машины! ((Используйте /gps важные места - автомастерская))");
					}
				}
			}
		}
		//
		new Float:vehhealth; GetVehicleHealth(carid, vehhealth);
		if(VehicleHealth[carid] < vehhealth) SetVehicleHealth(carid,VehicleHealth[carid]);
		if(VehicleHealth[carid] > vehhealth) VehicleHealth[carid] = vehhealth;
		CheckEnterCar(playerid, carid);
		new Float:VHealth;
		GetVehicleHealth(carid,VHealth);
		if(VHealth < 500)
		{
			//
			UnEngine[carid] ++;
			//7055;
			if(UnEngine[carid] >= random(10))
			{
				//7056;
				if(GetVehicleModel(carid) != 494)
				{
					//7057;
					SetEngineStatus(carid, false, playerid);
					str_2[0] = EOS, f(str_2,sizeof(str_2),"* Двигатель заглох (( %s ))",PN(playerid));
					ProxDetector(25.0,playerid,str_2,COLOR_PURPLE);
					UnEngine[carid] = 0;
					//7058;
					if(VHealth < 400)
					{
						SCM(playerid, COLOR_GREY, !"Ваш двигатель сильно поврежден. Для его починки вызовите механика!");
						SCM(playerid, COLOR_GREY, !"Чтобы вызвать механика, используйте телефон");
					}
				}
			}
		}
		if(IsATaxi(carid))
		{
			//7066;
			new id = GetVehicleSeat(carid, 0);
			//7067;
			if(id != INVALID_PLAYER_ID && PI[id][pJob] == JOB_TAXI)
			{
				//7068;
				TaxiDistance[playerid] += GetPlayerVehicleSpeed(id);
				//7069;
				if(TaxiDistance[playerid] >= 650)
				{
					//7070;
					if(!PlayerAFKTime[playerid] && !PlayerAFKTime[id])
					{
						//7071;
						if(PI[playerid][pMoney] <= TaxiPrice[playerid])
						{
							//7072;
							RemovePlayerFromVehicle(playerid);
							SCM(playerid, COLOR_GREY, !"У вас не осталось денег на оплату такси!");
							SetPlayerMoney(playerid,0);
							PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
							PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
							TextDrawHideForPlayer(playerid, BoxTaxi1);
							TextDrawHideForPlayer(playerid, BoxTaxi2);
							TextDrawHideForPlayer(playerid, Taximonitor);
							TextDrawHideForPlayer(playerid, TaxiServ);
							TextDrawHideForPlayer(playerid, TaxiDol);
							TaxiPrice[id] = 0;
							TaxiDistance[id] = 0;
							//7073;
						}
						//7074;
						TaxiDistance[playerid] = 0;
						TaxiPrice[playerid] += TaxiTarif[id];
						PlayerTDSetStringf(playerid, TaxiDraw[playerid], "%i", TaxiPrice[playerid]);
						//7075;
						new cash;
						for(new i = 1; i < 4; i ++)
						{
							new seat = GetVehicleSeat(carid, i);
							if(seat != INVALID_PLAYER_ID) cash += TaxiPrice[seat];
						}
						//7076;
						PlayerTDSetStringf(id, TaxiDraw[id], "%i",cash);
						//7077;
					}
					//7078;
				}
				//7079;
			}
		}
		//7080;
	}
	return 1;
}
/*public: FCNPC_OnVehicleEntryComplete(npcid, vehicleid, seatid)
{
	if(!seatid) FCNPC_RemoveFromVehicle(npcid);
	IsNPCEnterVehicle[npcid] = false;
}
stock ResetFCNPC(npcid)
{
	FCNPC_StopAttack(npcid);
	FCNPC_StopAim(npcid);
	FCNPC_Stop(npcid);
	IsNPCAttack[npcid] = -1;
}*/
stock SavePlayerQuest(playerid)
{
	str_1[0] = EOS, str_2[0] = EOS;
	for(new i; i < sizeof global_Quest; i++)
	{
		f(str_1, sizeof(str_1), "%s%i,", str_1, player_Quest[playerid][qProgress][i]);
		f(str_2, sizeof(str_2), "%s%i,", str_2, player_Quest[playerid][qStatus][i]);
	}
	UpdatePlayerDataStr(playerid, "qProgress", str_1);
	UpdatePlayerDataStr(playerid, "qStatus", str_2);
}
public: UpdatePlayer(playerid)
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 1;
	/*if(GetUID_PlayerNPC[playerid] != -1 && GetTimerID_PlayerNPC[playerid] == 0)
	{
		if(FCNPC_IsDead(GetUID_PlayerNPC[playerid]) == true)
		{
			if(FCNPC_IsValid(GetUID_PlayerNPC[playerid]) == true)
			{
				new carid = GetPlayerVehicleID(playerid),
					npcid = GetUID_PlayerNPC[playerid],
					Float:Bot_pos[3];
				//fix
				if(carid < 1)
				{
					if(FCNPC_GetVehicleID(npcid) != INVALID_VEHICLE_ID) FCNPC_ExitVehicle(npcid);
					else //safe
					{
						if(IsNPCEnterVehicle[npcid] != false) IsNPCEnterVehicle[npcid] = false;
						FCNPC_GetPosition(npcid, Bot_pos[0], Bot_pos[1], Bot_pos[2]);
						new Float:Distance = GetPlayerDistanceFromPoint(playerid, Bot_pos[0], Bot_pos[1], Bot_pos[2]);
						if(Distance > 50) //tp
						{
							if(!(!FCNPC_IsAttacking(npcid)) || IsNPCAttack[npcid] != -1) ResetFCNPC(npcid);
							GetPlayerPos(playerid, Bot_pos[0], Bot_pos[1], Bot_pos[2]);
							SetPositionNPC(playerid, npcid, Bot_pos, true);
						}
						//attack
						else if(IsNPCAttack[npcid] != -1)
						{
							Distance = GetPlayerDistanceFromPoint(IsNPCAttack[npcid], Bot_pos[0], Bot_pos[1], Bot_pos[2]);
							if(Distance < 1)
							{
								if(!(!FCNPC_IsMovingAtPlayer(npcid, IsNPCAttack[npcid]))) FCNPC_Stop(npcid);
								if(PlayerAFKTime[IsNPCAttack[npcid]] > 50) ResetFCNPC(npcid);
								FCNPC_SetAngleToPlayer(npcid, IsNPCAttack[npcid]);
								FCNPC_AimAtPlayer(npcid, IsNPCAttack[npcid], true, 1000, true, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, FCNPC_ENTITY_MODE_AUTO, FCNPC_ENTITY_CHECK_ALL);
								FCNPC_MeleeAttack(npcid, 1000, true);
							}
							else if(Distance < 30) 
							{
								FCNPC_StopAttack(npcid);
								FCNPC_StopAim(npcid);
								FCNPC_GoToPlayer(npcid, IsNPCAttack[npcid], 1, 0.72, 2, FCNPC_MOVE_PATHFINDING_Z, 0.0, true, 0.5, 1.0);
							}
							else ResetFCNPC(npcid);
						}
						//default
						else if(Distance > 3.1) FCNPC_GoToPlayer(npcid, playerid, 1, Distance > 10 ? 0.37 : 0.68, Distance > 10 ? 1 : 2, FCNPC_MOVE_PATHFINDING_Z, 0.0, true, 1.5, 2.5);
						else FCNPC_Stop(npcid),FCNPC_SetAngleToPlayer(npcid, playerid);
					}
				}
				else if(!IsNPCEnterVehicle[npcid])
				{
					ResetFCNPC(npcid);
					new count;
					foreach(new i: PlayerInVehicle[carid]) count++;
					if(count > 1) return 1;
					if(!count) count = 1;
					FCNPC_EnterVehicle(npcid, carid, count, FCNPC_MOVE_TYPE_RUN);
					IsNPCEnterVehicle[npcid] = true;
				}
			}
		}
		else FCNPC_Respawn(GetUID_PlayerNPC[playerid]);
	}*/
	//printf("%i", playerid);
	if(pPickupID[playerid] != 0)
	{
		new pickupid = pPickupID[playerid];
		new Float:pos_x, Float:pos_y, Float:pos_z;
		Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_X, pos_x);
		Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Y, pos_y);
		Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Z, pos_z);
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos_x, pos_y, pos_z)) pPickupID[playerid] = 0;
	}
	if(InvTimer{playerid} != 255)
	{
		new Keys, UPDOWN, RIGHTANDLEFT;
		GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
		switch(InvTimer{playerid})
		{
			case 0:
			{
				if(RIGHTANDLEFT == KEY_LEFT)
				{
					if(!PI[playerid][pInvColor]) PI[playerid][pInvColor] = sizeof(InvColor) - 1;
					PI[playerid][pInvColor]--;
				}
				else if(RIGHTANDLEFT == KEY_RIGHT)
				{
					if(PI[playerid][pInvColor] == sizeof(InvColor) - 1) PI[playerid][pInvColor] = 0;
					PI[playerid][pInvColor]++;
				}
				if(RIGHTANDLEFT == KEY_LEFT || RIGHTANDLEFT == KEY_RIGHT) ChangeInvColor(playerid, PI[playerid][pInvColor]);
			}
			case 1:
			{
				if(RIGHTANDLEFT == KEY_LEFT) InvPosChange(playerid, 0);
				else if(RIGHTANDLEFT == KEY_RIGHT) InvPosChange(playerid, 1);
				if(UPDOWN == KEY_UP) InvPosChange(playerid, 2);
				else if(UPDOWN == KEY_DOWN) InvPosChange(playerid, 3);
			}
		}
	}
	if(GetTickCount() - PlayerTick[playerid] < 950) return 0;
	PlayerTick[playerid] = GetTickCount();
	UpdatePlayerOnFoot(playerid), UpdatePlayerInCar(playerid);
	return 1;
}
stock SendMuteMessage(playerid) return SCMf(playerid, COLOR_GREY, "Вы заглушены. Оставшееся время заглушки %i секунд.", PI[playerid][pMuteTime]);
stock SendMuteFamilyMessage(playerid) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас бан семейного чата! Осталось %i секунд!", PI[playerid][pFamilyMute]);
stock CancelCuff(playerid)
{
    if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID)
	{
		new targetid = PlayerOfCuff[playerid];
	    PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	    if(PlayerOfCuff[targetid] == playerid)
		{
	    	TimeOfCuff[targetid] = 0;
	    	PlayerOfCuff[targetid] = INVALID_PLAYER_ID;
		}
		ClearAnimations(playerid);
	}
	return 1;
}
stock GetJobName(jobid)
{
	static jobname[10+12];
	switch(jobid)
	{
	    case 1: jobname = "Водитель автобуса";
	    case 2: jobname = "Детектив";
	    case 3: jobname = "Развозчик продуктов";
	    case 4: jobname = "Механик";
	    case 5: jobname = "Таксист";
	    case 6: jobname = "Адвокат";
	    case 7: jobname = "Фермер";
	    case 8: jobname = "Крупье";
	    case 9: jobname = "Инкассатор";
	    case 10: jobname = "Наркодиллер";
	    case 11: jobname = "Дальнобойщик";
	    case 12: jobname = "Развозчик пиццы";
	    case 13: jobname = "Развозчик металлолома";
	    case 14: jobname = "Мусорщик";
	    case 15: jobname = "Грузчик";
	    case 16: jobname = "Работник Налоговой";
	    case 17: jobname = "Начинающий фермер";
	    case 18: jobname = "Тракторист";
	    case 19: jobname = "Комбайнер";
	    case 20: jobname = "Водитель кукурузника";
	    case 21: jobname = "Строитель";
	    default: jobname = "Безработный";
	}
	return jobname;
}
stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
{
	if(!RecInfo[playerid][rOpen]) SetSpawnInfo(playerid, 1, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);
	return 1;
}

stock MoneyStr(value, string[], length = sizeof string) {
    format(string, length, "%i", value < 0 ? -value : value);
    for (new i = strlen(string); (i -= 3) > 0;) {
        if(string[i] != '\0' && '0' <= string[i] <= '9') {
            strins(string, ".", i, length);
        } else {
            return;
        }
    }


    if (value < 0) {
        strins(string, "-", 0, length);
    }


    return;
}
stock MoneyTwoStr(value, string[], length = sizeof string) {
    format(string, length, "%i", value < 0 ? -value : value);
    for (new i = strlen(string); (i -= 3) > 0;) {
        if(string[i] != '\0' && '0' <= string[i] <= '9') {
            strins(string, " ", i, length);
        } else {
            return;
        }
    }


    if (value < 0) {
        strins(string, "-", 0, length);
    }


    return;
}
stock GetItemName(giveplayerid, slot, bool:ya=false)
{
	static str[34+25];
	new item_ = PI[giveplayerid][pInvItem][slot];
	if(ya != false && slot < 8) item_ = AksSlot[giveplayerid][slot];
 	SetString(str, ItemsInfo[item_][ItemName]);
	if(ItemsInfo[item_][ItemView] >= 1 && ItemsInfo[item_][ItemView] <= 8)
	{
		if(ya == true && slot < 8)
		{
			str_q[0] = EOS, GetColorAcs(InvAksColor[giveplayerid][slot], false, str_q);
			str_2[0] = EOS, f(str_2, sizeof(str_2), " %s", str_q);
			strcat(str, str_2);
			return str;
		}
		if(InvPlayerColor[giveplayerid][slot] != 0)
		{
			str_q[0] = EOS, GetColorAcs(InvPlayerColor[giveplayerid][slot], false, str_q);
			str_2[0] = EOS, f(str_2, sizeof(str_2), " %s", str_q);
			strcat(str, str_2);
		}
	}
	return str;
}
stock TShowStats(playerid, giveplayerid, dialogid=0)
{
    str_1 = "{ffcc66}[слот] Название\t{ffcc66}Количество\n{ffcc66}Инвентарь:";
    static count[10+10+10];
    count[0] = EOS;
	new num;
    for(new i; i < PI[giveplayerid][pInvCell]; i++)
    {
        if(!PI[giveplayerid][pInvItem][i]) continue;
		if(dialogid != 0) player_Global_Int[playerid][num] = i, num++;
        count[0] = EOS;
        if(PI[giveplayerid][pInvItemAmount][i] > 1) f(count, sizeof(count), "{8F8FDC}[%i шт]", PI[giveplayerid][pInvItemAmount][i]);
        str_mes[0] = EOS;
		if(InvPlayerParams[0][giveplayerid][i] > 0 && ItemsInfo[PI[giveplayerid][pInvItemAmount][i]][ItemView] == 27)
		{
			str_2[0] = EOS;
			GetTimeForInventory(InvPlayerParams[0][giveplayerid][i], str_2, false);
			f(str_mes, sizeof(str_mes), "{8F8FDC}[%s]", str_2);
		}
		else if(InvPlayerParams[0][giveplayerid][i] > 0) f(str_mes, sizeof(str_mes), " (+%i)",InvPlayerParams[0][giveplayerid][i]);
		f(str_1, sizeof(str_1), "%s\n{FFFFFF}[%i] %s\t%s%s", str_1, i, GetItemName(giveplayerid, i), count, str_mes);
    }
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{BEA555}%s [ID:%i]",PN(giveplayerid), giveplayerid);
    return SPD(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, "Выход", "");
}
stock CheckItemFromAks(item_)
{
	if(ItemsInfo[item_][ItemView] >= 1 && ItemsInfo[item_][ItemView] <= 8) return 1;
	return 0;
}
stock ShowStats(playerid, id)
{
    if(!IsPlayerConnectEx(id)) return 0;
	player_Global_Int[playerid][0] = id;
    if(PI[id][pMember]) str_1[0] = EOS,f(str_1, sizeof(str_1),"{FFFFFF}Организация: {B83434}[%s]\n{FFFFFF}Должность: {B83434}%s(%i)",global_OrgInfo[GetTeamID(id)][g_oName],GetRankName(GetTeamID(id),PI[id][pRank]),PI[id][pRank]);
    else str_1[0] = EOS,f(str_1, sizeof(str_1), "{FFFFFF}Организация: {B83434}[Не имеется]");
    str_mes[0] = EOS;
	switch(PI[id][pAllRepl])
    {
        case 0..100: f(str_mes,sizeof(str_mes),"\t{529020}[Нет зависимости]");
        case 101..200: f(str_mes,sizeof(str_mes),"\t{274B09}[Возможна зависимость]");
        case 201..300: f(str_mes,sizeof(str_mes),"\t{D79B23}[1 lvl]");//1 лвл
        case 301..400: f(str_mes,sizeof(str_mes),"\t{D76223}[2 lvl]");//2
        default: f(str_mes,sizeof(str_mes),"\t{961C00}[3 lvl]");//3lvl
    }
	if(PI[id][pFamilyMember] != -1) { if(!GetString(FamilyInfo[pFamilyID(id)][famSlogan], "default")) str_q[0] = EOS,f(str_q, sizeof(str_q), "%s [ID %d]",FamilyInfo[pFamilyID(id)][famName],pFamilyID(id)); }
	else str_q = "Нет";
	new hp = floatround(PlayerHealthAC[id],floatround_ceil);
	str_2[0] = EOS,f(str_2, sizeof(str_2),
    "\
        Текущее состояние счета: \t\t%i az coins\n\n\
		{FFFFFF}Имя: {B83434}[%s]\n\
		{FFFFFF}Пол: {B83434}[%s]\n\
		{FFFFFF}Здоровье: {B83434}[%i/160]\n\
        {FFFFFF}Уровень: {B83434}[%i]\n\
		{FFFFFF}Уважение: {B83434}[%i/%i]\n\
		{FFFFFF}Наличные деньги (SA$): {B83434}[$%i]\n\
		{FFFFFF}Наличные деньги (VC$): {B83434}[$0]\n\
        {FFFFFF}Евро: {B83434}[%i] \n\
		{FFFFFF}BTC: {B83434}[%i]\n\
		{FFFFFF}Номер телефона: {B83434}[%s]\n\
		{FFFFFF}Деньги в банке: {B83434}[$%i]\n\
        {FFFFFF}Деньги на депозите: {B83434}[$%i]\n\
		{FFFFFF}Работа: {B83434}[%s]\n\
		%s\n\
        {FFFFFF}Уровень розыска: {B83434}[%i]\n\
		{FFFFFF}Законопослушность: {B83434}%i/100\n\n\
		{FFFFFF}Защита: {B83434}[-%i%% урона]\n\
		{FFFFFF}Регенерация: {B83434}[%i HP в мин.] \n\
		{FFFFFF}Урон: {B83434}[+%i урона] \n\
		{FFFFFF}Удача: {B83434}[шанс %i%%  на крит.урона]\n\
		{FFFFFF}Макс. HP: {B83434}[+0 макс. HP]{FFFFFF}\n\n\
        {FFFFFF}Предупреждения: {B83434}[%i]\n{FFFFFF}Семейные талоны: {B83434}[%i]\n{FFFFFF}Наркозависимость: {B83434}%i %s\n\
        {FFFFFF}Банковская карта: {B83434}[ %s ]\n{FFFFFF}Статус: {B83434}[%s]\n{FFFFFF}Семья: {B83434}%s\n\
		{FFFFFF}Возможность владеть 5-ю бизнесами: %s\n\
		{FFFFFF}Возможность владеть 4-я домами: %s\n\
		{FFFFFF}Возможность владеть 2-я фермами: {B83434}[НЕТ]{FFFFFF}\n\n\
    ",
        PI[id][pVirMoney],PN(id),PI[id][pSex] ? ("Мужчина") : ("Женщина"),hp, PI[id][pLevel],PI[id][pExp],(PI[id][pLevel] + 1) * 4,
        PI[id][pMoney],GetInvCount(id, 809),GetInvCount(id, 1203),PI[id][pTelNum] ? ("Не имеется") : (IntToStr(PI[id][pTelNum])),PI[id][pBank],
        PI[id][pDeposit],GetJobName(PI[id][pJob]), str_1, PI[id][pWanted], PI[id][pZKP],\
        GetAcsUpdate(InvAksParams[0][id][1]+InvAksParams[0][id][4]),\
        GetAcsUpdate(InvAksParams[0][id][0]),GetAcsUpdate(InvAksParams[0][id][2]+InvAksParams[0][id][3]),GetAcsUpdate(InvAksParams[0][id][5]),
        PI[id][pWarns],GetInvCount(id, 359), PI[id][pAllRepl], str_mes, PI[id][pBankPass] != -1 ? ("Имеется") : ("Не имеется"), viplevel_name[CheckRealLevelVIP(id)],\
        str_q, PI[id][pImprovement][2] ? ("{529020}[Есть]") : ("{B83434}[НЕТ]"), PI[id][pImprovement][5] ? ("{529020}[Есть]") : ("{B83434}[НЕТ]"));
    
    str_1[0] = EOS;
    foreach(new i: OWNABLECARS)
    {
        new carid = OwnableCar[i];
        if(IsPlayerHaveCar(id, i) == 1 && GetIntCars(id) >= 6) str_1[0] = EOS, f(str_1, 500, "\n{AFAFAF}%s(%i)\n",InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],carid),strcat(str_2, str_1);
        else if(IsPlayerHaveCar(id, i) == 1 && GetIntCars(id) <= 5)
        {
            str_1[0] = EOS, f(str_1, sizeof(str_1), "\n{AFAFAF}%s(%i)\nСтатус блокировки: [%s] \nСигнализация: [%s] %s\n",InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],carid,
            CarInfo[i][cLock] == true ? ("Закрыт"):("Открыт"),CarInfo[i][cAlarmON] == true ? ("Включена"):("Выключена"),CarInfo[i][cShtraf] > 0 ? ("{FF6347}[X]"):(""));
            strcat(str_2, str_1);
        }
    }
    if(PI[id][pWarns])
    {
        str_1[0] = EOS, f(str_1, sizeof(str_1), "\n{E83C3C}До слета варна осталось: \t\t%i часов.\n",floatround((PI[id][pTimeToLastWarn]+(3600*24*10)-global_time)/3600,floatround_ceil));
        strcat(str_2, str_1);
    }
    return SPD(playerid, 235, DIALOG_STYLE_MSGBOX, !"Основная статистика", str_2, !"Предметы", !"Закрыть");
}
stock IsANotControllable(playerid) return !(!PlayerLie[playerid] && !Cuffed[playerid] && !CuffedTime[playerid] && Controllable{playerid});
stock ShowSkills(playerid, id, dialogid = 0) return SPDf(id, dialogid, 0, !"Skill-Menu", !"Ок", !"", "\
	{C16060}Навык стрельбы игрока: %s[%i]\n\n\n\
	{FFFFFF}Pistol: \t\t\t{10F441}%i/100%%\n\
	{FFFFFF}Desert Eagle: \t\t{10F441}%i/100%%\n\
	{FFFFFF}ShotGun: \t\t{10F441}%i/100%%\n\
	{FFFFFF}MP5: \t\t\t{10F441}%i/100%%\n\
	{FFFFFF}AK47: \t\t\t{10F441}%i/100%%\n\
	{FFFFFF}M4A1: \t\t\t{10F441}%i/100%%\n\
	{FFFFFF}Sniper: \t\t\t{10F441}%i/100%%\n\
	{FFFFFF}SILENCED: \t\t{10F441}%i/100%%\n\
	{FFFFFF}UZI: \t\t\t{10F441}%i/100%%\n",PN(playerid),playerid,PI[playerid][pSkill][0]/100,PI[playerid][pSkill][2]/100,PI[playerid][pSkill][3]/100,PI[playerid][pSkill][5]/100,PI[playerid][pSkill][6]/100,PI[playerid][pSkill][7]/100,PI[playerid][pSkill][8]/100,PI[playerid][pSkill][1]/100,PI[playerid][pSkill][4]/100);
stock SetPlayerRandomKey(playerid, &key, action = true)
{
    new randkey;
    if(action) randkey = random(2);
    else randkey = random(2);
	switch(randkey)
	{
		case 0:
		{
			key = KEY_WALK;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~SNEAK_ABOUT~");
		}
		case 1:
		{
			key = KEY_JUMP;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_JUMPING~");
		}
	}
	return 1;
}
stock GiveBizMoney(playerid, money, viewbiz=-1)
{
	if(!GetPlayerVirtualWorld(playerid)) BizEntered[playerid] = -1;
	new bizid = BizEntered[playerid];
	if(bizid == -1)
	{
		new Float:pX, Float:pY, Float:pZ;
		GetPlayerPos(playerid, pX, pY,pZ);
		for(new i; i < OWNABLEBIZES; i++)
		{
			if(viewbiz != -1 && BizInfo[i][bState] != viewbiz) continue;
			if(PosToPoint(50.0, pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z])) bizid = i;
		}
	}
	if(!(bizid >= 0 && bizid < MAX_BIZ)) return 0;
	money = money*xFinka;
    BizInfo[bizid][bMoney]+=money;
    BizInfo[bizid][bWin]+=money;
    if(BizInfo[bizid][bMoney] < 0) BizInfo[bizid][bMoney] = 2000000000;
    if(BizInfo[bizid][bWin] < 0) BizInfo[bizid][bWin] = 2000000000;
    new UTC, i = ((global_time+UTC*3600)/86400)%7;
    if(i <= 3) BizInfo[bizid][bDayOfWeak][i+3] += money;
    else if(i >= 4) BizInfo[bizid][bDayOfWeak][i-4] += money;
    return SaveDayOfWeakBiz(bizid);
}
stock PosToPoint(Float:radi, Float:oldposx, Float:oldposy, Float:oldposz, Float:x, Float:y, Float:z)
{
    new Float:tempposx, Float:tempposy, Float:tempposz;
    tempposx = (oldposx -x);
    tempposy = (oldposy -y);
    tempposz = (oldposz -z);
    if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return true;
    return false;
}
stock GiveDonate(playerid, money)
{
	if(!IsPlayerLogged[playerid]) return 0;
	PI[playerid][pVirMoney] += money;
	UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
	GameTextForPlayer(playerid, (str_f("~g~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%iAZ", money)), 3000, 3);
	return 1;
}
stock GiveDonateRub(playerid, money)
{
	if(!IsPlayerLogged[playerid]) return 0;
	PI[playerid][pRub] += money;
	UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
	GameTextForPlayer(playerid, (str_f("~g~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%iRUB", money)), 3000, 3);
	return 1;
}
stock GiveEXP(playerid, count)
{
	if(!IsPlayerLogged[playerid]) return 0;
	PI[playerid][pExp] += count;
	UpdatePlayerDataInt(playerid, "Exp", PI[playerid][pExp]);
	CheckNextLevel(playerid);
	return 1;
}
stock GiveMoney(playerid, money, const reason[] = "default")
{
	if(!IsPlayerLogged[playerid]) return 0;
	PI[playerid][pMoney] += money;
	SetPlayerMoney(playerid,PI[playerid][pMoney]);
	GameTextForPlayer(playerid, (str_f("~g~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%i$", money)), 3000, 3);
	if(!GetString(reason, "default")){ }
	return 1;
}
public: LoadOrgs()
{
	new currenttime = GetTickCount();
	for(new i; i < 10; i ++) RankName[0][i] = "Гражданин";
	for(new i = 1; i <= cache_num_rows();i ++)
	{
		cache_get_int(i-1, "ID", OrgInfo[i][oUID]);
		cache_get_string(i-1, "LeaderUID", OrgInfo[i][oLeaderUID]);
		cache_get_int(i-1, "Bank", OrgInfo[i][oBank]);
		cache_get_string(i-1, "Rank_1", RankName[i][0]);
		cache_get_string(i-1, "Rank_2", RankName[i][1]);
		cache_get_string(i-1, "Rank_3", RankName[i][2]);
		cache_get_string(i-1, "Rank_4", RankName[i][3]);
		cache_get_string(i-1, "Rank_5", RankName[i][4]);
		cache_get_string(i-1, "Rank_6", RankName[i][5]);
		cache_get_string(i-1, "Rank_7", RankName[i][6]);
		cache_get_string(i-1, "Rank_8", RankName[i][7]);
		cache_get_string(i-1, "Rank_9", RankName[i][8]);
		cache_get_string(i-1, "Rank_10", RankName[i][9]);
	}
	return printf("LoadOrgs загрузился за %i ms", GetTickCount() - currenttime);
}

stock SaveOrg(orgid)
{
	mysql_pqueryf(mysql, "UPDATE `orgsinfo` SET `LeaderUID` = '%i', `Bank` = '%i' WHERE `ID` = '%i' LIMIT 1",OrgInfo[orgid][oLeaderUID],OrgInfo[orgid][oBank], orgid);
	return 1;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);
stock GetVehicleKindFuel(carid)
{
	if(!IsAVelik(carid) && !Isamoped(carid) && !IsAPlane(carid)) return 1;
	return 0;
}
stock GetRankName(org, rank)
{
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
stock IsASymbol(const text[], first, End)
{
	if(first < 0) first = 0;
	if(End >= strlen(text)) End = strlen(text) - 1;
	for(new i = first; i <= End; i ++) return 1;
	return 0;
}
stock GetGasStation(playerid)
{
	new gasid = -1;
    if(IsPlayerConnectEx(playerid))
	{
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,20.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        gasid = i;
		        break;
		    }
		}
	}
	return gasid;
}
stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return 1;
	return 0;
}
stock IsAtGasStation(playerid)
{
    if(IsPlayerConnectEx(playerid))
	{
	    new bool:Succes = false;
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,25.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        Succes = true;
		        break;
		    }
		}
		return Succes;
	}
	return 0;
}
stock IsAtGasStationC(carid)
{
	new bool:Succes = false;
	for(new i;i < sizeof(FuelInfo);i ++)
	{
		if(IsVehicleInRangeOfPoint(carid,10.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		{
			Succes = true;
			break;
		}
	}
	return Succes;
}
public: LoadBiz()
{
	new currenttime = GetTickCount();
	OWNABLEBIZES = cache_num_rows();
	if(OWNABLEBIZES >= MAX_BIZ) return print(!"Лимит biz");
	else if(!OWNABLEBIZES) return print(!"biz нет!");
	for(new i; i < OWNABLEBIZES; i++) LoadOwnableBiz(i,i);
	return printf("[Public] LoadBiz загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено бизнесов: %i", OWNABLEBIZES);
}
stock LoadOwnableBiz(i,id)
{
	cache_get_int(i, !"ID", BizInfo[id][bID]);
	cache_get_int(i, !"State", BizInfo[id][bState]);
 	cache_get_string(i, !"Owner", BizInfo[id][bOwner]);
	cache_get_float(i, "Enter_X", BizInfo[id][bEnter_X]);
	cache_get_float(i, "Enter_Y", BizInfo[id][bEnter_Y]);
 	cache_get_float(i, "Enter_Z", BizInfo[id][bEnter_Z]);
 	cache_get_float(i, "Exit_X", BizInfo[id][bExit_X]);
 	cache_get_float(i, "Exit_Y", BizInfo[id][bExit_Y]);
 	cache_get_float(i, "Exit_Z", BizInfo[id][bExit_Z]);
 	cache_get_int(i, !"Cost", BizInfo[id][bCost]);
 	cache_get_int(i, !"Level", BizInfo[id][bNalog]);
 	cache_get_int(i, !"Interior", BizInfo[id][bInt]);
 	cache_get_int(i, !"Lock", BizInfo[id][bLock]);
 	cache_get_int(i, !"Money", BizInfo[id][bMoney]);
 	cache_get_float(i, "EnterPrice", BizInfo[id][bEnterPrice]);
	cache_get_int(i, !"Products", BizInfo[id][bProducts]);
 	cache_get_float(i, "ProdPrice", BizInfo[id][bProdPrice]);
 	cache_get_int(i, !"Krasher", BizInfo[id][bKrasher]);
 	cache_get_int(i, !"BuyCost", BizInfo[id][bBuyCost]);
 	cache_get_int(i, !"NeedItem", BizInfo[id][bNeedItem]);
 	cache_get_int(i, !"Zam", BizInfo[id][bZam]);
 	cache_get_string(i, !"Description", BizInfo[id][bDescription]);
	cache_get_string(i, !"DayOfWeak", str_1), sscanf(str_1, "p<,>a<i>[7]", BizInfo[id][bDayOfWeak]);
	cache_get_string(i, !"ItemCost", str_1), sscanf(str_1, "p<,>a<i>[20]", BizInfo[id][bItemCost]);
	cache_get_string(i, !"ModelObject", str_1), sscanf(str_1, "p<,>a<i>[10]", BizInfo[id][bModelObject]);
	cache_get_string(i, !"ObjectPosX", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectPosX]);
	cache_get_string(i, !"ObjectPosY", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectPosY]);
	cache_get_string(i, !"ObjectPosZ", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectPosZ]);
	cache_get_string(i, !"ObjectRotX", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectRotX]);
	cache_get_string(i, !"ObjectRotY", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectRotY]);
	cache_get_string(i, !"ObjectRotZ", str_1), sscanf(str_1, "p<,>a<f>[10]", BizInfo[id][bObjectRotZ]);
	for(new j; j < 10; j++)
	{
		//BizInfo[id][bObjectEdit][j] = -1;
		//if(!BizInfo[id][bModelObject][j]) BizInfo[id][bModelObject][j] = -1;
		//AddObjectProperty(true, id, j);
	}
	if(BizInfo[id][bState] == 30)
	{
		new hour;
		gettime(hour, _, _);
	    Second_Hand[Second_Hand_Count][sBizID] = id;
	    Second_Hand[Second_Hand_Count][sSaleHour] = randomEx(10, 20);
	    //Second_Hand[Second_Hand_Count][sSaleHour] = hour;
	    if(hour < 5 || hour > Second_Hand[Second_Hand_Count][sSaleHour]) Second_Hand[Second_Hand_Count][sSaleStatus] = false;
	    else Second_Hand[Second_Hand_Count][sSaleStatus] = true;
		Second_Hand_Count++;
		if(Second_Hand_Count >= MAX_SECOND_HAND) printf("Превышен лимит MAX_SECOND_HAND (%d)", Second_Hand_Count);
	}
	UpdateBiz(i,1);
}
stock SaveDayOfWeakBiz(bizid)
{
    str_1[0] = EOS;
    for(new i; i < 7; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, BizInfo[bizid][bDayOfWeak][i]);
    return mysql_pqueryf(mysql, "UPDATE `businesses` SET `DayOfWeak` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, BizInfo[bizid][bID]);
}
stock SaveCostBiz(bizid)
{
	str_1[0] = EOS;
	for(new i; i < 20; i++)
	{
		if(!BizInfo[bizid][bItemCost][i]) BizInfo[bizid][bItemCost][i] = 500;
		f(str_1, sizeof(str_1), "%s%i,", str_1, BizInfo[bizid][bItemCost][i]);
	}
	return mysql_pqueryf(mysql, "UPDATE `businesses` SET `ItemCost` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, BizInfo[bizid][bID]);
}
stock CreateOwnableCar(model, Float:X, Float:Y, Float:Z, Float:A, const owner[], cost = 0)
{
	if(!cost) cost = GetCarPrice(model);
	str_2[0] = EOS, f(str_2, sizeof str_2, "INSERT INTO `ownable`(`Model`, `Sell_X`, `Sell_Y`, `Sell_Z`, `Sell_A`, `Pos_X`, `Pos_Y`, `Pos_Z`, `Pos_A`, `Owner`, `Keyer`, `Cost`, `Lock`, `Fuel`) VALUES ('%i','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%s','%s','%i','0', '100');",model, X, Y, Z, A, X, Y, Z, A, owner, owner, cost);
	str_1[0] = EOS, f(str_1, sizeof str_1, "%s", owner);
	mysql_tquery(mysql, str_2, "AddProperty", "ss", "ownable", str_1);
}
public: AddProperty(const name[], const owner[])
{
	mysql_queryf_fix(mysql, "SELECT * FROM %s ORDER BY ID DESC LIMIT 1",true,name);
	if(GetString(name,"ownable"))
	{
	    printf("addproperty ownable | name db: %s name owner: %s", name, owner);
		new id = Iter_Free(OWNABLECARS);
 		Query_LoadOwnableCar(0,id, false, -1);
 		mysql_pqueryf(mysql, "UPDATE `ownable` SET `IDownable` = '%i' WHERE `ID` = '%i' LIMIT 1", OwnableCar[id], CarInfo[id][cID]);
		cache_delete(result1);
		return printf("%i always ownable",Iter_Count(OWNABLECARS));
	}
	else if(GetString(name,"houses"))
	{
	    printf("addproperty houses | name db: %s name owner: %s | id %i", name, owner,OWNABLEHOUSES);
	    new j = OWNABLEHOUSES;
    	LoadOwnableHouses(0, j);
    	cache_delete(result1);
		OWNABLEHOUSES++;
		return printf("%i always houses",OWNABLEHOUSES);
	}
	else if(GetString(name,"businesses"))
	{
	    printf("addproperty businesses | name db: %s name owner: %s | id %i", name, owner,OWNABLEBIZES);
	    new j = OWNABLEBIZES;
	    LoadOwnableBiz(0, j);
	    UpdateBiz(j,1,1);
	    cache_delete(result1);
	    OWNABLEBIZES++;
	    return printf("%i always businesses",OWNABLEBIZES);
	}
	else if(GetString(name,"radar"))
	{
	    printf("addproperty radar | name db: %s name owner: %s | id %i", name, owner,OWNABLERADAR);
	    LoadOwnableRadars(0, OWNABLERADAR);
	    cache_delete(result1);
	    OWNABLERADAR++;
	    return printf("%i always radar",OWNABLERADAR);
	}
	else if(GetString(name,"trailers"))
	{
	    printf("addproperty trailer | name db: %s name owner: %s | id %i", name, owner,Iter_Count(OWNABLETRi));
	    new id = Iter_Free(OWNABLETRi);
	    LoadOwnableTrailers(0, id);
	    cache_delete(result1);
	    return printf("%i always radar",Iter_Count(OWNABLETRi));
	}
	else if(GetString(name,"warehouses"))
	{
	    printf("addproperty warehouses | name db: %s name owner: %s | id %i", name, owner,TOTAL_WAREHOUSES);
	    LoadOwnableStorage(0, TOTAL_WAREHOUSES);
	    cache_delete(result1);
		TOTAL_WAREHOUSES++;
	    return 1;
	}
	cache_delete(result1);
	return 1;
}
stock LoadOwnableCar(i,id)
{
	cache_get_int(i, !"ID", CarInfo[id][cID]);
	cache_get_int(i, !"Model", CarInfo[id][cModel]);
	cache_get_float(i, "Sell_X", CarInfo[id][cSell_X]);
	cache_get_float(i, "Sell_Y", CarInfo[id][cSell_Y]);
	cache_get_float(i, "Sell_Z", CarInfo[id][cSell_Z]);
	cache_get_float(i, "Sell_A", CarInfo[id][cSell_A]);
	cache_get_float(i, "Pos_X", CarInfo[id][cPos_X]);
	cache_get_float(i, "Pos_Y", CarInfo[id][cPos_Y]);
	cache_get_float(i, "Pos_Z", CarInfo[id][cPos_Z]);
	cache_get_float(i, "Pos_A", CarInfo[id][cPos_A]);
	cache_get_int(i, !"Interior", CarInfo[id][cInterior]);
	cache_get_int(i, !"VirtualWorld", CarInfo[id][cVirtualWorld]);
	cache_get_int(i, !"Color_1", CarInfo[id][cColor_1]);
	cache_get_int(i, !"Color_2", CarInfo[id][cColor_2]);
	cache_get_string(i, !"Owner", CarInfo[id][cOwner]);
	cache_get_int(i, !"OwnerFamily", CarInfo[id][cOwnerFamily]);
	cache_get_int(i, !"OwnerFamilyUID", CarInfo[id][cOwnerFamilyUID]);
	cache_get_int(i, !"Nalog", CarInfo[id][cNalog]);
	cache_get_string(i, !"Number", CarInfo[id][cNumber]);
	cache_get_int(i, !"Keyer", CarInfo[id][cKeyer]);
	cache_get_int(i, !"Lock", CarInfo[id][cLock]);
	cache_get_int(i, !"Cost", CarInfo[id][cCost]);
	cache_get_int(i, !"Shtraf", CarInfo[id][cShtraf]);
	cache_get_int(i, !"AlarmON", CarInfo[id][cAlarmON]);
	cache_get_int(i, !"KeyIN", CarInfo[id][cKeyIN]);
	cache_get_float(i, "Milage", CarInfo[id][cMilage]);
	cache_get_int(i, !"ParkedInGarage", CarInfo[id][cParkedInGarage]);
	cache_get_int(i, !"ParkedInParking", CarInfo[id][cParkedInParking]);
	cache_get_int(i, !"ShtrafName", CarInfo[id][cShtrafName]);
	cache_get_string(i, !"ModelObject", str_1), sscanf(str_1, "p<,>a<i>[10]", CarInfo[id][cModelObject]);
	cache_get_string(i, !"ObjectPosX", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectPosX]);
	cache_get_string(i, !"ObjectPosY", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectPosY]);
	cache_get_string(i, !"ObjectPosZ", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectPosZ]);
	cache_get_string(i, !"ObjectRotX", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectRotX]);
	cache_get_string(i, !"ObjectRotY", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectRotY]);
	cache_get_string(i, !"ObjectRotZ", str_1), sscanf(str_1, "p<,>a<f>[10]", CarInfo[id][cObjectRotZ]);
	cache_get_string(i, !"ObjectUsed", str_1), sscanf(str_1, "p<,>a<i>[10]", CarInfo[id][cObjectUsed]);
	cache_get_string(i, !"SlotItem", str_1), sscanf(str_1, "p<,>a<i>[21]", CarInfo[id][cSlotItem]);
	printf("Iter_Add(OWNABLECARS, %i);", id);
	return Iter_Add(OWNABLECARS, id);
}
stock EditOwnableCarObject(playerid, slot)
{
	if(IsPlayerModeEditor[playerid]) return 0;
	if(IsPlayerInHisVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		new Float:X,Float:Y,Float:Z,Float:A,
			carid = GetPlayerVehicleID(playerid),
			number = GetVehicleID(carid);
		CarInfo[number][cModelObject][slot] = ItemsInfo[CarInfo[number][cModelObject][slot]][ItemID];
		GetVehiclePos(carid, X, Y, Z);
		DestroyAttachVehicle(carid,SLOT_ATTACH_EDIT+slot);
		if(ObjectCarSelect[playerid] != -1) DestroyDynamicObject(ObjectCarSelect[playerid]), ObjectCarSelect[playerid] = -1;
		GetVehicleZAngle(carid, A);
		ObjectCarSelect[playerid] = CreateDynamicObject(1934, X, Y, Z, 0.0, 0.0, 0.0);
		AttachVehicle[carid][SLOT_ATTACH_EDIT+slot] = CreateDynamicObject(CarInfo[number][cModelObject][slot], X, Y, Z, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(AttachVehicle[carid][SLOT_ATTACH_EDIT+slot], carid, 0, 0, 0, 0.0, 0.0, 0.0);
		SelectSlotEdit[playerid] = slot;
		IsPlayerModeEditor[playerid] = true;
		CarInfo[number][cLock] = true;
		SetDoorsStatus(carid, 1, playerid);
		SetEngineStatus(carid, false, playerid);
		SetPVarInt(playerid, !"editobject", 0);
		EditDynamicObject(playerid, ObjectCarSelect[playerid]);
		Streamer_Update(playerid);
	}
	return 1;
}
stock GetPropertyObjects(id, type, interior = 0)
{
	new num;
	if(type == 1)//Предметы недвижимости (Дом)
	{
	    new objects, objects_interior;
	    for(new i; i < 20; i++)
	    {
	        if(HouseInfo[id][hModelObject][i] == -1) continue;
			if(HouseInfo[id][hObjectVW][i]) objects_interior++;
			else objects++;
	    }
	    if(!interior) num = objects;
		else if(interior) num = objects_interior;
	}
	else if(type == 2)//Предметы недвижимости (Бизнес)
	{
	    new objects, objects_interior;
	    for(new i; i < 20; i++)
	    {
	        if(BizInfo[id][bModelObject][i] == -1) continue;
			if(BizInfo[id][hObjectVW][i]) objects_interior++;
			else objects++;
	    }
	    if(!interior) num = objects;
		else if(interior) num = objects_interior;
	}
	return num;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(GetPVarType(playerid, !"editobject") == PLAYER_VARTYPE_NONE) return 1;
	new type = GetPVarInt(playerid, !"editobject");//, id = GetPVarInt(playerid, !"use_property");
	switch(response)
	{
		case EDIT_RESPONSE_UPDATE:
		{
			switch(type)
			{
				case 0:
				{
					new carid = GetPlayerVehicleID(playerid);
					new Float:Tx,Float:Ty,Float:Tz,Float:Tr, obj = AttachVehicle[carid][SLOT_ATTACH_EDIT+SelectSlotEdit[playerid]];
					GetVehiclePos(carid,Tx,Ty,Tz);
					GetVehicleZAngle(carid, Tr);
					new Float: ofx, Float: ofy, Float: ofz, Float: ofaz, Float: finalx, Float: finaly;
					ofx = x-Tx, ofy = y-Ty, ofz = z-Tz, ofaz = rz-Tr;
					finalx = ofx*floatcos(Tr, degrees)+ofy*floatsin(Tr, degrees), finaly = -ofx*floatsin(Tr, degrees)+ofy*floatcos(Tr, degrees);

					if(finalx >= 3.5 || finaly >= 3.5 || ofz >= 3.5) AttachDynamicObjectToVehicle(obj, carid, 3.5, 3.5, 3.5, rx, ry, ofaz);
					else AttachDynamicObjectToVehicle(obj, carid, finalx, finaly, ofz, rx, ry, ofaz);
				}
				/*case 1:
				{
					HouseInfo[id][hObjectPosX][ID] = x;
					HouseInfo[id][hObjectPosY][ID] = y;
					HouseInfo[id][hObjectPosZ][ID] = z;
					HouseInfo[id][hObjectRotX][ID] = rx;
					HouseInfo[id][hObjectRotY][ID] = ry;
					HouseInfo[id][hObjectRotZ][ID] = rz;
				}
				case 2:
				{
					BizInfo[id][bObjectPosX][ID] = x;
					BizInfo[id][bObjectPosY][ID] = y;
					BizInfo[id][bObjectPosZ][ID] = z;
					BizInfo[id][bObjectRotX][ID] = rx;
					BizInfo[id][bObjectRotY][ID] = ry;
					BizInfo[id][bObjectRotZ][ID] = rz;
				}*/
			}
		}
		case EDIT_RESPONSE_FINAL:
		{
			switch(type)
			{
				case 0:
				{
					new Float:Tx,Float:Ty,Float:Tz,Float:Tr;
					new carid = GetPlayerVehicleID(playerid);
					new number = GetVehicleID(carid);
					if(ObjectCarSelect[playerid] != -1) DestroyDynamicObject(ObjectCarSelect[playerid]), ObjectCarSelect[playerid] = -1;
					DestroyAttachVehicle(carid,SLOT_ATTACH_EDIT+SelectSlotEdit[playerid]);
					GetVehiclePos(carid,Tx,Ty,Tz);
					GetVehicleZAngle(carid, Tr);

					new Float: ofx, Float: ofy, Float: ofz, Float: ofaz, Float: finalx, Float: finaly;
					ofx = x-Tx, ofy = y-Ty, ofz = z-Tz, ofaz = rz-Tr;
					finalx = ofx*floatcos(Tr, degrees)+ofy*floatsin(Tr, degrees), finaly = -ofx*floatsin(Tr, degrees)+ofy*floatcos(Tr, degrees);

					CarInfo[number][cObjectPosX][SelectSlotEdit[playerid]] = finalx;
					CarInfo[number][cObjectPosY][SelectSlotEdit[playerid]] = finaly;
					CarInfo[number][cObjectPosZ][SelectSlotEdit[playerid]] = ofz;
					CarInfo[number][cObjectRotX][SelectSlotEdit[playerid]] = rx;
					CarInfo[number][cObjectRotY][SelectSlotEdit[playerid]] = ry;
					CarInfo[number][cObjectRotZ][SelectSlotEdit[playerid]] = ofaz;
					CarInfo[number][cObjectUsed][SelectSlotEdit[playerid]] = 1;
					AttachVehicle[carid][SLOT_ATTACH_EDIT+SelectSlotEdit[playerid]] = CreateDynamicObject(CarInfo[number][cModelObject][SelectSlotEdit[playerid]], Tx, Ty, Tz, 0.0, 0.0, 0.0);
					AttachDynamicObjectToVehicle(AttachVehicle[carid][SLOT_ATTACH_EDIT+SelectSlotEdit[playerid]], carid, finalx, finaly, ofz, rx, ry, ofaz);
					//
					SelectSlotEdit[playerid] = -1;
					IsPlayerModeEditor[playerid] = false;
					CarInfo[number][cLock] = true;
					SetDoorsStatus(carid, 1, playerid);
					DeletePVar(playerid, !"editobject");
				}
				case 1:
				{
					/*new house = GetPVarInt(playerid, !"use_property"),
						slot = GetPropertySlot(house, 1),
						Float:distance = -1,
						Float:distance_enter = PointToPoint(x,y,z,HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]),
						Float:distance_exit = PointToPoint(x,y,z,HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z]), world = GetPlayerVirtualWorld(playerid),interior = GetPlayerInterior(playerid);

					if(world || interior) distance = distance_exit;
					else if(!world && !interior) distance = distance_enter;

					if(distance > 20.0 || slot == -1)
					{
						DeletePropertyPVars(playerid);
						if(slot == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}В вашем доме нет слотов для обьектов.");
						return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Устанавливать предметы можно в радиусе 20 метров от вашей недвижимости (дом или бизнес) или внутри недвижимости.");
					}
					if((world || interior) && GetPropertyObjects(house, 1, 1) >= 10)
					{
						DeletePropertyPVars(playerid);
						return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}В вашем доме нет слотов для обьектов в интерьере.");
					}
					else if((!world && !interior) && GetPropertyObjects(house, 1, 0) >= 10)
					{
						DeletePropertyPVars(playerid);
						return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}В вашем доме нет слотов для обьектов на улице.");
					}
					if(!GetInvCount(playerid, GetPVarInt(playerid, !"use_property_object_item")))
					{
						DeletePropertyPVars(playerid);
						return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}У вас нет предмета для установки.");
					}
					//
					new house = player_Global_Int[playerid][51], model = ItemsInfo[HouseInfo[house][hModelObject][player_Global_Int[playerid][52]]][ItemID], ID = player_Global_Int[playerid][52];
					SCMf(playerid, -1, "final %i %f", house, PointToPoint(x,y,z, HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]));
					if(20 > PointToPoint(x,y,z, HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]))
					{
						SetDynamicObjectPos(HouseInfo[house][hObjectEdit][ID], HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]);
						SetDynamicObjectRot(HouseInfo[house][hObjectEdit][ID], HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]);
						return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можете установить данный объект, можно на расстояние до 20 метров от своего недвижемого имущества!");
					}
					if(HouseInfo[house][hObjectEdit][ID] != -1) DestroyDynamicObject(HouseInfo[house][hObjectEdit][ID]), HouseInfo[house][hObjectEdit][ID] = -1;
					HouseInfo[house][hObjectEdit][ID] = CreateDynamicObject(model, x, y, z, rx, ry, rz);
					HouseInfo[house][hObjectPosX][ID] = x;
					HouseInfo[house][hObjectPosY][ID] = y;
					HouseInfo[house][hObjectPosZ][ID] = z;
					HouseInfo[house][hObjectRotX][ID] = rx;
					HouseInfo[house][hObjectRotY][ID] = ry;
					HouseInfo[house][hObjectRotZ][ID] = rz;
					IsPlayerModeEditor[playerid] = false;
					SaveObjectHouse(house+1);
					DeletePVar(playerid, !"editobject");
					DestroyDynamicObject(GetPVarInt(playerid, !"editobjectID"));
					DeletePVar(playerid, !"editobjectID");*/
					SCM(playerid, 0x6495EDFF, "[Информация]{FFFFFF} Вы успешно передвинули предмет. Если хотите убрать или передвинуть, введите /pobject возле него.");
				}
				case 2:
				{
					/*new biz = player_Global_Int[playerid][51], model = ItemsInfo[BizInfo[biz][bModelObject][player_Global_Int[playerid][52]]][ItemID], ID = player_Global_Int[playerid][52];
					if(20 > PointToPoint(x,y,z, BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]))
					{
						SetDynamicObjectPos(BizInfo[biz][bObjectEdit][ID], BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]);
						SetDynamicObjectRot(BizInfo[biz][bObjectEdit][ID], BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]);
						return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можете установить данный объект, можно на расстояние до 20 метров от своего недвижемого имущества!");
					}
					if(BizInfo[biz][bObjectEdit] != -1) DestroyDynamicObject(BizInfo[biz][bObjectEdit][ID]), BizInfo[biz][bObjectEdit][ID] = -1;
					BizInfo[biz][bObjectEdit][ID] = CreateDynamicObject(model, x, y, z, rx, ry, rz);
					BizInfo[biz][bObjectPosX][ID] = x;
					BizInfo[biz][bObjectPosY][ID] = y;
					BizInfo[biz][bObjectPosZ][ID] = z;
					BizInfo[biz][bObjectRotX][ID] = rx;
					BizInfo[biz][bObjectRotY][ID] = ry;
					BizInfo[biz][bObjectRotZ][ID] = rz;
					SaveObjectBussines(biz);
					IsPlayerModeEditor[playerid] = false;
					DeletePVar(playerid, !"editobject");
					DestroyDynamicObject(GetPVarInt(playerid, !"editobjectID"));
					DeletePVar(playerid, !"editobjectID");*/
					SCM(playerid, 0x6495EDFF, !"[Информация]{FFFFFF} Вы успешно передвинули предмет. Если хотите убрать или передвинуть, введите /pobject возле него.");
				}
				case 3:
				{
					new house = GetPVarInt(playerid, !"use_property");
					HouseInfo[house][hTableNalog] = true;
					HouseInfo[house][hTable_XYZ][0] = x;
					HouseInfo[house][hTable_XYZ][1] = y;
					HouseInfo[house][hTable_XYZ][2] = z;
					HouseInfo[house][hTable_Rot][0] = rx;
					HouseInfo[house][hTable_Rot][1] = ry;
					HouseInfo[house][hTable_Rot][2] = rz;
					DestroyDynamicObject(GetPVarInt(playerid, !"use_property_object_id"));
					DeletePVar(playerid, !"use_property_object_id");
					DeletePVar(playerid, !"editobject");
					DeletePVar(playerid, !"editobject");
					DeletePVar(playerid, !"use_property");
					CreateTableNalog(house);
					InvAdd(playerid, 3113, -1);
				}
			}
		}
		case EDIT_RESPONSE_CANCEL:
		{
			switch(type)
			{
				case 0:
				{
					new carid = GetPlayerVehicleID(playerid);
					new number = GetVehicleID(carid);
					if(ObjectCarSelect[playerid] != -1) DestroyDynamicObject(ObjectCarSelect[playerid]), ObjectCarSelect[playerid] = -1;
					DestroyAttachVehicle(carid,SLOT_ATTACH_EDIT+SelectSlotEdit[playerid]);
					SelectSlotEdit[playerid] = -1;
					IsPlayerModeEditor[playerid] = false;
					CarInfo[number][cLock] = true;
					SetDoorsStatus(carid, 1, playerid);
					CancelEdit(playerid);
					DeletePVar(playerid, !"editobject");
				}
				case 1:
				{
					/*new house = player_Global_Int[playerid][51], ID = player_Global_Int[playerid][52];
					SCM(playerid, -1, "cancel");
					if(player_Global_Int[playerid][54] == 1) if(HouseInfo[house][hObjectEdit] != -1) DestroyDynamicObject(HouseInfo[house][hObjectEdit]), HouseInfo[house][hObjectEdit] = -1;
					IsPlayerModeEditor[playerid] = false;
					InvAdd(playerid, HouseInfo[house][hModelObject][ID], 1, 0);
					CancelEdit(playerid);
					DeletePVar(playerid, !"editobject");
					DestroyDynamicObject(GetPVarInt(playerid, !"editobjectID"));
					DeletePVar(playerid, !"editobjectID");*/
				}
				case 2:
				{
					/*new biz = player_Global_Int[playerid][51], ID = player_Global_Int[playerid][52];
					if(player_Global_Int[playerid][54] == 1) if(BizInfo[biz][bObjectEdit][ID] != -1) DestroyDynamicObject(BizInfo[biz][bObjectEdit][ID]), BizInfo[biz][bObjectEdit][ID] = -1;
					IsPlayerModeEditor[playerid] = false;
					InvAdd(playerid, BizIКостянная маска(nfo[biz][bModelObject][ID], 1, 0);
					CancelEdit(playerid);
					DeletePVar(playerid, !"editobject");
					DestroyDynamicObject(GetPVarInt(playerid, !"editobjectID"));
					DeletePVar(playerid, !"editobjectID");*/
				}
				case 3:
				{
					DestroyDynamicObject(GetPVarInt(playerid, !"use_property_object_id"));
					DeletePVar(playerid, !"use_property_object_id");
					DeletePVar(playerid, !"editobject");
					DeletePVar(playerid, !"editobject");
					DeletePVar(playerid, !"use_property");
				}
			}
		}
	}
	return 1;
}
stock CreateTableNalog(house)
{
	/*main x y z rx ry rz
	other x+0,017822, y-0.01684499999, z+0.860026, rx-292.254029, ry-178.098572, rz-100.799606
	other 2 x+0.002991, y-0.05175799999, z+0.562273, rx-292.254021, ry-178.09845, rz-100.799697
	other 3 x+0.019898 y+0.053955 z-0.010308 rx-353.600016 		ry+9.200035 rz-180.000015
	other 4 x-0.058594 y+0.129272 z-0.526983 rx+353.599967 		ry-80.799973 rz-185.720336*/
	
	new Float:x = HouseInfo[house][hTable_XYZ][0], Float:y = HouseInfo[house][hTable_XYZ][1], Float:z = HouseInfo[house][hTable_XYZ][2],
		Float:rx = HouseInfo[house][hTable_Rot][0], Float:ry = HouseInfo[house][hTable_Rot][1], Float:rz = HouseInfo[house][hTable_Rot][2];
	new obj = CreateDynamicObject(2727, x, y, z, rx, ry, rz, -1, -1, -1, STREAMER_OBJECT_SD, STREAMER_OBJECT_DD); // 1
	SetDynamicObjectMaterial(obj, 0, 10412, "hotel1", "gold128", 0);
	//main 356.799988, 85.399994, 272.860168
	//other 64.545959, 263.498566, -172.060562
	//other 64.545967, 263.498444, -172.060471
	obj = CreateDynamicObject(7666, x+0.117822, y-0.11684499999, z+0.860026,\
	 rx-292.254029, ry+178.098572, rz+616.981292+17.0, -1, -1, -1, STREAMER_OBJECT_SD, 100.0); // 1
	SetDynamicObjectMaterialText(obj, 0, "HOUSE", 140, "Tahoma", 40, 1, 0xFFFFFFFF, 0, 1);
	obj = CreateDynamicObject(7666, x+0.102991, y-0.15175799999, z+0.562273,\
	 rx-292.254021, ry+178.09845, rz+616.921292+17.0, -1, -1, -1, STREAMER_OBJECT_SD, 100.0); // 1


	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", HouseInfo[house][hOwner]);
	SetDynamicObjectMaterialText(obj, 0, str_1, 140, "Tahoma", 45, 1, 0xFFFFFFFF, 0, 1);
	obj = CreateDynamicObject(2727, x+0.019898, y+0.053955, z-0.010308, rx-353.600016, ry+9.200035, rz+180.000015, -1, -1, -1, STREAMER_OBJECT_SD, 100.0); // 1
	SetDynamicObjectMaterial(obj, 0, 10412, "hotel1", "gold128", 0);
	obj = CreateDynamicObject(19353, x-0.058594, y+0.129272, z-0.526983, rx+353.599967, ry-80.799973, rz-185.720336, -1, -1, -1, STREAMER_OBJECT_SD, 100.0); // 1
	SetDynamicObjectMaterial(obj, 0, 19480, "signsurf", "sign", 0);
}
/*stock DeletePropertyPVars(playerid)
{
    DestroyDynamicObject(GetPVarInt(playerid, !"use_property_object_id"));
	DeletePVar(playerid, !"use_property_object_slot");
	DeletePVar(playerid, !"use_property_object_item");
	DeletePVar(playerid, !"use_property_object");
	DeletePVar(playerid, !"use_property_object");
	DeletePVar(playerid, !"use_property_object_id");
	return 1;
}
stock DeletePropertyEditPVars(playerid, create = 0)
{
	new id = GetPVarInt(playerid, !"use_property_object_slot");
	new house = GetPVarInt(playerid, !"use_property_object");
	new biz = GetPVarInt(playerid, !"use_property_object");
    DestroyDynamicObject(GetPVarInt(playerid, !"use_property_object_id"));
	DeletePVar(playerid, !"use_property_object_slot");
	DeletePVar(playerid, !"use_property_object");
	DeletePVar(playerid, !"use_property_object_id")
	if(create)
	{
		if(PropertyObjectType[playerid] == 1)
		{
		    HouseInfo[house][hObjectID][id] = CreateDynamicObject(
			HouseInfo[house][hObjectModel][id],
			HouseInfo[house][hObjectPosX][id],
			HouseInfo[house][hObjectPosY][id],
			HouseInfo[house][hObjectPosZ][id],
			HouseInfo[house][hObjectRotX][id],
			HouseInfo[house][hObjectRotY][id],
			HouseInfo[house][hObjectRotZ][id],
			HouseInfo[house][hObjectVirtualWorld][id],
			HouseInfo[house][hObjectInterior][id]);
		}
		else if(PropertyObjectType[playerid] == 2)
		{
		    BizInfo[biz][bObjectID][id] = CreateDynamicObject(
			BizInfo[biz][bObjectModel][id],
			BizInfo[biz][bObjectPosX][id],
			BizInfo[biz][bObjectPosY][id],
			BizInfo[biz][bObjectPosZ][id],
			BizInfo[biz][bObjectRotX][id],
			BizInfo[biz][bObjectRotY][id],
			BizInfo[biz][bObjectRotZ][id],
			BizInfo[biz][bObjectVirtualWorld][id],
			BizInfo[biz][bObjectInterior][id]);
		}
	}
	return 1;
}
stock AddObjectProperty(bool:type, ID, slot)
{
    if(!type)
    {
        if(HouseInfo[ID][hObjectEdit][slot] != -1) DestroyDynamicObject(HouseInfo[ID][hObjectEdit][slot]), HouseInfo[ID][hObjectEdit][slot] = -1;
        if(HouseInfo[ID][hModelObject][slot] < 5) return 1;
		HouseInfo[ID][hObjectEdit][slot] = CreateDynamicObject(
            ItemsInfo[HouseInfo[ID][hModelObject][slot]][ItemID],
            HouseInfo[ID][hObjectPosX][slot],
            HouseInfo[ID][hObjectPosY][slot],
            HouseInfo[ID][hObjectPosZ][slot],
            HouseInfo[ID][hObjectRotX][slot],
            HouseInfo[ID][hObjectRotY][slot],
            HouseInfo[ID][hObjectRotZ][slot]);
    }
    else
    {
        if(BizInfo[ID][bObjectEdit][slot] != -1) DestroyDynamicObject(BizInfo[ID][bObjectEdit][slot]), BizInfo[ID][bObjectEdit][slot] = -1;
        if(BizInfo[ID][bModelObject][slot] < 5) return 1;
		BizInfo[ID][bObjectEdit][slot] = CreateDynamicObject(
           	ItemsInfo[BizInfo[ID][bModelObject][slot]][ItemID],
            BizInfo[ID][bObjectPosX][slot],
            BizInfo[ID][bObjectPosY][slot],
            BizInfo[ID][bObjectPosZ][slot],
            BizInfo[ID][bObjectRotX][slot],
            BizInfo[ID][bObjectRotY][slot],
            BizInfo[ID][bObjectRotZ][slot]);
    }
	return 1;
}*/
stock SaveObjectBussines(biz)
{
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, BizInfo[biz][bModelObject][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ModelObject` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectPosX][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectPosX` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectPosY][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectPosY` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectPosZ][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectPosZ` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectRotZ][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectRotX` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectRotY][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectRotY` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, BizInfo[biz][bObjectRotZ][i]);
    mysql_pqueryf(mysql, "UPDATE `businesses` SET `ObjectRotZ` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, BizInfo[biz][bID]);
    return 1;
}
stock SaveObjectHouse(house)
{
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, HouseInfo[house][hModelObject][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ModelObject` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectPosX][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectPosX` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectPosY][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectPosY` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectPosZ][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectPosZ` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectRotZ][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectRotX` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectRotY][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectRotY` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    str_1[0] = EOS;
    for(new i; i < 10; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hObjectRotZ][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ObjectRotZ` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, HouseInfo[house][hID]);
    return 1;
}
cmd:pobject(playerid)
{
	if(IsPlayerModeEditor[playerid]) return 1;
    str_q[0] = EOS;
    for(new i; i < OWNABLEHOUSES; i++)
    {
        if(!GetString(HouseInfo[i][hOwner], PN(playerid))) continue;
        for(new j; j < 10; j++)
        {
            if(!IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hObjectPosX][j], HouseInfo[i][hObjectPosY][j], HouseInfo[i][hObjectPosZ][j])) continue;
			SetPVarInt(playerid, !"editobject", 1);
			player_Global_Int[playerid][51] = i; //id
			player_Global_Int[playerid][52] = j; //slot
            f(str_q, sizeof(str_q), !"%s", ItemsInfo[HouseInfo[i][hModelObject][j]][ItemName]);
            SPDf(playerid, 4450, DIALOG_STYLE_LIST, str_q, "Выбрать", "Закрыть", !"Недвижимость:\tДом №%i\n{BFBBBA}Установил:\t\t%s\n{FFFFFF}\nПередвинуть\n{FF0000}Забрать", i, HouseInfo[i][hOwner]);
        }
    }
    for(new i; i < OWNABLEBIZES; i++)
    {
        if(!GetString(BizInfo[i][bOwner], PN(playerid))) continue;
        for(new j; j < 10; j++)
        {
            if(!IsPlayerInRangeOfPoint(playerid, 3.0, BizInfo[i][bObjectPosX][j], BizInfo[i][bObjectPosY][j], BizInfo[i][bObjectPosZ][j])) continue;
			SetPVarInt(playerid, !"editobject", 2);
			player_Global_Int[playerid][51] = i; //id
			player_Global_Int[playerid][52] = j; //slot
            f(str_q, sizeof(str_q), !"%s", ItemsInfo[BizInfo[i][bModelObject][j]][ItemName]);
            SPDf(playerid, 4450, DIALOG_STYLE_LIST, str_q, "Выбрать", "Закрыть", !"Недвижимость:\tБизнес №%i\n{BFBBBA}Установил:\t\t%s\n{FFFFFF}\nПередвинуть\n{FF0000}Забрать", i, BizInfo[i][bOwner]);
        }
    }
	return 1;
}
stock LoadOwnableCars(playerid)
{
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `ownable` WHERE `Owner` = '%s' AND `OwnerFamily` = '-1' LIMIT %i;", PN(playerid),ValidNumberCars(playerid));
	return mysql_tquery(mysql, str_q, "Query_LoadCar","i",playerid);
}
public: Query_LoadCar(playerid)
{
	if(!cache_num_rows()) return 1;
 	for(new i; i < cache_num_rows(); i++)
 	{
		new type,idc;
		cache_get_int(i, !"typeconnect", type);
		cache_get_int(i, !"ID", idc);
		if(!type || i >= ValidNumberCars(playerid))
		{
		    mysql_pqueryf(mysql, "UPDATE `ownable` SET `IDownable` = '-1' WHERE `ID` = '%i' LIMIT 1", idc);//query cache free
			continue;
		}
	 	new id = Iter_Free(OWNABLECARS);
 		Query_LoadOwnableCar(i,id, false, -1);
 	}
	return 1;
}
public: Query_LoadCarFamily(playerid)
{
	if(!cache_num_rows()) return 1;
	new idc;
	cache_get_int(0, !"ID", idc);
	if(idc > 1)
	{
		foreach(new i: OWNABLECARS)
		{
			new carid = OwnableCar[i];
			if(carid == idc) //предосторожность
			{
				SafeRemoveCar(i, i);
				return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Выполните это действие повторно!");
			}
		}
	}
	new id = Iter_Free(OWNABLECARS);
	Query_LoadOwnableCar(0, id, true, playerid);
	return 1;
}
public: Query_LoadOwnableCar(i, id, bool:yes, playerid)
{
	LoadOwnableCar(i, id);
	OwnableCar[id] = J_AddStaticVehicleEx(CarInfo[id][cModel], CarInfo[id][cSell_X], CarInfo[id][cSell_Y], CarInfo[id][cSell_Z], CarInfo[id][cSell_A], CarInfo[id][cColor_1], CarInfo[id][cColor_2], 60000, CarInfo[id][cInterior], CarInfo[id][cVirtualWorld]);
	new carid = OwnableCar[id];
	cache_get_float(0, "Fuel", vTemp[carid][Fuel]);
	cache_get_string(0, !"TrunkItem", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItem]);
	cache_get_string(0, !"TrunkItemAmount", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItemAmount]);
	cache_get_string(0, !"InvOwnableUID", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItemUID]);
	cache_get_string(0, !"InvOwnableParams", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItemSharpening]);
	cache_get_string(0, !"InvOwnableParams_2", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItemParams]);
	cache_get_string(0, !"InvOwnableColor", str_1), sscanf(str_1, "p<,>a<i>[60]", TrunkInfo[carid][TrunkItemColor]);
    RespawnOwnableCar(INVALID_PLAYER_ID, OwnableCar[id]);
	if(yes != false) FamilyAutoUID[playerid] = OwnableCar[id];
    mysql_pqueryf(mysql, "UPDATE `ownable` SET `IDownable` = '%i' WHERE `ID` = '%i' LIMIT 1;", OwnableCar[id], CarInfo[id][cID]);
    printf("id ownable %i query",id);
 	return 1;
}
stock UnLoadOwnableCars(const name[])
{
	foreach(new i: OWNABLECARS) if(GetString(CarInfo[i][cOwner], name) && CarInfo[i][cOwnerFamily] == -1) SafeRemoveCar(i, i);
	return 1;
}
stock ResetCarArrays(i)
{
	SetString(CarInfo[i][cOwner], "The State");
	SetString(CarInfo[i][cNumber], ServerCFG[server_number]);
	if(CarText[i] != Text3D:-1) DestroyDynamic3DTextLabel(CarText[i]), CarText[i] = Text3D:-1;
	if(CarTextTrunk[i] != Text3D:-1) DestroyDynamic3DTextLabel(CarTextTrunk[i]), CarTextTrunk[i] = Text3D:-1;
	CarInfo[i][cKeyer] = -1;
	CarInfo[i][cShtrafName] = -1;
	ResetCar(i);
	for(new j; j < 60; j++)
	{
        if(j < 21) CarInfo[i][cSlotItem][j] = 0;
        if(j < 10)
        {
            CarInfo[i][cModelObject][j] = 0;
            CarInfo[i][cObjectPosX][j] = 0;
            CarInfo[i][cObjectPosY][j] = 0;
            CarInfo[i][cObjectPosZ][j] = 0;
            CarInfo[i][cObjectRotX][j] = 0;
            CarInfo[i][cObjectRotY][j] = 0;
            CarInfo[i][cObjectRotZ][j] = 0;
            CarInfo[i][cObjectUsed][j] = 0;
        }
	}
	OwnableCar[i] = INVALID_VEHICLE_ID;
	return 1;
}
stock ResetCar(i)
{
	CarInfo[i][cID] = INVALID_VEHICLE_ID;
	CarInfo[i][cModel] = 0;
	CarInfo[i][cSell_X] = 0.0;
	CarInfo[i][cSell_Y] = 0.0;
	CarInfo[i][cSell_Z] = 0.0;
	CarInfo[i][cSell_A] = 0.0;
	CarInfo[i][cPos_X] = 0.0;
	CarInfo[i][cPos_Y] = 0.0;
	CarInfo[i][cPos_Z] = 0.0;
	CarInfo[i][cPos_A] = 0.0;
	CarInfo[i][cInterior] = 0;
	CarInfo[i][cVirtualWorld] = 0;
	CarInfo[i][cColor_1] = 0;
	CarInfo[i][cColor_2] = 0;
	CarInfo[i][cNalog] = 0;
	CarInfo[i][cLock] = false;
	CarInfo[i][cCost] = 0;
	CarInfo[i][cShtraf] = 0;
	CarInfo[i][cAlarmON] = false;
	CarInfo[i][cKeyIN] = false;
	CarInfo[i][cMilage] = 0;
	CarInfo[i][cParkedInGarage] = 0;
	CarInfo[i][cParkedInParking] = 0;
	//CarInfo[i][cFuel] = 0.0;
}
stock SellCar(number, &next, playerid)
{
	mysql_tqueryf(mysql, "DELETE FROM `ownable` WHERE `ID` = '%i' LIMIT 1;", CarInfo[number][cID]);
	SafeRemoveCar(number, next);
	if(playerid == INVALID_PLAYER_ID) return 1;
	if(pTemp[playerid][pSellCar] != -1)
	{
	    if(autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid)
	    {
			new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	else UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		}
	}
	return 1;
}
stock SaveTrunk(number)
{
    new carid = OwnableCar[number];
	str_1[0] = EOS, str_2[0] = EOS;
	new all;
	if(!CheckTrunkForItem(carid, 1780)) all = 30;
	for(new i; i < 30+all; i++)
	{
		f(str_1, sizeof(str_1), "%s%i,", str_1, TrunkInfo[carid][TrunkItem][i]);
		f(str_2, sizeof(str_2), "%s%i,", str_2, TrunkInfo[carid][TrunkItemAmount][i]);
	}
	mysql_pqueryf(mysql, "UPDATE `ownable` SET `TrunkItem` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, CarInfo[number][cID]);
	mysql_pqueryf(mysql, "UPDATE `ownable` SET `TrunkItemAmount` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
	str_2[0] = EOS;
 	for(new i; i < 30+all; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, TrunkInfo[carid][TrunkItemSharpening][i]);
    mysql_pqueryf(mysql, "UPDATE `ownable` SET `InvOwnableParams` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
	str_2[0] = EOS;
 	for(new i; i < 30+all; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, TrunkInfo[carid][TrunkItemParams][i]);
    mysql_pqueryf(mysql, "UPDATE `ownable` SET `InvOwnableParams_2` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
	str_2[0] = EOS;
 	for(new i; i < 30+all; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, TrunkInfo[carid][TrunkItemUID][i]);
    mysql_pqueryf(mysql, "UPDATE `ownable` SET `InvOwnableUID` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
	return 1;
}
stock RandomMassive( massive[], size)
{
	for(new i; i < size; i ++)
	{
	    new rand = random(size), mass = massive[i];
	    massive[i] = massive[rand];
	   	massive[rand] = mass;
	}
}
//trailer
static const TRiModel[] = {3171,3168,3172};
public: LoadTrailer()
{
	new currenttime = GetTickCount();
	if(!cache_num_rows()) return printf("LoadTrailer загрузился за %i ms [NO ACTIVE CACHE]", GetTickCount() - currenttime);
	new id = Iter_Free(OWNABLETRi);
	for(new i; i < cache_num_rows(); i++) LoadOwnableTrailers(i,id);
	return printf("LoadTrailer загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadOwnableTrailers(i,id)
{
   	cache_get_int(i, !"ID",TRi[id][tID]);
    cache_get_string(i, !"Owner", TRi[id][tOwner]);
    cache_get_float(i, "Pos_X", TRi[id][tPos_X]);
    cache_get_float(i, "Pos_Y", TRi[id][tPos_Y]);
    cache_get_float(i, "Pos_Z", TRi[id][tPos_Z]);
    cache_get_float(i, "Pos_rX", TRi[id][tPos_rX]);
    cache_get_float(i, "Pos_rY", TRi[id][tPos_rY]);
    cache_get_float(i, "Pos_rZ", TRi[id][tPos_rZ]);
    cache_get_int(i, !"Lock", TRi[id][tLock]);
    cache_get_int(i, !"Parked", TRi[id][tPark]);
    cache_get_int(i, !"Nalog", TRi[id][tNalog]);
    cache_get_int(i, !"Model", TRi[id][tModel]);
    cache_get_int(i, !"Activated", TRi[id][tActivated]);
    UpdateTrailer(INVALID_PLAYER_ID,id,0);
    Iter_Add(OWNABLETRi, id);
}
stock GetTrailerID(id)
{
	new id2 = INVALID_PLAYER_ID;
	foreach(new i: OWNABLETRi)
	{
	    if(GetString(TRi[i][tOwner],PN(id)))
		{
			id2 = i;
			break;
		}
	}
	return id2;
}
stock UpdateTrailer(playerid,id,type)
{
	//0=припаркован 1=в движении
	if(!IsPlayerConnectEx(id)) return SCM(playerid,0xff9966FF,!"Ошибка:{FFFFFF} Трейлер не был заспавнен!");
	if(!type && playerid != INVALID_PLAYER_ID) playerid = INVALID_PLAYER_ID;
	if(IsValidDynamicPickup(TRi[id][tPickup])) DestroyDynamicPickupEx(TRi[id][tPickup]);
	if(IsValidDynamic3DTextLabel(TRi[id][tLPickup])) DestroyDynamic3DTextLabel(TRi[id][tLPickup]);
	if(IsValidDynamicObject(TRi[id][tObject])) DestroyDynamicObject(TRi[id][tObject]);
	if(playerid != INVALID_PLAYER_ID && IsValidVehicle(TRiVehicle[playerid])) destroyvehicle_(TRiVehicle[playerid]);
	if(TRi[id][tActivated]) TRi[id][tObject] = CreateDynamicObject(TRiModel[TRi[id][tModel]],TRi[id][tPos_X], TRi[id][tPos_Y], TRi[id][tPos_Z]-1, TRi[id][tPos_rX], TRi[id][tPos_rY], TRi[id][tPos_rZ]);
	if(!type)
	{
	    if(!TRi[id][tActivated]) return 1;
	    new Float:x[3];
	    x[0] = TRi[id][tPos_X];
	    x[1] = TRi[id][tPos_Y];
	    x[2] = TRi[id][tPos_Z];
	    //ShiftCords(0, x[0], x[1], x[2], 3.0);
		TRi[id][tPickup] = CreateDynamicPickup(19523, 1, x[0]-1, x[1]-1.5, x[2]-0.2);
	 	str_1[0] = EOS, f(str_1,sizeof(str_1),"Трейлер {ffffff}№%i\n{ff9966}Владелец: {ffffff}%s\n{ff9966}Дверь %s\n\n{ff9966}[ {ffffff}ALT {ff9966}]",TRi[id][tID],TRi[id][tOwner],TRi[id][tLock] ? ("{b3ff66}открыта") : ("{ff704d}закрыта"));
		TRi[id][tLPickup] = CreateDynamic3DTextLabel(str_1,0xFF9966FF, x[0]-1, x[1]-1.5, x[2]-0.2, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}
	else
	{
	    if(playerid == INVALID_PLAYER_ID) return 1;
	    new Float:x[3];
	    GetPlayerPos(playerid,x[0],x[1],x[2]);
     	TRiVehicle[playerid] = CreateVehicle(607, x[0],x[1]+5,x[2], 90.0, -1, -1, -1);
    	LinkVehicleToInterior(TRiVehicle[playerid],1);
		AttachObjectToVehicle(TRi[id][tObject], TRiVehicle[playerid], -0.227439, -1.792068, -1.119750, 0.000000, 0.000000, 180.0);
	    DisableRemoteVehicleCollisions(TRiVehicle[playerid], 0);
	    TrailerToVehicle(playerid);
	}
	return TRi[id][tPark] = type;
}
stock TrailerToVehicle(playerid)
{
	for(new i; i < 10; i++)
    {
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) AttachTrailerToVehicle(TRiVehicle[playerid],GetPlayerVehicleID(playerid));
		else { break; }
	}
}
stock TrailerLock(playerid,id)
{
	TRi[id][tLock] = !TRi[id][tLock];
	UpdateDataInt("trailers", "Lock", TRi[id][tLock], TRi[id][tID], "=");
    SCMf(playerid,0xff9966FF,"[ Оповещение ]{FFFFFF} Вы %s {ffffff}дверь",TRi[id][tLock] ? ("{ff704d}Закрыть") : ("{b3ff66}Открыть"));
    UpdateTrailer(INVALID_PLAYER_ID,id,0);
}
stock TrailerNalog(playerid,id)
{
	if(TRi[id][tNalog] < 1000) return SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}Очень маленькая сумма для оплаты.");
	if(GetMoney(playerid) <= TRi[id][tNalog]) return SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}У вас недостаточно средств.");
	GiveMoney(playerid,-TRi[id][tNalog]);
	SCMf(playerid,0xff9966FF,!"[ Оповещение ] {FFFFFF}Вы оплатили налог на сумму %i$.",TRi[id][tNalog]);
	UpdateDataInt("trailers", "Nalog", TRi[id][tNalog], TRi[id][tID], "=");
	return TRi[id][tNalog] = 0;
}
CMD:findtrailer(playerid, params[])
{
	extract params -> new str; else return 1;
	new id = GetTrailerID(playerid);
	if(!IsPlayerConnectEx(id)) return SCM(playerid,0xff9966FF,!"Ошибка:{FFFFFF} У вас нет трейлера!");
	return 1;
}
stock TrailerBuy(playerid)
{
	str_1[0] = EOS, f(str_1, sizeof(str_1),"Выберите трейлер (осталось: %i)", MAX_TI-Iter_Count(OWNABLETRi)-2);
	SPD(playerid, 1428, DIALOG_STYLE_LIST, str_1, "- трейлер {ff9966}№1 (маленький)\t[$1800000]\n- трейлер {ff9966}№2 (средний)\t[$3500000]\n- трейлер {ff9966}№3 (большой)\t[$3900000]", "Выбрать", "Отмена");
}
stock TrailerTake(playerid)
{
	if(GetPlayerState(playerid) != 2) return 1;
	new number = GetVehicleID(GetPlayerVehicleID(playerid));
	if(!IsPlayerHaveCar(playerid, number)) return SCM(playerid, 0xff9966FF,!"Ошибка:{FFFFFF}Это не ваш автомобиль!");
	new id = GetTrailerID(playerid);
	if(!TRi[id][tActivated]) return SCM(playerid, 0xff9966FF,!"Ошибка:{FFFFFF}Вы уже активировали трейлер!");
	TRi[id][tActivated] = 1;
	J_SetVehiclePos(GetPlayerVehicleID(playerid),2043.0, 2500.0, 31.0);
	return UpdateTrailer(playerid, id, 1);
}
cmd:trmenu(playerid)
{
	new id = GetTrailerID(playerid);
	if(!IsPlayerConnectEx(id)) return SCM(playerid,0xff9966FF,!"Ошибка:{FFFFFF} У вас нет трейлера!");
 	if(TRi[id][tPark]) str_1[0] = EOS,f(str_1, sizeof(str_1), "Припарковать трейлер\nОтцепить трейлер\n%s {ffffff}дверь\nПродать трейлер диллеру\nПродать трейлер игроку\n%s\nОплатить налоги (сумма: %i$ / 144000$)", TRi[id][tLock] ? ("{ff704d}Закрыть") : ("{b3ff66}Открыть"), TRi[id][tActivated] ? ("{ffcc66}Заберите Ваш трейлер в салоне") : ("{ffcc66}Найти трейлер (/findtrailer)"), TRi[id][tNalog]);
	else str_1[0] = EOS,f(str_1, sizeof(str_1), "Прицепить трейлер\n%s {ffffff}дверь\nПродать трейлер диллеру\nПродать трейлер игроку\n%s\nОплатить налоги (сумма: %i$ / 144000$)", TRi[id][tLock] ? ("{ff704d}Закрыть") : ("{b3ff66}Открыть"), TRi[id][tActivated] ? ("{ffcc66}Заберите Ваш трейлер в салоне") : ("{ffcc66}Найти трейлер (/findtrailer)"), TRi[id][tNalog]);
	return SPD(playerid, 9088, DIALOG_STYLE_LIST, !"{ff9966}Трейлер Меню", str_1, !"Выбрать", !"Закрыть");
}
CMD:addwh(playerid, params[])
{
	/*extract params -> new str; else return 1;
	SCM(playerid,-1,"+");
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	mysql_queryf(mysql, "INSERT INTO `warehouses` (`Enter_X`, `Enter_Y`, `Enter_Z`, `TypeAngle`) VALUES ('%.2f','%.2f','%.2f','%i');", true, pos[0], pos[1], pos[2], str);
    return AddProperty("warehouses","The State");*/
	return 1;
}
public: LoadWareHouses()
{
	for(new i; i < sizeof WareHouseDoor; i++)
	{
		WareHouseObject[i] = CreateDynamicObject(19796, WareHouseDoor[i][wPosition][0], WareHouseDoor[i][wPosition][1], WareHouseDoor[i][wPosition][2], WareHouseDoor[i][wPosition][3], WareHouseDoor[i][wPosition][4], WareHouseDoor[i][wPosition][5], WareHouseDoor[i][VirtualWorld], 104, -1, STREAMER_OBJECT_SD, 70.0); // 3
		SetDynamicObjectMaterial(WareHouseObject[i], 2, 13065, "sw_fact02alt", "spandLoadingDoor", 0);
		SetDynamicObjectMaterial(WareHouseObject[i], 1, 13065, "sw_fact02alt", "spandLoadingDoor", 0);
		SetDynamicObjectMaterial(WareHouseObject[i], 0, 9515, "bigboxtemp1", "ws_garagedoor3_white", 0xFFCCCCCC);
	}
	new currenttime = GetTickCount();
	TOTAL_WAREHOUSES = cache_num_rows();
	if(TOTAL_WAREHOUSES >= MAX_WAREHOUSES) return print(!"Лимит складов");
	else if(!TOTAL_WAREHOUSES) return print(!"складов нет!");
	for(new i; i < TOTAL_WAREHOUSES; i++) LoadOwnableStorage(i,i);
	return printf("[Public] LoadWareHouses загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено складских помещений: %i", TOTAL_WAREHOUSES);
}
stock LoadOwnableStorage(i,id)
{
	cache_get_int(i, !"ID", WareHouse[id][wID]);
	cache_get_string(i, !"Owner", WareHouse[id][wNameOwner]);
	cache_get_float(i, "Enter_X", WareHouse[id][wEnter_X]);
	cache_get_float(i, "Enter_Y", WareHouse[id][wEnter_Y]);
	cache_get_float(i, "Enter_Z", WareHouse[id][wEnter_Z]);
	cache_get_int(i, !"TypeAngle", WareHouse[id][wTypeAngle]);
	cache_get_int(i, !"CodeDostup", WareHouse[id][wCodeDostup]);
	cache_get_int(i, !"VirtualWorld", WareHouse[id][wVirtualWorld]);
	cache_get_int(i, !"Door", WareHouse[id][wDoor]);
    cache_get_string(i, !"Item", str_1), sscanf(str_1, "p<,>a<i>[151]", WareHouse[id][wItem]);
    cache_get_string(i, !"ItemAmount", str_1), sscanf(str_1, "p<,>a<i>[151]", WareHouse[id][wItemAmount]);
	str_1[0] = EOS, cache_get_string(0, !"InvWareHouseColor", str_1), sscanf(str_1, "p<,>a<i>[150]", InvWareHouseColor[id]);
   	str_1[0] = EOS, cache_get_string(0, !"ItemParams", str_1), sscanf(str_1, "p<,>a<i>[150]", InvWareHouseParams[0][id]);
	str_1[0] = EOS, cache_get_string(0, !"ItemParams_2", str_1), sscanf(str_1, "p<,>a<i>[150]", InvWareHouseParams[1][id]);
	str_1[0] = EOS, cache_get_string(0, !"ItemUID", str_1), sscanf(str_1, "p<,>a<i>[150]", InvWareHouseUID[id]);
	UpdateStorage(id);
}
stock UpdateStorage(id)
{
	if(IsValidDynamicPickup(warePickup[id])) DestroyDynamicPickupEx(warePickup[id]);
	if(IsValidDynamicPickup(warePickupInside[id])) DestroyDynamicPickupEx(warePickupInside[id]);
	if(IsValidDynamic3DTextLabel(ware3DText[id])) DestroyDynamic3DTextLabel(ware3DText[id]);
	if(IsValidDynamic3DTextLabel(ware3DTextInside[id])) DestroyDynamic3DTextLabel(ware3DTextInside[id]);
	switch(WareHouse[id][wTypeAngle])
	{
		case 0: //слево -
		{
			WareHouse[id][wMenu_X] = WareHouse[id][wEnter_X]-5.2322;
			WareHouse[id][wMenu_Y] = WareHouse[id][wEnter_Y];
			WareHouse[id][wMenu_Z] = WareHouse[id][wEnter_Z];
		}
		case 1: //справо +
		{
			WareHouse[id][wMenu_X] = WareHouse[id][wEnter_X]+5.2322;
			WareHouse[id][wMenu_Y] = WareHouse[id][wEnter_Y];
			WareHouse[id][wMenu_Z] = WareHouse[id][wEnter_Z];
		}
		case 2: //прямо
		{
			WareHouse[id][wMenu_X] = WareHouse[id][wEnter_X];
			WareHouse[id][wMenu_Y] = WareHouse[id][wEnter_Y]+5.2322;
			WareHouse[id][wMenu_Z] = WareHouse[id][wEnter_Z];
		}
	}
	new style = SearchStorageCP(id);
	warePickupInside[id] = 	CreateDynamicPickup(1277, 1, WareHouse[id][wMenu_X], WareHouse[id][wMenu_Y], WareHouse[id][wMenu_Z], WareHouse[id][wVirtualWorld], 104);
	warePickup[id] = CreateDynamicPickup(style, 1, WareHouse[id][wEnter_X], WareHouse[id][wEnter_Y], WareHouse[id][wEnter_Z], WareHouse[id][wVirtualWorld], 104);
	//3dtext
	ware3DTextInside[id] = CreateDynamic3DTextLabel(!"Нажмите ALT, чтобы\nоткрыть меню склада", 0xCCCCCCFF, WareHouse[id][wMenu_X], WareHouse[id][wMenu_Y], WareHouse[id][wMenu_Z], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, WareHouse[id][wVirtualWorld], 104);
	if(style == 19197) str_1[0] = EOS, f(str_1, sizeof(str_1), "Склад №%i (uid %i)\n\n{ffffff}Владелец: {cccccc}%s\n{ffffff}Нажмите ALT, чтобы открыть дверь",WareHouse[id][wID], WareHouse[id][wID],WareHouse[id][wNameOwner]);
	else str_1[0] = EOS, f(str_1, sizeof(str_1), "Склад №%i (uid %i)\n\n\
	{ffffff}Стоимость: {cccccc}50000000$\n{ffffff}Нажмите ALT, чтобы купить",WareHouse[id][wID], WareHouse[id][wID]);
	ware3DText[id] = CreateDynamic3DTextLabel(!"text", 0x338FAFFF, WareHouse[id][wEnter_X], WareHouse[id][wEnter_Y], WareHouse[id][wEnter_Z], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, WareHouse[id][wVirtualWorld], 104);
	UpdateDynamic3DTextLabelText(ware3DText[id], 0x338FAFFF, str_1);
	//
}
stock SearchStorageCP(id)
{
	if(GetString(WareHouse[id][wNameOwner], "The State")) return 1274;
	return 19197;
}
//
public: LoadHouses()
{
	new currenttime = GetTickCount();
	OWNABLEHOUSES = cache_num_rows();
	if(OWNABLEHOUSES >= MAX_HOUSES) return print(!"Лимит домов");
	else if(!OWNABLEHOUSES) return print(!"Домов нет!");
	for(new i; i < OWNABLEHOUSES; i++) LoadOwnableHouses(i,i);
	return printf("[Public] LoadHouses загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено домов: %i", OWNABLEHOUSES);
}
stock LoadOwnableHouses(i,id)
{
	cache_get_int(i, !"ID", HouseInfo[id][hID]);
	cache_get_float(i, "Enter_X", HouseInfo[id][hEnter_X]);
	cache_get_float(i, "Enter_Y", HouseInfo[id][hEnter_Y]);
	cache_get_float(i, "Enter_Z", HouseInfo[id][hEnter_Z]);
	cache_get_float(i, "Exit_X", HouseInfo[id][hExit_X]);
	cache_get_float(i, "Exit_Y", HouseInfo[id][hExit_Y]);
	cache_get_float(i, "Exit_Z", HouseInfo[id][hExit_Z]);
	cache_get_string(i, !"Owner", HouseInfo[id][hOwner]);
	cache_get_string(i, !"Room_Owner", str_1), sscanf(str_1, "p<,>a<i>[5]", HRoomOwner[id]);
	cache_get_int(i, !"Level", HouseInfo[id][hLevel]);
	cache_get_int(i, !"Cost", HouseInfo[id][hCost]);
	cache_get_int(i, !"Lock", HouseInfo[id][hLock]);
	cache_get_int(i, !"Interior", HouseInfo[id][hInt]);
	cache_get_int(i, !"Money", HouseInfo[id][hMoney]);
	cache_get_int(i, !"Podval", HouseInfo[id][hPodval]);
	cache_get_int(i, !"Nalog", HouseInfo[id][hNalog]);
	cache_get_int(i, !"Klass", HouseInfo[id][hKlass]);
	cache_get_int(i, !"Garage", HouseInfo[id][hGarage]);
	cache_get_float(i, "Garage_X", HouseInfo[id][hGarage_X]);
	cache_get_float(i, "Garage_Y", HouseInfo[id][hGarage_Y]);
	cache_get_float(i, "Garage_Z", HouseInfo[id][hGarage_Z]);
    cache_get_string(i, !"Description", HouseInfo[id][hDescription]);
    cache_get_int(i, !"VentPodval", HouseInfo[id][hVentPodval]);
    cache_get_string(i, !"Item", str_1), sscanf(str_1, "p<,>a<i>[90]", HouseInfo[id][hItem]);
    cache_get_string(i, !"ItemAmount", str_1), sscanf(str_1, "p<,>a<i>[90]", HouseInfo[id][hItemAmount]);
    cache_get_string(i, !"ModelObject", str_1), sscanf(str_1, "p<,>a<i>[10]", HouseInfo[id][hModelObject]);
    cache_get_string(i, !"ObjectPosX", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectPosX]);
    cache_get_string(i, !"ObjectPosY", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectPosY]);
    cache_get_string(i, !"ObjectPosZ", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectPosZ]);
    cache_get_string(i, !"ObjectRotX", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectRotX]);
    cache_get_string(i, !"ObjectRotY", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectRotY]);
    cache_get_string(i, !"ObjectRotZ", str_1), sscanf(str_1, "p<,>a<f>[10]", HouseInfo[id][hObjectRotZ]);
	//for(new j; j < 10; j++)
	//{
		//HouseInfo[id][hObjectEdit][j] = -1;
		//if(!HouseInfo[id][hModelObject][j]) HouseInfo[id][hModelObject][j] = -1;
		//AddObjectProperty(false, id, j);
	//}
   	str_1[0] = EOS, cache_get_string(0, !"InvHouseParams", str_1), sscanf(str_1, "p<,>a<i>[90]", InvHouseParams[0][id]);
	str_1[0] = EOS, cache_get_string(0, !"InvHouseParams_2", str_1), sscanf(str_1, "p<,>a<i>[90]", InvHouseParams[1][id]);
	str_1[0] = EOS, cache_get_string(0, !"InvHouseColor", str_1), sscanf(str_1, "p<,>a<i>[90]", InvHouseColor[id]);
	str_1[0] = EOS, cache_get_string(0, !"InvHouseUID", str_1), sscanf(str_1, "p<,>a<i>[90]", InvHouseUID[id]);
    if(HouseInfo[id][hVentPodval])
    {
		str_1[0] = EOS, cache_get_string(i, !"MainingCardData", str_1);
		if(strlen(str_1) > 3)
		{
			String_UnPackMassive(str_1, SQL_GET_ROW_STR, "s[128]", "|");
			for(new d; d < 20; d++) sscanf(SQL_GET_ROW_STR[d], "p<,>dfdfd", MiningBTC[id][d][card_status], MiningBTC[id][d][card_balance], MiningBTC[id][d][card_level], MiningBTC[id][d][card_percent], MiningBTC[id][d][card_last_update]);
		}
    }
	House3DText[id] = CreateDynamic3DTextLabel(!" Дом ",0xE1AE3CFF,HouseInfo[id][hEnter_X], HouseInfo[id][hEnter_Y],HouseInfo[id][hEnter_Z],25.0);
    UpdateHouseGarage(id);
	UpdateHouse(id);
}
stock ProxDetectorS(Float:radi, playerid, targetid, spec = 0)
{
   	new Float:p[3];
    if(!IsPlayerConnectEx(playerid)) return 0;
    if(!IsPlayerConnectEx(targetid)) return 0;
    if(!spec)
    {
        if(GetPlayerState(playerid) == 9) return 0;
        if(GetPlayerState(targetid) == 9) return 0;
    }
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return 0;
    if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2])) return 0;
    return 1;
}
stock GetMonthDays(year, month)
{
	switch(month)
	{
	    case 0:     return 31;
	    case 1: 	return 31;
	    case 2: 	return februarydays(year);
	    case 3: 	return 31;
	    case 4: 	return 30;
	    case 5: 	return 31;
	    case 6: 	return 30;
	    case 7: 	return 31;
	    case 8: 	return 31;
	    case 9: 	return 30;
	    case 10: 	return 31;
	    case 11: 	return 30;
	    case 12: 	return 31;
	    default: 	return -1;
	}
	return -1;
}
stock februarydays(year)
{
	if(!(year % 4)) return 29;
	else return 28;
}
public: LoadGangZones()
{
	HideMapZone = GangZoneCreate(-3000,-3000,3000,3000);
	new currenttime = GetTickCount();
	GANGZONES = cache_num_rows();
	for(new i=1; i < GANGZONES; i ++)
	{
		cache_get_int(i, !"GangID", GZInfo[i][gzFracID]);
		cache_get_int(i, !"IsFamily", GZInfo[i][gzIsFamily]);
		if(GZInfo[i][gzIsFamily] != false)
		{
			if(lv_id == -1) lv_id = i;
			cache_get_int(i, !"FamAttackID", GangZone_FamAttackID[i-lv_id]);
			if(GangZone_FamAttackID[i-lv_id] != -1) Iter_Add(FamilysCapture, i);
			str_1[0] = EOS, cache_get_string(0, !"FamDataWar", str_1), sscanf(str_1, "p<,>a<i>[3]", GangZone_FamDataWar[i-lv_id]);
		}
		cache_get_float(i, "Min_X", GZInfo[i][gzMin_X]);
	 	cache_get_float(i, "Min_Y", GZInfo[i][gzMin_Y]);
	 	cache_get_float(i, "Max_X", GZInfo[i][gzMax_X]);
	 	cache_get_float(i, "Max_Y", GZInfo[i][gzMax_Y]);
		GangZone[i] = GangZoneCreate(GZInfo[i][gzMin_X],GZInfo[i][gzMin_Y],GZInfo[i][gzMax_X],GZInfo[i][gzMax_Y]);
		GangZone_X[i] = ((GZInfo[i][gzMin_X] + GZInfo[i][gzMax_X]) / 2);
		GangZone_Y[i] = ((GZInfo[i][gzMin_Y] + GZInfo[i][gzMax_Y]) / 2);
		MapAndreas_FindZ_For2DCoord(GangZone_X[i], GangZone_Y[i], GangZone_Z[i]);
		str_1[0] = EOS, f(str_1, sizeof (str_1), "[ {D45B5B}Территория №%i {ffffff}]\n\n{cccccc}Посигнальте, чтобы\nзабрать ресурсы", GZInfo[i][gzIsFamily] != false ? i-lv_id+1 : i);
		CreateDynamic3DTextLabel(str_1, 0xFFFFFFFF, GangZone_X[i], GangZone_Y[i], GangZone_Z[i]+0.8, 15.0000);
		CreateDynamicPickup(1274, 23, GangZone_X[i], GangZone_Y[i], GangZone_Z[i]+0.8);
	}
	printf("LoadGangZones загрузился за %i ms", GetTickCount() - currenttime);
}
stock SaveGangZone(zoneid)
{
	mysql_pqueryf(mysql, "UPDATE `zonesinfo` SET `GangID` = '%i', `Min_X` = '%.4f', `Min_Y` = '%.4f', `Max_X` = '%.4f', `Max_Y` = '%.4f' WHERE `ID` = '%i' LIMIT 1",\
	GZInfo[zoneid][gzFracID],\
	GZInfo[zoneid][gzMin_X],\
	GZInfo[zoneid][gzMin_Y],\
	GZInfo[zoneid][gzMax_X],\
	GZInfo[zoneid][gzMax_Y],\
	zoneid + 1);
	return 1;
}
stock NoVehicleFuel(carid)
{
	new playerid = GetVehicleSeat(carid, 0);
	if(playerid != INVALID_PLAYER_ID) SCM(playerid, COLOR_GREY, !"В этом транспорте закончилось топливо.");
	return 1;
}
stock ValidNumberCars(playerid)
{
	new count = 2;
	switch(PI[playerid][pVIP][0])
	{
	    case 4,5: count += 3;
	    case 6: count += 5;
		case 7: return 20+PI[playerid][pAddSlotCar];
	}
	if(GetPlayerHouses(playerid) !=-1) count++;
	count += PI[playerid][pAddSlotCar];
	return count;
}
stock IsValidNumberCars(playerid)
{
	new cars = GetNumberCars(playerid)-2;
	new vc = ValidNumberCars(playerid);
    if(vc >= cars) return 1;
    return 0;
}
stock GetIntGHS( interior ) return interior;
stock SetHouseInt( houseid, inte )
{
	new i = GetIntGHS(inte);
    HouseInfo[houseid][hExit_X] = GHSPos[i][0];
    HouseInfo[houseid][hExit_Y] = GHSPos[i][1];
    HouseInfo[houseid][hExit_Z] = GHSPos[i][2];
	HouseInfo[houseid][hInt] = IntInfo[inte][iInterior];
	HouseInfo[houseid][hLevel] = IntInfo[inte][iLevel];
 	UpdateDataFloat("houses", "Exit_X", HouseInfo[houseid][hExit_X], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "Exit_Y", HouseInfo[houseid][hExit_Y], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "Exit_Z", HouseInfo[houseid][hExit_Z], HouseInfo[houseid][hID], 1);
    UpdateDataInt("houses", "Interior", HouseInfo[houseid][hInt], HouseInfo[houseid][hID],"=");
    UpdateDataInt("houses", "Level", HouseInfo[houseid][hLevel], HouseInfo[houseid][hID],"=");
	UpdateHouse(houseid);
	return 1;
}
stock IsAArmy(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_ARMYSF,TEAM_ARMY,TEAM_ARMYLV: return 1;
	}
	return 0;
}
stock IsANews(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return team;
	}
	return 0;
}
stock IsANewsCar(carid)
{
	switch(vTemp[carid][vTeam])
	{
  		case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return 1;
	}
	return 0;
}
stock IsACop(playerid, other = 1)
{
	new team = GetTeamID(playerid);
	if(!TeamDuty{playerid}) return 0;
	if(other)
	{
		switch(team)
		{
		    case TEAM_LSPD..TEAM_RCPD, TEAM_FBI,TEAM_LVPD, TEAM_SFPD: return 1;
		}
	}
	else
	{
	    switch(team)
		{
		    case TEAM_LSPD..TEAM_RCPD, TEAM_FBI,TEAM_LVPD, TEAM_SFPD: return 1;
		}
	}
	return 0;
}
stock IsACopCar(carid, other = 1)
{
	if(other)
	{
		switch(vTemp[carid][vTeam])
		{
      		case TEAM_LSPD..TEAM_RCPD, TEAM_FBI,TEAM_LVPD, TEAM_SFPD: return 1;
		}
	}
	else
	{
	    switch(vTemp[carid][vTeam])
		{
		    case TEAM_LSPD..TEAM_RCPD,TEAM_LVPD: return 1;
		}
	}
	return 0;
}
stock SendCopsMessage(color,const string[])
{
 	foreach_player(i)
	{
	    if(IsACop(i) && !PI[i][pKillShow]) SCM(i, color, string);
	}
	return 1;
}
stock SetFullness(playerid, amount)
{
	if(amount > 100) Fullness{playerid} = 100;
	else if(amount < 0) Fullness{playerid} = 0;
	else Fullness{playerid} = amount;
	UpdatePlayerDataInt(playerid, "Fullness", Fullness{playerid});
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.playerSatiety', '[%i]');", Fullness{playerid});
	return 1;
}
stock GiveFullness(playerid, amount)
{
	SetFullness(playerid,Fullness{playerid} + amount);
	if(Fullness{playerid} + amount > 100) Fullness{playerid} = 100;
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.playerSatiety', '[%i]');", Fullness{playerid});
}
stock ASCMToAll(color,const text[]) foreach_player(i) if(!PI[i][pAdmAction]) SCM(i,color,text);
stock STM(team,color,const text[]) foreach_player(i) if(!PI[i][pRacia] && GetTeamID(i) == team || Vnedren[i] == team) SCM(i,color,text);
stock SendVIPMessage(color,const text[]) foreach_player(i) if(!PI[i][pVipChat] && PI[i][pVIP][0] >= 5) SCM(i,color,text);
stock SendFamilyMessage(family, const text[]) 
{
	str_1[0] = EOS, f(str_1, sizeof(str_1), "0x%sFF", FamilyChatColor[ FamilyInfo[ FamilyID_(family) ][famChatColor] ]);
	foreach(new i: Familys) if(!PI[i][pFamilyChat] && PI[i][pFamilyMember] == family) SCM(i, HexStr(str_1), text);
}
stock SendGosMessage(color,const text[])
{
 	foreach_player(i)
	{
    	if(GetTeamID(i) == TEAM_LSPD	||
		GetTeamID(i) == TEAM_RCPD		||
		GetTeamID(i) == TEAM_FBI		||
		GetTeamID(i) == TEAM_ARMY		||
		GetTeamID(i) == TEAM_ARMYSF		||
		GetTeamID(i) == TEAM_SFPD		||
		GetTeamID(i) == TEAM_LICENSERS	||
        GetTeamID(i) == TEAM_MEDICLS	||
        GetTeamID(i) == TEAM_MEDICLV	||
        GetTeamID(i) == TEAM_MERIALS	||
		GetTeamID(i) == TEAM_ARMYLV		||
		GetTeamID(i) == TEAM_RADIO		||
		GetTeamID(i) == TEAM_RADIOSF	||
		GetTeamID(i) == TEAM_RADIOLV	||
		GetTeamID(i) == TEAM_BANK		||
		GetTeamID(i) == TEAM_MEDICSF	||
		GetTeamID(i) == TEAM_LVPD) if(!PI[i][pDepChat]) SCM(i, color, text);
    }
    return 1;
}
stock SetPlayerCriminal(playerid,forplayerid,wanted,const reason[])
{
    if(wanted > 6) PI[forplayerid][pWanted] = 6;
    else PI[forplayerid][pWanted] = wanted;
    if(PI[forplayerid][pZKP] > wanted*10){
		SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У игрока %s[%i] которому вы выдали розыск был аннулирован. (Положительная законопослушность)", PN(forplayerid), forplayerid);
		SCMf(forplayerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Игрок %s[%i] попытался вам выдать розыск, но у вас хорошая законопослушность и розыск был аннулирован! (%i)", PN(playerid), playerid, PI[forplayerid][pZKP]);
        PI[forplayerid][pZKP] -= wanted*10;
        UpdatePlayerDataInt(forplayerid, "ZKP", PI[forplayerid][pZKP]);
		return 1;
    }
    J_SetPlayerWantedLevel(forplayerid, PI[playerid][pWanted]);
    SPDf(forplayerid, 0, 0, !"", !"Понял", !"", "{FFFFFF} Вы были объявлены в розыск!\n Обвинитель: {FF6347}%s[%i].{FFFFFF}\n Причина: {FF6347}%s.", PN(playerid), playerid, reason);
    SCMf(forplayerid, -1, "Ваш текущий уровень розыска: {FF6347}%i",PI[forplayerid][pWanted]);
    f(str_2, 145, "Внимание!{FFFFFF} %s[%i] был(а) объявлен(a) в розыск! Обвинитель: %s[%i] | Причина: {FF6347}%s",PN(forplayerid),forplayerid,PN(playerid),playerid,reason);
    SendCopsMessage(COLOR_LIGHTRED, str_2);
	SendAdminsMessage(COLOR_LIGHTRED, str_2);
    return 1;
}
stock IsPlayerInHisVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && IsPlayerHaveCar(playerid, GetVehicleID(GetPlayerVehicleID(playerid)))) return 1;
	return 0;
}
stock SendGovMessage(playerid, const result[])
{
    new team = GetTeamID(playerid);
    switch(team)
    {
    	case TEAM_LSPD,TEAM_LVPD,TEAM_RCPD,TEAM_FBI,TEAM_SFPD,TEAM_MEDICLS,
		TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_LICENSERS,TEAM_RADIO,
		TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF:
		{
			SCMAll(COLOR_GOV, (str_f("Гос.Новости: %s[%i]: %s",PN(playerid), playerid, result)));
		}
		default: return 0;
	}
	return 1;
}
static const Rules[][] =
{
    {"{9ACD32}1. Игровой процесс{FFFFFF}"},
    {"1.1 Запрещено использовать читы, трейнеры, моды и т.д"},
    {"1.2 Запрещено убивать игроков на месте спауна"},
	{"1.3 Запрещено использовать <ESC> в целях 'спасения' от оппонента"},
	{"1.4 Запрещено стоять на паузе в игре длительное время"},
	{"1.5 Запрещено использование багов, ошибок, недоработок мода"},
	{"1.6 Запрещена любая ускоренная прокачка персонажа и навыков"},
	{"1.7 Запрещено заниматься не игровой коммерцией"},
	{"1.8 Запрещено передавать свой пароль на сервере другим лицам"},
	{"\n{9ACD32}2. Процесс общения{FFFFFF}"},
	{"2.1 Запрещено проявлять неуважение к серверу и его разработчикам"},
	{"2.2 Запрещены угрозы игрокам (не относящиеся к игровому процессу)"},
	{"2.3 Запрещено слишком часто писать заглавными буквами"},
	{"2.4 Запрещено рекламировать что-либо (сайты, форумы, сервера)"},
	{"2.5 Запрещено часто повторять одинаковые фразы"},
	{"\n{9ACD32}3. Администрирование сервера{FFFFFF}"},
	{"3.1 Запрещено обсуждать/критиковать действия администрации"},
	{"3.2 Запрещено препятствовать администрации в работе"},
	{"3.3 Запрещено оскорблять администрацию сервера"},
	{"\n{9ACD32}4. Помощь по игре{FFFFFF}"},
	{"4.1 Основные функции сервера в меню персонажа, нажмите Y"},
	{"4.2 Чтобы обратиться за помощью, нажмите ALT+N Report/Support"}

};
stock ShowRules(playerid)
{
    str_2[0] = EOS;
	for(new i; i < sizeof(Rules); i++) f(str_2, sizeof(str_2), "%s.\n", Rules[i]);
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST, "{FFFFFF}Правила сервера", str_2, "Понял", "");
}
stock IsGiveWarn(playerid, targetid)
{
	if(PI[playerid][pMember] == PI[targetid][pMember] && PI[playerid][pRank] >= 9) return 1;
	return 0;
}
stock IsACopGate(gate)
{
	switch(GateInfo[gate][gOrg])
	{
	    case TEAM_LSPD,TEAM_FBI,TEAM_LVPD, TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsACopDoor(door)
{
	switch(DoorInfo[door][dOrg])
	{
	    case TEAM_LSPD,TEAM_FBI,TEAM_LVPD, TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsACopBarrier(barrier)
{
	switch(BarrierInfo[barrier][brOrg])
	{
	    case TEAM_LSPD,TEAM_LVPD,TEAM_FBI,TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsPlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y, i=-1)
{
	new Float:x,Float:y,Float:z;
	if(i == -1) GetPlayerPos(playerid, x, y, z);
	else x = TeleportInfo[i][tpExitPos_X], y = TeleportInfo[i][tpExitPos_Y], z = TeleportInfo[i][tpExitPos_Z];
	if((x <= max_x && x >= min_x) && (y <= max_y && y >= min_y)) return 1;
	return 0;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(gpss{playerid} == true)
	{
		gps_position[playerid][0] = 0.0, gps_position[playerid][1] = 0.0, gps_position[playerid][2] = 0.0;
		gpss{playerid} = false;
		DisablePlayerRaceCheckpoint(playerid);
		if(IsPlayerToRaceID[playerid] != -1) OnPlayerWinRace(playerid);
	}
	return 1;
}
stock OnPlayerWinRace(playerid)
{
	GiveDonate(playerid, IsPlayerRacePresentCount[playerid]);
	GiveDonate(IsPlayerToRaceID[playerid], -IsPlayerRacePresentCount[playerid]);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы выиграли гонку у игрока %s[%i]", PN(IsPlayerToRaceID[playerid]), IsPlayerToRaceID[playerid]);
	SCMf(IsPlayerToRaceID[playerid], COLOR_VALIK, "[Информация] {FFFFFF}Вы програли гонку у игрока %s[%i]", PN(playerid), playerid);
	UpdatePlayerQuest(playerid, 3, 1);
	DisablePlayerRaceCheckpoint(playerid);
	DisablePlayerRaceCheckpoint(IsPlayerToRaceID[playerid]);
	ResetRacePlayer(IsPlayerToRaceID[playerid]);
	ResetRacePlayer(playerid);
}
stock Send2BarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Приятного аппетита.");
        case 1: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Как говорится, смотри не переедайся. *Улыбается*");
        case 2: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Запивать чем-то будешь?");
    }
	return 1;
}
stock SendEatBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(4))
    {
		case 0: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Спасибо за покупку. Хорошего дня!");
		case 1: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Недалеко от сюда есть хороший бар, советую заглянуть.");
		case 2: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Без сдачи не найдется? *Улыбается*");
		case 3: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Спасибо за покупку, надеюсь тебе понравилось.");
    }
	return 1;
}
stock SendAmmoBot(playerid)
{
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Спасибо за покупку.");
        case 1: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Ты только эт смотри не балуйся.");
        case 2: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Ладно, держи и заходи еще *Улыбается*.");
    }
	return 1;
}
new Text3D:ActorBotMSG[MAX_ACTORS] = {NONE_3D_TEXT, ...};

public: ClearBotMessage(actorid)
{
	DestroyDynamic3DTextLabel(ActorBotMSG[actorid]), ActorBotMSG[actorid] = Text3D:NONE_3D_TEXT;
	ClearDynamicActorAnimations(actorid);
}

stock SendBotMessage(playerid, const mesage[])
{
	if(!IsAtBankomat(playerid, 2.0))
	{
	    new Float:x, Float:y, Float:z, Float:distance = 30.0, id;

		for(new i = 1; i < Streamer_CountItems(STREAMER_TYPE_ACTOR, true) + 1; i++)
		{
			GetDynamicActorPos(i, x, y, z);
			if(distance > GetPlayerDistanceFromPoint(playerid, x,y,z))
			{
				distance = GetPlayerDistanceFromPoint(playerid, x,y,z);
				id = i;
			}
		}
		ApplyDynamicActorAnimation(id, "PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		GetDynamicActorPos(id, x, y, z);

		if(ActorBotMSG[id] == Text3D:NONE_3D_TEXT)
		{
			ActorBotMSG[id] = CreateDynamic3DTextLabel(mesage, COLOR_GREY, x, y, z + 1.0, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, GetDynamicActorVirtualWorld(id)),
			SetTimerEx("ClearBotMessage", 10000, false, "d", id);
			Streamer_Update(playerid);
		}
		else UpdateDynamic3DTextLabelText(ActorBotMSG[id], COLOR_GREY, mesage);
	}
	if(strfind(mesage, "\n")==-1) SCM(playerid,COLOR_GREY,mesage);
	return 0;
}
stock IsAtBankomat(playerid,Float:distance)
{
    for(new i;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return 1;
	return 0;
}
stock SendNPCMessage(playerid, const mesage[])
{
	if(ChatTextNPC[GetUID_PlayerNPC[playerid]] == Text3D:-1)
	{
		ChatTextNPC[GetUID_PlayerNPC[playerid]] = CreateDynamic3DTextLabel(mesage, -1, 0.0, 0.0, 0.150000, 10.0, GetUID_PlayerNPC[playerid])
		SetTimerEx("ClearNPCMessage", 7000, false, "d", GetUID_PlayerNPC[playerid]);
	}
	else UpdateDynamic3DTextLabelText(ChatTextNPC[GetUID_PlayerNPC[playerid]], -1, mesage);
	foreach(new i: PlayerPlayersStream[playerid]) Streamer_Update(i);
	return 0;
}
public: ClearNPCMessage(actorid) DestroyDynamic3DTextLabel(ChatTextNPC[actorid]), ChatTextNPC[actorid] = Text3D:-1;
stock SendPedBot(playerid)
{
    switch(random(4))
    {
        case 0: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Ммм. Хороший выбор. Давно хотел себе такой.");
        case 1: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Этот костюм прям на вас сшитый *Улыбается*");
        case 2: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Такое чувство, что он прям на вас создан *Улыбается*");
        case 3: SendBotMessage(playerid,!"Продавец:\n{FFFFFF}Вы просто восхетительны в нем.");
    }
	return 1;
}
stock SendBarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Ухх, смотри не напивайся. *Улыбается*");
        case 1: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Хороший выбор.");
        case 2: SendBotMessage(playerid,!"Бармен:\n{FFFFFF}Надеюсь тебе понравится.");
    }
	return 1;
}
stock SendBankBot(playerid)
{
	if(!IsAtBankomat(playerid,5))
	{
	    switch(random(4))
	    {
	        case 0: SendBotMessage(playerid,!"Работник банка:\n{FFFFFF}Спасибо, обращайтесь еще.");
	        case 1: SendBotMessage(playerid,!"Работник банка:\n{FFFFFF}Все готово, можете все проверить.");
	        case 2: SendBotMessage(playerid,!"Работник банка:\n{FFFFFF}Хорошо что вы обратились именно ко мне *Улыбается*.");
	        case 3: SendBotMessage(playerid,!"Работник банка:\n{FFFFFF}Спасибо за обращение. Можете все проверить.");
	    }
	}
	else SendBotMessage(playerid,!"Всего доброго.");
	return 1;
}
/*stock ShowPlayer_AntiCheatSettings(playerid)
{
    new triggeredCount = 0, page = pAntiCheatSettingsPage{playerid}, next = 0, index = 0;
    str_2 = "Название\tНаказание\tНаказано\n";
    for(new i; i < sizeof(AC_CODE); i++)
    {
        if(i >= (page * AC_MAX_CODES_ON_PAGE) && i < (page * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE) next++;
        if(i >= (page - 1) * AC_MAX_CODES_ON_PAGE && i < ((page - 1) * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
        {
            triggeredCount = AC_CODE_TRIGGERED_COUNT[i];
            f(str_2, sizeof(str_2), "%s[%s] %s\t%s\t[%i игроков]\n", str_2, AC_CODE[i], AC_CODE_NAME[i], AC_TRIGGER_TYPE_NAME[AC_CODE_TRIGGER_TYPE[i]], triggeredCount);
            pAntiCheatSettingsMenuListData[playerid][index++] = i;
        }
    }
    if(next) strcat(str_2, !">>> Следующая страница\n");
    if(page > 1) strcat(str_2, !"<<< Предыдущая страница");
   	return SPD(playerid, 8788, DIALOG_STYLE_TABLIST_HEADERS, !"NEX-AC "NEX_AC_VERSION" BY XXL GAMES", str_2, !"Выбрать", !"Отмена");
}
stock ShowPlayer_AntiCheatEditCode(playerid, code)
{
    f(str_2, sizeof(str_2), "Код: %s | Название: %s", AC_CODE[code], AC_CODE_NAME[code]);
    for(new i; i < AC_MAX_TRIGGER_TYPES; i++)
    {
        strcat(str_1, AC_TRIGGER_TYPE_NAME[i]);
        if(i + 1 != AC_MAX_TRIGGER_TYPES) strcat(str_1, !"\n");
    }
    return SPD(playerid, 8789, DIALOG_STYLE_LIST, str_2, str_1, !"Выбрать", !"Назад");
}*/
stock GetMoney(playerid) return PI[playerid][pMoney];
stock GetBankMoney(playerid) return PI[playerid][pBank][0];
stock GetDonate(playerid) return PI[playerid][pVirMoney];
stock GetDonateRub(playerid) return PI[playerid][pRub];
stock GetPlayerPeakBiz(playerid)
{
	new num;
	for(new i; i < OWNABLEBIZES; i++) if(GetString(BizInfo[i][bOwner],PN(playerid))) num++;
	new limit;
	if(PI[playerid][pImprovement][2] != false) limit += 5;
	if(PI[playerid][pVIP][0] == 6) limit += 5;
	if(num <= limit) return 1;
	return 0;
}
stock GetPlayerBiz(playerid, bizid = -1)
{
    for(new i; i < OWNABLEBIZES; i++)
	{
		if(bizid == -1 && (GetString(BizInfo[i][bOwner],PN(playerid)) || BizInfo[i][bZam] == PI[playerid][pID])) return i;
		else if(bizid == i && (GetString(BizInfo[i][bOwner],PN(playerid)) || BizInfo[i][bZam] == PI[playerid][pID])) return 1;
	}
	return -1;
}
stock FindOrgNumbers(playerid,id)
{
    new num=1;
 	foreach_player(i)
	{
		if(PI[i][pMember] == id && PI[i][pTelNum]!=0 && TeamDuty{i})
		{
			SCMf(playerid, -1, "{FFFFFF}%i. {C7C4C4}%s %s(%i){FFFFFF} | Номер телефона: {C7C4C4}%i.{FFFFFF}",num,GetRankName(GetTeamID(i),PI[i][pRank]),PN(i),i,PI[i][pTelNum]);
			num++;
		}
	}
	//AC_FIX_DIALOG_F(playerid, 0);
	SPDf(playerid, 0, 0, !"", !"Принять", !"", "{FFFFFF}\n\nВсего в онлайне %i человек.\n\n", (num-1));
	return 1;
}
stock FindJobNumbers(playerid,id)
{
    new num=1;
 	foreach_player(i)
	{
		if(PI[i][pJob] == id && PI[i][pTelNum]!=0)
		{
			SCMf(playerid, -1, "{FFFFFF}%i. {C7C4C4}%s %s(%i){FFFFFF} | Номер телефона: {C7C4C4}%i.{FFFFFF}",num,GetJobName(id),PN(i),i,PI[i][pTelNum]);
			num++;
		}
	}
	//AC_FIX_DIALOG_F(playerid, 0);
	SPDf(playerid, 0, 0, !"", !"Принять", !"", "{FFFFFF}\n\nВсего в онлайне %i человек.\n\n", (num-1));
	return 1;
}
stock IsBazarVehicle(veh_id)
{
    for(new i; i < sizeof(autoBazarInfo); i++)
    {
        if(autoBazarInfo[i][autoBazarCarID] != veh_id) continue;
        return 1;
    }
    return 0;
}
//441,464,465,501,564
stock J_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,interior = 0,world = 0)
{
	new carid = AddStaticVehicleEx(model, x, y, z, a, color_1, color_2, spawntime);
	if(!IsUniqueCar(model)) SetVehicleHealth(carid, 4000);
	vTemp[carid][vLock]=0;
	vTemp[carid][vModel] = model;
	vTemp[carid][vPos_X] = x;
	vTemp[carid][vPos_Y] = y;
	vTemp[carid][vPos_Z] = z;
	vTemp[carid][vPos_A] = a;
	vTemp[carid][vPlayer] = -1;
	vTemp[carid][Fuel] = 100;
	LinkVehicleToInterior(carid, interior);
	SetVehicleVirtualWorld(carid, world);
    switch(model)
	{
	    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593, 441,464,465,501,564:  VehicleState[carid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510,15882,15883: VehicleState[carid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[carid] = VEHICLE_STATE_CAR;
	}
	if(model > 611)
	{
		str_1[0] = EOS, f(str_1, sizeof(str_1), "Модель:{FFFFFF} %s\n{73B461}[{FFFFFF}Доступно с лаунчера{73B461}]", InfoConfigVehicle[SearchVehicleName(model)][Model_Name]),
		v_Vehicle_LabelID[carid] = CreateDynamic3DTextLabel(str_1, 0x73B461FF, 1108.7747,-1485.2531,16.1149, 5.0000, INVALID_PLAYER_ID, carid, 0, -1, -1, 202);
	}
	return carid;
}
stock J_SetPlayerVIP(playerid, vip)
{
	PI[playerid][pVIP][0] = vip;
	str_1[0] = EOS;
	for(new i; i < 2; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pVIP][i]);
	UpdatePlayerDataStr(playerid, "VIP", str_1);
}
stock J_SetPlayerWantedLevel(playerid, wanted)
{
	PI[playerid][pWanted] = wanted;
	SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	UpdatePlayerDataInt(playerid, "Wanted", PI[playerid][pWanted]);
}
stock J_SetPlayerScore(playerid, score)
{
    PI[playerid][pLevel] = score;
    UpdatePlayerDataInt(playerid, "Level", PI[playerid][pLevel]);
	CheckNextLevel(playerid);
    return SetPlayerScore(playerid, score);
}
stock PlayerHospital(playerid, skip = 0)
{
	ClearAnimations(playerid);
	if(IsPlayerToKvadrat(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) PI[playerid][pHospCity] = 1;
	else if(IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) PI[playerid][pHospCity] = 3;
	else PI[playerid][pHospCity] = 2;
	UpdatePlayerDataInt(playerid, "HospCity", PI[playerid][pHospCity]);
    PI[playerid][pHeal] = true;
    UpdatePlayerDataInt(playerid, "Heal", 1);
    PI[playerid][pHealTime] = 0;
	if(!skip) PlayerSpawn(playerid),SMD(playerid, "default playerhospital");
	return 1;
}
stock J_SetPlayerHealth(playerid, Float:hp)
{
	new Float:health;
    GetPlayerHealth(playerid, health);
	PlayerHealthAC[playerid] = hp;
	if(health < hp) SetPlayerChatBubblef(playerid, COLOR_GREEN, 30.0, 3000, "+ %.02f HP", (health-hp));
	else SetPlayerChatBubblef(playerid, COLOR_RED, 30.0, 3000, "- %.02f HP", (health-hp));

	if(InventStatus{playerid}) PlayerTDSetStringf(playerid, Invent[playerid][38], "HP: %.0f", hp);

	if(hp < 0 || hp > 1000) hp = 0;
	return SetPlayerHealth(playerid, hp);
}
stock J_SetPlayerArmour(playerid, Float:arm)
{
    new Float:armour;
    GetPlayerArmour(playerid, armour);
	PI[playerid][pArmour] = arm;
	UpdatePlayerDataFloat(playerid, "ARM", PI[playerid][pArmour]);
	if(armour < arm) SetPlayerChatBubblef(playerid, COLOR_GREEN, 100.0, 3000, "+ %.02f ARM", (armour-arm));
	else SetPlayerChatBubblef(playerid, COLOR_RED, 100.0, 3000, "- %.02f ARM", (armour-arm));

	if(InventStatus{playerid}) PlayerTDSetStringf(playerid, Invent[playerid][37], "ARM: %.0f", arm);

    if(arm) if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 19142, 1, 0.08, 0.04, 0.00, 0.0, 0.0, -7.4);
    else RemovePlayerAttachedObject(playerid, 8);
	if(arm < 0 || arm > 1000) arm = 0;
	return SetPlayerArmour(playerid, arm);
}
stock J_SetVehicleHealth(carid,Float:health)
{
	VehicleHealth[carid] = health;
	SetVehicleHealth(carid, health);
	return 1;
}
stock J_RepairVehicle(carid)
{
	RepairVehicle(carid);
	VehicleHealth[carid] = 1500;
	return 1;
}
stock J_SetPlayerPos(playerid, Float:X, Float:Y, Float:Z, Float:A=90.0)
{
	//SetPVarInt(playerid, !"SafeTeleport", 2);
	if(!(A == 90.0)) SetPlayerFacingAngle(playerid, A);
	Streamer_UpdateEx(playerid, X, Y, Z, -1, -1, -1, 500, 1);
	return 1;
}
stock J_SetVehiclePos(vehicleid, Float:X, Float:Y, Float:Z) return SetVehiclePos(vehicleid, X,Y,Z);
stock J_Kick(playerid, error = 0)
{
	printf("playerid %i, error %i", playerid, error);
	if(error != 0) return SCMf(playerid, -1, "ОШИБКА %i", error), KickEx(playerid);
	if(IsPlayerLogged[playerid])
	{
		if(NameIsFullDostup(playerid,4)) return 1;
	}
	return KickEx(playerid);
}
stock SpecPl(playerid,bool:spec)
{
    pTemp[playerid][SPECTPLAYER] = spec;
    TogglePlayerSpectating(playerid,spec);
}
stock Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ, Float:ObjX, Float:ObjY, Float:ObjZ, Float:FrX, Float:FrY, Float:FrZ)
{
	new Float:TGTDistance;
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));
	new Float:tmpX, Float:tmpY, Float:tmpZ;
	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;
	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}
stock Float:GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
{
  	new Float:DX, Float:DY;
  	new Float:angle;

  	DX = floatabs(floatsub(x2,X));
  	DY = floatabs(floatsub(y2,Y));

  	if (DY == 0.0 || DX == 0.0)
	{
	    if(!DY && DX > 0) angle = 0.0;
	    else if(!DY && DX < 0) angle = 180.0;
	    else if(DY > 0 && !DX) angle = 90.0;
	    else if(DY < 0 && !DX) angle = 270.0;
	    else if(!DY && !DX) angle = 0.0;
  	}
  	else
	{
    	angle = atan(DX/DY);
    	if(X > x2 && Y <= y2) angle += 90.0;
    	else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
    	else if(X < x2 && Y >= y2) angle -= 90.0;
    	else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
  	}
  	return floatadd(angle, 90.0);
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
{
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
  	new Float:camera_x,Float:camera_y,Float:camera_z,Float:vector_x,Float:vector_y,Float:vector_z;
  	GetPlayerCameraPos(playerid, camera_x, camera_y, camera_z);
  	GetPlayerCameraFrontVector(playerid, vector_x, vector_y, vector_z);
	new Float:vertical, Float:horizontal;
	switch (GetPlayerWeapon(playerid))
	{
	  	case 34,35,36:
	  	{
	  		if(DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, vector_x, vector_y, vector_z) < radius) return 1;
	  		return 0;
	  	}
	  	case 30,31: {vertical = 4.0; horizontal = -1.6;}
	  	case 33: {vertical = 2.7; horizontal = -1.0;}
	  	default: {vertical = 6.0; horizontal = -2.2;}
	}
  	new Float:angle = GetPointAngleToPoint(0, 0, floatsqroot(vector_x*vector_x+vector_y*vector_y), vector_z) - 270.0;
  	new Float:resize_x, Float:resize_y, Float:resize_z = floatsin(angle+vertical, degrees);
  	GetXYInFrontOfPoint(resize_x, resize_y, GetPointAngleToPoint(0, 0, vector_x, vector_y)+horizontal, floatcos(angle+vertical, degrees));
  	if (DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, resize_x, resize_y, resize_z) < radius) return 1;
  	return 0;
}
stock Text:CreateBox(Float:X,Float:Y,Float:Width,Float:Height,color)
{
    str_2[0] = EOS;
    for(new i=floatround(Y); i < floatround(Y+Height);i++) strcat(str_2,!"~n~_");
	new Text:RetSprite;
    RetSprite = TextDrawCreate(X, Y, str_2);
    TextDrawFont(RetSprite, 0);
    TextDrawColor(RetSprite,0xFFFFFFFF);
    TextDrawTextSize(RetSprite,Width+X,Height+Y);
    TextDrawUseBox(RetSprite,1);
    TextDrawBoxColor(RetSprite,color);
    TextDrawLetterSize(RetSprite,0.0001,0.1158);
    return RetSprite;
}
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}
stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}
stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return 1;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return 1;
}
stock CheckBanned(playerid,listitem)
{
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0)
	{
		FirstBL[playerid] = 0;
		return SCM(playerid, COLOR_GREY, !"Больше нет забаненных");
	}
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `Name` FROM `bannames` ORDER BY `ID` DESC LIMIT %i , 20", FirstBL[playerid]);
	mysql_tquery(mysql, str_q, "MysqlCheckBanned", "i", playerid);
	return 1;
}
stock NameIsFullDostup(playerid, lvl)
{
	if(PI[playerid][pAccessAdmin] >= lvl) return 1;
	return 0;
}
stock GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1: 		return 331;
        case 2..8: 		return weaponid+331;
        case 9: 		return 341;
        case 10..15: 	return weaponid+311;
        case 16..18: 	return weaponid+326;
        case 22..29: 	return weaponid+324;
        case 30,31: 	return weaponid+325;
        case 32: 		return 372;
        case 33..45: 	return weaponid+324;
        case 46: 		return 371;
		case 777: 		return 1240;
        default: return 0;
    }
    return 0;
}
stock GetWeaponModel2(weaponid)
{
    switch(weaponid)
    {
        case 348: 		return 24;
        case 25: 		return 25;
        case 356: 		return 31;
		case 1240:		return 777;
        default: return 0;
    }
    return 0;
}
stock NoRoof(playerid)
{
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID )
    {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModel(carid);
        switch(cm)
        {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30)
        {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            J_SetPlayerPos(playerid, slx, sly, slz+2.5);
			J_ApplyAnimation(playerid, "PED", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}
stock GetVehicleSpeed(vehicleid)
{
    new Float:ST[4];
    GetVehicleVelocity(vehicleid, ST[0], ST[1], ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 190.0;
    return floatround(ST[3]);
}
stock Stopenanim(playerid)
{
 	ClearAnimations(playerid)
	TogglePlayerControllable(playerid, true);
	return 1;
}
public: LoadConfig()
{
	new currenttime = GetTickCount();
    cache_get_int(0, !"credit", GLS[0]);
   	cache_get_int(0, !"cNalog", GLS[1]);
    cache_get_int(0, !"hNalog", GLS[2]);
    cache_get_int(0, !"bNalog", GLS[3]);
    cache_get_int(0, !"GLS[13]", GLS[13]);
    cache_get_int(0, !"GLS[14]", GLS[14]);
    cache_get_int(0, !"GLS[15]", GLS[15]);
    cache_get_int(0, !"arest", GLS[16]);
    cache_get_int(0, !"dostav", GLS[17]);
    cache_get_int(0, !"ybil", GLS[18]);
	cache_get_int(0, !"redak", GLS[19]);
    cache_get_int(0, !"pomol", GLS[20]);
    cache_get_int(0, !"bail", GLS[21]);
    cache_get_int(0, !"exp", GLS[22]);
    cache_get_int(0, !"armyls", GLS[23]);
   	cache_get_int(0, !"armylv", GLS[24]);
	cache_get_int(0, !"farmsklad", GLS[25]);
    cache_get_int(0, !"GLS[26]", GLS[26]);
    cache_get_int(0, !"GLS[27]", GLS[27]);
    cache_get_int(0, !"GLS[28]", GLS[28]);
    cache_get_int(0, !"XPAYDAY", GLS[29]);
    cache_get_int(0, !"GLS[30]", GLS[30]);
    cache_get_int(0, !"adminzona", GLS[31]);
    cache_get_int(0, !"casinoclose", GLS[32]);
    cache_get_int(0, !"euro", GLS[33]);
    cache_get_int(0, !"bankeuro", GLS[34]);
   	cache_get_int(0, !"FactoryFerum", FactoryFerum);
    cache_get_int(0, !"FactoryMats", FactoryMats);
    cache_get_int(0, !"FactoryFuel", FactoryFuel);
    cache_get_int(0, !"adddonate", adddonate);
    cache_get_int(0, !"TexRestart", Mode[CFG_PASS_SERVER]);
	cache_get_string(0, !"password", CodeCheckDostup);
	cache_get_int(0, !"xFinka", xFinka);
    str_2[0] = EOS, f(str_2, sizeof(str_2), "p<,>a<i>[%i]", sizeof(ModelLimit));
    str_1[0] = EOS, cache_get_string(0, !"MLVehCount", str_1), sscanf(str_1, str_2, MLVehCount);
    cache_get_int(0, !"bitprice", bitprice);
    cache_get_int(0, !"bitamount", bitamount);
	cache_get_int(0, !"global_GetTimeIsFinal", global_GetTimeIsFinal);
	//bots
	cache_get_string(0, !"AtHourBot", str_1), sscanf(str_1, "p<,>a<i>[24]", AtHourBot);
	IsStartBot = true;
	//

	static str[7];
	str_1[0] = EOS, cache_get_string(0, !"Reconstruction", str_1), sscanf(str_1, "p<,>a<i>[7]", str);
	for(new i; i < sizeof(Reconstruction); i++)
	{
		Reconstruction[i][ReconstructionMoney] = str[i];
		if(Reconstruction[i][ReconstructionMoney] < 1500000000)
		{
			Reconstruction[i][Reconstruction3DText] = Text3D:-1;
			UpdateReconstruction(i);
		}
	}
 	GLS[4] = 100;
    GLS[5] = 80;
    GLS[6] = 100;
	GLS[7] = 43;
    GLS[8] = 22;
	GLS[9] = 1500;
	GLS[10] = 1800;
    GLS[11] = 1900;
    GLS[12] = 2500;

	if(Mode[CFG_PASS_SERVER] != 0)
	{
	    SetModOptions();

		Mode[RESTART_ETAPE] = 2;
		SetTimer("ServerRestart", 120000, false);
	}
	else
	{
	    SetModOptions();
	}
	return printf("LoadConfig загрузился за %i ms", GetTickCount() - currenttime);
}
stock strtok(const string[], &index, params[])
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	static result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	SetString(params, result, 24);
	return 1;
}
stock CheckPlayerGoCuff(playerid)
{
    GotoInfo[playerid][gtX] = 0.0;
    GotoInfo[playerid][gtY] = 0.0;
    GotoInfo[playerid][gtZ] = 0.0;
    GotoInfo[playerid][gtTPX] = 0.0;
    GotoInfo[playerid][gtTPY] = 0.0;
    GotoInfo[playerid][gtTPZ] = 0.0;
    GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtState] = 0;
    GotoInfo[playerid][gtStayed] = 0;
    Recuffer[playerid]=INVALID_PLAYER_ID;
    cuffer[playerid]=0;
    return 1;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return J_ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return J_ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return J_ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	J_ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);\
	return 1;
}
stock CheckItem(playerid)
{
	UseAksSlot_3{playerid} = false;
	for(new i; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) RemovePlayerAttachedObject(playerid, i);
	UseItemAttached(playerid, -1);
	for(new i; i < 8; i++)
	{
		if(AksSlot[playerid][i] != 0 && !PI[playerid][pAcsCellLock][i]) UseItemAttached(playerid, i);
	}
	return 1;
}
stock CheckSharpeningSet(playerid)
{
	new count;
	for(new i; i < 8; i++) count += InvAksParams[0][playerid][i];
	RemovePlayerAttachedObject(playerid, 9);
	if(count >= 50) SetPlayerAttachedObject(playerid, 9, 1276, 1, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.3900);
	return 1;
}
stock SearchItemAttached(itemids)
{
	for(new i; i < sizeof ItemAttached; i++) if(ItemAttached[i][attachItemID] == itemids) return i;
	return -1;
}
stock UseItemModification(playerid)
{
	new mod_id = IsValidModification(PI[playerid][pModSlot]);
	if(mod_id >= 1) SetPlayerSkin(playerid, mod_id);
	switch(PI[playerid][pModSlot])
	{
		case 2720:
		{
			SetPlayerAttachedObject(playerid, 0, 1451, 1, 0.0000, 0.2849, -0.0179, 0.0000, 90.2000, -177.6000, 0.8839, 0.6269, 0.7820, -1, 0);
			SetPlayerAttachedObject(playerid, 1, 1247, 1, -0.1639, 0.4739, -0.0069, 4.5999, 0.0000, 0.0000, 1.2639, 1.0000, 2.2679, -16777216, 0);
			SetPlayerAttachedObject(playerid, 2, 1240, 1, 0.2669, 0.4280, 0.2239, 100.7999, 82.3000, -101.8000, 0.8959, 1.0000, 1.2990, 0, 0);
			SetPlayerAttachedObject(playerid, 3, 1240, 1, 0.2669, 0.4449, -0.1790, 100.7999, 82.3000, -93.2000, 0.8959, 1.0000, 1.2990, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 11745, 5, 0.2590, 0.0310, 0.0260, -2.6000, -96.2999, 85.3000, 0.2080, 1.0000, 1.2520, -1, -1);
			SetPlayerAttachedObject(playerid, 5, 844, 1, 0.1989, 0.1759, 0.4799, -109.8000, 5.4999, -36.2999, 0.2500, 0.3229, 0.2139, 0, 16777215);
			SetPlayerAttachedObject(playerid, 6, 844, 1, 0.1439, 0.1759, -0.5939, -69.5000, -2.5000, 112.2999, 0.2500, 0.3229, 0.2139, 0, 16777215);
		}
		case 2719:
		{
			SetPlayerAttachedObject(playerid, 0, 19518, 2, 0.0939, -0.0109, 0.0000, 0.0000, 0.0000, 0.0000, 0.9319, 0.8579, 0.9449, -16711936, 0);
			SetPlayerAttachedObject(playerid, 1, 19274, 2, 0.0999, -0.0109, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.9779, 0.6880, 0, 0);
			SetPlayerAttachedObject(playerid, 2, 19577, 2, 0.0609, 0.1459, 0.0000, -99.9999, 0.0000, 0.0000, 0.8880, 0.8209, 0.8880, -16776961, 0);
			SetPlayerAttachedObject(playerid, 3, 19578, 9, 0.0049, 0.1490, -0.0089, 0.0000, 0.0000, 68.4999, 0.7989, 1.4000, 2.7690, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 18977, 9, 0.0559, 0.2469, -0.0160, 86.4000, 170.5000, 177.5000, 0.8410, 1.0000, 1.1050, 0, 0);
			SetPlayerAttachedObject(playerid, 5, 18977, 10, 0.0559, 0.2469, -0.0160, 86.4000, 170.5000, 177.5000, 0.8410, 1.0000, 1.1050, 0, 0);
			SetPlayerAttachedObject(playerid, 6, 19578, 10, 0.0049, 0.1490, -0.0089, 0.0000, 0.0000, 68.4999, 0.7989, 1.4000, 2.7690, 0, 0);
		}
		case 1140: SetPlayerAttachedObject(playerid, 8, 19079, 1, -1.0489, -0.2000, 0.0000, 0.0000, 0.0000, -13.2999, 6.1389, 7.6839, 6.5249, 0, 0);
		case 2684:
		{
			SetPlayerAttachedObject(playerid, 8, 19135, 1, 0.8569, 0.0280, 0.2539, 0.0000, -103.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 7, 11741, 1, 0.4749, 0.2919, 0.1459, 102.5999, 13.5000, 0.4000, 0.9509, 1.1059, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 6, 11741, 1, 0.4749, 0.2899, -0.1269, 76.3999, 13.5000, -9.1999, 0.9509, 1.1059, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 5, 11741, 1, 0.2370, 0.3420, 0.0130, 92.5999, -53.2999, -6.9999, 0.7760, 1.6250, 1.0000, -16777216, 0);
			SetPlayerAttachedObject(playerid, 4, 19570, 1, 0.3979, 0.3379, -0.1379, -104.8999, 15.3000, 1.8999, 2.0889, 2.1540, 0.1059, 0, 0);
			SetPlayerAttachedObject(playerid, 3, 19570, 1, 0.3869, 0.3419, 0.1599, -77.0999, 13.5000, -14.2000, 2.0889, 2.1540, 0.1059, 0, 0);
			SetPlayerAttachedObject(playerid, 2, 1316, 1, -0.0429, 0.3100, 0.0689, 97.3999, 33.0000, 1.6999, 0.1719, 0.0850, 0.2549, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 1316, 1, -0.0419, 0.3070, -0.0879, 80.5999, 32.5000, 0.0000, 0.1719, 0.0850, 0.2549, 0, 0);
			SetPlayerAttachedObject(playerid, 0, 19577, 1, 0.1689, 0.0340, 0.0000, 0.0000, 87.8000, 179.9999, 12.8119, 9.4239, 14.1219, -16776961, 0);
		}
		case 2670:
		{
			SetPlayerAttachedObject(playerid, 3, 3070, 14, 0.0689, -0.0199, 0.1159, -167.1999, -0.5999, -92.7001, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 0, 3070, 13, 0.0879, 0.0000, -0.1209, 0.0000, 0.0000, -95.7000, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 19605, 13, 1.0909, -0.0089, 0.0500, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 19605, 14, 1.0909, 0.0000, -0.0639, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
		}
		case 2671:
		{
			SetPlayerAttachedObject(playerid, 3, 3070, 14, 0.0689, -0.0199, 0.1159, -167.1999, -0.5999, -92.7001, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 0, 3070, 13, 0.0879, 0.0000, -0.1209, 0.0000, 0.0000, -95.7000, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 19606, 13, 1.0909, -0.0089, 0.0500, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 19606, 14, 1.0909, 0.0000, -0.0639, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
		}
		case 2672:
		{
			SetPlayerAttachedObject(playerid, 3, 3070, 14, 0.0689, -0.0199, 0.1159, -167.1999, -0.5999, -92.7001, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 0, 3070, 13, 0.0879, 0.0000, -0.1209, 0.0000, 0.0000, -95.7000, 1.0000, 1.0000, 1.6529, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 19607, 13, 1.0909, -0.0089, 0.0500, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 19607, 14, 1.0909, 0.0000, -0.0639, 109.4000, -90.7999, 103.5000, 0.0260, 0.0559, 0.4899, 0, 0);
		}
		case 1171: SetPlayerAttachedObject(playerid ,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
		case 2612:
		{
			SetPlayerAttachedObject(playerid, 0, 2689, 1, 0.0000, 0.0500, 0.0000, 153.9998, 91.7999, 13.1999, 1.7189, 4.1040, 1.1250, -16711936, -16711936) &&
			SetPlayerAttachedObject(playerid, 1, 19063, 2, 0.2189, 0.0000, 0.0000, -37.9000, -93.3999, -15.6000, 1.1749, 0.6949, 0.9039, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19065, 2, 0.5730, 0.0000, 0.0439, -103.3999, 63.6999, -177.6999, 2.5079, 4.6760, 3.3090, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19874, 2, 0.1389, 0.3089, -0.0809, 78.6999, -2.1999, -80.2999, 1.7419, 2.3489, 7.9899, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19059, 2, 0.1400, 0.1019, -0.0689, 0.0000, 0.0000, 0.0000, 0.1860, 0.6250, 0.1819, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 19352, 2, 0.2969, 0.1449, -0.1190, -117.2999, 0.0000, 0.0000, 0.5569, 0.7459, 1.1549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 6, 19352, 2, 0.2729, 0.2310, 0.1029, -117.2999, 0.0000, 0.0000, 0.5569, 0.7459, 1.1549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 7, 19076, 1, -0.3140, -0.3249, 0.3030, 2.9999, 111.3999, 11.5999, 0.1149, 0.1650, 0.1149, 0, 0);
		}
		case 2614:
		{
			SetPlayerAttachedObject(playerid, 0, 1274, 13, 0.3659, -0.1359, -0.0089, 77.3999, -4.3999, -7.8999, 0.4439, 0.6219, 2.7980, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 1247, 13, 0.3279, -0.6029, 0.1009, -20.0000, 89.3998, -80.3999, 1.2949, 1.1649, 0.6830, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 1253, 1, -0.0410, -0.1409, -0.0069, -3.6999, 35.2999, -6.6999, 4.3139, 0.2689, 0.9399, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 1253, 1, -0.0410, -0.1409, 0.0160, -3.6999, -42.0999, -5.5999, 4.3139, 0.2689, 0.9399, 0, 0);
		}
		case 2613:
		{
			SetPlayerAttachedObject(playerid, 0, 19063, 1, -0.5839, 0.0649, -0.0379, 2.5000, 92.1999, -4.8000, 1.5909, 1.6469, 1.3609, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19063, 1, -0.0959, 0.0000, 0.0000, -2.7000, -78.1999, -2.7000, 1.2119, 1.2200, 1.0410, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19063, 1, 0.4379, 0.0000, 0.0169, -10.6999, -82.7999, -1.2000, 0.8649, 0.9159, 0.8039, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 11722, 2, 0.1129, 0.3839, -0.0170, -97.5999, -3.8999, 1.6999, 0.5859, 0.4359, 2.6549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19352, 2, 0.4459, 0.0000, 0.0789, -109.9998, 94.2999, -2.9999, 1.6469, 2.0589, 4.1580, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 11741, 2, 0.2060, 0.3419, -0.1509, 70.8999, 0.0000, 4.2999, 0.2599, 0.2790, 0.9380, 0, 0) &&
			SetPlayerAttachedObject(playerid, 6, 11741, 2, 0.1609, 0.3749, 0.1330, 82.6999, 0.0000, 9.4999, 0.2599, 0.2790, 0.9380, 0, 0) &&
			SetPlayerAttachedObject(playerid, 7, 18646, 1, 0.0000, 0.4600, -0.0060, -93.8999, 0.0000, 2.0999, 1.0989, 1.3209, 1.2949, 0, 0) &&
			SetPlayerAttachedObject(playerid, 8, 18646, 1, -0.5640, 0.7459, -0.0379, -93.8999, 0.0000, 2.0999, 1.0989, 1.6369, 1.7449, 0, 0);
		}
		case 2549:
		{
			SetPlayerAttachedObject(playerid, 1, 19528, 2, 0.1160, 0.0160, 0.0000, 0.0000, 0.0000, 0.0000, 1.2720, 1.1880, 1.1770, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19527, 1, 0.0000, -0.2060, 0.0000, 0.0000, 87.7000, 0.0000, 0.2960, 0.2910, 0.3510, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19348, 5, 0.4620, 0.0120, 0.2030, 0.0000, -119.7000, 0.0000, 0.6760, 0.6730, 0.5090, 0, 0) &&
			SetPlayerAttachedObject(playerid, 6, 18729, 18, 0.0000, -0.0270, 0.0330, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0, 0);
		}
		case 2550:
		{
			SetPlayerAttachedObject(playerid, 1, 19883, 2, 0.2169, 0.0029, -0.1289, -1.6999, 83.0999, 1.2999, 0.4519, 2.4970, 3.3940, -1, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19883, 2, 0.1829, 0.0069, 0.1689, -1.6999, 83.0999, 1.2999, 0.4519, 2.4970, 3.3940, -1, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19883, 2, 0.0309, 0.0069, -0.0060, -1.6999, 83.0999, 1.2999, 1.1899, 2.4970, 3.3940, -1, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19201, 2, 0.1239, 0.1560, -0.0439, 87.6999, 0.0000, 7.0000, 1.9139, 2.1479, 1.0000, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 5, 19201, 2, 0.1129, 0.1560, 0.0529, 87.6999, 0.0000, 7.0000, 1.9139, 2.1479, 1.0000, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 6, 19201, 2, 0.1309, 0.1560, -0.0930, 87.6999, 0.0000, 7.0000, 1.9139, 2.1479, 1.0000, 0, 0) &&
			SetPlayerAttachedObject(playerid, 7, 19201, 2, 0.1070, 0.1560, 0.1030, 87.6999, 0.0000, 7.0000, 1.9139, 2.1479, 1.0000, 0, 0) &&
			SetPlayerAttachedObject(playerid, 8, 19579, 2, -0.0389, -0.0209, -0.0070, 0.0000, 83.5000, -0.6000, 1.2940, 2.5339, 2.1419, 0, 0) &&
			SetPlayerAttachedObject(playerid, 9, 19883, 2, 0.2659, -0.0209, 0.0289, -1.6999, 83.0999, 1.2999, 3.0049, 2.9690, 5.6040, -1, 0);
		}
		case 2551:
		{
			SetPlayerAttachedObject(playerid, 0, 3096, 1, 0.5079, -0.2189, 0.3959, 0.0000, -39.9999, -20.2999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 1, 3096, 1, 0.5079, -0.2189, 0.3959, 0.0000, -39.9999, -20.2999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 2, 3096, 1, 0.5079, -0.2189, 0.3959, 0.0000, -39.9999, -20.2999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 3, 3096, 1, 0.5389, -0.2939, -0.3869, -10.3999, 40.7000, -20.2999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 4, 3096, 1, -0.3240, -0.2859, -0.3540, -10.3999, 139.8000, -20.2999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 5, 3096, 1, -0.3309, -0.1549, 0.3459, -7.5999, -141.3999, -18.8999, 0.4319, 0.1809, 0.1739, 16777215, 0) &&
			SetPlayerAttachedObject(playerid, 6, 1274, 14, 0.3599, -0.1239, 0.0409, -90.5000, 0.0000, 0.0000, 0.3370, 0.5000, 2.1749, 0, 0) &&
			SetPlayerAttachedObject(playerid, 7, 1247, 14, 0.3599, -0.5449, 0.0409, -90.5000, 0.0000, 0.0000, 0.5540, 0.2560, 0.6239, 0, 0) &&
			SetPlayerAttachedObject(playerid, 8, 19025, 2, 0.0240, 0.1430, 0.0000, -98.3000, -87.5000, 0.0000, 0.0289, 1.8969, 4.0180, 0, 0);
		}
		case 2552:
		{
			SetPlayerAttachedObject(playerid,0,19873,2,0.050999,0.000000,0.013000,0.000000,-97.800010,0.000000,2.361999,2.608999,2.561998) &&
			SetPlayerAttachedObject(playerid,1,19351,2,0.102000,0.165000,-0.015999,-13.300009,-63.199996,-2.499998,1.000000,1.000000,1.000000) &&
			SetPlayerAttachedObject(playerid,2,19351,2,0.104000,0.173999,-0.023000,0.000000,45.299972,0.000000,1.000000,1.000000,1.000000) &&
			SetPlayerAttachedObject(playerid,3,19351,2,0.078999,0.163999,0.056000,0.000000,117.099967,0.000000,1.000000,1.000000,1.000000) &&
			SetPlayerAttachedObject(playerid,4,19351,2,0.081999,0.164000,0.060999,0.000000,33.999996,0.000000,1.000000,1.000000,1.000000) &&
			SetPlayerAttachedObject(playerid,5,11750,2,-0.033999,0.170000,0.004999,0.000000,91.499984,0.000000,2.888000,1.000000,1.707000);
		}
		case 772:
		{
			SetPlayerAttachedObject(playerid, 0, 19352, 2, 0.0829, 0.0130, 0.0000, -100.6999, 120.0999, -85.4000, 0.9490, 1.1439, 1.1269, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19030, 2, 0.0680, 0.0349, 0.0000, 107.0000, -83.4001, -163.0996, 0.8470, 1.0709, 1.2939, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 11731, 1, 0.0099, 0.0419, 0.0610, -3.9000, 153.6000, -84.2000, 0.1140, 0.2629, 0.1879, 0, 16777215) &&
			SetPlayerAttachedObject(playerid, 3, 19347, 1, -0.0549, 0.2680, -0.1000, 83.7999, -12.1000, 0.0000, 1.8899, 1.8039, 0.4760, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19339, 1, 0.5440, -0.0390, -0.5799, -0.9999, 102.1999, -88.4999, 0.9319, 0.8089, 0.8119, 0, 0);
		}
		case 773:
		{
			SetPlayerAttachedObject(playerid, 0, 18967, 2, 0.0439, -0.0020, 0.0019, 74.5999, 68.0000, 13.8999, 0.9139, 1.6009, 1.8389, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19163, 2, 0.0649, 0.0349, 0.0000, 0.0000, 83.5000, -179.8000, 1.2609, 1.1389, 1.2809, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19022, 2, 0.0599, 0.0609, 0.0030, 107.4000, -68.1000, -162.3000, 1.0000, 1.2130, 1.2369, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 324, 2, -0.0030, 0.1469, -0.0789, 0.0000, 76.1999, 164.9000, 0.9390, 1.2189, 0.3759, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 324, 1, -0.5830, -0.2709, -0.4239, 113.4999, 98.1999, -25.6000, 1.4079, 10.4469, 4.7259, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 18646, 14, 0.4529, -0.7260, -0.0270, 96.3000, 7.8000, 0.0000, 0.2109, 0.2339, 8.9059, 0, 0);
		}
		case 774:
		{
			SetPlayerAttachedObject(playerid, 0, 2992, 2, 0.2460, 0.0000, 0.0000, 0.0000, -92.7000, 0.0000, 1.3660, 1.3940, 1.0000, -1, -1) &&
			SetPlayerAttachedObject(playerid, 1, 2992, 2, 0.2460, 0.0000, 0.0120, 0.0000, 88.6000, 0.0000, 1.3660, 1.3940, 1.0000, -1, -1) &&
			SetPlayerAttachedObject(playerid, 2, 19517, 1, -0.3739, -0.2639, -0.2249, 52.5999, 7.1999, 1.9000, 6.7819, 2.7469, 0.2979, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19517, 1, -0.3739, -0.2450, 0.2549, -62.4000, -7.0000, 3.7000, 6.7819, 2.7469, 0.2979, 0, 0);
		}
		case 775:
		{
			SetPlayerAttachedObject(playerid, 0, 1111, 2, 0.1289, 0.0710, -0.0899, -15.1000, -2.7999, -96.6000, 0.4989, 0.8410, 1.0629, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 1111, 2, 0.1229, 0.0710, 0.0939, -164.9000, 4.9000, -88.8000, 0.4989, 0.8410, 1.0629, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19516, 2, 0.0489, -0.0040, -0.0040, -2.0000, -3.0000, -3.2000, 1.0249, 0.8489, 0.7869, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19274, 2, 0.1499, -0.0779, 0.0049, 0.0000, -5.5999, 17.5999, 1.0000, 0.8100, 0.3279, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 2237, 14, 0.2610, 0.6930, 0.2069, -81.5999, -7.4999, 0.0000, 0.9089, 0.9290, 2.1449, 0, 167772159) &&
			SetPlayerAttachedObject(playerid, 5, 2726, 13, 0.0949, -0.0449, 0.0769, 0.0000, 174.8000, -2.1999, 3.1589, 3.1459, 0.0499, -1, 0) &&
			SetPlayerAttachedObject(playerid, 6, 19515, 1, 0.0190, 0.0500, 0.0030, 0.0000, -1.0000, 0.1000, 1.1340, 1.1780, 1.0890, -1, -1);
		}
		case 776:
		{
			SetPlayerAttachedObject(playerid, 0, 3070, 2, 0.0649, 0.0029, -0.0439, 24.0000, -175.1000, -28.6999, 0.4359, 0.7739, 0.4549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19527, 2, 0.0909, 0.0630, -0.0189, -98.2999, 0.0000, 0.0000, 0.0299, 0.0329, 0.0549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 2711, 14, 0.1280, -0.0139, -0.0189, 5.1999, 84.0000, 13.7999, 0.9819, 1.0000, 1.6250, 0, -1) &&
			SetPlayerAttachedObject(playerid, 3, 2976, 8, 0.5090, 0.0250, 0.0539, -73.5000, -92.9999, 113.0999, 0.3569, 0.3610, 0.6489, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 2976, 11, 0.4510, 0.0149, 0.0670, -73.7000, -91.0999, 113.0999, 0.2569, 0.2829, 0.6489, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 2976, 4, 0.0399, 0.0529, -0.1239, 23.7000, -177.7999, -179.3000, 0.7339, 0.7559, 0.7540, 0, 16777215);
		}
		case 777:
		{
			SetPlayerAttachedObject(playerid, 0, 3524, 2, -0.4410, -0.1299, 0.0070, 85.4999, 107.3999, 91.1998, 0.2440, 0.2799, 0.2300, 0, 16777215) &&
			SetPlayerAttachedObject(playerid, 1, 19801, 2, 0.0740, 0.0179, -0.0039, 85.6000, 90.4000, 96.0999, 1.1920, 1.0629, 1.0569, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 2680, 14, 0.3930, -0.0269, 0.0879, 26.0000, 66.4000, -81.5999, 1.0000, 1.0000, 1.0000, 0, 16777215) &&
			SetPlayerAttachedObject(playerid, 3, 2680, 14, 0.7269, -0.0419, 0.0879, -17.6000, 61.4999, -48.3999, 1.0599, 1.0739, 1.1639, 0, 16777215) &&
			SetPlayerAttachedObject(playerid, 4, 2061, 1, 0.1710, 0.0000, -0.1039, 0.0000, 107.6999, 173.7998, 0.3379, 0.2890, 0.7950, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 2061, 1, 0.1650, 0.0000, 0.1080, 0.0000, 73.4999, -171.6000, 0.3379, 0.2890, 0.7950, 0, 0) &&
			SetPlayerAttachedObject(playerid, 6, 11745, 5, 0.2400, 0.0420, 0.0110, -2.6000, -96.2999, 85.3000, 0.2080, 1.0000, 1.2520, -1, -1);
		}
		case 778:
		{
			SetPlayerAttachedObject(playerid, 1, 1108, 14, 0.8569, -0.7969, -0.1349, 0.1000, -4.2999, 100.1999, 2.7099, 0.3100, 0.1010, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19069, 1, 0.3149, 0.0529, -0.0199, -88.0999, 177.9000, 5.8999, 2.3849, 1.4539, 1.9559, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 333, 14, 0.4919, 0.6150, 0.2409, -74.8999, 176.5999, 2.1000, 2.6779, 1.9849, 1.8320, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19163, 2, 0.0529, 0.0319, -0.0020, 176.3000, 96.7000, 4.0999, 1.1929, 1.2500, 1.3279, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 5, 635, 1, -0.2819, -0.0670, 0.0000, 84.0000, 0.0000, 1.8999, 1.0169, 0.1729, 0.4089, 0, 0) &&
			SetPlayerAttachedObject(playerid, 6, 18729, 14, 0.4090, -0.8539, -0.3019, 0.0000, 0.0000, -85.4999, 0.0000, 0.4599, 0.0719, 0, 0);
		}
		case 779:
		{
			SetPlayerAttachedObject(playerid, 0, 3070, 2, 0.0649, 0.0029, -0.0439, 24.0000, -175.1000, -28.6999, 0.4359, 0.7739, 0.4549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19527, 2, 0.0909, 0.0630, -0.0189, -98.2999, 0.0000, 0.0000, 0.0299, 0.0329, 0.0549, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 2711, 14, 0.1280, -0.0139, -0.0189, 5.1999, 84.0000, 13.7999, 0.9819, 1.0000, 1.6250, 0, -1) &&
			SetPlayerAttachedObject(playerid, 3, 2976, 8, 0.5090, 0.0250, 0.0539, -73.5000, -92.9999, 113.0999, 0.3569, 0.3610, 0.6489, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 2976, 11, 0.4510, 0.0149, 0.0670, -73.7000, -91.0999, 113.0999, 0.2569, 0.2829, 0.6489, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 2976, 4, 0.0399, 0.0529, -0.1239, 23.7000, -177.7999, -179.3000, 0.7339, 0.7559, 0.7540, 0, 16777215);
		}
		case 780:
		{
			SetPlayerAttachedObject(playerid, 0, 2992, 2, 0.2460, 0.0000, 0.0000, 0.0000, -92.7000, 0.0000, 1.3660, 1.3940, 1.0000, -1, -1) &&
			SetPlayerAttachedObject(playerid, 1, 2992, 2, 0.2460, 0.0000, 0.0120, 0.0000, 88.6000, 0.0000, 1.3660, 1.3940, 1.0000, -1, -1) &&
			SetPlayerAttachedObject(playerid, 2, 19517, 1, -0.3739, -0.2639, -0.2249, 52.5999, 7.1999, 1.9000, 6.7819, 2.7469, 0.2979, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19517, 1, -0.3739, -0.2450, 0.2549, -62.4000, -7.0000, 3.7000, 6.7819, 2.7469, 0.2979, 0, 0);
		}
		case 781:
		{
			SetPlayerAttachedObject(playerid, 0, 18967, 2, 0.0439, -0.0020, 0.0019, 74.5999, 68.0000, 13.8999, 0.9139, 1.6009, 1.8389, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19163, 2, 0.0649, 0.0349, 0.0000, 0.0000, 83.5000, -179.8000, 1.2609, 1.1389, 1.2809, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19022, 2, 0.0599, 0.0609, 0.0030, 107.4000, -68.1000, -162.3000, 1.0000, 1.2130, 1.2369, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 324, 2, -0.0030, 0.1469, -0.0789, 0.0000, 76.1999, 164.9000, 0.9390, 1.2189, 0.3759, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 324, 1, -0.5830, -0.2709, -0.4239, 113.4999, 98.1999, -25.6000, 1.4079, 10.4469, 4.7259, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 18646, 14, 0.4529, -0.7260, -0.0270, 96.3000, 7.8000, 0.0000, 0.2109, 0.2339, 8.9059, 0, 0);
		}
		case 782:
		{
			SetPlayerAttachedObject(playerid, 0, 3100, 2, -0.0199, -0.1139, 0.0040, 84.6000, 128.8000, 99.4999, 2.2759, 1.4839, 3.9309) &&
			SetPlayerAttachedObject(playerid, 1, 3100, 2, 0.1150, -0.1019, 0.0040, 80.2000, 147.6000, 99.4999, 2.8569, 1.8839, 4.0079) &&
			SetPlayerAttachedObject(playerid, 2, 3100, 2, 0.0680, 0.0020, 0.0040, 82.6000, 0.2000, 99.4999, 3.5159, 3.9499, 4.0079) &&
			SetPlayerAttachedObject(playerid, 3, 19094, 2, 0.0099, 0.0590, -0.0030, 178.2999, 7.5999, -85.5999, 0.9799, 0.3459, 0.5720) &&
			SetPlayerAttachedObject(playerid, 4, 1254, 2, 0.0560, 0.1139, 0.0379, 17.6000, 18.4999, 9.0999, 0.3649, 0.2709, 0.4749) &&
			SetPlayerAttachedObject(playerid, 5, 1254, 2, 0.0630, 0.1169, -0.0379, -17.4999, 144.1000, -2.2000, 0.3649, 0.2709, 0.4749);
		}
		case 783:
		{
			SetPlayerAttachedObject(playerid, 0, 19163, 2, 0.059000, 0.038999, 0.000000, 0.000000, 84.699935, -177.900070, 1.183001, 1.231004, 1.170001, 0, 0) && //маска
			SetPlayerAttachedObject(playerid, 1, 19022, 2, 0.069999, 0.078999, 0.005000, 0.000000, 83.799980, 90.999916, 1.000000, 1.000000, 1.000000, 0, 0) && //очки
			SetPlayerAttachedObject(playerid, 2, 19472, 2, -0.020999, 0.179000, -0.002000, 0.000000, 80.100120, 97.200042, 1.000000, 0.804001, 0.788000, 0, 0) && // респиратор
			SetPlayerAttachedObject(playerid, 3, 11700, 1, -0.331000, -0.069999, -0.133999, 0.000000, 88.399940, 179.999923, 0.352001, 0.922000, 0.429999, 0, 0); // знак радиации
		}
		case 784:
		{
			SetPlayerAttachedObject(playerid, 0, 19577, 2, 0.058899, 0.032000, -0.004900, -98.099998, 130.500000, -142.199905, 2.918900, 2.933900, 4.034900, -65536, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19577, 17, 0.077899, 0.019899, -0.004900, -98.099998, 110.000000, -142.199905, 1.911900, 2.141000, 3.638999, -65536, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19582, 2, 0.0949, 0.1129, 0.0399, 121.7999, 164.6999, -26.8000, 0.8409, 0.3479, 0.9199, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19582, 2, 0.1030, 0.1010, -0.0619, -130.4000, -160.9001, -17.2000, 0.8259, 0.3479, 0.9199, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19874, 2, 0.0710, 0.1000, -0.0489, 46.0999, 59.5999, 106.0000, 0.3689, 0.7209, 0.4979, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 19874, 2, 0.0740, 0.1059, 0.0179, 46.0999, 86.3999, 152.6999, 0.3689, 0.7209, 0.4979, 0, 0);
		}
		case 785:
		{
			SetPlayerAttachedObject(playerid, 0, 19117, 2, 0.0929, 0.0089, 0.0069, 170.1000, 4.0999, 10.5999, 2.7359, 1.1360, 1.3409, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19177, 2, 0.0849, 0.1119, -0.0430, 63.9000, -10.8999, 11.9999, 0.9149, 1.7610, 1.5789, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19177, 2, 0.0780, 0.1209, 0.0309, 103.6999, -10.8999, 0.0000, 0.9149, 1.7610, 1.5789, -16777216, 0) &&
			SetPlayerAttachedObject(playerid, 3, 19793, 14, 0.4210, -0.2290, -0.1349, 38.2000, -4.9999, -76.8999, 2.4689, 0.4529, 0.2669, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 18936, 1, 0.0619, 0.1330, -0.0109, -2.7000, 0.0000, 170.6999, 2.2899, 0.9639, 2.2189, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 11716, 14, 0.6849, -0.6029, -0.3790, 39.6000, -8.7999, -80.8000, 11.9559, 0.9739, 2.8770, 0, 0);
		}
		case 786:
		{
			SetPlayerAttachedObject(playerid, 0, 19202, 2, 0.0790, 0.0930, 0.0320, -75.3999, 167.7999, -2.1999, 1.3009, 1.5659, 0.7709, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 2769, 1, 0.024900, 0.085900, 0.012000, 175.799896, -76.400001, 114.399803, 0.848900, 2.371000, 2.532900, -65536, 255) &&
			SetPlayerAttachedObject(playerid, 2, 2769, 2, 0.083899, 0.037000, -0.020899, 84.300003, 120.299896, 143.099899, 0.744000, 1.114899, 1.629899, -65536, 255) &&
			SetPlayerAttachedObject(playerid, 3, 2769, 1, 0.196899, -0.017899, 0.115900, -140.300003, -179.199905, -49.300098, 1.006000, 1.610900, 1.819900, -65536, 255) &&
			SetPlayerAttachedObject(playerid, 4, 8548, 1, 0.2339, 0.0179, 0.0340, 44.4000, 47.0000, 0.0000, 0.4779, 0.4609, 0.4699, -1, 0) &&
			SetPlayerAttachedObject(playerid, 5, 1603, 1, 0.037000, 0.119900, -0.072899, -118.399902, 109.499900, -9.999899, 0.067000, 0.323000, 0.279000, -65536, 0);
		}
		case 787:
		{
			SetPlayerAttachedObject(playerid, 0, 18961, 2, 0.1260, 0.0280, -0.0040, 97.2000, 88.9000, -5.2000, 1.0950, 1.1370, 0.9730, 0, 0) &&
			SetPlayerAttachedObject(playerid, 1, 19422, 2, 0.0520, -0.0220, 0.0020, -90.9999, 5.4001, -90.2000, 1.0830, 1.0000, 1.0760, 0, 0) &&
			SetPlayerAttachedObject(playerid, 2, 19472, 2, -0.0260, 0.1370, -0.0060, -3.0000, 85.0000, 92.1000, 0.9940, 1.2360, 1.3890, 0, 0) &&
			SetPlayerAttachedObject(playerid, 3, 338, 5, 0.2980, -0.0970, -0.3150, 163.0001, -157.7001, 0.0000, 0.9060, 0.9520, 0.4420, 0, 0) &&
			SetPlayerAttachedObject(playerid, 4, 19033, 2, 0.0920, 0.0210, -0.0020, 87.4000, 86.9999, 2.7000, 1.0000, 1.0000, 1.0000, 0, 0) &&
			SetPlayerAttachedObject(playerid, 5, 3026, 1, -0.0030, -0.0290, 0.0000, -0.8000, 0.0000, -9.6000, 0.7100, 0.7450, 0.7580, -16638018, 0) ;
		}
		case 788:
		{
			SetPlayerAttachedObject(playerid, 0, 19135, 2, 0.2319, -0.0139, 0.0700, 10.0999, -119.0999, -6.9999, 0.2790, 0.2999, 0.3269, -65536) &&
			SetPlayerAttachedObject(playerid, 1, 19087, 14, 0.3600, 0.0000, 0.0209, -59.0000, 75.6999, -84.8999, 0.0809, 0.0460, 0.4699) &&
			SetPlayerAttachedObject(playerid, 4, 19087, 14, 0.3600, 0.0000, 0.0209, 1.7999, 75.6999, -84.8999, 0.0809, 0.0460, 0.3970) &&
			SetPlayerAttachedObject(playerid, 2, 19063, 14, -0.9300, -0.2700, -0.1389, -60.3000, 78.8999, 165.8999, 0.2829, 0.2689, 0.3650, -251, -65536) &&
			SetPlayerAttachedObject(playerid, 5, 19063, 14, -0.7319, 0.0109, -0.2469, 0.0999, 78.8999, 165.8999, 0.3079, 0.2939, 0.4029, -65536, -251) &&
			SetPlayerAttachedObject(playerid, 6, 19054, 13, 0.2720, -0.0390, -0.0579, 0.0000, 0.0000, 0.0000, 0.2070, 0.2860, 0.0949);
		}
		case 789:
		{
			SetPlayerAttachedObject(playerid, 1, 18902, 1, 0.0049, 0.0320, -0.0329, -95.8999, -176.3001, -91.4999, 6.2229, 7.3109, 2.3970) &&
			SetPlayerAttachedObject(playerid, 2, 18902, 1, 0.2569, 0.0320, -0.0329, 88.6000, -176.0001, 88.6000, 6.2229, 6.0849, 2.3970) &&
			SetPlayerAttachedObject(playerid, 3, 19993, 1, 0.2680, 0.2910, -0.1489, 81.5999, -4.8999, -1.5000, 2.0520, 1.9739, 0.8220) &&
			SetPlayerAttachedObject(playerid, 4, 19993, 1, 0.2590, 0.3039, 0.1030, 93.3000, -4.8999, -1.5000, 2.0520, 1.9739, 0.8220) &&
			SetPlayerAttachedObject(playerid, 5, 1944, 1, 0.0849, 0.2209, -0.0399, -5.0000, 0.0000, -21.0000, 0.7929, 0.8330, 1.6909) &&
			SetPlayerAttachedObject(playerid, 6, 1575, 1, -0.0619, 0.1599, -0.0089, -91.8999, 12.7999, -2.1999, 0.6159, 0.4669, 0.7469);
		}
	}
	return -1;
}
enum colorid__
{
	c_sharpening,
	c_inventslot,
	c_attached,
	c_unic_id
};
new GetColorID[][colorid__] = {
	//sharpening td //visual in inv //attached
	{-1, -1, -1, -1},
	{0xD73CD4FF, 0x5D1BCAFF, 0xFFD73CD4, 9}, //fiol
	{0x3C3ED7FF, 0x0000FFFF, 0xFF3C3ED7, 8},//blue
	{0x3CD7D7FF, 0x33CCCCFF, 0xFF3CD7D7, 7},//goleboe
	{0x3CD740FF, 0x006600FF, 0xFF3CD740, 6},//зеленый
	{0xD5D73CFF, 0xD5D73CFF, 0xD5D73C40, 5},//желтый 
	{0xE6BC1EFF, 0xffbf00FF, 0xFFE6BC1E, 4},//оранжевый 
	{0xCC7824FF, 0xff8000FF, 0xFFCC7824, 3},//темно-оранжевый 
	{0xCC2426FF, 0x990000FF, 0xFFCC2426, 2}, //красный 
	{0xCCCCCCFF, 0xCCCCCCFF, 0, 		 1}, //белый -
	{0xff0077FF, 0xff0077FF, 0xFFD73C7E, 10}, //малиновый
	{0xFF0099FF, 0xFF0099FF, -65383, 11} //розовый
};
stock SearchColorAcs(color__)
{
	for(new i=1; i < sizeof GetColorID; i++) if(color__ == GetColorID[i][c_unic_id]) return i;
	return 0;
}
stock GetColorAcs(color__, bool:color_use=true, params[])
{
	params[0] = EOS;
	if(color_use != false)
	{
		switch(GetColorID[SearchColorAcs(color__)][c_unic_id])
		{
			case 11: SetString(params, "{FF0099}Розовый", 25);
			case 6: SetString(params, "{006600}Зелёный", 25);
			case 3: SetString(params, "{ff8000}Темно-оранжевый", 25);
			case 4: SetString(params, "{ffbf00}Оранжевый", 25);
			case 10: SetString(params, "{ff0077}Малиновый", 25);
			case 8: SetString(params, "{0000FF}Синий", 25);
			case 7: SetString(params, "{33CCCC}Голубой", 25);
			case 2: SetString(params, "{990000}Красный", 25);
			case 9: SetString(params, "{5D1BCA}Фиолетовый", 25);
			case 5: SetString(params, "{D5D73C}Желтый", 25);
			case 1: SetString(params, "{cccccc}Белый", 25);
			default: SetString(params, "{FFFFFF}Отсутствует", 25);
		}
	}
	else //false
	{
		switch(GetColorID[SearchColorAcs(color__)][c_unic_id])
		{
			case 11: SetString(params, "(Розовый)", 25);
			case 6: SetString(params, "(Зелёный)", 25);
			case 3: SetString(params, "(Темно-оранжевый)", 25);
			case 4: SetString(params, "(Оранжевый)", 25);
			case 10: SetString(params, "(Малиновый)", 25);
			case 8: SetString(params, "(Синий)", 25);
			case 7: SetString(params, "(Голубой)", 25);
			case 2: SetString(params, "(Красный)", 25);
			case 9: SetString(params, "(Фиолетовый)", 25);
			case 5: SetString(params, "(Желтый)", 25);
			case 1: SetString(params, "(Белый)", 25);
			default: SetString(params, "", 1);
		}
	}
    return 1;
}
stock ResetItemAttached(playerid, id, slot)
{
	if(id == -1) return 0;
	player_InvAks_bone[playerid][slot] = ItemAttached[id][attachBone];
	player_InvAks_position[playerid][slot][0] = ItemAttached[id][attachOffsetX];
	player_InvAks_position[playerid][slot][1] = ItemAttached[id][attachOffsetY];
	player_InvAks_position[playerid][slot][2] = ItemAttached[id][attachOffsetZ];
	player_InvAks_position[playerid][slot][3] = ItemAttached[id][attachRotX];
	player_InvAks_position[playerid][slot][4] = ItemAttached[id][attachRotY];
	player_InvAks_position[playerid][slot][5] = ItemAttached[id][attachRotZ];
	player_InvAks_position[playerid][slot][6] = ItemAttached[id][attachScaleX];
	player_InvAks_position[playerid][slot][7] = ItemAttached[id][attachScaleY];
	player_InvAks_position[playerid][slot][8] = ItemAttached[id][attachScaleZ];
	if(player_InvAks_CustomPosition[playerid][slot] != false) 
	{
		player_InvAks_CustomPosition[playerid][slot] = false;
		SaveInventory(playerid, 6);
	}
	return 1;
}
stock UseItemAttached(playerid, slot, bool:set=true)
{
	CheckSharpeningSet(playerid);
	static ItemID_slot;
	switch(slot)
	{
		case 0..7: //acs
		{
			ItemID_slot = AksSlot[playerid][slot];
		}
		case -1: //modslot
		{
			if(UseItemModification(playerid) == -1) return 0;
			return 1;
		}
		case -2: //testdrive
		{
			ItemID_slot = player_GlobalID[playerid][27];
		}
		default: ItemID_slot = -3;
	}
	if(ItemID_slot == -3) return -3;
	new id = SearchItemAttached(ItemID_slot);
	if(id == -1) return SCMf(playerid, 0xAFAFAFFF, "Аксессуар %s, не будет отображаться на этом скине!", GetItemName(playerid, slot, true));
	if(set)
	{
		if(player_InvAks_CustomPosition[playerid][slot] != false)
		{
			mysql_queryf_fix(mysql, "SELECT * FROM `player_inv_aks` WHERE `InvAks_ItemID` = '%i' AND `pID` = '%i' LIMIT 1;", true, ItemID_slot, PI[playerid][pID]);
			if(!cache_num_rows()) ResetItemAttached(playerid, id, slot);
			else
			{
				cache_get_int(0, !"InvAks_Bone", player_InvAks_bone[playerid][slot]);
				str_1[0] = EOS, cache_get_string(0, !"InvAks_Position", str_1), sscanf(str_1, "p<,>a<f>[9]", player_InvAks_position[playerid][slot]);
			}
			cache_delete(result1);
		}
		else ResetItemAttached(playerid, id, slot);
	}
	//search colors
	new color = GetColorID[SearchColorAcs(InvAksColor[playerid][slot])][c_attached];
	new itemid = ItemAttached[id][attachItemID];
	if(!IsValidObjectModel(ItemsInfo[itemid][ItemID])) color = 0;
	new model;
	if(ItemAttached[id][attachModelID] == 364) model = 364;
	else model = ItemsInfo[itemid][ItemID];
	
	if(IsPlayerAttachedObjectSlotUsed(playerid, ItemsInfo[itemid][ItemView]-1)) RemovePlayerAttachedObject(playerid, ItemsInfo[itemid][ItemView]-1);
	
	SetPlayerAttachedObject(playerid, ItemsInfo[itemid][ItemView]-1,\
		model, player_InvAks_bone[playerid][slot],\
		player_InvAks_position[playerid][slot][0], player_InvAks_position[playerid][slot][1], player_InvAks_position[playerid][slot][2],\
		player_InvAks_position[playerid][slot][3], player_InvAks_position[playerid][slot][4], player_InvAks_position[playerid][slot][5],\
		player_InvAks_position[playerid][slot][6], player_InvAks_position[playerid][slot][7], player_InvAks_position[playerid][slot][8],\
		color, color);
	return 1;
}
stock SetPlayerSkinEx(playerid,skin)
{
	SetPlayerSkin(playerid, skin);
	SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
    if(InventStatus{playerid} && !InvCarOpen[playerid])
    {
        if(skin == 18 || skin == 139 || skin == 97)
        {
            PlayerTextDrawSetString(playerid, Invent[playerid][49], "_");
            PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
            PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 1649);
            PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 0.000000, 0.000000, 90.000000, 2.000000);
        }
        else
        {
            PlayerTDSetStringf(playerid, Invent[playerid][49], "ID:%i", SearchSkinOrderID(skin));
            if(skin == 74) PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], 0);
            else PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
            PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
            PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
        }
        PlayerTextDrawShow(playerid, Invent[playerid][49]);
        PlayerTextDrawShow(playerid, Invent[playerid][47]);
        PlayerTextDrawShow(playerid, Invent[playerid][48]);
        SetSelectableSkin(playerid);
        CheckModPlayer(playerid);
    }
	CheckItem(playerid);
	if(GetPVarInt(playerid, !"P_SEAT_STATUS") == 1) J_ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1);
	return SetPlayerChatBubble(playerid, !"Переоделся", COLOR_GREEN, 10.0, 5000);
}

stock SearchSkin(playerid)
{
	if(PI[playerid][pSkin] < 312) return PI[playerid][pSkin];
	for(new i; i < sizeof ItemsInfo; i++) if(ItemsInfo[i][ItemID] == PI[playerid][pSkin]) return i;
	return 1;
}
stock SearchSkinOrderID(skin)
{
	if(skin < 312) return skin;
	for(new i; i < sizeof(InfoConfigSkin); i++)
	{
		if(InfoConfigSkin[i][MSkin_New] == skin) return i+312;
	}
	return 1;
}
stock SetPreviewSkin(playerid, ID = 0)
{
	new skin = GetPlayerSkin(playerid);
	PlayerTextDrawHide(playerid, Invent[playerid][48]);
	if(PI[playerid][pModSlot])
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], GetSyncItem(playerid, ID));
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
		PlayerTextDrawHide(playerid, Invent[playerid][49]);
	}
	else if(skin != 18 && skin != 139)
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
	}
	else
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 0.000000, 0.000000, 90.000000, 2.000000);
	}
	return PlayerTextDrawShow(playerid, Invent[playerid][48]);
}
stock CheckModPlayer(playerid)
{
	new ID = PI[playerid][pModSlot];
	PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0x333333FF);
	SetPreviewSkin(playerid, ID);
	SetSelectableSkin(playerid);
	return PlayerTextDrawShow(playerid, Invent[playerid][48]);
}
stock SetSelectableSkin(playerid)
{
    new skin = GetPlayerSkin(playerid), selectable;
    if(GetPlayerSkin(playerid) != PI[playerid][pSkin]) selectable = 0;
    else if(skin != 18 && skin != 139) selectable = 1;
    if(PI[playerid][pModSlot]) selectable = 1;
	PlayerTextDrawHide(playerid, Invent[playerid][48]);
    PlayerTextDrawSetSelectable(playerid, Invent[playerid][48], selectable);
	return PlayerTextDrawShow(playerid, Invent[playerid][48]);
}
stock TogglePlayerMap(playerid, bool:toggle, bool:fam=false)
{
	if(toggle)
	{
		if(!ShowMap[playerid])
		{
			TextDrawShowForPlayer(playerid, Map[0]);
			TextDrawShowForPlayer(playerid, Map[1]);
			TextDrawShowForPlayer(playerid, Map[2]);
			TextDrawShowForPlayer(playerid, Map[3]);
			ShowMap[playerid] = true;
			new count;
   			foreach_player(i)
			{
				if((!fam && PI[playerid][pFamilyMember] != PI[i][pFamilyMember]) || count > 23) continue;
				TextDrawShowForPlayer(playerid, PlayerDraw[count]);
				TextDrawHideForPlayer(playerid, StatsDraw[count]);
				count++;
			}
			if(!fam) SCM(playerid, COLOR_LIME, !"Вы открыли карту штата San Andreas. Чтобы закрыть её нажмите {FF9900}ESC");
			SelectTextDraw(playerid, 0xFFFFFFAA);
		}
	}
	else
	{
     	for(new i; i < 25; i++)
		{
			TextDrawHideForPlayer(playerid, PlayerDraw[i]);
			TextDrawHideForPlayer(playerid, StatsDraw[i]);
	   	}
  		TextDrawHideForPlayer(playerid, Map[0]);
		TextDrawHideForPlayer(playerid, Map[1]);
		TextDrawHideForPlayer(playerid, Map[2]);
		TextDrawHideForPlayer(playerid, Map[3]);
		ShowMap[playerid] = false;
	}
	return 1;
}
stock CheckMapCords(Float:x, Float:y, &Float:X, &Float:Y)
{
    if(y < -3000) y = -3000;
	else if(y > 3000) y = 3000;
	if(x < -3000) x = -3000;
	else if(x > 3000) x = 3000;
	if(y > -3000 && y < 3000 && x > -3000 && x < 3000)
	{
		if(y < 0) Y = 207 + 224 * -y / 3000;
		else if(y >= 0) Y = 207 - 224 * y / 3000;
		if(x < 0) X = 318 - -x * 320 / 3000;
		else if(x >= 0) X = 318 + x * 320 / 3000;
	}
	return 1;
}
stock CreatePlayerMapDraws(playerid)
{
    if(NeedDell{playerid}==false)
    {
        if(IsACop(playerid) || IsAArmy(playerid))
        {
			new Float:x, Float:y, Float:z, Float:Pos_X, Float:Pos_Y;
   			GetPlayerPos(playerid, x, y, z);
			CheckMapCords(x, y, Pos_X, Pos_Y);

			new ss, count;
   			foreach_player(i)
			{
				if(ShowMap[i])
				{
				    if(PI[playerid][pMember] == PI[i][pMember])
				    {
				        if(!ss)
				        {
					        new team = GetTeamID(playerid);
						 	PlayerDraw[count] = TextDrawCreate(Pos_X, Pos_Y, "-");
							TextDrawFont(PlayerDraw[count], 1);
							TextDrawLetterSize(PlayerDraw[count], 0.49, 2.9);
							TextDrawColor(PlayerDraw[count], TeamColors[team]);
							TextDrawSetOutline(PlayerDraw[count], 1);

							f(str_2, sizeof(str_2), "ID: %i ~y~ %s", playerid, PN(playerid));
							StatsDraw[count] = TextDrawCreate(Pos_X+10, Pos_Y+8, str_2);
							TextDrawFont(StatsDraw[count], 1);
							TextDrawLetterSize(StatsDraw[count], 0.16, 0.6);
							TextDrawColor(StatsDraw[count], 0xFFFFFFFF);
							TextDrawSetOutline(StatsDraw[count], 1);
							ss++;
						}
						TextDrawShowForPlayer(i, PlayerDraw[count]);
						TextDrawShowForPlayer(i, StatsDraw[count]);
						NeedDell{playerid}=true;
						count++;
					}
				}
			}
		}
	}
	return 1;
}
stock DestroyPlayerMapDraws(playerid)
{
	if(NeedDell{playerid}==true)
	{
		for(new i; i < 25; i++)
		{
			TextDrawHideForAll(PlayerDraw[i]);
			TextDrawDestroy(PlayerDraw[i]);
			TextDrawHideForAll(StatsDraw[i]);
			TextDrawDestroy(StatsDraw[i]);
			NeedDell{playerid}=false;
		}
	}
	return 1;
}
stock UpdateDonate(playerid)
{
	if(GetPVarInt(playerid, !"reloader") > global_time) return 1;
	mysql_queryf_fix(mysql, "SELECT `newDonation` FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", true, PI[playerid][pID]);
	new newrub;
	cache_get_int(0, !"newDonation", newrub);
	if(newrub > 0)
	{
		PI[playerid][pRub] += newrub*adddonate;
		if(adddonate <= 1) SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы пополнили счет на %i они были засчилены на ваш игровой счет!",newrub);
		else SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы пополнили счет на %i, с учетом акции вам пришло %i!",newrub, newrub*adddonate);
		UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
	    UpdatePlayerDataInt(playerid, "newDonation", 0);
	}
	cache_delete(result1);
	return SetPVarInt(playerid, !"reloader", global_time + 30);
}
stock ShowDonate(playerid, type=0)
{
	if(!type)
	{
		str_1[0] = EOS, str_2[0] = EOS;
		strcat(str_1,!"{FFFFFF}На данной странице вы можете узнать номер своего\n");
		strcat(str_1,!"аккаунта, текущее состояние счета, сумму последнего\n");
		strcat(str_1,!"пополнения и общую сумму пополнений счета.\n\n");
		strcat(str_1,!"Чтобы воспользоваться счетом нажмите {B83434}'Заказать'{FFFFFF}.\n");
		f(str_2,sizeof(str_2),"Для пополнения счета посетите сайт: %s/\n\n", ServerCFG[server_site]);
		strcat(str_1,str_2);
		f(str_2,sizeof(str_2),"Курс пополнения счета можно посмотреть на сайте %s\n\n", ServerCFG[server_site]);
		strcat(str_1,str_2);
		strcat(str_1,!"{B83434}Информация:{FFFFFF}\n");
		f(str_2,sizeof(str_2),"Номер аккаунта: \t\t\t%i\n",PI[playerid][pID]);
		strcat(str_1,str_2);
		f(str_2,sizeof(str_2),"Текущее состояние счета: \t\t%i az coins\n",PI[playerid][pVirMoney]);
		strcat(str_2,!"{AFAFAF}\nОстальную информацию можно узнать пополнив счет.\n\n");
		strcat(str_1,str_2);
		if(PI[playerid][pVIP][0])
		{
			str_d[0] = EOS, ConvertUnixTime(PI[playerid][pVIP][0], str_d);
			f(str_2, sizeof(str_2),"{FAAC58}VIP Статус: %s (будет снят/понижен: %s).\n",viplevel_name[CheckRealLevelVIP(playerid)],str_d);
			strcat(str_1, str_2);
		}
		else strcat(str_1, !"{E93124}VIP Статус: Не имеется.\n");
		if(PI[playerid][pVIP][1] > global_time)
		{
			str_d[0] = EOS, ConvertUnixTime(PI[playerid][pVIP][1], str_d);
			f(str_2, sizeof(str_2),"{FAAC58}Дополнение VIP-аккаунта: действует до %s.\n",str_d);
			strcat(str_1, str_2);
		}
		else strcat(str_1, !"{AFAFAF}Дополнение VIP-аккаунта: ни разу не активировано.\n");
		return SPD(playerid, 222, DIALOG_STYLE_MSGBOX, !"Платные услуги", str_1, !"Заказать", !"Отмена");
	}
	else
	{
		UpdateDonate(playerid);
		str_1[0] = EOS, f(str_1, sizeof str_1, "{FFFFFF}Магазин | Баланс: %i рублей", PI[playerid][pRub]);
		return SPD(playerid, 20000, DIALOG_STYLE_TABLIST_HEADERS, str_1, (str_f("{FFFFFF}Пополнить баланс на {FDEAA8}%s{FFFFFF} в разделе {9f28fa}'Магазин'\n\
		{FFFFFF}Перевод AZ-RUB в AZ-Coins\t{FDEAA8}<<<\n\
		{FFFFFF}Приобрести {A52A2A}УРОН ДЛЯ ОРУЖИЙ\t{FDEAA8}<<<\n\
		{FFFFFF}Приобрести VIP транспорт\t{FDEAA8}<<<\n\
		{FFFFFF}Приобрести Скин CJ\t{FDEAA8}700 AZ-RUB\n\
		{FFFFFF}Приобрести BonusLand VIP\t{FDEAA8}29999 AZ-RUB\n\n\
		{FFFFFF}Приобрести объекты на дом {FDEAA8}<<<\n\n\
		{FFFFFF}Приобрести объекты на бизнес {FDEAA8}<<<\n\n\
		{A52A2A}БЕСПЛАТНАЯ АДМИНКА {FDEAA8}( КЛИКНИ )\n\
		{FFFFFF}Приобрести аксессуары {FDEAA8}<<<\n\
		{FDEAA8}БЕСПЛАТНАЯ АДМИНКА", ServerCFG[server_site])), "»", "x");
	}
}
stock ActualVIP(playerid)
{
	if(floatround( (PI[playerid][pVipTime]-global_time)/3600/24, floatround_ceil )>=1) return 1;
 	else return 0;
}
public: LoadFamily()
{
	new currenttime = GetTickCount();
	for(new i; i < MAX_FAMILY; i++)
	{
		FamilyInfo[i][famID] = -1;
		if(i < cache_num_rows()) LoadOwnableFamilys(i, i);
	}
    return printf("[Public] LoadFamily загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено семей: %i", cache_num_rows());
}
stock LoadOwnableFamilys(i, id)
{
	if(FamilyInfo[id][famID] != -1) return 0;
	cache_get_int(i, !"ID", FamilyInfo[id][famID]);
	cache_get_string(i, !"slogan", FamilyInfo[id][famSlogan]);
	cache_get_string(i, !"name", FamilyInfo[id][famName]);
	cache_get_int(i, !"Members", FamilyInfo[id][famMembersCount]);
	cache_get_int(i, !"Leader", FamilyInfo[id][famLeader]);
	cache_get_int(i, !"zam_0", FamilyInfo[id][famZam_0]);
	cache_get_int(i, !"zam_1", FamilyInfo[id][famZam_1]);
	cache_get_int(i, !"zam_2", FamilyInfo[id][famZam_2]);
	cache_get_int(i, !"chatcolor", FamilyInfo[id][famChatColor]);
	cache_get_int(i, !"galka", FamilyInfo[id][famGalka]);
	cache_get_int(i, !"brand", FamilyInfo[id][famBrand]);
	cache_get_string(i, !"discord", FamilyInfo[id][famDiscord]);
	cache_get_int(i, !"house", FamilyInfo[id][famHouse]);
	cache_get_int(i, !"rep", FamilyInfo[id][famRep]);
	cache_get_int(i, !"money", FamilyInfo[id][famMoney]);
	cache_get_int(i, !"Respect", FamilyInfo[id][famRespect]);
	cache_get_int(i, !"QuestTalon", FamilyInfo[id][famQuestTalon]);
	cache_get_int(i, !"Bussines", FamilyInfo[id][famBussines]);
	cache_get_int(i, !"Shadow", FamilyInfo[id][famShadow]);
	cache_get_int(i, !"MedicCredit", FamilyInfo[id][famMedicCredit]);
	cache_get_int(i, !"WhiteList", FamilyInfo[id][famWhiteList]);
	cache_get_int(i, !"BankOffer", FamilyInfo[id][famBankOffer]);
	cache_get_int(i, !"Marodery", FamilyInfo[id][famMarodery]);
	cache_get_int(i, !"EatFish", FamilyInfo[id][famEatFish]);
	cache_get_int(i, !"Type", FamilyInfo[id][famType]);
	cache_get_int(i, !"EXP", FamilyInfo[id][famEXP]);
	cache_get_int(i, !"Level", FamilyInfo[id][famLevel]);
	TOTAL_FAMILYS++;
	return 1;
}
stock IsNums(const string[])
{
    for(new i, j = strlen(string); i < j; i++) if(string[i] > '9' || string[i] < '0') return 0;
    return 1;
}
stock StopAudioStreamForPlayerFix(playerid)
{
	if(!bumreader{playerid}) return 1;
	StopAudioStreamForPlayer(playerid);
	bumreader{playerid} = false;
	return 1;
}
stock PlayAudioStreamForPlayerFix(playerid, const url[], Float: posX = 0.0, Float: posY = 0.0, Float: posZ = 0.0, Float: distance = 50.0, usepos = 0)
{
	if(bumreader{playerid}) return 1;
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
	bumreader{playerid} = true;
	return 1;
}
stock GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, q, w, a);
    GetPlayerFacingAngle(playerid, a);
    q += (distance * floatsin(-a, degrees));
    w += (distance * floatcos(-a, degrees));
    return 1;
}
stock LoadVehicles()
{
	//army ls
	CreateTeamVehicle(TEAM_ARMY,1,433,2796.5266,-2496.8662,13.9776,90.3614,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,433,2796.4177,-2492.3276,14.0364,93.8404,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2779.5984,-2447.4360,13.4833,179.3648,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2788.1213,-2447.8513,13.4795,182.5593,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2796.5056,-2463.7385,13.4744,0.9013,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2788.7822,-2463.7356,13.6392,0.1850,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2781.6511,-2464.5125,13.5236,2.0303,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,433,2796.1270,-2415.8147,13.8713,90.1646,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,433,2796.4626,-2420.4980,13.8710,90.5001,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,548,2778.2288,-2351.2422,15.2747,180.8769,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,431,2779.9485,-2508.6799,13.7760,90.1165,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,500,2768.6787,-2528.3557,13.7429,90.9090,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2767.0381,-2535.8367,13.6601,91.2952,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2761.3728,-2548.3899,13.6594,0.7985,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,470,2757.1416,-2548.0508,13.6713,0.0874,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,487,2743.0557,-2522.8801,29.9789,89.6559,44,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1,487,2743.0391,-2540.8938,29.9631,90.7937,44,1,RES_CAR_TIME);
	//
   	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5748, -1693.0895, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5333, -1696.9873, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4792, -1704.1243, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5447, -1700.5864, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4730, -1708.0327, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,488, 1668.1779, -1714.1947, 20.5305, 24.2905, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,445, 1646.1866, -1709.1534, 20.3465, 269.8665, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,445, 1646.2244, -1705.6493, 20.3519, 271.5544, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,426, 1646.2777, -1702.4156, 20.2413, 269.6584, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1959.5035, 584.8771, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1953.4304, 584.8774, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1950.3208, 584.8360, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1947.2937, 584.8109, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1941.2451, 584.8881, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1938.3971, 584.8671, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1932.2831, 585.4850, 34.6767, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1929.3038, 585.4374, 34.6767, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,488, -1904.0132, 437.0794, 35.7320, 358.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2674.3630, 1167.9310, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2669.0906, 1167.9784, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2664.0469, 1168.0015, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2659.0396, 1168.0638, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2653.9482, 1168.0232, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2643.9392, 1167.9216, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,488, 2645.1099, 1210.6233, 27.2443, 19.5005, 17,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MERIALS,1,409, 1493.5521, -1232.6840, 14.2253, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1488.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1492.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1496.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1500.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,487, 1496.0646,-1319.2361,23.8105,271.1159, 36,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LICENSERS,1,538, -2064.3135, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2068.5571, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2072.8169, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2068.5403, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2072.6775, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2076.7915, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2080.7405, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2084.6289, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2088.6370, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2544.0093, 586.9008, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9749, 592.9135, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9980, 598.9249, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9631, 604.8779, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2544.0520, 610.7438, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.4500, 627.6297, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.5378, 632.8685, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.7861, 647.4091, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.7981, 658.3743, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1593.6510, 1840.2689, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1597.9547, 1840.3273, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1602.2014, 1840.3251, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1606.3016, 1840.2615, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1610.6777, 1840.2601, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1620.2689, 1850.2357, 10.4923, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1616.0072, 1850.2614, 10.4923, 180.0000, 7,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1804.5696, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1801.4896, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1798.4095, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1407.4656, -1783.6151, 13.2766, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1407.4656, -1786.7612, 13.2766, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,580, 1407.1735, -1792.4543, 13.2166, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,487, 1535.4736,-1788.3174,33.6588,180.8290, 36,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1124.1484, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1110.8409, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1097.7611, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1136.3181, -1344.0048, 13.8266, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1136.3181, -1338.6698, 13.8266, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,426, 1178.1130,-1339.1445,13.6469,270.4954, 3,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_RM,1,579, 984.4582, 1747.0344, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,579, 984.4969, 1742.9897, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,579, 984.4497, 1738.9713, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,409, 950.2493, 1743.6547, 8.2832, 179.4013, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.4694, 1719.4099, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.3997, 1723.1316, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.5228, 1727.1056, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 947.9976, 1724.3361, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 948.0338, 1725.7334, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 947.8561, 1722.8571, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.9404, 1769.3865, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.8877, 1778.1040, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.9247, 1787.2513, 8.5141, 180.0000, 0,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_YAKUZA,1,409, -2446.0315,133.0861,34.7638,272.9593, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, -2442.7847,141.9793,34.8783,269.9984, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, -2434.5728,141.2890,34.8992,269.8872, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, -2452.3250,149.9029,34.9176,0.0004, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,505, -2462.1074,154.1508,35.0971,0.0017, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,505, -2461.9407,164.1662,35.1050,0.1147, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.7681,167.5494,34.8352,359.5991, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.8779,158.3322,34.8348,359.5431, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,530, -2465.9961,174.6347,34.8529,229.8133, 0,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LCN,1,409, 1472.1443, 2778.5149, 10.2784, 0.7317, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2818.3545, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2822.7544, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2827.2556, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2831.7986, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1495.9521, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1500.3752, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1504.7489, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1509.1300, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1513.6281, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2830.3674, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2834.5801, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2838.8606, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.1582, 2761.9631, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.3872, 2760.5962, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.5973, 2759.4551, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LCN,1,545, 1491.3921, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LCN,1,545, 1486.9521, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LCN,1,545, 1482.4321, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_SFPD,1,4803, -1572.4406, 726.4545, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,4803, -1572.4470, 730.6609, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,4802, -1572.3829, 738.8925, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,4802, -1572.3927, 743.1780, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,4803, -1572.3944, 722.4703, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1600.0791, 695.4734, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1608.4055, 695.5201, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1612.2900, 695.5635, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1616.7273, 695.5120, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1621.0616, 694.3557, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1628.7274, 694.2426, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1632.6772, 694.2825, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.1775, 682.1177, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.4412, 678.0385, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.4945, 673.9135, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.5835, 669.6574, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,601, -1584.3610, 750.1661, -5.5720, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,601, -1588.7886, 750.3608, -5.5720, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,497, -1679.8936, 705.5067, 30.7259, 47.0480, 1,15,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_FBI,1,415, -2439.8962,501.1184,29.6982,212.9155, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,415, -2444.0156,510.2275,29.6827,190.2442, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,415, -2429.8555,515.0704,29.6838,213.7434, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2425.9792,518.5383,30.0720,221.8816, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2422.3567,521.5685,30.0282,224.3069, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2419.1121,524.8293,30.0198,228.8295, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2416.6768,528.4944,30.0656,238.0834, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,12728, -2415.0549,531.9811,29.6054,247.5954, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,3266, -2413.6753,535.8023,29.5869,257.3448, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,3266, -2413.4897,539.7662,29.6041,268.3483, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,497, -2479.0791,522.6041,51.2348,90.5490, 0,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LVPD,1,525, 2256.0334, 2444.7419, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,525, 2260.3821, 2444.7588, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,4802, 2251.8115, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,4802, 2260.4568, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,4803, 2269.1169, 2460.4917, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,4803, 2273.6724, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,4803, 2277.9561, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,601, 2269.1628, 2445.0547, 10.4757, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,601, 2273.4543, 2445.2400, 10.4757, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523, 2251.5850, 2475.3740, 10.2757, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523, 2256.1052, 2475.3740, 10.2757, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523, 2269.0781, 2475.3740, 10.2635, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523, 2273.1946, 2475.3740, 10.2635, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,497, 2342.6707, 2472.6902, 39.0477, 176.9832, 7,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LSPD,1,4802, 1574.3335, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,4802, 1578.5250, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,4802, 1583.3390, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,4803, 1587.3566, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,4803, 1591.5785, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,4803, 1595.4098, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1672.7449, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1675.3800, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1676.9354, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1679.3687, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1680.9663, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,599, 1528.5093, -1687.8639, 6.4869, -90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,599, 1528.5093, -1683.7883, 6.4869, -90.5400, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,497, 1552.8477, -1610.5408, 14.0469, 90.0000, 0,1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LSPD,1,525,1526.6047,-1643.5181,5.6177,179.7686, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,525,1530.5017,-1643.5320,5.6177,181.1458, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,427,1534.7737,-1643.4572,5.6181,180.4515, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,427,1538.6315,-1643.4637,5.6177,181.2151, 1,16,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_RCPD,1,4802,614.4224,-596.8713,16.9544,270.9448, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,4802,613.7486,-601.6826,16.9514,270.0360, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,4803,615.7883,-591.2003,16.9545,269.4611, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,4803,616.6922,-584.9808,16.9492,269.8435, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,599,621.4668,-605.8457,17.3525,270.5647, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,599,621.4632,-610.5536,17.3580,270.5844, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,523,636.0141,-611.2366,15.9026,358.7955, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,523,633.9724,-611.4705,15.9080,0.4383, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,523,631.4586,-611.6922,15.9061,359.6254, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,1,599,637.3110,-542.4899,17.3446,179.4867, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,1,599,637.2239,-559.2595,17.3484,179.3916, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,1,523,638.1916,-611.2606,15.8589,3.0959, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,1,497,  614.5333, -549.9294, 23.1049, 215.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,1,525, 669.0193, -620.7942, 16.1555, 360.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,1,525, 665.1553, -620.8279, 16.1555, 360.0000, 1,16,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2188.4895, -2348.0159, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 482, -2190.0908, -2321.6782, 30.6460, 51.1400, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 413, -2192.9907, -2325.3586, 30.5650, 51.1400, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2187.4729, -2346.7527, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2186.4050, -2345.5525, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2208.3918, -2322.3496, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2212.6418, -2318.9141, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2210.6152, -2320.5139, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);

	new Float:x = 1803.8710;
	for(new i; i < 18; i++)
	{
		AddFreeFaggio(x, -1934.3, 12.9, 0.0000);
		x += -1.6;
	}
	//2 spawn
	x = 1159.8822;
	for(new i; i < 10; i++)
	{
		AddFreeFaggio(x, -1734.0, 13.3, 180.0);
		x -= 1.4;
	}
	x = -1330.0;
	for(new i; i < 5; i++)
	{
		AddFreeFaggio(1181.9396, x,13.1673,271.7448);
		x -= 1.2;
	}
	J_AddStaticVehicleEx(473, -733.0216, -2033.5288, 5.2137, 114.0388, 1, 1);
	J_AddStaticVehicleEx(473, -731.3942, -2020.5775, 5.2138, 60.6919, 1, 1);

	CreateJobVehicle(JOB_PIZZA,448, 686.0101,-1567.8412,13.8424,179.3411, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 687.9260,-1568.1115,13.8423,187.1912, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 690.6421,-1567.9688,13.8416,174.7638, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 694.3134,-1567.9852,13.8404,173.1375, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 695.6133,-1568.0505,13.8410,179.2073, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 696.9920,-1567.8237,13.8421,176.1919, 44, 44, RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1471,2242.9351,10.4204,94.2715, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1877,2241.4224,10.4204,92.1274, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1769,2240.3376,10.4192,91.8053, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1233,2236.6389,10.4198,88.3445, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1876,2235.4705,10.4207,92.8598, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1750.6255,2233.9568,10.4141,87.8024, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1750.7683,2227.1809,10.4182,93.9982, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1205,2225.6960,10.4197,91.3303, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.2262,2224.5493,10.4200,87.7106, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.2468,2220.2297,10.4206,90.0917, 3, 3,  RES_CAR_TIME);
	CreateJobVehicle(JOB_PIZZA,448, 1751.6473,2218.6179,10.4188,93.0859, 3, 3,  RES_CAR_TIME);

	CreateJobVehicle(3, 456, 1635.9636,2303.1755,10.5882, 90.0, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 1636.4476,2312.3328,10.5619, 90.0, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 1636.9746,2358.4033,10.9714, 93.0, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 1636.0696,2340.4041,10.5931, 90.0, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, -28.2670,47.2077,3.3078, 249.8801, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, -30.8757,39.9725,3.3071, 250.2568, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, -33.3484,33.0556,3.3084, 250.1479, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, -36.0660,25.2636,3.3049, 241.9240, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 900.8983,-1207.9601,17.1330,178.4953, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 867.2451,-1207.6951,17.1313,179.5756, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 831.0262,-1208.3289,17.1309,180.2903, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 866.2861,-1245.2487,15.0633,270.7383, 43, 1, RES_CAR_TIME);
	CreateJobVehicle(3, 456, 866.9750,-1255.2280,15.0910,273.5939, 43, 1, RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_ARMYSF,3, 433,-1301.7191,450.2715,7.4583,0.0000,44,1); // kamaza
	CreateTeamVehicle(TEAM_ARMYSF,3, 433,-1306.0352,450.4382,7.6864,0.3075,44,1); // kamaza
	CreateTeamVehicle(TEAM_ARMYSF,3, 433,-1310.2572,450.4810,7.4586,0.1091,44,1); // kamaza
	CreateTeamVehicle(TEAM_ARMYSF,3, 433,-1314.5708,450.4823,7.4585,0.0178,44,1); // kamaza
	CreateTeamVehicle(TEAM_ARMYSF,7, 500,-1232.7452,449.8330,7.2873,0.0191,44,1); // mini
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1235.9640,449.6820,7.2055,0.2709,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1238.7854,449.7097,7.0393,0.0233,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1242.1399,449.9077,7.2503,359.6829,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1246.0515,449.7409,7.2509,0.0211,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1275.2776,451.8089,7.0424,0.0036,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1278.7793,451.7892,7.2507,359.7596,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 470,-1282.2268,451.7888,7.2478,358.7333,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 431,-1332.8990,445.7818,7.1335,0.0031,44,1); // hammer
	CreateTeamVehicle(TEAM_ARMYSF,1, 487,-1359.8384,307.1512,7.2943,4.2847,44,1); // vertatel
	CreateTeamVehicle(TEAM_ARMYSF,1, 487,-1394.5713,308.1148,7.2834,0.4725,44,1); // vertatel2
	//
	CreateTeamVehicle(TEAM_GROOVE,1, 600, 2485.0903, -1680.8488, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 600, 2488.3083, -1680.7385, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2506.0962, -1676.6655, 13.2813, -35.0400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2508.0857, -1666.6547, 13.2813, 11.1000, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2501.6204, -1657.3187, 13.2813, 54.4800, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 478, 2498.6013, -1684.0957, 13.2813, 13.5600, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 482, 2505.4092, -1694.1656, 14.2813, 0.0000, 86, 86,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2771.5327, -1623.8390, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2776.0544, -1623.9009, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2780.4949, -1623.8438, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 474, 2779.6228, -1603.3281, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 474, 2785.9009, -1603.1583, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 478, 2769.9705, -1615.0035, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 482, 2769.9705, -1606.8324, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_BALLAS,1, 566, 2003.6793, -1120.1661, 26.4723, 181.2332, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 566, 2008.8434, -1129.2593, 25.0132, 90.0000, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 566, 1985.5564, -1141.6482, 25.5184, 270.8255, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 482, 1993.8208, -1141.5947, 25.3474, 270.0000, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 419, 2001.6429, -1141.5061, 25.1574, 270.8112, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 478, 1994.4465, -1095.7386, 24.9574, 344.2161, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 478, 1998.7805, -1096.9128, 24.9574, 346.3077, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 419, 2002.2770, -1097.8044, 24.9574, 345.6925, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 468, 1988.2346, -1127.2072, 25.4664, 159.4789, 179, 179, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 468, 1985.2548, -1127.1553, 25.5491, 161.5554, 179, 179, RES_CAR_TIME);


	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2516.9424, -2005.0195, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2512.8218, -2004.6410, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2508.7004, -2004.2294, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 535, 2514.5210, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 535, 2506.8916, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 478, 2530.8352, -2007.6204, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 482, 2530.8257, -2011.7937, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_RIFA,1, 529, 2177.5630, -1808.2943, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 529, 2173.5139, -1808.3468, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 529, 2169.4451, -1808.4357, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 439, 2172.6543, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 439, 2165.4509, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 478, 2190.1111, -1796.2930, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 482, 2190.1111, -1804.5145, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1424.3177, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1413.2618, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.4966, -1424.3262, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.6265, -1416.9812, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
   	CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.7156, -1409.9048, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.3918, -1419.1108, 28.1375, 360.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.4070, -1411.1537, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
   	CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6436, -1402.2551, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6597, -1400.8583, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6648, -1399.6414, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1407.9395, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1419.0396, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
}
stock UpdateReconstruction(i)
{
	if(Reconstruction[i][Reconstruction3DText] == Text3D:-1) Reconstruction[i][Reconstruction3DText] = CreateDynamic3DTextLabel(!" ", 0xFFFFFFFF, Reconstruction[i][ReconstructionX], Reconstruction[i][ReconstructionY], Reconstruction[i][ReconstructionZ]+1, 10.0000);
    Reconstruction[i][ReconstructionPickup] = CreateDynamicPickup(19524, 23, Reconstruction[i][ReconstructionX], Reconstruction[i][ReconstructionY], Reconstruction[i][ReconstructionZ]);
	UpdateDynamic3DTextLabelTextf(Reconstruction[i][Reconstruction3DText], -1, "{ffffff}Сбор средств на реконструкцию здания\n\n{73B461}Требуется: $1500000000\n{FFFF00}Собрано: $%i (%i%%)\n\n{ab9d93}Для получения подробной информации\nнажмите клашиву ALT", Reconstruction[i][ReconstructionMoney], floatround(100/1500000000*Reconstruction[i][ReconstructionMoney], floatround_ceil));
}
enum diceinfo
{
	dicebtc,
	Float:POSik[3]
};
static const DicePos[][diceinfo] = {
	{0, {2258.4390, -853.8804, 1406.6176}},
	{1, {2274.2310, -853.8804, 1406.6176}},
	{0, {2272.1606, -846.1528, 1406.6176}},
	{1, {2260.5095, -846.1528, 1406.6176}}
};
stock LibraryCasino()
{
	CreateDynamic3DTextLabel(!"Выход\nНажмите:{FFFFFF} ALT", 0x73B461FF, 2263.5845, -871.3642, 1407.1273, 9.0000);
	CreateDynamicPickup(19132, 1, 2263.5845, -871.3642, 1407.1273);
	CreateDynamic3DTextLabel(!"VIP зал\nВход: 50 000$\n{FFFFFF}ALT", 0x73B461FF, 2268.2617, -788.1342, 1407.1273, 10.0000);
	CreateDynamicPickup(1239, 23, 2268.2617, -788.1342, 1407.1273);
	CreateDynamic3DTextLabel(!"Бар", 0xFFFFFFFF, 2297.6724, -823.6151, 1407.1273, 20.0000);
	CreateDynamicPickup(1274, 23, 2297.6724, -823.6151, 1407.1273);
	CreateDynamic3DTextLabel(!"{FFD700}Розыгрыш автомобиля\n\n{FFD700}[{ffffff} Для информации: ALT {FFD700}]\n\n{cccccc}Автомобиль меняется после розыгрыша.\nРозыгрыш проводится 1 раз в неделю. ", 0xFFFFFFFF, 2266.3496, -831.1735, 1406.2732, 10.0000);
	CreateDynamicPickup(1239, 23, 2266.3496, -831.1735, 1406.2732);
	CreateDynamic3DTextLabel(!"Правила игры в {ff704d}«Дурака»\n{FFFFFF}[ ALT ]", 0xFFFFFFFF, 2232.2385, -829.7819, 1407.1273, 3.0000);
	CreateDynamicPickup(1239, 23, 2232.2385, -829.7819, 1407.1273);
	CreateDynamic3DTextLabel(!"Обменник\nПокупка игровых фишек.\n\nНажмите: {FFFFFF}ALT", 0x73B461FF, 2235.3030, -824.5659, 1407.1273, 8.0000);
	CreateDynamicPickup(1274, 23, 2235.3030, -824.5659, 1407.1273);
	CreateDynamic3DTextLabel(!"Запуск рулетки\nчерез 30 сек\n\nМин. ставка: $0\nМакс. ставка: $0", 0xAFAFAFFF, 2295.2285, -832.0254, 1407.8370, 4.0000);
	CreateDynamic3DTextLabel(!"Запуск рулетки\nчерез 30 сек\n\nМин. ставка: $0\nМакс. ставка: $0", 0xAFAFAFFF, 2287.5010, -829.9546, 1407.8370, 4.0000);
	for(new i; i < sizeof DicePos; i++) 
	{
		str_1[0] = EOS;
		if(DicePos[i][dicebtc] != 0) SetString(str_1, "Стол для игры в кости за BTC\n{B03131}/dice"); 
		else SetString(str_1, "Стол для игры в кости за фишки\n{B03131}/dice");
		CreateDynamic3DTextLabel(str_1, 0xFFFFFFFF, \
		DicePos[i][POSik][0], DicePos[i][POSik][1], DicePos[i][POSik][2], 5.0000);
	}
	CreateDynamic3DTextLabel(!"Дурак (переводной)\n\n{ffffff}Ожидание игроков: {FF6666}0 / 6\n{ffffff}Ставка: {FF6666}2000 фишек\n\n{ffffff}Сесть за стол {FF6666}F", 0xFF6666FF, 2245.2795, -830.2427, 1407.6522, 3.5000);
	CreateDynamic3DTextLabel(!"{FFD700}Колесо фортуны\n\n{FFD700}[{ffffff} Для взаимодействия: ALT {FFD700}]\n\n{cccccc}Прокрутить колесо фортуны можно 1 раз в сутки.\nДля прокрутки требуется пробыть в казино 20 минут и более.\n\nДоступно для прокрутки", 0xFFFFFFFF, 2266.3584, -807.6035, 1407.6224, 10.0000);
	CreateDynamic3DTextLabel(!"[ Black Jack ]{ffffff}\n\nМинимальная ставка: {FF6666}50000 фишек{ffffff}\nМаксимальная ставка: {FF6666}100000 фишек{ffffff}\n\nНажмите {FF6666}ENTER / F", 0xFF6666FF, 2295.1792, -816.7026, 1407.2871, 5.0000);
	CreateDynamic3DTextLabel(!"[ Black Jack ]{ffffff}\n\nМинимальная ставка: {FF6666}1000 фишек{ffffff}\nМаксимальная ставка: {FF6666}10000 фишек{ffffff}\n\nНажмите {FF6666}ENTER / F", 0xFF6666FF, 2287.4519, -818.7729, 1407.2871, 5.0000);
	CreateDynamic3DTextLabel(!"Покер\n\n{ffffff}Ожидание игроков\n{ffffff}Размер банка: {FF6666}50000 - 300000 фишек\n\n{ffffff}Сесть за стол {FF6666}F", 0xFF6666FF, 2274.7908, -793.8384, 1407.0096, 5.0000);
	CreateDynamic3DTextLabel(!"Покер\n\n{ffffff}Ожидание игроков\n{ffffff}Размер банка: {FF6666}5000 - 50000 фишек\n\n{ffffff}Сесть за стол {FF6666}F", 0xFF6666FF, 2272.7205, -801.5659, 1407.0096, 5.0000);
	CreateDynamic3DTextLabel(!"Покер\n\n{ffffff}Ожидание игроков\n{ffffff}Размер банка: {FF6666}50000 - 300000 фишек\n\n{ffffff}Сесть за стол {FF6666}F", 0xFF6666FF, 2258.3699, -793.7402, 1407.0096, 5.0000);
	CreateDynamic3DTextLabel(!"Покер\n\n{ffffff}Ожидание игроков\n{ffffff}Размер банка: {FF6666}5000 - 50000 фишек\n\n{ffffff}Сесть за стол {FF6666}F", 0xFF6666FF, 2260.4402, -801.4678, 1407.0096, 5.0000);
	//
	CreateDynamicActor(172, 2287.3843, -818.3999, 1407.1273, 190.6998, true, 100.0, 2, 215);
	CreateDynamicActor(172, 2295.1116, -816.3296, 1407.1273, 190.6998, true, 100.0, 2, 215);
	CreateDynamicActor(172, 2287.5088, -828.7661, 1407.1273, 164.9999, true, 100.0, 2, 215);
	CreateDynamicActor(11, 2294.6411, -830.9922, 1407.1273, 194.9998, true, 100.0, 2, 215);
	CreateDynamicActor(12, 2232.5732, -819.6976, 1407.1273, 322.9395, true, 100.0, 2, 215);
	CreateDynamicActor(11, 2233.7729, -824.5397, 1407.1273, 270.1074, true, 100.0, 2, 215);
	CreateDynamicActor(11, 2231.5212, -828.2438, 1407.1273, 200.2337, true, 100.0, 2, 215);
	CreateDynamicActor(164, 2271.4719, -788.2106, 1407.1273, 158.4156, true, 100.0, 2, 215);
	CreateDynamicActor(163, 2262.4053, -788.4054, 1407.1273, 217.3229, true, 100.0, 2, 215);
	CreateDynamicActor(164, 2271.9661, -871.1498, 1407.1273, 31.5143, true, 100.0, 2, 215);
	CreateDynamicActor(163, 2260.6018, -870.8624, 1407.1273, 326.3403, true, 100.0, 2, 215);
	CreateDynamicActor(171, 2257.1992, -853.4859, 1407.1273, 252.8747, true, 100.0, 2, 215);
	CreateDynamicActor(172, 2259.3010, -845.6440, 1407.1273, 254.1276, true, 100.0, 2, 215);
	CreateDynamicActor(171, 2273.3960, -845.7950, 1407.1273, 106.2327, true, 100.0, 2, 215);
	CreateDynamicActor(172, 2275.4807, -853.5748, 1407.1273, 104.0394, true, 100.0, 2, 215);
}
stock LoadOther()
{
	new currenttime = GetTickCount();
	WorkNPC_areaid = CreateDynamicSphere(1467.7723, -1673.4635, 13.3729, 100.0);
	CreateDynamic3DTextLabel(!"Эдвард ( Торговец подарками )\n       ( Скупщик гражданских талонов )\n{FFFFFF}Чтобы поговорить нажми ALT", 0x73B461FF, 1420.4176, -1685.8624, 13.5469, 15.0000);
	CreateDynamic3DTextLabel(!"Прока ( Продавец деталей для тюнинга )\n{FFFFFF}Чтобы посмотреть товар нажми ALT", 0x73B461FF, 1090.1139, 1525.7634, 1717.0868, 5.0000, 249);
	CreateDynamic3DTextLabel(!"Ричи\n{73B461}Поговорить: {FFFFFF}ALT", 0xFFFFFFFF, 1771.5164, 424.0565, 20.1436, 5.0000);
	CreateDynamic3DTextLabel(!"Профессиональный пилот\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж", COLOR_VALIK, 1637.9214,-2239.6021,13.5015,15.0);
	CreateDynamic3DTextLabel(!"Прораб\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж", COLOR_VALIK, 1467.7723, -1673.4635, 13.3729,15.0);
	for(new i; i < sizeof(CellarPickupInfo); i++)
	{
		if(CellarPickupInfo[i][ceStatus] != true) CreateDynamic3DTextLabel(!"{3CE658}Информация\n{AFAFAF}[Настройка]: {FFFFFF}ALT", 0x73B461FF, CellarPickupInfo[i][cePosition][0], CellarPickupInfo[i][cePosition][1], CellarPickupInfo[i][cePosition][2], 10.0000);
		CreateDynamicPickup(1239, 23, CellarPickupInfo[i][cePosition][0], CellarPickupInfo[i][cePosition][1], CellarPickupInfo[i][cePosition][2]);
	}
	for(new i; i < sizeof(CellarInfoVar); i++)
	{
		CreateDynamicPickup(19133, 23, CellarInfoVar[i][ciPosPlayer][0], CellarInfoVar[i][ciPosPlayer][1], CellarInfoVar[i][ciPosPlayer][2]);
		CreateDynamic3DTextLabel(!"Войти в дом\n{FFFFFF}ALT", COLOR_GREY, CellarInfoVar[i][ciPosPlayer][0], CellarInfoVar[i][ciPosPlayer][1], CellarInfoVar[i][ciPosPlayer][2], 5.0);
	}
	LibraryCasino();
	CreateDynamic3DTextLabel(!"{FFFFFF}Лари\n{73B461}Поговорить: {FFFFFF}ALT{73B461}", 0x73B461FF, 523.8110, 848.2696, -42.9189, 5.0000);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N", 0xAFAFAFFF, 1519.1604, 1270.7262, 11.0067, 5.0000);
	CreatePickup(19475, 1, 1519.1604, 1270.7262, 11.0067, -1);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N", 0xAFAFAFFF, 1519.2792, 1273.6433, 11.0067, 5.0000);
	CreateDynamicPickup(19475, 1, 1519.2792, 1273.6433, 11.0067);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N", 0xAFAFAFFF, 1522.7191, 1277.0123, 11.0067, 5.0000);
	CreateDynamicPickup(19475, 1, 1522.7191, 1277.0123, 11.0067);
	CreateDynamic3DTextLabel(!" Раздевалка \n\n{FFFFFF}Работа инкассатора", 0x10F441FF, 1518.5939, 1288.3005, 10.9808, 3.0000);
	CreateDynamicPickup(1275, 2, 1518.5939, 1288.3005, 10.9808);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N", 0xAFAFAFFF, 1525.6399, 1277.0123, 11.0067, 5.0000);
	CreateDynamicPickup(19475, 1, 1525.6399, 1277.0123, 11.0067);
	CreateDynamic3DTextLabel(!"Отчисления олигархам\n\n{ffffff}Игроки владеющие минимум 4-я домами\nмогут получать 1 раз в сутки 'Ларец Олигарха'\n{cccccc}[ Нажмите ALT ]", 0xFFFF00FF, 1504.5957, 1279.6603, 10.9908, 10.0000);
	CreateDynamicPickup(1239, 23, 1504.5957, 1279.6603, 10.9908);
	CreateDynamic3DTextLabel(!"Получение банковской карты\n{B03131}Необходимо иметь 1 000$", 0xFFFFFFFF, 1504.7090, 1271.7426, 10.9908, 4.0000);
	CreateDynamicPickup(1277, 1, 1504.7090, 1271.7426, 10.9908);
	//
//	CreateDynamicPickup(1241, 23, 1148.6715, -1308.8401, 1019.4266);
//	CreateDynamic3DTextLabel(!"Пройти курс {99CC00}быстрой{FFFFFF} реабилитации\nНажмите: ALT!", 0xFFFFFFFF, 1148.6715, -1308.8401, 1019.4266, 4.0000);
	CreateDynamic3DTextLabel(!"Школа танцев\n{FFFFFF}ALT", 0xAFAFAFFF, 1755.1312, -315.8170, 1655.5055, 10.0000);
	CreateDynamic3DTextLabel(!"Рейдж ( Тренер по танцам )\n{FFFFFF}Чтобы поговорить нажми ALT", 0x73B461FF, 1756.8585, -315.0686, 1654.5055, 3.0000);
	//
	CreateDynamic3DTextLabel(!"ALT", 0xCCCCCCFF, 1525.2045, 1436.7594, 10.9674, 2.5000);
	CreateDynamicPickup(19132, 23, 1525.2045, 1436.7594, 10.9674);
	CreateDynamic3DTextLabel(!"ALT", 0xCCCCCCFF, 1525.1495, 1439.1144, 10.9674, 2.5000);
	CreateDynamicPickup(19132, 23, 1525.1495, 1439.1144, 10.9674);
	CreateDynamic3DTextLabel(!"Распродажа предметов\n\n\n{cccccc}Чтобы посмотреть список\nНажмите ALT", 0x67DAFFFF, 1527.7731, 1437.1156, 10.9674, 7.0000);
	CreateDynamicPickup(1239, 23, 1527.7731, 1437.1156, 10.9674);
	CreateDynamic3DTextLabel(!"Управление ломбардом\n\n{ffff00}Нажмите ALT", 0xFFFFFFFF, 1531.3323, 1445.6553, 10.9674, 7.0000);
	CreateDynamicPickup(1239, 23, 1531.3323, 1445.6553, 10.9674);
	CreateDynamicPickup(1239, 23, 1531.1866, 1437.1147, 10.9674);
	CreateDynamic3DTextLabel(!"Федерико\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж", 0x73B461FF, 1163.6832, -1754.9606, 13.6180, 15.0000);
	CreateDynamic3DTextLabel(!"Представитель оганизации\n'Тёмная Удача'\n\n{ffffff}Нажмите ALT, чтобы поговорить", 0x73B461FF, 2525.4211, -1458.1915, 23.9404, 10.0000);
	CreateDynamic3DTextLabel(!"Владик\nДруг Андрея\nКвестовый персонаж\n{FFFFFF}Чтобы поговорить, нажми ALT", 0x73B461FF, 2507.7012, -1471.6755, 24.0371, 15.0000);
	CreateDynamic3DTextLabel(!"Гурам\nСкупщик нелегала\n{FFFFFF}Чтобы поговорить, нажми ALT", 0x73B461FF, 2530.6060, -1475.0999, 23.9788, 15.0000);
	CreateDynamic3DTextLabel(!"Чёрный рынок\n\n{ffffff}[ ALT ]", 0xFA5858FF, 2534.8040, -1472.6917, 24.0019, 5.0000);
	CreateDynamic3DTextLabel(!"[ Информация о работе салона ]\n{cccccc}Нажмите ALT", 0xFFFFFFFF, 2571.3157, 978.1287, 10.9932, 7.5000);
	CreateDynamicPickup(1239, 23, 2571.3157, 978.1287, 10.9932);
	for(new i; i < sizeof(PostFrac); i++)
	{
	    CreateDynamicPickup(19273, 23, PostFrac[i][XPost],PostFrac[i][YPost],PostFrac[i][ZPost]);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Пост: %s\n\n[{FAAC58}СВОБОДЕН{FFFFFF}]\n\nИспользуйте: ALT\n( Заступить на пост )", PostFrac[i][postname]);
	    postlabel[i] = CreateDynamic3DTextLabel(str_1, COLOR_WHITE, PostFrac[i][XPost],PostFrac[i][YPost],PostFrac[i][ZPost]+1.5,3.5);
	    postowner[i] = -1;
	}
	SEAT_SYSTEM_AREAS[0] = CreateDynamicSphere(SEAT_SYSTEM_POS[0][Sx], SEAT_SYSTEM_POS[0][Sy], SEAT_SYSTEM_POS[0][Sz], 1.25);
	for(new i = 1; i < sizeof (SEAT_SYSTEM_POS) - 1; i++) CreateDynamicSphere(SEAT_SYSTEM_POS[i][Sx], SEAT_SYSTEM_POS[i][Sy], SEAT_SYSTEM_POS[i][Sz], 1.25);
	SEAT_SYSTEM_AREAS[1] = CreateDynamicSphere(SEAT_SYSTEM_POS[sizeof(SEAT_SYSTEM_POS)-1][Sx], SEAT_SYSTEM_POS[sizeof(SEAT_SYSTEM_POS)-1][Sy], SEAT_SYSTEM_POS[sizeof(SEAT_SYSTEM_POS)-1][Sz], 1.25);
	for(new i; i < sizeof SEAT_SYSTEM_POS; i++) CreateDynamic3DTextLabel(!"Сесть\n{f9ad43}ALT", COLOR_WHITE, SEAT_SYSTEM_POS[i][Sx], SEAT_SYSTEM_POS[i][Sy], SEAT_SYSTEM_POS[i][Sz], 2.5);
	//ЖК ультра
	CreateDynamic3DTextLabel(!"{FFFFFF}Питер младший\n{73B461}Поговорить: {FFFFFF}ALT{73B461}", 0x73B461FF, -2051.0400, 474.4830, 35.1723, 5.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel(!"{FFFFFF}Юджин\n{73B461}Нажмите: {FFFFFF}ALT{73B461}\n{FFFFFF}Семейный гид", 0x73B461FF, -2053.0842, 460.5180, 35.1719, 5.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel(!"Вертолётная площадка\n\n{ffffff}Нажмите ALT", 0xFFFF00FF, -2061.5591, 463.5475, 35.1719, 15.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(19132, 23, -2061.5591, 463.5475, 35.1719, -1, -1);
	CreateDynamic3DTextLabel(!"Спуск вниз\n\n{ffffff}Нажмите ALT", 0xFFFF00FF, -2055.9150, 455.0196, 139.6406, 15.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(19132, 23, -2055.9150, 455.0196, 139.6406, -1, -1);
	CreateDynamic3DTextLabel(!"[ {ffffff}Семейный автопарк {D45B5B}]\n\n{cccccc}Нажмите ALT", 0xD45B5BFF, -2017.0059, 445.0810, 35.1723, 10.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(1239, 23, -2017.0059, 445.0810, 35.1723, -1, -1);
	CreateDynamic3DTextLabel(!"Влияние на организации\n{FFFFFF}Нажмите: ALT", 0x42B02CFF, -1221.6689, 2383.6748, 1500.9667, 3.0000);
	CreateDynamicPickup(1239, 23, -1221.6689, 2383.6748, 1500.9667, -1, -1);
	CreateDynamic3DTextLabel(!"Семейные\n{FFFFFF}бронежилеты", 0x42B02CFF, -1209.4291, 2377.4414, 1500.9767, 3.0000);
	FamilyARM = CreateDynamicPickup(1242, 23, -1209.4291, 2377.4414, 1500.9767, -1, -1);
	CreateDynamic3DTextLabel(!"Семейные\n{FFFFFF}аптечки", 0x42B02CFF, -1212.0466, 2371.8079, 1500.9749, 3.0000);
	FamilyHP = CreateDynamicPickup(1240, 23, -1212.0466, 2371.8079, 1500.9749, -1, -1);
	CreateDynamic3DTextLabel(!"[ Шкаф ]\nЧтобы заглянуть\n{EACA86}Нажмите ALT", 0xFFFFFFFF, -1217.4670, 2358.0420, 1500.9866, 12.0000);
	CreateDynamicPickup(1317, 23, -1217.4670, 2358.0420, 1499.1865, -1, -1);
	//ЖК дефолт
	CreateDynamic3DTextLabel(!"[ {ffffff}Семейный автопарк {D45B5B}]\n\n{cccccc}Нажмите ALT", 0xD45B5BFF, 1794.3065, 413.8255, 20.2294, 10.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(1239, 23, 1794.3065, 413.8255, 20.2294, -1, -1);
	CreateDynamic3DTextLabel(!"Вертолётная площадка\n\n{ffffff}Нажмите ALT", 0xFFFF00FF, 1809.5389, 409.6942, 20.2294, 15.0000,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(19132, 23, 1809.5389, 409.6942, 20.2294, -1, -1);
	CreateDynamic3DTextLabel(!"Спуск вниз\n\n{ffffff}Нажмите ALT", 0xFFFF00FF, 1807.5525, 426.1512, 96.4584, 15.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamicPickup(19132, 23, 1807.5525, 426.1512, 96.4584, -1, -1);
	CreateDynamic3DTextLabel(!"[ Шкаф ]\nЧтобы заглянуть\n{EACA86}Нажмите ALT", 0xFFFFFFFF, -1509.4346, 2706.2583, 1500.9808, 12.0000);
	CreateDynamicPickup(1317, 23, -1509.4346, 2706.2583, 1499.1808, -1, -1);
	CreateDynamic3DTextLabel(!"Семейные\n{FFFFFF}аптечки", 0x42B02CFF, -1505.0869, 2714.5742, 1500.9674, 3.0000);
	CreateDynamicPickup(1240, 23, -1505.0869, 2714.5742, 1500.9674, -1, -1);
	CreateDynamic3DTextLabel(!"Семейные\n{FFFFFF}бронежилеты", 0x42B02CFF, -1507.9193, 2708.9011, 1500.9808, 3.0000);
	CreateDynamicPickup(1242, 23, -1507.9193, 2708.9011, 1500.9808, -1, -1);
	CreateDynamic3DTextLabel(!"Влияние на организации\n{FFFFFF}Нажмите: ALT", 0x42B02CFF, -1500.0205, 2721.1257, 1500.9674, 3.0000);
	CreateDynamicPickup(1239, 23, -1500.0205, 2721.1257, 1500.9674, -1, -1);
	//
	famHouseBackPickUp[0] = CreateDynamicPickup(19132, 23, -1515.8021,2722.2305,1500.9674);
	famHouseBackPickUp[1] = CreateDynamicPickup(19132, 23, -1205.1844, 2382.4812, 1500.9667);
	CarSletInfo[0] = slet_car_models[random ( sizeof slet_car_models )];
	CarSletInfo[1] = 28800 + global_time;
	UpdateLabelMedic(0, 1), UpdateLabelMedic(1), UpdateLabelMedic(2);
	CreatePickup(19134, 23, 1615.1844,2347.3032,695.3304, 1);
	CreateDynamic3DTextLabel(!"Для регистрации на мероприятии\n{FFFFFF}Нажмите 'ALT'",0x009999FF,1615.1844,2347.3032,693.3304,5.0);
	ConceptLuxury = CreateDynamic3DTextLabel(!"",-1,1137.7974,-1489.6229,15.7969,9.0);
	CreateDynamicPickup(1239,1,1137.7974,-1489.6229,15.7969,-1);
	ConceptCount = randomEx(5,10);
	UpdateDynamic3DTextLabelTextf(ConceptLuxury, -1, "{FFFF00}[Ларцы Concept Car Luxury]{FFFFFF}\n\nВ наличии: %iшт.\nСледующий завоз в {FFFF00}PayDay\nЦена: 150 Euro\n\n{FFFFFF}Чтобы купить, нажмите ALT", ConceptCount);
	for(new i; i < sizeof(GangGun); i++) CreateDynamic3DTextLabel(!"{ffffff}Получить набор оружия\n{73B461}Нажмите ALT", 0xFFFFFFFF, GangGun[i][GangX], GangGun[i][GangY], GangGun[i][GangZ], 10.0000), CreatePickup(2061, 23, GangGun[i][GangX], GangGun[i][GangY], GangGun[i][GangZ], -1);
	LoadContainer();
	LoadPickupRepairVehicle();
	CreateDynamic3DTextLabel(!"Выход\n{FAAC58}[ {ffffff}ALT {FAAC58}]", 0xFFFFFFFF, -716.6998, -763.2640, 1701.0859, 3.0000);
	CreateDynamic3DTextLabel(!"Выход\n{FAAC58}[ {ffffff}ALT {FAAC58}]", 0xFFFFFFFF, 882.0399, 61.5092, 1601.1373, 3.0000);
	UpdateTextCorona(1);
	CreateDynamic3DTextLabel(!"Купить видеокарту\n\n{cccccc}Нажмите ALT", 0xFFFF00FF, 1384.2760, -21.8199, 1000.9229, 10.0);
	CreateDynamicPickup(1239, 23, 1384.2760, -21.8199, 1000.9229, -1);
	for(new i ; i < sizeof(BPosition); i++) CreateDynamic3DTextLabel(!"Шлагбаум.\nСтоимость проезда: {9ACD32}100$\n{FFFFFF}Открыть: {9ACD32}H",-1, BPosition[i][BPosX],BPosition[i][BPosY], BPosition[i][BPosZ], 5.0);
 	for(new i ; i < sizeof(CraftPosition); i++)
    {
        if(CraftPosition[i][craftHouse] != false) CreateDynamic3DTextLabel(!"Чтобы воспользоваться верстаком\n{FFFFFF}Нажмите ALT", COLOR_VALIK, CraftPosition[i][craftX], CraftPosition[i][craftY], CraftPosition[i][craftZ], 10.0);
        else CreateDynamic3DTextLabel(!"[ Верстак для крафта общего пользования ]\n\n{AFAFAF}Чтобы воспользоватся верстаком\nНажмите ALT", COLOR_VALIK, CraftPosition[i][craftX], CraftPosition[i][craftY], CraftPosition[i][craftZ], 10.0);
    }
	CreateDynamic3DTextLabel(!"Открыть услуги мастеркой\n\n[ALT]", 0xAFAFAFFF, 1541.3546, 1644.3098, 11.4203, 3.0);
	CreateDynamicPickup(1314, 23, 1541.3546, 1644.3098, 10.8203, -1);
    CreateDynamicPickup(1318, 23,649.3248,-1353.8834,13.5470,-1);
    CreateDynamicPickup(1318, 23,-575.709, 2594.2, 1705.09,-1);
	CreateDynamic3DTextLabel(!"Выход: ALT", -1, -575.709, 2594.2, 1705.09, 15.0);
	CreateDynamicMapIcon(649.3248,-1353.8834,13.5470, 12, 0, -1, -1, -1, 300.0);
	CreateDynamic3DTextLabel(!"Топ Благотворителей", -1, -2682.5276,796.4670,1501.0259, 5.0);
    CreateDynamic3DTextLabel(!"Центральный рынок Los Santos\n/trade - Продать/обменять.",-1,1129.0319, -1469.6064, 15.7481, 20.00000);
	for(new i; i < sizeof(parking); i++)
	{
	    CreateDynamic3DTextLabel(!"Подземный паркинг\nВойти: {F7E352}ALT{FFFFFF}\nЗаехать: {F7E352}H", -1, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.4, 20.0);
		CreateDynamicPickup(19134, 1, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z], -1);
		Create3DTextLabel(!"Ворота\nВыход: {F7AA5A}ALT{FFFFFF}\nВыезд: {F7AA5A}H{FFFFFF}\n\nЛичные авто, которые припаркованы\n\
								 с помощью /park в этом месте, автоматически\nуклоняются от налога на транспорт!\n\n\
								 Любые автомобили, которые находятся на этой парковке,\n\
								 не исчезают при серверном или администрационном респавне.", -1, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 2.0, 10.0, parking[i][pVWorld], 0);
		CreateDynamicPickup(19134, 1, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z], parking[i][pVWorld]);
		//Второй этаж паркинг
		Create3DTextLabel(!"Ворота\nВыход: {F7AA5A}ALT{FFFFFF}\nВыезд: {F7AA5A}H{FFFFFF}\n\nЛичные авто, которые припаркованы\n\
								 с помощью /park в этом месте, автоматически\nуклоняются от налога на транспорт!\n\n\
								 Любые автомобили, которые находятся на этой парковке,\n\
								 не исчезают при серверном или администрационном респавне.", -1, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 2.0, 10.0, parking[i][pVWorld], 0);
		CreateDynamicPickup(19134, 1, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z], parking[i][pVWorld]);
		Iter_Add(hint_forLauncher[0], CreateDynamicSphere(parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z], 2.0, 0, 0));
	}
	CreateDynamic3DTextLabel(!"Мастерская по установке номеров\nСтоимость установки номера: {26A6D0}5000$ .\nЕсли вы получили разрешение на установку, тогда:\n{26A6D0}Посигнальте для продолжения.", -1, 217.2211, -228.2586, 1.7786, 3.0);
	CreateDynamic3DTextLabel(!"Чтобы разгрузить ящики:\n{FFFFFF}Посигнальте", COLOR_GREEN, 1830.3701, 416.7932, 20.1436, 5.0);
	CreateDynamic3DTextLabel(!"Чтобы открыть {9ACD32}шлагбаум\n{FFFFFF}Посигнальте!",-1,1812.2621,-1886.2706,13.4141, 5.0);
	for(new i; i < sizeof(GaragesInteriors); i++) CreateDynamic3DTextLabel(!"Ворота\nВыезд: {FAAC58}H\n{FFFFFF}Выход: {FAAC58}ALT", -1, GaragesInteriors[i][e_GARAGE_INTERIOR_X], GaragesInteriors[i][e_GARAGE_INTERIOR_Y], GaragesInteriors[i][e_GARAGE_INTERIOR_Z]+2.0, 10.0);
	CreateDynamic3DTextLabel(!"Управление секонд-хендом\n{cccccc}(для владельцев)\n\n{ffffff}[ Нажмите ALT ]", 0x73B461FF, 1529.6951, 1576.1597, 10.9252, 3.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 30);
	CreateDynamicPickup(1239, 23, 1529.6951, 1576.1597, 10.9252, -1, 30);
	//
	CreatePickup(1239, 23, 2354.2043, 2829.5234, 1500.9688, -1);
	CreatePickup(1318, 23, 2352.2046, 2841.8054, 1501.2664, -1);
	CreatePickup(1318, 23, 2346.8262, 2859.3547, 1501.1156, -1);
	CreatePickup(1318, 23, 2352.3931, 2855.1487, 1501.0981, -1);
	CreateDynamic3DTextLabel(!"Покупка трейлера\n{ff9966}[ {ffffff}ALT {ff9966}]", 0xFFFFFFFF, 2354.2043, 2829.5234, 1500.9688, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel(!"Трейлер {ff9966}№1\n{ffffff}маленький {ff9966}| {ffffff}$1800000\n\n{ff9966}[ {ffffff}Войти - ALT {ff9966}]", 0xFFFFFFFF, 2352.2046, 2841.8054, 1501.2664, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel(!"Трейлер {ff9966}№2\n{ffffff}средний {ff9966}| {ffffff}$3500000\n\n{ff9966}[ {ffffff}Войти - ALT {ff9966}]", 0xFFFFFFFF, 2346.8262, 2859.3547, 1501.1154, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
    CreateDynamic3DTextLabel(!"Трейлер {ff9966}№3\n{ffffff}большой {ff9966}| {ffffff}$3900000\n\n{ff9966}[ {ffffff}Войти - ALT {ff9966}]", 0xFFFFFFFF, 2352.3931, 2855.1487, 1501.0981, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	//
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Эконом-класса\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, -501.5304, -560.6205, 25.5634, 10.0000);
	CreateDynamicPickup(1239, 23, -501.5304, -560.6205, 25.5634);
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Среднего класса\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, 954.0949, 2180.9241, 10.8489, 5.0000);
	CreateDynamicPickup(1239, 23, 954.0949, 2180.9241, 10.8489);
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Воздушного транспорта\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, 277.2100, 2529.1033, 16.8125, 5.0000);
	CreateDynamicPickup(1239, 23, 277.2100, 2529.1033, 16.8125);
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Водного транспорта\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, 215.3744, -1884.6544, 1.4205, 5.0000);
	CreateDynamicPickup(1239, 23, 215.3744, -1884.6544, 1.4205);
	CreateDynamicPickup(1239, 23, -2672.3774, -58.0518, 4.3399);
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Премиум-класса\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, -2672.3774, -58.0518, 4.3399, 5.0000);
	CreateDynamicPickup(1239, 23, -505.0940, 2597.6277, 53.5557);
	CreateDynamic3DTextLabel(!"Автосалон {FA5858}Luxe-класса\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, -505.0940, 2597.6277, 53.5557, 5.0);
    //
	CreateDynamic3DTextLabel(!"ДЕМОРГАН: - Тюрьма для читеров и нарушителей рп процесса.\nДля того чтобы с нее выйти , дождитесь окончания времени.\nПри следующих нарушениях, вас могут забанить.\n{E66E6E}В вашем паспорте, добавлено новое примечание.", COLOR_GREY, -803.2662, 2833.1062, 1501.9896, 25.0);
	//meria
	CreateDynamic3DTextLabel(!"Дополнительная информация\n{FFFFFF}ALT", 0xAFAFAFFF, 1505.8809, 1337.0260, 10.9788, 5.0000);
	CreateDynamicPickup(1239, 1, 1505.8809, 1337.0260, 10.9788);
	CreateDynamic3DTextLabel(!"Получение паспорта\n{FFFFFF}Нажмите ALT", 0x73B461FF, 1510.8745, 1360.7517, 10.9738, 5.0000);
	CreateDynamicPickup(1581, 23, 1510.8745, 1360.7517, 10.9738);
	CreateDynamic3DTextLabel(!"Создать семью\n\n[ALT]", 0xAFAFAFFF, 1507.9591, 1310.1906, 10.9788, 3.0000);
	CreateDynamicPickup(1314, 23, 1507.9591, 1310.1906, 10.9788);
	/*холп мэрии*/
	CreateDynamic3DTextLabel(!"Лифт {99CC00}Мэрии{FFFFFF}\nНажмите: {99CC00}ALT", 0xFFFFFFFF, 1527.5156, 1335.3966, 10.9787, 8.0000);
	CreateDynamicPickup(19902, 23, 1527.5156, 1335.3966, 10.9787);
	/*где спавн мэрии*/
	CreateDynamic3DTextLabel(!"Лифт {99CC00}Мэрии{FFFFFF}\nНажмите: {99CC00}ALT", 0xFFFFFFFF, 1489.7201, -1259.5638, 113.8044, 8.0000);
	CreateDynamicPickup(19902, 23, 1489.7201, -1259.5638, 113.8044);
	/*офис*/
	CreateDynamic3DTextLabel(!"Лифт {99CC00}Мэрии{FFFFFF}\nНажмите: {99CC00}ALT", 0xFFFFFFFF, 1999.9302, 1121.5923, 1038.6824, 8.0000);
	CreateDynamicPickup(19902, 23, 1999.9302, 1121.5923, 1038.6824);
	/*зал суда*/
	CreateDynamic3DTextLabel(!"Лифт {99CC00}Мэрии{FFFFFF}\nНажмите: {99CC00}ALT", 0xFFFFFFFF, 1500.2008, -1259.6384, 121.1435, 8.0000);
	CreateDynamicPickup(19902, 23, 1500.2008, -1259.6384, 121.1435);
	//
	CreateDynamic3DTextLabel(!"1 Этаж {99CC00}Больницы{FFFFFF}\nНажмите: {99CC00}ALT", COLOR_WHITE, 638.197021, -1239.710449, 1024.391846, 8.0);
    CreateDynamic3DTextLabel(!"Черный выход\n{FFFFFF}ALT", COLOR_WHITE, 644.591125, -1234.206421, 1024.391846, 5.0);
    //CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 657.975525, -1247.840454, 1024.391846, 5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 658.823914, -1262.348389, 1024.391846, 5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 675.5417,-1262.4751,1024.3898, 5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 595.748230, -1184.252930, 1001.384888, 3.0);
	CreateDynamic3DTextLabel(!"2 этаж {99CC00}Больницы{FFFFFF}\nНажмите: {99CC00}ALT", COLOR_WHITE, 1155.955688, -1296.993530, 1019.413879, 8.0);
	CreateDynamic3DTextLabel(!"Столовая {99CC00}Больницы{FFFFFF}\nНажмите: {99CC00}ALT", COLOR_WHITE, 1120.565186, -1311.100952, 1019.411926, 8.0);
	CreateDynamic3DTextLabel(!"{C5FF46}Лучшие сотрудники:{FFFFFF}\n- -\n -\n -\n -\n -\n -\n -\n -\n -\n -\n\n{C5FF46}Лучшие сотрудники сегодня:{FFFFFF}\n- -\n -\n -\n -\n -\n -\n -\n -\n -\n -\n", 0xFFFFFFFF, 1167.946777, -1301.989624, 1021.270508, 9.0);
	CreateDynamic3DTextLabel(!"Буфет", COLOR_WHITE, 1147.487793, -1544.051270, 1010.305725, 5.0);
	CreateDynamic3DTextLabel(!"Выход в {99CC00}Больницу{FFFFFF}\nНажмите: {99CC00}ALT", COLOR_WHITE, 1123.963501, -1533.590820, 1010.296326, 8.0);
    CreateDynamic3DTextLabel(!"{F78E4A}Армейская столовая\n{FFFFFF}ALT",COLOR_BLUENEW,1426.2836,2232.1748,1500.9758,5.0);
	CreateDynamic3DTextLabel(!"{F78E4A}Армейская столовая\n{FFFFFF}ALT",COLOR_BLUENEW,485.2076,864.1537,1500.9648,5.0);
	CreateDynamic3DTextLabel(!"{F78E4A}Армейская столовая\n{FFFFFF}ALT",COLOR_BLUENEW,-265.0327,791.4764,1500.9608,5.0);
    //CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 1490.3296,-1281.2520,113.8064, 5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 1996.4331,1138.1451,1038.6882, 5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H", COLOR_WHITE, 1996.3802,1109.2860,1038.6882, 5.0);
	CreatePickup(1581, 23, 1536.7749,1112.2823,1033.8420,-1);
	//demorgan
    demorgan = CreatePickup(19132, 1, -809.5127, 2799.1362, 1501.9896, -1);
    CreateDynamic3DTextLabel(!"{FFFFFF}Встаньте на пикап чтобы войти/выйти", COLOR_GREY, -809.5127, 2799.1362, 1501.9896, 3.0);
	CreatePickup(1559, 1,-2052.71, -106.53, 35.06, -1); //Автошкола
    CreateDynamic3DTextLabel(!"Улица\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.71, -106.53, 36.00,4.0);
    CreatePickup(1559, 1,-2052.90, -98.77, 34.90, -1); //Автошкола
    CreateDynamic3DTextLabel(!"Двор автошколы\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.90, -98.77, 36.00,4.0);

	CreatePickup(19132, 1, 286.17, -30.55, 1001.52, -1); //tir
	CreatePickup(19132, 1, 286.08, -29.09, 1001.52, -1); //tir
	CreatePickup(19422, 1, 286.1845, -24.4473, 1001.5156, -1); //tir
	CreateDynamic3DTextLabel(!"Наушники, необходимо надеть перед стрельбой!\n{4DB33D}Нажмите: {FFFFFF}ALT", COLOR_GREY, 286.1845, -24.4473, 1001.5156, 3.0);
	CreateDynamic3DTextLabel(!"Выход из Тира\n{D0C857}Нажмите: ALT", -1, 286.08, -29.09, 1001.52, 3.0);
	CreateDynamic3DTextLabel(!"ТИР\nСтоимость входа без пропуска в тир: {4DB33D}500${FFFFFF}\n[{D0C857}Оружие можно купить внутри!{FFFFFF}]\n{4DB33D}Нажмите: {FFFFFF}ALT", -1, 286.17, -30.55, 1001.52, 3.0);
	CreatePickup(1581, 1, -955.6700, -2353.1899, 1701.0869, -1);
	CreateDynamic3DTextLabel(!"Получение номеров\nНажмите: ALT.\nСтоимость: {DA5D40}от 10 000$.", -1, -955.6700, -2353.1899, 1701.0869, 3.0);
    CreatePickup(1248, 23, -569.7514,2567.4849,1702.5029,-1);
    CreateDynamic3DTextLabel(!"Управление мероприятием\n{FFFFFF}ALT",COLOR_GREEN,-569.7514,2567.4849,1702.5029,3.0);
	CreatePickup(1274, 23, -398.3770,2229.9397,1801.0859,-1);
	CreateDynamic3DTextLabel(!"Магазин аксессуаров\n{FFFFFF}ALT",COLOR_GREEN,-398.3770,2229.9397,1801.0859,3.0);
	CreateDynamic3DTextLabel(!"Автомат с бесплатной едой\n{FFFFFF}ALT",COLOR_GREEN,-1349.3528,493.8062,11.1953,3.0);
	CreatePickup(1279, 1,-1691.2605,867.8833,1005.0170,-1);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1764.0288,-1949.8785,14.1096,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1735.7333,-1949.3246,14.1172,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1706.7789,-1949.6328,14.1172,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.3655,1319.2699,11.4040,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.4666,1287.9838,11.4040,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.2236,1256.3748,11.4040,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1951.4111,107.9894,26.2813,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1950.6516,134.5126,26.2813,20.0);
    CreateDynamic3DTextLabel(!"Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1949.6737,165.9387,26.2813,20.0);

	CreateDynamic3DTextLabel(!"{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,1041.3918,-1028.2256,32.1016,8.0);
	CreateDynamic3DTextLabel(!"{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,2645.0007,-2037.3738,13.5540,8.0);
	CreateDynamic3DTextLabel(!"{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,-1935.7690,235.5206,34.3125,8.0);
	CreateDynamic3DTextLabel(!"{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,-2714.4827,217.3856,4.2921,8.0);

	CreateDynamic3DTextLabel(!"ДЕМОРГАН: - Тюрьма для читеров и нарушителей рп процесса.\nДля того чтобы с нее выйти , дождитесь окончания времени.\nПри следующих нарушениях, вас могут забанить.\n{E66E6E}В вашем паспорте, добавлено новое примечание.", COLOR_GREY, -803.2662, 2833.1062, 1501.9896, 25.0);
	CreateDynamic3DTextLabel(!"Triazov Family\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}КВЕСТЫ НА {FF0000}AZ Coins",0xFF0000FF,1773.6903,-1891.7493,13.5504,15.0);
	CreateDynamic3DTextLabel(!"Alexandr Triazov\n{FFFFFF}Чтобы поговорить нажми ALT", 0x6495ED, 1773.6545,-1897.6843,13.3857, 15.0000);
	CreateDynamic3DTextLabel(!"Alexandr Triazov\n{FFFFFF}Чтобы поговорить нажми ALT", 0x6495ED, 1161.8972,-1751.7185,13.5838, 15.0000);
	CreatePickup(2358,23,154.3891,1903.3417,18.7570, -1);
    CreatePickup(2358,23,141.1707,1875.4081,17.8434, -1);
    CreatePickup(2358,23,115.3891,1875.2244,17.8359, -1);
    CreatePickup(2358,23,117.9125,1871.2745,17.8359, -1);
    CreatePickup(2358,23,141.1704,1875.4607,17.8434, -1);
    CreatePickup(2358,23,137.3782,1879.5315,17.8359, -1);
    CreatePickup(2358,23,202.5459,1861.9189,13.1406, -1);
    CreatePickup(2358,23,193.3672,1931.5112,17.6406, -1);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,154.3891,1903.3417,18.7570,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,141.1707,1875.4081,17.8434,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,115.3891,1875.2244,17.8359,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,117.9125,1871.2745,17.8359,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,137.3782,1879.5315,17.8359,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,202.5459,1861.9189,13.1406,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,193.3672,1931.5112,17.6406,3.0);
    CreateDynamic3DTextLabel(!"Бесплатная лицензия",COLOR_GREY,-2034.2344,-114.1020,1035.1719,4.0);

 	CreatePickup(2358,23,2798.11, -2393.91, 13.96, -1);
    CreatePickup(2358,23,2743.82, -2453.84, 13.86, -1);
    CreatePickup(2358,23,2782.68, -2372.74, 13.63, -1);
    CreatePickup(2358,23,-1325.6866,476.3579,7.8498, -1);
    CreatePickup(2358,23,-1294.9114,491.5177,11.1953, -1);
    CreatePickup(2358,23,-1291.1442,501.8154,11.1953, -1);
    CreatePickup(2358,23,-1397.9807,502.8033,11.3047, -1);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,-1325.6866,476.3579,7.8498,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,-1294.9114,491.5177,11.1953,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,-1291.1442,501.8154,11.1953,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,-1397.9807,502.8033,11.3047,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,2798.11, -2393.91, 13.96,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,2743.82, -2453.84, 13.86,3.0);
    CreateDynamic3DTextLabel(!"Склад ингредиентов\n[ALT]",COLOR_GREY,2782.68, -2372.74, 13.63,3.0);

	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-166.9772,1347.3783,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.6039,1323.4382,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.6047,1327.2102,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-210.7849,1329.7562,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-212.6879,1334.1384,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.9196,1334.1351,1500.9888,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-187.4157,1305.7438,1507.6416,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-194.7263,1305.7531,1507.6416,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-180.6385,1299.5883,1507.6770,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-183.1053,1299.8328,1507.6770,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-186.0829,1297.2595,1507.6692,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-190.7337,1296.8057,1507.6692,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-193.2607,1298.5358,1507.6692,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-194.5027,1296.8018,1507.6692,2.0);
	CreateDynamic3DTextLabel(!"Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-197.0397,1298.5365,1507.6692,2.0);
	CreateDynamic3DTextLabel(!"INFO",-1,-38.9923,173.5192,2.4297,7.0);
	CreateDynamic3DTextLabel(!"INFO",-1,-83.2843,-302.1633,2.7646,7.0);
	CreateDynamic3DTextLabel(!"INFO",-1,1969.3076,-1981.4128,13.5469,7.0);
	CreateDynamic3DTextLabel(!"INFO",-1,1460.8505,-1743.3596,13.5469,7.0);
	for(new i; i < sizeof(bandos); i++) CreateDynamic3DTextLabel(!"Однорукий бандит\n{FFFFFF}Чтобы начать игру,\nиспользуйте: ALT",COLOR_ORANGE,bandos[i][0],bandos[i][1],bandos[i][2],1.0);
    CreatePickup(1239, 23,1288.3657,-1267.7411,20.6199, -1);
    CreatePickup(1239, 1,-2657.75, 808.67, 1500.97, -1);
    CreateDynamic3DTextLabel(!"Должники",-1,-2657.75, 808.67, 1500.97,7.0);

	CreateDynamic3DTextLabel(!"Начать сдачу на права\n{F9AD43}ALT",-1,-2575.90, -1364.63, 1500.76,4.0);
	CreateDynamic3DTextLabel(!"Начать сдачу на права\n{F9AD43}ALT",-1,-2573.83, -1361.87, 1500.76,4.0);
	CreateDynamic3DTextLabel(!"Начать сдачу на права\n{F9AD43}ALT",-1,-2575.87, -1358.94, 1500.76,4.0);
	CreateDynamic3DTextLabel(!"Начать сдачу на права\n{F9AD43}ALT",-1,-2579.94, -1358.94, 1500.76,4.0);

    CreateDynamic3DTextLabel(!"Благотворительный фонд\n[ALT]",COLOR_GOLD,1288.3657,-1267.7411,20.6199,4.0);
	CreateDynamic3DTextLabel(!"Пройти собеседование\n[ALT]",COLOR_GOLD,-2033.4341,-117.5292,1035.1719,4.0);
	CreateDynamic3DTextLabel(!"Сломанный телевизор.\nЕсли бы он работал вы могли б прочитать основную теорию для пилота.",COLOR_GREY,-2026.7957,-114.3428,1035.1719,4.0);
	CreatePickup(1314, 23,-2033.4341,-117.5292,1035.1719, -1);
 	CreateDynamic3DTextLabel(!"{FF0000}Сломанная дверь",COLOR_BLUENEW,610.8489,-1220.5266,1001.3849,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,2719.6982,-2405.0554,13.4609,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,2719.8486,-2504.0205,13.4937,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,286.3304,1821.4232,17.6406,10.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,135.0717,1941.9005,19.3203,10.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,-1631.3796,687.7377,7.1875,15.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,454.9670,872.7173,1500.9648,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,465.7021,871.5269,1500.9648,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,465.6787,857.2242,1500.9648,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,474.4485,859.8665,1500.9648,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2582.5913,-1384.5138,1500.7570,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1786.3673,-1998.2512,1500.7853,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1772.5034,-1995.5537,1500.7853,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1758.3375,-1998.2037,1500.7853,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2067.2576,2693.9587,1501.0243,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2062.6360,2693.8945,1500.9766,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2067.2607,2705.4763,1500.9766,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2062.6340,2705.4880,1500.9766,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2690.0815,807.0168,1500.9688,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2325.9783,78.6801,1501.9962,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2325.9753,81.0722,1501.9962,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2364.5027,96.0364,1502.0103,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1588.5164,-1637.7506,13.4311,5.0);
	//CreateDynamic3DTextLabel(!"{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2330.9561,67.0544,1501.9962,5.0);
	//CreateDynamic3DTextLabel(!"Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1354.1853, -0.5061, 1601.0859, 5.0);
	//CreateDynamic3DTextLabel(!"Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1354.1929, 24.6202, 1601.0859, 5.0);
	//CreateDynamic3DTextLabel(!"Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1320.5623, 22.9350, 1601.0859, 5.0);
	//CreateDynamic3DTextLabel(!"Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1320.5485, 1.3281, 1601.0859, 5.0);
	CreateDynamicPickup(1314, 23, -741.5166,2360.1128,1404.5170);
	CreateDynamic3DTextLabel(!"Press Alt",COLOR_BLUENEW,-741.5166,2360.1128,1404.5170,2.0);

    CreatePickup(1240,1,2363.9543,-1958.5900,1601.0859,-1);
    CreateDynamic3DTextLabel(!"Церковь\nДля того чтобы пожениться вам нужен сотрудник мэрии\nНеобходимо приобрести кольца /gps - Важные места - Покупка колец\nДля развода введите [/unwedding (4 000$!)]",COLOR_GOLD,2363.9543,-1958.5900,1601.0859,10.0);
    CreatePickup(1274,23,1979.9426,-1971.1410,13.5825, -1);

    CreatePickup(1275,23,195.1261,-228.0334,1.7749, -1);
    CreateDynamic3DTextLabel(!"Раздевалка\nALT",COLOR_BLUENEW,195.1261,-228.0334,1.7749,8.0);
    CreatePickup(1275,23,2126.2717,896.7686,10.9149, -1);
    CreateDynamic3DTextLabel(!"Раздевалка\nALT",COLOR_BLUENEW,2126.2717,896.7686,10.9149,8.0);
	CreatePickup(1275,23,2271.7771,1438.6256,1008.8250,-1);
    CreateDynamic3DTextLabel(!"Раздевалка\n{FFFFFF}ALT",COLOR_ORANGE,2271.7771,1438.6256,1008.8250,8.0);

    CreatePickup(1550,23,2271.7996,1440.5249,1008.8320,-1);
    CreateDynamic3DTextLabel(!"Зарплата\n{FFFFFF}ALT",COLOR_ORANGE,2271.7996,1440.5249,1008.8320,8.0);

    CreateDynamic3DTextLabel(!"Выбор работы",COLOR_BLUENEW,208.4846,-225.6056,1.7749,8.0);
    CreatePickup(1239,23,208.4846,-225.6056,1.7749,-1);

    CreateDynamic3DTextLabel(!"Выбор работы",COLOR_BLUENEW,2111.5618,894.6057,10.9149,8.0);
    CreatePickup(1239,23,2111.5618,894.6057,10.9149,-1);

	CreatePickup(1275,23,770.8220,-77.3209,1000.6563,-1);
	CreatePickup(1275,23,681.4680,-1652.4188,871.2896,-1);
	CreateDynamic3DTextLabel(!"Раздевалка\nALT",COLOR_BLUENEW,770.8220,-77.3209,1000.6563,8.0);
	CreateDynamic3DTextLabel(!"Раздевалка\nALT",COLOR_BLUENEW,681.4680,-1652.4188,871.2896,8.0);

	CreateDynamic3DTextLabel(!"Нажмите N",COLOR_BLUENEW,2042.6489,-1958.4153,14.3989,2.0);
	CreateDynamic3DTextLabel(!"Нажмите N",COLOR_BLUENEW,2033.5723,-1958.2524,14.3989,2.0);

	CreatePickup(1239,23,-2576.86, -1356.78, 1500.76,-1);
    CreateDynamic3DTextLabel(!"ПДД\n{73B461}Нажмите ALT чтобы прочитать.",-1,-2576.86, -1356.78, 1500.76,5.0);

	RingCP = CreateDynamicCP(2520.0012,918.5114,11.0234, 1.0, -1, -1, -1,  5.0);
	CreateDynamic3DTextLabel(!"Покупка обручальных\nКолец",COLOR_GOLD,2520.0012,918.5114,11.0234,5.0);

	HealSG[0] = CreatePickup(1241, 23, -1773.9685, -2012.7522, 1500.7853, -1);
	CreateDynamic3DTextLabel(!"Подать объявление\n{73B461}Используйте: /ad", -1, -190.1970,1338.4086,1500.9823, 3.0);
	CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", -1, -1773.9685,-2012.7522,1501.3956, 3.0);
	HealSG[1] = CreatePickup(1318, 23, -1768.1641, -1992.0632, 1500.7856, -1);
	HealSG[2] = CreatePickup(1318, 23, 1147.9972,-1343.0070,13.6483, -1);
	HealSG[3] = CreatePickup(1241, 23, 1169.6074,-1333.3698,-0.8618, -1);
	HealSG[4] = CreatePickup(1239, 23, 1490.3748,1305.7142,1093.2964, 2);
	HealSG[5] = CreatePickup(1274, 23,1492.7451,1308.4236,1093.2927, 1);
	HealSG[6] = CreatePickup(1318, 23,-618.6426,-679.4822,1001.0859, -1);
	HealSG[7] = CreatePickup(1318, 23,279.5766,-1619.0736,114.6778, -1);
	HealSG[8] = CreatePickup(1274, 23,-190.1970,1338.4086,1500.9823, -1);
	HealSG[9] = CreatePickup(1318, 23,2847.9468,-2519.4592,11.9786, -1);
	HealSG[10] = CreatePickup(1318, 23,2842.3452,-2523.9382,17.7489, -1);
	HealSG[11] = CreatePickup(1241, 23,462.35, 874.83, 1500.96, -1);
	HealSG[12] = CreatePickup(1318,23,1583.3033,-1637.5920,13.3905,-1);
	HealSG[13] = CreatePickup(1318,23,1583.3656,-1638.4817,13.3333,-1);
	HealSG[14] = CreatePickup(1318,23,216.7613,-247.8414,1.9079,-1);
	HealSG[15] = CreatePickup(1318,23,1289.0641,-1271.5160,13.5400,-1);
	HealSG[16] = CreatePickup(1318,23,1285.9365,-1270.2250,13.5939,-1);
	HealSG[17] = CreatePickup(1318,23,1287.2783,-1261.7417,20.6199,-1);
	HealSG[18] = CreatePickup(1239,23,-38.9923,173.5192,2.4297,-1);
	HealSG[19] = CreatePickup(1239,23,-83.2843,-302.1633,2.7646,-1);
	HealSG[20] = CreatePickup(1239,23,1969.3076,-1981.4128,13.5469,-1);
	HealSG[21] = CreatePickup(1239,23,1460.8505,-1743.3596,13.5469,-1);
	HealSG[22] = CreatePickup(1318,23,1165.4773,1346.2273,10.9219,-1);
	HealSG[23] = CreatePickup(1318,23,1165.4714,1344.7832,10.8125,-1);
	HealSG[24] = CreatePickup(1241, 23, 550.3827,1472.2921,1900.7980, -1);
	HealSG[25] = CreatePickup(1318,23,592.9380,1428.2743,1900.7980,-1);
	HealSG[26] = CreatePickup(1318,23,592.8829,1426.6675,1900.7980,-1);
	HealSG[27] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 11);
	HealSG[28] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 12);
	HealSG[29] = CreatePickup(1318,23,483.0550,246.8815,3197.7139,-1);
	HealSG[30] = CreatePickup(1318,23,474.5011,216.2406,3194.6360,-1);
	HealSG[31] = CreatePickup(1318,23,481.3205,216.2760,3194.6360,-1);
	HealSG[32] = CreatePickup(1318,23,461.6805,223.6825,3197.7139,-1);
	HealSG[33] = CreatePickup(1318,23,1593.2783,1724.0553,10.8203,-1);
	HealSG[34] = CreatePickup(2228,23,-77.9217,90.3327,3.1172,-1);
	CreateDynamic3DTextLabel(!"Трудоустройство\nна работу\n{FF6347}Фермера!", -1, -77.9217,90.3327,3.1172+0.5, 3.0);
	HealSG[35] = CreatePickup(1274,23,-80.5815,82.6753,3.1096,-1);
	HealSG[36] = CreatePickup(954,23,-2034.3145,-114.1021,1035.1719,-1);
	HealSG[37] = CreatePickup(1318, 23 , 1547.6816,-1623.1069,13.3725,-1);
	HealSG[38] = CreatePickup(1318, 23 , 1547.7014,-1622.3954,13.5366,-1);
	HealSG[39] = CreatePickup(1318, 23 , 618.9825,-568.0446,26.1432,-1);
	HealSG[40] = CreatePickup(1239, 23 , 2365.59, 72.03, 1502.01,11);
	HealSG[41] = CreatePickup(1239, 1,-2066.45044, 2663.85303, 1498.62634,-1);
	//painball HealSG[42] = CreatePickup(1318, 1, 1310.0968,-1367.2446,13.5254,-1);
	HealSG[43] = CreatePickup(1239, 1, 1313.7603,-1383.4368,13.7675,-1);
	HealSG[44] = CreatePickup(1318, 1, -2514.1074,-634.8470,1327.9960,-1);
	HealSG[45] = CreatePickup(1318, 1, -2467.6902,529.4441,51.0896,-1);
	HealSG[46] = CreatePickup(1318, 23, -2594.7959,642.3338,14.4531, -1);
	HealSG[47] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 13);
	HealSG[48] = CreatePickup(1241, 23, -1609.7928,-110.7104,1501.0859, -1);
	HealSG[49] = CreatePickup(1247, 1, 2361.3875,91.0118,1502.0103, -1);
	HealSG[50] = CreatePickup(1239, 23,-954.5001,-2350.5596,1701.0869, -1);
	HealSG[51] = CreatePickup(1239, 23,2327.74, 70.09, 1502.00, -1);
	HealSG[52] = CreatePickup(1239, 23,-2502.4258,-650.1299,1331.6520, -1);
	HealSG[53] = CreatePickup(1239, 23,583.2088,1433.3907,1904.2689, -1);
	HealSG[54] = CreatePickup(1239, 23,485.16, 849.70, 1500.96, -1);
	HealSG[55] = CreatePickup(1239, 23,-1587.6157,-121.8007,1501.0859, -1);
	HealSG[56] = CreatePickup(1239, 23,363.6908,153.9987,1025.7964, -1);
	HealSG[57] = CreatePickup(1239, 23,354.0459,170.0928,1025.7964, -1);
	HealSG[58] = CreatePickup(1318, 23,2761.0051, -2565.0754, 13.6281, -1);
	HealSG[59] = CreatePickup(1318, 23,2760.6651, -2566.2554, 13.6281, -1);
	HealSG[60] = CreatePickup(1318, 23,2755.5088, -2515.5393, 13.6281, -1);
	HealSG[61] = CreatePickup(1318, 23,2726.0520, -2521.9421, 29.8281, -1);
	HealSG[62] = CreatePickup(1239, 1, 1773.2142, -1888.9938, 13.5513, -1);
	CreateDynamic3DTextLabel(!"Тест-Драйв и прокат одежды\n\n{ffffff}[ Нажмите ALT ]", 0x73B461FF, -1658.7089, 1210.1034, 7.2500, 10.0000);
	CreateDynamicPickup(1239, 23, -1658.7089, 1210.1034, 7.2500);
	CreateDynamic3DTextLabel(!"Курс обучения\n{FFFFFF}ALT",COLOR_GREEN,1773.2142, -1888.9938, 13.5513,3.0);
	CreateDynamic3DTextLabel(!"Курс обучения\n{FFFFFF}ALT",COLOR_GREEN,1144.9585, -1751.9170, 13.5861, 3.0);
	HealSG[63] = CreatePickup(1241, 23, -1324.4010, 9.3590, 1601.0859, -1);
	CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT!", -1, -1324.4010, 9.3590, 1601.0859 + 0.7, 3.0);
	HealSG[64] = CreatePickup(19133, 23, -1769.3776, -2019.0920, 1500.7853, -1);
	CreateDynamic3DTextLabel(!"Подняться на 2 этаж\n{73B461}Используйте: {FFFFFF}ALT", -1, -1769.3776, -2019.0920, 1500.7853 + 1.0, 3.0);
	HealSG[65] = CreatePickup(19133, 23, -1312.6182, 20.8936, 1597.6073, -1);
	CreateDynamic3DTextLabel(!"Спуститься на 1 этаж\n{73B461}Используйте: {FFFFFF}ALT", -1, -1312.6182, 20.8936, 1597.6073 + 1.0, 3.0);
	CreateDynamic3DTextLabel(!"Лестница на {99CC00}1 {FFFFFF}этаж.", -1, -1317.3761, 12.1050, 1601.0859 + 2.2, 3.0);
	HealSG[66] = CreatePickup(1239, 23, -2083.3413, 2675.4199, 1500.9647, -1);
	HealSG[67] = CreatePickup(1239, 1, -1771.6855, -2012.7522, 1500.7853, -1);
	HealSG[68] = CreatePickup(1310, 1, 1451.6128, -2285.0105, 13.5469, -1);
	CreateDynamic3DTextLabel(!"Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, 1451.6128, -2285.0105, 13.5469, 5.0);
	HealSG[69] = CreatePickup(1310, 1, 1673.0103, 1447.5935, 10.7867, -1);
	CreateDynamic3DTextLabel(!"Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, 1673.0103, 1447.5935, 10.7867, 5.0);
	HealSG[70] = CreatePickup(1310, 1, -1409.4084, -298.2005, 14.1484, -1);
	CreateDynamic3DTextLabel(!"Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, -1409.4084, -298.2005, 14.1484, 5.0);
	HealSG[71] = CreatePickup(1254, 1, 3.0257, 32.9454, 1199.5938, -1);
	HealSG[72] = CreatePickup(1318, 1, 2154.7354, 1493.4109, 10.8203, -1);
	CreateDynamic3DTextLabel((str_f("Студия: '%s SHOW'\n{FFFFFF}ALT", ServerCFG[server_name])), COLOR_GREY, 2154.7354, 1493.4109, 10.8203, 5.0);
	HealSG[73] = CreatePickup(1318, 1, 2351.2886, 720.3787, 1500.9688, -1);
	HealSG[74] = CreatePickup(1242, 1, 295.20001220703, -38.299999237061, 1001.5, -1);
	CreateDynamic3DTextLabel(!"Амуниция\nИспользуйте: ALT", -1, 295.20001220703, -38.299999237061, 1001.5, 10.0);
	HealSG[75] = CreatePickup(19133, 1, -1415.0663, 2081.2036, 1502.0225, -1);
	HealSG[76] = CreatePickup(19133, 1, -1426.0897, 2091.5784, 1508.2068, -1);
	HealSG[77] = CreatePickup(1272, 1, 544.7178, -587.9365, 23.0899, -1);
	HealSG[78] = CreatePickup(1318, 1, -2661.8655,785.9218,1500.9688, -1);
	HealSG[79] = CreatePickup(1318, 1, 1518.4906,-1777.8580,33.4269, -1);
	HealSG[80] = CreatePickup(19132, 1, -212.8785,1310.3716,1507.6592,-1);
	HealSG[81] = CreatePickup(19132, 1, -203.7812,1314.2445,1500.9788,-1);
	HealSG[82] = CreatePickup(1247, 1, -955.6700,-2358.0708,1701.0859, -1);
	HealSG[83] = CreatePickup(1239, 1, 1144.9585, -1751.9170, 13.5861, -1);
	HealSG[84] = CreatePickup(325, 1, 2350.7820,-1961.5228,1601.0859, 0);
	CreateDynamic3DTextLabel(!"Покупка {99CC00}цветов\n{FFFFFF}Стоимость: {99CC00}1200$", -1, 2350.7820,-1961.5228,1601.0859, 10.0);
	HealSG[85] = CreatePickup(1239, 1, -2682.5276,796.4670,1501.0259, -1);
	//Пикапы без GameTextForPlayer
	CreatePickup(1239, 1, 2000.3831,1139.0485,1038.6882, -1);
	HealSG[86] = CreatePickup(1314, 1, -2063.5317, 2670.6311, 1500.9805, -1);
	HealSG[87] = CreatePickup(1274, 1, 665.9590, -567.7969, 1700.7394,-1);
	CreateDynamic3DTextLabel(!"Касса\n{FFFFFF}ALT", COLOR_VALIK, 665.9590, -567.7969, 1700.7394, 10.0);
	HealSG[89] = CreatePickup(1239, 1, -2053.2688,2697.6201,1500.9766, -1);
	CreateDynamic3DTextLabel(!"Управление экономикой.\n{FFFFFF}ALT", COLOR_GREEN, -2053.2688,2697.6201,1500.9766, 5.0);
	HealSG[90] = CreatePickup(1318, 1, -2064.8579,2709.9797,1500.9766, -1);
	CreateDynamic3DTextLabel(!"Черный выход\n{FFFFFF}ALT", COLOR_GREY, -2064.8579,2709.9797,1500.9766+1.0, 5.0);
	HealSG[91] = CreatePickup(1318, 1, 1473.2888,-1262.4442,14.5625, -1);
	HealSG[92] = CreatePickup(19132, 1, -1662.1874, -246.4930, 14.1484, -1);
	HealSG[93] = CreatePickup(1239, 23, 1755.1312, -315.8170, 1654.5055, -1);
	CreateDynamic3DTextLabel(!"Черный вход\n{FFFFFF}ALT", COLOR_GREY, 1473.2888,-1262.4442,14.5625+1.0, 5.0);
	amybank = CreatePickup(1239, 2, -2687.7393,818.1758,1500.9707, -1);
    CreatePickup(1239, 1, 1113.5651, -1412.7012, 13.5743, -1);
    CreateDynamic3DTextLabel(!"Трудоустройство\n{FFFFFF}Нажмите: ALT",COLOR_VALIK, 2092.2739,797.1262,1027.1211,5.0);
	CreatePickup(1581, 1,2092.2739,797.1262,1027.1211,-1);
	CreateDynamic3DTextLabel(!"Благотворительный фонд\n[ALT]",COLOR_GOLD,2095.9922,797.1262,1027.1211,4.0);
    CreatePickup(1581, 1, 2092.2739, 797.1262, 1027.1211, -1);
    CreatePickup(1239, 1, 1531.2133, 1112.2594, 1033.8420, -1);
    CreatePickup(1239, 1, 1152.1914, -1305.5859, 1019.3907, -1);
    CreatePickup(1241, 23, 1152.2040, -1303.6135, 1019.3907, -1);
	CreatePickup(1559, 1,-2052.71, -106.53, 35.06, -1); //Автошкола
    CreateDynamic3DTextLabel(!"Улица\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.71, -106.53, 36.00,4.0);
    CreatePickup(1559, 1,-2052.90, -98.77, 34.90, -1); //Автошкола
    CreateDynamic3DTextLabel(!"Двор автошколы\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.90, -98.77, 36.00,4.0);
	CreateDynamic3DTextLabel(!"Отдел коммерции\n{FFFFFF}ALT",COLOR_GREEN,363.6908,153.9987,1025.7964,3.0);
	CreateDynamic3DTextLabel(!"Отдел недвижимости\n{FFFFFF}ALT",COLOR_GREEN,354.0459,170.0928,1025.7964,3.0);
    CreatePickup(1248, 23, -569.7514,2567.4849,1702.5029,-1);
    CreateDynamic3DTextLabel(!"Управление мероприятием\n{FFFFFF}ALT",COLOR_GREEN,-569.7514,2567.4849,1702.5029,3.0);
	CreatePickup(1274, 23, -398.3770,2229.9397,1801.0859,-1);
	CreateDynamic3DTextLabel(!"Магазин аксессуаров\n{FFFFFF}ALT",COLOR_GREEN,-398.3770,2229.9397,1801.0859,3.0);
	CreateDynamic3DTextLabel(!"Автомат с бесплатной едой\n{FFFFFF}ALT",COLOR_GREEN,-1349.3528,493.8062,11.1953,3.0);
	CreatePickup(1239, 1, 2000.3831,1139.0485,1038.6882, -1);
	CreateDynamic3DTextLabel(!"Управление экономикой.\n{FFFFFF}ALT", COLOR_GREEN, 2000.3831,1139.0485,1038.6882+0.5, 5.0);
	CreatePickup(1318, 1, 1489.7211,-1263.4495,113.8064, -1);
	CreateDynamic3DTextLabel(!"Черный выход\n{FFFFFF}ALT", COLOR_GREY, 1489.7211,-1263.4495,113.8064+1.0, 5.0);
	CreatePickup(1318, 1, 1473.2888,-1262.4442,14.5625, -1);
	CreateDynamic3DTextLabel(!"Черный вход\n{FFFFFF}ALT", COLOR_GREY, 1473.2888,-1262.4442,14.5625+1.0, 5.0);
	CreatePickup(19132, 1, 1120.565186, -1311.100952, 1019.411926, -1);
	CreatePickup(1239, 1, 2000.3831,1139.0485,1038.6882, -1);
	CreateDynamic3DTextLabel(!"Управление экономикой.\n{FFFFFF}ALT", COLOR_GREEN, 2000.3831,1139.0485,1038.6882+0.5, 5.0);
	CreatePickup(1318, 1, 1489.7211,-1263.4495,113.8064, -1);
	CreateDynamic3DTextLabel(!"Черный выход\n{FFFFFF}ALT", COLOR_GREY, 1489.7211,-1263.4495,113.8064+1.0, 5.0);
	CreatePickup(1318, 1, 1473.2888,-1262.4442,14.5625, -1);
	CreateDynamic3DTextLabel(!"Черный вход\n{FFFFFF}ALT", COLOR_GREY, 1473.2888,-1262.4442,14.5625+1.0, 5.0);
	CreatePickup(19132, 1, 1120.565186, -1311.100952, 1019.411926, -1);
	CreatePickup(19132, 1, 1123.963501, -1533.590820, 1010.296326, -1);
	CreatePickup(19902, 1, 1155.955688, -1296.993530, 1019.413879, -1);
	CreatePickup(19902, 1, 638.197021, -1239.710449, 1024.391846, -1);
	CreatePickup(1582, 1, 1147.487793, -1544.051270, 1010.305725, -1);
	CreatePickup(1212, 23, 2107.1001, 789.8349, 1027.1191, -1);
	//CreatePickup(1241, 23, 1414.7208,2211.1709,1500.9758, -1);
	//CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", COLOR_WHITE, 1414.7208,2211.1709,1500.9758+0.6, 3.0);
	//CreatePickup(1241, 23, -257.9237,781.0598,1500.9608, -1);
	//CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", COLOR_WHITE, -257.9237,781.0598,1500.9608+0.6, 3.0);
	CreatePickup(1239, 2, -2687.7393,818.1758,1500.9707, -1);
    CreateDynamic3DTextLabel(!"Центральный рынок\n{9CCF00}Парковать {FFFFFF}авто на улице, запрещено!\nВо избежания нежелательных штрафов, используйте\nПодземный паркинг!", -1, 1113.5651, -1412.7012, 13.5743 + 1.2, 10.0);
    CreatePickup(1239, 1, 1113.5651, -1412.7012, 13.5743, -1);
	CreatePickup(19132, 1, 1123.963501, -1533.590820, 1010.296326, -1);
	CreatePickup(19902, 1, 1155.955688, -1296.993530, 1019.413879, -1);
	CreatePickup(19902, 1, 638.197021, -1239.710449, 1024.391846, -1);
	CreatePickup(1582, 1, 1147.487793, -1544.051270, 1010.305725, -1);
	CreatePickup(1212, 23, 2107.1001, 789.8349, 1027.1191, -1);
	//CreatePickup(1241, 23, 1414.7208,2211.1709,1500.9758, -1);
	//CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", COLOR_WHITE, 1414.7208,2211.1709,1500.9758+0.6, 3.0);
	CreatePickup(1239, 2, -2687.7393,818.1758,1500.9707, -1);
    CreateDynamic3DTextLabel(!"Центральный рынок\n{9CCF00}Парковать {FFFFFF}авто на улице, запрещено!\nВо избежания нежелательных штрафов, используйте\nПодземный паркинг!", -1, 1113.5651, -1412.7012, 13.5743 + 1.2, 10.0);
    CreatePickup(1239, 1, 1113.5651, -1412.7012, 13.5743, -1);

	Bar_CP[0] = CreatePickup(1274,23,497.4280,-75.7883,998.7578,-1);
	CreateDynamic3DTextLabel(!"Бар",-1,497.4280,-75.7883,998.7578,20.0);
	Bar_CP[1] = CreatePickup(1274,23,499.7772,-20.6834,1000.6797,-1);
	CreateDynamic3DTextLabel(!"Бар",-1,499.7772,-20.6834,1000.6797,20.0);
	Bar_CP[2] = CreatePickup(1274,23,-2653.8188,1407.3539,906.2734,-1);
	CreateDynamic3DTextLabel(!"Бар",-1,-2653.8188,1407.3539,906.2734,20.0);
	Bar_CP[3] = CreatePickup(1274,23,784.6830, 2514.6926, 1501.9751,-1);
	CreateDynamic3DTextLabel(!" Бар",-1,784.6830, 2514.6926, 1501.9751,7.0);
	Bar_CP[5] = CreatePickup(1274,23,461.3756,209.5736,3194.6460,-1);
	CreateDynamic3DTextLabel(!" Бар",-1,461.3756,209.5736,3194.6460,7.0);
	Bar_CP[6] = CreatePickup(1274,23,2270.3950,1444.5238,1008.8250,-1);
	CreateDynamic3DTextLabel(!" Бар",-1,2270.3950,1444.5238,1008.8250,7.0);

	Bar_CP[7] = CreatePickup(1274,23,2247.5466, 1466.9351, 1008.7613,-1);
	CreateDynamic3DTextLabel(!" Бар",-1,2247.5466, 1466.9351, 1008.7613,7.0);

	CreateDynamic3DTextLabel(!"{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,506.2321,-69.8461,999.6721,6.0);
	CreateDynamic3DTextLabel(!"{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,-2654.4612,1427.0135,907.3604,6.0);
	CreateDynamic3DTextLabel(!"{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,496.5649,-16.8896,1001.1519,6.0);

	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2683.9232, 807.4161, 1500.9094,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2676.5600, 807.4161, 1500.9094,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2669.0400, 807.4161, 1500.9094,5);
    CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2666.4729, 805.8691, 1500.9094,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2666.4665, 799.2879, 1500.9094,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,951.8005,2458.6746,1601.9771,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,954.9710,2463.5288,1601.9771,5);
	CreateDynamic3DTextLabel(!"{73B461}Касса\n{FFFFFF}N",COLOR_GREY,946.6893,2456.3723,1601.9771,5);
	Binko_CP = CreateDynamicCP(199.1063, -128.3574, 1003.5152, 1.0, -1, -1, -1, 10.0);

	HealExitPickup = CreatePickup(19132, 1, 1172.4426, -1306.3744, 1019.4160, -1);
	EnterBankPickup = CreatePickup(1318,23,1481.055,-1772.040,18.796,-1);
	CreateDynamic3DTextLabel(!"Банк Los Santos {33AA33}[Открыт]\n{FFFFFF}Встаньте на пикап чтобы войти в банк",-1,1481.055,-1772.040,18.796, 5.0);
	ExitBankPickup = CreatePickup(1318, 1, -2693.5984, 796.5676, 1500.9659,-1);

	CreateDynamic3DTextLabel(!"Встаньте на пикап чтобы выйти из банка", -1, -2168.3958,-928.2313,1701.0859, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1);

	CreateDynamic3DTextLabel(!" Пункт выдачи пиццы ",0xD05050FF,670.8947,-1575.9595,14.2514,4.0);
	CreateDynamic3DTextLabel(!" Пункт выдачи пиццы ",0xD05050FF,1752.4005,2214.5081,10.8203,4.0);

	CreateDynamic3DTextLabel(!"Информация для {99CC00}посетителей {FFFFFF}больницы.\nНажмите: ALT", COLOR_WHITE, 1152.191406, -1305.585938, 1019.990723, 3.0);
	CreatePickup(1310, 1, 1451.6128, -2285.0105, 13.5469, -1);
	CreateDynamic3DTextLabel(!"Услуги по {99CC00}лечению{FFFFFF}\nНажмите: ALT!", 0xFFFFFFFF, 1152.2040, -1303.6135, 1019.4307, 4.0000);
	CreateDynamicPickup(1241, 23, 1152.2040, -1303.6135, 1019.4307);
	//CreateDynamic3DTextLabel(!"Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", COLOR_WHITE, 1152.203979, -1303.613525, 1019.990723, 3.0);
	CreatePickup(1318, 23, -1768.1641, -1992.0632, 1500.7856, -1);

	CreateDynamic3DTextLabel(!" Трудоустройство \n Работа: Развозчик Пиццы\n[ALT] ",-1,1746.6765,2246.2012,10.8203,4.0);
	CreateDynamic3DTextLabel(!" Трудоустройство \n Работа: Развозчик Пиццы\n[ALT] ",-1,665.9875,-1576.6426,14.4777,4.0);

	CreateDynamic3DTextLabel(!" Раздевалка \n Работа: Развозчик Пиццы\n[ALT] ",-1,1749.0339,2246.2012,10.8203,4.0);
	CreateDynamic3DTextLabel(!" Раздевалка \n Работа: Развозчик Пиццы\n[ALT] ",-1,668.0192,-1576.7659,14.4074,4.0);

	CreatePickup(1274,23,665.9875,-1576.6426,14.4777,-1);
	CreatePickup(1274,23,1746.6765,2246.2012,10.8203,-1);

	CreatePickup(1275, 23, 668.0192,-1576.7659,14.4074, -1);
	CreatePickup(1275, 23, 1749.0339,2246.2012,10.8203, -1);
	CreateDynamic3DTextLabel(!" Раздевалка \n\n{FFFFFF}Встаньте на пикап чтобы переодеться", COLOR_LIME, 2568.0,-1281.5,1044.12, 7.0);
	//CreatePickup(2663, 1, 589.6020,1420.4148,1900.7980,-1);
	CreateDynamic3DTextLabel(!"Столовая\nALT",-1,589.6020,1420.4148,1900.7980,4.0);
	//CreatePickup(2663, 1, 485.50, 867.03, 1500.96,-1);
	//CreatePickup(2663, 1, -1349.3669,493.8840,11.1953,-1);
	Inc_CP[0] = CreatePickup(1275, 2, -2678.46851, 796.50763, 1501.0,-1);
	Inc_CP[1] = CreatePickup(1275, 2, 498.1447,1318.5439,774.4839,-1);
	Inc_CP[2] = CreatePickup(1275, 2, 948.5161,2447.8325,1601.9871,-1);
	Yakydzapick = CreatePickup(11722, 1 , -1417.99, 2085.67, 1502.04,-1);
	CreateDynamic3DTextLabel(!" Раздевалка \n\n{FFFFFF}Работа инкассатора",COLOR_LIME,-2678.46851, 796.50763, 1501.0,7.0);
	CreateDynamic3DTextLabel(!" Раздевалка \n\n{FFFFFF}Работа инкассатора",COLOR_LIME,948.5161,2447.8325,1601.9871,3.0);
	CreatePickup(1581, 23, -2063.68359, 2663.70068, 1498.62634,-1);
	Zek_CP = CreateDynamicCP(1550.7634,-1681.3251,13.5540, 1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel(!"Список заключенных",-1,1550.7634,-1681.3251,13.5540,5.0);

	f(str_2, sizeof(str_2), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
	FactoryText[0] = CreateDynamic3DTextLabel(str_2, -1, -117.0112,-313.7268,2.7646, 10.0);
	f(str_2, sizeof(str_2), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[25],GLS[28]);
	FactoryText[1] = CreateDynamic3DTextLabel(str_2, -1, -48.8906,26.7353,3.1172, 25.0);
	f(str_2, sizeof(str_2), "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[26],GLS[27]);
	FactoryText[2] = CreateDynamic3DTextLabel(str_2, -1, 1976.6340,-2029.4700,13.5469, 25.0);

	f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",0,0,0,0 );
	NarkoText[0] = CreateDynamic3DTextLabel(str_2, -1,331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 5);

	f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",0,0,0,0  );
	NarkoText[1] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 2, 5);

	f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",0,0,0,0  );
	NarkoText[2] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 3, 5);

	f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",0,0,0,0  );
	NarkoText[3] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 4, 5);

	f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",0,0,0,0  );
	NarkoText[4] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 5, 5);

	for(new i=1;i<6;i++) CreateDynamic3DTextLabel(!"Для подробного изучения системы:\n{FFFFFF}/help - Наркопритоны",COLOR_VALIK, 321.3961,1123.5383,1083.8828,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, i, 5);
	CreateDynamic3DTextLabel(!"{AFAFAF}Спресованый транспорт\nПосигнальте для загрузки метaла!", -1, 2224.5222, -2461.0154, 13.4466, 20.0);
	CreateDynamic3DTextLabel(!"Спресованый транспорт\nПосигнальте для загрузки метaла!", -1, 1124.2776,1962.4742,10.8203, 20.0);
	ScrapCP = CreateDynamicCP(-117.00000000,-326.89999390,1.10000002, 3.0, -1, -1, -1, 10000.0);

	CreateDynamic3DTextLabel(!" Раздевалка \n[ALT] ",-1,1907.0087,153.0604,17.5156,10.0);
	CreatePickup(1275, 23, 1907.0087,153.0604,17.5156,-1);
	CreateDynamic3DTextLabel(!" Раздевалка \n[ALT] ",-1,1980.1283,-1968.4868,13.5825,4.0);
	CreatePickup(1275, 23, 1980.1283,-1968.4868,13.5825,-1);
    CreateDynamic3DTextLabel(!" Трудоустройство \n Работа: Грузчик\n[ALT] ",-1,1979.9426,-1971.1410,13.5825,4.0);
    //
	CreateDynamic3DTextLabel(!"Перепланировка дома\n\n[ALT]", 0xAFAFAFFF, 1478.9395, -1266.2124, 114.8103, 7);
	CreatePickup(1314, 23, 1478.9395, -1266.2124, 113.8103, -1);
	CreateDynamic3DTextLabel(!"Подать жалобу\n{FFFFFF}ALT", 0xAFAFAFFF,  1479.8489, -1272.7487, 114.8064, 7);
	CreatePickup(1239, 23, 1479.8489, -1272.7487, 113.8064, -1);
	CreateDynamic3DTextLabel(!"[ {ffffff}Консультант по вопросам фермы{31B404}]\n{cccccc}Нажмите ALT", 0x31B404FF, 1471.7279, -1271.7294, 113.8103, 7);
	CreatePickup(1239, 23, 1471.7279, -1271.7294, 113.8103, -1);
	CreateDynamic3DTextLabel(!"Строительная {99CC00}информация{FFFFFF}\nНажмите: {99CC00}ALT", 0xFFFFFFFF, 1471.9293, -1268.2134, 114.8103, 7);
	CreatePickup(19524, 23, 1471.9293, -1268.2134, 113.8103, -1);
	CreateDynamic3DTextLabel(!"Голосовать\n\n[ALT]", 0xAFAFAFFF, 1474.5449, -1266.0454, 114.8103, 7);
	CreatePickup(1314, 23, 1474.5449, -1266.0454, 113.8103, -1);
	//
	CreateDynamic3DTextLabel(!"Сдача с повинной",-1,2361.3875,91.0118,1502.0103,5.0);
	CreateDynamic3DTextLabel(!"Сдача с повинной",-1, -955.6700,-2358.0708,1701.0859, 5.0);
	BankCP[0] = CreateDynamicCP(1482.7710,-1738.1262,13.5469, 3.0, -1, -1, -1, 10000.0);
	BankCP[1] = CreateDynamicCP(1481.1355,-1769.7352,18.7958, 1.0, -1, -1, -1, 10000.0);
	BankCP[2] = CreateDynamicCP(2419.6230,2342.5767,10.8203, 3.0, -1, -1, -1, 10000.0);
	BankCP[3] = CreateDynamicCP(2375.5564,2308.2996,8.1406, 1.0, -1, -1, -1, 10000.0);

	CreateDynamic3DTextLabel(!"Свалка Las-Venturas", COLOR_GREY,111.0156,1073.1621,13.6094, 20.0);
	CreateDynamic3DTextLabel(!"Свалка Лос-Сантос", COLOR_GREY,2180.7395,-1990.5044,13.5469, 20.0);
	CreateDynamic3DTextLabel(!"Свалка San Fierro", COLOR_GREY,-1867.2306,-1669.6919,21.7500, 20.0);

	f(str_2, sizeof(str_2), "Получение кредитa\nКредитная ставка {84E268}%i{FFFFFF} процента(ов).\nПолучить кредит или начать работу с {84E268}депозитом{FFFFFF},\n(Получить/снять деньги) можно через сотрудника банка!", GLS[0]);
	cretits = CreateDynamic3DTextLabel(str_2, -1, -2679.9958, 807.8365, 1502.5649, 7.0);

	ZavodPutCP[0] = CreatePickup(1559, 1, 886.7524, 2132.6951, 1000.9016, 1);
	ZavodPutCP[1] = CreatePickup(1559, 1, 892.1548, 2132.6113, 1000.9016, 1);
	ZavodPutCP[2] = CreatePickup(1559, 1, 897.7520, 2132.6035, 1000.9016, 1);
	ZavodPutCP[3] = CreatePickup(1559, 1, 897.8268, 2112.9709, 1000.9016, 1);
	ZavodPutCP[4] = CreatePickup(1559, 1, 892.1816, 2113.1179, 1000.9084, 1);
	ZavodPutCP[5] = CreatePickup(1559, 1, 886.8200, 2113.1309, 1000.9016, 1);
	ZavodPutCP[6] = CreatePickup(1559, 1, 904.3490, 2115.0618, 1000.9016, 1);
	ZavodPutCP[7] = CreatePickup(1559, 1, 905.8527, 2113.6179, 1000.9016, 1);
	ZavodClotherCP[0] = CreatePickup(1275, 2, 909.7632, 2158.9688, 1000.9084, 1);
	ZavodClotherCP[1] = CreatePickup(1275, 2, 908.6809, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[2] = CreatePickup(1275, 2, 907.5459, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[3] = CreatePickup(1275, 2, 906.4932, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[4] = CreatePickup(1275, 2, 905.3242, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[5] = CreatePickup(1275, 2, 904.2687, 2158.9688, 1000.9016, 1);
	CreateDynamic3DTextLabel(!"Охранник\nНажмите: {FFFFFF}ALT",COLOR_VALIK,644.0786,-1365.4963,13.6142,10.0);
    foreach_player(i)
	{
	    for(new t; t < 8; t ++)
	    {
	    	if(t < 6) HInfoDraw[i][t] = (PlayerText:INVALID_TEXT_DRAW);
		}
	}
    new Float:Y = 350.0;
    Box = CreateBox(194.0,Y-20,3*64.0 + 3*20,84,-1961026049);
    printf("LoadOther загрузился за %i ms", GetTickCount() - currenttime);
}
static const 	INTERIOS_SHOP24[] = {106,107,108,109,110,111,116,117,142,143,144,145,146,147,168,169,170,171,172,173,174,175,176,198,199,200,201,202,226,267,345,348,349},
				INTERIOS_AMMO[] = {100,101,102,164,165,166,212,213,214,215,224,225,232,259,265},
				INTERIOS_ZAKUS[] = {132,133,134,135,136,137,148,149,177,178,179,180,181,182,183,184,203,204,205,206,207,208,209,210,211,229,233,236,237,238,256,263,264,335,340},
				INTERIOS_AZS[] = {118,119,120,121,122,123,124,125,126,127,128,129,130,131,158,159,160,161,162,163,230,278,309,310,311,312,313,336,337,338,339,341};
stock LoadActors()
{
    new currenttime = GetTickCount();
	//casino
	new id;
	//
	CreateDynamicActor(4,1637.9214,-2239.6021,13.5015,147.8962);
	CreateDynamicActor(161,1773.6545,-1897.6843,13.3857,92.4718);
	CreateDynamicActor(209, 1136.9187, -1751.1899, 13.5703, 359.9222);
	CreateDynamicActor(209, 564.0869, 864.1050, -43.1267, 89.0240);
	CreateDynamicActor(48, 1163.6832, -1754.9606, 13.6179, 89.7200);
	CreateDynamicActor(161,1161.8972,-1751.7185,13.5838,156.8971);
	CreateDynamicActor(134, 1336.9323, -1772.3367, 13.5469, 270.0274);
	//meria 2
	CreateDynamicActor(46, 1485.6986, -1257.0229, 113.8044, 181.9322, 1, 100.0, 2, 0);
	CreateDynamicActor(155, 1501.9224, -1249.6239, 113.8103, 355.7931, 1, 100.0, 2, 0);
	CreateDynamicActor(211, 1479.5359, -1274.1305, 113.8103, 357.3598, 1, 100.0, 2, 0);
	CreateDynamicActor(235, 1470.5643, -1268.5040, 113.8103, 271.2864, 1, 100.0, 2, 0);
	CreateDynamicActor(36, 1477.5751, -1266.2606, 113.8103, 269.9860, 1, 100.0, 2, 0);
	CreateDynamicActor(33, 1471.7549, -1273.0952, 113.8103, 1.4156, 1, 100.0, 2, 0);
	CreateDynamicActor(20, 1474.5886, -1264.6810, 113.8103, 180.9982, 1, 100.0, 2, 0);
	//1
	CreateDynamicActor(76, 1507.2454, 1337.0317, 10.9788, 88.3297, 1, 100.0, 1, 220);
	CreateDynamicActor(150, 1502.2471, 1271.7648, 10.8125, 269.4678, 1, 100.0, 1, 220);
	CreateDynamicActor(227, 1511.1250, 1362.1165, 10.9738, 181.6705, 1, 100.0, 1, 220);
	CreateDynamicActor(261, 1506.2684, 1310.1619, 10.9788, 268.4882, 1, 100.0, 1, 220);
	CreateDynamicActor(164, 1526.2676, 1339.3668, 10.9787, 137.9433, 1, 100.0, 1, 220);

	//bank lv
	CreateDynamicActor(14, 1502.2469, 1279.7169, 10.8246, 268.5273, 1, 100.0, 2, 220);
	CreateDynamicActor(20, 1525.6868, 1275.4578, 10.8125, 0.3116, 1, 100.0, 2, 220);
	CreateDynamicActor(57, 1522.7068, 1275.4578, 10.8125, 358.4317, 1, 100.0, 2, 220);
	CreateDynamicActor(141, 1520.8734, 1273.6287, 10.8125, 89.2992, 1, 100.0, 2, 220);
	CreateDynamicActor(148, 1520.8734, 1270.6108, 10.8125, 86.7926, 1, 100.0, 2, 220);
	CreateDynamicActor(276, 1540.3541, 1393.6260, 10.8606, 13.8180, 1, 100.0, 2, 220);
	CreateDynamicActor(275, 1545.6687, 1393.5457, 10.8567, 9.3840, 1, 100.0, 2, 220);
	
	//CreateDynamicActor(70, 1549.0175, 1393.5619, 10.8554, 358.9103, 1, 100.0, 2, 220);
	// Бот 24/7
	Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(36, 2580.3503,1426.5663,1800.9688,179.0684), E_STREAMER_WORLD_ID, INTERIOS_SHOP24);

	// Бот аммо
	Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(179, 295.2432,-40.5504,1001.5156,1.7996), E_STREAMER_WORLD_ID, INTERIOS_AMMO);

	// Бот закусочная
	Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(155, 1081.6743,991.1944,1600.9989,357.7499), E_STREAMER_WORLD_ID, INTERIOS_ZAKUS);
    
    // От бара 51
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(12, 497.6714,-77.4644,998.7651,356.6964), E_STREAMER_WORLD_ID, {105,150,185,190,191,154});
    
    // От бара 4
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(12, 501.7258,-19.8993,1000.6797,93.3506), E_STREAMER_WORLD_ID, {104,186,189});

	// От бара 3
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(12, -2655.5076,1406.6876,906.2734,268.9621), E_STREAMER_WORLD_ID, {103,128,131,135,139});

    // Бот магазин одежды
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR,  CreateDynamicActor(37, 199.9442,-131.6396,1003.5078,27.3593), E_STREAMER_WORLD_ID, {112,113,114,187,188,216,217,218,234,253});

    // Бот полицейский 
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR,  CreateDynamicActor(267, -465.9878, 2217.9958, 1601.0859, 270.0000), E_STREAMER_WORLD_ID, {2,3,4,5});

    // Бот больница
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(71, 1150.4928,-1304.2775,1019.4139,271.0594), E_STREAMER_WORLD_ID, {2,3,4});

    // Бот азс
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(24, 666.1187,-566.1037,1700.7394,177.4561), E_STREAMER_WORLD_ID, INTERIOS_AZS);

    // Бот магазин аксессуаров
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(91, -398.2892,2232.0200,1801.0859,175.2628), E_STREAMER_WORLD_ID, {192,193,194,195,196,197,352});

    // Отели актеры
    Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(12, -1029.6779, -643.5944, 1500.9688, 358.4806), E_STREAMER_WORLD_ID, {191,193,219,221,224,230,231});
	Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(13, 2018.6428, 2674.2532, 1500.9493, 179.2522), E_STREAMER_WORLD_ID, {192,218,220,222,227,228,229});
	Streamer_SetArrayData(STREAMER_TYPE_ACTOR, CreateDynamicActor(3, 1811.9645, 2652.6387, 1500.9688, 90.6015), E_STREAMER_WORLD_ID, {188,189,190,194,223,225,226});

	for new i; i < 6; i++ do
	{
		switch i do
		{
			case 0: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(101,1751.4460,-310.9987,1654.5376,178.7493), E_STREAMER_WORLD_ID, {298,299,300});
			case 1: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(223,1751.3000,-304.0993,1654.5376,181.1334), E_STREAMER_WORLD_ID, {298,299,300});
			case 2: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(2,1756.8878,-311.2824,1654.5376,179.7938), E_STREAMER_WORLD_ID, {298,299,300});
			case 3: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(180,1756.9268,-304.4160,1654.5376,177.3654), E_STREAMER_WORLD_ID, {298,299,300});
			case 4: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(13,1762.1881,-311.2039,1654.5376,179.9556), E_STREAMER_WORLD_ID, {298,299,300});
			case 5: Streamer_SetArrayData(STREAMER_TYPE_ACTOR, id = CreateDynamicActor(65,1762.1881,-307.8369,1654.5376,179.9556), E_STREAMER_WORLD_ID, {298,299,300});
		}
		switch random(5) do
		{
			case 0: ApplyDynamicActorAnimation(id, "DANCING","dnce_M_c",4.1,1,1,1,1,1);
			case 1: ApplyDynamicActorAnimation(id, "DANCING","DAN_Left_A",4.1,1,1,1,1,1);
			case 2: ApplyDynamicActorAnimation(id, "DANCING","bd_clap1",4.1,1,1,1,1,1);
			case 3: ApplyDynamicActorAnimation(id, "DANCING","DAN_Left_A",4.1,1,1,1,1,1);
			case 4: ApplyDynamicActorAnimation(id, "DANCING","dnce_M_c",4.1,1,1,1,1,1);
		}
	}

	// Банк ЛВ
	SetDynamicActorVirtualWorld( CreateDynamicActor(20, 496.6649,1305.1852,774.4839,93.0393), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(57, 496.6649,1306.9811,774.4839,104.0060), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(141, 496.6650,1308.7821,774.4839,96.7993), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(148, 496.6652,1310.6189,774.4839,91.7859), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(150, 496.6651,1312.3998,774.4839,88.0259), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(14, 496.4996,1318.7137,774.4839,125.3129), 2);

	// Банк ЛС
	SetDynamicActorVirtualWorld( CreateDynamicActor(153, -2670.0698,808.9360,1500.9688,189.1366), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(187, -2665.1348,806.7042,1500.9688,93.2557), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(227, -2665.1348,800.0263,1500.9688,98.8957), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(228, -2665.1335,793.3651,1500.9688,93.8823), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(148, -2684.8027,808.9371,1500.9688,181.3030), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(150, -2677.3047,808.9442,1500.9688,180.6763), 1);	
	SetDynamicActorVirtualWorld( CreateDynamicActor(164, -2693.3257,792.3634,1500.9688,329.4222), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(150, -2680.2732,795.8896,1501.0259,270.3133), 1);
	SetDynamicActorVirtualWorld( CreateDynamicActor(148, -2680.9580,797.1705,1501.0259,88.5783), 1);
	
	// Банк СФ
	SetDynamicActorVirtualWorld( CreateDynamicActor(8, 949.9467,2451.9934,1601.9871,266.0435), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(141, 950.3532,2460.3127,1601.9800,219.3799), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(57, 952.9460,2464.3809,1601.9790,251.0268), 2);
	SetDynamicActorVirtualWorld( CreateDynamicActor(227, 946.3777,2458.5283,1601.9790,184.3746), 2);

	// Регистрации/Авторизация

	SetDynamicActorVirtualWorld( id = CreateDynamicActor(79, 2169.2637,-1053.1842,71.9548,132.8570), 1228), ApplyDynamicActorAnimation(id, "CRACK", "BBALBAT_IDLE_02", 4.1, 1, 0, 0, 1, 0);
	SetDynamicActorVirtualWorld( id = CreateDynamicActor(221, 2164.0886,-1046.4413,71.9966,192.7009), 1228), ApplyDynamicActorAnimation(id, "PED", "PHONE_TALK", 4.1, 1, 1, 1, 1, 1);
	SetDynamicActorVirtualWorld( id = CreateDynamicActor(77, 2168.1323,-1051.1493,71.9546,44.1829), 1228), ApplyDynamicActorAnimation(id, "CRACK", "CRCKIDLE1", 4.1, 1, 0, 0, 1, 0);
	SetDynamicActorVirtualWorld( id = CreateDynamicActor(91, 2161.3301,-1050.7638,71.9536,140.8112), 1228), ApplyDynamicActorAnimation(id, "BAR", "BARSERVE_LOOP", 4.1, 1, 0, 0, 1, 0);
	
	//Бот лотырейка
	SetDynamicActorVirtualWorld ( CreateDynamicActor(6, 822.1429, 3.1134, 1004.1797, 199.3640), 3);

	// Лицензеры бот
	SetDynamicActorVirtualWorld( CreateDynamicActor(164, 1544.0896, 1272.6919, 10.8475, 259.4740), 5);
	
	// Бот аукциона
	CreateDynamicActor(68, 334.1520, -1808.5800, 4.6678, -0.0000, 1, 100.0, 0, 0);
	CreateDynamicActor(194, 335.1220, -1815.4290, 4.6678, -0.0000, 1, 100.0, 0, 0);


	
	CreateDynamicActor(72, 1773.6903,-1891.7493,13.5504,139.4896, 1, 100.0, 0, 0);
	CreateDynamicActor(6, 1420.4176,-1685.8624,13.5469,245.4521, 1, 100.0, 0, 0);
    CreateDynamicActor(169, -1418.8385,2084.1316,1502.0374,1.0850, 1, 100.0, 0, 0);
	CreateDynamicActor(76, -1025.1711,1823.1455,1101.0859,352.5338, 1, 100.0, 0, 0);
	CreateDynamicActor(20,-1025.5941,1818.6888,1101.0859,280.7565, 1, 100.0, 0, 0);
	CreateDynamicActor(71,1298.6902,-1263.8916,13.5939,89.9531, 1, 100.0, 0, 0);
	CreateDynamicActor(3,1324.0098,287.2829,20.0452,269.6259, 1, 100.0, 0, 0);
	CreateDynamicActor(8,1972.5740,-1981.1592,13.5469,339.4531, 1, 100.0, 0, 0);
	CreateDynamicActor(6,644.0786,-1365.4963,13.6142,338.0643, 1, 100.0, 0, 0);
	CreateDynamicActor(185, 1800.4841, 409.9243, 20.2294, 177.3050, 1, 100.0, 0, 0);
	CreateDynamicActor(132, -256.7696, -1362.8536, 9.4421, 215.7267, 1, 100.0, 0, 0);
   	CreateDynamicActor(35, 523.8312, 848.2282, -42.9189, 5.9560, 1, 100.0, 0, 0);

	CreateDynamicActor(155, 1122.8033,-1465.7811,15.7834,213.1764, 1, 100.0, 0, 0);
	CreateDynamicActor(155, 1142.4574,-1474.5808,15.7969,317.5174, 1, 100.0, 0, 0);
	CreateDynamicActor(155, 1138.0466,-1456.4396,15.7969,90.3720, 1, 100.0, 0, 0);
	CreateDynamicActor(73, -2201.2429,-2340.7310,30.6250,121.5413, 1, 100.0, 0, 0);
	CreateDynamicActor(142, -2263.4514,177.9965,35.3056,109.1910, 1, 100.0, 0, 0);
	CreateDynamicActor(73, -1746.7738,156.5982,3.5547,176.5199, 1, 100.0, 0, 0);
	CreateDynamicActor(59, 1090.0826,1525.7831,1716.0868,268.1139, 1, 100.0, 0, 0);
	CreateDynamicActor(59, 1739.8818,-246.6380,1701.0857,269.1293, 1, 100.0, 0, 0);
	CreateDynamicActor(32,-38.4478,1180.5905,19.3594,284.8109, 1, 100.0, 0, 0);
	CreateDynamicActor(305,1467.7723,-1673.4635,13.3729,268.0522, 1, 100.0, 0, 0);
	
	SetDynamicActorVirtualWorld( CreateDynamicActor(34, 2355.8381,2829.5105,1500.9688,78.8462), 1); // Трейлеры
	CreateDynamicActor(73,2108.4651,790.0165,1027.1191,93.4347, 1, 100.0, 0, 0); // Раздача денег
	CreateDynamicActor(3,1129.1080,-1433.9572,15.7969,357.8926, 1, 100.0, 0, 0); //Милтон
	
	CreateDynamicActor(260, 1771.7130,424.2505,20.1436,122.6339, 1, 100.0, 0, 0);
	CreateDynamicActor(28, 1110.7767, -1423.8966, 15.7969, 245.50609, 1, 100.0, 0, 0);
	CreateDynamicActor(189, 1090.1143,1526.4485,1716.0868,246.6860, 1, 100.0, 0, 0);

	// Боты ларьков
	CreateDynamicActor(209, -242.9620, -1365.1804, 9.8609, 41.3740, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1589.7340,-1286.2540,17.5116,177.9591, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 947.8748, 1720.1589, 8.8516, 182.6520, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1460.5244, 2785.7810, 10.8203, 168.7890, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -1982.4241,127.5627,27.6875,87.1428, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -1980.6304,174.8663,27.6875,105.3163, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -1547.7957,673.8372,7.1875,87.4328, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -2682.0137,582.9930,14.4531,339.0652, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -2400.9304,337.9206,35.1719,240.9909, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -1827.1926,-566.0032,16.4918,227.8308, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1501.9723,-1277.5680,14.5625,180.6366, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 196.7574,-117.5487,1.5503,35.9374, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1433.8011,-1740.7983,13.5469,3.2460, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1182.1571,-1314.9563,13.5716,268.2516, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2327.6658,2422.2625,10.8203,178.0226, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2351.6204,2404.5659,10.8203,356.9377, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -2022.6364,458.2961,35.1723,357.3295, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1772.6434,-1903.8330,13.5525,36.4124, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2219.7568,-1151.6548,25.7504,313.2577, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2404.4722,-1934.8497,13.5538,316.9001, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -89.4332,101.0922,3.1172,253.9693, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 159.6426,-1812.3201,3.7413,87.9031, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1104.3633,1381.8967,10.8203,189.9294, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2999.9612,530.3032,-3.3559,155.2348, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1576.5154,1843.9366,10.8203,75.3274, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2598.4092,1060.1460,10.8125,269.1349, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2538.8323,2137.2725,10.8203,93.7216, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2029.4380,985.6383,10.8203,330.9406, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2243.4553,572.4129,7.7802,227.5396, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -105.8033,-310.1197,1.4297,271.2830, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1380.0839,-1804.9448,13.5469,274.1391, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 194.8985,-272.4871,1.5703,178.3508, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -2692.3674,385.2352,4.3750,224.5, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1521.3981,-1023.9045,23.8500,207.1534, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 2823.7583,1290.6710,10.7631,271.5448, 1, 100.0, 0, 0);
	CreateDynamicActor(209, 1976.1801, -1981.1899, 13.5469, 0.0000, 1, 100.0, 0, 0);
	CreateDynamicActor(209, -63.1272, 1209.9116, 19.6733, 180.0, 1, 100.0, 0, 0);
	CreateDynamicActor(59, -1658.3551, 1208.2866, 7.2500, 12.6507, 1, 100.0, 0, 0);
	CreateDynamicActor(24, 2535.1130, -1474.6288, 24.0039, 3.9796, 1, 100.0, 0, 0);
	CreateDynamicActor(50, 2530.6060, -1475.0999, 23.9788, 353.7612, 1, 100.0, 0, 0);
	CreateDynamicActor(5, 2507.7012, -1471.6755, 24.0371, 284.2320, 1, 100.0, 0, 0);
	CreateDynamicActor(33, -142.1979, -222.0515, 1.4219, 359.0683, 1, 100.0, 0, 0);
	
	CreateDynamicActor(185, 2464.3484, 2244.9761, 10.8203, 123.0654, 1, 100.0, 0, 0); // Серафим
	CreateDynamicActor(17, -2053.0842, 460.5180, 35.1719, 304.3948, 1, 100.0, 0, 0); // ydjun

	CreateDynamicActor(133, 1929.2721, 167.4322, 37.2813, 342.0440, 1, 100.0, 0, 0);//Новый NPC.
	CreateDynamicActor(159, 1910.5865, 169.5010, 37.1945, 288.3735, 1, 100.0, 0, 0);//Новый NPC.
	CreateDynamicActor(132, 1012.7135, -285.9390, 73.9930, 216.3445, 1, 100.0, 0, 0);//Новый NPC.
	return printf("LoadActors загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadGlobalTextDraws()
{
	new currenttime = GetTickCount();
	#include modules/TEXTDRAWS/global
	printf("LoadGlobalTextDraws загрузился за %i ms", GetTickCount() - currenttime);
}
stock OtherObjects()
{
    new currenttime = GetTickCount(), servstr[500];
	format(servstr, sizeof(servstr), "© %s", ServerCFG[server_name]);

	reg_name[0] = CreateDynamicObject(19476, 1876.864990, 2228.277832, 1036.438110, 0.000000, -0.000051, 179.999680, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[0], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[1] = CreateDynamicObject(19476, 1876.864990, 2228.277100, 1037.401733, 0.000000, -0.000083, 179.999496, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[1], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[2] = CreateDynamicObject(19483, 1876.864990, 2227.026611, 1035.580322, 0.000000, -0.000051, 179.999680, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[2], 0, ServerCFG[server_name], 130, "Tahoma", 25, 1, 0xFFFFFFFF, 0, 1);
	reg_name[3] = CreateDynamicObject(19476, 1876.864990, 2229.495605, 1035.721191, 0.000000, -0.000090, 179.999451, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[3], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[4] = CreateDynamicObject(19476, 1876.864990, 2229.497559, 1038.217773, 0.000000, -0.000045, 179.999725, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[4], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[5] = CreateDynamicObject(19476, 1876.864990, 2225.777100, 1037.282227, 0.000000, -0.000067, 179.999588, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[6], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[6] = CreateDynamicObject(19476, 1876.864990, 2230.658691, 1035.610352, 0.000000, -0.000045, 179.999725, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[6], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[7] = CreateDynamicObject(19476, 1876.864990, 2225.767090, 1038.152466, 0.000000, -0.000083, 179.999496, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[7], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[8] = CreateDynamicObject(19476, 1876.864990, 2224.527832, 1035.610352, 0.000000, -0.000052, 179.999680, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[8], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[9] = CreateDynamicObject(19476, 1876.864990, 2231.907959, 1037.282227, 0.000000, -0.000060, 179.999634, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[9], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[10] = CreateDynamicObject(19476, 1876.864990, 2231.897949, 1038.152466, 0.000000, -0.000075, 179.999542, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[11], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
	reg_name[11] = CreateDynamicObject(19476, 1876.849609, 2229.511719, 1036.869141, 16.200001, -0.000076, 179.999542, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[11], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[12] = CreateDynamicObject(19476, 1876.849609, 2229.528320, 1036.926758, 16.200001, -0.000076, 179.999542, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[12], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
	reg_name[13] = CreateDynamicObject(19476, 1876.849609, 2225.789063, 1036.085938, 16.200001, -0.000068, 179.999588, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[13], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
	reg_name[14] = CreateDynamicObject(19476, 1876.849609, 2225.772461, 1036.028320, 16.200001, -0.000068, 179.999588, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[14], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[15] = CreateDynamicObject(19476, 1876.849609, 2227.070068, 1038.510742, 16.200001, -0.000108, 179.999359, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[15], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[16] = CreateDynamicObject(19476, 1876.849609, 2227.086670, 1038.568359, 16.200001, -0.000108, 179.999359, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[16], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
	reg_name[17] = CreateDynamicObject(19476, 1876.849609, 2230.682129, 1037.669922, 16.200001, -0.000068, 179.999588, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[17], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[18] = CreateDynamicObject(19476, 1876.849609, 2230.698730, 1037.727539, 16.200001, -0.000068, 179.999588, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[18], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
	reg_name[19] = CreateDynamicObject(19476, 1876.849609, 2231.903320, 1036.028320, 16.200001, -0.000060, 179.999634, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[19], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[20] = CreateDynamicObject(19476, 1876.849609, 2224.551270, 1037.669922, 16.200001, -0.000076, 179.999542, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[20], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
	reg_name[21] = CreateDynamicObject(19476, 1876.849609, 2224.567871, 1037.727539, 16.200001, -0.000076, 179.999542, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[21], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
	reg_name[22] = CreateDynamicObject(19476, 1876.849609, 2231.919922, 1036.085938, 16.200001, -0.000060, 179.999634, -1, 17); // 1
	SetDynamicObjectMaterialText(reg_name[22], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);

    garage_name[0] = CreateDynamicObject(19483, 1384.866821, -12.246814, 1001.135803, 0.000014, 0.000000, 89.999954, -1, 1);
	SetDynamicObjectMaterialText(garage_name[0], 0, ServerCFG[server_logo], 130, "Tahoma", 40, 1, 0xFFFFFFFF, 0, 1);
	garage_name[1] = CreateDynamicObject(19483, 1384.866821, -12.246814, 1001.376038, 0.000014, 0.000000, 89.999954, -1, 1);
	SetDynamicObjectMaterialText(garage_name[1], 0, ServerCFG[server_name], 130, "Tahoma", 80, 1, 0xFFFFFFFF, 0, 1);
	garage_name[2] = CreateDynamicObject(19483, 962.566650, 2130.057617, 1005.089355, 0.000000, -0.000007, 179.999954, -1, 1);
	SetDynamicObjectMaterialText(garage_name[2], 0, ServerCFG[server_logo], 130, "Tahoma", 55, 1, 0xFFFFFFFF, 0, 1);
	
	smi_name = CreateDynamicObject(7666, 1480.052246, -1689.470703, 15.766437, 60.495564, 270.000000, 179.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(smi_name, 0, (str_f("%s NEWS", ServerCFG[server_name])), 140, "Arial", 70, 1, 0xFFFFFFFF, 0, 1);

	taxi_name[0] = CreateDynamicObject(19482, -874.538086, -1126.581055, 102.353333, -0.000000, -0.000009, 149.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(taxi_name[0], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);
	taxi_name[1] = CreateDynamicObject(19482, -445.647949, -850.102478, 53.507275, -0.000009, 0.000010, 179.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(taxi_name[1], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);
	taxi_name[2] = CreateDynamicObject(19482, -1234.203369, -763.179077, 67.472115, -0.000009, 0.000018, -44.999985, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(taxi_name[2], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);

    printf("  OtherObjects          ->  %i ms", GetTickCount() - currenttime);
	return 1;
}

stock LoadBonusOther()
{
    new currenttime = GetTickCount();

    for(new i; i < sizeof(StartInfo); i++)
    {
    	DestroyDynamicPickup(StartInfo[i][StartPickup]);
	   	DestroyDynamic3DTextLabel(StartInfo[i][StartLabel]);
	}

	if(PickupStart == 1)
 	{
 	    for(new i; i < sizeof(StartInfo); i++)
	    {
	        if(PickupStart == 1)
	        {
	            // ПАСПОРТА ХАЛЯВА
	            StartInfo[i][StartPickup] = CreateDynamicPickup(19131, 23, StartInfo[i][StartX], StartInfo[i][StartY], StartInfo[i][StartZ], -1);
	            StartInfo[i][StartLabel] = CreateDynamic3DTextLabel(!"БЕСПЛАТНЫЙ ВЕЛОСИПЕД\nПАСПОРТ и ВОД. ПРАВА\n{FFFFFF}ИСПОЛЬЗУЙТЕ: ALT!", 0xf28246FF,
					StartInfo[i][StartX], StartInfo[i][StartY], StartInfo[i][StartZ] + 1.0, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	        }
	    }
    }
    printf("  BonusOther          ->  %i ms", GetTickCount() - currenttime);
	return 1;
}

stock ChangeBonusOther()
{
    for(new i; i < sizeof(StartInfo); i++)
    {
    	DestroyDynamicPickup(StartInfo[i][StartPickup]);
	   	DestroyDynamic3DTextLabel(StartInfo[i][StartLabel]);
	}

	if(PickupStart == 1)
 	{
 	    for(new i; i < sizeof(StartInfo); i++)
	    {
	        if(PickupStart == 1)
	        {
	            // ПАСПОРТА ХАЛЯВА
	            StartInfo[i][StartPickup] = CreateDynamicPickup(19131, 23, StartInfo[i][StartX], StartInfo[i][StartY], StartInfo[i][StartZ], -1);
	            StartInfo[i][StartLabel] = CreateDynamic3DTextLabel(!"БЕСПЛАТНЫЙ ВЕЛОСИПЕД\nПАСПОРТ и ВОД. ПРАВА\n{FFFFFF}ИСПОЛЬЗУЙТЕ: ALT!", 0xf28246FF,
					StartInfo[i][StartX], StartInfo[i][StartY], StartInfo[i][StartZ] + 1.0, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	        }
	    }
    }
	return 1;
}
stock LoadCity()
{
	new currenttime = GetTickCount();
	CreateDynamic3DTextLabel(!"Абрахам ( Торговец AZ Rubles )\n{FFFFFF}Чтобы поговорить нажми ALT",\
	 							0x73B461FF, 1110.7767, -1423.8966, 15.7969, 15.0000);
	new tmpobjid;
	tmpobjid = CreateObject(4570, 1496.819946, -1265.949951, 61.351601, 0.000000, 0.000000, 0.000000, 800.0); // 2
	SetObjectMaterial(tmpobjid, 2, 10938, "skyscrap_sfse", "ws_skyscraperwin1", 0);
	SetObjectMaterial(tmpobjid, 7, 4586, "skyscrap3_lan2", "sl_dthotelwin1", 0);

	casino_rouletta_id = CreateDynamicObject(1895, 2266.367676, -808.228516, 1408.467163, 0.000000, 0.000000, 179.999863); // 0
	tmpobjid = CreateObject(4103, 1104.089966, -1780.910034, 25.296900, 0.000000, 0.000000, 0.000000, 500.0); // 3
	SetObjectMaterial(tmpobjid, 9, 3979, "civic01_lan", "sl_concretewall1", 0);
	SetObjectMaterial(tmpobjid, 11, 3979, "civic01_lan", "sl_laglasswall1", 0);
	SetObjectMaterial(tmpobjid, 12, 16639, "a51_labs", "ws_trainstationwin1", 0);
	tmpobjid = CreateObject(4101, 1224.699951, -1782.199951, 29.898399, 0.000000, 0.000000, 0.000000, 500.0); // 5
	SetObjectMaterial(tmpobjid, 12, 16639, "a51_labs", "ws_trainstationwin1", 0);
	SetObjectMaterial(tmpobjid, 11, 3979, "civic01_lan", "sl_laglasswall1", 0);
	SetObjectMaterial(tmpobjid, 10, 19800, "lsacarpark1", "dt_officewall1", 0);
	SetObjectMaterial(tmpobjid, 9, 3979, "civic01_lan", "sl_laglasswall1", 0);
	SetObjectMaterial(tmpobjid, 7, 3979, "civic01_lan", "sl_concretewall1", 0);
	tmpobjid = CreateObject(4101, 1224.699951, -1782.199951, 29.898399, 0.000000, 0.000000, 0.000000, 500.0); // 5
	SetObjectMaterial(tmpobjid, 12, 16639, "a51_labs", "ws_trainstationwin1", 0);
	SetObjectMaterial(tmpobjid, 11, 3979, "civic01_lan", "sl_laglasswall1", 0);
	SetObjectMaterial(tmpobjid, 10, 19800, "lsacarpark1", "dt_officewall1", 0);
	SetObjectMaterial(tmpobjid, 9, 3979, "civic01_lan", "sl_laglasswall1", 0);
	SetObjectMaterial(tmpobjid, 7, 3979, "civic01_lan", "sl_concretewall1", 0);
	/*Пол Конных ставок*/
	tmpobjid = CreateObject(2938, -229.272705, 880.934937, 1502.451538, -0.000007, 0.000007, -89.999947, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4682, "dtbuil1_lan2", "LAInside_Tracksign2", 0);
	tmpobjid = CreateObject(19550, -238.304565, 963.747253, 1500.010010, 0.000000, 0.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14488, "dogsgym", "ah_yelplnks", 0xFFFFFFFF);
	/*Пол Конных ставок*/

	/*Пол Банк г. Лос-Сантос*/
	tmpobjid = CreateObject(6959, -2638.788086, 798.036133, 1500.004028, 0.000000, 0.000000, 0.000000, 100.0);
	SetObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "la_flair1", 0xFFFFFFFF);
	tmpobjid = CreateObject(6959, -2679.429443, 793.759277, 1500.000000, 0.000000, 0.000000, 0.000000, 100.0);
	SetObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "la_flair1", 0xFFFFFFFF);
	tmpobjid = CreateObject(6959, -2679.004639, 833.176697, 1500.001953, 0.000000, 0.000000, 0.000000, 300.0);
	SetObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "la_flair1", 0xFFFFFFFF);
	/*Пол Банк г. Лос-Сантос*/

	/*Полы больницы 2 этаж*/
	tmpobjid = CreateObject(19377, 1167.697632, -1316.016235, 1018.330017, 0.000000, 90.000000, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1167.697632, -1306.384033, 1018.330017, 0.000000, 90.000000, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1146.698853, -1316.016235, 1018.328003, 0.000000, 90.000015, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1146.698853, -1306.384033, 1018.328003, 0.000000, 90.000015, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1160.708984, -1296.754517, 1018.328003, 0.000000, 90.000008, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1169.929199, -1334.534424, 1018.333862, 0.000000, 90.000008, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1169.437866, -1287.176025, 1018.325806, 0.000000, 90.000008, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1125.698608, -1311.195679, 1018.325989, 0.000000, 90.000015, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1127.990112, -1534.374512, 1009.199646, 0.000000, 90.000015, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 1148.989380, -1543.994263, 1009.209717, 0.000000, 90.000015, 0.000000, 100.0); // 1
	SetObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	/*Полы больницы 1 этаж*/

	/*Полы больницы 2 этаж*/
	tmpobjid = CreateObject(19377, 641.531006, -1238.108032, 1023.305847, 0.000000, 90.000015, 0.000000, 0.0); // 1
	SetDynamicObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 621.740417, -1263.011108, 1023.305298, -0.000007, 90.000023, 0.000000, 0.0); // 1
	SetDynamicObjectMaterial(tmpobjid, 0, 4101, "stapl", "sl_laexpowall1", 0);
	tmpobjid = CreateObject(19377, 665.350647, -1242.668335, 1023.321960, 0.000000, 90.000015, 0.000000, 0.0); // 1
	SetDynamicObjectMaterial(tmpobjid, 0, 14537, "pdomebar", "club_floor2_sfwTEST", 0);
	/*Полы больницы 2 этаж*/

	/*Полы Магазин 24/7*/
	tmpobjid = CreateObject(6959, 2573.745117, 1418.964233, 1800.000000, 0.000000, 0.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14537, "pdomebar", "club_floor2_sfwTEST", 0);
	/*Полы Магазин 24/7*/

	/*Полы АЗС/Магазин механики*/
	tmpobjid = CreateObject(19378, 672.783630, -578.324524, 1699.649536, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0);
	tmpobjid = CreateObject(18765, 664.657593, -569.745667, 1697.239380, 0.000000, 0.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0xFFFFFFFF);
	/*Полы АЗС/Магазин механики*/

	/*Полы Автомастерская*/
	tmpobjid = CreateObject(19375, -2374.758789, 1250.461670, 1499.897339, 0.000000, 90.000000, 90.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0xFFFFFFFF);
	tmpobjid = CreateObject(19375, -2384.375000, 1252.231567, 1499.897339, 0.000000, 90.000000, 90.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0xFFFFFFFF);
	tmpobjid = CreateObject(19377, -2403.847656, 1256.891357, 1500.056885, 0.000000, 90.000000, 90.000000, 400.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0);
	tmpobjid = CreateObject(19375, -2393.994873, 1252.231567, 1499.897339, 0.000000, 90.000000, 90.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18008, "intclothesa", "mp_cloth_vicfloor", 0xFFFFFFFF);
	/*Полы Автомастерская*/

	/*Полы Школа танцев*/
	CreateObject(6959, 1756.006958, -308.060669, 1653.529907, 0.000000, 0.000000, 0.000000, 300.0); // 0
	/*Полы Школа танцев*/

	/*Полы Департамент ЛСПД*/
	CreateObject(6959, -456.196747, 2167.161377, 1600.092163, 0.000000, 0.000000, 0.000000, 300.0); // 0
	CreateObject(6959, -456.129761, 2211.642334, 1600.092163, 0.000000, 0.000000, 0.000000, 300.0); // 0
	/*Полы Департамент ЛСПД*/

	/*Полы СМИ*/
	tmpobjid = CreateObject(19377, 2132.739502, 2500.053711, 1023.894226, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_flroortile1", 0);
	tmpobjid = CreateObject(19377, 1540.315186, 1964.160645, 1019.862488, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_flroortile1", 0);
	tmpobjid = CreateObject(19377, 1540.315186, 1935.270874, 1019.859497, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_flroortile1", 0);
	/*Полы СМИ*/

	/*Полы Магазин видеокарт*/
	tmpobjid = CreateObject(18783, 1390.672607, -5.847630, 997.419128, 0.000000, 0.000014, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 1, 4101, "stapl", "sl_laexpowall1", 0xAFFFFFFF);
	tmpobjid = CreateObject(18783, 1370.673218, -5.847630, 997.419128, 0.000000, 0.000014, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 1, 4101, "stapl", "sl_laexpowall1", 0xAFFFFFFF);
    /*Полы Магазин видеокарт*/

	/*Полы Регистрация аккаунта*/
	tmpobjid = CreateObject(19445, 1871.637573, 2228.270020, 1035.234497, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 18009, "genintrestrest1", "rest_wall5", 0);
	/*Полы Регистрация аккаунта*/

	/*Полы Woolfes*/
	tmpobjid = CreateObject(19378, -581.882996, 125.709999, 1500.000000, 0.000000, 90.000000, 0.000000, 50.0); // 1
	SetObjectMaterial(tmpobjid, 0, 1407, "break_f_w", "CJ_SLATEDWOOD", 0);
	tmpobjid = CreateObject(19379, -597.961975, 129.311005, 1500.004028, 0.000000, 90.000000, 0.000000, 50.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "mp_marble", 0);
	/*Полы Woolfes*/

	/*Полы Rifa*/
	tmpobjid = CreateObject(6959, -563.885254, 2248.947021, 1500.000000, 0.000000, 0.000000, 0.000000, 260.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14443, "ganghoos", "ah_CRAKPLNK", 0xFFFFFFFF);
	/*Полы Rifa*/

	/*Полы Groove*/
	tmpobjid = CreateObject(6959, -570.720642, 2414.346924, 1500.000000, 0.000000, 0.000000, 90.000000, 260.0); // 1
	SetObjectMaterial(tmpobjid, 0, 3063, "col_wall1x", "ab_wood1", 0xFFFFFFFF);
	/*Полы Groove*/

	/*Полы Vagos*/
	tmpobjid = CreateObject(6959, -418.642242, 2413.378174, 1500.000000, 0.000000, 0.000000, 0.000000, 260.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14443, "ganghoos", "ah_CRAKPLNK", 0xFFFFFFFF);
	tmpobjid = CreateObject(6959, -418.642212, 2413.378174, 1503.344116, 0.000000, 180.000000, 0.000000, 260.0); // 1
	SetObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "sw_PDground", 0xFFFFFFFF);
	/*Полы Vagos*/

	/*Полы Aztecas*/
	tmpobjid = CreateObject(19071, -717.520508, 2250.010010, 1498.974487, 0.000000, 180.000000, 90.000000, 260.0); // 1
	SetObjectMaterial(tmpobjid, 0, 3063, "col_wall1x", "ab_wood1", 0xFFFFFFFF);
	/*Полы Aztecas*/

	/*Полы Ballas*/
	tmpobjid = CreateObject(6959, -724.743774, 2415.508057, 1500.001343, 0.000000, 0.000000, 0.000000, 260.0); // 5
	SetObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_floor", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 14794, "ab_vegasgymmain", "mp_CJ_SHEET2", 0);
	SetObjectMaterial(tmpobjid, 2, 14794, "ab_vegasgymmain", "mp_CJ_SHEET2", 0);
	SetObjectMaterial(tmpobjid, 3, 14794, "ab_vegasgymmain", "mp_CJ_SHEET2", 0);
	SetObjectMaterial(tmpobjid, 4, 1736, "cj_ammo", "CJ_CANVAS2", 0);
	/*Полы Ballas*/

	/*Полы Ферма новая*/
	tmpobjid = CreateObject(19376, 729.813171, 1795.607666, 1600.918823, 0.000000, 90.000000, 0.000000, 290.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14832, "lee_stripclub", "Strip_wood_floor", 0);
	/*Полы Ферма новая*/

	/*Полы SecondHand*/
	tmpobjid = CreateObject(10575, 1539.070068, 1502.015991, 11.702817, 0.000000, 0.000000, 90.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	/*Полы SecondHand*/

 	/*Полы SampBet*/
	tmpobjid = CreateObject(10575, 1539.070068, 1502.015991, 11.702817, 0.000000, 0.000000, 90.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	/*Полы SampBet*/

	/*Полы Банк г. Лос-Сантос*/
	tmpobjid = CreateObject(7914, 1479.914917, -1689.026733, 19.557898, 0.000000, 0.000007, 0.000000, 200.0); // 1
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateObject(19538, 1492.169434, -1719.407593, 12.355388, 0.000007, 0.000000, 179.999969, 500.0); // 1
	SetObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0);
	tmpobjid = CreateObject(3980, 1481.310059, -1785.069946, 22.379999, 360.000000, 0.000000, 0.079000, 850.0); // 1
	SetObjectMaterial(tmpobjid, 3, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0);
	tmpobjid = CreateObject(4013, 1654.589966, -1637.739990, 28.640600, 0.000000, 0.000000, 0.000000, 800.0); // 3
	SetObjectMaterial(tmpobjid, 2, 18029, "genintintsmallrest", "GB_restaursmll03", 0);
	SetObjectMaterial(tmpobjid, 3, 14847, "mp_policesf", "mp_cop_vinyl", 0);
	SetObjectMaterial(tmpobjid, 4, 14537, "pdomebar", "club_floor2_sfwTEST", 0);
	/*Полы Банк г. Лос-Сантос*/

 	/*Пол Аксиома*/
	tmpobjid = CreateObject(19376, 2787.521240, 739.426392, 1499.032715, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0);
	/*Пол Аксиома*/

    /*Пол неизвестно*/
	tmpobjid = CreateObject(19071, -1503.948486, 2719.041992, 1498.967407, 0.000000, 180.000000, 0.000000, 300.0); // 3
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetObjectMaterial(tmpobjid, 2, 10101, "2notherbuildsfe", "ferry_build14", 0);
	/*Пол неизвестно*/

	/*Пол неизвестно*/
	tmpobjid = CreateObject(6959, 1888.981934, 742.835693, 1499.177124, 0.000000, 0.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_poshwdflr1", 0xFFFFFFFF);
	/*Пол неизвестно*/

	/*Пол ЖК Авантаж*/
	tmpobjid = CreateObject(19377, 1442.098389, -1064.010620, 1600.906006, 0.000000, 90.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 3063, "col_wall1x", "ab_wood1", 0xFFFFFFFF);
	CreateObject(8661, 1488.267944, 1524.759766, 1600.085083, 0.000000, 0.000000, 0.000000, 0.0); // 0
	/*Пол ЖК Авантаж*/

	/*Пол Casino 4 Dragons*/
	CreateObject(19382, 2264.062500, -867.797302, 1406.037231, 0.000000, -90.000000, 0.0);
	/*Пол Casino 4 Dragons*/

	/*Пол ЖК Ультра*/
	tmpobjid = CreateObject(6959, -1217.453735, 2370.032959, 1499.997925, 0.000000, 0.000000, 0.000000, 300.0); // 1
	SetObjectMaterial(tmpobjid, 0, 14387, "dr_gsnew", "la_flair1", 0xFFFFFFFF);
	/*Пол ЖК Ультра*/
    CaptureDef 	= -1;
    CaptureAtac = -1;
	for(new i; i < sizeof(ModelLimit); i++)
	{
		str_1[0] = EOS, f(str_1, sizeof(str_1), "{ffffff}Место для автомобиля\n[ {FA5858}%s {ffffff}]",\
		GetVehicleName(ModelLimit[i][vehID]));
		CreateDynamic3DTextLabel(str_1, 0xFFFFFFFF, ModelLimit[i][vehX], ModelLimit[i][vehY], ModelLimit[i][vehZ], 6.0000);
	}
	mysql_pquery(mysql, "UPDATE `ownable` SET `IDownable` = '-1' WHERE 1;");
	str_q[0] = EOS,f(str_q, sizeof(str_q), "SELECT * FROM `ownable` WHERE `Owner` = 'The State' LIMIT %i", sizeof(ModelLimit));
	mysql_tquery(mysql, str_q, "Query_LoadCar");
	bittext = CreateDynamic3DTextLabel(!" ", -1, -2666.7024, 792.7377, 1500.9688, 10.0000);
	UpdateDynamic3DTextLabelTextf(bittext, 0xFFFF00FF, "[ Операции с криптовалютой ]\n{ffffff}Сейчас в банке: %i BTC\n\nБанк покупает 1 BTC за $%i\nБанк продаёт 1 BTC за $%i\n\n{cccccc}Нажмите N", bitamount, bitprice,bitprice-10000);
	CreateDynamic3DTextLabel(!"Гараж/Тюнинг трейлеров\n{ff9966}[ {ffffff}ALT {ff9966}]", 0xFFFFFFFF, -2106.0486, -2418.8145, 30.6250, 8.0000);
	CreatePickup(1239, 23, -2106.0486, -2418.8145, 30.6250, -1);
	//
	CreateDynamic3DTextLabel(!"[ Обзор всех видеокарт ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1649.3934, -246.4758, 14.1484, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1650.4478, -244.2418, 14.1484, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1652.4283, -244.2435, 14.1484, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"Чтобы улучшить видеокарту,\nиспользуйте её у стола\nчерез инвентарь", 0xFFFFFFFFAFAFAFFF, -1653.0421, -249.0098, 14.1484, 5.0000,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1654.4594, -244.2415, 14.1484, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1656.4078, -244.2418, 14.1484, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Выход ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1662.1874, -246.4930, 14.1484, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	CreateDynamic3DTextLabel(!"[ Управление видеокартами ]\nНажмите ALT",0xFFFFFFFFAFAFAFFF,-1658.4623, -244.2459, 14.14845, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,17);
	for(new i; i < sizeof(TeleportInfo);i ++)
    {
        str_1[0] = EOS,f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Встаньте на пикап чтобы войти/выйти", TeleportInfo[i][tpName]);
		CreateDynamic3DTextLabel(str_1, COLOR_ORANGE, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
		CreateDynamicPickup(TeleportInfo[i][tpPickupModelID], 23, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
		TeleportPickup[i] = CreateDynamicSphere(TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], 0.5, TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
	}
    for(new i; i < sizeof(nzone); i++) nzone[i][zArea] = CreateDynamicSphere(nzone[i][zEnter_x], nzone[i][zEnter_y], nzone[i][zEnter_z], nzone[i][zDistance], 0, 0, -1);
    for(new i; i != sizeof(autoBazarInfo); i++)
    {
    	autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;//65535
    	autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;//65535
    	if(autoBazarInfo[i][autoBazarType] == 1) autoBazarInfo[i][autoBazarLabel] = CreateDynamic3DTextLabel(!"Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять", -1, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 3.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    	else autoBazarInfo[i][autoBazarLabel] = CreateDynamic3DTextLabel(!"Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять", -1, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 3.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i != MAX_COTTON_OBJECT; i++)
    {
        CottonInfo[i][cottonScore] = 10;
        CottonInfo[i][cottonStatus] = true;
        CottonInfo[i][cottonObject] = CreateDynamicObject(819, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
        SetDynamicObjectMaterial(CottonInfo[i][cottonObject], 0, 817, "gta_procflowers", "gras07Si", 0);

        f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[i][cottonScore]);
        CottonInfo[i][cottonLabel] = CreateDynamic3DTextLabel(str_2, -1, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i != MAX_LINEN_OBJECT; i++)
    {
        LinenInfo[i][linenScore] = 10;
        LinenInfo[i][linenStatus] = true;
        LinenInfo[i][linenObject] = CreateDynamicObject(865, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
        SetDynamicObjectMaterial(LinenInfo[i][linenObject], 0, 817, "gta_procflowers", "gras07Si", 0);

        f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[i][linenScore]);
        LinenInfo[i][linenLabel] = CreateDynamic3DTextLabel(str_2, -1, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i < sizeof(MineInfo); i++) CreateMineInfo(i);
    for(new i;i < sizeof(GateInfo);i ++) CreateGate(i);
	for new i;i < sizeof DoorInfo ; i ++ do
	{
		if !GetString(DoorInfo[i][dName],"None") *then
		{
			if DoorInfo[i][dPos][3] == 90.0 *then
				CreateDynamic3DTextLabel(DoorInfo[i][dName],COLOR_BLUENEW, DoorInfo[i][dPos][0], DoorInfo[i][dPos][1]+0.7400, DoorInfo[i][dPos][2]+1.017587, 5.0);
			else if DoorInfo[i][dPos][3] == 180.0 *then
				CreateDynamic3DTextLabel(DoorInfo[i][dName],COLOR_BLUENEW, DoorInfo[i][dPos][0]-0.7400, DoorInfo[i][dPos][1], DoorInfo[i][dPos][2]+1.017587, 5.0);
			else if DoorInfo[i][dPos][3] == 270.0 *then
				CreateDynamic3DTextLabel(DoorInfo[i][dName],COLOR_BLUENEW, DoorInfo[i][dPos][0], DoorInfo[i][dPos][1]-0.7400, DoorInfo[i][dPos][2]+1.017587, 5.0);
			else
				CreateDynamic3DTextLabel(DoorInfo[i][dName],COLOR_BLUENEW, DoorInfo[i][dPos][0]+0.7400, DoorInfo[i][dPos][1], DoorInfo[i][dPos][2]+1.017587, 5.0);
		}
		CreateDoor(i);
	}
	for new i;i < sizeof(BarrierInfo);i ++ do
	{
		if(i == 2 || i == 3 || i == 22 || i == 23) continue;

	    new
			Float:X = BarrierInfo[i][brPos_X],
			Float:Y = BarrierInfo[i][brPos_Y];
		ShiftCords(0, X, Y, BarrierInfo[i][brPos_A]+90.0, 3.5);
     	CreateDynamicObject(966,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z],0.00000000,0.00000000,BarrierInfo[i][brPos_A]);
     	Iter_Add(hint_forLauncher[2], CreateDynamicSphere(BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z], 6.0, 0, 0));
		if(!BarrierInfo[i][brOpen])
     	{
			gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,90.00000000,BarrierInfo[i][brPos_A]+180);
			MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
			MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[i][brPos_A]+180);
		}
		else gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,20.00000000,BarrierInfo[i][brPos_A]+180);
	}
	// Новые шлагбаумы
	gBarrier[2] = CreateDynamicObject(968, 73.637833, -1535.661255, 5.043927, 0.000000, 90.000000, 261.799988, -1, -1, -1, STREAMER_OBJECT_SD, STREAMER_OBJECT_DD);
	gBarrier[3] = CreateDynamicObject(968, 31.207512, -1527.308350, 4.993926, 0.000000, 90.000000, 441.499939, -1, -1, -1, STREAMER_OBJECT_SD, STREAMER_OBJECT_DD);
	gBarrier[22] = CreateDynamicObject(968, 1792.316772, 800.371582, 10.961740, 0.000000, 90.000000, 179.099884, -1, -1, -1, STREAMER_OBJECT_SD, STREAMER_OBJECT_DD); // 2
	gBarrier[23] = CreateDynamicObject(968, 1800.232666, 822.460571, 10.511731, 0.000000, 90.000000, 359.999695, -1, -1, -1, STREAMER_OBJECT_SD, STREAMER_OBJECT_DD); // 2
	SetDynamicObjectMaterial(gBarrier[2], 1, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[2], 0, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[3], 1, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[3], 0, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[22], 1, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[22], 0, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[23], 1, 18631, "nomodelfile", "hazardtile6", 0);
	SetDynamicObjectMaterial(gBarrier[23], 0, 18631, "nomodelfile", "hazardtile6", 0);
	//для отдельных createdoor
	SetDynamicObjectMaterial(dDoor[9], 2, 1560, "7_11_door", "CJ_CHROME2", 0);
	SetDynamicObjectMaterial(dDoor[9], 1, 16640, "a51", "a51_glass", 0);
	SetDynamicObjectMaterial(dDoor[9], 0, 1560, "7_11_door", "CJ_CHROME2", 0);
	SetDynamicObjectMaterial(dDoor[45], 0, 3922, "bistro", "sw_door11", 0xFFFFFFFF);
	//
	SetDynamicObjectMaterial(gGate[10], 1, 4835, "airoads_las", "concretenewb256", 0);
	SetDynamicObjectMaterial(gGate[10], 0, 10806, "airfence_sfse", "ws_leccyfncesign", 0);
	for(new i;i<sizeof(phonepos);i++)
	{
	    if(phonepos[i][0] == 0.0 || phonepos[i][1] == 0.0 || phonepos[i][2] == 0.0) continue;
		CreateDynamic3DTextLabel(!"Телефонная будка\n{FFFFFF}Нажмите: ALT, чтобы вызвать такси.",COLOR_GREEN,phonepos[i][0],phonepos[i][1],phonepos[i][2],20.0);
	}
	for(new i; i < sizeof(PrisonPos);i ++) JailCP[i] = CreateDynamicCP(PrisonPos[i][0],PrisonPos[i][1],PrisonPos[i][2],3.0, -1, -1, -1, 3000.0);
	for(new i; i < MAX_ORGS; i++)
	{
        if(global_OrgInfo[i][g_oDutyPos][0] == 0.0) continue;
        switch(i)
        {
            case TEAM_GROOVE,TEAM_VAGOS,TEAM_BALLAS,TEAM_CORONOS,TEAM_RIFA,TEAM_WOLFS,TEAM_RM,TEAM_YAKUZA,TEAM_LCN,TEAM_BIKERS:
            {
                Dorm_CP[i] = CreateDynamicCP(global_OrgInfo[i][g_oDutyPos][0], global_OrgInfo[i][g_oDutyPos][1], global_OrgInfo[i][g_oDutyPos][2],1.0,global_OrgInfo[i][g_oSpawnIntWorld][1],global_OrgInfo[i][g_oSpawnIntWorld][0],-1,10.0);
                DormText[i] = CreateDynamic3DTextLabel(str_1, -1, global_OrgInfo[i][g_oDutyPos][0], global_OrgInfo[i][g_oDutyPos][1], global_OrgInfo[i][g_oDutyPos][2]+1.2, 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, global_OrgInfo[i][g_oSpawnIntWorld][1],global_OrgInfo[i][g_oSpawnIntWorld][0]);
                UpdateDorm(i);
            }
            default:
            {
                CreateDynamicPickup(1275, 23, global_OrgInfo[i][g_oDutyPos][0], global_OrgInfo[i][g_oDutyPos][1], global_OrgInfo[i][g_oDutyPos][2]);
                TeamDutyCP[i] = CreateDynamicSphere(global_OrgInfo[i][g_oDutyPos][0], global_OrgInfo[i][g_oDutyPos][1], global_OrgInfo[i][g_oDutyPos][2], 0.5);
            }
        }
	}
	for(new i;i < sizeof(HealInfo);i ++)
	{
		HealInfo[i][hOwnerID] = INVALID_PLAYER_ID;
		HealInfo[i][hID] = i;
		HealText[i] = CreateDynamic3DTextLabel(!"Койка {33AA33}[Свободна]\n{AFAFAF}Нажмите N чтобы занять.\nНеобходимо начать лечение!",COLOR_WHITE,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2], 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HealInfo[i][hWorld], HealInfo[i][hInt]);
	}
	CreateDynamic3DTextLabel(!"{958989}Магазин 24/7\n{FFFFFF}Нажми: N для покупок",-1,2580.1340,1424.8770,1800.9688, 10.0);
	CreatePickup(1274, 1, 2580.1340,1424.8770,1800.9688,-1);
    CreateDynamic3DTextLabel(!"Казино: {73B461}4 Dragons\n{FFFFFF}Для входа необходимо 500$\nНажмите:{73B461} ALT",-1,2019.32,1007.7,10.8203,9.0);
    CreateDynamicPickup(19132,1,2019.32,1007.7,10.8203,-1);
	for(new i;i < sizeof(Bankomats);i ++)
	{
 		SetDynamicObjectMaterialText(CreateDynamicObject(2754,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],0.0,0.0,Bankomats[i][3]), 2,"\n\n        \n        \n        \n        \n        ",OBJECT_MATERIAL_SIZE_256x256,"Tahoma", 48, 1, 0xFF000000,0xFFCD5C5C, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		CreateDynamic3DTextLabel(!"{A19D9D}Банкомат\n{FFFFFF}Нажмите: N",-1,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2]+1,5.0);
	}
	for(new i;i < sizeof(GoFuel);i ++)
	{
	    str_2[0] = EOS;
		f(str_2,sizeof(str_2),"\
		{FAAC58} Заправка \n\n\
		{FFFFFF}Введите {73B461}H (Сигнал) {FFFFFF}около бензокалонки\n\
		Стоимость 1-го литра: {73B461}$%.1f\n\
		{FFFFFF}Всего топлива: {73B461}%iл.",45,10000);
		CreatePickup(1274, 1,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z], -1);
	    FuelText[i] = CreateDynamic3DTextLabel(str_2,-1,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z],30.0);
	    CreateDynamicMapIcon(GoFuel[i][gfPos_X], GoFuel[i][gfPos_Y], GoFuel[i][gfPos_Z], 47, 0, -1, -1, -1, 300.0);
	}
 	UpdateTreasure(true);
	for(new i;i < sizeof(ArendInfo);i ++)
	{
	    ArendInfo[i][aRendCarID] = J_AddStaticVehicleEx(ArendInfo[i][aID], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], -1, -1, 100000);
		ArendInfo[i][aRentID] = INVALID_PLAYER_ID;
		ARENDCARS ++;
	}
	for(new i; i < sizeof(MusorPos); i ++)
	{
		static const id[] = {1331, 1333, 1334, 1344, 1345};
	    CreateDynamicObject(id[random(sizeof id)], MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 0.0, 0.0, MusorPos[i][3]+180, 0, 0, -1, 60.00);
		ShiftCords(0, MusorPos[i][0], MusorPos[i][1], MusorPos[i][3], 1.250028);
		CreateDynamicPickup(1265, 1, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2]);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "Мусорка: №%i\nЗагружено: 0/100\nПосмотреть содержимое - 'ALT'", i);
		CreateDynamic3DTextLabel(str_1, 0xAFAFAFFF, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 20.0);
		Iter_Add(hint_forLauncher[1], CreateDynamicSphere(MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 2.0, 0, 0));
	}
 	foreach_vehicle(i)
	{
	    VehicleHealth[i] = 1500;
	    if(IsAVelik(i)) SetEngineStatus(i, true, -1);
	    for(new d; d < 10; d ++) VehicleSeat[i][d] = INVALID_PLAYER_ID;
	}
	printf("LoadCity загрузился за %i ms", GetTickCount() - currenttime);
}
stock SearchHouseCP(i)
{
	if(GetString(HouseInfo[i][hOwner],"The State")) return 1273;
	return 19522;
}
public: LoadAntiDM()
{
	new currenttime = GetTickCount();
    TOTAL_GREENZONE = cache_num_rows();
    for(new i; i < TOTAL_GREENZONE; i++)
	{
	    cache_get_int(i, !"id", AntiDm[i][zID]);
	    cache_get_int(i, !"status", AntiDm[i][zStatus]);
	    cache_get_float(i, "x", AntiDm[i][zX]);
	    cache_get_float(i, "y", AntiDm[i][zY]);
	    cache_get_float(i, "z", AntiDm[i][zZ]);
	    cache_get_string(i, !"name", AntiDm[i][zName]);
        Iter_Add(sphereGreenZone, CreateDynamicSphere(AntiDm[i][zX], AntiDm[i][zY], AntiDm[i][zZ], 100.0));
	}
	return printf("[Public] LoadAntiDM загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено AntiDM зон: %i",TOTAL_GREENZONE);
}
stock AddFreeFaggio(Float:x,Float:y,Float:z,Float:a)
{
	new color_1 = 1,
		color_2 = 1,
		spawntime = 120;
	new vehicleid =  J_AddStaticVehicleEx(462, x, y, z, a, color_1, color_2, spawntime);
	new FreeFaggio;
	FreeFaggio = CreateDynamicObject(18644, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 10765, "airportgnd_sfse", "black64", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, -0.870000, 0.200000, 0.000000, 180.000000, 0.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Free", 140, "Segoe Print", 199, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.003000, -1.080000, 0.442000, 0.000000, 0.000000, 360.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Eco", 140, "Segoe Print", 170, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, 0.581000, 0.260000, 0.000000, 0.000000, 90.000000);

	FreeFaggio = CreateDynamicObject(11740, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, 0.500000, 0.260000, 0.000000, 90.000000, 90.000000);

	FreeFaggio = CreateDynamicObject(2685, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, -0.020000, -1.050000, 0.439000, 0.000000, 90.000000, 270.000000);

	FreeFaggio = CreateDynamicObject(2685, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.019000, -1.085000, 0.449000, 360.000000, 90.000000, 450.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Free", 140, "Segoe Print", 199, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, -0.003000, -1.061000, 0.436000, 0.000000, 0.000000, 180.000000);
	return vehicleid;
}
stock CreateTaxiAttach(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 415)
	{
		new TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, (str_f("%s TAXI\nЗВОНИТЕ ПО НОМЕРУ", ServerCFG[server_name])), 130, "Ariel", 15, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.044000, 0.445000, -23.599001, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "- 913 -", 130, "Ariel", 22, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.091000, 0.335000, -23.799000, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -0.460000, 0.699000, 0.000000, 0.000000, 90.000000);
	}
	else if(GetVehicleModel(vehicleid) == 420)
	{
		new TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Ariel", 40, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, -0.030000, -1.526000, 0.641000, -57.199001, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 25, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, -0.020000, -1.639000, 0.569000, -58.598999, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "- 913 -", 130, "Ariel", 80, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, -0.020000, -1.810000, 0.459000, -57.500000, 0.000000, 0.000000);
	}
	else if(GetVehicleModel(vehicleid) == 579)
	{
		new TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Ariel", 34, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -2.596000, 0.903000, -27.600000, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -2.642000, 0.814000, -23.799999, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "- 913 -", 130, "Ariel", 47, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -2.717000, 0.672000, -26.698999, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.029000, 1.319000, 0.000000, 0.000000, 0.000000);
	}
	else if(GetVehicleModel(vehicleid) == 580)
	{
		new TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Ariel", 34, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.634000, 0.802000, -39.599998, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.693000, 0.725000, -37.999001, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach, 0, "- 913 -", 130, "Ariel", 42, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -1.783000, 0.631000, -35.799999, 0.000000, 0.000000);

		TaxiAttach = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach, vehicleid, 0.000000, -0.410000, 1.129000, 0.000000, 0.000000, 0.000000);
	}
}
stock CheckMySQLReferal(playerid, nickname[])
{
	if(strlen(nickname)==0) return SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Alexandr_Triazov\n\n", !"»", !"«");
	static Name[24], Referal[24];
	new Level;
	new bool:cont=false;
	f(str_2, sizeof(str_2), "SELECT `NickName`,`Referal`,`Level` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", nickname);
	new Cache:result = mysql_query(mysql, str_2);
	if(cache_num_rows() > 0)
	{
		cache_get_string(0, !"NickName", Name);
		cache_get_string(0, !"Referal", Referal);
		cache_get_int(0, !"Level", Level);
	}
	if(strlen(Name)==0) cont=false;
	else if(GetString(Referal, PN(playerid))) cont=true;
	if(!cont) return SCMf(playerid, -1, "{73B461}[Referal-System]{FFFFFF} %s не указывал Вас в качестве реферала!",nickname);
	if(Level < 5) str_d = "FF0000";
	else str_d = "85bb65";
	f(str_2,sizeof(str_2),"\n\n{FFFFFF}Реферал: {85bb65}%s\n{FFFFFF}Уровень: {%s}%i{ffffff}\n\n",Name, str_d, Level);
	SPD(playerid,13302, 0, !"{FFFFFF}Ваш реферал | {ae433d}Реферал", str_2, !"«", !"");
	cache_delete(result);
	return 1;
}
stock ShowMySQLReferals(playerid)
{
	new Ref5LVL, Ref1LVL;
	//static Name[24], str2[50], str[70];
	mysql_queryf_fix(mysql,"SELECT `NickName`, `Level` FROM `"TABLE_ACCOUNTS"` WHERE `Referal` = '%s' LIMIT 10",true, PN(playerid));
	new accounts = cache_num_rows();
	if(!accounts) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Больше вас никто не указывал как реферала");
    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Псевдоним\t{FFFFFF}Уровень\n");
	for(new i; i < accounts; i ++)
	{
		static Level;
		str_mes[0] = EOS, str_2[0] = EOS;
		cache_get_string(i, !"NickName", str_mes);
		cache_get_int(i, !"Level", Level);
		if(Level > 5)
		{
			f(str_2, sizeof(str_2), "%s\t{85bb65}%i{FFFFFF}\n", str_mes, Level);
			Ref5LVL++;
		}
		else
		{
			f(str_2, sizeof(str_2), "%s\t{FF0000}%i{FFFFFF}\n", str_mes, Level);
			Ref1LVL++;
		}
		strcat(str_1, str_2);
	}
	str_2[0] =EOS, f(str_2, sizeof(str_2), "{85bb65}%i {FFFFFF}/ {FF0000}%i{FFFFFF} | {ae433d}Мои рефералы", Ref5LVL, Ref1LVL);
	SPD(playerid, 13303, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, !"»", !"«");
	cache_delete(result1);
	return 1;
}
enum infomodcar
{
	idsmod,
	namemod[2+23+7]
};
static const SelectModCar[][infomodcar] = {
	{0, " "},
	{658, "{FED748}[Twin Turbo]{FFFFFF}"},
	{4935, "{FED748}[Twin Turbo 2]{FFFFFF}"},
	{803, "{FED748}[Launch]{FFFFFF}"},
	{1052, "{F345FC}[Premium]{FFFFFF}"},
	{619, "{EAD064}[Halloween]{FFFFFF}"},
	{620, "{EAD064}[Classic]{FFFFFF}"},
	{621, "{EAD064}[Future]{FFFFFF}"},
	{622, "{EAD064}[Cyber Punk]{FFFFFF}"},
	{623, "{EAD064}[Future Taxi]{FFFFFF}"}
};
stock CreateAutoBazarTable(id)
{
	new Float:X, Float:Y, Float:Z, Float:A;
	new Float:X_1, Float:Y_1, Float:Z_1, Float:X_2, Float:Z_2, Float:X_3, Float:A_1;
	new carid = autoBazarInfo[id][autoBazarCarID],
        number = GetVehicleID(autoBazarInfo[id][autoBazarCarID]);
	X = autoBazarInfo[id][autoBazarPosX];
	Y = autoBazarInfo[id][autoBazarPosY];
	Z = autoBazarInfo[id][autoBazarPosZ];
	A = autoBazarInfo[id][autoBazarZAngle];
    if(A == 90)
    {
	    X_1 = X-4.288819;
	    Y_1 = Y-0.024048;
	    Z_1 = Z-0.122114;

	    X_2 = X-5.368897;
	    Z_2 = Z-2.509254;

	    X_3 = X-2.808838;

	    A_1 = 0;
	}
	else if(A == 270)
	{
	    X_1 = X+4.288819;
	    Y_1 = Y+0.024048;
	    Z_1 = Z-0.122114;

	    X_2 = X+5.368897;
	    Z_2 = Z-2.509254;

	    X_3 = X+2.808838;

	    A_1 = 180;
	}
	str_2[0] = EOS, str_1[0] = EOS, SetString(str_1, SelectModCar[SearchSelectModCar(CarInfo[number][cSlotItem][6])][namemod]);
	if(CarInfo[number][cSlotItem][7]) SetString(str_2, ServerCFG[server_logo]);
	f(str_2, sizeof(str_2), "%s\n{5FC470}$%i\n\n\n \n", InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], autoBazarInfo[id][autoBazarCost]);
	autoBazarInfo[id][autoBazarObject][0] = CreateDynamicObject(18663, X_1, Y_1, Z_1, 0.000000, 25.000000, A_1, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 0
	SetDynamicObjectMaterialText(autoBazarInfo[id][autoBazarObject][0], 0, str_2, 140, "Ariel", 40, 1, 0xFFFFFFFF, 0, 1);

	f(str_2, sizeof(str_2), "\n\n\n{FFFF00}%s\n%s{FFFFFF}\nВладелец: %s\n{999999}id: %i", str_1, str_2, PN(autoBazarInfo[id][autoBazarplayerid]), carid);
	autoBazarInfo[id][autoBazarObject][1] = CreateDynamicObject(18663, X_1, Y_1, Z_1, 0.000000, 25.000000, A_1, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 0
	SetDynamicObjectMaterialText(autoBazarInfo[id][autoBazarObject][1], 0, str_2, 140, "Ariel", 30, 1, 0xFFFFFFFF, 0, 1);
    str_1[0] = EOS, SetString(str_1, "reddirt1");
	switch(random(5))
	{
	    case 0: SetString(str_1, "bluedirt1");
	    case 1: SetString(str_1, "greendirt1");
	    case 2: SetString(str_1, "purpledirt1");
	    case 3: SetString(str_1, "reddirt1");
	    case 4: SetString(str_1, "yellowdirt1");
	}
	autoBazarInfo[id][autoBazarObject][2] = CreateDynamicObject(19980, X_2, Y_1, Z_2, -25.000000, 0.000000, A-180, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 3
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 2, 19655, "mattubes", str_1, 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 1, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 0, 16640, "a51", "banding9_64HV", 0);

	autoBazarInfo[id][autoBazarObject][3] = CreateDynamicObject(19980, X_3, Y_1, Z_2, -25.000000, 0.000000, A, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 3
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 2, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 1, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 0, 16640, "a51", "banding9_64HV", 0);
}

stock DestroyAutoBazarTable(id) for(new i; i < 4; i++) DestroyDynamicObject(autoBazarInfo[id][autoBazarObject][i]);
stock ShowRoulette(playerid, slot)
{
    if(RouletteOpen{playerid}) return 0;
    HideTextDraws(playerid, 4);
    #include modules/TEXTDRAWS/roulette
    RouletteOpen{playerid} = true;
    PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][41], "%i", PI[playerid][pVirMoney]);
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][43], 1);
    for(new i; i < 49; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
    CreateRoulettePage(playerid);
    RollUpdateModel(playerid, slot);
    SelectedRoulette[playerid] 	= slot;
   	RollUpdatePage[playerid]  	=
	RollTimeUpdate[playerid]	= 0;
    return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}
stock SetRouletteSelectTable(playerid, roll)
{
    if(RollTimeUpdate[playerid]) return 1;
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][18], roll == 0 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i+14], roll == 0 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i+14], roll == 0 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i+14]);
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][23], roll == 1 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i+19], roll == 1 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i+19], roll == 1 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i+19]);
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][28], roll == 2 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i+24], roll == 2 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i+24], roll == 2 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i+24]);
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][48], roll == 3 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i+44], roll == 3 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i+44], roll == 3 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i+44]);
    return PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][18]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][23]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][28]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][48]);
}
stock HideRoulette(playerid)
{
    if(RollTimeUpdate[playerid]) return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
    RouletteOpen{playerid} = false;
   	SelectedRoulette[playerid] = -1;
	RollUpdatePage[playerid] = 0;
	RollTimeUpdate[playerid] = 0;
    for(new i; i < 49; i++)
    {
        DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
        if(i < 16) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][49+i]), DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][65+i]);
    }
    return CancelSelectTextDraw(playerid);
}
stock CreateRoulettePage(playerid)
{
    new Float:X = 166.966507, Float:Y[2], j, Float:X2 = 181.101501;
    for(new i; i < 16; i++)
    {
        if(i == 8) j = 0;
        if(i < 8) Y[0] = 144.070404;
        else Y[0] = 190.070404;
        GlobalTDPlayer[playerid][49+i] = CreatePlayerTextDraw(playerid, X+j*34.9, Y[0], "LD_SPAC:WHITE");
        PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][49+i], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][49+i], 28.270000, 33.270000);
        PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][49+i], 1);
        PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][49+i], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][49+i], 0);
        PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][49+i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][49+i], 0);
        PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][49+i], 0);
        PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], 0x191919FF);
        PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][49+i], 5);
        PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][49+i], 0);
        PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][49+i], 0);
        PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+i]);
        if(i < 8) Y[1] = 164.048889;
        else Y[1] = 210.048889;
        GlobalTDPlayer[playerid][65+i] = CreatePlayerTextDraw(playerid, X2+j*34.9, Y[1], "_");
        PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][65+i], 0.145500, 0.683461);
        PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][65+i], 1280.000000, 1280.000000);
        PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][65+i], 2);
        PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][65+i], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][65+i], 0);
        PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][65+i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][65+i], 0);
        PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][65+i], 1);
        PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][65+i], 0x19191980);
        PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][65+i], 1);
        PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][65+i], 1);
        PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][65+i], 0);
        PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][65+i]);
        j++;
    }
    return 1;
}
public: RollUpdate(playerid)
{
    RollTimeUpdate[playerid] ++, RollUpdatePage[playerid] += randomEx(1,3);
    if(RollTimeUpdate[playerid] > 15)
    {
        RollTimeUpdate[playerid] = 1;
        PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+15], 0x191919FF);
        PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+15]);
    }
    new page = RollTimeUpdate[playerid], rand = random(25), rand2 = random(30), rand3 = random(40), roll = 	SelectedRoulette[playerid];
    if(ItemsInfo[RoulleteItem[playerid][roll][page-1]][ItemColor]) PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+page-1], 0x191919FF);
    PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+page-1], 0x191919FF);
    PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+page], InvColor[PI[playerid][pInvColor]][0]);
    PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+page]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+page-1]);
    if(RollUpdatePage[playerid] >= 1 && RollUpdatePage[playerid] <= 15+rand) SetTimerEx("RollUpdate", 300, false, "d", playerid);
    else if(RollUpdatePage[playerid] >= 15+rand && RollUpdatePage[playerid] <= 35+rand2) SetTimerEx("RollUpdate", 500, false, "i", playerid);
    else if(RollUpdatePage[playerid] >= 35+rand2 && RollUpdatePage[playerid] <= 45+rand3) SetTimerEx("RollUpdate", 800, false, "i", playerid);
    else if(RollUpdatePage[playerid] >= 45)
    {
    	RollUpdatePage[playerid] = 0;
		RollTimeUpdate[playerid] = 0;
        if(RoulleteItemMoney[playerid][roll][page])
        {
            str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}\n\nПоздравляем с получением: {97FC9A}%i$.\nПриятной игры на %s\n\n",  RoulleteItemAmount[playerid][roll][page], ServerCFG[server_site]);
            GiveMoney(playerid, RoulleteItemAmount[playerid][roll][page]);
        }
        else
        {
            InvAdd(playerid, RoulleteItem[playerid][roll][page], RoulleteItemAmount[playerid][roll][page], 0);
            str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}\n\nПоздравляем с получением: {97FC9A}%s (%i){FFFFFF}.\nПриятной игры на %s\n\n", ItemsInfo[RoulleteItem[playerid][roll][page]][ItemName], RoulleteItemAmount[playerid][roll][page], ServerCFG[server_site]);
        }
        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Спасибо", !"");
        PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+page], 0xBABC49FF), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+page]);
        SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
    }
    return 1;
}
stock RollUpdateModel(playerid, roll)
{
    if(RollTimeUpdate[playerid]) return 1;
    SelectedRoulette[playerid] = roll;
    new rand, ID, icon[2];
    for(new i; i < 16; i++)
    {
        switch(roll)
        {
            case 0:
            {
                if(!RoulleteItem[playerid][0][i])
                {
                    rand = random(sizeof(RollPrizeBronze));
                    RoulleteItem[playerid][0][i] = RollPrizeBronze[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][0][i]][ItemLCount] > 1) RoulleteItemAmount[playerid][0][i] = random(1000);
                    else RoulleteItemAmount[playerid][0][i] = 1;
                    if(RollPrizeBronze[rand][rollmoney]) RoulleteItemAmount[playerid][0][i] = random(10000000), RoulleteItemMoney[playerid][0][i] = true;//money
                }
            }
            case 1:
            {
                if(!RoulleteItem[playerid][1][i])
                {
                    rand = random(sizeof(RollPrizeSilver));
                    RoulleteItem[playerid][1][i] = RollPrizeSilver[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][1][i]][ItemLCount] > 1) RoulleteItemAmount[playerid][1][i] = random(1000);
                    else RoulleteItemAmount[playerid][1][i] = 1;
                    if(RollPrizeSilver[rand][rollmoney]) RoulleteItemAmount[playerid][1][i] = random(10000000), RoulleteItemMoney[playerid][1][i] = true;//money
                }
            }
            case 2:
            {
                if(!RoulleteItem[playerid][2][i])
                {
                    rand = random(sizeof(RollPrizeGold));
                    RoulleteItem[playerid][2][i] = RollPrizeGold[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][2][i]][ItemLCount] > 1) RoulleteItemAmount[playerid][2][i] = random(1000);
                    else RoulleteItemAmount[playerid][2][i] = 1;
                    if(RollPrizeGold[rand][rollmoney]) RoulleteItemAmount[playerid][2][i] = random(10000000), RoulleteItemMoney[playerid][2][i] = true;//money
                }
            }
            case 3:
            {
                if(!RoulleteItem[playerid][3][i])
                {
                    rand = random(sizeof(RollPrizePlatinum));
                    RoulleteItem[playerid][3][i] = RollPrizePlatinum[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][3][i]][ItemLCount] > 1) RoulleteItemAmount[playerid][3][i] = random(1000);
                    else RoulleteItemAmount[playerid][3][i] = 1;
                    if(RollPrizePlatinum[rand][rollmoney]) RoulleteItemAmount[playerid][3][i] = random(10000000), RoulleteItemMoney[playerid][3][i] = true;//money
                }
            }
        }
        if(!RoulleteItemMoney[playerid][roll][i])
        {
            ID = RoulleteItem[playerid][roll][i], icon = "";
            if(ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], ItemsInfo[ID][ItemColor]);
            else PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], 0x191919FF);
            PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][49+i], ItemsInfo[ID][ItemID]);
            PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][49+i], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
        }
        else
        {
            icon = "$", PlayerTextDrawSetPreviewModel(playerid,  GlobalTDPlayer[playerid][49+i], 1550), PlayerTextDrawSetPreviewRot(playerid,  GlobalTDPlayer[playerid][49+i], -30.0, 0.0, 0.0, 1.0);
            PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], 0x191919FF);
        }
        PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][65+i], "%s%i", icon, RoulleteItemAmount[playerid][roll][i]);
        PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+i]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][65+i]);
    }
	switch(SelectedRoulette[playerid])
	{
	    case 0..2: PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][42], "%i",GetInvCount(playerid, 313-SelectedRoulette[playerid]));
	    case 3: PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][42], "%i",GetInvCount(playerid, 1135));
	}
    PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][29], 1), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][29]);
    SetRouletteSelectTable(playerid, roll);
    return 1;
}
stock SetVehiclePosToStandartPark(carid)
{
	new number = GetVehicleID(carid);
	switch(CarInfo[number][cModel])
	{
		case 430,446,452,453,454,472,473,484,493,595:
		{
			GetVehiclePos(carid, CarInfo[number][cPos_X], CarInfo[number][cPos_Y], CarInfo[number][cPos_Z]);
			GetVehicleZAngle(carid, CarInfo[number][cPos_A]);
		}
		default:
		{
			new i = random(sizeof(StandartCarParking)-1);
			CarInfo[number][cPos_X] = StandartCarParking[i][0];
			CarInfo[number][cPos_Y] = StandartCarParking[i][1];
			CarInfo[number][cPos_Z] = StandartCarParking[i][2];
			CarInfo[number][cPos_A] = StandartCarParking[i][3];
			UpdateDataFloat("ownable", "Pos_X", CarInfo[number][cPos_X], CarInfo[number][cID], 1);
			UpdateDataFloat("ownable", "Pos_Y", CarInfo[number][cPos_Y], CarInfo[number][cID], 1);
			UpdateDataFloat("ownable", "Pos_Z", CarInfo[number][cPos_Z], CarInfo[number][cID], 1);
			UpdateDataFloat("ownable", "Pos_A", CarInfo[number][cPos_A], CarInfo[number][cID], 1);
			return SetVehicleSpawnInfo(carid, GetVehicleModel(carid), StandartCarParking[i][0], StandartCarParking[i][1], StandartCarParking[i][2], StandartCarParking[i][3], CarInfo[number][cColor_1], CarInfo[number][cColor_2], 1000000, 0);
		}
	}
	return 0;
}
stock SearchVehicleToStandartPark(id)
{
	new number = GetVehicleID(id);
	if(number == INVALID_VEHICLE_ID) return 0;
	for(new i; i < sizeof(StandartCarParking)-1; i++)
	{
	    if(IsCoordsInRange(1.5,CarInfo[number][cPos_X],CarInfo[number][cPos_Y],StandartCarParking[i][0],StandartCarParking[i][1])) return 1;
	}
	return 0;
}
stock IsCoordsInRange(Float:range, Float:x_Checked, Float:y_Checked,Float:x_Static, Float:y_Static)
{
	new Float:x_Temp, Float:y_Temp;
	x_Temp = (x_Checked - x_Static);
	y_Temp = (y_Checked - y_Static);
	if (((x_Temp < range) && (x_Temp > -range)) && ((y_Temp < range) && (y_Temp > -range))) return 1;
	return 0;
}
stock RespawnOwnableCar(playerid, carid, put = 0)
{
	new panels, doors_, lights_, tires, Float: vhealth;
	new number = GetVehicleID(carid);
	new Float: X, Float:Y, Float:Z, Float:A;
	X = CarInfo[number][cPos_X];
	Y = CarInfo[number][cPos_Y];
	Z = CarInfo[number][cPos_Z];
	A = CarInfo[number][cPos_A];
	GetVehicleDamageStatus(carid, panels, doors_, lights_, tires);
	GetVehicleHealth(carid, vhealth);
	new item[60], count[60], sharpening2[60],UID_1[60], color_[60], Float:Fuel1,
		params_[60];
	for(new i; i < 60; i++)
	{
		item[i] = TrunkInfo[carid][TrunkItem][i];
		count[i] = TrunkInfo[carid][TrunkItemAmount][i];
		sharpening2[i] = TrunkInfo[carid][TrunkItemSharpening][i];
		params_[i] = TrunkInfo[carid][TrunkItemParams][i];
		UID_1[i] = TrunkInfo[carid][TrunkItemUID][i];
		color_[i] = TrunkInfo[carid][TrunkItemColor][i];
		TrunkInfo[carid][TrunkItem][i] 				= 0;
		TrunkInfo[carid][TrunkItemAmount][i] 		= 0;
		TrunkInfo[carid][TrunkItemSharpening][i] 	= 0;
		TrunkInfo[carid][TrunkItemParams][i]  = 0;
		TrunkInfo[carid][TrunkItemUID][i] 			= 0;
		TrunkInfo[carid][TrunkItemColor][i] 		= 0;
	}
	Fuel1 = vTemp[carid][Fuel];
	vTemp[carid][Fuel] = 0.0;
	if(CarInfo[number][cOwnerFamily] == -1)
	{
		//DestroyTrunkVehicle(number);
		for(new i; i < 21; i++) RemoveOwnableAttachedObject(number, i);
	}
	if(playerid != INVALID_PLAYER_ID && CarInfo[number][cOwnerFamily] != -1) return SafeRemoveCar(number, number);
	if(CarText[number] != Text3D:-1) DestroyDynamic3DTextLabel(CarText[number]), CarText[number] = Text3D:-1;
	if(CarTextTrunk[number] != Text3D:-1) DestroyDynamic3DTextLabel(CarTextTrunk[number]), CarTextTrunk[number] = Text3D:-1;
	ExitCar(playerid);
	DestroyVehicleEx(carid);
	OwnableCar[number] = J_AddStaticVehicleEx(CarInfo[number][cModel],X,Y,Z,A,CarInfo[number][cColor_1],CarInfo[number][cColor_2],1000000,CarInfo[number][cInterior],CarInfo[number][cVirtualWorld]);
	for(new i; i < 60; i++)
	{
		TrunkInfo[OwnableCar[number]][TrunkItem][i] 			= item[i];
		TrunkInfo[OwnableCar[number]][TrunkItemAmount][i] 		= count[i];
		TrunkInfo[OwnableCar[number]][TrunkItemSharpening][i] 	= sharpening2[i];
		TrunkInfo[OwnableCar[number]][TrunkItemUID][i] 			= UID_1[i];
		TrunkInfo[OwnableCar[number]][TrunkItemColor][i]		= color_[i];
		TrunkInfo[OwnableCar[number]][TrunkItemParams][i]		= params_[i];
	}
	vTemp[OwnableCar[number]][Fuel] = Fuel1;
	J_SetVehicleHealth(OwnableCar[number], vhealth);
	UpdateVehicleDamageStatus(OwnableCar[number], panels, doors_, lights_, tires);
	if(CarInfo[number][cOwnerFamily] == -1)
	{
    	for(new i; i < 21; i++) OwnableAttachedObject(number, i);
	}
	if(playerid != INVALID_PLAYER_ID)
    {
		if(!IsAVelik(OwnableCar[number])) SetEngineStatus(OwnableCar[number], false, playerid);
		else SetEngineStatus(OwnableCar[number], true, playerid);
		if(put) PutPlayerInVehicleEx(playerid, OwnableCar[number], 0);
	}
	mysql_pqueryf(mysql, "UPDATE `ownable` SET `IDownable` = '%i' WHERE `ID` = '%i' LIMIT 1;", OwnableCar[number], CarInfo[number][cID]);
	UpdateCarInfo(OwnableCar[number]);
	return 1;
}
stock HideInvPage(playerid)
{
	HideInventMenu(playerid);
    for(new i; i < 36; i++)
    {
        DestroyPlayerTD(playerid,InventSlot[playerid][i]);
        DestroyPlayerTD(playerid,InventSlotAmount[playerid][i]);
        DestroyPlayerTD(playerid,InventEnchant[playerid][i]);
    }
	InventPage[playerid] = 0;
	return 1;
}
stock ShowSpeedometr(playerid)
{
	//SCMf(playerid, -1, "%i %i %i %i %i", GetPVarInt(playerid, !"pSpeed"), GetPlayerState(playerid), IsAPlane(GetPlayerVehicleID(playerid)), IsAVelik(GetPlayerVehicleID(playerid)), \
	//IsPlayerInitCef(playerid, customInterface_speed));
    if(!GetPVarInt(playerid, !"pSpeed") && GetPlayerState(playerid) == 2 && !IsAPlane(GetPlayerVehicleID(playerid)) && !IsAVelik(GetPlayerVehicleID(playerid)))
    {
		if(IsPlayerInitCef(playerid, customInterface_speed) > 0 && IsPlayerLauncher(playerid) != -1)
		{
			SetPVarInt(playerid, !"pSpeed", 1);
			OnPlayerEnterDriver(playerid);
			return 1;
		}
		for(new i; i < 42; i++) 
		{
			if(i < 7) DestroyPlayerTD(playerid, speeddraw[playerid][i]);
			if(i < 4) TextDrawHideForPlayer(playerid, speedbox[i]);
			DestroyPlayerTD(playerid, speed_prodvin[playerid][i]);
		}
        if(!PI[playerid][pTypeSpeed])
        {
            #include modules/TEXTDRAWS/speed/old
        }
        else
        {
            #include modules/TEXTDRAWS/speed/new
        }
        SetPVarInt(playerid, !"pSpeed", 1);
        if(InNZone{playerid}) ShowNoParkZone(playerid);
    }
    return 1;
}
stock HideSpeedometr(playerid)
{
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1) OnPlayerExitDriver(playerid);
    else if(GetPVarInt(playerid, !"pSpeed"))
    {
        if(PI[playerid][pTypeSpeed])
		{
			for(new i; i < 42; i++) DestroyPlayerTD(playerid, speed_prodvin[playerid][i]);
		}
		else
        {
            for(new i; i < 7; i++) DestroyPlayerTD(playerid, speeddraw[playerid][i]);
            for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, speedbox[i]);
        }
        HideNoParkZone(playerid);
    }
	DeletePVar(playerid, !"pSpeed");
	DeletePVar(playerid,!"updatespeed");
    return 1;
}
stock ShowNoParkZone(playerid)
{
    if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1) return 1;
    if(GetPVarInt(playerid, !"pNoParkZone")) return 0;
    if(!PI[playerid][pTypeSpeed])
	{
		for(new i; i < 3; i++) TextDrawShowForPlayer(playerid, noparkzone[i]);
	}
    else
	{
		for(new i; i < 4; i++) TextDrawShowForPlayer(playerid, no_park_TD[i]);
	}
    SetPVarInt(playerid, !"pNoParkZone", 1);
    return 1;
}
stock HideNoParkZone(playerid)
{
    if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1) return 1;
    if(!GetPVarInt(playerid, !"pNoParkZone")) return 0;
    if(!PI[playerid][pTypeSpeed])
	{
		for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, noparkzone[i]);
	}
    else
	{
		for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, no_park_TD[i]);
	}
    DeletePVar(playerid, !"pNoParkZone");
    return 1;
}
static const page_inv[] = {0,13,14,15,51};
stock ShowInvPage(playerid, page)
{
	if(InventPage[playerid] == page) return 1;
	if(!IsPlayerTextDrawValid(playerid, InventSlot[playerid][0])) CreateInvPage(playerid);
	HideInventMenu(playerid);
	if(InventPage[playerid] != 0)
	{
		PlayerTextDrawSetSelectable(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ], 1);
		PlayerTextDrawColor(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ], 0x333333FF);
		PlayerTextDrawHide(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ]);
		PlayerTextDrawShow(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ]);
	}

	InventPage[playerid] = page;

	PlayerTextDrawSetSelectable(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ], 0);
	PlayerTextDrawColor(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ], InvColor[PI[playerid][pInvColor]][1]);
	PlayerTextDrawHide(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ]);
	PlayerTextDrawShow(playerid, Invent[playerid][ page_inv[InventPage[playerid]] ]);
	for(new i; i < 36; i++) InvSlotUpdate(playerid, GetInvID(playerid, i, false));
	return 1;
}
stock CreateInvPage(playerid)
{
	InventPage[playerid] = 0;
	SMD(playerid, "menu 1");
	new Float:Y = PI[playerid][pInvPos_Y], Float:X = PI[playerid][pInvPos_X];
	if(MenuStatus{playerid} || TradeOpen{playerid})
	{
		//SCM(playerid, -1, !"CreateInvPage для меню или трейда");
		InventSlot[playerid][0] = CreatePlayerTextDraw(playerid, 323.000000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][1] = CreatePlayerTextDraw(playerid, 349.500000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][2] = CreatePlayerTextDraw(playerid, 376.000000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][3] = CreatePlayerTextDraw(playerid, 402.500000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][4] = CreatePlayerTextDraw(playerid, 429.000000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][5] = CreatePlayerTextDraw(playerid, 455.500000+X, 164.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][6] = CreatePlayerTextDraw(playerid, 323.000000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][7] = CreatePlayerTextDraw(playerid, 349.500000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][8] = CreatePlayerTextDraw(playerid, 376.000000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][9] = CreatePlayerTextDraw(playerid, 402.500000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][10] = CreatePlayerTextDraw(playerid, 429.000000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][11] = CreatePlayerTextDraw(playerid, 455.500000+X, 195.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][12] = CreatePlayerTextDraw(playerid, 323.000000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][13] = CreatePlayerTextDraw(playerid, 349.500000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][14] = CreatePlayerTextDraw(playerid, 376.000000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][15] = CreatePlayerTextDraw(playerid, 402.500000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][16] = CreatePlayerTextDraw(playerid, 429.000000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][17] = CreatePlayerTextDraw(playerid, 455.500000+X, 225.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][18] = CreatePlayerTextDraw(playerid, 323.000000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][19] = CreatePlayerTextDraw(playerid, 349.500000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][20] = CreatePlayerTextDraw(playerid, 376.000000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][21] = CreatePlayerTextDraw(playerid, 402.500000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][22] = CreatePlayerTextDraw(playerid, 429.000000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][23] = CreatePlayerTextDraw(playerid, 455.500000+X, 256.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][24] = CreatePlayerTextDraw(playerid, 323.000000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][25] = CreatePlayerTextDraw(playerid, 349.500000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][26] = CreatePlayerTextDraw(playerid, 376.000000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][27] = CreatePlayerTextDraw(playerid, 402.500000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][28] = CreatePlayerTextDraw(playerid, 429.000000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][29] = CreatePlayerTextDraw(playerid, 455.500000+X, 286.742859+Y, "LD_SPAC:white");
		InventSlot[playerid][30] = CreatePlayerTextDraw(playerid, 323.000000+X, 317.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][31] = CreatePlayerTextDraw(playerid, 349.500000+X, 317.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][32] = CreatePlayerTextDraw(playerid, 376.000000+X, 317.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][33] = CreatePlayerTextDraw(playerid, 402.500000+X, 317.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][34] = CreatePlayerTextDraw(playerid, 429.000000+X, 317.242859+Y, "LD_SPAC:white");
		InventSlot[playerid][35] = CreatePlayerTextDraw(playerid, 455.500000+X, 317.242859+Y, "LD_SPAC:white");
	}
	else if(InventStatus{playerid})
	{
		//SCM(playerid, -1, !"CreateInvPage для инвентаря");
		InventSlot[playerid][0] = CreatePlayerTextDraw(playerid, 465.101715+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][1] = CreatePlayerTextDraw(playerid, 491.601715+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][2] = CreatePlayerTextDraw(playerid, 518.101685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][3] = CreatePlayerTextDraw(playerid, 544.601685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][4] = CreatePlayerTextDraw(playerid, 571.101685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][5] = CreatePlayerTextDraw(playerid, 597.601685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][6] = CreatePlayerTextDraw(playerid, 465.101715+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][7] = CreatePlayerTextDraw(playerid, 491.601715+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][8] = CreatePlayerTextDraw(playerid, 518.101685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][9] = CreatePlayerTextDraw(playerid, 544.601685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][10] = CreatePlayerTextDraw(playerid, 571.101685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][11] = CreatePlayerTextDraw(playerid, 597.601685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][12] = CreatePlayerTextDraw(playerid, 465.101715+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][13] = CreatePlayerTextDraw(playerid, 491.601715+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][14] = CreatePlayerTextDraw(playerid, 518.101685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][15] = CreatePlayerTextDraw(playerid, 544.601685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][16] = CreatePlayerTextDraw(playerid, 571.101685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][17] = CreatePlayerTextDraw(playerid, 597.601685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][18] = CreatePlayerTextDraw(playerid, 465.101715+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][19] = CreatePlayerTextDraw(playerid, 491.601715+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][20] = CreatePlayerTextDraw(playerid, 518.101685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][21] = CreatePlayerTextDraw(playerid, 544.601685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][22] = CreatePlayerTextDraw(playerid, 571.101685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][23] = CreatePlayerTextDraw(playerid, 597.601685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][24] = CreatePlayerTextDraw(playerid, 465.101715+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][25] = CreatePlayerTextDraw(playerid, 491.601715+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][26] = CreatePlayerTextDraw(playerid, 518.101685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][27] = CreatePlayerTextDraw(playerid, 544.601685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][28] = CreatePlayerTextDraw(playerid, 571.101685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][29] = CreatePlayerTextDraw(playerid, 597.601685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][30] = CreatePlayerTextDraw(playerid, 465.101715+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][31] = CreatePlayerTextDraw(playerid, 491.601715+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][32] = CreatePlayerTextDraw(playerid, 518.101685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][33] = CreatePlayerTextDraw(playerid, 544.601685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][34] = CreatePlayerTextDraw(playerid, 571.101685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][35] = CreatePlayerTextDraw(playerid, 597.601685+X, 280.100006+Y, "LD_SPAC:white");
	}
	//SCM(playerid, -1, !"CreateInvPage 2");
	for(new i; i < 36; i++)
	{
		PlayerTextDrawLetterSize(playerid, InventSlot[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InventSlot[playerid][i], 25.500000, 29.500000);
		PlayerTextDrawAlignment(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawColor(playerid, InventSlot[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, InventSlot[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InventSlot[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventSlot[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, InventSlot[playerid][i], 0);
  		PlayerTextDrawBackgroundColor(playerid, InventSlot[playerid][i], 0x333333FF);
		PlayerTextDrawFont(playerid, InventSlot[playerid][i], 5);
		PlayerTextDrawSetProportional(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawSetPreviewModel(playerid, InventSlot[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, InventSlot[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);

		//create
		InventSlotAmount[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "_");
		InventEnchant[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "_");
		InventTD_EOS(playerid, InventSlot[playerid][i], InventSlotAmount[playerid][i]);
		InventTD_EOS(playerid, InventSlot[playerid][i], InventEnchant[playerid][i]);
	}
	return 1;
}
stock InventTD_EOS(playerid, &PlayerText:text, &PlayerText:text2)
{
	static Float:X, Float:Y;
	PlayerTextDrawGetPosEx(playerid, text, X, Y);
	PlayerTextDrawSetPosEx(playerid, text2, 24.5+X, 23.083336+Y);
	PlayerTextDrawSetString(playerid, text2, "_");
	PlayerTextDrawLetterSize(playerid, text2, 0.126499, 0.625000);
	PlayerTextDrawTextSize(playerid, text2, 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, text2, 3);
	PlayerTextDrawColor(playerid, text2, 0xAAAAAAFF);
	PlayerTextDrawUseBox(playerid, text2, 0);
	PlayerTextDrawBoxColor(playerid, text2, 0x80808080);
	PlayerTextDrawSetShadow(playerid, text2, 0);
	PlayerTextDrawSetOutline(playerid, text2, 1);
	PlayerTextDrawBackgroundColor(playerid, text2, 0x00000000);
	PlayerTextDrawFont(playerid, text2, 2);
	PlayerTextDrawSetProportional(playerid, text2, 1);
	PlayerTextDrawSetSelectable(playerid, text2, 0);
}

stock ShowLogo(playerid)
{
 	if(LogoStatus{playerid}) return 1;

	switch(IsPlayerInitCef(playerid, customInterface_hud))
	{
		case 0,2:
		{
		    if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
			{
			    UpdateBrowser(playerid, 8, 0);
			    
				HidePlayerHud(playerid);
			}
			for(new i; i < 3; i++) TextDrawShowForPlayer(playerid, Logotype[i]);
		}
		case 1:
		{
			if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
			{
			    UpdateBrowser(playerid, 8, 2);
			    
				ShowPlayerHud(playerid);
			}
			for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, Logotype[i]);
		}
	}
	LogoStatus{playerid} = true;
	return 1;
}
stock HideLogo(playerid)
{
	for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, Logotype[i]);
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		HidePlayerHud(playerid);
	}
	LogoStatus{playerid} = false;
	return 1;
}
stock ShowPlayerHud(playerid)
{
	if(!IsPlayerLogged[playerid] || !IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1) return 0;
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.hudViceCity.updateViceCityHudVisible', '[%s]');", (PI[playerid][pCustomInterface][customInterface_hud] == 4 ? "true" : "false"));
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.auth.updateVideoBackgroundVisible', '[false]')");
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.hudSA.updateSanAndreasHudVisible', '[%s]');", (PI[playerid][pCustomInterface][customInterface_hud] == 4 ? "false" : "true"));
	ExecuteEventf(255, playerid, 0, "\
	window.executeEvent('event.arizonahud.serverInfo', '\
		[{\"id\":1,\
		\"title\":\"%s\",\
		\"project\":\"%s\",\
		\"type\":\"Role play\",\
		\"onLine\":%i,\
		\"flag\":1,\
		\"logo\":1,\
		\"multiplier\":%i}]');", ServerCFG[server_logo], ServerCFG[server_name], Iter_Count(Player), adddonate);
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.playerSatiety', '[%i]');", Fullness{playerid});
	//ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.playerWanted', '[0]');");
	OnPlayerEnterDriver(playerid);
	return 1;
}
stock HidePlayerHud(playerid)
{
	if(!IsPlayerLogged[playerid] || !IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1) return 0;
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.hudViceCity.updateViceCityHudVisible', '[false]');");
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.hudSA.updateSanAndreasHudVisible', '[false]');");
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.hotkeysVisible', '[false]');");
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.speedometerType', '[\"null\"]');");
	return 1;
}
stock CreateButtonInv(playerid)
{
	new idofcar=idaofcar[playerid], 
		id = SearchTrash(playerid);
	InvTypePlayer{playerid} = 0;
	if(id != -1)
	{
		TrashID[playerid] = id;
		InvTypePlayer{playerid} = 1;
	}
	else if(HouseEntered[playerid] != -1 && GetPlayerVirtualWorld(playerid)!=0)
	{
		HouseID[playerid] = HouseEntered[playerid];
		InvTypePlayer{playerid} = 2;
	}
	else if(InvTypePlayer{playerid} == 0)
	{
		foreach(new i: PlayerVehiclesStream[playerid])
		{
			if(IsACar(i) && TrunkInfo[i][tOpen] != false)
			{
				new Float:X,Float:Y,Float:Z;
				GetVehicleShiftPos(i, 1, X, Y, Z, 2.0);
				if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
				{
					idaofcar[playerid] = i;
					InvTypePlayer{playerid} = 3;
					break;
				}
			}
		}
	}
	new Float:X = PI[playerid][pInvPos_X], Float:Y = PI[playerid][pInvPos_Y];
	DestroyPlayerTD(playerid, InventButton[playerid][0]);
	InventButton[playerid][0] = CreatePlayerTextDraw(playerid, 465.101715+X, 326.933350+Y, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, InventButton[playerid][0], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, InventButton[playerid][0], 42.500000, 19.666666);
	PlayerTextDrawAlignment(playerid, InventButton[playerid][0], 1);
	PlayerTextDrawColor(playerid, InventButton[playerid][0], InvColor[PI[playerid][pInvColor]][1]);
	PlayerTextDrawUseBox(playerid, InventButton[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, InventButton[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, InventButton[playerid][0], 2);
	PlayerTextDrawSetOutline(playerid, InventButton[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, InventButton[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, InventButton[playerid][0], 4);
	PlayerTextDrawSetProportional(playerid, InventButton[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, InventButton[playerid][0], 1);

	DestroyPlayerTD(playerid, InventButton[playerid][1]);
	InventButton[playerid][1] = CreatePlayerTextDraw(playerid, 486.351715+X, 332.540314+Y, "_");
	PlayerTextDrawLetterSize(playerid, InventButton[playerid][1], 0.150666, 0.845274);
	PlayerTextDrawTextSize(playerid, InventButton[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, InventButton[playerid][1], 2);
	PlayerTextDrawColor(playerid, InventButton[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, InventButton[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, InventButton[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, InventButton[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, InventButton[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, InventButton[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid, InventButton[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, InventButton[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, InventButton[playerid][1], 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////
	switch(InvTypePlayer{playerid})
	{
		case 0:
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "SECURITY");
			else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ОХРАННИКИ"));
		}
		case 1:
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRASH");
			else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("МУСОРКА"));
		}
		case 2:
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "WAREHOUSE");
			else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ШКАФ"));
		}
		case 3:
		{
			if(TrunkInfo[idofcar][tOpen])
			{
				if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRUNK");
				else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("БАГАЖНИК"));
			}
		}
		case 5:
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "WAREHOUSE");
			else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("СКЛАД"));
		}
	}
	if(IsPlayerOpenInvSecurity[playerid] == true)
	{
		InvTypePlayer{playerid} = 0;
		if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "INVENTORY");
		else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ИНВЕНТАРЬ"));
	}
	for(new i; i < 2; i++) PlayerTextDrawShow(playerid, InventButton[playerid][i]);
	return 1;
}
stock HideMenuPage(playerid)
{
	for(new i; i < 30; i++)
	{
		DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
		DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
		DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
	}
	MenuPage[playerid] = 0;
	return 1;
}
stock ShowMenuPage(playerid, page, type)
{
	if(MenuPage[playerid] == page) return 1;
	if(!IsPlayerTextDrawValid(playerid, Invent_Menu_Page[playerid][0])) CreateMenuPage(playerid, type);
	//HideInventMenu(playerid);
	if(MenuPage[playerid] != 0)
	{
		PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][ MenuPage[playerid]+1 ], 1);
		PlayerTextDrawColor(playerid, Invent_Menu[playerid][ MenuPage[playerid]+1 ], 0x333333FF);
		PlayerTextDrawHide(playerid, Invent_Menu[playerid][ MenuPage[playerid]+1 ]);
		PlayerTextDrawShow(playerid, Invent_Menu[playerid][ MenuPage[playerid]+1 ]);
	}

	MenuPage[playerid] = page;

	PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][ page+1 ], 0);
	PlayerTextDrawColor(playerid, Invent_Menu[playerid][ page+1 ], InvColor[PI[playerid][pInvColor]][1]);
	PlayerTextDrawHide(playerid, Invent_Menu[playerid][ page+1 ]);
	PlayerTextDrawShow(playerid, Invent_Menu[playerid][ page+1 ]);
	for(new i; i < 30; i++) MenuSlotUpdate(playerid, i, type);
	return 1;
}
stock CreateMenuPage(playerid, type)
{
	MenuPage[playerid] = 0;
	new Float:X = PI[playerid][pInvPos_X], Float:Y = PI[playerid][pInvPos_Y];
	SMD(playerid,"menu 2");
	Invent_Menu_Page[playerid][0] = CreatePlayerTextDraw(playerid, 184.500000+X, 164.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][1] = CreatePlayerTextDraw(playerid, 211.0+X, 164.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][2] = CreatePlayerTextDraw(playerid, 237.500000+X, 164.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][3] = CreatePlayerTextDraw(playerid, 264.000000+X, 164.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][4] = CreatePlayerTextDraw(playerid, 290.500000+X, 164.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][5] = CreatePlayerTextDraw(playerid, 184.500000+X, 195.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][6] = CreatePlayerTextDraw(playerid, 211.0+X, 195.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][7] = CreatePlayerTextDraw(playerid, 237.500000+X, 195.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][8] = CreatePlayerTextDraw(playerid, 264.000000+X, 195.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][9] = CreatePlayerTextDraw(playerid, 290.500000+X, 195.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][10] = CreatePlayerTextDraw(playerid, 184.500000+X, 225.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][11] = CreatePlayerTextDraw(playerid, 211.0+X, 225.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][12] = CreatePlayerTextDraw(playerid, 237.500000+X, 225.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][13] = CreatePlayerTextDraw(playerid, 264.000000+X, 225.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][14] = CreatePlayerTextDraw(playerid, 290.500000+X, 225.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][15] = CreatePlayerTextDraw(playerid, 184.500000+X, 256.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][16] = CreatePlayerTextDraw(playerid, 211.0+X, 256.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][17] = CreatePlayerTextDraw(playerid, 237.500000+X, 256.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][18] = CreatePlayerTextDraw(playerid, 264.000000+X, 256.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][19] = CreatePlayerTextDraw(playerid, 290.500000+X, 256.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][20] = CreatePlayerTextDraw(playerid, 184.500000+X, 286.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][21] = CreatePlayerTextDraw(playerid, 211.0+X, 286.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][22] = CreatePlayerTextDraw(playerid, 237.500000+X, 286.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][23] = CreatePlayerTextDraw(playerid, 264.000000+X, 286.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][24] = CreatePlayerTextDraw(playerid, 290.500000+X, 286.742859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][25] = CreatePlayerTextDraw(playerid, 184.500000+X, 317.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][26] = CreatePlayerTextDraw(playerid, 211.0+X, 317.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][27] = CreatePlayerTextDraw(playerid, 237.500000+X, 317.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][28] = CreatePlayerTextDraw(playerid, 264.000000+X, 317.242859+Y, "LD_SPAC:white");
	Invent_Menu_Page[playerid][29] = CreatePlayerTextDraw(playerid, 290.500000+X, 317.242859+Y, "LD_SPAC:white");
	for(new i; i < 30; i++)
	{
		PlayerTextDrawLetterSize(playerid, Invent_Menu_Page[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, Invent_Menu_Page[playerid][i], 25.500000, 29.500000);
		PlayerTextDrawAlignment(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, Invent_Menu_Page[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Invent_Menu_Page[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][i], 0x333333FF);
		PlayerTextDrawFont(playerid, Invent_Menu_Page[playerid][i], 5);
		PlayerTextDrawSetProportional(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);

		Invent_Menu_PageAmount[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "_");
		Invent_Menu_PageEnchant[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "_");
		InventTD_EOS(playerid, Invent_Menu_Page[playerid][i], Invent_Menu_PageAmount[playerid][i]);
		InventTD_EOS(playerid, Invent_Menu_Page[playerid][i], Invent_Menu_PageEnchant[playerid][i]);
	}
	switch(type)
	{
		case 1,5://Мусорка (5 стр)
		{
			for(new i = 2; i < 7; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i], true);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 2 ]=============================//
			Invent_Menu[playerid][3] = CreatePlayerTextDraw(playerid, 240.750000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 3 ]=============================//
			Invent_Menu[playerid][4] = CreatePlayerTextDraw(playerid, 250.250000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 4 ]=============================//
			Invent_Menu[playerid][5] = CreatePlayerTextDraw(playerid, 259.750000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 5 ]=============================//
			Invent_Menu[playerid][6] = CreatePlayerTextDraw(playerid, 269.250000+X, 351.242859+Y, "LD_BEAT:chit");
			for(new i = 2; i < 7; i++)
			{
				PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][i], 0.480000, 1.120000);
				PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][i], 8.500000, 9.833333);
				PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawColor(playerid, Invent_Menu[playerid][i], 0x333333FF);
				PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][i], 0x80808080);
				PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][i], 2);
				PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][i], 0x000000FF);
				PlayerTextDrawFont(playerid, Invent_Menu[playerid][i], 4);
				PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			}
		}
		case 2://Шкаф (3 стр)
		{
			for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i], true);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 2 ]=============================//
			Invent_Menu[playerid][3] = CreatePlayerTextDraw(playerid, 240.750000+X, 351.242859+Y, "LD_BEAT:chit");
			//=============================[ Стр меню 3 ]=============================//
			Invent_Menu[playerid][4] = CreatePlayerTextDraw(playerid, 250.250000+X, 351.242859+Y, "LD_BEAT:chit");
			for(new i=2; i < 5; i ++)
			{
				PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][i], 0.480000, 1.120000);
				PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][i], 8.500000, 9.833333);
				PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawColor(playerid, Invent_Menu[playerid][i], 0x333333FF);
				PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][i], 0x80808080);
				PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][i], 2);
				PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][i], 0x000000FF);
				PlayerTextDrawFont(playerid, Invent_Menu[playerid][i], 4);
				PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			}
		}
		case 3://Багажник (1 стр)
		{
			DestroyPlayerTD(playerid, Invent_Menu[playerid][2]);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000+X, 351.242859+Y, "LD_BEAT:chit");
			//2
			for(new i=2; i < 4; i++)
			{
				if(i == 3)
				{
					DestroyPlayerTD(playerid, Invent_Menu[playerid][3]);
					if(CheckTrunkForItem(idaofcar[playerid], 1780) != 0) Invent_Menu[playerid][3] = CreatePlayerTextDraw(playerid, 240.750000+X, 351.242859+Y, "LD_BEAT:chit");
				}
				PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][i], 0.480000, 1.120000);
				PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][i], 8.500000, 9.833333);
				PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawColor(playerid, Invent_Menu[playerid][i], 0x333333FF);
				PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][i], 0x80808080);
				PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][i], 2);
				PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][i], 0);
				PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][i], 0x000000FF);
				PlayerTextDrawFont(playerid, Invent_Menu[playerid][i], 4);
				PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][i], 1);
				PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			}
		}
	}
	return 1;
}
stock CheckTrunkForItem(carid, itemid)
{
	new number = GetVehicleID(carid);
	if(number == INVALID_VEHICLE_ID) return 1;
	for(new i; i < 21; i++) if(CarInfo[number][cSlotItem][i] == itemid) return 0;
	return 1;
}
stock ShowInvMenu(playerid, type)
{
	if(MenuStatus{playerid}) return 0;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideInventory(playerid, 1);
	#include modules/TEXTDRAWS/inv/inv_menu
	switch(type)
	{
		case 1://Мусорка
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "TRASH");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("МУСОРКА"));
		}
		case 2://Шкаф
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "WAREHOUSE");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("ШКАФ"));
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][1], 1);
			PlayerTDSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", HouseInfo[HouseID[playerid]][hMoney]);
		}
		case 3://Багажник
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "TRUNK");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("БАГАЖНИК"));
		}
		case 5:
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "WAREHOUSE");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("СКЛАД"));
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][1], 1);
			PlayerTDSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", WareHouse[idaofcar[playerid]][wItem][150]);
		}
	}
	for(new i; i < 18; i++)
	{
		PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 2)
		{
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		}
	}
	PlayerTextDrawShow(playerid, Invent[playerid][51]);
	MenuStatus{playerid} = true;
	ShowMenuPage(playerid, 1, type);
	ShowInvPage(playerid, page);
	return 1;
}
stock HideInvMenu(playerid)
{
	if(GetPVarInt(playerid, !"CancelSharpening")) return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	switch( InvTypePlayer{playerid})
	{
		case 1,5: for(new i = 2; i < 7; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
		case 2: for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
		case 3: DestroyPlayerTD(playerid, Invent_Menu[playerid][2]),DestroyPlayerTD(playerid, Invent_Menu[playerid][3]);
	}
	if(ShopOpen[playerid])
	{
		for(new i; i < 30; i++)
		{
			DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i], true);
			DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i], true);
			if(i < 7) DestroyPlayerTD(playerid, Item_Menu_Shop[playerid][i], true);
		}
		ShopOpen[playerid] = false;
	}
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItemLock][i]) PI[playerid][pInvItemLock][i] = false;
		if(i < 18) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 2)
		{
			DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
			DestroyPlayerTD(playerid, InventButton[playerid][i]);
			if(!i)
			{
				InvTypePlayer{playerid} = 0;
				if(HouseID[playerid] != -1) HouseID[playerid] = -1;
				if(TrashID[playerid] != -1) TrashID[playerid] = -1;
				if(idaofcar[playerid]) idaofcar[playerid] = 0;
			}
		}
	}
	DestroyPlayerTD(playerid, Invent[playerid][51]);
	InventStatus{playerid} = true; //костыль
	HideInvPage(playerid);
	HideMenuPage(playerid);
	InventStatus{playerid} = false;
	MenuStatus{playerid} = false;
	return 1;
}
stock UpdateUpgradeAutoTD(playerid, number, carid)
{
	new slot = SearchVehicleName(CarInfo[number][cModel]);
	new boost = SearchBoostForVehicle(carid);
	if(boost != 0) boost -= 20;
	new 
		Float:powerplus = InfoConfigVehicle[slot][Power]*56/100+399.703369+boost,
		Float:stabilityplus = InfoConfigVehicle[slot][Stability]*56/300+399.703369+boost/2,
		Float:velocityplus = InfoConfigVehicle[slot][Velocity]*56/67+399.703369+boost-7,
		Float:maxspeedplus = InfoConfigVehicle[slot][MaxSpeed]*56/410+399.703369+boost+15;
	//power
	if(powerplus > 455.703369) powerplus = 455.703369;
	if(stabilityplus > 455.703369) stabilityplus = 455.703369;
	if(velocityplus > 455.703369) velocityplus = 455.703369;
	if(maxspeedplus > 455.703369) maxspeedplus = 455.703369;
	PlayerTextDrawTextSize(playerid, InvOwnableCar[playerid][22], powerplus, 0.000000);
	PlayerTDSetStringf(playerid, InvOwnableCar[playerid][36],"%i.0",InfoConfigVehicle[slot][Power]+boost);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][36]);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][22]);
	//stability
	PlayerTextDrawTextSize(playerid, InvOwnableCar[playerid][26], stabilityplus, 0.000000);
	PlayerTDSetStringf(playerid, InvOwnableCar[playerid][32],"%i.0",InfoConfigVehicle[slot][Stability]+boost/2);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][32]);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][26]);
	//velocity
	PlayerTextDrawTextSize(playerid, InvOwnableCar[playerid][30], velocityplus, 0.000000);
	PlayerTDSetStringf(playerid, InvOwnableCar[playerid][28],"%i.0",InfoConfigVehicle[slot][Velocity]+boost-7);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][28]);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][30]);
	//maxspeed
	PlayerTextDrawTextSize(playerid, InvOwnableCar[playerid][34], maxspeedplus, 0.000000);
	PlayerTDSetStringf(playerid, InvOwnableCar[playerid][24],"%i.0",InfoConfigVehicle[slot][MaxSpeed]+boost+15);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][24]);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][34]);
}
stock ShowInventory(playerid, bool:cursor = true, page = 1, security=52)
{
	if(InventStatus{playerid} != false || IsPlayerModeEditor[playerid] || MenuStatus{playerid} || Clother[playerid] != -1) return 1;
	InventStatus{playerid} = true;
	if(IsPlayerInHisVehicle(playerid) && GetPlayerState(playerid) == 2) 
	{
		new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
		if(CarInfo[number][cOwnerFamily] != -1) PI[playerid][pInvPos_X] = -51.101684, InvCarOpen[playerid] = false;
		else PI[playerid][pInvPos_X] = 0.0, PI[playerid][pInvPos_Y] = 0.0,InvCarOpen[playerid] = true;
	}
	else if(InventWallet[playerid] != false) PI[playerid][pInvPos_X] = -51.101684, PI[playerid][pInvPos_Y] = 0.0, InvCarOpen[playerid] = false;
	DeletePVar(playerid, !"telephone");
	HideTextDraws(playerid, 1);
	CheckLic(playerid);
	InventStatus{playerid} = true;
	#include modules/TEXTDRAWS/inv/inv
	if(InvCarOpen[playerid] != false)
	{
		if(security == 52)
		{
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			#include modules/TEXTDRAWS/inv/inv_car
			CreateInvCarText(playerid);
			UpdateUpgradeAutoTD(playerid, number, carid);
			for(new i; i < 56; i++) //56
			{
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
				if(i < 16) PlayerTextDrawShow(playerid, Invent[playerid][i]);
			}
			PlayerTextDrawShow(playerid, Invent[playerid][51]);
			//
			if(IsPlayerLauncher(playerid) == -1 && CarInfo[number][cModel] > 611) PlayerTextDrawSetPreviewModel(playerid, InvOwnableCar[playerid][39], InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_OLD]);
			else PlayerTextDrawSetPreviewModel(playerid, InvOwnableCar[playerid][39], CarInfo[number][cModel]);
			PlayerTextDrawSetPreviewVehCol(playerid, InvOwnableCar[playerid][39], CarInfo[number][cColor_1], CarInfo[number][cColor_2]);
			PlayerTextDrawShow(playerid, InvOwnableCar[playerid][39]);
			UpdateSlotAcsOwnable(playerid);
		}
		else
		{
			for(new i; i < 24; i++) PlayerTextDrawShow(playerid, Invent[playerid][i]);
			PlayerTextDrawShow(playerid, Invent[playerid][51]);
		}
	}
	else
	{
		for(new i; i < security; i++) //24 right nety
		{
			PlayerTextDrawShow(playerid, Invent[playerid][i]);
			if(i < 9 && security == 52) UpdateSlotAcs(playerid,i);
		}
		PlayerTextDrawShow(playerid, Invent[playerid][51]);
	}
	if(security != 52) ShowInvSecurity(playerid);
  	CreateButtonInv(playerid);
	ShowInvPage(playerid, page);
    if(cursor != false) SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return SetPlayerChatBubble(playerid, !"Заглянул(а) в карман", COLOR_PURPLE, 10.0, 1500);
}
stock HideInventory(playerid, menu = 0)
{
	if(InventStatus{playerid} != true) return 1;
	if(GetPVarInt(playerid, !"CancelSharpening")) return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	for(new i; i < 56; i++)
	{
		if(i < 2) DestroyPlayerTD(playerid, InventButton[playerid][i]);
	    if(InvCarOpen[playerid] != false)
	    {
			DestroyPlayerTD(playerid, InvOwnableCar[playerid][i]);
			if(i < 11) DestroyPlayerTD(playerid, InvOwnableCarText[playerid][i]);
			if(i < 24 || i == 51) DestroyPlayerTD(playerid, Invent[playerid][i]);
		}
		else
		{
			if(i < 52) DestroyPlayerTD(playerid, Invent[playerid][i]);
			if(i < 8)
			{
				DestroyPlayerTD(playerid, InventAksColor[playerid][i]);
				DestroyPlayerTD(playerid, InventAksEnchant[playerid][i]);
				DestroyPlayerTD(playerid, InventAks[playerid][i]);
			}
		}
	}
	if(IsPlayerOpenInvSecurity[playerid] == true)
	{
		IsPlayerInvSecurity[playerid] = false;
		IsPlayerOpenInvSecurity[playerid] = false;
		InvTypePlayer{playerid} = 0;
		for(new i; i < 40; i++) DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][i]);
	}
	UseStripe[playerid] = false;
	if(!menu)
	{
		InvTypePlayer{playerid} = 0;
		if(HouseID[playerid] != -1) HouseID[playerid] = -1;
		if(TrashID[playerid] != -1) TrashID[playerid] = -1;
		if(idaofcar[playerid]) idaofcar[playerid] = 0;
		CancelSelectTextDraw(playerid);
		ShowSpeedometr(playerid);
 	}
	HideInvPage(playerid);
	HideInventWallet(playerid);
	InvCarOpen[playerid] = false;
	InventStatus{playerid} = false;
	if(InvWeapCive[playerid] != false)
	{
	 	for(new i; i < 7; i++) DestroyPlayerTD(playerid, others[playerid][i]);
        InvWeapCive[playerid] = false;
	}
	InventClick{playerid} = 255;
    return 1;
}
stock UpdateSlotAcs(playerid, slot)
{
	if(slot == 8)
	{
		new skin = GetSkinOfPlayer(playerid);
		new Float:health = PlayerHealthAC[playerid];
		PlayerTDSetStringf(playerid, Invent[playerid][38], "HP: %.0f", health);
		new Float:armour = PI[playerid][pArmour];
		PlayerTDSetStringf(playerid, Invent[playerid][37], "ARM: %.0f", armour);
		if(PI[playerid][pSkin] != GetPlayerSkin(playerid) && TeamDuty{playerid} != false)
		{
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 1649);
			PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 0.000000, 0.000000, 90.000000, 2.000000);
			PlayerTextDrawShow(playerid, Invent[playerid][48]);
			PlayerTextDrawHide(playerid, Invent[playerid][49]);
		}
		else
		{
			if(skin == 74) PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], 0);
			else PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
			if(skin != 18 && skin != 139)
			{
				PlayerTDSetStringf(playerid, Invent[playerid][49], "ID:%i", SearchSkinOrderID(skin));
				PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
				PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
				SetSelectableSkin(playerid);
			}
			PlayerTextDrawShow(playerid, Invent[playerid][48]);
			PlayerTextDrawShow(playerid, Invent[playerid][47]);
			PlayerTextDrawShow(playerid, Invent[playerid][49]);
		}
		CheckModPlayer(playerid);
		return 1;
	}
	SMD(playerid,"updateslotacs");
	DestroyPlayerTD(playerid, InventAksColor[playerid][slot]);
	DestroyPlayerTD(playerid, InventAksEnchant[playerid][slot]);
	if(!AksSlot[playerid][slot])
	{
		PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], 1649);
		PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], 0.000000, 0.000000, 90.000000, 2.000000);
		SetColorUseAcs(playerid, 0, slot);
		return 1;
	}
	new ID = AksSlot[playerid][slot], Float:X, Float:Y;
	PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], GetSyncItem(playerid, AksSlot[playerid][slot]));
   	PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	PlayerTextDrawColor(playerid, InventAks[playerid][slot], 0xFFFFFFFF);
	PlayerTextDrawGetPosEx(playerid, InventAks[playerid][slot], X, Y);
    if(InvAksParams[0][playerid][slot])
    {
        InventAksEnchant[playerid][slot] = CreatePlayerTextDraw(playerid, X+21.0, Y+19.0, "_");
        PlayerTextDrawLetterSize(playerid, InventAksEnchant[playerid][slot], 0.126499, 0.625000);
        PlayerTextDrawTextSize(playerid, InventAksEnchant[playerid][slot], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, InventAksEnchant[playerid][slot], 3);
        PlayerTextDrawColor(playerid, InventAksEnchant[playerid][slot], 0xAAAAAAFF);
        PlayerTextDrawUseBox(playerid, InventAksEnchant[playerid][slot], 0);
        PlayerTextDrawBoxColor(playerid, InventAksEnchant[playerid][slot], 0x80808080);
        PlayerTextDrawSetShadow(playerid, InventAksEnchant[playerid][slot], 0);
        PlayerTextDrawSetOutline(playerid, InventAksEnchant[playerid][slot], 1);
        PlayerTextDrawBackgroundColor(playerid, InventAksEnchant[playerid][slot], 0x00000000);
        PlayerTextDrawFont(playerid, InventAksEnchant[playerid][slot], 2);
        PlayerTextDrawSetProportional(playerid, InventAksEnchant[playerid][slot], 1);
        PlayerTextDrawSetSelectable(playerid, InventAksEnchant[playerid][slot], 0);
		PlayerTDSetStringf(playerid,InventAksEnchant[playerid][slot],"+%i", InvAksParams[0][playerid][slot]);
        PlayerTextDrawShow(playerid, InventAksEnchant[playerid][slot]);
    }
	new color = GetColorID[SearchColorAcs(InvAksColor[playerid][slot])][c_inventslot];
    if(color != -1)
    {
        InventAksColor[playerid][slot] = CreatePlayerTextDraw(playerid, X+17.5, Y+3.5, "Box");
        PlayerTextDrawLetterSize(playerid, InventAksColor[playerid][slot], 0.0, 0.098000);
        PlayerTextDrawTextSize(playerid, InventAksColor[playerid][slot], X+18.5125, 0.0);
        PlayerTextDrawAlignment(playerid, InventAksColor[playerid][slot], 1);
        PlayerTextDrawColor(playerid, InventAksColor[playerid][slot], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, InventAksColor[playerid][slot], 1);
        PlayerTextDrawBoxColor(playerid, InventAksColor[playerid][slot], color);
        PlayerTextDrawSetShadow(playerid, InventAksColor[playerid][slot], 2);
        PlayerTextDrawSetOutline(playerid, InventAksColor[playerid][slot], 0);
        PlayerTextDrawBackgroundColor(playerid, InventAksColor[playerid][slot], 0x000000FF);
        PlayerTextDrawFont(playerid, InventAksColor[playerid][slot], 0);
        PlayerTextDrawSetProportional(playerid, InventAksColor[playerid][slot], 0);
        PlayerTextDrawShow(playerid, InventAksColor[playerid][slot]);
    }
    SetColorUseAcs(playerid, ID, slot);
    return 1;
}
stock SetColorUseAcs(playerid, ID, slot)
{
	if(!CheckUseItem(ID))
	{
		PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x6C5C37FF);
		DestroyPlayerTD(playerid, InventAksColor[playerid][slot]);
	}
	else PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
    PlayerTextDrawColor(playerid, InventAks[playerid][slot], PI[playerid][pAcsCellLock][slot] ? 0x999999FF : 0xFFFFFFFF);
    if(PI[playerid][pAcsCellLock][slot] != 2) PlayerTextDrawSetSelectable(playerid, InventAks[playerid][slot], PI[playerid][pAcsCellLock][slot] ? false : true);
    return PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
}
stock HideInventMenu(playerid)
{
	for(new i; i < 14; i++) 
	{
		if(i < 6) InventMenuButton[playerid][i] = -1;
		DestroyPlayerTD(playerid, InventMenu[playerid][i]);
	}
    return 1;
}
stock HideTextDraws(playerid, next = 0)
{
	if(next != 1 && InventStatus{playerid}) HideInventory(playerid);
	if(next != 2 && donateopen{playerid}) HideDonateTD(playerid);
	if(next != 3 && bumboxopen{playerid}) HideBoom(playerid);
	if(next != 4 && RouletteOpen{playerid}) HideRoulette(playerid);
	if(next != 5 && GetPVarType(playerid, !"telephone") != PLAYER_VARTYPE_NONE) HidePhone(playerid);
	if(next != 6 && GetPVarInt(playerid, !"pSpeed") == 1) HideSpeedometr(playerid);
	if(next != 7 && MenuStatus{playerid}) HideInvMenu(playerid);
	if(next != 8 && TradeOpen{playerid})
	{
		HideTrade(playerid);
		HideTrade(TradeID[playerid]);
		CancelTrade(playerid);
	}
	if(next != 9 && MeriaOpen[playerid]) HideMeria(playerid);
	if(next != 10 && CraftOpened[playerid]) HideCraft(playerid);
	if(next != 11 && Upgrade_Open[playerid] != false) HideSharpening(playerid);
	if(next != 12 && ContainerTakeOpen[playerid]) ContainerCloseTake(playerid);
	if(next != 13) HideReferalsInviteTD(playerid);
	if(next != 14) EatSystem(playerid, 1);
	if(next != 15) HideActionCar(playerid);
	if(next != 16 && BillOpen{playerid}) CloseBill(playerid);
	if(next != 17) HideWeaponMenu(playerid);
	if(next != 18) SelectCellar(playerid, 1);
	return 1;
}
stock ShowDonateTD(playerid)
{
	if(donateopen{playerid} != false) return 0;
	donateopen{playerid} = true;
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		HidePlayerHud(playerid);
		UpdateBrowser(playerid, 52, 0);
		UpdateBrowser(playerid, 86, 128);
		UpdateBrowser(playerid, 73, 128);
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"DonationShop\"]');");
		ExecuteEventf(6, playerid, svelte, "window.executeEvent('event.donationshop.ShopCountDonate', '[[ %i ]]');", PI[playerid][pVirMoney]);
		SetFocusBrowser(playerid, svelte, true);
	}
	else
	{
		#include modules/TEXTDRAWS/donate
		if(PI[playerid][pInvLang])
		{
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][31], FixText("РУЛЕТКА"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][30], FixText("ПОКУПКА~n~МАШИНЫ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][29], FixText("СМЕНИТЬ~n~ПОЛ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][28], FixText("РЕДКИЕ~n~СУНДУКИ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][27], FixText("НАВЫК~n~ВОДИТЕЛЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][26], FixText("ADD VIP"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][25], FixText("ОСТАЛЬНОЕ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][24], FixText("ТВИН~n~ТУРБО"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][23], FixText("ВЕЧНЫЙ~n~НАВЫК~n~ВОЖДЕНИЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][22], FixText("СКИЛЛЫ~n~ОРУЖИЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][21], FixText("СКИНЫ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][20], FixText("6~n~ЯЧЕЕК~n~ИНВЕНТАРЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][17], FixText("ДЕНЬГИ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][16], FixText("ИГРОВОЙ~n~ОПЫТ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][15], FixText("ТЮНИНГ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][14], FixText("АКСЕССУАРЫ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][13], FixText("ЛИЦЕНЗИИ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][12], FixText("СЕМЕЙНАЯ~n~РЕПУТАЦИЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][11], FixText("5-ЗНАЧНЫЙ~n~НОМЕР"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][10], FixText("ДОНАТ_МАГАЗИН"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][9], FixText("СМЕНИТЬ_ИМЯ"));
			PlayerTextDrawSetString(playerid, Donate_Player[playerid][8], FixText("СНЯТЬ_ВАРН"));
		}
		for(new i; i < 88; i++)
		{
			TextDrawShowForPlayer(playerid, Donate_Global[i]);
			if(i < 45) PlayerTextDrawShow(playerid, Donate_Player[playerid][i]);
		}
		SCM(playerid, COLOR_LIGHTRED, !"Чтобы закрыть донат меню, используйте: {FFFFFF}'ESC'");
		SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	}
	return 1;
}
stock HideDonateTD(playerid)
{
	if(donateopen{playerid} != true) return 0;
	donateopen{playerid} = false;
	if(IsPlayerInitCef(playerid) != 0 && IsPlayerLauncher(playerid) == -1) return 0;
    for(new i; i < 88; i++)
    {
        TextDrawHideForPlayer(playerid, Donate_Global[i]);
        if(i < 45) DestroyPlayerTD(playerid, Donate_Player[playerid][i]);
        if(i < 3) DestroyPlayerTD(playerid, Donate_Text[playerid][i]);
    }
    Donate_Select[playerid] = -1;
	Donate_Type[playerid] = -1;
	return CancelSelectTextDraw(playerid);
}
stock RefreshInv(playerid, i, debug_id=-1)
{
	if(debug_id != -1 && debuggga[playerid] != false) SCMf(playerid, -1, ">- %i", debug_id);
	PI[playerid][pInvItem][i] = 0;
	InvPlayerParams[0][playerid][i] = 0;
	InvPlayerParams[1][playerid][i] = 0;
	PI[playerid][pInvItemAmount][i] = 0;
	PI[playerid][pInvItemUID][i] = 0;
	InvPlayerColor[playerid][i] = 0;
    InvSlotUpdate(playerid, i);
	player_InvSave{playerid} = 6;
    return 1;
}
stock UpdateVisubleAcsSlot(playerid, slot, bool:t)
{
	switch(slot)
	{
		case 18,23: //up new
		{
			slot++;
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			new i = SearchSlotsForOwnableCar(number,10);
			if(i == -1) return 1;
			if(!t)
			{
				UseModCar[playerid] = false;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][i], 0x333333FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
			}
			else
			{
				UseModCar[playerid] = true;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][i], 0xD57272FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
			}
		}
		case 19,22:
		{
			slot++;
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			new i = SearchSlotsForOwnableCar(number);
			if(i == -1) return 1;
			if(!t)
			{
				UseModCar[playerid] = false;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][i], 0x333333FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
			}
			else
			{
				UseModCar[playerid] = true;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][i], 0xD57272FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
			}
		}
		case 20:
		{
			slot++;
			if(!t)
			{
				UseModCar[playerid] = false;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][38], 0x333333FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][38]);
			}
			else
			{
				UseModCar[playerid] = true;
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][38], 0xD57272FF);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][38]);
			}
		}
		default:
		{
			if(slot > 8 || InvCarOpen[playerid]) return 1;
			if(!t)
			{
				PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
				PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
				if(AksSlot[playerid][slot]) SetColorUseAcs(playerid, AksSlot[playerid][slot], slot);
				TempAcsID[playerid][slot] = false;
				//снятие
			}
			else
			{
				if(PI[playerid][pModSlot]) return 1;
				PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0xD57272FF);
				PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
				TempAcsID[playerid][slot] = true;
				//одевание
			}
		}
	}
	return 1;
}
stock CheckInvItem(playerid, type)
{
	if(!InventStatus{playerid} || InventClick{playerid} == 255 || InventWallet[playerid]) return 0;
	new itemID = PI[playerid][pInvItem][InventClick{playerid}];
	switch(type)
	{
		case 0:
		{
			switch(ItemsInfo[itemID][ItemView])
			{
				case 1..8: UpdateVisubleAcsSlot(playerid, ItemsInfo[itemID][ItemView]-1, false);
				case 19..21,23,24: if(InvCarOpen[playerid]) UpdateVisubleAcsSlot(playerid, ItemsInfo[itemID][ItemView]-1, false);
				case 9:
				{
					if(InvCarOpen[playerid]) return 1;
					PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0x333333FF);
					SetSelectableSkin(playerid);
					CheckModPlayer(playerid);
				}
			}
			switch(itemID)
			{
				case 1177..1200: CheckSlotGun(playerid, 0);
			}
		}
		case 1:
		{
			switch(ItemsInfo[itemID][ItemView])
			{
				case 1..8: UpdateVisubleAcsSlot(playerid, ItemsInfo[itemID][ItemView]-1, true);
				case 19..21,23,24: if(InvCarOpen[playerid]) UpdateVisubleAcsSlot(playerid, ItemsInfo[itemID][ItemView]-1, true);
				case 9:
				{
					if(InvCarOpen[playerid]) return 1;
					PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0xD57272FF);
					PlayerTextDrawSetSelectable(playerid, Invent[playerid][48], 1);
					PlayerTextDrawShow(playerid, Invent[playerid][48]);
				}
			}
			switch(itemID)
			{
				case 1177..1200: CheckSlotGun(playerid, 1);
			}
		}
	}
	return 1;
}
stock PlayerTextDrawGetPosEx(playerid, PlayerText:textdrawid, &Float:fX, &Float:fY = 0.0)
{
    if(PlayerText:textdrawid != PlayerText:INVALID_TEXT_DRAW) return PlayerTextDrawGetPos(playerid, textdrawid, fX, fY);
    return 0;
}
stock PlayerTextDrawSetPosEx(playerid, PlayerText:textdrawid, Float:fX, Float:fY)
{
    if(PlayerText:textdrawid != PlayerText:INVALID_TEXT_DRAW) return PlayerTextDrawSetPos(playerid, textdrawid, fX, fY);
    return 0;
}
stock MenuSlotUpdate(playerid, td, type)
{
	if(!MenuStatus{playerid}) return 0;
	if(type == 4) UpdateCell(playerid, GetInvMenuID(playerid, td, false)+10, td, true, type);
	UpdateCell(playerid, GetInvMenuID(playerid, td, false), td, true, type);
	return 1;
}
stock InvSlotUpdate(playerid, slot)
{
	if(InventPage[playerid] != GetPageInv(slot, true) || (!InventStatus{playerid} && !MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid])) return 0;
	UpdateCell(playerid, GetInvID(playerid, slot, true), slot, false);
	return 1;
}
stock GetTimeForInventory(time, str[], bool:eng=true)
{
	str[0] = EOS;
	if(floatround((time-global_time) / 60 / 60 / 24) > 1) f(str, 20, "%i%s", floatround((time-global_time) / 60 / 60 / 24, floatround_ceil), eng != false ? (" DAY") : ("дня(ей)"));
	else if(floatround((time-global_time) / 60 / 60) > 1) f(str, 20, "%i%s", floatround((time-global_time) / 60 / 60, floatround_ceil), eng != false ? (" MIN") : ("минут(а)"));
	else f(str, 20, "%i%s", floatround((time-global_time), floatround_ceil), eng != false ? (" SEC") : ("секунд(а)"));
}
stock UpdateCell(playerid, td_id, slot, bool:invmenu, type=-1)//(playerid, PlayerText:text, PlayerText:text2, PlayerText:text3, ID, IDAmount, params, color___, bool:menu, slot)
{
	static
		PlayerText:text,
		PlayerText:text2,
		PlayerText:text3,
		Float:X,
		Float:Y,
		itemID,
		itemAmount,
		itemColor,
		itemParams;

	if(!invmenu)
	{
		text = InventSlot[playerid][td_id],\
		text2 = InventSlotAmount[playerid][td_id],\
		text3 = InventEnchant[playerid][td_id],\
			itemID = PI[playerid][pInvItem][slot],\
			itemAmount = PI[playerid][pInvItemAmount][slot],\
			itemColor = InvPlayerColor[playerid][slot],\
			itemParams = InvPlayerParams[0][playerid][slot];
		//
		PlayerTextDrawSetPreviewRot(playerid, text, ItemsInfo[itemID][ItemPosX], ItemsInfo[itemID][ItemPosY], ItemsInfo[itemID][ItemPosZ], ItemsInfo[itemID][ItemPosC]);
		PlayerTextDrawSetPreviewModel(playerid, text, GetSyncItem(playerid,itemID)); //triazov
		if(ItemsInfo[itemID][ItemView] == 10) PlayerTextDrawSetPreviewVehCol(playerid, text, 0, 0);
		if(slot >= PI[playerid][pInvCell])
		{
			PlayerTextDrawBackgroundColor(playerid, text, 0x1A1A1AFF);
			PlayerTextDrawSetSelectable(playerid, text, false);
		}
		if(!ShopOpen[playerid]) PlayerTextDrawSetSelectable(playerid, text, PI[playerid][pInvItemLock][slot] ? false : true);
		PlayerTextDrawColor(playerid, text, PI[playerid][pInvItemLock][slot] ? 0x666666FF : 0xFFFFFFFF);
	}
	else
	{
		text = Invent_Menu_Page[playerid][slot],\
		text2 = Invent_Menu_PageAmount[playerid][slot],\
		text3 = Invent_Menu_PageEnchant[playerid][slot];

		if(type != 6)
		{
			if(type != 4 && TradeOpen{playerid} != true)
			{
				if(!MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid]) return 1;
			}
		}
		switch(type)
		{
			case 1://мусорка
			{
				itemID = TrashInfo[TrashID[playerid]][TrashItem][slot];
				itemAmount = TrashInfo[TrashID[playerid]][TrashItemAmount][slot];
				itemParams = InvTrashParams[0][TrashID[playerid]][slot];
				itemColor = InvTrashColor[TrashID[playerid]][slot];
			}
			case 2://шкаф
			{
				itemID = HouseInfo[HouseID[playerid]][hItem][slot];
				itemAmount = HouseInfo[HouseID[playerid]][hItemAmount][slot];
				itemParams = InvHouseParams[0][HouseID[playerid]][slot];
				itemColor = InvHouseColor[HouseID[playerid]][slot];
			}
			case 3://багажник
			{
				itemID = TrunkInfo[idaofcar[playerid]][TrunkItem][slot];
				itemAmount = TrunkInfo[idaofcar[playerid]][TrunkItemAmount][slot];
				itemParams = TrunkInfo[idaofcar[playerid]][TrunkItemSharpening][slot];
				itemColor = TrunkInfo[idaofcar[playerid]][TrunkItemColor][slot];
			}
			case 4://трейд
			{
				itemID = PI[playerid][pTradeItem][slot];
				itemAmount = PI[playerid][pTradeItemAmount][slot];
				itemParams = InvTradeParams[0][playerid][slot];
				itemColor = InvTradeColor[playerid][slot];
			}
			case 5://warehouse
			{
				itemID = WareHouse[idaofcar[playerid]][wItem][slot];
				itemAmount = WareHouse[idaofcar[playerid]][wItemAmount][slot];
				itemParams = InvWareHouseParams[0][idaofcar[playerid]][slot];
				itemColor = InvWareHouseColor[idaofcar[playerid]][slot];
			}
			case 6: itemID = ShopData[ShopUID{playerid}][shopItem][slot];
		}
		if(type == 4)
		{
			if(itemID)
			{
				PlayerTextDrawSetSelectable(playerid, text, true);
				PlayerTextDrawColor(playerid, text, 0xFFFFFFFF);
			}
			else
			{
				PlayerTextDrawSetSelectable(playerid, text, false);
				PlayerTextDrawColor(playerid, text, 0x999999FF);
			}
		}
		switch(itemID)
		{
			case 74:
			{
				PlayerTextDrawSetPreviewRot(playerid, text, ItemsInfo[74][ItemPosX], ItemsInfo[74][ItemPosY], ItemsInfo[74][ItemPosZ], ItemsInfo[74][ItemPosC]);
				PlayerTextDrawSetPreviewModel(playerid, text, 0);
			}
			default:
			{
				PlayerTextDrawSetPreviewRot(playerid, text, ItemsInfo[itemID][ItemPosX], ItemsInfo[itemID][ItemPosY], ItemsInfo[itemID][ItemPosZ], ItemsInfo[itemID][ItemPosC]);
				PlayerTextDrawSetPreviewModel(playerid, text, GetSyncItem(playerid, itemID));
			}
		}
		if(ItemsInfo[itemID][ItemView] == 12) PlayerTextDrawSetPreviewVehCol(playerid, text, 0, 0);
	}
	//EOS td
	InventTD_EOS(playerid, text, text2);
	InventTD_EOS(playerid, text, text3);
	//
	if(ShopOpen[playerid] != false && invmenu != false)
	{
		str_1[0] = EOS;
		switch(ShopData[ShopUID{playerid}][shopType])
		{
			case SHOP_TYPE_BUSINESS: f(str_1, sizeof(str_1), "$9999");
			case SHOP_TYPE_FAMILY: f(str_1, sizeof(str_1), "%i", ShopData[ShopUID{playerid}][shopCost][slot]);
			case SHOP_TYPE_RESPECTS: f(str_1, sizeof(str_1), "%i EXP", ShopData[ShopUID{playerid}][shopCost][slot]);
			case SHOP_TYPE_STATIC_COST: f(str_1, sizeof(str_1), "$%i", ShopData[ShopUID{playerid}][shopCost][slot]);
		}
		PlayerTextDrawSetString(playerid, text2, str_1);
	}
	else
	{
		switch(ItemsInfo[itemID][ItemView])
		{
			case 1..8:
			{
				if(itemParams)
				{
					str_1[0] = EOS, f(str_1, sizeof(str_1), "+%i", itemParams);
					PlayerTextDrawSetString(playerid,text3,str_1);
					PlayerTextDrawShow(playerid, text3);
				}
				PlayerTextDrawBackgroundColor(playerid, text, 0x333333FF);
				//SCMf(playerid, -1, "%i %i", GetColorID[SearchColorAcs(itemColor)][c_inventslot], ItemsInfo[itemID][ItemColor]);
				if(GetColorID[SearchColorAcs(itemColor)][c_inventslot] != -1)// && ItemsInfo[itemID][ItemColor] == 1)
				{
					PlayerTextDrawGetPosEx(playerid, text, X, Y);
					PlayerTextDrawSetPosEx(playerid, text2, X+20, Y+3.500008);
					PlayerTextDrawSetString(playerid, text2, "Box");
					PlayerTextDrawLetterSize(playerid, text2, 0.000000, 0.107900);
					PlayerTextDrawTextSize(playerid, text2, X+20.8125, 0.0);
					PlayerTextDrawAlignment(playerid, text2, 1);
					PlayerTextDrawColor(playerid, text2, 0xFFFFFFFF);
					PlayerTextDrawUseBox(playerid, text2, 1);
					PlayerTextDrawBoxColor(playerid, text2, GetColorID[SearchColorAcs(itemColor)][c_inventslot]);
					PlayerTextDrawSetShadow(playerid, text2, 2);
					PlayerTextDrawSetOutline(playerid, text2, 0);
					PlayerTextDrawBackgroundColor(playerid, text2, 0x000000FF);
					PlayerTextDrawFont(playerid, text2, 0);
					PlayerTextDrawSetProportional(playerid, text2, 0);
				}
				else if(ItemsInfo[itemID][ItemColor] != 0) PlayerTextDrawBackgroundColor(playerid, text, ItemsInfo[itemID][ItemColor]);
			}
			case 9:
			{
				PlayerTDSetStringf(playerid, text2, "ID:%i", SearchSkinOrderID(ItemsInfo[itemID][ItemID]));
				PlayerTextDrawColor(playerid, text2, 0xFFFFFFFF);
				PlayerTextDrawShow(playerid, text2);
			}
			case 20: TextRedactor(playerid, text, text2, "TUNING");
			case 256:
			{
				if(itemParams > 99)
				{
					PlayerTDSetStringf(playerid, text3, "t.%i", itemParams);
					PlayerTextDrawShow(playerid, text3);
				}
			}
			case 1781..1785:
			{
				if(!itemParams) itemParams = 1;
				else if(itemParams > 3) itemParams = 3;
				PlayerTDSetStringf(playerid, text3, "%i LVL", itemParams);
				PlayerTextDrawShow(playerid, text3);
			}
			case 27:
			{
				CheckLic(playerid);
				if(invmenu != true)
				{
					GetTimeForInventory(itemParams, str_2);
					PlayerTDSetStringf(playerid, text2, "%s", str_2);
					PlayerTextDrawShow(playerid, text2);
				}
			}
			case 312:
			{
				if(PI[playerid][pChestTime])
				{
					if(PI[playerid][pChestTime] < 60)
					{
						PlayerTDSetStringf(playerid, text2, "%i SEC", PI[playerid][pChestTime]);
						PlayerTextDrawShow(playerid, text2);
					}
					else
					{
						PlayerTDSetStringf(playerid, text2, "%i MIN", PI[playerid][pChestTime]/60);
						PlayerTextDrawShow(playerid, text2);
					}
				}
			}
			case 341:
			{
				if(PI[playerid][pChestTimeDonate])
				{
					if(PI[playerid][pChestTimeDonate] < 60)
					{
						PlayerTDSetStringf(playerid, text2, "%i SEC", PI[playerid][pChestTimeDonate]);
						PlayerTextDrawShow(playerid, text2);
					}
					else
					{
						PlayerTDSetStringf(playerid, text2, "%i MIN", PI[playerid][pChestTimeDonate]/60);
						PlayerTextDrawShow(playerid, text2);
					}
				}
			}
			default:
			{
				switch(itemID)
				{
					case 1052: TextTuning(playerid, text, text2, "~p~Premium");
					case 803: TextTuning(playerid, text, text2, "~y~Launch");
					case 658: TextTuning(playerid, text, text2, "~r~Twin~n~Turbo");
					case 4935: TextTuning(playerid, text, text2, "~r~Twin~n~Turbo 2");
					case 657: TextTuning(playerid, text, text2, "SUPREME", 1);
					case 619: TextTuning(playerid, text, text2, "~r~HALLOWEEN");
					case 620: TextTuning(playerid, text, text2, "~y~CLASSIC");
					case 621: TextTuning(playerid, text, text2, "~y~FUTURE");
					case 622: TextTuning(playerid, text, text2, "~y~CYBERPUNK");
					case 623: TextTuning(playerid, text, text2, "~y~FUTURE~n~TAXI");
					case 1136:
					{
						if(!itemParams) itemParams = 1;
						PlayerTDSetStringf(playerid, text3, "%i LVL", itemParams);
						PlayerTextDrawShow(playerid, text3);
					}
					default:
					{
						if(itemAmount > 1)
						{
							PlayerTDSetStringf(playerid, text2, "%i", itemAmount);
							PlayerTextDrawShow(playerid, text2);
						}
					}
				}
			}
		}
	}
	PlayerTextDrawShow(playerid, text);
	PlayerTextDrawShow(playerid, text2);
	PlayerTextDrawShow(playerid, text3);
	return 1;
}
stock TextRedactor(playerid, PlayerText:text, PlayerText:text2, const name[])
{
	static Float:X, Float:Y;
    PlayerTextDrawGetPosEx(playerid, text, X, Y);
	PlayerTextDrawSetPosEx(playerid, text2, 12.75+X, 0.525+Y);
	PlayerTextDrawColor(playerid, text2, 0x000000FF);
	PlayerTextDrawSetString(playerid, text2, name);
	PlayerTextDrawAlignment(playerid, text2, 2);
	PlayerTextDrawSetShadow(playerid, text2, 0);
	PlayerTextDrawSetOutline(playerid, text2, 0);
	PlayerTextDrawFont(playerid, text2, 1);
	PlayerTextDrawShow(playerid, text2);
	return 1;
}
stock TextTuning(playerid, PlayerText:text, PlayerText:text2, const name[], supreme = 0)
{
	static Float:X, Float:Y;
    if(PlayerText:text != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawGetPosEx(playerid, text, X, Y);
    if(supreme) {
        PlayerTextDrawSetPosEx(playerid, text2, 12.75+X, 11.5+Y);
        PlayerTextDrawColor(playerid, text2, 0xAAAAAAFF);
        PlayerTextDrawBackgroundColor(playerid, text2, 0x00000000);
        PlayerTextDrawFont(playerid, text2, 1);
        PlayerTextDrawSetShadow(playerid, text2, 0);
    }
    else PlayerTextDrawSetPosEx(playerid, text2, 12.75+X, 9.625+Y), PlayerTextDrawSetShadow(playerid, text2, 1);
    PlayerTextDrawSetString(playerid, text2, name);
    PlayerTextDrawAlignment(playerid, text2, 2);
    PlayerTextDrawSetOutline(playerid, text2, 0);
   	PlayerTextDrawShow(playerid, text2);
	return 1;
}
stock InvText(const string[])
{
	static result[16];
	result[0] = EOS;
	for(new i; i < 16; i++)
	{
		switch(string[i])
		{
			case 'а', 'А': result[i] = 'A';
			case 'б', 'Б': result[i] = 'Ђ';
			case 'в', 'В': result[i] = 'B';
			case 'г', 'Г': result[i] = '‚';
			case 'д', 'Д': result[i] = 'ѓ';
			case 'е', 'Е': result[i] = 'E';
			case 'ё', 'Ё': result[i] = 'E';
			case 'ж', 'Ж': result[i] = '„';
			case 'з', 'З': result[i] = '3';
			case 'и', 'И': result[i] = '…';
			case 'й', 'Й': result[i] = '†';
			case 'к', 'К': result[i] = 'K';
			case 'л', 'Л': result[i] = '‡';
			case 'м', 'М': result[i] = 'M';
			case 'н', 'Н': result[i] = 'H';
			case 'о', 'О': result[i] = 'O';
			case 'п', 'П': result[i] = 'Њ';
			case 'р', 'Р': result[i] = 'P';
			case 'с', 'С': result[i] = 'C';
			case 'т', 'Т': result[i] = 'T';
			case 'у', 'У': result[i] = 'Y';
			case 'ф', 'Ф': result[i] = 'Ѓ';
			case 'х', 'Х': result[i] = 'X';
			case 'ц', 'Ц': result[i] = '‰';
			case 'ч', 'Ч': result[i] = 'Ќ';
			case 'ш', 'Ш': result[i] = 'Ћ';
			case 'щ', 'Щ': result[i] = 'Љ';
			case 'ъ', 'Ъ': result[i] = 'ђ';
			case 'ы', 'Ы': result[i] = '‘';
			case 'ь', 'Ь': result[i] = '’';
			case 'э', 'Э': result[i] = '“';
			case 'ю', 'Ю': result[i] = '”';
   			case 'я', 'Я': result[i] = '•';
			default: result[i] = string[i];
		}
	}
	return result;
}
stock CreateAcsMenu(playerid, i)
{
	if(!InventStatus{playerid}) return 0;
	HideInventMenu(playerid);
	Valik(playerid);
	new Float:X, Float:Y,number = GetVehicleID(GetPlayerVehicleID(playerid));
	if(InvCarOpen[playerid])
	{
		PlayerTextDrawGetPosEx(playerid, InvOwnableCar[playerid][i], X, Y);
		if(ItemsInfo[CarInfo[number][cSlotItem][i]][ItemView] == 20) UseMenuModCar[playerid] = true, UseModCar[playerid] = false;
	}
	else PlayerTextDrawGetPosEx(playerid, InventAks[playerid][i], X, Y);

	static Button_[5][16];
	if(!PI[playerid][pInvLang])
	{
		if(CheckUseItem(AksSlot[playerid][i]))
		{
			Button_[0] = "TAKE";
			Button_[1] = "INFO";
			Button_[2] = "EDIT";
			Button_[3] = "CLOSE";
			Button_[4] = "NO";
			//InventMenuButton[playerid][0] = 0; //Use
			InventMenuButton[playerid][0] = 4; //TAKE
			InventMenuButton[playerid][1] = 3; //Info
			InventMenuButton[playerid][2] = 6; //edit
			InventMenuButton[playerid][3] = -1; //Close
			InventMenuButton[playerid][4] = -1; //Close
		}
		else
		{
			if(InvCarOpen[playerid])
			{
				if(!CarInfo[number][cObjectUsed][i]) Button_[0] = "INSTALL";
				else Button_[0] = "EDIT";
			}
			else Button_[0] = "USE";
			Button_[1] = "TAKE";
			Button_[2] = "INFO";
			Button_[3] = "EDIT";
			Button_[4] = "CLOSE";
			InventMenuButton[playerid][0] = 0; //Use
			InventMenuButton[playerid][1] = 4; //TAKE
			InventMenuButton[playerid][2] = 3; //Info
			InventMenuButton[playerid][3] = 6; //edit
			InventMenuButton[playerid][4] = -1; //Close
		}
	}
	else
	{
		if(CheckUseItem(AksSlot[playerid][i]))
		{
			Button_[0] = "СНЯТЬ";
			Button_[1] = "ИНФОРМАЦИЯ";
			Button_[2] = "РЕДАКТИРОВАТЬ";
			Button_[3] = "ЗАКРЫТЬ";
			Button_[4] = "NO";
			InventMenuButton[playerid][0] = 4; //TAKE
			InventMenuButton[playerid][1] = 3; //Info
			InventMenuButton[playerid][2] = 6; //edit
			InventMenuButton[playerid][3] = -1; //Close
			InventMenuButton[playerid][4] = -1; //Close
		}
		else
		{
			if(InvCarOpen[playerid])
			{
				if(!CarInfo[number][cObjectUsed][i]) Button_[0] = "УСТАНОВИТЬ";
				else Button_[0] = "РЕДАКТИРОВАТЬ";
			}
			else Button_[0] = "ИСПОЛЬЗОВАТЬ";
			Button_[1] = "СНЯТЬ";
			Button_[2] = "ИНФОРМАЦИЯ";
			Button_[3] = "РЕДАКТИРОВАТЬ";
			Button_[4] = "ЗАКРЫТЬ";
			InventMenuButton[playerid][0] = 0; //Use
			InventMenuButton[playerid][1] = 4; //TAKE
			InventMenuButton[playerid][2] = 3; //Info
			InventMenuButton[playerid][3] = 6; //edit
			InventMenuButton[playerid][4] = -1; //Close
		}
	}

	InventClick{playerid} = i+MAX_SLOT_INV;
	CreateTDInvMenu(playerid, Button_, X, Y);
	return 1;
}
stock Bogdan(playerid, i)
{
    switch(i)
    {
		case 0: UseItem(playerid, InventClick{playerid});
		case 1: DropItem(playerid, InventClick{playerid});
		case 2: SplitItem(playerid, InventClick{playerid});
		case 3: InfoItem(playerid, InventClick{playerid});
		case 4: TakeAcs(playerid, InventClick{playerid}-MAX_SLOT_INV);
		case 5: SetPVarInt(playerid, !"rentClickSlotID", InventClick{playerid}), SPD(playerid, 25674, DIALOG_STYLE_INPUT, !"{FF6666}Аренда аксессуаров", !"{FF6666}-{ffffff} Вы действительно хотите сдать в аренду аксессуар {FF6666} {ffffff}?\n\n{cccccc}Введите в строку ниже ID игрока, которому хотите сдать аксессуар в аренду.", !"Далее", !"Назад");
		case 6: 
		{
			new bizEnter = BizEntered[playerid];
			if(bizEnter != -1)
			{
				if(InfoBusinesses[BizInfo[bizEnter][bState]][BState] == 9)
				{
					player_Global_Int[playerid][22] = InventClick{playerid}-MAX_SLOT_INV;
					if(!player_InvAks_CustomPosition[playerid][player_Global_Int[playerid][22]])
					{
						SPD(playerid, 26021, DIALOG_STYLE_MSGBOX, !"Подшив аксессуаров", \
							!"{FFFFFF}В магазине аксессуаров сотрудники магазина за небольшую плату помогут вам\n\
							подшить любой аксессуар под ваш вкус! Вы можете изменить кость крепления (голова/нога/рука/плечо и т.д),\n\
							позиции и размеры. Это ещё больше поможет вам выделиться из толпы и показать свою уникальность.\n\n\
							{FF6347}Позиции аксессуара сохраняются только на ту одежду, на которую он был подшит. Если вы захотите сменить\n\
							свой образ, вам будет необходимо выполнить подшив повторно на новую одежду!\n\n\
							{33AA33}Стоимость услуги, установленая владельцем магазина: $100000.\n\n\
							{FFFFFF}- Хотите приступить?", !"Выбрать", !"Отмена");
					}
					else SPD(playerid, 26023, DIALOG_STYLE_TABLIST, !"Выберите действие", !"{FFFFFF}[1] Установить новые позиции\t{33AA33}$100000\n{FFFFFF}[2] Установить стандартные позиции\t{33AA33}$50000", !"Выбрать", !"Отмена");
					HideInventory(playerid);
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в магазине аксессуаров! Используйте /gps - ближайший магазин аксессуаров");
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в магазине аксессуаров! Используйте /gps - ближайший магазин аксессуаров");
		}
	}
	Valik(playerid);
    return 1;
}
stock Valik(playerid)
{
	new slot = InventClick{playerid};
	if(slot == 255) return 0;
	UseMenuModCar[playerid] = false;
	if(slot < MAX_SLOT_INV) CheckInvItem(playerid, 0);
    HideInventMenu(playerid);
    InventClick{playerid} = 255;
    return 1;
}
enum info_invmenu
{
	type_invmenu,
	bool:func_invmenu,
	name_invmenu_eng[6],
	name_invmenu_rus[16],
	valik_click_invmenu
};
static const InfoInvMenu[][info_invmenu] = {
	{1, true, "PUT", "НАДЕТЬ", 0},
	{1, true, "RENT", "АРЕНДА", 5},
	{1, true, "DROP", "ВЫБРОСИТЬ", 1},
	{1, true, "INFO", "ИНФОРМАЦИЯ", 3},
	{1, true, "CLOSE", "ЗАКРЫТЬ", -1},

	{1, false, "PUT", "НАДЕТЬ", 0},
	{1, false, "DROP", "ВЫБРОСИТЬ", 1},
	{1, false, "INFO", "ИНФОРМАЦИЯ", 3},
	{1, false, "CLOSE", "ЗАКРЫТЬ", -1},

	{2, false, "USE", "ИСПОЛЬЗОВАТЬ", 0},
	{2, false, "DROP", "ВЫБРОСИТЬ", 1},
	{2, false, "INFO", "ИНФОРМАЦИЯ", 3},
	{2, false, "CLOSE", "ЗАКРЫТЬ", -1},

	{2, true, "USE", "ИСПОЛЬЗОВАТЬ", 0},
	{2, true, "DROP", "ВЫБРОСИТЬ", 1},
	{2, true, "SPLIT", "РАЗДЕЛИТЬ", 2},
	{2, true, "INFO", "ИНФОРМАЦИЯ", 3},
	{2, true, "CLOSE", "ЗАКРЫТЬ", -1},

	{3, false, "DROP", "ВЫБРОСИТЬ", 1},
	{3, false, "INFO", "ИНФОРМАЦИЯ", 3},
	{3, false, "CLOSE", "ЗАКРЫТЬ", -1},

	{3, true, "DROP", "ВЫБРОСИТЬ", 1},
	{3, true, "SPLIT", "РАЗДЕЛИТЬ", 2},
	{3, true, "INFO", "ИНФОРМАЦИЯ", 3},
	{3, true, "CLOSE", "ЗАКРЫТЬ", -1}
};
stock AddInvMenu(playerid, type, str_inv[][], bool:func=false, bool:isdrop, bool:issplit)
{
	new one = -1,
		last = -1;
	for(new i; i < sizeof(InfoInvMenu); i++) //search
	{
		if(InfoInvMenu[i][type_invmenu] == type && InfoInvMenu[i][func_invmenu] == func)
		{
			if(one == -1) one = i;
			else last = i;
		}
	}
	if(one != -1 && last != -1) //safe
	{
		//30
		//34
		new size_of = last-one;
		for(new i; i < 6; i++)
		{
			InventMenuButton[playerid][i] = -1;
			if(i < size_of+1)
			{
				if(InfoInvMenu[i+one][valik_click_invmenu] == 1 && !isdrop) continue;
				if(InfoInvMenu[i+one][valik_click_invmenu] == 2 && !issplit) continue;
				//str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", (!PI[playerid][pInvLang] ? InfoInvMenu[i+one][name_invmenu_eng] : InfoInvMenu[i+one][name_invmenu_rus]));
				if(!PI[playerid][pInvLang]) SetString(str_inv[i], InfoInvMenu[i+one][name_invmenu_eng]);
				else SetString(str_inv[i], InfoInvMenu[i+one][name_invmenu_rus]);
				InventMenuButton[playerid][i] = InfoInvMenu[i+one][valik_click_invmenu];
			}
		}
	}
}
stock CreateInvMenu(playerid, td, type)
{
	if(InventWallet[playerid]) return 1;
	Valik(playerid);
	new 
		Amount = PI[playerid][pInvItemAmount][td],
		Button_[5][16] = {{"NO", ...}, ...},
		bool:isacs = true;
	if(ItemsInfo[PI[playerid][pInvItem][td]][ItemView] > 0 && ItemsInfo[PI[playerid][pInvItem][td]][ItemView] < 9) isacs = false;
	switch(ItemsInfo[PI[playerid][pInvItem][td]][ItemView])
	{
	    case 19..21,23,24: if(!InvCarOpen[playerid]) type = 4;
		case 1..8,1781..1785:
		{
			if(!isacs) Amount = 1;
			if(InvCarOpen[playerid] || PI[playerid][pModSlot]) type = 4;
		}
	}
	new bool:isdrop = true,
		bool:issplit = true;
	if(CheckMenuItem(playerid, PI[playerid][pInvItem][td], true) != 0) isdrop = false;
	else if(PI[playerid][pInvItemAmount][td] > 1) issplit = true;
	if(type < 1 || type > 3) type = 3;

	if(type == 1) AddInvMenu(playerid, type, Button_, !isacs ? true : false, isdrop, issplit);
	else AddInvMenu(playerid, type, Button_, Amount == 1 ? false : true, isdrop, issplit);

	new Float:X, Float:Y;
	PlayerTextDrawGetPosEx(playerid, InventSlot[playerid][GetInvID(playerid, td, true)], X, Y);
	CreateTDInvMenu(playerid, Button_, X, Y);
	return 1;
}
stock CreateTDInvMenu(playerid, const Button_[][], Float:X, Float:Y)
{
	for(new i; i < 14; i++) DestroyPlayerTD(playerid, InventMenu[playerid][i]);
	//
	InventMenu[playerid][5] = CreatePlayerTextDraw(playerid, X+35.299987, Y+14.25, "usebox");
	//
	new size_button;
	for(new i; i < 5; i++)
	{
		if(GetString(Button_[i], "NO")) continue;
		size_button++;
		//button name
		InventMenu[playerid][i+8] = CreatePlayerTextDraw(playerid, X+12.75, Y+14.583344*size_button, InvText(Button_[i]));
		PlayerTextDrawLetterSize(playerid, InventMenu[playerid][i+8], 0.159033, 0.818733);
		PlayerTextDrawTextSize(playerid, InventMenu[playerid][i+8], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, InventMenu[playerid][i+8], 2);
		PlayerTextDrawColor(playerid, InventMenu[playerid][i+8], 0xCCCCCCFF);
		PlayerTextDrawUseBox(playerid, InventMenu[playerid][i+8], 0);
		PlayerTextDrawBoxColor(playerid, InventMenu[playerid][i+8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventMenu[playerid][i+8], 0);
		PlayerTextDrawSetOutline(playerid, InventMenu[playerid][i+8], 1);
		PlayerTextDrawBackgroundColor(playerid, InventMenu[playerid][i+8], 0x00000000);
		PlayerTextDrawFont(playerid, InventMenu[playerid][i+8], 1);
		PlayerTextDrawSetProportional(playerid, InventMenu[playerid][i+8], 1);
		PlayerTextDrawSetSelectable(playerid, InventMenu[playerid][i+8], 0);
		PlayerTextDrawShow(playerid, InventMenu[playerid][i+8]);

		//button click
		InventMenu[playerid][i] = CreatePlayerTextDraw(playerid, X-7.25, Y+14.583344*size_button, "LD_SPAC:WHITE");
		PlayerTextDrawLetterSize(playerid, InventMenu[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InventMenu[playerid][i], 40.000000, 13.333334);
		PlayerTextDrawAlignment(playerid, InventMenu[playerid][i], 1);
		if(GetString(Button_[i], "CLOSE") || GetString(Button_[i], "ЗАКРЫТЬ")) PlayerTextDrawColor(playerid, InventMenu[playerid][i], 0xA43E3EFF);
		else PlayerTextDrawColor(playerid, InventMenu[playerid][i], 0x333333FF);
		PlayerTextDrawUseBox(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InventMenu[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventMenu[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, InventMenu[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, InventMenu[playerid][i], 4);
		PlayerTextDrawSetProportional(playerid, InventMenu[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InventMenu[playerid][i], 1);
		PlayerTextDrawShow(playerid, InventMenu[playerid][i]);
	}
	for(new i=6; i < 8; i++)
	{
		if(i == 7) InventMenu[playerid][7] = CreatePlayerTextDraw(playerid, X-13.8125, Y+12.75, "particle:shad_bike");
		else if(i == 6) InventMenu[playerid][6] = CreatePlayerTextDraw(playerid, X+28.6875, Y+12.75, "particle:shad_bike");
		PlayerTextDrawAlignment(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawColor(playerid, InventMenu[playerid][i], 0x00000070);
		PlayerTextDrawUseBox(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InventMenu[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventMenu[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, InventMenu[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, InventMenu[playerid][i], 4);
		PlayerTextDrawSetProportional(playerid, InventMenu[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InventMenu[playerid][i], 0);
		PlayerTextDrawShow(playerid, InventMenu[playerid][i]);
	}
	//
	PlayerTextDrawLetterSize(playerid, InventMenu[playerid][5], 0.000000, 1.616563*(size_button));
	PlayerTextDrawTextSize(playerid, InventMenu[playerid][5], X-10, 0.000000);

	PlayerTextDrawTextSize(playerid, InventMenu[playerid][7], 10.625000, 14.583336*(size_button));
	PlayerTextDrawLetterSize(playerid, InventMenu[playerid][7], 0.480000, 1.120000);

	PlayerTextDrawLetterSize(playerid, InventMenu[playerid][6], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, InventMenu[playerid][6], 10.625000, 14.583336*(size_button));

	PlayerTextDrawAlignment(playerid, InventMenu[playerid][5], 1);
	PlayerTextDrawColor(playerid, InventMenu[playerid][5], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, InventMenu[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid, InventMenu[playerid][5], 0x000000AA);
	PlayerTextDrawSetShadow(playerid, InventMenu[playerid][5], 2);
	PlayerTextDrawSetOutline(playerid, InventMenu[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, InventMenu[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, InventMenu[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, InventMenu[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, InventMenu[playerid][5], 0);
	PlayerTextDrawShow(playerid, InventMenu[playerid][5]);
	return 1;
}
//new Iterator: InvPlayerItem[MAX_SLOT_INV]<MAX_PLAYERS>;
stock InventorySorting(playerid)
{
	if(GetPVarInt(playerid, !"InventorySorting") > global_time) return 1;
    SetPVarInt(playerid, !"InventorySorting", global_time + 10);
	new item[MAX_SLOT_INV] = {-1, ...}, count[MAX_SLOT_INV], sharpening2[MAX_SLOT_INV],UID_1[MAX_SLOT_INV], color_[MAX_SLOT_INV],
		sharpening2_[MAX_SLOT_INV], item_count;
	static IterCount[MAX_SLOT_INV] = {-1, ...};
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		IterCount[item_count] = -1;
	    if(PI[playerid][pInvItem][i] != 0)
	    {
			IterCount[item_count] = i;
	        item[ IterCount[item_count] ] = PI[playerid][pInvItem][i];
	        count[ IterCount[item_count] ] = PI[playerid][pInvItemAmount][i];
	        sharpening2[ IterCount[item_count] ] = InvPlayerParams[0][playerid][i];
			sharpening2_[ IterCount[item_count] ] = InvPlayerParams[1][playerid][i];
			UID_1[ IterCount[item_count] ] = PI[playerid][pInvItemUID][i];
			color_[ IterCount[item_count] ] = InvPlayerColor[playerid][i];
			PI[playerid][pInvItem][ IterCount[item_count] ] = 0;
			PI[playerid][pInvItemAmount][ IterCount[item_count] ] = 0;
			InvPlayerColor[playerid][ IterCount[item_count] ] = 0;
			InvPlayerParams[0][playerid][ IterCount[item_count] ] = 0;
			InvPlayerParams[1][playerid][ IterCount[item_count] ] = 0;
			PI[playerid][pInvItemUID][ IterCount[item_count] ] = 0;
			InvSlotUpdate(playerid, IterCount[item_count] );
			item_count++;
	    }
	}
	if(item_count != 0)
	{
        for(new i = 312; i < 400; i++)
        {
            for(new j; j < item_count; j++)
            {
                if(IterCount[j] == -1) continue;
                if(item[IterCount[j]] != i) continue;
                InvAdd(playerid, item[IterCount[j]], count[IterCount[j]], 0, sharpening2[IterCount[j]], UID_1[IterCount[j]], color_[IterCount[j]], sharpening2_[IterCount[j]]);
                IterCount[j] = -1;
            }
        }
        foreach(new i: itemSkin)
        {
            for(new j; j < item_count; j++)
            {
                if(IterCount[j] == -1) continue;
                if(item[IterCount[j]] != i) continue;
                InvAdd(playerid, item[IterCount[j]], count[IterCount[j]], 0, sharpening2[IterCount[j]], UID_1[IterCount[j]], color_[IterCount[j]], sharpening2_[IterCount[j]]);
                IterCount[j] = -1;
            }
        }
        foreach(new i: itemVehicle)
        {
            for(new j; j < item_count; j++)
            {
                if(IterCount[j] == -1) continue;
                if(item[IterCount[j]] != i) continue;
                InvAdd(playerid, item[IterCount[j]], count[IterCount[j]], 0, sharpening2[IterCount[j]], UID_1[IterCount[j]], color_[IterCount[j]], sharpening2_[IterCount[j]]);
                IterCount[j] = -1;
            }
        }
        foreach(new i: itemAccessories)
        {
            for(new j; j < item_count; j++)
            {
                if(IterCount[j] == -1) continue;
                if(item[IterCount[j]] != i) continue;
                InvAdd(playerid, item[IterCount[j]], count[IterCount[j]], 0, sharpening2[IterCount[j]], UID_1[IterCount[j]], color_[IterCount[j]], sharpening2_[IterCount[j]]);
                IterCount[j] = -1;
            }
        }
        foreach(new i: itemUnknown)
        {
            for(new j; j < item_count; j++)
            {
                if(IterCount[j] == -1) continue;
                if(item[IterCount[j]] != i) continue;
                InvAdd(playerid, item[IterCount[j]], count[IterCount[j]], 0, sharpening2[IterCount[j]], UID_1[IterCount[j]], color_[IterCount[j]], sharpening2_[IterCount[j]]);
                IterCount[j] = -1;
            }
        }
    }
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	Valik(playerid);
	player_InvSave{playerid} = 3;
	return 1;
}
static const ModificationInfo[][2] = {
	{772,163},
	{773,68},
	{779,68},
	{774,214},
	{775,154},
	{776,206},
	{785,206},
	{777,125},
	{778,98},
	{780,200},
	{787,200},
	{781,120},
	{783,42},
	{786,162}
};
stock IsValidModification(iditem)
{
	for(new i; i < sizeof(ModificationInfo); i++)
	{
		switch(iditem)
		{
			case 787,788,1168..1174,2549..2552,2612..2614,2670..2672,2684,1140,2719,2720: return 0;
			default: if(iditem == ModificationInfo[i][0]) return ModificationInfo[i][1];
		}
	}
	return -1;
}
stock UseSkin(playerid)
{
	if(GetPlayerState(playerid) == 2) return SCM(playerid,COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете взаимодействовать со скином находясь в машине!");
	new click = InventClick{playerid};
    CheckInvItem(playerid, 0);
	if(click == 255)
	{
		if(PI[playerid][pModSlot])//Снятие модификации
		{
		    if(PI[playerid][pSkin] == 18) return 1;
			if(!GetInvSlot(playerid, PI[playerid][pModSlot])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять модификацию.");
			InvAdd(playerid, PI[playerid][pModSlot], 1, 0);
			PI[playerid][pModSlot] = 0;
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			UpdatePlayerDataInt(playerid, "ModSlot", PI[playerid][pModSlot]);
			UpdateSlotAcs(playerid, 8);
			for(new i; i < 6; i++)
			{
				PI[playerid][pAcsCellLock][i] = 0;
				UpdateSlotAcs(playerid, i);
			}
			str_1[0] = EOS, f(str_1, sizeof(str_1), "снял модификацию %s[1]", ItemsInfo[PI[playerid][pModSlot]][ItemName]);
            //aml(16, playerid, "", str_1);
			SetPlayerSkin(playerid, PI[playerid][pSkin]);
			CheckItem(playerid);
			return 1;
		}
		if(!GetInvSlot(playerid,SearchSkin(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять одежду."); //triazov
		if(PI[playerid][pSkin] != 18 && PI[playerid][pSkin] != 139)
		{
            if(TeamDuty{playerid} || InJob[playerid]) return 1;
			str_1[0] = EOS, f(str_1, sizeof(str_1), "снял скин %s[1]", ItemsInfo[SearchSkin(playerid)][ItemName]);
            //aml(16, playerid, "", str_1);
            InvAdd(playerid, SearchSkin(playerid), 1, 0);//triazov
            if(PI[playerid][pSex]) PI[playerid][pSkin] = 18, SetPlayerSkinEx(playerid, 18);
            else PI[playerid][pSkin] = 139, SetPlayerSkinEx(playerid, 139);
            SMD(playerid,"debug useskin #1");
    	}
	}
	else
	{
		if(click >= MAX_SLOT_INV) return 0;
		new item = PI[playerid][pInvItem][click];
		if(ItemsInfo[item][ItemView] == 9)
		{
			if(TeamDuty{playerid} || InJob[playerid]) return 1;
			if(PI[playerid][pSkin] != 18 && PI[playerid][pSkin] != 139)
			{
				PI[playerid][pInvItem][click] = SearchSkin(playerid);
				PI[playerid][pInvItemAmount][click] = 1;
			}
			else RefreshInv(playerid, click);
			PI[playerid][pSkin] = ItemsInfo[item][ItemID], SetPlayerSkinEx(playerid, ItemsInfo[item][ItemID]);
			TogglePlayerControllable(playerid, true);
			SMD(playerid,"debug useskin #2");
		}
		else if(ItemsInfo[item][ItemView] == 12)
		{
			if(IsValidModification(item) != -1)
			{
				if(PI[playerid][pSkin] == 18) return 1;
				if(PI[playerid][pModSlot])//замена модификации
				{
					PI[playerid][pInvItem][InventClick{playerid}] = PI[playerid][pModSlot];
					PI[playerid][pModSlot] = item;
					CheckModPlayer(playerid);
				}
				else
				{
					PI[playerid][pModSlot] = item;
					RefreshInv(playerid, InventClick{playerid});
					RemoveRc(playerid), DeleteBumBox(playerid);
					for(new i; i < 6; i++)
					{
						PI[playerid][pAcsCellLock][i] = 1;
						UpdateSlotAcs(playerid, i);
					}
				}
				UpdatePlayerDataInt(playerid, "ModSlot", PI[playerid][pModSlot]);
				UseItemAttached(playerid, -1);
				return 1;
			}
		}
	}
	SetPlayerSkinEx(playerid, GetPlayerSkin(playerid));
	CheckModPlayer(playerid);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	UpdatePlayerDataInt(playerid, "Skin", PI[playerid][pSkin]);
	return 1;
}
stock UseSert(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Активировать сертификат можно только на Автобазаре!");
    if(!IsValidNumberCars(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!"),SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
	new item = PI[playerid][pInvItem][InventClick{playerid}];
	new tuning, Float:pos[4];
	InvAdd(playerid, item, -1);
	switch(item)
    {
        case 595: tuning = 2;
		case 342..356,1084..1096: tuning = 1;
	}
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	GetPlayerFacingAngle(playerid,pos[3]);
	new id = Iter_Free(OWNABLECARS), i = random(sizeof(StandartCarParking)-1);
	CreateOwnableCar(ItemsInfo[item][ItemID], StandartCarParking[i][0], StandartCarParking[i][1], StandartCarParking[i][2], StandartCarParking[i][3], PN(playerid), GetCarPrice(ItemsInfo[item][ItemID]));
	new carid = OwnableCar[id],number = GetVehicleID(carid);
	switch(tuning)
	{
		case 1: //launch
		{
			LaunchInstall(carid);
			CarInfo[number][cSlotItem][6] = 803;
		}
		case 2: //premium
		{
			//PremiumInstall(carid);
			//CarInfo[number][cSlotItem][6] = 1052;
		}
	}
	SetVehicleToRespawn(carid);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "активировал сертификат %s[1]", ItemsInfo[item][ItemName]);
	//aml(16, playerid, "", str_1);
	J_SetVehiclePos(carid, pos[0]-4, pos[1], pos[2]+1);
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Транспорт создан не забывайте /park для парковки транспорта.");
 	str_1[0] = EOS,
	f(str_1, sizeof(str_1), "\n \nПоздравляем с получением: {96c99c}автомобиля %s{FFFFFF}.\n", InfoConfigVehicle[SearchVehicleName(ItemsInfo[item][ItemID])][Model_Name]);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", str_1, "Спасибо", "");
	if(GetIntCars(playerid) >= ValidNumberCars(playerid)) SafeRemoveCar(number,number);
	SaveInventory(playerid,0),CancelSelectTextDraw(playerid);
	return HideInventory(playerid,0);
}
stock UseChest(playerid, type)
{
	switch(type)
	{
		case 1:
		{
			if(PI[playerid][pChestTime]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Время после прошлого использования ещё не прошло!");
			if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Открывать этот сундук можно только с 3 уровня!");
			if(!GetInvSlot(playerid, 313) && !GetInvSlot(playerid, 314) && !GetInvSlot(playerid, 315)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
			new roulette;
			switch(random(101))
			{
				case 0..69:
				{
					roulette = 313;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили бронзовую рулетку!");
				}
				case 70..90:
				{
					roulette = 314;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили серебряную рулетку!");
				}
				case 91..100:
				{
					roulette = 315;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили золотую рулетку!");
				}
			}
			InvAdd(playerid, roulette, 1, 0);
			PI[playerid][pChestTime] = 7200;
			UpdatePlayerDataInt(playerid, "ChestTime", 7200);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "активировал сундук рулетки %s[1]", ItemsInfo[roulette][ItemName]);
            //aml(16, playerid, "", str_1);
		}
		case 2:
		{
			if(PI[playerid][pChestTimeDonate]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Время после прошлого использования ещё не прошло!");
			if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Открывать этот сундук можно только с 3 уровня!");
			if(!GetInvSlot(playerid, 313) && !GetInvSlot(playerid, 314) && !GetInvSlot(playerid, 315)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
			new roulette;
			switch(random(101))
			{
				case 0..49:
				{
					roulette = 314;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили серебряную рулетку!");
				}
				case 50..100:
				{
					roulette = 315;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили золотую рулетку!");
				}
			}
			InvAdd(playerid, roulette, 1, 0);
			PI[playerid][pChestTimeDonate] = 14400;
			UpdatePlayerDataInt(playerid, "ChestTimeDonate", 14400);
		}
	}
	return 1;
}
stock Eat(playerid, eat)
{
	switch(eat)
	{
	    case 0:
		{
	        if(!GetInvCount(playerid, 329)) return SCM(playerid, COLOR_RED, !"У тебя нет чипсов!");
			InvAdd(playerid, 329, -1);
			f(str_1, 48, "%s скушал(а) пачку чипсов", PN(playerid));
	        ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	        if(Fullness{playerid} <= 75) GiveFullness(playerid, 25);
	        else SetFullness(playerid, 100);
		}
	    case 1:
		{
	        if(!GetInvCount(playerid, 358)) return SCM(playerid, COLOR_RED, !"У тебя нет жаренной рыбы!");
			InvAdd(playerid, 358, -1);
			f(str_1, 49, "%s скушал(а) жаренную рыбу", PN(playerid));
	        ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	        if(Fullness{playerid} <= 75) GiveFullness(playerid, 25);
	        else SetFullness(playerid, 100);

		}
	}
	return 1;
}

stock UseAzCoins(playerid)
{
	new click = InventClick{playerid};
	if(PI[playerid][pInvItemAmount][click] == 1)
	{
	    InvAdd(playerid, 806, -1);
	    GiveDonate(playerid, 1);
	}
	else if(PI[playerid][pInvItemAmount][click] > 1)
	{
		SetPVarInt(playerid, !"ClickGun", click);
		SPD(playerid, 440, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите использовать", !"Принять", !"Отмена");
	}
	return 1;
}

stock UseWeapon(playerid)
{
    if(player_InGreenZone{playerid} != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете достать оружие в зеленной зоне");
	new click = InventClick{playerid}, gun;
	new item = PI[playerid][pInvItem][click];
	str_1[0] = EOS;
	switch(item)
	{
	    case 794: gun = 6;
	    case 1053: gun = 24;
	    case 1054: gun = 23;
	    case 1055: gun = 25;
        case 1057: gun = 29;
        case 1058: gun = 30;
        case 1059: gun = 31;
        case 1060: gun = 33;
	}
	if(PI[playerid][pInvItemAmount][click] == 1)
	{
	    InvAdd(playerid, item, -1);
	    GivePlayerWeapon(playerid, gun, 1);
	    J_ApplyAnimation(playerid, !"RIFLE", "RIFLE_load", 4.1, 0, 0, 0, 0, 0, 0);
		SetPlayerChatBubble(playerid, !"Достал(а) оружие из кармана", COLOR_PURPLE, 10.0, 1500);
		str_2[0] = EOS, f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы достали из кармана '%s'", ItemsInfo[item][ItemName]);
		SCM(playerid, COLOR_VALIK, str_1);
	}
	else if(PI[playerid][pInvItemAmount][click] > 1)
	{
        SetPVarInt(playerid, !"ClickGun", click);
		SPD(playerid, 441, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите использовать", !"Принять", !"Отмена");
	}
	return 1;
}
stock GetPlayerSearchHouse(playerid)
{
	new Float:Distance, Float:Distance_ = 100000.0, bizid3 = -1;
	for(new i=200; i < OWNABLEHOUSES; i++)
	{
		Distance = GetPlayerDistanceFromPoint(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
		if(Distance < Distance_) bizid3 = i, Distance_ = Distance;
	}
	return bizid3;
}
stock GetPlayerHousePos(playerid, Float:radius = 2.0)                                                                                                                                                                                                                                                                                                                                   					//bу Sаnуа Dыsа
{
	new house = -1,
		house_entered = HouseEntered[playerid],
		world = GetPlayerVirtualWorld(playerid);

	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(!GetString(HouseInfo[i][hOwner], PN(playerid))) continue;
	    if(house_entered != -1 && world == (i+50))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 100.0, HouseInfo[house_entered][hExit_X], HouseInfo[house_entered][hExit_Y], HouseInfo[house_entered][hExit_Z]))
			{
				house = i;
				break;
			}
			else continue;
	    }
	    else if(world == 0 && house_entered == -1)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, radius, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]))
			{
				house = i;
				break;
			}
			else continue;
	    }
	}
	return house;
}
stock GetPlayerBusinessPos(playerid, Float:radius = 2.0)                                                                                                                                                                                                                                                                                                                                   					//bу Sаnуа Dыsа
{
	new biz = -1,
		biz_entered = BizEntered[playerid],
		world = GetPlayerVirtualWorld(playerid);

	for(new i; i < OWNABLEBIZES; i++)
	{
		if(!GetString(BizInfo[i][bOwner], PN(playerid)) && !GetString(BizInfo[i][bZam], PN(playerid))) continue;
	    if(biz_entered != -1 && world == (i+100))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 100.0, BizInfo[biz_entered][bExit_X], BizInfo[biz_entered][bExit_Y], BizInfo[biz_entered][bExit_Z]))
			{
				biz = i;
				break;
			}
			else continue;
	    }
	    else if(world == 0 && biz_entered == -1)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, radius, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]))
			{
				biz = i;
				break;
			}
			else continue;
	    }
	}
	return biz;
}
/*stock UsePropertyObject(playerid, slot, item)
{
	new house = GetPlayerHousePos(playerid, 20.0);
	new biz = GetPlayerBusinessPos(playerid, 20.0);
	if(house == -1 && biz == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Устанавливать предметы можно в радиусе 20 метров от вашей недвижимости (дом или бизнес) или внутри недвижимости.");
	new Float:x, Float:y, Float:z;
	new model = ItemsInfo[item][ItemID];
	GetPlayerPos(playerid, x, y, z);
	SetPVarInt(playerid, !"use_property_object_slot", slot);
	SetPVarInt(playerid, !"use_property_object_item", item);
	if(house != -1)
	{
		SetPVarInt(playerid, !"use_property", house);
		SetPVarInt(playerid, !"editobject", 1);
	}
	else if(biz != -1)
	{
		SetPVarInt(playerid, !"use_property", biz);
		SetPVarInt(playerid, !"editobject", 2);
	}
	SetPVarInt(playerid, !"use_property_object_id", CreateDynamicObject(model, x, y+1.5, z, 0, 0, 0));
	EditDynamicObject(playerid, GetPVarInt(playerid, !"use_property_object_id"));
	SCM(playerid, COLOR_LIGHTBLUE, "Вы поставили объект. Установите нужную позицию и сохраните нажатием на иконку дискеты (отменить установку: клавиша ESCAPE).");
	return 1;
}*/
static const UseItemID[] = {
	1789, 1790,2659,2661,2662,2663,2664,2665,2666,2667,2668,630,631,632,633,768,\
	615,614,613,629,3114,
	800,801,802,804,805,\
	1066,1067,1068,1069,1070,1071,642,643,644,645,646,647,648,1306,1307,3105,3106,3107,3108,3109,3110,3111
};
stock CheckUseItem(item)
{
	for(new i; i < sizeof UseItemID; i++) if(UseItemID[i] == item) return 0;
	return 1;
}
stock UseItem(playerid, slot, itemid=-1)
{
	if(IsPlayerModeEditor[playerid] || UseStripe[playerid]) return 0;
	new item, number = GetVehicleID(GetPlayerVehicleID(playerid));
	if(slot < MAX_SLOT_INV) item = PI[playerid][pInvItem][slot];
    if(slot >= MAX_SLOT_INV || itemid != -1) //slot inside inv
	{
		if(InvCarOpen[playerid]) 
		{
			item = CarInfo[number][cSlotItem][slot-MAX_SLOT_INV];
			switch(ItemsInfo[item][ItemView])
			{
				case 19..21,23,24:
				{
					PutAcs(playerid, ItemsInfo[item][ItemView]-1);
					return 5;
				}
			}
		}
		else
		{
			item = AksSlot[playerid][slot-MAX_SLOT_INV];
			if(ItemsInfo[item][ItemID] == 12652 || ItemsInfo[item][ItemID] == 12653)
			{
				if(OBJECT_SLEGAN[playerid] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас в руке уже есть инструмент!");
				UseAksSlot_3{playerid} = !UseAksSlot_3{playerid};
				if(UseAksSlot_3{playerid} != false) 
				{
					RemovePlayerAttachedObject(playerid, ItemsInfo[item][ItemView]-1);
					SetPlayerAttachedObject(playerid, ItemsInfo[item][ItemView]-1, ItemsInfo[item][ItemID], 6, 0.053000, 0.047000, 0.018999, 101.800003, 1.299999, 3.999996, 1.0, 1.0, 1.0);
				}
				else CheckItem(playerid);
				return 5;
			}
			switch(ItemsInfo[item][ItemUID])
			{
				case 5028: EnableGPSForPlayer(playerid,1805.9238,-2053.0334,13.5607);
				case 3114: GivePlayerWeapon(playerid, 26, 100);
				case 2659..2668: 
				{
					J_ApplyAnimation(playerid, !"RIFLE", "RIFLE_load", 4.1, 0, 0, 0, 0, 0, 0);
					SetPlayerChatBubble(playerid, !"Достал(а) оружие из кармана", COLOR_PURPLE, 10.0, 1500);
					SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы достали из кармана '%s'", ItemsInfo[item][ItemName]);
					GivePlayerWeapon(playerid, 6, 1);
				}
				case 630:
				{
					if(IsPlayerLauncher(playerid) == -1)
					{
						SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Данный аксессуар доступен только с лаунчера Limonchyk Games!");
						return 5;
					}
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					PlVeh(playerid, 15882, X, Y, Z, A);
				}
				case 631..633:
				{
					if(IsPlayerLauncher(playerid) == -1) return SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Данный аксессуар доступен только с лаунчера Limonchyk Games!");
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					PlVeh(playerid, 15883, X, Y, Z, A);
				}
				case 768: SPD(playerid, 1016, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите ид игрока которого хотите напугать", !"Принять", !"Отмена");
				case 615: callcmd::photo(playerid);
				case 614: callcmd::leyka(playerid);
				case 613: callcmd::remkey(playerid);
				case 629: callcmd::boom(playerid);
				case 800,801,802,804,805: UseRadioVehicle(playerid, ItemsInfo[item][ItemID]);
				case 1066..1071: GivePlayerWeapon(playerid, 8, 1);
				case 642..648,1306,1307,3105..3111: CreateBalloon(playerid,item);
			}
		}
	}
	//inv inside
	switch(ItemsInfo[item][ItemView])
	{
		case 103:
		{
			new id = Iter_Random(TREASURE);

			SetPlayerVisualGangZone(playerid, HitchInfo[id][Klad_X], HitchInfo[id][Klad_Y]);
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}На вашей карте отображено примерное место клада!");
		}
		case 102: SCMf(playerid, COLOR_VALIK, "[Информация]{ffffff} Вам успешно было добавлена уникальная анимация '%s' сроком: Бессрочно", ItemsInfo[item][ItemName]);
		case 105: player_Global_Int[playerid][0] = item, SPD(playerid, 10501, DIALOG_STYLE_INPUT, !"{aaaaaa}Имя спутника", !"{FFFFFF}Введите имя вашего будущего спутника", !"Выбрать", !"Отмена");
		case 3113:
		{
			new house = GetPlayerHousePos(playerid, 20.0);
			if(house == -1 || GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Устанавливать предметы можно в радиусе 20 метров от вашей недвижимости (дом)");
			if(HouseInfo[house][hTableNalog] != false) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}У этого дома уже установлена именное поместье!");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			SetPVarInt(playerid, !"use_property_object_id", CreateDynamicObject(2727, x, y+1.5, z, 0, 0, 0));
			SetPVarInt(playerid, !"editobject", 3);
			SetPVarInt(playerid, !"use_property", house);
			EditDynamicObject(playerid, GetPVarInt(playerid, !"use_property_object_id"));
			SCM(playerid, COLOR_LIGHTBLUE, !"[Информация] {FFFFFF}Вы начали установку 'Именное Поместье'");
		}
		case 2686: /*2957*/ SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы действительно хотите использовать улучшение?\n\n{D2772C}После использования все ваши пополнения счёта будут\nувеличены в {2CD273}4 раза {D2772C}срок действия эффекта: {2CD273}24 часа\n\n{D2492C}Внимание! Эффект не будет действовать во время\nпроведения акций со стороны администрации сервера!", !"Выбрать", !"Отмена");
		case 1781..1785:
		{
			UseStripe[playerid] = true;
			player_Global_Int[playerid][88] = slot;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{FFFFFF}Сейчас вам нужно выбрать аксессуар, на который вы хотите пришить нашивку.\n\n\
			{cccccc}Обратите внимание, что пришив нашивку вы больше никогда не сможете снять её с аксессуара.\n\
			Чтобы отменить установку нашивки, нажмите на предмет нашивки еще раз или закройте инвентарь.",!"Закрыть", !"");
		}
		case 25:
		{
			InvAdd(playerid, item, -1);
			item = Iter_Random(itemVehicle);
			InvAdd(playerid, item, 1);
			str_1[0] = EOS, f(str_1, sizeof(str_1),"%s", ItemsInfo[item][ItemName]);
			strdel(str_1, 0, 11);
			SCMAll(COLOR_GREEN, (str_f("%s испытал удачу при открытии ларца 'Запечатанный Сертефикат' и выиграл Авто: %s", PN(playerid), str_1)));
			return 1;
		}
		case 26:
		{
			InvAdd(playerid, item, -1);
			item = Iter_Random(itemSkin);
			InvAdd(playerid, item, 1);
			str_1[0] = EOS, f(str_1, sizeof(str_1),"%s", ItemsInfo[item][ItemName]);
			strdel(str_1, 0, 6);
			SCMAll(COLOR_GREEN, (str_f("%s испытал удачу при открытии ларца 'Запечатанная одежда' и выиграл Скин: %s", PN(playerid), str_1)));
			return 1;
		}
		case 1..8,19..21,23,24: return PutAcs(playerid, ItemsInfo[item][ItemView]-1);
		case 9,12: return UseSkin(playerid);
		case 10: return UseSert(playerid);
		case 11: return UsePhone(playerid, item);
		case 22: return UsePlayerBox(playerid, item);
		case 50,51: { } //UsePropertyObject(playerid, slot, item);
		case 52:
		{
			if(InventWallet[playerid] || InvCarOpen[playerid]) return 1;
			SetPVarFloat(playerid, "InvPos_X", PI[playerid][pInvPos_X]);
			SetPVarFloat(playerid, "InvPos_Y", PI[playerid][pInvPos_Y]);
			InventWallet[playerid] = true;
			UpdateInventory(playerid, true);
			for(new i; i < PI[playerid][pInvCell]; i++)
			{
				switch(ItemsInfo[PI[playerid][pInvItem][i]][ItemView])
				{
					case 27: PI[playerid][pInvItemLock][i] = false;
					default: PI[playerid][pInvItemLock][i] = true;
				}
				InvSlotUpdate(playerid,i);
			}
			PlayerTextDrawHide(playerid, Invent[playerid][3]);
			PlayerTextDrawHide(playerid, Invent[playerid][4]);
			#include modules\TEXTDRAWS\inv\inv_wallet
			UpdateCellForWallet(playerid);
			return 1;
		}
	}
	switch(ItemsInfo[item][ItemUID]) //inv
	{
		case 5240: GivePlayerAddVIP(playerid, forever);
		case 5241: GivePlayerAddVIP(playerid, unixtime(30));
		case 791:
		{
			if(!CheckPhones(playerid)) return SCM(playerid, 0xae433dFF, ">>>>{FFFFFF} - У вас нет мобильного телефона!");
			new num = InvPlayerParams[0][playerid][slot];
			if(num > 99)
			{
				SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы успешно вставили SIM карту. Её номер телефона: %i", num);
				PI[playerid][pTelNum] = num;
				return UpdatePlayerDataInt(playerid, "TelNum", num);
			}
			SetPVarInt(playerid, !"VideoCardSlot", slot);
			SPD(playerid, 9208, DIALOG_STYLE_MSGBOX, !"Sim Card", !"{FFFFFF}Вы хотите зарегистрировать новую сим карту?\n{cccccc}(зарегистрированая сим-карта будет добавлена в ваш инвентарь)", !"Да", !"Отмена");
		}
        case 1136:
        {
			new hId = HouseEntered[playerid], type = -1;
			if(hId == -1 || !GetString(PlayerName[playerid], HouseInfo[hId][hOwner])) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы должны находиться в собственном подвале для улучшения!");
			for(new i; i < sizeof MiningBTCPos; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, MiningBTCPos[i][0], MiningBTCPos[i][1], MiningBTCPos[i][2])) type = i;
			SetPVarInt(playerid, !"VideoCardSlot", slot);
			player_Global_Int[playerid][15] = type;
			if(type == -1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, -1652.9841,-249.7372,14.1484)) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы должны находиться у стола улучшения/стойки для установки видеокарт в подвале с вентиляцией!");
				return SPDf(playerid, 25031, DIALOG_STYLE_MSGBOX, !"Улучшение видеокарты", !"Улучшить", !"Закрыть",\
				"{FFFF00}Сейчас уровень производительности видеокарты: %d из 10.\n\
				{FFFF00}За один час работы майнит: %f BTC.\n\n\
				{FFFFFF}Чем больше уровень производительности, тем больше криптовалюты может намайнить видеокарта.\n\
				Чтобы её улучшить до следующего уровня, необходима смазка для видеокарты,\n\
				её можно скрафтить в подвале дома или купить на центральном рынке.\n\n\
				{cccccc}Шанс вероятности улучшения видеокарты:\n\
				На 1-м уровне - 90%%\nНа 2-м уровне - 80%%\nНа 3-м уровне - 70%%\nНа 4-м уровне- 50%%\nНа 5-м уровне - 40%%\nНа 6-м уровне - 30%%\nНа 7-м уровне - 20%%\nНа 8-м уровне - 10%%\nНа 9-м уровне - 5%%\n\n{FFFFFF}Чтобы её улучшить до следующего уровня, необходима смазка для видеокарты, а так же 25 BTC,\nеё можно скрафтить в подвале дома или купить на центральном рынке.\n\nВы хотите улучшить выбранную видеокарту?",\
				InvPlayerParams[0][playerid][slot], GetMiningBTC(InvPlayerParams[0][playerid][slot]));
			}
			else
			{
				str_1[0] = EOS;
				for(new count = 0 + 4 * type; count < (0 + 4 * (type + 1)); count++) strcat(str_1, (str_f(!MiningBTC[hId][count][card_level] ? "{ffffff}Полка %d | Свободна\n":"{cccccc}Полка %d | Занята\n", count - 4 * type + 1)));
				return SPD(playerid, 25032, DIALOG_STYLE_LIST, !"На какую полку установить видеокарту?", str_1, !"Выбрать", !"Закрыть");
			}
	   	}
	    case 1053..1060,794: UseWeapon(playerid);
		case 312: UseChest(playerid, 1);
		case 799: callcmd::domkrat(playerid);
        case 313: ShowRoulette(playerid,0);
        case 314: ShowRoulette(playerid,1);
        case 315: ShowRoulette(playerid,2);
        case 1135: ShowRoulette(playerid,3);
		case 318: SPD(playerid, 8254, DIALOG_STYLE_INPUT, !"Телефонная книга", !"{FFFFFF}Введите ID игрока чтобы узнать его номер", !"Выбрать", !"Отмена");
		case 323: callcmd::fillcar(playerid);
		case 324: callcmd::repcar(playerid);
		case 325: SPD(playerid, 1017, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите ид цвет через запятую (0,0)", !"Принять", !"Отмена");
		case 327: callcmd::usedrugs(playerid, "1");
		case 329: Eat(playerid, 0);
		case 330: callcmd::sprunk(playerid);
		case 331: callcmd::beer(playerid);
		case 333: callcmd::mask(playerid);
		case 334: callcmd::armour(playerid);
		case 336: callcmd::usemed(playerid);
		case 338: callcmd::killme(playerid);
		case 341: UseChest(playerid, 2);
		case 358: Eat(playerid, 1);
		case 806: UseAzCoins(playerid);
		case 807: SPD(playerid, 6702, DIALOG_STYLE_INPUT, !"Талон EXP", !"{FFFFFF}Вы обмениваете Талоны EXP на EXP\nВведите количество которое хотите обменять (от 1 до 500)", !"Обменять", !"Отмена");
		case 1177..1200: UseGunSlot(playerid);
	}
	return 1;
}
stock CheckMenuItem(playerid, Item, bool:uved=false)
{
	switch(Item)
	{
		case 312,320,400..611, 341,809,1203: 
		{ 
			if(!uved) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот предмет нельзя передавать!"); 
			return 1; 
		}
		default: 
		{
			if(ItemsInfo[Item][ItemView] == 27 || ItemsInfo[Item][ItemView] == 10) 
			{
				if(!uved) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот предмет нельзя передавать!"); 
				return 1;
			}
			return 0;
		}
	}
	return 0;
}
stock DropItem(playerid, slot)
{
	new id = TrashID[playerid];
	if(id == -1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Выкинуть предмет можно только рядом с мусоркой!"), Valik(playerid);
	new Item = PI[playerid][pInvItem][slot], Amount = PI[playerid][pInvItemAmount][slot];
	if(CheckMenuItem(playerid, Item)) return Valik(playerid);
	if(Amount == 1)
	{
		if(!TrashAdd(playerid, id, Item, Amount, InvPlayerParams[0][playerid][slot], PI[playerid][pInvItemUID][slot], InvPlayerColor[playerid][slot], InvPlayerParams[1][playerid][slot])) return Valik(playerid);
		CheckInvItem(playerid, 0);
		PI[playerid][pInvItem][slot] = 0;
		PI[playerid][pInvItemAmount][slot] = 0;
		InvPlayerParams[0][playerid][slot] = 0;
		InvPlayerColor[playerid][slot] = 0;
		InvPlayerParams[1][playerid][slot] = 0;
		PI[playerid][pInvItemUID][slot] = 0;
		InvSlotUpdate(playerid, slot);
		Valik(playerid);
		////aml(23, playerid, "", ItemsInfo[Item][ItemName], id, Amount, Item);
	}
	else if(Amount > 1)
	{
		SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
		Valik(playerid);
		InventClick{playerid} = slot;
	}
	return 1;
}
stock SplitItem(playerid, slot)
{
    HideInventMenu(playerid);
    InventClick{playerid} = 255;
	if(!GetInvSlot(playerid, 0)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
    new amount = PI[playerid][pInvItemAmount][slot];
    if(PI[playerid][pInvItemAmount][slot] % 2 == 0) PI[playerid][pInvItemAmount][slot] /= 2;
    else
    {
        PI[playerid][pInvItemAmount][slot] ++;
        PI[playerid][pInvItemAmount][slot] /= 2;
    }
    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
    SCM(playerid, COLOR_YELLOW, !"Вы успешно разделили предмет.");
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != 0) continue;
        PI[playerid][pInvItem][i] = PI[playerid][pInvItem][slot];
        PI[playerid][pInvItemAmount][i] += PI[playerid][pInvItemAmount][slot];
        if(amount % 2 != 0) PI[playerid][pInvItemAmount][i] -= 1;
        InvSlotUpdate(playerid, slot);
        InvSlotUpdate(playerid, i);
        return 1;
    }
    return SaveInventory(playerid,0);
}
stock SearchStripeForItem(item_)
{
	for(new i; i < sizeof(CheckStripe); i++) if(CheckStripe[i][s_item] == item_) return i;
	return 0;
}
/*enum infobot
{
	npc_itemid,
	Float:npc_maxhp,
	npc_guard,
	npc_damage
};
static const InfoNPC[][infobot] = {
	{5107, 110.0, 2, 2},
	{5108, 100.0, 1, 1},
	{5109, 120.0, 3, 3},
	{5110, 1200.0, 3, 3},
	{5111, 1300.0, 4, 4},
	{5112, 1300.0, 4, 4},
	{5113, 1300.0, 4, 4},
	{5114, 1300.0, 4, 4},
	{5115, 1200.0, 3, 3}
};*/
stock InfoItem(playerid, slot, item_visual = -1)
{
	if(InventWallet[playerid]) return 1;
	new item, number = GetVehicleID(GetPlayerVehicleID(playerid)), shar, level_stripe, iditem_stripe, color__;
	if(slot == -1 && item_visual != -1) item = item_visual;
    else if(slot < MAX_SLOT_INV) //inside inv
	{
		item = PI[playerid][pInvItem][slot],\
		shar = InvPlayerParams[0][playerid][slot],\
		level_stripe = InvPlayerParams[1][playerid][slot],\
		iditem_stripe = PI[playerid][pInvItemUID][slot];
		color__ = InvPlayerColor[playerid][slot];
	}
    if(slot >= MAX_SLOT_INV && !InvCarOpen[playerid]) //acs inv
	{
		item = AksSlot[playerid][slot-MAX_SLOT_INV],\
		level_stripe = InvAksParams[1][playerid][slot-MAX_SLOT_INV],\
		shar = InvAksParams[0][playerid][slot-MAX_SLOT_INV],\
		iditem_stripe = AksSlotUID[playerid][slot-MAX_SLOT_INV];
		color__ = InvAksColor[playerid][slot-MAX_SLOT_INV];
	}
    else if(slot >= MAX_SLOT_INV && InvCarOpen[playerid]) item = CarInfo[number][cSlotItem][slot-MAX_SLOT_INV]; //acs car inv
    if(!strlen(GetItemInfo(playerid, item))) SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Информация по этому предмету отсутствует.", !"Выход", !"");
    else
    {
		switch(ItemsInfo[item][ItemView])
		{
			case 1781..1785:
			{
				if(!shar) shar = 1;
				else if(shar > 3) shar = 3;
				new lvl = 1785-ItemsInfo[item][ItemView];
				return SPDf(playerid, 8236, 0, !"Информация о предмете", !"Выход", !"", "{FFFFFF}Предмет: {FF332C}Нашивка на аксессуар(%s) {FFFF00}(%i-й уровень нашивки){ffffff}\nИспользуется для улучшения характеристик персонажа, таких как:\nзащита, регенерация, урон, удача, макс. ХП.\n\nПолучить можно с помощью крафта в подвале подвале дома\nили на центральном рынке воспользоваться общим станком.\nТак же можно купить на центральном рынке у других игроков.\n\nНашивки можно улучшать в мастерской одежды, для этого\nвам необходим точильный амулет.\nУлучшать нашивку можно до 3-го уровня (максимальный).\nЧем больше уровень нашивки, тем более она влиятельная.\n\nЧтобы пришить нашивку на аксессуар, откройте инвентарь,\nнажмите на предмет нашивки, выберите [УСТАНОВИТЬ/INSTALL],\nзатем нажмите на предмет аксессуара, на который хотите пришить\nнашивку.\nОбратите внимание! После того как вы вставите нашивку в аксессуар,\nникто больше не сможет снять нашивку с аксессуара!\n\nНашивки можно передавать, продавать и выкидывать.",CheckStripe[lvl][s_name],shar);
			}
			case 1..8:
			{
				//SCMf(playerid, -1, "item %i | level_stripe %i | shar %i | iditem_stripe %i", item, level_stripe, shar, iditem_stripe);
				str_1[0] = EOS, str_2[0] = EOS, str_mes[0] = EOS;
				switch(ItemsInfo[item][ItemView])
				{
					case 1: 
					{
						if(shar > 3) f(str_1, sizeof(str_1),"[+%i HP в мин.]", GetAcsUpdate(shar));
						str_2 = "* При улучшении восстанавливает здоровье";
					}
					case 2,5: 
					{
						if(shar > 3) f(str_1, sizeof(str_1),"[-%i%% от урона]",GetAcsUpdate(shar));
						str_2 = "* При улучшении увеличивает защиту";
					}
					case 3,4: 
					{
						if(shar > 3) f(str_1, sizeof(str_1),"[+%i%% урона]",GetAcsUpdate(shar));
						str_2 = "* При улучшении увеличивает урон";
					}
					case 6: 
					{
						if(shar > 3) f(str_1, sizeof(str_1),"[шанс %i%% на крит. урон]",GetAcsUpdate(shar));
						str_2 = "* При улучшении увеличивает шанс критического урона";
					}
				}
				if(shar > 3) f(str_mes, sizeof(str_mes), "{FFFFFF}- Бонус от улучшения: {B08A87}%s", str_1);
				str_q[0] = EOS, GetColorAcs(color__, true, str_q);
				str_q2[0] = EOS;
				if(level_stripe > 100) f(str_q2, sizeof(str_q2), "{FFA500}Встроена нашивка {ffffff}%i-го{ffa500} уровня{ffffff} (+%i к %s)\n\n", level_stripe-100, level_stripe-100, CheckStripe[SearchStripeForItem(iditem_stripe)][s_name]);
				return SPDf(playerid, 8236, 0, !"Информация о предмете", !"Выход", !"", "{FFFFFF}%s\n\n\
					{ffffff}Слот аксессуара: {FDCF28}%i{FFFFFF}\n\
					{ffffff}Можно ли красить: {FDCF28}%s{FFFFFF}\n\n\
					{ffffff}Можно хранить в одной ячейке: {cccccc}1 ед. предмета.\n\n\
					%s\
					{FFFFFF}Характеристики:\n\
					- Цвет: %s{FFFFFF}\n\
					- Улучшения: {FDCF28}%i/13{FFFFFF}\n\
					%s{FFFFFF}\n\
					- Прочность: {73B461}100/100{FFFFFF}\n\n\
					%s", \
					GetItemInfo(playerid, item), \
					ItemsInfo[item][ItemView], (!ItemsInfo[item][ItemColor] ? "Да" : "Нет"), \
					str_q2, str_q, shar, str_mes, str_2);
			}
			case 9:
			{
				str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s\n\nПодходит на одежду:\n{73B461}- %s", GetItemInfo(playerid, item), ItemsInfo[item][ItemName]);
				return SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
			}
			case 256:
			{
				if(!InvPlayerParams[0][playerid][slot]) SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Сим карта (не зарегистрированая){FFFFFF}\n\
					Используется для изменения\nномера мобильного телефона.\nМожно приобрести в магазине\n24/7 или на центральном рынке.\n\n\
					{ffffff}Можно хранить в одной ячейке: {cccccc}1 ед. предмета.", !"Выход", !"");
				else
				{
					str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Предмет: {FDCF28}Сим карта (зарегистрирована){FFFFFF}\n\
					Используется для изменения\nномера мобильного телефона.\nМожно приобрести в магазине\n24/7 или на центральном рынке.\n\n\
					{ffffff}Можно хранить в одной ячейке: {cccccc}1 ед. предмета.\n\n{FFFF00}Номер SIM-карты: %i", InvPlayerParams[0][playerid][slot]);
					SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
				}
			}
		}
        switch(item)
        {
			case 1203: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Bitcoin (BTC){ffffff}\nБиткоин - один из видов виртуальной валюты,\nеще его называют 'криптовалютой''.\nЕго можно майнить у себя в подвале дома,\nможно продавать и покупать в банке,\nможно передавать другим через трейд\nрасплачиваясь за какой-то товар.\n\nЧтобы майнить(создавать новые биткоины),\nнеобходимо построить домашний подвал с вентиляцией.\nЗатем купить видеокарты в магазине видеокарт (/gps),\nи установить их в подвале в специальные стойки.\nУ видеокарт есть состояние системы охлаждения,\nне забывайте подливать охлаждающей жидкости,\nиначе она перестанет работать.", !"Выход", !"");
			case 803: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}LAUNCH{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}LAUNCH{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nSabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)", !"Выход", !"");
			case 622: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}Киберпанк{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Киберпанк{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nRegina(ID: 479) Sabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)", !"Выход", !"");
			case 623: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}FUTURETAXI{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}FUTURETAXI{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nSabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)", !"Выход", !"");
			case 621: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}Футуристик{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Футуристик{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома.\nПодходит на модели: {FF332C}Cheetah(ID: 415) Infernus(ID: 411) Banshee(ID: 429)\nSparrow(ID: 469) Huntley(ID: 579) Turismo(ID: 451)\nMaverick(ID: 487) Buffalo(ID: 402) Voodoo(ID: 412)\nSolair(ID: 458) PCJ-600(ID: 461) Sanchez(ID: 468)\nHermes(ID: 474) Sabre(ID: 475) Sandking(ID: 495)\nRancher(ID: 505) Super GT(ID: 506) FCR-900(ID: 521)\nNRG-500(ID: 522) Euros(ID: 587) Alpha(ID: 602)", !"Выход", !"");
			case 619: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}Хэллоуин{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Хэллоуин{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или у коллекционера тыкв\nв Хэллоуин.\nПодходит на модели: {FF332C}Cheetah(ID: 415) Turismo(ID: 451) Infernus(ID: 411)\nMaverick(ID: 487) Sparrow(ID: 469) Banshee(ID: 429)\nHuntley(ID: 579) Buffalo(ID: 402) Voodoo(ID: 412)\nSolair(ID: 458) PCJ-600(ID: 461) Sanchez(ID: 468)\nHermes(ID: 474) Sabre(ID: 475) Sandking(ID: 495)\nRancher(ID: 505) Super GT(ID: 506) FCR-900(ID: 521)\nNRG-500(ID: 522) Euros(ID: 587) Alpha(ID: 602)", !"Выход", !"");
			case 620: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: Модификация {FFCB2C}Классик{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Классик{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома.\nПодходит на модели:\n{FF332C} Bullet(ID: 541) Hotring Racer(ID: 494) Yosemite(ID: 554)\nRoadtrain(ID: 515) Patriot(ID: 470) Freeway(ID: 463)\nHuntley(ID: 579) Turismo(ID: 451) Comet(ID: 480)\nMaverick(ID: 487) Infernus(ID: 411) Cheetah(ID: 415)\nBanshee(ID: 429) Sparrow(ID: 469) Buffalo(ID: 402)\nVoodoo(ID: 412) Solair(ID: 458) PCJ-600(ID: 461)\nSanchez(ID: 468) Hermes(ID: 474) Sabre(ID: 475)\nSandking(ID: 495) Rancher(ID: 505) Super GT(ID: 506)\nFCR-900(ID: 521) NRG-500(ID: 522) Euros(ID: 587)\nAlpha(ID: 602)", !"Выход", !"");
			case 1087: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Rare Box Yellow{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ffff00}В сундуке Rare Box YELLOW:\n{cccccc}- Lamborghini Urus\n- BMW M8\n- Mercedes GT63s AMG\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1089: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Rare Box Red{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ff0000}В сундуке Rare Box RED:\n{cccccc}- Bentley Continental\n- Audi RS6\n- Mercedes E63s AMG (2020)\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1088: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Rare Box Blue{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{0080ff}В сундуке Rare Box BLUE:\n{cccccc}- Mercedes S63 Coupe AMG\n- Mercedes G63 AMG\n- Volkswagen Touareg\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1644: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Concept Car Luxury{FFFFFF}\nЗавоз новых ларцов {FDCF28}Concept Car Luxury{FFFFFF}\nпроисходит в каждый PayDay по 10 штук\nна центральные рынки Los Santos и San Fierro.\n(/gps > Разное > {FDCF28}Стенд Concept Car Luxury{FFFFFF})\nОткрывая эти ларцы вы сможете получить:\n— Сертификат Brabus 700\n— Сертификат Mansory Stallone\n\
						— Сертификат Brabus ???\n\
						— Сертификат Brabus 800\n\
						А так же есть возможность выиграть:\n\
						— бронзовые рулетки\n\
						— серебряные рулетки\n\
						— платиновые рулетки\n\
						— семейные талоны\n\
						— зловещие монеты\n\
						— точильные камни\n\
						— точильные амулеты\n\
						— дрифт-монеты\n\
						— гражданские талоны\n\
						— новые скины (разных блогеров и знаменитых личностей)\n\
						— игровые очки (exp)\n\
						— деньги\n\
						Ларец можно использовать, передавать и продавать.", !"Выход", !"");
			case 1645: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Ларец Олигарха{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- BMW 760li\n- Aston Martin One-77\n- Bentley Balacar\n- Bentley Bentayga\n- Mercedes-Menz S500 W223\n- Mercedes-Menz SLR\n- Ferrari J50\n- Ferrari Spider\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1513: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Ларец кастомных аксессуаров{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n{cccccc}- Кастомные часы (\"Rolex Submariner\", \"Gucci\", \"Apple Watch\", \"Casio G-SHOCK\" и другие)\n- Кастомные наушники (\"AirPods Max\", \"Razer\", \"beats by Dre\" и другие)\n- Кастомные кепки (\"Supreme\", \"Gucci\", \"Tommy Hilfiger\" и другие)\n- Кастомные маски (Неоновая, \"Scary\", \"Локи\" и другие)\n- Кастомные мотошлемы (\"Kitty\", \"Pink\", \"Alien\" и другие)\n- Кастомные эксклюзивные шляпы\n- Рюкзак \"Крипер\", рюкзак альпиниста\n- Шлем Тора, Футбольный шлем, Шлем \"Daft Punk\", \"Стив\", \"Гомер\"\n- Разные маски из \"Игры в Кальмара\", VIP маска \"Бык\"\n- Алмазная кирка\n- Крылья\n- Бронежилеты\n- Скин: Маленький Билл (ID: 460)\n{ffff00}- Супер-кирка\n- Супер-грабли\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1514: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Супер авто-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- BMW Z4 40i\n- Mercedes-Benz S600 W124\n- BMW X5 E53\n- Lexus RX450H\n- Rolls-Royce Cullinan\n- Mercedes CLA 63 AMG\n- Ford GT\n- Dodge Viper\n- McLaren MP4\n- Subaru WRX\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1515: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Ларец с премией{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Mercedes-Benz GLS 2020\n- Mercedes G65 AMG\n- Range Rover SVA\n- Tesla Model X\n- Nissan Silvia S15\n- Mercedes-Benz S600\n- Subaru BRZ\n- BMW M3 G20\n- BMW M4 G82\n- Ford Raptor F150\n- Genesis G90\n- Honda Integra Type-R\n- Audi A6\n- Mercedes CLA 45 AMG\n- Porsche Macan Turbo\n- Toyota Rav 4\n- Mitsubishi Lancer Old\n- Audi TT RS\n- BMW 4-Series\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1516: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Ларец Super Car Box{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Lamborghini Aventador SVJ\n- Bugatti Chiron\n- Bugatti Divo Sport\n- Вертолёт Buckingham\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1517: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Ностальгический ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Aston Martin DB5\n- BMW M3 GTR\n- Chevrolet Camaro\n- Mazda RX7 Veilside FD\n- Mazda RX8\n- Mitsubishi Eclipse\n- Ford Mustang 289\n- Nissan 350Z\n- Nissan Skyline R34\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			case 1518: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Тайник Илона Маска{FFFFFF}\nМожно получить с игрового магазина.\nНельзя продать, {FDCF28}обменять{FFFFFF}.\nМожно открывать каждые 2 часа игры в онлайне. \nПри открытии вы можете получить\nларец Super Car Box или ларец с премией,\nоткрывая которые можно выиграть ценные призы.", !"Выход", !"");
			case 1519: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FDCF28}Супер мото-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Мотоцикл Ducati Diavel\n- Мотоцикл Ducati Panigale\n- Мотоцикл Ducati Ducnaked\n- Мотоцикл Kawasaki Ninja ZX-10RR\n- Мотоцикл Western\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.", !"Выход", !"");
			
			case 5107: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Forelli’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {82FA58}Необычный\n{FFFFFF}Характеристики: {AAAAAA}110 Макс. HP, 2 защита, 2 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5108: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Верный друг’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {AAAAAA}Обычный\n{FFFFFF}Характеристики: {AAAAAA}100 Макс. HP, 1 защита, 1 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5109: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Мужчина’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}120 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5110: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Женщина’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}130 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5111: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Сноумэн’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5112: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Геральт’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника? его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5113: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Уэенсдей Аддамс’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5114: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Хагрид’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5115: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Леший’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.", !"Выход", !"");
			case 5154: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Умпа-лумп'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5155: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Йеннифэр'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5156: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Левая'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5157: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Правая'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5158: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Арагорн'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5159: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Гэндальф'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5160: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Леголас'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5161: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Тайлер Дёрден'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			case 5162: return SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Скала'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!", !"Выход", !"");
			default:
			{
				str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s\n\n{ffffff}Можно хранить в одной ячейке: %i ед. предмета.", GetItemInfo(playerid, item), ItemsInfo[item][ItemLCount]);
				SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
			}
		}
	}
    return 1;
}
stock GetAcsUpdate(lvl)
{
	switch(lvl)
	{
		case 4..12: return lvl - 3;
		default: return 0;
	}
	return 0;
}
stock SetItem(playerid, item, amount = 0)
{
	new count = GetInvCount(playerid, item);
	if(count) InvAdd(playerid, item, -count);
	if(amount) InvAdd(playerid, item, amount, 0);
	return 1;
}
stock ShkafRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(HouseInfo[id][hItem][slot] != itemid) return 0;
        new amounts = amount - HouseInfo[id][hItemAmount][slot];
        HouseInfo[id][hItemAmount][slot] -= amount;
        if(HouseInfo[id][hItemAmount][slot] <= 0)
        {
            HouseInfo[id][hItemAmount][slot] = 0;
            HouseInfo[id][hItem][slot] = 0;
            InvHouseParams[0][id][slot] = 0;
			InvHouseParams[1][id][slot] = 0;
			InvHouseColor[id][slot] = 0;
			InvHouseUID[id][slot] = 0;
            if(amounts) ShkafRemove(playerid, id, itemid, amounts, slot);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(HouseID[j] == HouseID[playerid]) MenuSlotUpdate(j, slot, 2);
        return 1;
	}
    for(new i; i < 90; i++)
    {
        if(HouseInfo[id][hItem][i] != itemid) continue;
        new amounts = amount - HouseInfo[id][hItemAmount][i];
        HouseInfo[id][hItemAmount][i] -= amount;
        if(HouseInfo[id][hItemAmount][i] <= 0)
        {
            HouseInfo[id][hItemAmount][i] = 0;
            HouseInfo[id][hItem][i] = 0;
            InvHouseParams[0][id][slot] = 0;
			InvHouseParams[1][id][slot] = 0;
			InvHouseColor[id][slot] = 0;
			InvHouseUID[id][slot] = 0;
            if(amounts) ShkafRemove(playerid, id, itemid, amounts, i);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(HouseID[j] == HouseID[playerid]) MenuSlotUpdate(j, i, 2);
        return 1;
    }
    return SaveShkaf(id);
}
//warehouse
stock GetWareHouseSlot(id, item)
{
	new total;
	for(new i; i < 150; i++)
	{
		if(!WareHouse[id][wItem][i]) total += ItemsInfo[item][ItemLCount];
		if(WareHouse[id][wItem][i] == item && WareHouse[id][wItemAmount][i] < ItemsInfo[item][ItemLCount]) total += ItemsInfo[item][ItemLCount] - WareHouse[id][wItemAmount][i];
	}
	return total;
}
stock WareHouseAdd(playerid, id, item, amount, shar = 0, uid = 0, color = 0, params = 0)
{
	if(amount < 0) return WareHouseRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetWareHouseSlot(id, item)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В шкафу нету места!");
	for(new i; i < 150; i++)
	{
		if(WareHouse[id][wItem][i] != item) continue;
		if(!AddWareHouseItem(playerid, id, i, item, amount)) continue;
		return 1;
	}
	for(new i; i < 150; i++)
	{
		if(WareHouse[id][wItem][i] != 0) continue;
		if(!SetWareHouseItem(playerid, id, i, item, amount, shar, uid, color, params)) continue;
		return 1;
	}
    return 1;
}
stock AddWareHouseItem(playerid, id, slot, item, amount)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount], amounts = WareHouse[id][wItemAmount][slot] + amount;
    if(WareHouse[id][wItemAmount][slot] >= Max_Item) return 0;
    if(amounts > Max_Item) Amount = amounts - Max_Item, WareHouse[id][wItemAmount][slot] = Max_Item;
    else WareHouse[id][wItemAmount][slot] += amount;
    foreach(new i: PlayerPlayersStream[playerid]) if(idaofcar[i] == idaofcar[playerid]) MenuSlotUpdate(i, slot, 5);
    if(Amount) WareHouseAdd(playerid, id, item, Amount);
    return SaveWareHouse(id);
}
stock SetWareHouseItem(playerid, id, slot, item, amount, shar, uid, color, params)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount];
	if(WareHouse[id][wItemAmount][slot] >= Max_Item) return 0;
	if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    WareHouse[id][wItem][slot] = item;
    WareHouse[id][wItemAmount][slot] = amount;
	InvWareHouseUID[id][slot] = uid;
    InvWareHouseParams[0][id][slot] = shar;
	InvWareHouseParams[1][id][slot] = params;
	InvWareHouseColor[id][slot] = color;
    foreach(new i: PlayerPlayersStream[playerid]) if(idaofcar[i] == idaofcar[playerid]) MenuSlotUpdate(i, slot, 5);
    if(Amount) WareHouseAdd(playerid, id, item, Amount);
    return SaveWareHouse(id);
}
stock WareHouseRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(WareHouse[id][wItem][slot] != itemid) return 0;
        new amounts = amount - WareHouse[id][wItemAmount][slot];
        WareHouse[id][wItemAmount][slot] -= amount;
        if(WareHouse[id][wItemAmount][slot] <= 0)
        {
            WareHouse[id][wItemAmount][slot] = 0;
            WareHouse[id][wItem][slot] = 0;
            InvWareHouseParams[0][id][slot] = 0;
			InvWareHouseParams[1][id][slot] = 0;
			InvWareHouseUID[id][slot] = 0;
			InvWareHouseColor[id][slot] = 0;
            if(amounts) WareHouseRemove(playerid, id, itemid, amounts, slot);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(idaofcar[j] == idaofcar[playerid]) MenuSlotUpdate(j, slot, 5);
        return 1;
	}
    for(new i; i < 150; i++)
    {
        if(WareHouse[id][wItem][slot] != itemid) continue;
        new amounts = amount - WareHouse[id][wItemAmount][i];
        WareHouse[id][wItemAmount][i] -= amount;
        if(WareHouse[id][wItemAmount][i] <= 0)
        {
            WareHouse[id][wItemAmount][i] = 0;
            WareHouse[id][wItem][i] = 0;
            InvWareHouseParams[0][id][slot] = 0;
			InvWareHouseParams[1][id][slot] = 0;
			InvWareHouseUID[id][slot] = 0;
			InvWareHouseColor[id][slot] = 0;
            if(amounts) WareHouseRemove(playerid, id, itemid, amounts, i);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(idaofcar[j] == idaofcar[playerid]) MenuSlotUpdate(j, i, 5);
        return 1;
    }
    return SaveWareHouse(id);
}
//
stock ShkafAdd(playerid, id, item, amount, shar=0, uid=0, color = 0, params=0)
{
	if(amount < 0) return ShkafRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetShkafSlot(id, item)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В шкафу нету места!");
	for(new i; i < 90; i++)
	{
		if(HouseInfo[id][hItem][i] != item) continue;
		if(!AddShkafItem(playerid, id, i, item, amount)) continue;
		return 1;
	}
	for(new i; i < 90; i++)
	{
		if(HouseInfo[id][hItem][i] != 0) continue;
		if(!SetShkafItem(playerid, id, i, item, amount, shar, uid, color, params)) continue;
		return 1;
	}
    return 1;
}
stock AddShkafItem(playerid, id, slot, item, amount)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount], amounts = HouseInfo[id][hItemAmount][slot] + amount;
    if(HouseInfo[id][hItemAmount][slot] >= Max_Item) return 0;
    if(amounts > Max_Item) Amount = amounts - Max_Item, HouseInfo[id][hItemAmount][slot] = Max_Item;
    else HouseInfo[id][hItemAmount][slot] += amount;
    foreach(new i: PlayerPlayersStream[playerid]) if(HouseID[i] == HouseID[playerid]) MenuSlotUpdate(i, slot, 2);
    if(Amount) ShkafAdd(playerid, id, item, Amount);
    return 1;
}
stock SetShkafItem(playerid, id, slot, item, amount, shar, uid, color, params)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount];
	if(HouseInfo[id][hItemAmount][slot] >= Max_Item) return 0;
	if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    HouseInfo[id][hItem][slot] = item;
    HouseInfo[id][hItemAmount][slot] = amount;
    InvHouseParams[0][id][slot] = shar;
	InvHouseParams[1][id][slot] = params;
	InvHouseColor[id][slot] = color;
	InvHouseUID[id][slot] = uid;
    foreach(new i: PlayerPlayersStream[playerid]) if(HouseID[i] == HouseID[playerid]) MenuSlotUpdate(i, slot, 2);
    if(Amount) ShkafAdd(playerid, id, item, Amount);
    return 1;
}
stock TrunkRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(TrunkInfo[id][TrunkItem][slot] != itemid) return 0;
        new amounts = amount - TrunkInfo[id][TrunkItemAmount][slot];
        TrunkInfo[id][TrunkItemAmount][slot] -= amount;
        if(TrunkInfo[id][TrunkItemAmount][slot] <= 0)
        {
            TrunkInfo[id][TrunkItemAmount][slot] = 0;
            TrunkInfo[id][TrunkItem][slot] = 0;
            TrunkInfo[id][TrunkItemSharpening][slot] = 0;
			TrunkInfo[id][TrunkItemParams][slot] = 0;
			TrunkInfo[id][TrunkItemUID][slot] = 0;
			TrunkInfo[id][TrunkItemColor][slot] = 0;
            if(amounts) TrunkRemove(playerid, id, itemid, amounts, slot);
        }
        foreach(new i: PlayerPlayersStream[playerid]) if(idaofcar[i] == idaofcar[playerid]) MenuSlotUpdate(i, slot, 3);
        return 1;
	}
	new all;
	if(!CheckTrunkForItem(id, 1780)) all = 30;
    for(new i; i < 30+all; i++)
    {
        if(TrunkInfo[id][TrunkItem][i] != itemid) continue;
        new amounts = amount - TrunkInfo[id][TrunkItemAmount][i];
        TrunkInfo[id][TrunkItemAmount][i] -= amount;
        if(TrunkInfo[id][TrunkItemAmount][i] <= 0)
        {
            TrunkInfo[id][TrunkItemAmount][i] = 0;
            TrunkInfo[id][TrunkItem][i] = 0;
            TrunkInfo[id][TrunkItemSharpening][i] = 0;
			TrunkInfo[id][TrunkItemParams][i] = 0;
			TrunkInfo[id][TrunkItemUID][i] = 0;
			TrunkInfo[id][TrunkItemColor][i] = 0;
            if(amounts) TrunkRemove(playerid, id, itemid, amounts, i);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(idaofcar[j] == idaofcar[playerid]) MenuSlotUpdate(j, slot, 3);
        return 1;
    }
    return 1;
}
stock TrunkAdd(playerid, id, item, amount, shar = 0, uid = 0, color = 0, params = 0)
{
	if(amount < 0) return TrunkRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetTrunkSlot(id, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В багажнике нету места!");
		return 0;
	}
	new all;
	if(!CheckTrunkForItem(id, 1780)) all = 30;
	for(new i; i < 30+all; i++)
	{
		if(TrunkInfo[id][TrunkItem][i] != item) continue;
		if(!AddTrunkItem(playerid, id, i, item, amount)) continue;
		return 1;
	}
	for(new i; i < 30+all; i++)
	{
		if(TrunkInfo[id][TrunkItem][i] != 0) continue;
		if(!SetTrunkItem(playerid, id, i, item, amount, shar, uid, color, params)) continue;
		return 1;
	}
    SaveTrunk(GetVehicleID(id));
    return 1;
}
stock AddTrunkItem(playerid, id, slot, item, amount)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount], amounts = TrunkInfo[id][TrunkItemAmount][slot] + amount;
    if(TrunkInfo[id][TrunkItemAmount][slot] >= Max_Item) return 0;
    if(amounts > Max_Item) Amount = amounts - Max_Item, TrunkInfo[id][TrunkItemAmount][slot] = Max_Item;
    else TrunkInfo[id][TrunkItemAmount][slot] += amount;
    foreach(new i: PlayerPlayersStream[playerid]) if(idaofcar[i] == idaofcar[playerid]) MenuSlotUpdate(i, slot, 3);
    if(Amount) TrunkAdd(playerid, id, item, amount);
    return 1;
}
stock SetTrunkItem(playerid, id, slot, item, amount, shar, uid, color, params)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount];
	if(TrunkInfo[id][TrunkItemAmount][slot] >= Max_Item) return 0;
	if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    TrunkInfo[id][TrunkItem][slot] = item;
    TrunkInfo[id][TrunkItemAmount][slot] = amount;
    TrunkInfo[id][TrunkItemSharpening][slot] = shar;
	TrunkInfo[id][TrunkItemParams][slot] = params;
	TrunkInfo[id][TrunkItemUID][slot] = uid;
	TrunkInfo[id][TrunkItemColor][slot] = color;
	//triazov
    foreach(new i: PlayerPlayersStream[playerid]) if(idaofcar[i] == idaofcar[playerid]) MenuSlotUpdate(i, slot, 3);
    if(Amount) TrunkAdd(playerid, id, item, Amount, shar, uid);
    return 1;
}
stock TrashRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(TrashInfo[id][TrashItem][slot] != itemid) return 0;
        new amounts = amount - TrashInfo[id][TrashItemAmount][slot];
        TrashInfo[id][TrashItemAmount][slot] -= amount;
        if(TrashInfo[id][TrashItemAmount][slot] <= 0)
        {
            TrashInfo[id][TrashItemAmount][slot] = 0;
            TrashInfo[id][TrashItem][slot] = 0;
            InvTrashParams[0][id][slot] = 0;
			InvTrashParams[1][id][slot] = 0;
			InvTrashColor[id][slot] = 0;
			InvTrashUID[id][slot] = 0;
            if(amounts) TrashRemove(playerid, id, itemid, amounts, slot);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(TrashID[j] == TrashID[playerid]) MenuSlotUpdate(j, slot, 1);
        return 1;
	}
    for(new i; i < 150; i++)
    {
        if(TrashInfo[id][TrashItem][i] != itemid) continue;
        new amounts = amount - TrashInfo[id][TrashItemAmount][i];
        TrashInfo[id][TrashItemAmount][i] -= amount;
        if(TrashInfo[id][TrashItemAmount][i] <= 0)
        {
            TrashInfo[id][TrashItemAmount][i] = 0;
            TrashInfo[id][TrashItem][i] = 0;
            InvTrashParams[0][id][slot] = 0;
			InvTrashParams[1][id][slot] = 0;
			InvTrashColor[id][slot] = 0;
			InvTrashUID[id][slot] = 0;
            if(amounts) TrashRemove(playerid, id, itemid, amounts, i);
        }
        foreach(new j: PlayerPlayersStream[playerid]) if(TrashID[j] == TrashID[playerid]) MenuSlotUpdate(j, i, 1);
        return 1;
    }
    return 1;
}
stock TrashAdd(playerid, id, item, amount, shar=0, uid=0, color = 0, params = 0)
{
	if(amount < 0) return TrashRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetTrashSlot(id, item)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В мусорки нету места!");
	for(new i; i < 150; i++)
	{
		if(TrashInfo[id][TrashItem][i] != item) continue;
		if(!AddTrashItem(playerid, id, i, item, amount)) continue;
		return 1;
	}
	for(new i; i < 150; i++)
	{
		if(TrashInfo[id][TrashItem][i] != 0) continue;
		if(!SetTrashItem(playerid, id, i, item, amount, shar, uid, color, params)) continue;
		return 1;
	}
    return 1;
}
stock AddTrashItem(playerid, id, slot, item, amount)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount], amounts = TrashInfo[id][TrashItemAmount][slot] + amount;
	if(TrashInfo[id][TrashItemAmount][slot] >= Max_Item) return 0;
	if(amounts > Max_Item) Amount = amounts - Max_Item, TrashInfo[id][TrashItemAmount][slot] = Max_Item;
	else TrashInfo[id][TrashItemAmount][slot] += amount;

    foreach(new i: PlayerPlayersStream[playerid]) if(TrashID[i] == TrashID[playerid]) MenuSlotUpdate(i, slot, 1);
    if(Amount) TrashAdd(playerid, id, item, Amount, 0);
    return 1;
}
stock SetTrashItem(playerid, id, slot, item, amount, shar, uid, color, params)
{
    new Amount, Max_Item = ItemsInfo[item][ItemLCount];
	if(TrashInfo[id][TrashItemAmount][slot] >= Max_Item) return 0;
	if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
	TrashInfo[id][TrashItemAmount][slot] = amount;
    TrashInfo[id][TrashItem][slot] = item;
    InvTrashParams[0][id][slot] = shar;
	InvTrashParams[1][id][slot] = params;
	InvTrashColor[id][slot] = color;
	InvTrashUID[id][slot] = uid;
    foreach(new i: PlayerPlayersStream[playerid]) if(TrashID[i] == TrashID[playerid]) MenuSlotUpdate(i, slot, 1);
    if(Amount) TrashAdd(playerid, id, item, Amount);
    return 1;
}
stock TradeRemove(playerid, td)
{
    PI[playerid][pTradeItem][td] = 0;
    PI[playerid][pTradeItemAmount][td] = 0;
    InvTradeParams[0][playerid][td] = 0;
	InvTradeParams[1][playerid][td] = 0;
	InvTradeColor[playerid][td] = 0;
	InvTradeUID[playerid][td] = 0;
    MenuSlotUpdate(playerid, td, 4);
    return 1;
}
stock TradeAdd(playerid, item, amount, shar, uid, color, params)
{
	if(!GetTradeSlot(playerid))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В трейде недостаточно места!");
		return 0;
	}
    for(new i; i < 10; i++)
    {
        if(PI[playerid][pTradeItem][i] != 0) continue;
        if(!SetTradeItem(playerid, i, item, amount, shar, uid, color, params)) continue;
        return 1;
    }
    return 1;
}
stock SetTradeItem(playerid, slot, item, amount, shar, uid, color, params)
{
    new Max_Item = ItemsInfo[item][ItemLCount];
	if(PI[playerid][pTradeItemAmount][slot] >= Max_Item) return 0;
	if(amount > Max_Item) amount = Max_Item;
    PI[playerid][pTradeItem][slot] = item;
    PI[playerid][pTradeItemAmount][slot] = amount;
    InvTradeParams[0][playerid][slot] = shar;
	InvTradeParams[1][playerid][slot] = params;
	InvTradeColor[playerid][slot] = color;
	InvTradeUID[playerid][slot] = uid;
    MenuSlotUpdate(playerid, slot, 4);
    SetPVarInt(playerid, !"InvItemLock", slot);
    return 1;
}
stock InvAdd(playerid, item, amount, send=1, params1 = 0, params2 = 0, params3 = 0, params4 = 0)
{
	if(!IsPlayerLogged[playerid] || item < 1 || item >= sizeof ItemsInfo) return 0;
	switch(item)
	{
		case 5144: return GiveMoney(playerid, amount);
		case 5145: return GiveEXP(playerid, amount);
		case 5146: return GiveDonate(playerid, amount);
		case 5147: return GiveDonateRub(playerid, amount);
		case 5153:
		{
			PI[playerid][pVipTime] = unixtime(10);
	        J_SetPlayerVIP(playerid, 7);
	        UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			return 1;
		}
	}
	static const id[] = {0,435,449,450,532,537,538,569,570,584,590,591,594,606,607,608,610};
	for(new i; i < sizeof(id); i++) if(item == id[i]) return 1;
	if(GetInvCount(playerid, 312) != 0 && item == 312) return 1;
	if(!ItemsInfo[item][ItemID]) return 0; //isvalid item?
	if(amount < 0) return InvRemoveEx(playerid, item, amount-amount*2);
	if(amount > GetInvSlot(playerid, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
		return 0;
	}
	if(send)
	{
		if(amount > 1) SCMf(playerid, COLOR_YELLOW, "Вам был добавлен предмет '%s' (%i шт). Чтобы открыть инвентарь используйте клавишу 'Y' или /invent", ItemsInfo[item][ItemName], amount);
		else 
		{
			str_1[0] = EOS;
			if(params3 != 0) f(str_1, sizeof(str_1), "%s", ItemsInfo[item][ItemName]);
			else 
			{
				str_q[0] = EOS, GetColorAcs(params3, false, str_q);
				f(str_1, sizeof(str_1), "%s%s", ItemsInfo[item][ItemName], str_q);
			}
			SCMf(playerid, COLOR_YELLOW, "Вам был добавлен предмет '%s'. Чтобы открыть инвентарь используйте клавишу 'Y' или /invent", str_1);
		}
	}
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItem][i] != item) continue;
		if(!AddInvItem(playerid, i, item, amount)) continue;
		return 1;
	}
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItem][i] != 0) continue;
		if(!SetInvItem(playerid, i, item, amount, params1, params2, params3, params4)) continue;
		return 1;
	}
	return 1;
}
stock AddInvItem(playerid, slot, item, amount)
{
	if(!PI[playerid][pInvItem][slot]) PI[playerid][pInvItemAmount][slot] = 0;
    new Amount, Max_Item = ItemsInfo[item][ItemLCount], amounts = PI[playerid][pInvItemAmount][slot] + amount;
    if(PI[playerid][pInvItemAmount][slot] >= Max_Item) return false;
    if(amounts > Max_Item) Amount = amounts - Max_Item, PI[playerid][pInvItemAmount][slot] = Max_Item;
    else PI[playerid][pInvItemAmount][slot] += amount;
	if(InventWallet[playerid])
	{
		switch(ItemsInfo[item][ItemView])
		{
			case 27: PI[playerid][pInvItemLock][slot] = false;
			default: PI[playerid][pInvItemLock][slot] = true;
		}
	}
    InvSlotUpdate(playerid, slot);
	if(debuggga[playerid] != false) SCMf(playerid, -1, "1 Amount %i", Amount);
    if(Amount) InvAdd(playerid, item, Amount, 0);
	else if(!Amount && !player_InvSave{playerid}) player_InvSave{playerid} = 6;
    return 1;
}
stock SetInvItem(playerid, slot, item, amount, params, uid, color, params_2)
{
	if(!PI[playerid][pInvItem][slot]) PI[playerid][pInvItemAmount][slot] = 0;
    new Amount, Max_Item = ItemsInfo[item][ItemLCount];
    if(PI[playerid][pInvItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    PI[playerid][pInvItem][slot] = item;
    PI[playerid][pInvItemAmount][slot] = amount;
	switch(ItemsInfo[PI[playerid][pInvItem][slot]][ItemView])
	{
		case 1..8: 
		{
			InvPlayerParams[1][playerid][slot] = params_2;
			InvPlayerParams[0][playerid][slot] = params, PI[playerid][pInvItemUID][slot] = uid, InvPlayerColor[playerid][slot] = color;
		}
		case 256:
		{
			if(!params) params = 1;
			InvPlayerParams[0][playerid][slot] = params;
		}
		case 1781..1785:
		{
			if(!params) params = 1;
			else if(params > 3) params = 3;
			InvPlayerParams[0][playerid][slot] = params;
		}
		case 27: InvPlayerParams[0][playerid][slot] = params;
		default: InvPlayerParams[1][playerid][slot] = 0, InvPlayerParams[0][playerid][slot] = 0,PI[playerid][pInvItemUID][slot] = 0, InvPlayerColor[playerid][slot] = 0;
	}
	if(InventWallet[playerid])
	{
		switch(ItemsInfo[item][ItemView])
		{
			case 27: PI[playerid][pInvItemLock][slot] = false;
			default: PI[playerid][pInvItemLock][slot] = true;
		}
	}
	if(debuggga[playerid] != false) SCMf(playerid, -1, "2 Amount %i", Amount);
	InvSlotUpdate(playerid, slot);
    if(Amount) InvAdd(playerid, item, Amount, 0);
	else if(!Amount && !player_InvSave{playerid}) player_InvSave{playerid} = 6;
    return 1;
}
stock InvRemoveEx(playerid, itemid, amount)
{
    if(InventClick{playerid} == 255) InvRemove(playerid, itemid, amount);
    else if(InventClick{playerid} != 255)
    {
        if(PI[playerid][pInvItem][InventClick{playerid}] == itemid) InvRemove_(playerid, itemid, amount);
        else InvRemove(playerid, itemid, amount);
    }
    return 1;
}
stock InvRemove_(playerid, itemid, amount)
{
    new slot = InventClick{playerid};
    if(PI[playerid][pInvItem][slot] != itemid) return 0;
    new amounts = amount - PI[playerid][pInvItemAmount][slot];
    PI[playerid][pInvItemAmount][slot] -= amount;
    if(PI[playerid][pInvItemAmount][slot] <= 0)
    {
        PI[playerid][pInvItemAmount][slot] = 0;
        PI[playerid][pInvItem][slot] = 0;
		InvPlayerParams[0][playerid][slot] = 0;
		InvPlayerColor[playerid][slot] = 0;
		PI[playerid][pInvItemUID][slot] = 0;
		InvPlayerParams[1][playerid][slot] = 0;
		for(new i; i < 10; i++)
		{
			if(InvPlayerRentInvSlot[playerid][i] == slot)
			{
				InvPlayerRentUID[playerid][i] = -1, //кому передали
				InvPlayerRentInvSlot[playerid][i] = -1, //слот кому передали
				InvPlayerRentTimeOut[playerid][i] = -1;
			}
		}
        if(amounts) InvRemove(playerid, itemid, amounts);
    }
    InvSlotUpdate(playerid, slot);
    return 1;
}
stock InvRemove(playerid, itemid, amount)
{
	if(!itemid) return 1;
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != itemid) continue;
        new amounts = amount - PI[playerid][pInvItemAmount][i];
        PI[playerid][pInvItemAmount][i] -= amount;
        if(PI[playerid][pInvItemAmount][i] <= 0)
        {
            PI[playerid][pInvItemAmount][i] = 0;
            PI[playerid][pInvItem][i] = 0;
            InvPlayerParams[0][playerid][i] = 0;
			InvPlayerColor[playerid][i] = 0;
			PI[playerid][pInvItemUID][i] = 0;
			InvPlayerParams[1][playerid][i] = 0;
            if(amounts) InvRemove(playerid, itemid, amounts);
        }
        InvSlotUpdate(playerid, i);
        return 1;
    }
    return 1;
}
stock ChangeInvColor(playerid, color)
{
	new color_1 = InvColor[color][0], color_2 = InvColor[color][1], bool:yes;
    PlayerTextDrawColor(playerid, Invent[playerid][25], color_1); //Кнопка Menu
    PlayerTextDrawColor(playerid, Invent[playerid][29], color_1); //Кнопка Cars
    PlayerTextDrawColor(playerid, Invent[playerid][27], color_1); //Кнопка Settings
    PlayerTextDrawColor(playerid, Invent[playerid][31], color_1); //Кнопка Business

    PlayerTextDrawColor(playerid, Invent[playerid][3], color_2); //Кнопка Close
    PlayerTextDrawColor(playerid, Invent[playerid][35], color_2); //Кнопка Family
    PlayerTextDrawColor(playerid, Invent[playerid][33], color_2); //Кнопка Donate
    PlayerTextDrawColor(playerid, Invent[playerid][22], color_2); //Кнопка GPS
    PlayerTextDrawColor(playerid, Invent[playerid][20], color_2); //Кнопка Report
    PlayerTextDrawColor(playerid, Invent[playerid][18], color_2); //Кнопка Help
    PlayerTextDrawColor(playerid, Invent[playerid][41], color_2); //Кнопка Quest
    PlayerTextDrawColor(playerid, Invent[playerid][44], color_2); //Кнопка Rewards
    PlayerTextDrawBoxColor(playerid, Invent[playerid][17], color_2); //Полоска сверху слева
    PlayerTextDrawBoxColor(playerid, Invent[playerid][2], color_2); //Полоска сверху справа
    if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][0]))
    {
    	PlayerTextDrawColor(playerid, InventButton[playerid][0], color_2);
		yes = true;
    }
    switch(InventPage[playerid])
	{
		case 1: PlayerTextDrawColor(playerid, Invent[playerid][13], color_2);
		case 2: PlayerTextDrawColor(playerid, Invent[playerid][14], color_2);
		case 3: PlayerTextDrawColor(playerid, Invent[playerid][15], color_2);
		case 4: PlayerTextDrawColor(playerid, Invent[playerid][51], color_2);
	}
    ////////////////////////////////////////////////////////////////////////////////////////////
    if(yes) PlayerTextDrawShow(playerid, InventButton[playerid][0]);
    PlayerTextDrawShow(playerid, Invent[playerid][25]); //Кнопка Menu
    PlayerTextDrawShow(playerid, Invent[playerid][29]); //Кнопка Cars
    PlayerTextDrawShow(playerid, Invent[playerid][27]); //Кнопка Settings
    PlayerTextDrawShow(playerid, Invent[playerid][31]); //Кнопка Business
    PlayerTextDrawShow(playerid, Invent[playerid][3]); //Кнопка Close
    PlayerTextDrawShow(playerid, Invent[playerid][35]); //Кнопка Family
    PlayerTextDrawShow(playerid, Invent[playerid][33]); //Кнопка Donate
    PlayerTextDrawShow(playerid, Invent[playerid][22]); //Кнопка GPS
    PlayerTextDrawShow(playerid, Invent[playerid][20]); //Кнопка Report
    PlayerTextDrawShow(playerid, Invent[playerid][18]); //Кнопка Help
    PlayerTextDrawShow(playerid, Invent[playerid][41]); //Кнопка Quest
    PlayerTextDrawShow(playerid, Invent[playerid][44]); //Кнопка Rewards
    PlayerTextDrawShow(playerid, Invent[playerid][17]); //Полоска сверху слева
    PlayerTextDrawShow(playerid, Invent[playerid][2]); //Полоска сверху справа
    if(InventPage[playerid] == 1) PlayerTextDrawShow(playerid, Invent[playerid][13]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 2) PlayerTextDrawShow(playerid, Invent[playerid][14]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 3) PlayerTextDrawShow(playerid, Invent[playerid][15]); //Кнопка выбора страницы инвентаря
	else if(InventPage[playerid] == 4) PlayerTextDrawShow(playerid, Invent[playerid][51]);
}
stock GetInvCount(playerid, id)
{
	if(playerid == -1 || id == -1) return 1;
    new Total;
    for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(i < 12) if(PI[playerid][pInvWallet][i] == id) return 1;
		if(PI[playerid][pInvItem][i] == id) Total = Total + PI[playerid][pInvItemAmount][i];
	}
    return Total;
}
stock GetItemSlot(playerid, item)
{
	for(new i; i < PI[playerid][pInvCell]; i++) if(item == PI[playerid][pInvItem][i]) return i;
	return -1;
}
stock GetInvSlot(playerid, item)
{
	new total;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(!PI[playerid][pInvItem][i]) total += ItemsInfo[item][ItemLCount];
		if(PI[playerid][pInvItem][i] == item && PI[playerid][pInvItemAmount][i] < ItemsInfo[item][ItemLCount]) total += ItemsInfo[item][ItemLCount] - PI[playerid][pInvItemAmount][i];
	}
	return total;
}
stock GetTradeSlot(playerid)
{
	new total;
	for(new i; i < 10; i++) if(!PI[playerid][pTradeItem][i]) total ++;
	return total;
}
stock GetTrashSlot(id, item)
{
	new total;
	for(new i; i < 150; i++)
	{
		if(!TrashInfo[id][TrashItem][i]) total += ItemsInfo[item][ItemLCount];
		if(TrashInfo[id][TrashItem][i] == item && TrashInfo[id][TrashItemAmount][i] < ItemsInfo[item][ItemLCount]) total += ItemsInfo[item][ItemLCount] - TrashInfo[id][TrashItemAmount][i];
	}
	return total;
}
stock GetShkafSlot(id, item)
{
	new total;
	for(new i; i < 90; i++)
	{
		if(!HouseInfo[id][hItem][i]) total += ItemsInfo[item][ItemLCount];
		if(HouseInfo[id][hItem][i] == item && HouseInfo[id][hItemAmount][i] < ItemsInfo[item][ItemLCount]) total += ItemsInfo[item][ItemLCount] - HouseInfo[id][hItemAmount][i];
	}
	return total;
}
stock GetTrunkSlot(id, item)
{
	new total, all = 30;
	if(!CheckTrunkForItem(id, 1780)) all = 60; 
	for(new i; i < all; i++)
	{
		if(!TrunkInfo[id][TrunkItem][i]) total += ItemsInfo[item][ItemLCount];
		if(TrunkInfo[id][TrunkItem][i] == item && TrunkInfo[id][TrunkItemAmount][i] < ItemsInfo[item][ItemLCount]) total += ItemsInfo[item][ItemLCount] - TrunkInfo[id][TrunkItemAmount][i];
	}
	return total;
}
stock SaveShkaf(id)
{
	str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, HouseInfo[id][hItem][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `Item` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, HouseInfo[id][hItemAmount][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `ItemAmount` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvHouseParams[0][id][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `InvHouseParams` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvHouseParams[1][id][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `InvHouseParams_2` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvHouseColor[id][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `InvHouseColor` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 90; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvHouseUID[id][i]);
    mysql_pqueryf(mysql, "UPDATE `houses` SET `InvHouseUID` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    return 1;
}
stock SaveWareHouse(id)
{
	str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, WareHouse[id][wItem][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `Item` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, WareHouse[id][wItemAmount][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `ItemAmount` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvWareHouseParams[0][id][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `ItemParams` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
    str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvWareHouseParams[1][id][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `ItemParams_2` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
	str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvWareHouseUID[id][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `ItemUID` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
	str_1[0] = EOS;
    for(new i; i < 150; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvWareHouseColor[id][i]);
    mysql_pqueryf(mysql, "UPDATE warehouses` SET `InvWareHouseColor` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, id+1);
	return 1;
}
stock SaveInventory(playerid,type)
{
	if(!IsPlayerLogged[playerid]) return 0;
	switch(type)
	{
	    case 0: //main
	    {
			str_1[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pInvItem][i]);
			UpdatePlayerDataStr(playerid, "InvItem", str_1);
			
			str_1[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pInvItemAmount][i]);
			UpdatePlayerDataStr(playerid, "InvItemAmount", str_1);
		
			str_2[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, InvPlayerParams[0][playerid][i]);
			UpdatePlayerDataStr(playerid, "InvPlayerParams", str_2);
	    }
	    case 1: //main 2
	    {
			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, AksSlot[playerid][i]);
			UpdatePlayerDataStr(playerid, "InvItemAks", str_1);

			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvAksParams[1][playerid][i]);
			UpdatePlayerDataStr(playerid, "InvItemAksUID", str_1);

			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, AksSlotUID[playerid][i]);
			UpdatePlayerDataStr(playerid, "InvItemAksAmount", str_1);

			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvAksParams[0][playerid][i]);
			UpdatePlayerDataStr(playerid, "InvAksParams", str_1);

  			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, InvAksColor[playerid][i]);
			UpdatePlayerDataStr(playerid, "InvAksColor", str_1);
	    }
	    case 2: //params
	    {
			str_1[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pInvItemUID][i]);
			UpdatePlayerDataStr(playerid, "InvItemUID", str_1);

			str_2[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, InvPlayerColor[playerid][i]);
			UpdatePlayerDataStr(playerid, "InvPlayerColor", str_2);

			str_2[0] = EOS;
			for(new i; i < PI[playerid][pInvCell]; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, InvPlayerParams[1][playerid][i]);
			UpdatePlayerDataStr(playerid, "InvPlayerParams_2", str_2);
	    }
	    case 3: //main 3
	    {
			str_q2[0] = EOS;
		    for(new i; i < 6; i++) f(str_q2, sizeof(str_q2), "%s%i,", str_q2, PI[playerid][pSlotGun][i]);
		    UpdatePlayerDataStr(playerid, "InvAddSlot", str_q2);
	    }
		case 4: //wallet
		{
  			str_1[0] = EOS;
			for(new i; i < 12; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pInvWallet][i]);
			UpdatePlayerDataStr(playerid, "InvWallet", str_1);
		}
		case 5:
		{
  			str_1[0] = EOS;
			for(new i; i < 39; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, PI[playerid][pDamageBoost][i]);
			UpdatePlayerDataStr(playerid, "DamageBoost", str_1);
		}
		case 6:
		{
  			str_1[0] = EOS;
			for(new i; i < 8; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, player_InvAks_CustomPosition[playerid][i]);
			UpdatePlayerDataStr(playerid, "InvItemAks_CustomPosition", str_1);
		}
	}
	return 1;
}
stock SetInvLang(playerid)
{
 	if(!PI[playerid][pInvLang])
	{
		PlayerTextDrawSetString(playerid, Invent[playerid][42], "QUEST");
		PlayerTextDrawSetString(playerid, Invent[playerid][45], "REWARDS");
		PlayerTextDrawSetString(playerid, Invent[playerid][19], "HELP");
		PlayerTextDrawSetString(playerid, Invent[playerid][21], "REPORT");
		PlayerTextDrawSetString(playerid, Invent[playerid][26], "MENU");
		PlayerTextDrawSetString(playerid, Invent[playerid][28], "SETTINGS");
		PlayerTextDrawSetString(playerid, Invent[playerid][30], "CARS");
		PlayerTextDrawSetString(playerid, Invent[playerid][32], "BUSINESS");
		PlayerTextDrawSetString(playerid, Invent[playerid][34], "DONATE");
		PlayerTextDrawSetString(playerid, Invent[playerid][36], "FAMILY");
		PlayerTextDrawSetString(playerid, Invent[playerid][1], "INVENTORY");
		PlayerTextDrawSetString(playerid, Invent[playerid][4], "CLOSE");
		if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][1]))
		{
			switch(InvTypePlayer{playerid})
			{
				case 1: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRASH");
				case 2,5: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "WAREHOUSE");
				case 3: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRUNK");
				default: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "SECURITY");
			}
		}
	}
	else
	{
		PlayerTextDrawSetString(playerid, Invent[playerid][42], FixText("КВЕСТЫ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][45], FixText("ДОСТИЖЕНИЯ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][19], FixText("ПОМОЩЬ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][21], FixText("РЕПОРТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][26], FixText("МЕНЮ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][28], FixText("НАСТРОЙКИ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][30], FixText("ТРАНСПОРТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][32], FixText("БИЗНЕС"));
		PlayerTextDrawSetString(playerid, Invent[playerid][34], FixText("ДОНАТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][36], FixText("СЕМЬЯ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][1], FixText("ИНВЕНТАРЬ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][4], FixText("ЗАКРЫТЬ"));
		if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][1]))
		{
			switch(InvTypePlayer{playerid})
			{
				case 1: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("МУСОРКА"));
				case 2: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ШКАФ"));
				case 3:
				{
					if(TrunkInfo[idaofcar[playerid]][tOpen])
					{
						PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("БАГАЖНИК"));
					}
				}
				case 5: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("СКЛАД"));
				default: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "SECURITY");
			}
		}
	}
}
public: InvChangeSize(playerid)
{
	new Keys, UPDOWN, RIGHTANDLEFT;
	GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
	if(RIGHTANDLEFT == KEY_LEFT) InvSizeChange(playerid, 0);
	else if(RIGHTANDLEFT == KEY_RIGHT) InvSizeChange(playerid, 1);
	if(UPDOWN == KEY_UP) InvSizeChange(playerid, 2);
	else if(UPDOWN == KEY_DOWN) InvSizeChange(playerid, 3);
}
forward InvChangeColor(playerid);
public InvChangeColor(playerid)
{
    new Keys, UPDOWN, RIGHTANDLEFT;
    GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
    if(RIGHTANDLEFT == KEY_LEFT)
    {
        if(PI[playerid][pInvColor] == 0) PI[playerid][pInvColor] = sizeof(InvColor) - 1;
        PI[playerid][pInvColor] -= 1;
        ChangeInvColor(playerid, PI[playerid][pInvColor]);
    }
    else if(RIGHTANDLEFT == KEY_RIGHT)
    {
        if(PI[playerid][pInvColor] == sizeof(InvColor) - 1) PI[playerid][pInvColor] = 0;
        PI[playerid][pInvColor] += 1;
        ChangeInvColor(playerid, PI[playerid][pInvColor]);
    }
}
stock InvSizeChange(playerid, id) SCMf(playerid,-1,"В разработке %i",id);
stock _PlayerTextDrawSetPos(playerid, PlayerText:textdrawid, Float:_X2, Float:_Y2)
{
	if(textdrawid == PlayerText:INVALID_TEXT_DRAW) return 0;
	new Float:_X,
		Float:_Y,
		bool:hide;
	//fix invalid
	if(!IsPlayerTextDrawVisible(playerid, textdrawid)) hide = true, PlayerTextDrawShow(playerid, textdrawid);
	PlayerTextDrawGetPos(playerid, textdrawid, _X, _Y);
	PlayerTextDrawSetPos(playerid, textdrawid, _X+_X2, _Y+_Y2);
	if(!hide) PlayerTextDrawShow(playerid, textdrawid);
	else PlayerTextDrawHide(playerid, textdrawid);
	return 1;
}
stock UpdateInventory(playerid, bool:cursor)
{
	new id = 1;
	if(InventStatus{playerid} != false) 
	{
		id = InventPage[playerid];
	}
	HideInventory(playerid, 1);
	ShowInventory(playerid, cursor, id);
	if(!cursor) CancelSelectTextDraw(playerid);
}
stock InvPosChange(playerid, id)
{
    new Float:speed = 2.5;
    if(GetPVarInt(playerid, !"SpeedInv") == 1) speed += 2.5;
    else if(GetPVarInt(playerid, !"SpeedInv") == 2) speed -= 1.0;
    switch(id)
    {
        case 0://KEY_LEFT
        {
            PI[playerid][pInvPos_X] -= speed;
            if(PI[playerid][pInvPos_X] < -335.00) PI[playerid][pInvPos_X] = -335.00;
        }
        case 1://KEY_RIGHT
        {
            PI[playerid][pInvPos_X] += speed;
            if(PI[playerid][pInvPos_X] > 12.00) PI[playerid][pInvPos_X] = 12.00;
        }
        case 2://KEY_UP
        {
            PI[playerid][pInvPos_Y] -= speed;
            if(PI[playerid][pInvPos_Y] < -99.00) PI[playerid][pInvPos_Y] = -99.00;
        }
        case 3://KEY_DOWN
        {
            PI[playerid][pInvPos_Y] += speed;
            if(PI[playerid][pInvPos_Y] > 99.00) PI[playerid][pInvPos_Y] = 99.00;
        }
    }
	UpdateInventory(playerid, false);

	GameTextForPlayer(playerid, (str_f("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~POSITION: ~y~%.2f, %.2f~n~~w~SIZE: ~y~%.2f, %.2f", \
	PI[playerid][pInvPos_X], PI[playerid][pInvPos_Y], PI[playerid][pInvSize_X], PI[playerid][pInvSize_Y])), 200, 3);
	return 1;
}
stock SaveChangeInv(playerid)
{
    if(!IsPlayerLogged[playerid]) return 0;
	UpdatePlayerDataFloat(playerid, "InvPos_X", PI[playerid][pInvPos_X], "%.2f");
	UpdatePlayerDataFloat(playerid, "InvPos_Y", PI[playerid][pInvPos_Y], "%.2f");
	UpdatePlayerDataInt(playerid, "InvColor", PI[playerid][pInvColor]);
	return 1;
}
stock SearchCellDonate(playerid, slot=0)
{
	new ID = -1+slot;
	for(new i; i < sizeof(DonateInfo); i++)
	{
		if(DonateInfo[i][Item_Type] == Donate_Type[playerid])
		{
			if(!slot)
			{
				if(ID == -1) ID = i;
				break;
			}
			else ID = i;
		}
	}
	return ID;
}
stock ShowDonateSelect(playerid, type)
{
	Donate_Type[playerid] = type;
 	new ID = SearchCellDonate(playerid);
	Donate_Select[playerid] = ID;
	return ShowDonatePreview(playerid, ID, SearchCellDonate(playerid, 1), ID+1);
}
stock ShowDonatePreview(playerid, ID, previous, next)
{
	Donate_Select[playerid] = ID;
    new ID_Select = DonateInfo[ID][Item_InvID];
    new ID_Previous = DonateInfo[previous][Item_InvID];
    new ID_Next = DonateInfo[next][Item_InvID];

	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][7], GetSyncItem(playerid, ID_Previous));
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][7], ItemsInfo[ID_Previous][ItemPosX], ItemsInfo[ID_Previous][ItemPosY], ItemsInfo[ID_Previous][ItemPosZ], ItemsInfo[ID_Previous][ItemPosC]);
	if(DonateInfo[ID][Item_Type] == 2) PlayerTextDrawSetPreviewVehCol(playerid, Donate_Player[playerid][7], 0, 0);
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][7], 1);
	if(DonateInfo[ID][Item_Type] == 5) PlayerTDSetStringf(playerid, Donate_Player[playerid][44], "ID:%i", SearchSkinOrderID(ItemsInfo[ID_Previous][ItemID]));
	else PlayerTextDrawSetString(playerid, Donate_Player[playerid][44], "_");
	if(DonateInfo[previous][Item_Text])
	{
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][0], DonateInfo[previous][Item_Text]);
		if(DonateInfo[previous][Item_Type] == 3) PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][0], 270.134094, 323.851501);
		else PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][0], 270.134094, 314.404266);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][0]);
	}
    else PlayerTextDrawHide(playerid, Donate_Text[playerid][0]);

	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][6], GetSyncItem(playerid, ID_Select));
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][6], ItemsInfo[ID_Select][ItemPosX], ItemsInfo[ID_Select][ItemPosY], ItemsInfo[ID_Select][ItemPosZ], ItemsInfo[ID_Select][ItemPosC]);
	if(DonateInfo[ID][Item_Type] == 2) PlayerTextDrawSetPreviewVehCol(playerid, Donate_Player[playerid][6], 0, 0);
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][6], 1);
	if(DonateInfo[ID][Item_Type] == 5) PlayerTDSetStringf(playerid, Donate_Player[playerid][43], "ID:%i", SearchSkinOrderID(ItemsInfo[ID_Select][ItemID]));
    else PlayerTextDrawSetString(playerid, Donate_Player[playerid][43], "_");
    PlayerTextDrawShow(playerid, Donate_Player[playerid][43]);
	if(DonateInfo[ID][Item_Text])
	{
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][1], DonateInfo[ID][Item_Text]);
		PlayerTextDrawLetterSize(playerid, Donate_Text[playerid][1], 0.213312, 1.101695);
		PlayerTextDrawTextSize(playerid, Donate_Text[playerid][1], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Donate_Text[playerid][1], 2);
		PlayerTextDrawColor(playerid, Donate_Text[playerid][1], 0x000000FF);
		PlayerTextDrawUseBox(playerid, Donate_Text[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, Donate_Text[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Donate_Text[playerid][1], 1);
		PlayerTextDrawSetOutline(playerid, Donate_Text[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, Donate_Text[playerid][1], 0x00000040);
		PlayerTextDrawFont(playerid, Donate_Text[playerid][1], 2);
		PlayerTextDrawSetProportional(playerid, Donate_Text[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, Donate_Text[playerid][1], 0);
		if(GetString(DonateInfo[ID][Item_Text], "160L"))
		{
			PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][1], 331.647827, 363.786743);
			PlayerTextDrawAlignment(playerid, Donate_Text[playerid][1], 3);
			PlayerTextDrawColor(playerid, Donate_Text[playerid][1], 0xAAAAAAFF);
			PlayerTextDrawSetShadow(playerid, Donate_Text[playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, Donate_Text[playerid][1], 0x00000000);
		}
		else if(DonateInfo[ID][Item_Type] == 3) PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][1], 311.834106, 324.566406);
		else PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][1], 311.834106, 340.557922);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][1]);
	}
	else PlayerTextDrawHide(playerid, Donate_Text[playerid][1]);
	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][5], GetSyncItem(playerid, ID_Next));
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][5], ItemsInfo[ID_Next][ItemPosX], ItemsInfo[ID_Next][ItemPosY], ItemsInfo[ID_Next][ItemPosZ], ItemsInfo[ID_Next][ItemPosC]);
	if(DonateInfo[ID][Item_Type] == 2) PlayerTextDrawSetPreviewVehCol(playerid, Donate_Player[playerid][5], 0, 0);
	if(DonateInfo[ID][Item_Type] == 5) PlayerTDSetStringf(playerid, Donate_Player[playerid][42], "ID:%i", SearchSkinOrderID(ItemsInfo[ID_Next][ItemID]));
	else PlayerTextDrawSetString(playerid, Donate_Player[playerid][42], "_");
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][5], 1);
	if(DonateInfo[next][Item_Text])
	{
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][2], DonateInfo[next][Item_Text]);
		if(DonateInfo[next][Item_Type] == 3) PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][2], 354.300903, 323.851501);
		else PlayerTextDrawSetPosEx(playerid, Donate_Text[playerid][2], 354.300903, 331.597260);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][2]);
	}
    else PlayerTextDrawHide(playerid, Donate_Text[playerid][2]);
	if(PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Donate_Player[playerid][0], FixText(ItemsInfo[ID_Select][ItemName]));
	else PlayerTextDrawSetString(playerid, Donate_Player[playerid][0], DonateInfo[ID][Item_Name_Eng]);

	PlayerTextDrawShow(playerid, Donate_Player[playerid][7]);
	PlayerTextDrawShow(playerid, Donate_Player[playerid][6]);
	PlayerTextDrawShow(playerid, Donate_Player[playerid][5]);
	return 1;
}
stock SelectDonateItem(playerid, ID, model, info = 0) //triazov
{
	Donate_Select[playerid] = ID;
	new slot = SearchCellDonate(playerid), IDn, type = -1;
	if(ID == slot && model == -1) IDn = SearchCellDonate(playerid,1), type = 1;
	else if(ID == SearchCellDonate(playerid,1) && model == 1) IDn = slot, type = 2;
	else if(ID == slot+1 && model == -1) IDn = slot, type = 3;
	else if(ID == SearchCellDonate(playerid,1)-1 && model == 1) IDn = SearchCellDonate(playerid,1), type = 4;
	else
	{
		if(model == 1) IDn = ID+1;
		else IDn = ID-1;
	}
	Donate_Select[playerid] = IDn;
	if(type == 1) ShowDonatePreview(playerid, IDn, IDn-1, SearchCellDonate(playerid));
	else if(type == 2) ShowDonatePreview(playerid, IDn, SearchCellDonate(playerid,1), IDn+1);
	else if(type == 3) ShowDonatePreview(playerid, IDn, SearchCellDonate(playerid,1), IDn+1);
	else if(type == 4) ShowDonatePreview(playerid, IDn, IDn-1, SearchCellDonate(playerid));
	else ShowDonatePreview(playerid, IDn, IDn-1, IDn+1);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	if(info)
	{
		new InvID = DonateInfo[IDn][Item_InvID];
		if(!DonateInfo[ID][Item_TypeCost])
		{
			fmt(str_1, "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins", GetItemInfo(playerid, InvID), DonateInfo[IDn][Item_Cost]);
			SPD(playerid, 0, 0, !"Информация о предмете", str_1, !"Выход", !"");
		}
		else
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Rub", GetItemInfo(playerid, InvID), DonateInfo[IDn][Item_Cost]);
			SPD(playerid, 0, 0, !"Информация о предмете", str_1, !"Выход", !"");
		}
	}
}
stock BuyDonateItem(playerid, ID)
{
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	new InvID = DonateInfo[ID][Item_InvID];
	if(!DonateInfo[ID][Item_TypeCost])
	{
		if(InvID == 1087 || InvID == 1088 || InvID == 1089) return UpdateDialogRare(playerid, InvID-1087);
		/*switch(ItemsInfo[InvID][ItemView])
		{
			case 1781..1785: return SPDf(playerid, 8236, 0, !"Информация о предмете", !"Выход", !"", "{FFFFFF}Предмет: {FF332C}Нашивка на аксессуар(%s) {FFFF00}(0-й уровень нашивки){ffffff}\nИспользуется для улучшения характеристик персонажа, таких как:\nзащита, регенерация, урон, удача, макс. ХП.\n\nПолучить можно с помощью крафта в подвале подвале дома\nили на центральном рынке воспользоваться общим станком.\nТак же можно купить на центральном рынке у других игроков.\n\nНашивки можно улучшать в мастерской одежды, для этого\nвам необходим точильный амулет.\nУлучшать нашивку можно до 3-го уровня (максимальный).\nЧем больше уровень нашивки, тем более она влиятельная.\n\nЧтобы пришить нашивку на аксессуар, откройте инвентарь,\nнажмите на предмет нашивки, выберите [УСТАНОВИТЬ/INSTALL],\nзатем нажмите на предмет аксессуара, на который хотите пришить\nнашивку.\nОбратите внимание! После того как вы вставите нашивку в аксессуар,\nникто больше не сможет снять нашивку с аксессуара!\n\nНашивки можно передавать, продавать и выкидывать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести",1785-ItemsInfo[InvID][ItemView], ItemsInfo[InvID][ItemInfo], DonateInfo[ID][Item_Cost]);
		}*/
		switch(InvID)
		{
			case 1203: fmt(str_1, "{FFFFFF}Предмет: {FF332C}Bitcoin (BTC){ffffff}\nБиткоин - один из видов виртуальной валюты,\nеще его называют 'криптовалютой''.\nЕго можно майнить у себя в подвале дома,\nможно продавать и покупать в банке,\nможно передавать другим через трейд\nрасплачиваясь за какой-то товар.\n\nЧтобы майнить(создавать новые биткоины),\nнеобходимо построить домашний подвал с вентиляцией.\nЗатем купить видеокарты в магазине видеокарт (/gps),\nи установить их в подвале в специальные стойки.\nУ видеокарт есть состояние системы охлаждения,\nне забывайте подливать охлаждающей жидкости,\nиначе она перестанет работать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 803: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}LAUNCH{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}LAUNCH{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nSabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 622: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}Киберпанк{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Киберпанк{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nRegina(ID: 479) Sabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 623: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}FUTURETAXI{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}FUTURETAXI{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома. Подходит на модели:{FF332C}\nSabre(ID: 475) Hermes(ID: 474)\nSolair(ID: 458) Voodoo(ID: 412) Infernus(ID: 411)\nHuntley(ID: 579) Cheetah(ID: 415) Super GT(ID: 506)\nSandking(ID: 495) Rancher(ID: 505) Buffalo(ID: 402)\nSparrow(ID: 469) Maverick(ID: 487) Banshee(ID: 429)\nTurismo(ID: 451) Euros(ID: 587) Alpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 621: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}Футуристик{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Футуристик{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома.\nПодходит на модели: {FF332C}Cheetah(ID: 415) Infernus(ID: 411) Banshee(ID: 429)\nSparrow(ID: 469) Huntley(ID: 579) Turismo(ID: 451)\nMaverick(ID: 487) Buffalo(ID: 402) Voodoo(ID: 412)\nSolair(ID: 458) PCJ-600(ID: 461) Sanchez(ID: 468)\nHermes(ID: 474) Sabre(ID: 475) Sandking(ID: 495)\nRancher(ID: 505) Super GT(ID: 506) FCR-900(ID: 521)\nNRG-500(ID: 522) Euros(ID: 587) Alpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 619: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}Хэллоуин{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Хэллоуин{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или у коллекционера тыкв\nв Хэллоуин.\nПодходит на модели: {FF332C}Cheetah(ID: 415) Turismo(ID: 451) Infernus(ID: 411)\nMaverick(ID: 487) Sparrow(ID: 469) Banshee(ID: 429)\nHuntley(ID: 579) Buffalo(ID: 402) Voodoo(ID: 412)\nSolair(ID: 458) PCJ-600(ID: 461) Sanchez(ID: 468)\nHermes(ID: 474) Sabre(ID: 475) Sandking(ID: 495)\nRancher(ID: 505) Super GT(ID: 506) FCR-900(ID: 521)\nNRG-500(ID: 522) Euros(ID: 587) Alpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 620: fmt(str_1, "{FFFFFF}Предмет: Модификация {FFCB2C}Классик{FFFFFF}\nИспользуется для улучшения внешнего вида\nавтомобиля в полной комплектации {FFCB2C}Классик{FFFFFF}.\nУсиливает мощность двигателя. Можно приобрести\nна центральном рынке или создать в подвале вашего\nдома.\nПодходит на модели:\n{FF332C} Bullet(ID: 541) Hotring Racer(ID: 494) Yosemite(ID: 554)\nRoadtrain(ID: 515) Patriot(ID: 470) Freeway(ID: 463)\nHuntley(ID: 579) Turismo(ID: 451) Comet(ID: 480)\nMaverick(ID: 487) Infernus(ID: 411) Cheetah(ID: 415)\nBanshee(ID: 429) Sparrow(ID: 469) Buffalo(ID: 402)\nVoodoo(ID: 412) Solair(ID: 458) PCJ-600(ID: 461)\nSanchez(ID: 468) Hermes(ID: 474) Sabre(ID: 475)\nSandking(ID: 495) Rancher(ID: 505) Super GT(ID: 506)\nFCR-900(ID: 521) NRG-500(ID: 522) Euros(ID: 587)\nAlpha(ID: 602)\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1087: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Rare Box Yellow{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ffff00}В сундуке Rare Box YELLOW:\n{cccccc}- Lamborghini Urus\n- BMW M8\n- Mercedes GT63s AMG\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1089: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Rare Box Red{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{ff0000}В сундуке Rare Box RED:\n{cccccc}- Bentley Continental\n- Audi RS6\n- Mercedes E63s AMG (2020)\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1088: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Rare Box Blue{FFFFFF}\n{ffffff}При открытии этого сундука помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{0080ff}В сундуке Rare Box BLUE:\n{cccccc}- Mercedes S63 Coupe AMG\n- Mercedes G63 AMG\n- Volkswagen Touareg\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}в сувенирной лавке на новгодней площади\nили у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1513: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Ларец кастомных аксессуаров{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n{cccccc}- Кастомные часы (\"Rolex Submariner\", \"Gucci\", \"Apple Watch\", \"Casio G-SHOCK\" и другие)\n- Кастомные наушники (\"AirPods Max\", \"Razer\", \"beats by Dre\" и другие)\n- Кастомные кепки (\"Supreme\", \"Gucci\", \"Tommy Hilfiger\" и другие)\n- Кастомные маски (Неоновая, \"Scary\", \"Локи\" и другие)\n- Кастомные мотошлемы (\"Kitty\", \"Pink\", \"Alien\" и другие)\n- Кастомные эксклюзивные шляпы\n- Рюкзак \"Крипер\", рюкзак альпиниста\n- Шлем Тора, Футбольный шлем, Шлем \"Daft Punk\", \"Стив\", \"Гомер\"\n- Разные маски из \"Игры в Кальмара\", VIP маска \"Бык\"\n- Алмазная кирка\n- Крылья\n- Бронежилеты\n- Скин: Маленький Билл (ID: 460)\n{ffff00}- Супер-кирка\n- Супер-грабли\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1514: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Супер авто-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- BMW Z4 40i\n- Mercedes-Benz S600 W124\n- BMW X5 E53\n- Lexus RX450H\n- Rolls-Royce Cullinan\n- Mercedes CLA 63 AMG\n- Ford GT\n- Dodge Viper\n- McLaren MP4\n- Subaru WRX\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1515: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Ларец с премией{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Mercedes-Benz GLS 2020\n- Mercedes G65 AMG\n- Range Rover SVA\n- Tesla Model X\n- Nissan Silvia S15\n- Mercedes-Benz S600\n- Subaru BRZ\n- BMW M3 G20\n- BMW M4 G82\n- Ford Raptor F150\n- Genesis G90\n- Honda Integra Type-R\n- Audi A6\n- Mercedes CLA 45 AMG\n- Porsche Macan Turbo\n- Toyota Rav 4\n- Mitsubishi Lancer Old\n- Audi TT RS\n- BMW 4-Series\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- зловещие монеты\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1516: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Ларец Super Car Box{FFFFFF}\n{ffffff}При открытии этого ларца помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Lamborghini Aventador SVJ\n- Bugatti Chiron\n- Bugatti Divo Sport\n- Вертолёт Buckingham\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1517: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Ностальгический ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Aston Martin DB5\n- BMW M3 GTR\n- Chevrolet Camaro\n- Mazda RX7 Veilside FD\n- Mazda RX8\n- Mitsubishi Eclipse\n- Ford Mustang 289\n- Nissan 350Z\n- Nissan Skyline R34\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1518: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Тайник Илона Маска{FFFFFF}\nМожно получить с игрового магазина.\nНельзя продать, {FDCF28}обменять{FFFFFF}.\nМожно открывать каждые 2 часа игры в онлайне. \nПри открытии вы можете получить\nларец Super Car Box или ларец с премией,\nоткрывая которые можно выиграть ценные призы.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			case 1519: fmt(str_1, "{FFFFFF}Предмет: {FDCF28}Супер мото-ящик{FFFFFF}\n{ffffff}При открытии этого ящика помимо основных предметов,\nможно получить {FDCF28}супер-редкие {ffffff}предметы, такие как:\n\n{cccccc}- Мотоцикл Ducati Diavel\n- Мотоцикл Ducati Panigale\n- Мотоцикл Ducati Ducnaked\n- Мотоцикл Kawasaki Ninja ZX-10RR\n- Мотоцикл Western\n\n\n{ffffff}А так же есть возможность выиграть:\n{cccccc}- бронзовые рулетки\n- серебряные рулетки\n- платиновые рулетки\n- семейные талоны\n- точильные камни\n- точильные амулеты\n- дрифт-монеты\n- гражданские талоны\n- новые скины (разных блогеров и знаменитых личностей)\n- игровые очки (exp)\n- деньги\n\n{ffffff}Такой сундук можно приобрести в {FDCF28}донат-магазине,\n{ffffff}или у игроков на центральном рынке.\n\n{ffffff}Можно использовать, выкидывать, передавать и продавать.\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins",DonateInfo[ID][Item_Cost]);
			default: fmt(str_1, "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Coins\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести", GetItemInfo(playerid, InvID), DonateInfo[ID][Item_Cost]);
		}
		SPD(playerid, 8105, 0, !"", str_1, !"Обмен", !"Отмена");
	}
	else
	{
		str_1[0] = EOS, f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ Rub\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести", GetItemInfo(playerid, InvID), DonateInfo[ID][Item_Cost]);
		SPD(playerid, 8105, 0, !"", str_1, !"Обмен", !"Отмена");
	}
	return 1;
}
stock TSave(id, const TableName[], const FieldName[], const set[], const type[])
{
	str_q[0] = EOS;
	if(!strcmp(type, "i", true)) f(str_q, sizeof(str_q), "UPDATE `%s` SET `%s` = '%i' WHERE `ID` = '%i' LIMIT 1", TableName, FieldName, set, id);
	else if(!strcmp(type, "s", true)) f(str_q, sizeof(str_q), "UPDATE `%s` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1", TableName, FieldName, set, id);
	mysql_tquery(mysql, str_q);
}
stock FamRedacType(playerid)
{
	str_2[0] = EOS;
	for(new i; i < sizeof(fType);i ++)
	{
		if(FamilyInfo[pFamilyID(playerid)][famLevel] >= fType[i][typeLevel]) str_1[0] = EOS, f(str_1, sizeof(str_1), "%s %s %s\n", (FamilyInfo[pFamilyID(playerid)][famLevel] >= fType[i][typeLevel]) ? ("{FFFFFF}[{A4E45A}+{FFFFFF}]") : ("{FFFFFF}[{C97783}-{FFFFFF}]"), fType[i][typeName], fType[i][typeNameRus]);
		else str_1[0] = EOS, f(str_1, sizeof(str_1), "%s %s\n", (FamilyInfo[pFamilyID(playerid)][famLevel] >= fType[i][typeLevel]) ? ("{FFFFFF}[{A4E45A}+{FFFFFF}]") : ("{FFFFFF}[{C97783}-{FFFFFF}]"), fType[i][typeName]);
		strcat(str_2, str_1);
	}
	return SPD(playerid, 5009, DIALOG_STYLE_LIST, !"", str_2, !"»", !"«");
}
stock IsValidVehicleModel(const modelid) return (399 < modelid < 100000);
stock GetZonaName(Float: x, Float: y)
{
    for(new i; i != sizeof (gSAZones); i++)
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return i;
    }
    return 1;
}
stock GetCityName(Float: x,  Float: y)
{
    for(new i; i < sizeof (gSAZonesCity); i++)
    {
        if(x >= gSAZonesCity[i][SAZONE_AREA][0] && x <= gSAZonesCity[i][SAZONE_AREA][3] && y >= gSAZonesCity[i][SAZONE_AREA][1] && y <= gSAZonesCity[i][SAZONE_AREA][4] ) return i;
    }
    return 1;
}
stock CheckIsASuccesIP(playerid) {
    if(!GetString(PlayerRegIP[playerid], PlayerIp[playerid]) && !NameIsFullDostup(playerid, 2))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Наблюдается попытка взлома!");
		SendAdminsMessagef(COLOR_RED, "%s[%i] подозревается во взломе, проверьте его и авторизируйте /acceptadmin [6+ lvl]", PN(playerid), playerid);
		return 0;
 	}
 	return 1;
}
stock SetAdminLevel(playerid, level, const putadm[] = "-")
{
	if(GetString(putadm, "-")) 
	{
		UpdatePlayerDataStr(playerid, "putadmNickName", putadm);
		UpdatePlayerDataInt(playerid, "putadmDate", global_time);
	}
	PI[playerid][pAdmin] = level;
    UpdatePlayerDataInt(playerid, "Admin", level);
    return 1;
}
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z, Float:distance, Float:angle = 65535.0)
{
    new Float:dis;
    dis = dis/2 + distance;
    GetVehiclePos(vehicleid, x, y, z);
    if(angle == 65535.0)
        GetVehicleZAngle(vehicleid, angle);
    x -= (dis * floatsin(-angle+180, degrees));
    y -= (dis * floatcos(-angle+180, degrees));
    return 1;
}

stock FixText_function(const string[])
{
	for new i; i < strlen(string); i++ do
	{
		switch string[i] do
		{ 
			case 'а': RETURN_STRING_FIXTEXT[i] = 'a';  
			case 'А': RETURN_STRING_FIXTEXT[i] = 'A';  
			case 'б': RETURN_STRING_FIXTEXT[i] = '—';  
			case 'Б': RETURN_STRING_FIXTEXT[i] = 'Ђ';  
			case 'в': RETURN_STRING_FIXTEXT[i] = 'ў';  
			case 'В': RETURN_STRING_FIXTEXT[i] = '‹';  
			case 'г': RETURN_STRING_FIXTEXT[i] = '™';  
			case 'Г': RETURN_STRING_FIXTEXT[i] = '‚';  
			case 'д': RETURN_STRING_FIXTEXT[i] = 'љ';  
			case 'Д': RETURN_STRING_FIXTEXT[i] = 'ѓ';  
			case 'е': RETURN_STRING_FIXTEXT[i] = 'e';  
			case 'Е': RETURN_STRING_FIXTEXT[i] = 'E';  
			case 'ё': RETURN_STRING_FIXTEXT[i] = 'e';  
			case 'Ё': RETURN_STRING_FIXTEXT[i] = 'E';  
			case 'ж': RETURN_STRING_FIXTEXT[i] = '›';  
			case 'Ж': RETURN_STRING_FIXTEXT[i] = '„';  
			case 'з': RETURN_STRING_FIXTEXT[i] = 'џ';  
			case 'З': RETURN_STRING_FIXTEXT[i] = '€';  
			case 'и': RETURN_STRING_FIXTEXT[i] = 'њ';  
			case 'И': RETURN_STRING_FIXTEXT[i] = '…';  
			case 'й': RETURN_STRING_FIXTEXT[i] = 'њ';  
			case 'Й': RETURN_STRING_FIXTEXT[i] = '…';  
			case 'к': RETURN_STRING_FIXTEXT[i] = 'k';  
			case 'К': RETURN_STRING_FIXTEXT[i] = 'K';  
			case 'л': RETURN_STRING_FIXTEXT[i] = 'ћ';  
			case 'Л': RETURN_STRING_FIXTEXT[i] = '‡';  
			case 'м': RETURN_STRING_FIXTEXT[i] = 'Ї';  
			case 'М': RETURN_STRING_FIXTEXT[i] = 'M';  
			case 'н': RETURN_STRING_FIXTEXT[i] = '®';  
			case 'Н': RETURN_STRING_FIXTEXT[i] = 'H'; 
			case 'о': RETURN_STRING_FIXTEXT[i] = 'o';  
			case 'О': RETURN_STRING_FIXTEXT[i] = 'O';  
			case 'п': RETURN_STRING_FIXTEXT[i] = 'Ј';  
			case 'П': RETURN_STRING_FIXTEXT[i] = 'Њ';  
			case 'р': RETURN_STRING_FIXTEXT[i] = 'p';  
			case 'Р': RETURN_STRING_FIXTEXT[i] = 'P';  
			case 'с': RETURN_STRING_FIXTEXT[i] = 'c';  
			case 'С': RETURN_STRING_FIXTEXT[i] = 'C';  
			case 'т': RETURN_STRING_FIXTEXT[i] = '¦';  
			case 'Т': RETURN_STRING_FIXTEXT[i] = 'Џ';  
			case 'у': RETURN_STRING_FIXTEXT[i] = 'y';  
			case 'У': RETURN_STRING_FIXTEXT[i] = 'Y';   
			case 'ф','Ф': RETURN_STRING_FIXTEXT[i] = 'Ѓ';  
			case 'х': RETURN_STRING_FIXTEXT[i] = 'x';  
			case 'Х': RETURN_STRING_FIXTEXT[i] = 'X'; 
			case 'ц','Ц': RETURN_STRING_FIXTEXT[i] = '‰';  
			case 'ч': RETURN_STRING_FIXTEXT[i] = '¤';  
			case 'Ч': RETURN_STRING_FIXTEXT[i] = 'Ќ';  
			case 'ш': RETURN_STRING_FIXTEXT[i] = 'Ґ';  
			case 'Ш': RETURN_STRING_FIXTEXT[i] = 'Ћ';  
			case 'щ': RETURN_STRING_FIXTEXT[i] = 'Ў';  
			case 'Щ': RETURN_STRING_FIXTEXT[i] = 'Љ';  
			case 'ь': RETURN_STRING_FIXTEXT[i] = '©';  
			case 'Ь': RETURN_STRING_FIXTEXT[i] = '’';  
			case 'ъ': RETURN_STRING_FIXTEXT[i] = 'ђ';  
			case 'Ъ': RETURN_STRING_FIXTEXT[i] = '§';  
			case 'ы': RETURN_STRING_FIXTEXT[i] = 'Ё';  
			case 'Ы': RETURN_STRING_FIXTEXT[i] = '‘';  
			case 'э': RETURN_STRING_FIXTEXT[i] = 'Є';  
			case 'Э': RETURN_STRING_FIXTEXT[i] = '“';  
			case 'ю': RETURN_STRING_FIXTEXT[i] = '«';  
			case 'Ю': RETURN_STRING_FIXTEXT[i] = '”';  
			case 'я': RETURN_STRING_FIXTEXT[i] = '¬';  
			case 'Я': RETURN_STRING_FIXTEXT[i] = '•';  
			default: RETURN_STRING_FIXTEXT[i] = string[i];
        }  
    }
	RETURN_STRING_FIXTEXT[strlen(string)] = '\0';
} 
stock FixTextNew(const string[], incall[])
{
	new result[64];
	for (new i; i < sizeof(result); i++)
	{
		switch (string[i])
		{
			case 'а', 'А': result[i] = 'A';
			case 'б', 'Б': result[i] = 'Ђ';
			case 'в', 'В': result[i] = 'B';
			case 'г', 'Г': result[i] = '‚';
			case 'д', 'Д': result[i] = 'ѓ';
			case 'е', 'Е': result[i] = 'E';
			case 'ё', 'Ё': result[i] = 'E';
			case 'ж', 'Ж': result[i] = '„';
			case 'з', 'З': result[i] = '3';
			case 'и', 'И': result[i] = '…';
			case 'й', 'Й': result[i] = '†';
			case 'к', 'К': result[i] = 'K';
			case 'л', 'Л': result[i] = '‡';
			case 'м', 'М': result[i] = 'M';
			case 'н', 'Н': result[i] = 'H';
			case 'о', 'О': result[i] = 'O';
			case 'п', 'П': result[i] = 'Њ';
			case 'р', 'Р': result[i] = 'P';
			case 'с', 'С': result[i] = 'C';
			case 'т', 'Т': result[i] = 'T';
			case 'у', 'У': result[i] = 'Y';
			case 'ф', 'Ф': result[i] = 'Ѓ';
			case 'х', 'Х': result[i] = 'X';
			case 'ц', 'Ц': result[i] = '‰';
			case 'ч', 'Ч': result[i] = 'Ќ';
			case 'ш', 'Ш': result[i] = 'Ћ';
			case 'щ', 'Щ': result[i] = 'Љ';
			case 'ъ', 'Ъ': result[i] = 'ђ';
			case 'ы', 'Ы': result[i] = '‘';
			case 'ь', 'Ь': result[i] = '’';
			case 'э', 'Э': result[i] = '“';
			case 'ю', 'Ю': result[i] = '”';
			case 'я', 'Я': result[i] = '•';
			default: result[i] = string[i];
		}
	}
	SetString(incall, result);
}
stock acsgetinv(itemid)
{
	for(new i; i < sizeof(ItemsInfo); i++)
	{
		if(ItemsInfo[i][ItemID] == itemid) return 0;
	}
	return 1;
}
enum enacsinv
{
	acsid,
	acsname[34+25],
	acsslot
};
static const acsinv[][enacsinv] = {
	{15897, "Сноуборд Абстракция", 6}
};
stock AddNewItemsInfo()
{
	//car new
	new size_itemsinfo = sizeof(ItemsInfo);
	for(new i=211; i < sizeof(InfoConfigVehicle); i++)
	{
		if(!acsgetinv(InfoConfigVehicle[i][Model_NEW]) || InfoConfigVehicle[i][Model_NEW] == -1) continue;
		printf("//*/%i/*//{%i,  352.0,  345.0,  20.0,   0.832325,   1, \"\
		Сертификат: {FDCF28}%s{FFFFFF}{DASLADSLADSL}\
		Можно купить с выставочного стенда {FDCF28}на центральном рынке{FFFFFF},{DASLADSLADSL}\
		в {FDCF28}новом премиум-автосалоне.{ffffff}{DASLADSLADSL}\
		Используется для получения авто марки {FDCF28}%s{FFFFFF}{DASLADSLADSL}\
		Необходимо находится на автобазаре ({FDCF28}/GPS{FFFFFF})\",\
		 \"Сертификат: %s\", 2, 0, 10},", size_itemsinfo, InfoConfigVehicle[i][Model_NEW], InfoConfigVehicle[i][Model_Name], InfoConfigVehicle[i][Model_Name],\
		 InfoConfigVehicle[i][Model_Name]);
		size_itemsinfo++;
	}
	//skin new
	new count;
	for(new i; i < sizeof(InfoConfigSkin); i++)
	{
		if(!acsgetinv(InfoConfigSkin[i][MSkin_New]) || InfoConfigSkin[i][MSkin_New] == -1) continue;
		count = 311+i;
		printf("//*/%i/*//{%i, 0.0,  0.0,  0.0,  1.0, 1, \"{FDCF28}Скин: %s (ID: %i){FFFFFF}{DASLADSLADSL}Можно приобрести в донате за AZ-Coins,{DASLADSLADSL}на центральном рынке, или с {FDCF28}ларца кастомных аксессуаров{FFFFFF}.{DASLADSLADSL}Используется для изменения внешнего вида персонажа.{DASLADSLADSL}Можно надеть, передать, выкинуть.\", \
		\"Скин: %s (ID: %i)\", 1, 0, 9},", size_itemsinfo, InfoConfigSkin[i][MSkin_New], InfoConfigSkin[i][MSkin_Name], count,\
		InfoConfigSkin[i][MSkin_Name], count);
		size_itemsinfo++;
	}
	//acs new
	for(new i; i < sizeof(acsinv); i++)
	{
		if(!acsgetinv(acsinv[i][acsid])) continue;
		printf("//*/%i/*//{%i, 0.0, 0.0, 0.0, 0.0, 1, \"{FFFFFF}Аксессуар: {FDCF28}%s{FFFFFF}{DASLADSLADSL}{FFFFFF}Аксессуар доступен только играя с лаунчера %s %s или %s MOBILE!{DASLADSLADSL}\
		{FFFFFF}Используется для изменения{DASLADSLADSL}внешнего вида персонажа. Можно надеть.\", \"%s\", 1, 0, %i},",\
		 size_itemsinfo, acsinv[i][acsid], acsinv[i][acsname], ServerCFG[server_name], ServerCFG[server_logo], ServerCFG[server_name], acsinv[i][acsname],acsinv[i][acsslot]);
		size_itemsinfo++;
	}
	return 1;
}
stock func_Present(bool:reset)
{
	if(!reset)
	{
		foreach(new pickupid : PickupPresent) if(IsValidDynamicPickup(pickupid)) DestroyDynamicPickupEx(pickupid);
		Iter_Clear(PickupPresent);
		print("reset pickuppresent");
	}
	static const Float:pos_Present[13][] = {
		{790.9447,-937.7485},
		{-626.7739,-1583.3390},
		{-1848.2960,-328.6667},
		{-2303.4636,354.9682},
		{-2090.1523,-71.5942},
		{187.0575,1254.0531},
		{1305.8307,1850.9612},
		{1799.0558,1323.0870},
		{2428.5662,1071.2747},
		{2477.6450,1945.8772},
		{1968.79, -1814.65},
		{2454.91, -1428.44},
		{2097.08, -1114.78}
	};
	for(new i; i < sizeof pos_Present; i++)
	{
		for(new j; j < 70; j++)
		{
			new Float:Position_r[3];
			for(new a; a < 2; a++) Position_r[a] += pos_Present[i][a]+frandom(-500.0, 500.0);
			MapAndreas_FindZ_For2DCoord(Position_r[0], Position_r[1], Position_r[2]);
			Iter_Add(PickupPresent, CreateDynamicPickup(randomEx(19055, 19059), 23, Position_r[0], Position_r[1], Position_r[2]+0.9));
		}
		print("add pickuppresent");
	}
}
public OnGameModeInit()
{
    new currenttime = GetTickCount();
 	getdate(global_year,global_month,global_day);
	global_time = gettime();
	
	LoadMySQL(); // - Настройка параметров бд сервера
	LoadServerConfig(); // - Настройка параметров сервера
	
	Iter_Init(hint_forLauncher);
	Iter_Clear(IsPlayerBot);
	Iter_Clear(EngineON_Vehicle);
	Iter_Clear(WH_DoorTimer);
	Iter_Clear(FamilysCapture);
    Iter_Clear(Familys);
	Iter_Clear(Razdaha);
	Iter_Clear(WorkNPC);
    Iter_Clear(OWNABLECARS);
    Iter_Clear(TREASURE);
    Iter_Clear(OWNABLETRi);
	Iter_Clear(PickupPresent);
    Iter_Clear(itemSkin);
	Iter_Clear(itemVehicle);
    Iter_Clear(itemAccessories);
    Iter_Clear(itemUnknown);
    Iter_Clear(sphereGreenZone);
    
	bcrypt_debug(BCRYPT_LOG_TRACE);
	SetString(PlayerName[MAX_PLAYERS], "-");
	SetString(botCheckName, "The_State");
	//Profiler_Start();
	DestroyAllDynamicObjects();
	DestroyAllDynamicPickups();
	DestroyAllDynamicCPs();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicAreas();
	
    print("\n\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- LoadFilterScripts =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
   	SendRconCommand("reloadfs fs");
	SendRconCommand("reloadfs xxl_guard");
    print("\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- LoadOtherDataServer =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");


	MapAndreas_Init(MAP_ANDREAS_MODE_MINIMAL);
	
    GetServerVarAsString("filterscripts", global_str, 1024);

	if strlen(global_str) *then return print("  [Data Server]: Подгрузка filterscripts, доступна только по средству мода!"), SendRconCommand("exit");
	
	//FCNPC_UseCrashLog(false);
	
	SendRconCommand("ackslimit 15000");
	SendRconCommand("messageholelimit 15000");
	SendRconCommand("messageslimit 15000");
    SendRconCommand("onfoot_rate 40");
	SendRconCommand("incar_rate 40");
	SendRconCommand("weapon_rate 40");
	SendRconCommand("stream_distance 400.0");
	SendRconCommand("stream_rate 400");
	
	switch(mysql_errno(mysql))
    {
        case 0: print("Подключение к базе данных удалось");
        case 1044: print("Подключение к базе данных не удалось [Указано несуществующее имя пользователя]");
        case 1045: print("Подключение к базе данных не удалось [Указан неправильный пароль]");
        case 1049: print("Подключение к базе данных не удалось [Указана несуществующая база данных]");
        case 2003: print("Подключение к базе данных не удалось [Хостинг с базой данных недоступен]");
        case 2005: print("Подключение к базе данных не удалось [Указан неправильный адрес хостинга]");
        default: printf("Подключение к базе данных не удалось [Неизвестная ошибка. Код ошибки: %i]", mysql_errno());
    }
    if !mysql_errno(mysql) *then
	{
		mysql_tquery(mysql, !"SET NAMES 'cp1251'");
		mysql_set_charset("cp1251", mysql);
	    mysql_tquery(mysql, !"UPDATE `"TABLE_ACCOUNTS"` SET `Online_status` = '-1', `CasinoTime` = '0', `CasinoUsed` = '0' WHERE 1;");

        print("\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- LoadDataBaseDataServer =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
		mysql_pquery(mysql, "SELECT * FROM `billboard` ORDER BY `ID`", "LoadBillboard"); //LoadFamily();
		mysql_pquery(mysql, "SELECT * FROM `familys` ORDER BY `ID`", "LoadFamily"); //LoadFamily();
		mysql_pquery(mysql, "SELECT * FROM `trailers` ORDER BY `ID`", "LoadTrailer"); //LoadTrailer();
		mysql_pquery(mysql, "SELECT * FROM `radar` ORDER BY `ID`", "LoadRadars"); //LoadRadars();
		mysql_pquery(mysql, "SELECT * FROM `houses` ORDER BY `ID`", "LoadHouses"); //LoadHouses();
		mysql_pquery(mysql, "SELECT * FROM `warehouses` ORDER BY `ID`", "LoadWareHouses"); //LoadHouses();
		mysql_pquery(mysql, "SELECT * FROM `businesses` ORDER BY `ID`", "LoadBiz"); //LoadBiz();
		mysql_pquery(mysql, "SELECT * FROM `orgsinfo` ORDER BY `ID`", "LoadOrgs"); //LoadOrgs();
	    mysql_pquery(mysql, "SELECT * FROM `config`", "LoadConfig"); //LoadConfig();
	   	mysql_pquery(mysql, "SELECT * FROM `antidm` ORDER BY `id`", "LoadAntiDM"); //LoadAntiDM();
		mysql_pquery(mysql, "SELECT * FROM `zonesinfo` ORDER BY `ID`", "LoadGangZones");
		mysql_pquery(mysql, "SELECT * FROM `familyhouses` ORDER BY `ID`", "LoadFamilyHouses");
		mysql_pquery(mysql, "SELECT * FROM `server_settings`", "LoadStartBonus");
		CheckBestRewards();
		
		print("  [Data Base]: Ошибок не выявлено, загрузка продолжается!");
	}
	else
	{
		printf("  [Data Base]: Найденна ошибка '%d', повторяем подключение.", mysql_errno(mysql));
	}
    //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
    
    LimitPlayerMarkerRadius(70.0);
	EnableVehicleFriendlyFire();
    ManualVehicleEngineAndLights();
   	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	SetNameTagDrawDistance(20.0);
	LimitGlobalChatRadius(13.0);
	Streamer_ToggleChunkStream(true);
	Streamer_SetChunkSize(STREAMER_TYPE_OBJECT, 1000);
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 1000, -1);
	Streamer_SetTypePriority(Streamer_Types, sizeof Streamer_Types);
	Streamer_TickRate(50);
	Streamer_SetTickRate(50);
	YSF_SetTickRate(5);
   	ShowPlayerMarkers(2);
   	SetGravity(0.009);
   	Weather = 2;
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	SetGameModeText(ServerCFG[server_mode]);
	LoadCity();
	LoadBonusOther();
	OtherObjects();
	LoadGlobalTextDraws();
	LoadVehicles();
	LoadOther();
	LoadActors();
	//AddNewItemsInfo();
	new hour;
	gettime(hour);
	SetWorldTime(hour);
    SetTimer("GrandTimer", 490, 1);
    ServerInfo();
	ClearBanList();
	
	CreateDynamicPickup(1239, 23, 1805.9238,-2053.0334,13.5607, 0, 0);
	pickupkrytoe = CreateDynamicSphere(1805.9238,-2053.0334,13.5607, 30.0, 0, 0);
	CreateDynamic3DTextLabel(!"Магическая удача\n\
	{cccccc}Каждые 60 секунд игроки в радиусе 30 метров получают {FF6666}10 магических монет{cccccc}.\n\
	Используйте клавишу {FF6666}ALT {cccccc}на пикапе, чтобы просмотреть список наград в рулетке и прокрутить ее.", 0xFF6666FF, 1805.9238,-2053.0334,13.5607, 15.0000);
	for(new i; i < 3; i++) RareBoxAmount{i} = random(20);
	
	for(new i; i < sizeof(ItemsInfo); i++)
	{
        if(i < 5) Iter_Clear(hint_forLauncher[i]);
        switch(ItemsInfo[i][ItemView])
        {
            case 1..8: //aks
            {
                if(Iter_Free(itemAccessories) != -1) Iter_Add(itemAccessories, i);
            }
            case 9: //skin
            {
                if(Iter_Free(itemSkin) != -1) Iter_Add(itemSkin, i);
            }
            case 10: //sert vehicle
            {
                if(Iter_Free(itemVehicle) != -1) Iter_Add(itemVehicle, i);
            }
            default: //other
            {
                if(Iter_Free(itemUnknown) != -1) Iter_Add(itemUnknown, i);
            }
        }
	}
	for(new i; i < sizeof CustomDoor; i++)
	{
		if(CustomDoor[i][cTime] == 7)
		{
			CustomDoorUID[i] = CreateDynamicObject(975, CustomDoor[i][customX], CustomDoor[i][customY], CustomDoor[i][customZ], CustomDoor[i][cOffSetX], CustomDoor[i][cOffSetY], CustomDoor[i][cOffSetZ],-1,-1,-1,150.000,150.000);
			SetDynamicObjectMaterial(CustomDoorUID[i], 0, 1736, "cj_ammo", "CJ_Black_metal", 0);
			SetDynamicObjectMaterial(CustomDoorUID[i], 1, 5449, "chicanotr1_lae", "eb_firesc1_LAe2", 0xFFAAAAAA);
			SetDynamicObjectMaterial(CustomDoorUID[i], 2, 19962, "samproadsigns", "materialtext1", 0);
			SetDynamicObjectMaterial(CustomDoorUID[i], 4, 19962, "samproadsigns", "materialtext1", 0);
			continue;
		}
		CustomDoorUID[i] = CreateDynamicObject(2909,CustomDoor[i][customX], CustomDoor[i][customY], CustomDoor[i][customZ], CustomDoor[i][cOffSetX], CustomDoor[i][cOffSetY], CustomDoor[i][cOffSetZ],-1,-1,-1,150.000,150.000);
		SetDynamicObjectMaterial(CustomDoorUID[i], 1, 3314, "ce_burbhouse", "black_128", 0);
	}
	func_Present(true);
	bitprice = randomEx(3200000, 4000000);
	return printf("OnGameModeInit загрузился за %i ms", GetTickCount() - currenttime);
}
stock GetTickDiff(newtick, oldtick)
{
	if(oldtick >= 0 && newtick < 0 || oldtick > newtick) return ((cellmax - oldtick + 1) - (cellmin - newtick));
	return (newtick - oldtick);
}
stock DeleteBot()
{
	new id = Iter_Random(IsPlayerBot);
	if(IsPlayerConnectEx(id) != 0) Kick(id);
}
stock AddBot()
{
	static const 

		InfoNameBot[][] = {
		{"Sergio"},{"Sergey"},
		{"Dmitriy"},{"Dmitry"},{"Johny"},{"Djon"},{"Jordan"},{"Maxim"},{"Max"},{"Bogdan"},{"Diego"},{"Baby"},{"Danya"},{"Great"},{"Danil"},
		{"Daniel"},{"Yamato"},{"Santo"},{"Matteo"},{"Slayd"},
		{"Rayn"},{"Cosmo"},{"Alexey"},{"Alex"},{"Morty"},{"Hatory"},{"Kolya"},{"Nikolay"},{"Cursed"},{"Lucifer"},{"Takashi"},{"Tawer"},
		{"Jack"},{"Benzo"},{"Noro"},{"Thrill"},{"Vova"},
		{"Vovan"},{"Dapo"},{"Vlad"},{"Felix"},{"Roma"},{"Mishka"},{"Daddy"},{"Zero"},{"Maloy"},
		{"Sam"}
	},
		InfoFamilyBot[][] = {
		{"Revazz"},{"NeOleg"},{"Capone"},{"Ghetto"},{"Pizza"},{"Blitz"},{"Meison"},{"Mason"},{"Long"},{"McDick"},{"Reez"},{"White"},{"Black"},
		{"Zero"},{"Wizard"},{"Vovk"},{"Killer"},{"Monopoly"},{"Lovlya"},{"XsDick"},
		{"Winston"},{"Toretto"},{"Carter"},{"Lincoln"},{"Castle"},{"Allison"},{"Pimp"},
		{"Life"},{"Filatov"},{"Side"},{"Didas"},{"xCock"},{"Yosida"},{"Nambovan"},{"Deys"},{"KiberSport"},{"Plaza"},{"Capone"},{"Lowlight"},{"High"},{"Cybersport"},{"Bandit"},
		{"BlackBerry"}
	};
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s", InfoNameBot[random(sizeof(InfoNameBot))]);
	strcat(str_1, "_");
	f(str_1, sizeof(str_1), "%s%s", str_1, InfoFamilyBot[random(sizeof(InfoFamilyBot))]);
	SetString(botCheckName, str_1);

	#if BOTS == 1
	    PB_RegisterBot(botCheckName);
	#endif
	ConnectNPC(botCheckName, "pawnbots");
	botConnect_Timer = 5;
	printf("add bot %s", botCheckName);
}
stock CheckBestRewards()
{
	//money select max
	new Cache:result = mysql_query(mysql, "\
	SELECT `NickName`, `BonusMinute` FROM accounts WHERE `BonusMinute`=(SELECT MAX(`BonusMinute`) FROM `accounts`) LIMIT 1;", true);
	if(!cache_num_rows()) besthours = 0;
	else
	{
		cache_get_string(0, !"NickName", besthoursPN);
		cache_get_int(0, !"BonusMinute", besthours);
		besthours = besthours/60;
	}
	cache_delete(result);

	//best az coins
	new Cache:result3 = mysql_query(mysql, "\
	SELECT `NickName`, `VirMoney` FROM accounts WHERE `VirMoney`=(SELECT MAX(`VirMoney`) FROM `accounts`) LIMIT 1;", true);
	if(!cache_num_rows()) bestAZCoins = 0;
	else 
	{
		cache_get_string(0, !"NickName", bestAZCoinsPN);
		cache_get_int(0, !"VirMoney", bestAZCoins);
	}
	cache_delete(result3);
	
	//bestcaptcha
	new Cache:result2 = mysql_query(mysql, "\
	SELECT `ownerName`, `ms` FROM captchadata WHERE `ms`=(SELECT MIN(`ms`) FROM `captchadata`) LIMIT 1;", true);
	if(!cache_num_rows()) bestCaptcha = 0.0;
	else 
	{
		cache_get_string(0, !"ownerName", bestCaptchaPN);
		cache_get_float(0, "ms", bestCaptcha);
	}
	cache_delete(result2);
	//best luck
	new Cache:result4 = mysql_query(mysql, "\
	SELECT `NickName` FROM accounts WHERE `Luck`=(SELECT MAX(`Luck`) FROM `accounts`) LIMIT 1;", true);
	if(cache_num_rows()) cache_get_string(0, !"NickName", bestLuckyPN);
	cache_delete(result4);
	//mysql_pqueryf(mysql, "UPDATE `accounts` SET `Luck` = `Luck`+1 WHERE `ID` = '%i' LIMIT 1;", PI[i][pID]);
	//
	str_1[0] = EOS, f(str_1, sizeof(str_1), "\
	{FFCC66}Игроман сервера %s(Наиграл %i серверных часов)\n\
	{FFCC66}Состоятельный бизнесмен %s(Насчитывает у себя %i AZCoins)\n\
	{FFCC66}Гений печати %s(Вводит капчу за %.2f ms.)\n\
	{FFCC66}Самый везучий %s (Удача на его стороне)",
	besthoursPN, besthours,\
	bestAZCoinsPN, bestAZCoins,\
	bestCaptchaPN, bestCaptcha,bestLuckyPN);
	new Float:x[2], Float:y[2], Float:z[2];
	x[0] = 1154.2946, y[0] = -1746.2574, z[0] = 13.5703,\
		x[1] = 1778.7260, y[1] = -1895.6864, z[1] = 13.3884;
	for(new i; i < 2; i++)
	{
		if(Best3DText[i] == Text3D:-1) Best3DText[i] = CreateDynamic3DTextLabel(str_1, 0xFFFF00FF, x[i], y[i], z[i], 10.0);
		else UpdateDynamic3DTextLabelText(Best3DText[i], 0xFFFF00FF, str_1);
	}
}
public OnGameModeExit() return DisconnectMySQL();
stock DisconnectMySQL()
{
    mysql_close(mysql);
	return 1;
}
stock ShowPassport(playerid, id)
{
	str_1[0] = EOS, str_2[0] = EOS;
    if(PI[playerid][pWanted] > 0)
    {
		f(str_2, sizeof(str_2), "{FFFFFF}Имя: {FFD700}%s [ {FCAB48}В розыске {FFD700}]\n", PN(playerid));
		strcat(str_1, str_2);
	}
	else
	{
		f(str_2, sizeof(str_2), "{FFFFFF}Имя: {FFD700}%s\n", PN(playerid));
		strcat(str_1, str_2);
	}
	f(str_2, sizeof(str_2), "{FFFFFF}Лет в штате: {FFD700}%i\n", PI[playerid][pLevel]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{FFFFFF}Серия: {FFD700}%i\n", PassInfo[playerid][psSeria]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{FFFFFF}Номер: {FFD700}%i\n", PassInfo[playerid][psNumber]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{FFFFFF}Законопослушность: {FFD700}%i/100\n", PI[playerid][pZKP]);
	strcat(str_1, str_2);
	strcat(str_1,!"{FFFFFF}Семейное положение: {FFD700}[ Не женат(а) ]\n");
	if(PI[playerid][pMember])
	{
	    if(!IsAtGang(playerid) && !IsAtMafia(playerid))
	    {
			f(str_2, sizeof(str_2), "{FFFFFF}Организация: {FFD700}%s\n", global_OrgInfo[GetTeamID(playerid)][g_oName]);
			strcat(str_1, str_2);
			f(str_2, sizeof(str_2),"{FFFFFF}Должность: {FFD700}%s\n", GetRankName(GetTeamID(playerid), PI[playerid][pRank]));
			strcat(str_1, str_2);
		}
	}
	f(str_2, sizeof(str_2), "{FFFFFF}Работа: {FFD700}%s\n", GetJobName(PI[playerid][pJob]));
	strcat(str_1, str_2);
	if(!GetInvCount(playerid, 808)) strcat(str_1, !"{FFFFFF}Военный билет: {FFBD5F}[ Нет ]\n \n");
	else strcat(str_1, !"{FFFFFF}Военный билет: {FFD700}[ Есть ]\n \n");
	strcat(str_1, !"{FFFFFF}Жилая Недвижимость:\n");
	new amount;
	for(new i; i < OWNABLEHOUSES; i++)
    {
		new room = GetPlayerTenant(playerid, i);
        if(!GetString(HouseInfo[i][hOwner], PN(playerid)) || room != 0) continue;
        str_d[0] = EOS, f(str_d, sizeof(str_d), "{FFD700}Дом №%i%s\n%s", i, room != 0 ? ("[Подселен]") : (" "), str_d);
        amount++;
    }
    if(amount) strcat(str_1, str_d),strcat(str_1, !"\n");
    else strcat(str_1, !"{FFD700}Нет\n");
    amount = EOS;
    strcat(str_1, !"{FFFFFF}Коммерческая Недвижимость:\n");
   	for(new i; i < OWNABLEBIZES; i++)
    {
        if(!GetString(BizInfo[i][bOwner], PN(playerid))) continue;
        str_d[0] = EOS, f(str_d, sizeof(str_d), "{FFD700}Бизнес №%i [%s]\n%s", i,InfoBusinesses[BizInfo[i][bState]][BName],str_d);
        amount++;
    }
    if(amount) strcat(str_1, str_d), strcat(str_1, !"\n");
    else strcat(str_1, !"{FFD700}Нет\n");
    strcat(str_1, !"{FFFFFF}Фермерское хозяйство:{FFD700}\nНет\n\n");
	SPD(id, 0, 0, !"Паспорт", str_1, !"Ок", !"");
	return 1;
}
stock ShowAntiDmSettings(playerid)
{
	f(str_1, sizeof(str_1), "Название\tСостояние\n");
	for(new i; i < TOTAL_GREENZONE; i++)
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}%s\t%s{FFFFFF}\n", AntiDm[i][zName], AntiDm[i][zStatus] != false ? ("{9ACD32}[Вкл]") : ("{FF6347}[Выкл]"));
	    strcat(str_1, str_2);
	}
	SPD(playerid, 255, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Принять", !"Отмена");
	return 1;
}
public OnPlayerRequestSpawn(playerid)
{
	if(!IsPlayerLogged[playerid])
	{
	    SCM(playerid, COLOR_RED, !"[Подсказка] {FFFFFF}Для авторизации на нашем сервере введите пароль");
	    J_Kick(playerid, 1235);
	    return 0;
	}
	return 0;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(IsPlayerLogged[playerid])
	{
		PlayerSpawn(playerid),SMD(playerid, "default requestclass");
		GetSkinOfPlayer(playerid);
		SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
	}
	return 0;
}
stock ShowDamageTextDrawForPlayer(playerid, hitplayerid, idweapon, Float:amount)
{
	if(!IsPlayerConnectEx(playerid) || !IsPlayerConnectEx(hitplayerid)) return 1;
    GetWeaponName(idweapon, str_1, 32);
    if(!idweapon) str_1 = "Fist";

    f(str_1, sizeof(str_1) ,"%s - %s -%.2f", PN(playerid), str_1, amount);
    PlayerTextDrawSetString(hitplayerid, td_damage[hitplayerid][1], str_1);
    PlayerTextDrawShow(hitplayerid, td_damage[hitplayerid][1]);

    f(str_1, sizeof(str_1) ,"%s - %s +%.2f", PN(hitplayerid), str_1, amount);
    PlayerTextDrawSetString(playerid, td_damage[playerid][0], str_1);
    PlayerTextDrawShow(playerid, td_damage[playerid][0]);

    return SetTimerEx("HideDamageTextDraws", 5000, false, "ii", playerid, hitplayerid);
}
public: HideDamageTextDraws(playerid, hitplayerid)
{
	PlayerTextDrawHide(hitplayerid, td_damage[hitplayerid][1]);
    PlayerTextDrawHide(playerid, td_damage[playerid][0]);
}
IRPC:115(playerid, BitStream:bs)
{
	new
		bool:GiveDamage,
		damagedid,
		Float:amount,
		weaponid,
		dBodypart;
	//
	//BS_IgnoreBits(bs, 8);
	BS_ReadValue(bs,\
	PR_BOOL, GiveDamage,
	PR_UINT16, damagedid,
	PR_FLOAT, amount,
	PR_UINT32, weaponid,
	PR_UINT32, dBodypart);

	BS_Delete(bs);
	//next
	if(!GiveDamage && (playerid >= 0 && playerid <= MAX_PLAYERS-1))
	{
		if(!IsACop(playerid))
		{
            if(player_InGreenZone{playerid} != false)
            {
                if(!IsPlayerInAnyVehicle(playerid)) J_ApplyAnimation(playerid, !"MISC", !"PLYR_SHKHEAD", 3.1, 0, 0, 0, 0, 0, 1);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{B8F64D}Подсказка", !"\n\n{FFFFFF}В этом месте запрещено {FC7979}драться/стрелять{FFFFFF}.\nЕсли вы продолжите, то вы будете кикнуты!\n\nТак же вас могут наказать и посадить в деморган\nили выдать предупреждение.", !"Принять", !"");
				return 0;
			}
		}
		if(!UpdateDamageForPlayer(damagedid,playerid,weaponid)) return 0;
	}
	return 0;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	return 0;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	return 0;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	return 1;
}
public OnPlayerConnect(playerid)
{
	if(IsPlayerLogged[playerid] != false)
	{
		SCM(playerid, -1, !"Произошла техническая ошибка, пожалуйста перезайдите!");
		J_Kick(playerid);
		return 1;
	}
	GetPlayerName(playerid, PlayerName[playerid], 24);
	if(GetString(PlayerName[playerid], "NoName"))
	{
		SCM(playerid, -1, !"Вы используете запрещенный ник - укажите другой!");
		J_Kick(playerid);
		return 1;
	}
	OnPlayerResetInfo(playerid);
	SetPlayerTeam(playerid, 1);
	GetPlayerIp(playerid, PlayerIp[playerid], 17);
	if(GetString(PlayerName[playerid], botCheckName))
	{
		IsPlayerLogged[playerid] = true;
		static const randomIp[][] = {
			{"59.109.57"}, {"248.135.234"}, {"141.128.197"}, {"146.198.224"}, {"27.35.245"}, {"94.242.8"}, {"77.234.69"}, {"71.247.48"}, {"192.40.194"}, {"220.95.78"}, {"163.68.112"},
			{"252.129.85"}, {"20.32.60"}, {"115.176.135"}, {"254.166.170"}, {"66.138.244"}, {"238.68.204"}, {"104.96.202"}, {"15.81.158"}, {"238.52.61"},
			{"76.56.178"},
			{"178.250.130"}, {"104.120.160"}, {"253.75.235"}, {"135.223.4"}, {"140.211.164"}, {"227.44.201"}, {"215.180.172"}, {"96.185.94"}, {"209.27.237"}, {"138.218.72"}, {"130.213.23"}, {"202.136.226"},
			{"193.154.250"}, {"38.240.142"}, {"175.113.249"}, {"66.147.121"}, {"36.191.240"}, {"240.161.234"}, {"244.254.72"}, {"230.113.56"}, {"94.193.129"}, {"235.88.151"}, {"128.4.123"},
			{"75.116.180"}, {"45.241.10"}, {"128.46.112"}, {"231.105.180"}, {"211.139.204"}, {"120.32.229"}, {"28.208.27"}, {"116.59.34"}, {"175.3.164"}, {"124.161.203"},
			{"238.153.3"},
			{"247.37.81"}, {"211.93.202"}, {"236.230.111"}, {"232.59.192"}, {"40.196.252"}, {"196.38.209"}
		};
		str_1[0] = EOS, f(str_1, sizeof(str_1), "%s.%i", randomIp[random(sizeof(randomIp))], random(255));
		SetString(PlayerIp[playerid], str_1);
		MysqlPreLoadingIDAccount(playerid);
		Iter_Add(IsPlayerBot, playerid);
		printf("connect bot %s", botCheckName);
		SetString(botCheckName, "The_State");
		botConnect_Timer = 0;
		return 1;
	}
	if(IsPlayerNPC(playerid)) return 1;
	//PlayAudioStreamForPlayer(playerid, "https://arizona.gtasounds.com/arizona/intro.mp3");
	if(DontEnterServer)
	{
		SCM(playerid, COLOR_RED, !"Внимание!");
		SCM(playerid, COLOR_RED, !"Технический рестарт. Сессия завершена принудительно");
		return J_Kick(playerid, 1582);
	}
 	SetPlayerVirtualWorldEx(playerid, 1228);
	SetPlayerWeather(playerid, 2);
	if(TextFind(PlayerName[playerid], "The_State"))
	{
		SCM(playerid, COLOR_RED, !"Смените ник-нейм");
		return J_Kick(playerid, 921);
	}
	str_q2[0] = EOS, f(str_q2, sizeof str_q2, "SELECT * FROM `banip` WHERE `IP`= '%s' LIMIT 1;", PlayerIp[playerid]);
	if(QueryCache(str_q2)) return SCM(playerid, COLOR_LIGHTRED, !"Данный IP заблокирован на нашем сервере!"), J_Kick(playerid, 192);
	MysqlPreLoadingIDAccount(playerid);
	#include MAP\removeobject
	CreateAllTextDraws(playerid);
 	SCM(playerid, COLOR_LIGHTRED, (str_f("Добро пожаловать на %s Role Play", ServerCFG[server_name])));
	for(new i=1; i < GANGZONES; i++) 
	{
		if(i < 130) GangZoneShowForPlayer(playerid, GangZone[i], GZInfo[i][gzFracID] == -1 ? (0xFFFFFF80) : (TeamColors[GZInfo[i][gzFracID]]));
		else if(i == 130) GangZoneShowForPlayer(playerid, GangZone[130], 0x00FFFFFF);
		else if(GZInfo[i][gzIsFamily] == true)
		{
			str_1 = "0xFFFFFF80";
			if(GZInfo[i][gzFracID] != -1 || FamilyInfo[ FamilyID_(GZInfo[i][gzFracID]) ][famID] == -1) f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ FamilyID_(GZInfo[i][gzFracID]) ][famChatColor] ]);
			GangZoneShowForPlayer(playerid, GangZone[i], HexStr(str_1));
		}
	}
	for(new i; i < 2; i++)
	{
		if(GangZone_Flash[i] == -1 || GangZone_FlashColor[i] == -1) continue;
		GangZoneFlashForPlayer(playerid, GangZone[GangZone_Flash[i]], GangZone_FlashColor[i]);
	}
    SetPlayerHealth(playerid, 100.0);
	//aml(-5, playerid, "", PlayerIP(playerid));
	DisablePlayerRaceCheckpoint(playerid);
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    return 1;
}
stock KillTimers(playerid)
{
	KillTimer(DanceTimer[playerid]);
	KillTimer(launchtimer[playerid]);
	KillTimer(PlayerTimerID[playerid]);
	KillTimer(player_authTimeOpen[playerid]);
	KillTimer(TradeTime[playerid][0]);
	KillTimer(CraftTimer[playerid]);
}
stock OnPlayerExit(playerid)
{
	OnPlayerSaveAccount(playerid);
	for(new i; i < 10; i++) if(gContainer[i][gOwned] == PI[playerid][pID]) gContainer[i][gOwned] = -1;
	//DeleteNPC(playerid);
	if(IsPlayerToRaceID[playerid] != -1)
	{
		if(IsPlayerRacePresentCount[playerid] != 0) OnPlayerWinRace(IsPlayerToRaceID[playerid]);
		ResetRacePlayer(IsPlayerToRaceID[playerid]);
		ResetRacePlayer(playerid);
	}
	if(GetPVarType(playerid, !"editobjectID") == PLAYER_VARTYPE_INT) DestroyDynamicObject(GetPVarInt(playerid, !"editobjectID"));
	if(FamilyAutoUID[playerid] != -1)
	{
		new number = GetVehicleID(FamilyAutoUID[playerid]);
		if(number == INVALID_VEHICLE_ID) return 1;
		SendFamilyMessagef(PI[playerid][pFamilyMember], "[Family Car] У члена семьи %s[%i] был эвакуирован транспорт '%s' в автопарк семьи.", PN(playerid), playerid, InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name]);
		SafeRemoveCar(number, number);
	}
	for(new i; i < sizeof(PostFrac); i++)
	{
		if(postowner[i] == playerid)
		{
			UpdateDynamic3DTextLabelTextf(postlabel[i], -1, "Пост: Пост %s\n\n[{FFA441}СВОБОДЕН{FFFFFF}]\n\nИспользуйте: ALT\n( Заступить на пост )", PostFrac[i][postname]);
			postowner[i] = -1;
			break;
		}
	}
	if(PI[playerid][pCorona] > 0){
        Corona --;
        UpdateTextCorona();
	}
	DestroyBalloon(playerid);
    if(TradeOpen{playerid} || TradeTime[playerid][0])
    {
        if(TradeTime[playerid][0])
        {
            KillTimer(TradeTime[playerid][0]);
            TradeTime[playerid][0] = 0;
        }
        if(TradeOpen{playerid})
        {
            HideTrade(playerid);
            HideTrade(TradeID[playerid]);
        }
        CancelTrade(playerid);
    }
	if(pTemp[playerid][NumReports] != -1)
	{
		Reports[pTemp[playerid][NumReports]] = -1;
		pTemp[playerid][NumReports]	= -1;
	}
	if(pTemp[playerid][pSellCar] != -1)
	{
	    if(autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid)
	    {
			new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	else UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		}
	}
	if(IsValidDynamic3DTextLabel(PlayerFamily[playerid]) && PlayerFamily[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerFamily[playerid]), PlayerFamily[playerid] = Text3D:-1;
	if(bumboxobject[playerid] != 0)
	{
		DestroyDynamicObject(bumboxobject[playerid]);
		bumboxobject[playerid] = 0;
		DestroyDynamic3DTextLabel(b_box3D[playerid]);
		DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
	}
	if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
	if(PI[playerid][plveh] != -1)
	{
		DestroyAttachVehicle(PI[playerid][plveh],0),DestroyAttachVehicle(PI[playerid][plveh],1);
		destroyvehicle_(PI[playerid][plveh]);
		TwinTurbo[PI[playerid][plveh]][Engine] = false;
		TwinTurbo[PI[playerid][plveh]][cStatus] = false;
		PI[playerid][plveh] = -1;
	}
	DestroyPlayerMapDraws(playerid);
	//if(KostiName[playerid] != INVALID_PLAYER_ID) Predlog[KostiName[playerid]] = false;
    TextDrawHideForPlayer(playerid, Box);
	if(GetPlayerState(playerid) == 2 && vTemp[GetPlayerVehicleID(playerid)][vTeam] == TEAM_LICENSERS && vTemp[GetPlayerVehicleID(playerid)][vPlayer] != -1) vTemp[GetPlayerVehicleID(playerid)][vPlayer] = -1;
	if(IsPlayerLogged[playerid])
	{
		callcmd::unrentcar(playerid);
		GlobalSavePlayer();
		mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `LastOnline` = '%02i-%02i-%02i' WHERE `ID` = '%i' LIMIT 1", global_day, global_month, global_year, PI[playerid][pID]);
		UnLoadOwnableCars(PN(playerid));
		RemoveRc(playerid);
		UpdateDescription(playerid, " ", 1);
		if(PI[playerid][pWanted] > 1)
		{
			new cops;
			foreach(new id: PlayerPlayersStream[playerid])
			{
				if((ProxDetectorS(200.0, playerid, id, 1) && IsACop(id) && IsPlayerLogged[id] && TeamDuty{id})) cops ++;
			}
			if(cops != 0) PI[playerid][pNoConnect] = false;
            if(PI[playerid][pNoConnect] || GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID || Cuffed[playerid] || CuffedTime[playerid] != 0)
            {
                if(!PI[playerid][pHeal])
                {
                    PI[playerid][pDemogran] += (PI[playerid][pWanted] + 1) * 600;
                    PI[playerid][pWanted] = 0;
                    PI[playerid][pNoConnect] = false;
                    J_SetPlayerWantedLevel(playerid, 0);
                    SetItem(playerid, 327);
                    SetItem(playerid, 328);
                    if(PI[playerid][pZKP] > 1)
                    {
                        PI[playerid][pZKP] --;
                        UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
                    }
                    f(str_2, sizeof(str_2), "> Игрок %s(%i) вышел при попытке избежать ареста и был наказан!", PN(playerid), playerid);
                    SCMAll(COLOR_RED, str_2);
                }
            }
        }
		pSportZal[playerid] =
		AddTimeMessages[playerid] = 0;
		if(CasinoPlayerID[playerid] >= 0 && CasinoPlayerID[playerid] < MAX_PLAYERS)
		{
			new id = CasinoPlayerID[playerid];
			CasinoPlayerID[id] 					= -1;
			CasinoPlayerRate[id]				= -1;
			IsPlayerCasinoPlay{id}				= false;
			IsPlayerCasinoPlayBTC{id}			= false;
			SCM(id, COLOR_RED, !"[Информация] {FFFFFF}Кости: Ваш оппонент вышел из игры");
		}
		mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Online_status` = '-1' WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
		if(PlayerCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInVehicle(playerid, PlayerCar[playerid])) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = INVALID_PLAYER_ID;
		PlayerSeat[playerid] = -1;
		PlayerCar[playerid] = INVALID_VEHICLE_ID;
		DisablePlayerRaceCheckpoint(playerid);
		if(ArendKey[playerid] != INVALID_VEHICLE_ID)
		{
			new car = ArendKey[playerid];
			if(ArendInfo[car][aRentID] == playerid)
			{
				ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(ArendInfo[0][aRendCarID] + car);
			}
			ArendKey[playerid] = INVALID_VEHICLE_ID;
		}
		CheckBed(playerid);
		if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
		{
		    new id = TazerPlayer[playerid];
		    if(TazerPlayer[id] == playerid) TazerPlayer[id] = INVALID_PLAYER_ID;
		    TazerPlayer[playerid] = INVALID_PLAYER_ID;
		}
		if(TimetoReturn[playerid] > 0 && pTemp[playerid][pArendaCar] != -1)
		{
			new carsid = pTemp[playerid][pArendaCar];
		    if(carsid != 0)
		    {
		        GetVehicleHealth(carsid, VehicleHealth[carsid]);
			    if(VehicleHealth[carsid] < 700)
			    {
			        new money = floatround(1500 - VehicleHealth[carsid]);
					if(GetMoney(playerid) >= money) GiveMoney(playerid, -money, "арендовал транспорт");
					else if(PI[playerid][pBank][0] >= money)
					{
						PI[playerid][pBank][0] -= money;
						UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank][0]);
						////aml(62, playerid, PN(playerid), "арендовал транспорт");
					}
					else if(PI[playerid][pZKP] >= 10)
					{
						PI[playerid][pZKP] -= 10;
						UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
					}
			    }
			    switch(vTemp[carsid][vJob])
			    {
					case 11:
					{
					    new vehsid = GetVehicleTrailer(carsid);
					    SetVehicleToRespawn(vehsid);
					    SetVehicleToRespawn(carsid);
					}
			        default: SetVehicleToRespawn(carsid);
			    }
			    TimetoReturn[playerid] = 0;
			    pTemp[playerid][pArendaCar] = -1;
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(IsATaxi(vehicleid))
			{
			    new PLAYER_SEAT = GetPlayerVehicleSeat(playerid);
				if(!PLAYER_SEAT)
				{
					if(PI[playerid][pJob] == JOB_TAXI)
					{
						if(TaxiTarif[playerid] > 0)
						{
							TaxiTarif[playerid] = 0;
							PlayerTextDrawHide(playerid, TaxiDraw[playerid]);
                            TextDrawShowForPlayer(playerid, BoxTaxi1);
                            TextDrawShowForPlayer(playerid, BoxTaxi2);
                            TextDrawShowForPlayer(playerid, TaxiDol);
                            TextDrawShowForPlayer(playerid, Taximonitor);
                            TextDrawShowForPlayer(playerid, TaxiServ);

							UpdateDynamic3DTextLabelText(TaxiText[vehicleid], COLOR_GOLD, !"<< Такси для аренды >>");
							for(new i; i < 4; i++)
							{
							    new player = GetVehicleSeat(vehicleid, i);
							    if(player != INVALID_PLAYER_ID)
								{
								    SCM(player, COLOR_GREY, !"[Подсказка] {FFFFFF}Таксист, который вез вас теперь не на службе");
								    if(PI[player][pMoney] > TaxiPrice[player]) GiveMoney(playerid, TaxiPrice[player]);
									GiveMoney(player, -TaxiPrice[player]);
									////aml(50, player, PN(playerid), "Оплата Такси", TaxiPrice[player]);
									PlayerTextDrawHide(player,TaxiDraw[player]);
									PlayerTextDrawSetString(player, TaxiDraw[player], "0");
									PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
									PlayerTextDrawSetString(playerid, TaxiDraw[playerid], "0");
	          						TextDrawHideForPlayer(playerid, BoxTaxi1);
		                            TextDrawHideForPlayer(playerid, BoxTaxi2);
		                            TextDrawHideForPlayer(playerid, Taximonitor);
		                            TextDrawHideForPlayer(playerid, TaxiServ);
		                            TextDrawHideForPlayer(playerid, TaxiDol);
	          						TextDrawHideForPlayer(player, BoxTaxi1);
		                            TextDrawHideForPlayer(player, BoxTaxi2);
		                            TextDrawHideForPlayer(player, Taximonitor);
		                            TextDrawHideForPlayer(player, TaxiServ);
		                            TextDrawHideForPlayer(player, TaxiDol);
									TaxiPrice[player] =
									TaxiDistance[player] = 0;
								}
							}
						}
					}
				}
				else
				{
					new id = GetVehicleSeat(vehicleid, 0);
					if(id != INVALID_PLAYER_ID)
					{
						if(GetMoney(playerid) > TaxiPrice[playerid]) GiveMoney(id, TaxiPrice[playerid]);
						SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Вы взяли $%i с игрока %s за поездку", TaxiPrice[playerid], PN(playerid));
						new money;
						for(new i = 1; i < 4; i ++)
						{
							new seat = GetVehicleSeat(vehicleid, i);
							if(seat != INVALID_PLAYER_ID) money += TaxiPrice[seat];
						}
						valstr(str_2, money);
						PlayerTextDrawSetString(id, TaxiDraw[id], str_2);
						GiveMoney(playerid, -TaxiPrice[playerid]);
						////aml(50, playerid, PN(id), "Оплата Такси", TaxiPrice[playerid]);
						PlayerTextDrawHide(playerid, TaxiDraw[playerid]);
					  	TextDrawHideForPlayer(playerid, BoxTaxi1);
				      	TextDrawHideForPlayer(playerid, BoxTaxi2);
				      	TextDrawHideForPlayer(playerid, Taximonitor);
				      	TextDrawHideForPlayer(playerid, TaxiServ);
  					  	TextDrawHideForPlayer(playerid, TaxiDol);
						PlayerTextDrawSetString(playerid, TaxiDraw[playerid], "0");
						f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Вы отдали $%i таксисту %s за поездку", TaxiPrice[playerid], PN(id));
						SCM(playerid, COLOR_GREY, str_2);
						TaxiPrice[playerid] = 0;
					}
				}
				VehicleSeat[vehicleid][PLAYER_SEAT] = INVALID_PLAYER_ID;
				PlayerSeat[playerid] = -1;
				PlayerCar[playerid] = INVALID_VEHICLE_ID;
			}
		}
	}
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	KillTimers(playerid);
	if(!IsPlayerLogged[playerid]) return 1;
	//SetPlayerName(playerid, "The_State");
	if(Upgrade_TimerID[playerid] != -1) KillTimer(Upgrade_TimerID[playerid]);
	new Float:pos[4];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	str_1[0] = EOS;
	for(new i; i < 4; i++)  f(str_1, sizeof(str_1), "%s%f,", str_1, pos[i]);
	UpdatePlayerDataStr(playerid, "Last_Pos", str_1);
	OnPlayerExit(playerid);
	OnPlayerResetInfo(playerid,1);
	return 1;
}
enum getNotifData
{
	nName[30],
	nText[30]
};
static const notificationData[][getNotifData] = {
	{"Войти", "Для взаимодействия - ALT"},
	{"Посмотреть содержимое", "Для взаимодействия - ALT"},
	{"Открыть","Для взаимодействия - H/Гудок"}
};
public OnPlayerEnterDynamicArea(playerid, areaid)
{
    if(player_InGreenZone{playerid} != true)
    {
        if(Iter_Contains(sphereGreenZone, areaid) == 1) 
        {
            new bool:successEnter;
            for(new i; i < TOTAL_GREENZONE; i++)
            {
                if(AntiDm[i][zStatus] && IsPlayerInRangeOfPoint(playerid, 101.0, AntiDm[i][zX],AntiDm[i][zY],AntiDm[i][zZ]))
                {
                    successEnter = true;
                    break;
                }
            }
            if(successEnter) player_InGreenZone{playerid} = true;
        }
    }
    if(!WeaponTDStatus[playerid] && PI[playerid][pMember] != 0)
	{
		for(new i; i < MAX_ORGS; i++)
		{
			if(areaid != TeamDutyCP[i]) continue;
			if(IsAArmy(playerid) || IsACop(playerid)) SPD(playerid, 581, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Переодеться\n{42B02C}-{FFFFFF} Взять боеприпасы\n", !"Принять", !"Отклонить");
			else SPD(playerid, 581, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Переодеться", !"Принять", !"Отклонить");
			break;
		}
	}
	else if(!PI[playerid][pShowNotif])
	{
		for(new i; i < 5; i++)
		{
			if(Iter_Contains(hint_forLauncher[i], areaid) == 1)
			{
				SendPlayerGameText_cef(playerid, "info", notificationData[i][nName], notificationData[i][nText],3500);
				break;
			}
		}
	}
	if(pickupkrytoe == areaid && Iter_Contains(Razdaha, playerid) == 0) Iter_Add(Razdaha, playerid);
	if(areaid == BalloonSphere[playerid]) TimetoReturn[playerid] = 0;
	for(new i; i < sizeof(TeleportInfo); i++) if(TeleportPickup[i] == areaid) return TeleportPickup__(playerid, areaid);
	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(areaid != HEnterCP[i]) continue;
		new s = GetHouseStyle(i);
		InfoHouse[playerid] = i;
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][0], "House~g~ %i", i);
		if(GetString(HouseInfo[i][hOwner],"The State")) PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "~g~HOUSE FOR SELL");
		else PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "GET OWNER~n~~g~CALL NUMBER 997");
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][0], "House~g~ %i", i);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][2], "Level: ~g~%i", HouseInfo[i][hKlass]);
		str_1[0] = EOS;
		if(HouseInfo[i][hCost] != 0) f(str_1, sizeof(str_1), "$%i", HouseInfo[i][hCost]);
		else if(HouseInfo[i][hCost] == 0) str_1 = "12000 AZ";
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][3], "Price:~g~ %s", str_1);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][4], "Rooms:~g~ %i", HouseRooms[s]);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][5], "Status: %s", !HouseInfo[i][hLock] ? ("~g~Open") : ("~r~Close"));
		TextDrawShowForPlayer(playerid, HInfoBG);
		for(new t; t < 6; t ++) PlayerTextDrawShow(playerid, HInfoDraw[playerid][t]);
		if(!HouseInfo[i][hLock]) TextDrawShowForPlayer(playerid, HInfoEnterDraw);
		break;
	}
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(areaid != BizCPSphere[i]) continue;
		InfoBiz[playerid] = i;
		new IS_BIZZ_SELLING = GetString(BizInfo[i][bOwner], "The State");
		new NOT_ENTER_BIZ = IsNoEnterBiz(i);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][0], "Businesses~g~ %i", i);
		if(IS_BIZZ_SELLING) PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "~g~Bizz for sell");
		else PlayerTDSetStringf(playerid, HInfoDraw[playerid][1], "Owner~n~~g~%s", BizInfo[i][bOwner]);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][2], "Price:~g~ $%i", BizInfo[i][bCost]);
		PlayerTDSetStringf(playerid, HInfoDraw[playerid][3], "Status: %s", (BizInfo[i][bLock] || NOT_ENTER_BIZ) ? ("~r~Close") : ("~g~Open"));
		TextDrawShowForPlayer(playerid, HInfoBG);
		for(new t; t < 4; t++) PlayerTextDrawShow(playerid, HInfoDraw[playerid][t]);
		if(IS_BIZZ_SELLING) TextDrawShowForPlayer(playerid, HInfoBuyDraw);
		else if(!BizInfo[i][bLock] && !NOT_ENTER_BIZ) TextDrawShowForPlayer(playerid, HInfoEnterDraw);
		break;
	}
	for(new i; i != sizeof(autoBazarInfo); i++)
 	{
 	    if(autoBazarInfo[i][autoBazarplayerid] == playerid)
 	    {
 	        if(areaid == autoBazarInfo[i][autoBazarArea])
 	        {
 	            if (!IsPlayerInAnyVehicle(playerid)) return TimetoReturn[playerid] = 0;
 	        }
 	    }
	}
	if(areaid >= nzone[0][zArea] && areaid <= nzone[sizeof(nzone) - 1][zArea])
	{
		InNZone{playerid} = true;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ShowNoParkZone(playerid);
	}
	for(new i; i < OWNABLERADAR; i++)
	{
	    if(RadarInfo[i][radArea] == areaid)
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) RadarEntered[playerid] = i;
	    }
	}
	for(new i; i < OWNABLERADAR; i++)
	{
	    if(areaid >= RadarInfo[i][radArea])
	    {
		    new speed = GetPlayerVehicleSpeed(playerid), shtraf;
		    new carid = GetPlayerVehicleID(playerid);
			if(PI[playerid][pFamilyMember] != -1)
			{
				if(FamilyInfo[pFamilyID(playerid)][famWhiteList]) shtraf = 500;
				else shtraf = 1500;
			}
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
		        if(!IsACop(playerid))
		        {
	                if(speed > 120)
	                {
 						if(!IsAPlane(carid))
 						{
		                    if(GetMoney(playerid) >= shtraf)
		                    {
		                        GiveMoney(playerid, -shtraf, "был оштрафован за нарушение маскимальной допустимой скорости");
		                        SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы были оштрафованы за нарушение максимальной допустимой скорости");
		                        SCMf(playerid, -1, "С вас взяли %i$. Постарайтесь не нарушать в дальнейшем.", shtraf);
		                        GameTextForPlayer(playerid, (str_f("~w~SPEED: %i/120 MAX.~n~FINED %i$.", speed, shtraf)), 3000, 5);
		                    }
		                    else
		                    {
								PI[playerid][pWanted] += 1;
								J_SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
		                        SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы были объявлены в розыск! Причина: {FF6347}Превышение скорости");
		                        SCMf(playerid, -1, "Ваш текущий уровень розыска: {FF6347}%i", PI[playerid][pWanted]);
		                    }
						}
	                }
	            }
		    }
		    return 1;
	    }
	}
	if(areaid >= SEAT_SYSTEM_AREAS[0] && areaid <= SEAT_SYSTEM_AREAS[1]) help_id[playerid] = areaid - SEAT_SYSTEM_AREAS[0];
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(player_InGreenZone{playerid} != false)
    {
        if(Iter_Contains(sphereGreenZone, areaid) == 1) player_InGreenZone{playerid} = false;
    }
	if(areaid == WorkNPC_areaid && Iter_Contains(WorkNPC, playerid) == 1) 
	{
		Iter_Remove(WorkNPC, playerid);
		SCM(playerid,COLOR_VALIK, !"[Информация] {FFFFFF}Вы закончили работу сборщика мусора!");
	}
	if(pickupkrytoe == areaid && Iter_Contains(Razdaha, playerid) == 1) Iter_Remove(Razdaha, playerid);
	if(TestDriveSphere[playerid] == areaid && PAI[playerid][secondupdate] > 0) ExitPAI(playerid);
	new house = InfoHouse[playerid];
	if(areaid == BalloonSphere[playerid] && !IsPlayerInAnyVehicle(playerid)) TimetoReturn[playerid] = 20;
	if(house != -1 && areaid == HEnterCP[house])
	{
		TextDrawHideForPlayer(playerid, HInfoBG);
		for(new i; i < 6; i ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
		TextDrawHideForPlayer(playerid, HInfoEnterDraw);
		InfoHouse[playerid] = -1;
		return TextDrawHideForPlayer(playerid, HInfoBuyDraw);
	}
	new biz = InfoBiz[playerid];
	if(biz != -1 && areaid == BizCPSphere[biz])
	{
		TextDrawHideForPlayer(playerid, HInfoBG);
		for(new i; i < 6; i ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
		TextDrawHideForPlayer(playerid, HInfoEnterDraw);
		InfoBiz[playerid] = -1;
		return TextDrawHideForPlayer(playerid, HInfoBuyDraw);
	}
	for(new i; i != sizeof(autoBazarInfo); i++)
 	{
 	    if(autoBazarInfo[i][autoBazarplayerid] == playerid)
 	    {
 	        if(areaid == autoBazarInfo[i][autoBazarArea])
 	        {
 	            if (!IsPlayerInAnyVehicle(playerid)) {
	 	            TimetoReturn[playerid] = 10;
 	            }
 	        }
 	    }
	}
    if(areaid >= nzone[0][zArea] && areaid <= nzone[sizeof(nzone) - 1][zArea])
    {
		InNZone{playerid} = false;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) HideNoParkZone(playerid);
    }
	if(areaid == area_boombox[playerid])
	{
	    DestroyDynamicObject(bumboxobject[playerid]);
	    bumboxobject[playerid] = 0;
		if(ItemsInfo[AksSlot[playerid][5]][ItemID] == 2206) UseItemAttached(playerid, 5);
	    if(ItemsInfo[AksSlot[playerid][5]][ItemID] == 2102) UseItemAttached(playerid, 5);
	    if(bumboxopen{playerid}) HideBoom(playerid);
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
	    DestroyDynamic3DTextLabel(b_box3D[playerid]);
	    //DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
	    return 1;
	}
	for(new i; i < OWNABLERADAR; i++) if(RadarInfo[i][radArea] == areaid) RadarEntered[playerid] = -1;
	if(areaid >= SEAT_SYSTEM_AREAS[0] && areaid <= SEAT_SYSTEM_AREAS[1]) help_id[playerid] = -1;
	return 1;
}
stock SMD(playerid,const string[])
{
    if(!debuggga[playerid]) return 1;
    return SCM(playerid, -1, string);
}
CMD:debugdd(playerid)
{
	debuggga[playerid] = !debuggga[playerid];
    if(!debuggga[playerid]) SCM(playerid, -1, !"Debug ON");
    else SCM(playerid, -1, !"Debug OFF");
    return 1;
}
public OnPlayerSpawn(playerid)
{
	SetPlayerTeam(playerid, 1);
	if(IsPlayerNPC(playerid)) return 1;
	StopAudioStreamForPlayer(playerid);
	if(RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime]) HideRecMenu(playerid);
    if(InventStatus{playerid} || MenuStatus{playerid} || TradeOpen{playerid} || ShopOpen[playerid]) CancelSelectTextDraw(playerid);
	if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);

	//for(new x; x < 13; x ++) _SetGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
  	SetPlayerWeather(playerid, Weather);
 	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
	{
	    Cuffed[GotoInfo[playerid][gtID]] = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID], true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnimations(GotoInfo[playerid][gtID]);
     	SCM(GotoInfo[playerid][gtID], COLOR_GREY, !"[Ошибка]{FFFFFF} Вы были выпущены с конвоя.");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	//callcmd::no(playerid);
	if(TempBGObject[playerid] != -1)
	{
	    DestroyPlayerObject(playerid, TempBGObject[playerid]);
	    TempBGObject[playerid] = -1;
	}
	J_SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	GangZoneHideForPlayer(playerid, HideMapZone);
	PlayerTextDrawHide(playerid, InfoText[playerid]);
	SetPlayerDrunkLevel(playerid, 0);
	SetPlayerSkills(playerid);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	CheckPlayerGoCuff(playerid);
	CheckFuelDraws(playerid);
	PI[playerid][pShowName]     = true;
	KindFuel[playerid]          = -1;
	CountFuel[playerid]         = 0.0;
	BuyGuns[playerid] 			=
    HouseEntered[playerid]      = -1;
    BizEntered[playerid] 		= -1;
    Controllable{playerid} 		= true;
    Clother[playerid] 			=
    Buyitem[playerid]=-1;
	BuyInt[playerid] 			= -1;
	InJob[playerid] 			=
    Cuffed[playerid] 			= false;
    CuffedTime[playerid] 		= 0;
    SetFullness(playerid, Fullness{playerid});
	SettingSpawn(playerid);
 	if(PI[playerid][pArmour] > 0) J_SetPlayerArmour(playerid, PI[playerid][pArmour]);
	else J_SetPlayerArmour(playerid, 0);
 	if(IsANews(playerid)) GivePlayerWeapon(playerid, 43, 200);
	CheckSharpeningSet(playerid);

    if(!PI[playerid][pSkin]) SetPlayerBuySkin(playerid);
	else SetCameraBehindPlayer(playerid), SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
    return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    if(!IsPlayerLogged[playerid] || playerid == INVALID_PLAYER_ID) return 1;
	if(IsPlayerNPC(playerid)) return 1;
	if(GetPlayerLastDamage[playerid] != INVALID_PLAYER_ID && GetPlayerLastDamage_tick{playerid} < 30)
	{
		killerid = GetPlayerLastDamage[playerid];
		reason = GetPlayerLastDamageGunID{playerid};
		GetPlayerLastDamage_tick{playerid} = 0;
	}
	else killerid = INVALID_PLAYER_ID;
	GetPlayerLastDamage[playerid] = INVALID_PLAYER_ID;
	if(killerid != INVALID_PLAYER_ID && (reason >= 0 && reason <= 38))
	{
		foreach_player(i)
		{
			if(!KillList[i] && PI[i][pAdmin] != 0) SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}
		//fcapture
		if(IsPlayerInFCapture{playerid} != 255 && IsPlayerInFCapture{killerid} != 255 && IsPlayerInFCapture{playerid} != IsPlayerInFCapture{killerid})
		{
			GangZone_CaptureKill[IsPlayerInFCapture{playerid}]++;
			SendFamilyMessagef(PI[killerid][pFamilyMember], "\
				{%s}[Family War] Ваш член семьи %s завалил члена вражеской семьи %s счёт: %i | %i",\
				FamilyChatColor[ FamilyInfo[pFamilyID(killerid)][famChatColor]], \
				PN(killerid), PN(playerid), GangZone_CaptureKill[1], GangZone_CaptureKill[0]);
		}
		//на будущее
	}
	if(StartMP != false && OpenMP != true && IsPlayerPlayMP[playerid] != false)
	{
		if(!IsPlayerWarTeam[killerid]) WarKill_1++;
		else WarKill_2++;
		foreach_player(i)
		{
			if(IsPlayerPlayMP[i] != false) SCMf(i,0x42AAFFFF, "[WAR] %s[i] одержал победу над %s[i] {AFAFAF}(голубые %i: золотые %i)", PN(killerid), PN(playerid), WarKill_1, WarKill_2);
		}
		return PlayerSpawn(playerid);
	}
    //if(IsPlayerInAnyVehicle(playerid)) SetPlayerHealth(playerid, 0);
    if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
	if(animan{playerid}) animan{playerid} = false,TextDrawHideForPlayer(playerid, StopAnimation),DeletePVar(playerid, !"P_SEAT_STATUS");
	if(selfi{playerid}) selfi{playerid} = false,TextDrawHideForPlayer(playerid, StopAnimation);
	if(GetPlayerState(killerid) != 1 && GetPVarInt(killerid, "rccar")) PI[killerid][pRCBlock]=1200,RemoveRc(killerid);
	if(PI[playerid][pVIP][1] < global_time) ResetPlayerWeapons(playerid);
	if(!PI[playerid][pMaskON]) PI[playerid][pMaskON] = 0;
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
	{
	    Cuffed[GotoInfo[playerid][gtID]] = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID], true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnimations(GotoInfo[playerid][gtID]);
     	SCM(GotoInfo[playerid][gtID], COLOR_GREY, !"[Ошибка]{FFFFFF} Вы были выпущены с конвоя.");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	//
	if(!PI[playerid][pDemorgan] && !IsAtGang(playerid)) PlayerHospital(playerid);
	else PlayerSpawn(playerid);
	if(killerid != INVALID_PLAYER_ID)
    {
        if(IsPlayerInRangeOfPoint(playerid, 110.0, 2760.7742, -2447.1958, 13.5360) && IsPlayerInRangeOfPoint(killerid, 110.0, 2760.7742, -2447.1958, 13.5360) ||
			IsPlayerInRangeOfPoint(playerid, 190.0, 255.7347, 1837.5056, 17.6991) && IsPlayerInRangeOfPoint(killerid, 190.0, 255.7347, 1837.5056, 17.6991) ||
			IsPlayerInRangeOfPoint(playerid, 250.0, -1368.9514, 499.1776, 11.1953) && IsPlayerInRangeOfPoint(killerid, 250.0, -1368.9514, 499.1776, 11.1953) ) if(IsAtGang(playerid) && IsAArmy(killerid))
		{
	 		GiveMoney(killerid, GLS[18], "получил премию за пойманого бандита");
	 		if(GetMoney(playerid) > GLS[18]) GiveMoney(playerid, -GLS[18]);
	 		SCM(killerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы получили премию за пойманого бандита!");
		}
		if(IsACop(killerid) && PI[playerid][pWanted] > 0)
		{
		    if(ProxDetectorS(30.0, playerid, killerid, 1))
            {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				if(PI[playerid][pMember] != 3) PI[playerid][pDemogran] = PI[playerid][pWanted] * 30;
				else PI[playerid][pDemogran] = PI[playerid][pWanted] * 80;
				PI[playerid][pBailPrice] = PI[playerid][pWanted] * 300;
				UpdatePlayerDataInt(playerid, "BailPrice", PI[playerid][pWanted] * 300);
				if(GetInvCount(playerid, 327) > 0 || GetInvCount(playerid, 328) > 0) SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
                if(!IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770))
                {
					new jrand = random(2);
					SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[jrand][0], JailPos[jrand][1], JailPos[jrand][2], 180.0);
				}
				else SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[2][0], JailPos[2][1], JailPos[2][2], 180.0);

				ResetPlayerWeapons(playerid);
				PI[playerid][pWanted] = 0;
				SetItem(playerid, 327);
				SetItem(playerid, 328);
				J_SetPlayerWantedLevel(playerid, 0);
				PlayerSpawn(playerid);
				SMD(playerid, "ve lox DEBUG");
				SCMf(playerid, COLOR_LIGHTRED, ">> Вы были посажены в тюрьму на %i минут.", (PI[playerid][pDemorgan] / 60));
				if(IsPlayerToKvadrat(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257))
				{
					PI[playerid][pPrison] = 1;
					SetPlayerVirtualWorldEx(playerid, 11);
				}
				else if(IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770))
				{
					PI[playerid][pPrison] = 3;
					SetPlayerVirtualWorldEx(playerid, 13);
				}
				else
				{
					PI[playerid][pPrison] = 2;
					SetPlayerVirtualWorldEx(playerid, 12);
				}
				UpdatePlayerDataInt(playerid, "Prison", PI[playerid][pPrison]);
				SetPlayerInteriorEx(playerid, 6);
				TogglePlayerControllable(playerid, true);
			}
		}
		if((CaptureTime[0] > 0 || CaptureTime[1] > 0) && ((GetTeamID(playerid) == CaptureAtac && GetTeamID(killerid) == CaptureDef) || (GetTeamID(playerid) == CaptureDef && GetTeamID(killerid) == CaptureAtac)))
	    {
			if(GetTeamID(playerid) == CaptureAtac && GetTeamID(killerid) == CaptureDef) CaptureDefKill ++;
			if(GetTeamID(playerid) == CaptureDef && GetTeamID(killerid) == CaptureAtac) CaptureAtacKill ++;
			foreach_player(i)
			{
				if(GetTeamID(i) == CaptureDef || GetTeamID(i) == CaptureAtac) SendDeathMessageToPlayer(i, killerid, playerid, reason);
			}
		}
		if(!IsACop(killerid) && !IsAArmy(killerid))
	    {
            if(!IsPlayerInRangeOfPoint(playerid, 100, -518.5075, -92.3690, 62.2983) && !IsPlayerInRangeOfPoint(playerid, r_wanted, position_unjail[0], position_unjail[1], position_unjail[2]))
            {
		        if(GetPlayerGangZone(killerid) > 0) return 1;
		        if(PI[killerid][pZKP] > 1)
		        {
		        	PI[killerid][pZKP] --;
		        	UpdatePlayerDataInt(killerid, "ZKP", PI[killerid][pZKP]);
		        }
				if(PI[killerid][pWanted] < 6) {
					PI[killerid][pWanted] += 1;
					J_SetPlayerWantedLevel(killerid, PI[killerid][pWanted]);
			    }

				SCM(killerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы были объявлены в розыск! Причина: {FF6347}нападение/убийство");
				f(str_2, sizeof(str_2), "Ваш текущий уровень розыска: {FF6347}%i", PI[killerid][pWanted]);
				SCM(killerid, -1, str_2);
			    f(str_2, sizeof(str_2), "Внимание! {FFFFFF}%s[%i] {FF6347}был(а) объявлен(a) в розыск! Причина: {FFFFFF}убийство{FF6347} | Уровень розыска: {FFFFFF}%i.", PN(killerid), killerid, PI[killerid][pWanted]);
	            SendCopsMessage(COLOR_LIGHTRED, str_2);
			}
		}
	}
	return 1;
}
public OnVehicleSpawn(vehicleid)
{
    new number = GetVehicleID(vehicleid);
	if(number != INVALID_VEHICLE_ID)
	{
		if(CarInfo[number][cOwnerFamily] != -1 && !CarInfo[number][cOwnerFamilySpawn]) return SafeRemoveCar(number, number);
		if(CarInfo[number][cOwnerFamily] != -1) CarInfo[number][cOwnerFamilySpawn] = true;
	}
	if(BalloonSpawned[vehicleid] == true)
    {
        for(new j; j < 6; j++) if(BalloonObjectVehicle[vehicleid][j] != -1) DestroyDynamicObject(BalloonObjectVehicle[vehicleid][j]), BalloonObjectVehicle[vehicleid][j] = -1;
        BalloonSpawned[vehicleid] = false;
        foreach(new i : Player)
        {
            if(BalloonVehicle[i] == vehicleid)
            {
                DestroyDynamic3DTextLabel(BalloonLabelTextVehicle[vehicleid]);
                destroyvehicle_(vehicleid);
                BalloonVehicle[i] = INVALID_VEHICLE_ID;
                DestroyDynamicArea(BalloonSphere[i]);
                CheckItem(i);
                return 1;
            }
            else continue;
        }
    }
	if(GetVehicleModel(vehicleid)==426 && vTemp[vehicleid][vTeam]==TEAM_LICENSERS)
	{
		new LicAttach;
		LicAttach = CreateDynamicObject(19309,0.0, 0.0, 0, 0.0, 0.0, 0.0, -1,  -1, -1,100.0);
		SetDynamicObjectMaterialText(LicAttach, 0, "Учебная",50, "Tahoma", 27, 1, -1, -65536, 1);
		AttachDynamicObjectToVehicle(LicAttach, vehicleid, 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	}
	if(GetVehicleModel(vehicleid) == 512 && vTemp[vehicleid][vTeam] == TEAM_LICENSERS && vTemp[vehicleid][vPlayer] !=-1)
	{
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Вы сломали транспорт, который принадлежит министерству транспорта.");
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Работники этой организации выписали вам счет на оплату ущерба");
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Ваш кредитный счет пополнен на 5 000$. Оплатить его можно в банке.");
		PI[vTemp[vehicleid][vPlayer]][pCredit]+=5000;
		UpdatePlayerDataInt(vTemp[vehicleid][vPlayer], "Credit", PI[vTemp[vehicleid][vPlayer]][pCredit]);
		vTemp[vehicleid][vPlayer] = -1;
	}
 	if(vTemp[vehicleid][vJob] > 0)
	{
  		foreach_player(i)
		{
		    if(pTemp[i][pArendaCar] == vehicleid)
			{
				pTemp[i][pArendaCar] = -1;
				TimetoReturn[i] = 0;
				DisablePlayerRaceCheckpoint(i);
		    	break;
			}
		}
		if(vTemp[vehicleid][vJob] == 12 || (vTemp[vehicleid][vJob]>=17 && vTemp[vehicleid][vJob]<=20)) vTemp[vehicleid][Fuel] = 100.0;
	}
	if(IsACopCar(vehicleid) || GetVehicleModelEx(vehicleid) == 432 || GetVehicleModelEx(vehicleid) == 433 || GetVehicleModelEx(vehicleid) == 427 || GetVehicleModelEx(vehicleid) == 528) J_SetVehicleHealth(vehicleid,5000);
	else J_SetVehicleHealth(vehicleid,1500);

	if(IsAArendCar(vehicleid)) vTemp[vehicleid][Fuel] = 100.0;
	if((vTemp[vehicleid][vTeam] >=1 && vTemp[vehicleid][vTeam]<11) || vTemp[vehicleid][vTeam]>19) vTemp[vehicleid][Fuel] = 100.0;

	if(IsAVelik(vehicleid) || GetVehicleVirtualWorld(vehicleid) == 1228) SetEngineStatus(vehicleid,true, -1);
	else SetEngineStatus(vehicleid,false, -1);
    if(IsAOwnableCar(number))
	{
		UpdateCarInfo(number);
		ChangeVehicleColor(vehicleid, CarInfo[number][cColor_1], CarInfo[number][cColor_2]);
		SetDoorsStatus(vehicleid, CarInfo[number][cLock]);
	}
	else
	{
		if(vTemp[vehicleid][vJob] != 0)
		{
			SetDoorsStatus(vehicleid, vTemp[vehicleid][vLock]);
			vTemp[vehicleid][vLock] = 0;
		}
	}
	if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	if(IsAArendCar(vehicleid))
	{
		if(ArendInfo[vehicleid-ArendInfo[0][aRendCarID]][aRentID] != INVALID_PLAYER_ID) ArendKey[ArendInfo[vehicleid-ArendInfo[0][aRendCarID]][aRentID]] = INVALID_PLAYER_ID;
		ArendInfo[vehicleid-ArendInfo[0][aRendCarID]][aRentID] = INVALID_PLAYER_ID;
	}
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	if(BalloonSpawned[vehicleid] == true)
    {
        for(new j; j < 6; j++) if(BalloonObjectVehicle[vehicleid][j] != -1) DestroyDynamicObject(BalloonObjectVehicle[vehicleid][j]), BalloonObjectVehicle[vehicleid][j] = -1;
        BalloonSpawned[vehicleid] = false;
        foreach(new i : Player)
        {
            if(BalloonVehicle[i] == vehicleid)
            {
                DestroyDynamic3DTextLabel(BalloonLabelTextVehicle[vehicleid]);
                destroyvehicle_(vehicleid);
                BalloonVehicle[i] = INVALID_VEHICLE_ID;
                DestroyDynamicArea(BalloonSphere[i]);
                CheckItem(i);
                return 1;
            }
            else continue;
        }
    }
	new number = GetVehicleID(vehicleid);
	if(number != INVALID_VEHICLE_ID) if(CarInfo[number][cOwnerFamily] != -1) SafeRemoveCar(number, number);
    if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	if(!IsPlayerLogged[playerid]) return 0;
    if(GetPVarInt(playerid,!"AnFlood") > global_time) return !SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
    if(PI[playerid][pMuteTime])
	{
		SetPlayerChatBubble(playerid, !"Пытается что-то сказать.", COLOR_RED, 10.0, 5000);
		SendMuteMessage(playerid);
		return 0;
	}
	SetPVarInt(playerid,"AnFlood",global_time + 1);
	if(GetString(text, ")"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] улыбается", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "))"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] смеется", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "("))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] грустит", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "(("))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] сильно расстроился", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "xD"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] валяется от смеха", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ":D"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] хохочет во весь голос", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "O_o"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] очень удивлен", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ">_<"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] сморщился от злости", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ";)"))
	{
	    str_2[0] = EOS, f(str_2, sizeof(str_2), " %s[%i] подмигивает", PN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "q"))
	{
	    if(!PlayerLie[playerid])
	    {
   			if(PI[playerid][pAdmin] > 1)
		    {
	            str_1[0] = EOS, f(str_1, sizeof(str_1), " %s[%i] показал(а) распальцовку {33AA33}Admins Team", PN(playerid), playerid);
				ProxDetector(25, playerid, str_1, COLOR_ME);
				J_ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 0, 1);
				return 0;
			}
			new member = IsAtGang(playerid);
			if(member != 0)
			{
				str_1[0] = EOS;
				switch(member)
				{
					case TEAM_GROOVE: str_1 = "{009327}Grove Street";
					case TEAM_VAGOS: str_1 = "{D1DB1C}Vagos Family";
					case TEAM_BALLAS: str_1 = "{cc00cc}West Coast Ballas";
					case TEAM_WOLFS: str_1 = "{7F6464}Night Wolfs";
					case TEAM_CORONOS: str_1 = "{00FFE2}Varioz Los Aztecas";
					case TEAM_RIFA: str_1 = "{6666FF}The Rifa Gang";
					case TEAM_BIKERS: str_1 = "{BA541D}Warlock MC";
					default: str_1 = "NONE";
				}
				if(!GetString(str_1, "NONE"))
				{
					str_2[0] = EOS, f(str_2, sizeof(str_2), " %s показал(а) распальцовку %s", PN(playerid), str_1);
					ProxDetector(25, playerid, str_2, COLOR_ME);
					J_ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 1, 1);
					return 0;
				}
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -575.7592, 2568.7976, 1702.5029))
	{
	   	str_1[0] = EOS, f(str_1, sizeof(str_1), "[Микрофон] %s[%i] говорит:{FFFFFF}  %s", PN(playerid), playerid, text);
	    ProxDetector(100.0, playerid, str_1, 0x90E9D6FF);
		return 0;
	}
	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s[%i] говорит:{B7AFAF} %s", PN(playerid), playerid, text);
	ProxDetector(25.0, playerid, str_1, -1);
	ApplyAnimation(playerid, "PED", "IDLE_chat", 8.1,0,1,1,1,1,0);
    player_timerchat{playerid} = strlen(text)+2;
    if(player_timerchat{playerid} > 10) player_timerchat{playerid} = 10;
    else if(player_timerchat{playerid} < 2) player_timerchat{playerid} = 2;
	SetPlayerChatBubble(playerid, text, -1, 20.0, 10000);
	//aml(14, playerid, "", text);
	return 0;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	/*static Float: __z;
	GetVehiclePos(vehicleid, __z, __z, __z ) ;
	if(passenger_seat > 0)
	{
		static Float:ac_zdiff ;
		ac_zdiff = new_z - __z ;
		if ( ( floatabs ( vel_x ) >= floatabs (VehiclePosVecX[vehicleid]) > 0.3 ||
		floatabs ( vel_y ) >= floatabs (VehiclePosVecY[vehicleid]) > 0.3 || floatabs ( vel_x - VehiclePosVecX[vehicleid]) > 25.0 ||
		floatabs ( vel_y - VehiclePosVecY[vehicleid]) > 25.0 ) && ac_zdiff > -5.0 ) ToCheat(8, playerid, true);
	}
    VehiclePosVecX[vehicleid] = vel_x;
    VehiclePosVecY[vehicleid] = vel_y;*/
	if (GetVehicleDistanceFromPoint(vehicleid,new_x, new_y, new_z) < 0.0) return 0;
	GetVehiclePos(vehicleid, new_x, new_y, new_z);
	if (!IsPlayerInRangeOfPoint(playerid, 10, new_x, new_y, new_z)) return 0;
	if(GetVehicleDistanceFromPoint( vehicleid, new_x, new_y, new_z ) > 15.0)
	{
		new Float:pos_x, Float:pos_y, Float:pos_z;
		GetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
		if (pos_z > -70.0) SetVehiclePos(vehicleid, pos_x, pos_y, pos_z ) ;
		return 0;
 	}
    return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	/*if(GetUID_PlayerNPC[playerid] != -1 && GetTimerID_PlayerNPC[playerid] == 0)
	{
		if(FCNPC_GetVehicleID(GetUID_PlayerNPC[playerid]) != INVALID_VEHICLE_ID) FCNPC_ExitVehicle(GetUID_PlayerNPC[playerid]);
	}*/
	SetCameraBehindPlayer(playerid);
	if(vTemp[vehicleid][vPlayer]==playerid &&  GetVehicleModel(vehicleid)==512 && vTemp[vehicleid][vTeam] == TEAM_LICENSERS) vTemp[vehicleid][vPlayer] = -1;
	/*if(BalloonSpawned[vehicleid] != false && BalloonVehicle[playerid] == vehicleid)
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(vehicleid, X, Y, Z);
		J_SetPlayerPos(playerid, X-2.0, Y, Z);
	}*/
	return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	/*if(GetUID_PlayerNPC[playerid] != -1 && GetTimerID_PlayerNPC[playerid] == 0)
	{
		new npcid = GetUID_PlayerNPC[playerid];
		ResetFCNPC(npcid);
		new count;
		foreach(new i: PlayerInVehicle[vehicleid]) count++;
		if(count > 1) return 1;
		if(!count) count = 1;
		FCNPC_EnterVehicle(npcid, vehicleid, count, FCNPC_MOVE_TYPE_RUN);
		IsNPCEnterVehicle[npcid] = true;
	}*/
    if(!ispassenger) CheckEnterCar(playerid, vehicleid);
    new Float:hpveh;
	GetVehicleHealth(vehicleid, hpveh);
    if(hpveh < 300.0) J_SetVehicleHealth(vehicleid, 350.0);
    return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_ONFOOT && PAI[playerid][secondupdate] > 0) ExitPAI(playerid);
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT && BalloonVehicle[playerid] != INVALID_VEHICLE_ID)
	{
		GetPlayerPos(playerid, BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2]);
		if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1;
		BalloonSphere[playerid] = CreateDynamicSphere(BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2], 20.0, 0, 0, playerid);
		for(new i; i < 3; i++) BalloonObjectPos[playerid][i] = 0.0;
	}
	if(oldstate == 2 && PI[playerid][plveh]!=-1)
	{
		DestroyAttachVehicle(PI[playerid][plveh],0),DestroyAttachVehicle(PI[playerid][plveh],1);
		destroyvehicle_(PI[playerid][plveh]);
		TwinTurbo[PI[playerid][plveh]][Engine] = false;
		TwinTurbo[PI[playerid][plveh]][cStatus] = false;
		PI[playerid][plveh] = -1;
	}
    if(oldstate == 2)
    {
		OnPlayerExitDriver(playerid);
		if(IsPlayerToRaceID[playerid] != -1)
		{
			if(IsPlayerRacePresentCount[playerid] != 0) OnPlayerWinRace(IsPlayerToRaceID[playerid]);
			ResetRacePlayer(IsPlayerToRaceID[playerid]);
			ResetRacePlayer(playerid);
		}
        if(!TimetoReturn[playerid])
        {
	     	if(pTemp[playerid][pArendaCar]==pTemp[playerid][pcarid])
			{
				TimetoReturn[playerid]=120;
				SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас есть 2 минуты чтобы вернуться обратно в транспорт.");
			}
		}
		pTemp[playerid][pcarid] = INVALID_VEHICLE_ID;

    }
    new vehid = GetPlayerVehicleID(playerid);
	if(newstate==2)
	{
	    new carid = GetPlayerVehicleID(playerid), bool:id;
		if(vTemp[vehid][vJob]>0)
	    {
		    switch(vTemp[vehid][vJob])
		    {
		        case 1..5, 11, 13,14: id = true;
				default: id = false;
			}
		}
		if(id == true)
		{
		    if((vTemp[vehid][vPlayer]!=-1) && vTemp[vehid][vPlayer]!=playerid)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот транспорт уже арендуют!"),RemovePlayerFromVehicle(playerid);
		    if(PI[playerid][pJob] != vTemp[vehid][vJob]) return RemovePlayerFromVehicle(playerid);
			if(PI[playerid][pJob] == vTemp[vehid][vJob] && pTemp[playerid][pArendaCar] != vehid)
			{
			    if(pTemp[playerid][pArendaCar]!=-1)
				{
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже арендуете рабочий транспорт!");
			 		return RemovePlayerFromVehicle(playerid);
				}
			    f(str_2,sizeof(str_2),"{FFFFFF}Стоимость аренды этого транспорта состовляет {42B02C}%i${FFFFFF}.\n{FAAC58}Вы получите бесплатную заправку при аренде авто.\n\n{FFFFFF}Обратите внимание что этот транспорт необходимо вернуть в том состоянии в котором вы его арендовали.\nВ ином случае вам будет выписан чек за порчу государственного имущества!",GLS[15]);
				SPD(playerid,280+1,DIALOG_STYLE_MSGBOX,"Аренда транспорта",str_2,"Согласен","Отмена");
			}
		}
	    pTemp[playerid][pcarid] = vehid;
		ResetDoorsStatus(carid);
	    if(IsAVelik(carid)) SetEngineStatus(carid,true, playerid);
        if(BalloonSpawned[carid] == true)
        {
            if(BalloonVehicle[playerid] == carid) 
			{
				if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1;
			}
			else SCM(playerid,COLOR_RED,!"[Ошибка] {F0F0F0}Это не ваш транспорт!"), RemovePlayerFromVehicle(playerid);
        }
    	if(BalloonVehicle[playerid] == carid && GetVehicleModel(carid) == 487) GameTextForPlayer(playerid, !"Vozdushnyy shar", 3000, 1);
	    else GameTextForPlayer(playerid,InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],3000,1);
		VehicleSeat[carid][0] = playerid;
		GetVehicleHealth(carid,VehicleHealth[carid]);
	   	if(pTemp[playerid][pArendaCar]!=-1 && vTemp[carid][vJob]==PI[playerid][pJob]) TimetoReturn[playerid]=0;
	    PlayerCar[playerid] = carid;
	    PlayerSeat[playerid] = 0;
	    SetCameraBehindPlayer(playerid);
		if(!IsAPlane(carid) && !IsAVelik(carid)) ShowSpeedometr(playerid);
     	CheckEnterCar(playerid, carid);
        if(GetEngineStatus(carid) <= 0)
        {
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Чтобы завести двигатель введите {DFCFCF}/engine{DC4747} или нажмите {DFCFCF}N");
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Для управления поворотниками , используйте клавиши: {DFCFCF}(NUM4/NUM6)");
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}В транспорте присутствует радио{DFCFCF}[/radio]");
			SetEngineStatus(carid,false, playerid);
			if(IsACar(carid) && !PI[playerid][pImprovement][4]) SCMf(playerid, 0xDFCFCFFF, "[Подсказка] {DC4747}Ваш текущий навык вождения: {DFCFCF}[%i/100]  {DC4747}Информация: /carskill", PI[playerid][pCarSkill]);
			if(pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid) SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Если вы заведете двигатель, табличка пропадет");
		}
		if(IsAArendCar(GetPlayerVehicleID(playerid)))
		{
		    if(ArendInfo[GetArendCarID(GetPlayerVehicleID(playerid))][aID] == 578)
		    {
		        if(ArendKey[playerid] != INVALID_VEHICLE_ID)
		        {
		            if(!Proviziya{playerid})
		            {
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}На миникарте установлена метка, где расположен склад СФ!\nНа нем вы должны загрузить товар, который нужно привести в Аксиому!\n\n", !"Принять", !"");
			            EnableGPSForPlayer(playerid, -1733.3938, 187.7363, 3.5547);
					}
					else
					{
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Ваша машина уже загружена. Отправляйтесь на склад Аксиомы, чтобы\nразгрузить машину с товаром!\n\n", !"Принять", !"");
						EnableGPSForPlayer(playerid, 1830.3701, 416.7932, 20.1436);
				    }
				}
			}
		}
		//AC_FIX_DIALOG_F(playerid, 0);
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433 || GetVehicleModel(GetPlayerVehicleID(playerid)) ==548) SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Для того чтобы начать развозку оборудования введи [/carm]");
	    new model = GetVehicleModelEx(carid);
		if(model == 528 || (model >= 596 && model <= 599) && IsACop(playerid) && PI[playerid][pRank] > 5) SCM(playerid, -1, !" {9ACD32} Используйте 2 чтобы выбросить полосу с шипами");
		if(TwinTurbo[carid][Engine]) GameTextForPlayer(playerid, (TwinTurbo[vehid][cStatus]) ? ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~r~ SPORT!") : ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~g~ COMFORT!"), 3000, 3);
	    new number = GetVehicleID(carid);
	    if(IsAOwnableCar(number))
	    {
	        if(CarInfo[number][cLock])
	        {
	            RemovePlayerFromVehicle(playerid);
	            return 1;
	        }
		    if(IsASellCar(number))
			{
			    //AC_FIX_DIALOG_F(playerid, 11);
				SPDf(playerid, 11, 0, !"Транспорт продается", !"Купить", !"Отмена", "{FF9900}Этот транспорт продается.\n\n{FFFFFF}Модель: {AFAFAF}%s{FFFFFF}\nНомер: {AFAFAF}SP %i{FFFFFF}\nСтоимость: {AFAFAF}$%i{FFFFFF}\n\n{FFFFFF}Чтобы купить нажмите {B83434}'Купить'", InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], carid, CarInfo[number][cCost]);
			}
			else
		    {
				if(CarInfo[number][cOwnerFamily] == -1) SCMf(playerid, -1, "Этот транспорт зарегистрирован на жителя {9ACD32}%s", CarInfo[number][cOwner]);
				else 
				{
					SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Этот транспорт зарезервирован на семью {9ACD32}%s", FamilyInfo[CarInfo[number][cOwnerFamily]-1][famName]);
					if(CarInfo[number][cOwnerFamilyUID] != PI[playerid][pID]) return RemovePlayerFromVehicle(playerid);
				}
				if(PI[playerid][pAdmin] > 0) SCMf(playerid, COLOR_VALIK, "Налог этого транспорта составляет %i", CarInfo[number][cNalog]);
			    if(CarInfo[number][cAlarmON])
			    {
				    SetAlarmStatus(carid,true);
     				foreach_player(i)
					{
					    if(IsPlayerHaveCar(i, number) == 1)
					    {
							new Float:X, Float:Y, Float:Z;
							GetVehiclePos(carid, X, Y, Z);
							f(str_2, sizeof(str_2), "[Информация] {FFFFFF}На транспорте [SP %i] сработала сигнализация", carid);
							SCM(i, COLOR_YELLOW, str_2);
							SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Местоположение транспорта указано на карте!");
							EnableGPSForPlayer(i, X, Y, Z);
							break;
						}
					}
				}
				if(CarInfo[number][cShtraf])
				{
					str_d[0] = EOS, requestPN(CarInfo[number][cShtrafName], str_d);
				    f(str_2, sizeof(str_2), "\n\n{FFFFFF}Этот транспорт находится на штрафстоянке!\n\nВладелец должен внести за него залог.\nРазмер залога: $%i\n\nПоставил на стоянку: %s\n{9EF04B}Оплатить залог можно в любом отделении банка!",\
					 str_d, CarInfo[number][cShtraf]);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Запрещено!", str_2, !"Ок", !"");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
	    }
  		if(IsAArendCar(vehid))
		{
			if(ArendKey[playerid] == INVALID_VEHICLE_ID)
			{
       			if(!IsAArended(vehid))
				{
				    new cost;
				    switch(GetVehicleModel(vehid))
				    {
				        case 454: cost= 10000;
				        case 484: cost = 12000;
				        case 558: cost = 9000;
				        case 541: cost = 22000;
				        case 560: cost = 13000;
				        case 409: cost = 10000;
						case 462: cost = 250;
						case 469: cost = 15000;
						case 487: cost = 20000;
				        default: cost = GLS[14];
					}
				    str_1[0] = EOS, f(str_1,sizeof(str_1),"{FFFFFF}Транспорт для аренды!\n\n{FF9900}Модель: %s\nСтоимость: %i\n\n{AFAFAF}Чтобы арендовать нажмите 'Аренда'",InfoConfigVehicle[vehid][Model_Name], cost);
					SPD(playerid, 230, 0, "Аренда", str_1, "Аренда", "Отмена");
				}
                else
				{
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот транспорт уже арендуют!");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
				if(ArendKey[playerid] != GetArendCarID(vehid))
				{
					SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже арендуете транспорт! Используйте /unrentcar чтобы отказаться от аренды!");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
	    else if(InJob[playerid]==3 && InJobs[playerid]!=0) ExitCar(playerid);

	}
    if(newstate == PLAYER_STATE_PASSENGER)
    {
        if(vTemp[vehid][vCena] != 0)
	    {
	        new idvoditel = GetVehicleSeat(vehid,0);
	        if(idvoditel != INVALID_PLAYER_ID)
		    {
		        if(GetMoney(playerid) < vTemp[vehid][vCena])
				{
				    SetPlayerChatBubble(playerid, !"Показал(а) водителю проездной.", COLOR_PURPLE, 15.0, 5000);
				    ProxDetector(25.0, playerid, !"Показал(а) водителю проездной.", COLOR_PURPLE);
				}
	            else
				{
					GiveMoney(playerid, -vTemp[vehid][vCena]);
					GiveMoney(idvoditel, vTemp[vehid][vCena], "получил за оплату билета");
					SCMf(idvoditel, 0x6495EDFF, "[Информация] {FFFFFF}Пассажир %s оплатил билет, добавлено к зарплате", PN(playerid));
					////aml(50, playerid, PN(idvoditel), "Оплата Билета", vTemp[vehid][vCena]);
				}
			}
	    }
	    new seat = GetPlayerVehicleSeat(playerid);
	    if(PlayerCar[playerid] != INVALID_VEHICLE_ID) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = -1;
	    VehicleSeat[vehid][seat] = playerid;
	    PlayerCar[playerid] = vehid;
	    PlayerSeat[playerid] = seat;
	    SetCameraBehindPlayer(playerid);
	    if(IsATaxi(vehid))
	    {
	        new id = GetVehicleSeat(vehid, 0);
            if(id != INVALID_PLAYER_ID)
			{
			    if(PI[id][pJob] == JOB_TAXI)
	            {
	                if(TaxiTarif[id] > 0)
			    	{
		                TaxiPrice[playerid] = 0;
		                TaxiDistance[playerid] = 0;
		                PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
				    	TextDrawShowForPlayer(playerid, BoxTaxi1);
		                TextDrawShowForPlayer(playerid, BoxTaxi2);
		                TextDrawShowForPlayer(playerid, Taximonitor);
		                TextDrawShowForPlayer(playerid, TaxiServ);
		                TextDrawShowForPlayer(playerid, TaxiDol);
		                PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
		                f(str_2,sizeof(str_2),">> {FFFFFF}%s сел к вам в такси.",PN(playerid));
		                SCM(id,COLOR_VALIK,str_2);
		                if(GetMoney(playerid)<=TaxiTarif[id])
    					{
	    					SCM(id,COLOR_RED,!"[ВНИМАНИЕ]{FFFFFF} У игрока который к вам сел , не хватит денег чтобы оплатить за проезд!");
		    				SCM(playerid, COLOR_RED, !"<< {FFFFFF}У вас не достаточно денег чтобы ездить на такси!");
			    			RemovePlayerFromVehicle(playerid);
    					}
	    	            SPD(playerid, 247, 2, "Как ехать?", "1. Выбрать пункт в GPS\n2. Отметить точку на карте\n3. Договориться с таксистом", "Выбор", "Отмена");
    				}
	    			else
    				{
	    				SCM(id,COLOR_RED,!"[Информация] {FFFFFF}К вам в такси сел пассажир, но вы не получите с него прибыли, так-как вы не установили тариф!");
		    			SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Этот таксист еще не установил тариф за свои услуги!");
		    		}
	            }
    	    }
        }
	}
	if(oldstate == 2 || oldstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicleid = PlayerCar[playerid];
		new seat = PlayerSeat[playerid];
		Controllable{playerid} = true;
		SetCameraBehindPlayer(playerid);
		if(!IsAPlane(vehicleid) && !IsAVelik(vehicleid)) HideSpeedometr(playerid);
		if(vehicleid != INVALID_VEHICLE_ID && GetVehicleSeat(vehicleid, seat) == playerid) VehicleSeat[vehicleid][seat] = INVALID_PLAYER_ID;
		if(IsATaxi(vehicleid))
		{
			if(!PlayerSeat[playerid])
			{
    			if(PI[playerid][pJob] == JOB_TAXI)
				{
					if(TaxiTarif[playerid] > 0)
					{
						TaxiTarif[playerid] = 0;
					    //SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы теперь не на службе");
						PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					  	TextDrawHideForPlayer(playerid, BoxTaxi1);
				      	TextDrawHideForPlayer(playerid, BoxTaxi2);
				      	TextDrawHideForPlayer(playerid, Taximonitor);
				      	TextDrawHideForPlayer(playerid, TaxiServ);
				      	TextDrawHideForPlayer(playerid, TaxiDol);
						UpdateDynamic3DTextLabelText(TaxiText[vehicleid], COLOR_GOLD, "<< Такси для аренды >>");
						for(new i;i < 4;i ++)
						{
						    new player = GetVehicleSeat(vehicleid, i);
						    if(!IsPlayerConnectEx(player)) continue;
							if(player != INVALID_PLAYER_ID)
							{
								SCM(player,COLOR_GREY,"[Информация] {FFFFFF}Таксист, который вез вас теперь не на службе");
								PlayerTextDrawHide(player,TaxiDraw[player]);
							  	TextDrawHideForPlayer(player, BoxTaxi1);
						      	TextDrawHideForPlayer(player, BoxTaxi2);
						      	TextDrawHideForPlayer(player, Taximonitor);
						      	TextDrawHideForPlayer(player, TaxiServ);
						      	TextDrawHideForPlayer(player, TaxiDol);
						      	if(PI[player][pMoney] > TaxiPrice[player]) GiveMoney(playerid,TaxiPrice[player], "получил зарплату за проездку в такси");
        						GiveMoney(player,-TaxiPrice[player], "заплатил за проездку в такси");
								PlayerTextDrawHide(player,TaxiDraw[player]);
								PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
								PlayerTextDrawSetString(player, TaxiDraw[player],"0");
								TaxiPrice[player] = 0;
								TaxiDistance[player] = 0;
							}
						}
					}
				}
			}
			else if(PlayerSeat[playerid] > 0)
			{
				new id = GetVehicleSeat(vehicleid, 0);
				if(id != INVALID_PLAYER_ID)
				{
 			    	if(GetMoney(playerid) > TaxiPrice[playerid]) 	GiveMoney(playerid,-TaxiPrice[playerid], "получил за проездку в такси");
 			    	GiveMoney(id,TaxiPrice[playerid]);
					PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					TextDrawHideForPlayer(playerid, BoxTaxi1);
     				TextDrawHideForPlayer(playerid, BoxTaxi2);
				    TextDrawHideForPlayer(playerid, Taximonitor);
				    TextDrawHideForPlayer(playerid, TaxiServ);
				    TextDrawHideForPlayer(playerid, TaxiDol);
					PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
					f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы взяли $%i с игрока %s за поездку",TaxiPrice[playerid],PN(playerid));
					SCM(id,COLOR_VALIK,str_2);
					f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы отдали $%i таксисту %s за поездку",TaxiPrice[playerid],PN(id));
					SCM(playerid,COLOR_GREY,str_2);
					TaxiPrice[playerid]=0;
					new money;
					for(new i = 1; i < 4; i ++)
					{
						new pseat = GetVehicleSeat(vehicleid, i);
						if(pseat != INVALID_PLAYER_ID) money += TaxiPrice[pseat];
					}
					valstr(str_2, money);
					PlayerTextDrawSetString(id, TaxiDraw[id],str_2);
				}
			}
		}
 	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new jail = PlayerJailCP[playerid];
	new team = GetTeamID(playerid);
	if(checkpointid == RingCP) return SPD(playerid, 188, DIALOG_STYLE_MSGBOX, !"Покупка колец", !"Вы хотите приобрести\nобручальные кольца?\nСтоимость которых (5 000$.)", !"Принять", !"Отклонить");
	if(checkpointid == BankCP[0] || checkpointid == BankCP[2] )
	{
	    if(PI[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 5)
			{
				if(IsPlayerInIncVehicle(playerid))
	    	    {
	    	        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257))
					{
						TogglePlayerDynamicCP(playerid, BankCP[0], false);
						TogglePlayerDynamicCP(playerid, BankCP[1], true);
					}
					else
					{
						TogglePlayerDynamicCP(playerid, BankCP[2], false);
						TogglePlayerDynamicCP(playerid, BankCP[3], true);
					}
		    	    TogglePlayerControllable(playerid, true);
			    	SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Отнесите мешки с деньгами в банк");
			    	InJob[playerid] = 6;
			    	RemovePlayerFromVehicle(playerid);
	    	    }
			}
		}
		return 1;
	}
	else if(checkpointid == BankCP[1] || checkpointid == BankCP[3] )
	{
	    if(PI[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 6)
			{
				if(!IsPlayerInAnyVehicle(playerid))
	    	    {
	    	        RemovePlayerAttachedObject(playerid, 7);
	    	        SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	    	        new money = GLS[11];
					GiveMoney(playerid,money, "получил зарплату за работу коллекторов");
					f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы получили {73B461}$%i{FFFFFF} за проделанную работу",money);
					SCM(playerid, -1, str_2);
	    	    }
	    	    InJob[playerid] = 1;
	    	    if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) TogglePlayerDynamicCP(playerid, BankCP[1], false);
	    	    else TogglePlayerDynamicCP(playerid, BankCP[3], false);

			}
	    }
	    return 1;
	}
 	else if(checkpointid == Dorm_CP[team])
	{
		str_2[0] = EOS, f(str_2,sizeof(str_2),"{B83434} Общак \n\n{FFFFFF}Наркотики: \t\t{9ACD32}%iг\n{FFFFFF}Патроны: \t\t{9ACD32}%i\n{FFFFFF}Канистры: \t\t{9ACD32}%i\n{FFFFFF}Инструменты: \t{9ACD32}%i\n{FFFFFF}Маски: \t\t{9ACD32}%i",OrgInfo[team][oItemCount][1],OrgInfo[team][oItemCount][0]);
		SPD(playerid,216,0,"",str_2,"Меню","Назад");
		return 1;
	}
	else if(checkpointid == Binko_CP) return GameTextForPlayer(playerid, !"~g~Press ~r~ALT", 1000, 3);
	else if(checkpointid == Zek_CP) return SPD(playerid,107,2,"Выберите пункт","Список заключенных\nСписок разыскиваемых","Выбор","Отмена");
	else if(jail != -1 && checkpointid == JailCP[jail])
	{
	    new num=0;
		if(IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
   			foreach_player(i)
			{
			    if(i != playerid)
			    {
					if(PI[i][pWanted] > 0)
					{
					    if(IsPlayerInVehicle(i,carid))
						{
							GiveMoney(playerid, GLS[16], "получил за то что посадил приступника");
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
							PI[i][pDemogran] = PI[i][pWanted]*60;
							PI[i][pBailPrice] = PI[i][pWanted]*60;
							UpdatePlayerDataInt(i, "BailPrice", PI[i][pWanted]*600);
							ArrestID[i] = playerid;
							if(GetInvCount(i, 327) > 0 || GetInvCount(i, 328) > 0) SCM(i, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
                            if(!IsPlayerToKvadrat(i,-2929.6589,-2889.1660,-1326.9077,1493.1770))
                            {
								new jrand = random( 2 );
								SetSpawnInfoEx(i, GetPlayerSkin(i), JailPos[jrand][0],JailPos[jrand][1],JailPos[jrand][2], 180.0);
							}
							else SetSpawnInfoEx(i, GetPlayerSkin(i), JailPos[2][0],JailPos[2][1],JailPos[2][2], 180.0);
							ResetPlayerWeapons(i);
							PI[i][pWanted] = 0;
							J_SetPlayerWantedLevel(i, 0);
							PlayerSpawn(i);
							SMD(playerid, "default playerspawn31");
							SetItem(i, 327);
							SetItem(i, 328);
							SCMf(i, COLOR_LIGHTRED, ">> Вы были посажены в тюрьму на %i минут.", (PI[i][pDemogran]/60));
							SCM(i, COLOR_LIGHTBLUE, ">> Используйте /advokats чтобы найти адвоката который вам поможет выйти отсюда!");
							SCMf(playerid, COLOR_GREEN, ">> Вы посадили игрока %s в тюрьму на %i минут.", PN(i),(PI[i][pDemogran]/60));

							if(IsPlayerToKvadrat(i,-891.3302,-2950.0190,2915.9917,560.3257)) PI[i][pPrison]=1,SetPlayerVirtualWorldEx(i, 11);
							else if(IsPlayerToKvadrat(i,-2929.6589,-2889.1660,-1326.9077,1493.1770)) PI[i][pPrison]=3,SetPlayerVirtualWorldEx(i, 13);
							else PI[i][pPrison]=2,SetPlayerVirtualWorldEx(i, 12);
							UpdatePlayerDataInt(i, "Prison", PI[i][pPrison]);
							SetPlayerInteriorEx(i, 6);
							TogglePlayerControllable(i, true);
							num = 4;
							break;
                        }
                        else if(num!=4)num = 2;
					}
					else if(num!=4)num = 1;
				}
			}
		}
		if(num==1) SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можете посадить игрока который не находится в розыске!");
		if(num ==2) SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Игрок которого вы хотите посадить должен находится у вас в машине!");
		num=0;
		TogglePlayerDynamicCP(playerid, JailCP[jail], false);
		return 1;
	}
	return 0;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	return 1;
}
public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
	return 1;
}
stock TeleportPickup__(playerid, pickupid)
{
	if(GetPlayerSkin(playerid)==80)
	{
		pSportZal[playerid]=0;
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На улицу запрещено выходить в форме для тренировок!");
	}
	CanUse{playerid}=0;
	new tp = pickupid - TeleportPickup[0];
	new zone = GetPlayerGangZone(playerid, tp);
	if(HouseEntered[playerid]!=-1) HouseEntered[playerid]=-1;
	switch(tp)
	{
		case 71,73,75,77,79: {
			if((GZInfo[zone][gzFracID]==PI[playerid][pMember]))
			{
				if(PI[playerid][pRank]>=9)
				{
					ClearChatForPlayer(playerid);
					SCM(playerid, COLOR_ORANGE, !"Этот наркопритон принадлежит вашей банде!");
					SCM(playerid, -1, !"Для управления наркопритоном используйте команды:");
					SCM(playerid, -1, !"/getmoney /putmonet /setdsell /setdbuy.");
					SCM(playerid, COLOR_ORANGE, !"Необходимо подойти к вашему барыге!");
					CanUse{playerid}=1;
				}
				else SCM(playerid, COLOR_ORANGE, !"Этот наркопритон принадлежит вашей банде!");
			}
		}
	}
	SetPlayerFacingAngle(playerid, TeleportInfo[tp][tpExitPos_A]);
	J_SetPlayerPos(playerid, TeleportInfo[tp][tpExitPos_X], TeleportInfo[tp][tpExitPos_Y], TeleportInfo[tp][tpExitPos_Z]);
	SetPlayerInteriorEx(playerid, TeleportInfo[tp][tpExitInt]);
	SetPlayerVirtualWorldEx(playerid, TeleportInfo[tp][tpExitWorld]);
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(GetPlayerVirtualWorld(playerid) == 1228 || pPickupID[playerid] != 0) return 1;
	pPickupID[playerid] = pickupid;
	if(Iter_Contains(WorkNPC, playerid) == 1)
	{
		for(new i; i < sizeof WorkNPC_pickup; i++)
		{
			if(pickupid != WorkNPC_pickup[i]) continue;
			DestroyDynamicPickupEx(WorkNPC_pickup[i]), WorkNPC_pickup[i] = -1;
			UpdatePlayerQuest(playerid, 1, 1);
			InvAdd(playerid, 5148, 1);
			J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		}
	}
	else if(GetDynamicPickupModel(pickupid) > 19054 && GetDynamicPickupModel(pickupid) < 19059)
	{
		if(Iter_Contains(PickupPresent, pickupid) == 1)
		{
			DestroyDynamicPickupEx(pickupid);
			InvAdd(playerid, 316, 1, 0);
			SCMf(playerid, COLOR_LIGHTBLUE, "[Подсказка]{FFFFFF} Вы подобрали подарок. У вас уже %d подарка(ов)! Обменять подарки на шкатулку можно у Эдварда.", GetInvCount(playerid, 316));
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
			Iter_Remove(PickupPresent, pickupid);
		}
	}
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(BizCP[i] != pickupid) continue;
		if(InfoBusinesses[BizInfo[i][bState]][BType] == 2) return EatSystem(playerid);
	}
    for(new i; i < FamilyHouses; i++)
	{
		if(pickupid != famHousePickUp[i]) continue;
		if(FamilyHouse[i][fhOwnerID] == -1)
		{
			SetPVarInt(playerid, !"TempPickup", i);
			SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Семейная квартира продается, если вы лидер или заместитель");
			SCM(playerid, -1, !"одной из семей, то вы можете приобрести эту квартиру за очки репутации.");
			SCM(playerid, -1, !"Для покупки используйте команду: {F56183}/buyfam");
			return 1;
		}
		if(FamilyHouse[i][fhStatus] != false) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Квартира закрыта!");
		TogglePlayerControllable(playerid, false);
		if(IsPlayerInRangeOfPoint(playerid, 200.0, 1892.5233,737.6722,1500.1460)) SetPlayerInteriorEx(playerid,209),J_SetPlayerPos(playerid, -1515.8021,2722.2305,1500.9674);
		else SetPlayerInteriorEx(playerid,1),J_SetPlayerPos(playerid, -1512.8021,2722.2305,1500.9674);
		SetPlayerVirtualWorldEx(playerid, (FamilyHouse[i][fhID]+50));
		return 1;
	}
	if(pickupid == famHouseBackPickUp[0] && IsPlayerInRangeOfPoint(playerid, 1.0, -1515.8021,2722.2305,1500.9674))
	{
		J_SetPlayerPos(playerid, 2786.0383, 735.7945, 1500.1187);
		SetPlayerInteriorEx(playerid,206);
		SetPlayerVirtualWorldEx(playerid,15);
	}
	else if(pickupid == famHouseBackPickUp[1] && IsPlayerInRangeOfPoint(playerid, 1.0, -1205.1844, 2382.4812, 1500.9667))
	{
		J_SetPlayerPos(playerid, 1892.5233,737.6722,1500.1460);
		SetPlayerInteriorEx(playerid,208);
		SetPlayerVirtualWorldEx(playerid,10);
	}
	else if(pickupid == FamilyARM)
	{
		if(!FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1]) return\
			SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На складе закончили бронежилеты");
		if(PI[playerid][pArmour] > 97) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас не поврежден бронижелет!");
		FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1]--;
		J_SetPlayerArmour(playerid, 100);
	}
	else if(pickupid == FamilyHP)
	{
		if(!FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0]) return\
			SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На складе закончили аптечки");
		if(PlayerHealthAC[playerid] > 97) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам не требуется лечение!");
		FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0]--;
		J_SetPlayerHealth(playerid, 100);
	}
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(GetPlayerVirtualWorld(playerid) == 1228 || pPickupID[playerid] != 0) return 1;
	pPickupID[playerid] = pickupid;
	for(new i; i < 20; i++)
	{
		if(DropPickup[i] != pickupid) continue;
		new id = GetPickupModel(pickupid);
		id = GetWeaponModel2(id);
		if(id != 777) GivePlayerWeapon(playerid, id, random(30));
		else J_SetPlayerHealth(playerid, PlayerHealthAC[playerid]+random(40));
		DestroyPickup(DropPickup[i]),DropPickup[i] = -1,WarDropAll--;
		if(WarDropAll < 6) SetTimerEx("StartWar", 1000, 0, "i", 1);
		break;
	}
	if(pickupid == Bar_CP[0] || pickupid == Bar_CP[1] || pickupid == Bar_CP[2] || pickupid == Bar_CP[3])
	{
	    if(InventStatus{playerid}) return 0;
	    //2 type
	    if(Getemer[playerid]>global_time)return 0;
	    Getemer[playerid]=global_time+4;
	    ShowBuyMenu(playerid, 5);
		return 1;
	}
    else if(pickupid == HealExitPickup)
    {
        if(PI[playerid][pHeal]) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы находитесь на лечении");
        new world = GetPlayerVirtualWorld(playerid);
        switch(world)
        {
            case 1: SetPlayerFacingAngle(playerid, 335.2464), J_SetPlayerPos(playerid, 1176.8413,-1324.0846,14.0412);
            case 2: SetPlayerFacingAngle(playerid, 2.3200), J_SetPlayerPos(playerid, 1607.4996,1818.8636,10.8203);
            default: SetPlayerFacingAngle(playerid, 180.0), J_SetPlayerPos(playerid, -2668.9080,636.9764,14.4531);
        }
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
        return true;
    }
	else if(pickupid >= Bar_CP[0] && pickupid <= Bar_CP[MAX_BARSs-1])
	{
	    if(Getemer[playerid]>global_time)return 0;
	    Getemer[playerid]=global_time+4;
	  	for(new A; A < 7; A++) 
		{
			if(A < 5) TextDrawShowForPlayer(playerid, alcodraw[A]),TextDrawShowForPlayer(playerid, alcodraw2[A]);
			TextDrawShowForPlayer(playerid, alcodraw1[A]);
		}
    	SelectTextDraw(playerid, 0xFF9933FF);
	  	return 1;
	}
	else if(pickupid == amybank)
 	{
		if(GetTeamID(playerid) != TEAM_BANK)
			return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не сотрудник банка!");

		GivePlayerWeapon(playerid, 3, 100);
		f(str_2, sizeof(str_2), "%s берет оружие", PN(playerid));
		ProxDetector(25, playerid, str_2, COLOR_PURPLE);
		return 1;
	}
	else if(pickupid >= HealSG[0] && pickupid <= HealSG[93]) return GameTextForPlayer(playerid, !"~g~Press~r~ ALT", 1000, 3);
 	else if(pickupid == Inc_CP[0] || pickupid == Inc_CP[1])
	{
		if(PI[playerid][pJob] != JOB_COLLECTOR) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не инкассатор");
		if(InJob[playerid]) SPD(playerid,149,0,"Работа 'Инкассатор'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		else SPD(playerid,149,0,!"Работа 'Инкассатор'",!"{FFFFFF}Вы хотите переодеться чтобы начать работу?",!"Да",!"Нет");
		return 1;
	}
	else if(pickupid == Yakydzapick)
	{
	    if(Getemer[playerid]>global_time)return 0;
	    Getemer[playerid]=global_time+5;
		SPD(playerid,1666,2,!"Меню ресторана",!"Курица в соусе Терияки\t\t\t 600$\nМисо-суп\t\t\t\t\t 500$\nПрозрачная лапша с говядиной\t\t 700$\nУдон в сливочном соусе с говядиной\t\t 800$\nКани спайси \t\t\t\t\t 600$",!"Принять",!"Закрыть");
		return 1;
	}
	else if(pickupid == demorgan)
	{
	    if(PI[playerid][pDemorgan]) return 1;
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerFacingAngle(playerid, 272.4357);
		J_SetPlayerPos(playerid, -2152.7336, 645.0001, 52.3672);
		return 1;
    }
  	else if(pickupid == EnterBankPickup)
 	{
        SetPlayerInteriorEx(playerid, 1);
        SetPlayerVirtualWorldEx(playerid, 1);
        SetPlayerFacingAngle(playerid,270.0);
        J_SetPlayerPos(playerid,-2691.6641, 796.5349, 1500.9669);
        /*if(!Terakt && !IsACop(playerid))
        {
            for(new x; x < 13; x ++)
			{
			    GetPlayerWeaponData(playerid, x, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
			    if(PI[playerid][pGuns][x] != 0)
			    {
	                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}При входе в банк у вас забрали оружие. Забрать сможете как будете уходить!");
					ResetPlayerWeapons(playerid);
					MinusGun{playerid} = true;
			    }
			}
		}*/
        return 1;
 	}
 	else if(pickupid == ExitBankPickup)
 	{
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerFacingAngle(playerid, 357.1815);
        J_SetPlayerPos(playerid, 1480.8480,-1768.7529,18.7929);
        /*if(MinusGun{playerid})
        {
        	for(new x; x < 13; x++)
        	{
            	GivePlayerWeapon(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
            }
        }*/
        return 1;
 	}
	return 1;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(!IsAOwnableCar(GetVehicleID(vehicleid)))
	{
	    SPD(playerid,0,0,!"",!"{CD1717}Ошибка!{FFFFFF}\n\n\nТюнинговать можно только личный транспорт!\n\n\n","{CD1717}Принять{FFFFFF}","");
	    RemoveVehicleComponent(vehicleid,componentid);
        return 0;
	}
	else if(!vTemp[vehicleid][vTeam] && !vTemp[vehicleid][vJob] && !IsAArendCar(vehicleid))	GiveBizMoney(playerid,300);
	else RemoveVehicleComponent(vehicleid, componentid), SCM(playerid, -1, !"Этот транспорт нельзя тюнинговать");
	return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(newinteriorid > 0 && oldinteriorid == 0) SetPlayerWeather(playerid, 2), DestroyPlayerMapDraws(playerid);
	else if(newinteriorid == 0 && oldinteriorid > 0) SetPlayerWeather(playerid, Weather), CreatePlayerMapDraws(playerid);
	return 1;
}
stock ProgressBalloonUpdateYeah(playerid)
{
	new rand = random(3);
	ProgressBalloonTD[playerid][1] += 16, ProgressBalloonTD[playerid][0] += 16;
	GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~g~SU?CESSFULLY", 500, 3);
	J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 2, 0, 0, 0, 0, 0);
	ProgressBalloon[playerid] = rand + 1;
	switch(rand)
	{
		case 0: PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], "PRESSED_[~b~_H_~s~]");
		case 1: PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], "PRESSED_[~b~_L.ALT_~s~]");
		case 2: PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], "PRESSED_[~b~_SPACE_~s~]");
	}
}
stock ProgressBalloonUpdate(playerid, type)
{
	if(ProgressBalloon[playerid] != 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 0.5, BalloonObjectPos[playerid][0],BalloonObjectPos[playerid][1],BalloonObjectPos[playerid][2]))
		{
			if(ProgressBalloon[playerid] == type) ProgressBalloonUpdateYeah(playerid);
			else GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~r~FAILED", 500, 3);
		}
	}
}
stock SearchOwnerWareHouse(playerid)
{
	for(new i; i < TOTAL_WAREHOUSES; i++) if(GetString(WareHouse[i][wNameOwner], PN(playerid))) return 1;
	return 0;
}
stock SearchDoorWareHouse(id)
{
	for(new i; i < sizeof(WareHouseDoor); i++) if(WareHouseDoor[i][personalID] == id) return i;
	return -1;
}
stock SDWareHouse(playerid) return SPD(playerid, 25199, DIALOG_STYLE_TABLIST, !"Меню склада", !"Посмотреть содержание склада\n\
	Изменить код доступа\n\
	Продать склад государству\n\
	Продать склад игроку", !"Выбрать", !"Закрыть");
stock SetSpawnInfoForWar(playerid, bool:yes=false)
{
	new first=-1;
	for(new js; js < sizeof(InfoWar); js++) 
	{
		if(WarStartMap == InfoWar[js][warMap] && InfoWar[js][warType] == IsPlayerWarTeam[playerid] && first == -1)
		{
			first = js;
			break;
		}
	}
	new rand = random(6)+first;
	if(yes) SetSpawnInfoEx(playerid, (!IsPlayerWarTeam[playerid]) ? (268) : (299), InfoWar[rand][warPosX], InfoWar[rand][warPosY], InfoWar[rand][warPosZ], 180.0);
	J_SetPlayerPos(playerid, InfoWar[rand][warPosX], InfoWar[rand][warPosY], InfoWar[rand][warPosZ]);
	SetPlayerVirtualWorldEx(playerid, 5);
	SetPlayerInteriorEx(playerid, 0);
	SetPlayerSkin(playerid, (!IsPlayerWarTeam[playerid]) ? (268) : (299));
	ResetPlayerWeapons(playerid);
	return SetPlayerColor(playerid, (!IsPlayerWarTeam[playerid]) ? (0x66CCFFFF) : (0xFFCC33FF));
}
static const WarDropItem[] = {777, 5, 24, 25, 31};
public: StartWar(kolvo)
{
	switch(kolvo)
	{
		case 1:
		{
			if(WarDropAll >= 6) return 1;
			new first=-1, last=-1;
			for(new i; i < sizeof(InfoWarDrop); i++)
			{
				if(WarStartMap == InfoWarDrop[i][wardropMap] && first == -1)
				{
					first=i;
					break;
				}
			}
			//я гений тупой
			for(new i=sizeof(InfoWarDrop); i >= 0; i--)
			{
				if(WarStartMap == InfoWarDrop[i][wardropMap] && last == -1)
				{
					last=i;
					break;
				}
			}
			foreach_player(i) if(IsPlayerPlayMP[i]) SCM(i,0x00CCCCFF,!">>> {FFFFFF}Оружие обновлено по карте!");
			new rand, rand2, minus;
			for(new i; i < 10+minus; i++)
			{			
				rand2 = randomEx(first,last);
				if(InfoWarDrop[rand2][wardropStatus] != false)
				{
					minus++;
					continue;
				}
				rand = WarDropItem[random(sizeof(WarDropItem))];
				WarDropAll++;
				DropPickup[rand2] = CreatePickup(GetWeaponModel(rand), 23, InfoWarDrop[rand2][wardropPosX],InfoWarDrop[rand2][wardropPosY],InfoWarDrop[rand2][wardropPosZ]);
			}
		}
		case 13: {
			foreach_player(i) if(IsPlayerPlayMP[i]) SCM(i,0x00CCCCFF,!">>> {FFFFFF}Мероприятие будет начато через 10 секунд!");
			SetTimerEx("StartWar", 10000, 0, "i", 14);
		}
		case 14:
		{
			new count2;
			foreach_player(i) if(IsPlayerPlayMP[i]) count2++;
			if(count2 != 4)
			{
				foreach_player(i) if(IsPlayerPlayMP[i]) SCMf(i,0x00CCCCFF,!">>> {FFFFFF}Создание мероприятие ПРЕРВАНО! Нехватка игроков (Сейчас %i/14)", count2);
				return 1;
			}
			WarStartMap = random(4);
			foreach_player(i)
			{
				if(IsPlayerPlayMP[i] && !IsPlayerWarTeam[i])
				{
					SetSpawnInfoForWar(i);
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Ваша задача убить как можно больше противников с золотым клистом!");
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Сражение идёт 10 минут, матч может окончиться заранее при достижении 100 киллов!");
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Для того, чтобы подобрать оружие нажмите ALT!");
					TogglePlayerControllable(i, false);
					GameTextForPlayer(i, !"~r~5", 1000, 3);
				}
				else if(IsPlayerPlayMP[i] && IsPlayerWarTeam[i])
				{
					SetSpawnInfoForWar(i);
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Ваша задача убить как можно больше противников с голубым клистом!");
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Сражение идёт 10 минут, матч может окончиться заранее при достижении 100 киллов!");
					SCM(i, 0x00CCCCFF,!">>> {FFFFFF}Для того, чтобы подобрать оружие нажмите ALT!");
					TogglePlayerControllable(i, false);
					GameTextForPlayer(i, !"~r~5", 1000, 3);
				}
			}
			SetTimerEx("StartWar", 1000, 0, "i", 15);
			StartMP 	= true;
			OpenMP 		= false;
			WarTimer[0] =
			WarTimer[1] =
			WarKill_1 	=
			WarKill_2 	=
			WarDropAll	= 0;
		}
		case 15: GameTextForPlayerWar(!"~r~4", 900, 3),SetTimerEx("StartWar", 1000, 0, "i", 16);
		case 16: GameTextForPlayerWar(!"~r~3", 900, 3),SetTimerEx("StartWar", 1000, 0, "i", 17);
		case 17: GameTextForPlayerWar(!"~r~2", 900, 3),SetTimerEx("StartWar", 1000, 0, "i", 18);
		case 18: GameTextForPlayerWar(!"~r~1", 900, 3),SetTimerEx("StartWar", 1000, 0, "i", 19);
		case 19: 
		{
			foreach_player(i) if(IsPlayerPlayMP[i] != false) TogglePlayerControllable(i, true);
			GameTextForPlayerWar(!"START", 500, 3),SetTimerEx("StartWar", 5000, 0, "i", 1);
		}
	}
	return 1;
}
stock GameTextForPlayerWar(const str[], time, style)
{
	foreach_player(i) if(IsPlayerPlayMP[i]) GameTextForPlayer(i, str, time, style);
}
public: WalkAnim(playerid)
{
	if(animan{playerid} || !PI[playerid][pStyleWalk]) return 1;
    new keys, updown, leftright, style = PI[playerid][pStyleWalk]-1;
    GetPlayerKeys(playerid,keys,updown,leftright);
	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
	{
		ApplyAnimation(playerid,StyleWalkList[style][namelib],StyleWalkList[style][namelib2],4.1,1,1,1,1,1);
		SetTimerEx("WalkAnim",200,0,"d",playerid);
	}
	else ApplyAnimation(playerid,StyleWalkList[style][namelib],StyleWalkList[style][namelib2],4.0,0,0,0,0,1);
	return 1;
}
stock KeyStateOnFoot_PressALT_(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 1.5, 1467.7723, -1673.4635, 13.3729))
	{
		if(Iter_Contains(WorkNPC, playerid) == 1) SPD(playerid, 12391, DIALOG_STYLE_MSGBOX, !"Прораб", !"{FFFFFF}- Вы действительно хотите завершить работу?", !"Да", !"Нет");
		else SPD(playerid, 12391, DIALOG_STYLE_MSGBOX, !"Прораб", !"{FFFFFF}- Здравствуй попутчик, у меня для тебя есть небольшое задание.\n- На площади рядом с Центральным банком жители стали часто мусорить. ( каждые 60 секунд )\n- Всё что тебе нужно будет делать, это бегать по пикапам мусора и убирать его.\n{AAAAAA}- Примечание: (Если поблизости никого нету, мусор не будет появляться).\n{FFFFFF}- Часики тикают, бегом за работу!", !"Начать", !"Отмена");
	}
	for(new i; i < sizeof(CellarPickupInfo); i++) if(IsPlayerInRangeOfPoint(playerid, 1.2, CellarPickupInfo[i][cePosition][0], CellarPickupInfo[i][cePosition][1], CellarPickupInfo[i][cePosition][2])) SPD(playerid, 7757, DIALOG_STYLE_LIST, !"{FFFFFF}Настройки | {ae433d}Подвал", !"{FFFFFF}Информация\nОбновить подвал", !"»", !"x");
	for(new i; i < sizeof(BillboardInfo); i++){
		if(IsPlayerInRangeOfPoint(playerid, 1.5, BillboardInfo[i][bPosBill][0], BillboardInfo[i][bPosBill][1], BillboardInfo[i][bPosBill][2])){
			if(BillboardInfo[i][bHours] != 0) {
				str_mes[0] = EOS, requestPN(BillboardInfo[i][bOwner], str_mes);
				str_1[0] = EOS, f(str_1, sizeof(str_1), !"Баннер №%d", i);
				SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, str_1, "Закрыть", "", "{FFFFFF}\n\n\
				Этот баннер уже арендован на {F5B143}%d часов!{FFFFFF}\n\
				{FFFFFF}Арендатор: {F5B143}%s.\n\n",\
				 BillboardInfo[i][bHours], str_mes);
			}
			else {
				if(player_BonusMinute[playerid] < 60) return SCM(playerid, COLOR_RED, !"Чтобы арендовать баннер нужно отыграть 60 минут!");
				for(new j; j < sizeof(BillboardInfo); j++) { if(BillboardInfo[j][bOwner] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"Нельзя арендовать больше одного баннера!");}
				SPD(playerid, 10801, DIALOG_STYLE_MSGBOX, !"Аренда биллборда", "Вы хотите арендовать биллборд?", "Да", "Закрыть"), SetPVarInt(playerid, !"IDBILL", i);
			}
		}
	}
	for(new i; i < sizeof(StartInfo); i++)
 	{
  		if(PickupStart == 1)
    	{
     		if(IsPlayerInRangeOfPoint(playerid, 2.0, StartInfo[i][StartX], StartInfo[i][StartY], StartInfo[i][StartZ]))
       		{
       		    if(IsPlayerInAnyVehicle(playerid)) return 1;
				if(GetPVarInt(playerid, !"spawn") > global_time) return 1;
				SetPVarInt(playerid, !"spawn", global_time + 10);
				GiveLicense(playerid, 30);
				if(!IsValidPassport(playerid))
				{
					PassInfo[playerid][psDateBirth][0] = 1998;
					PassInfo[playerid][psDateBirth][1] = 1;
					PassInfo[playerid][psDateBirth][2] = 1;
					PassInfo[playerid][psDate][0] = 1;
					PassInfo[playerid][psDate][1] = 1;
					PassInfo[playerid][psDate][2] = 1998;
					PassInfo[playerid][psNumber] = 100000 + random(900000);
					PassInfo[playerid][psSeria] = 1000 + random(9000);
					OnRegPass(playerid);
				}
				SCM(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Паспорт и лицензии былы выданы!");
				SPD(playerid, 1055, DIALOG_STYLE_MSGBOX, !"Free-мотоцикл", !"{FFFFFF}Вы хотите взять временный мотоцикл?\n{808080}Если вы отойдёте от него, то он автоматически пропадёт!", !"Взять", !"Отмена");
			}
		}
	}
	new ij = SearchFirstReconstructionPickup(playerid);
	if(ij != -1)
	{
		if(Reconstruction[ij][ReconstructionMoney] >= 1500000000) return SCM(playerid, -1, !"Реконструкция уже закончена!");
		SPDf(playerid, 4323, DIALOG_STYLE_INPUT, !"Реконструкция здания", "Выбрать", "Отмена", "{FFFFFF}Реконструкция здания - комплекс строительных работ в целях\n\
		улучшения внешнего вида здания (сооружения).\n\nДля начала работ по улучшению внешнего вида здания нужно ещё\n\
		собрать {73B461}$%i\n\n{FFFFFF}В качестве благодарности, каждому игроку будет начислен предмет\n\
		{FFFF00}Талон: +1 AZ Coins (1 шт){FFFFFF} за {73B461}каждые пожертвованные $1000000\n\n\
		{FFFFFF}После того как реконструкция здания будет закончена, на всём\nсервере будет активирован бонус в виде {045FB4}x4 payday сроком на 5 часов!!\n\n\
		{eb721c}Введите ниже сумму, которую хотите пожертвовать на реконструкцию:", 1500000000-Reconstruction[ij][ReconstructionMoney]);
	}
	for(new i; i < sizeof(PostFrac); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.2, PostFrac[i][XPost], PostFrac[i][YPost], PostFrac[i][ZPost]))
		{
			if(TeamDuty{playerid} == true && !IsAtGang(playerid) && !IsAtMafia(playerid))
			{
				if(postowner[i] != -1 && postowner[i] != playerid) return SCM(playerid, COLOR_VALIK, !"Пост уже кто-то занял!");
				else if(postowner[i] != playerid)
				{
					UpdateDynamic3DTextLabelTextf(postlabel[i], -1, "{FFFFFF}Пост: %s\n\n[{FAAC58}ЗАНЯТ{FFFFFF}]\n\nЗаступил: %s", PostFrac[i][postname], PN(playerid));
					postowner[i] = playerid;
					SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы вступили на пост %s", PostFrac[i][postname]);
					SendTeamMessagef(GetTeamID(playerid),COLOR_VALIK, "%s[%d] вступил на пост %s", PN(playerid), playerid, PostFrac[i][postname]);
					
				}
				else
				{
					UpdateDynamic3DTextLabelTextf(postlabel[i], -1, "{FFFFFF}Пост: %s\n\n[{FAAC58}СВОБОДЕН{FFFFFF}]\n\nИспользуйте: ALT\n( Заступить на пост )", PostFrac[i][postname]);
					postowner[i] = -1;
					SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы ушли с поста.");
					SendTeamMessagef(GetTeamID(playerid),COLOR_VALIK,"%s[%d] ушел с поста %s", PN(playerid), playerid, PostFrac[i][postname]);
				}
				break;
			}
		}
	}
	for(new i; i < sizeof(AirDropPosition); i++)
	{
		if(i == AirDropOpen && IsPlayerInRangeOfPoint(playerid, 3.1, AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2]))
		{
			str_1 = "{ffd700}Предмет\t \t{73B461}Загруженность\n";
			for(new j; j < 6; j++)
			{
				str_2[0] = EOS;
				switch(AirDropItem[j])
				{
					case -1: strcat(str_1, !"{a11321}Свободная ячейка\n");
					case 0: f(str_2, sizeof(str_2),"{FFFFFF}Материалы:\t \t{73B461}%i\n",AirDropItemAmount[j]);
					case 1: f(str_2, sizeof(str_2),"{FFFFFF}Наркотики:\t \t{73B461}%i\n",AirDropItemAmount[j]);
					case 2: f(str_2, sizeof(str_2),"{FFFFFF}AZ Coins:\t \t{73B461}%i\n",AirDropItemAmount[j]);
					case 3: f(str_2, sizeof(str_2),"{FFFFFF}BitCoin:\t \t{73B461}%i\n",AirDropItemAmount[j]);
					case 4: f(str_2, sizeof(str_2),"{cc182a}%s\n",ItemsInfo[AirDropItemAmount[j]][ItemName]);
				}
				strcat(str_1, str_2);
			}
			SPD(playerid, 998, DIALOG_STYLE_TABLIST_HEADERS, !"Контейнер контрабанды", str_1, !"Выбрать", !"Отмена");
			break;
		}
	}
	foreach(new i: TREASURE)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z]))
		{
			if(HitchInfoStatus[i] == 1 || HitchInfoStatus[i] == 2)
			{
				if(!GetInvCount(playerid, 1175)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нету лицензии на раскопки!");
				if(GetPlayerWeapon(playerid) != 6) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас нету лопаты в руках");
				PItreasure[playerid][tID] = i;
			}
			if(HitchInfoStatus[i] == 1) SPD(playerid,3735,DIALOG_STYLE_MSGBOX,"{FFFFFF}Выкопать | {DC4747}Клад","{FFFFFF}\n\nВы действительно желаете выкопать данный клад?\n\n","»","X");
			else if(HitchInfoStatus[i] == 2)
			{
				new j = random(sizeof(kladqusans));
				PItreasure[playerid][tQuestionID] = j;
				PItreasure[playerid][tID] = -1;
				str_1[0] = EOS,f(str_1, sizeof(str_1),"{FFFFFF}\n\nДля того, чтобы взломать замок,\nвам необходима ответить на вопрос-загадку!\n\nВопрос:\n%s\n\nВведите ответ в пустое контекстное поле:\n\n", kladqusans[j][kladquestion]); 
				SPD(playerid,3736,DIALOG_STYLE_INPUT,!"{FFFFFF}Взлом | {DC4747}Клад",str_1,!"»",!"X");
				break;
			}
		}
	}
	for(new i ; i < sizeof(ContainerInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]))
		{
			ContainerDialog(playerid, i);
			break;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1]-2.2787, ContainerInfo[i][ContPos][2]+1.0584))
		{
			if(!ContainerTakeOpen[playerid]) ContainerOpenTake(playerid, i);
			break;
		}
	}
	for(new i; i < sizeof(GangGun); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, GangGun[i][GangX], GangGun[i][GangY], GangGun[i][GangZ]))
		{
			if(!IsAtGang(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка]{ffffff} Вы не в банде что бы получать набор для капта!");
			SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы получили набор для капта");
			GivePlayerWeapon(playerid, 24, 100);
			GivePlayerWeapon(playerid, 25, 100);
			GivePlayerWeapon(playerid, 31, 100);
			GivePlayerWeapon(playerid, 5, 1);
		}
	}
	for(new i; i < sizeof(CraftPosition); i++) if(IsPlayerInRangeOfPoint(playerid, 1.2, CraftPosition[i][craftX], CraftPosition[i][craftY], CraftPosition[i][craftZ])) ShowCraft(playerid);
	return 1;
}
stock KeyStateOnFoot_PressALT(playerid)
{
	TetCar(playerid);

	KeyStateOnFoot_PressALT_(playerid);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1110.7767, -1423.8966, 15.7969)) SPD(playerid,3725,DIALOG_STYLE_INPUT,!"", !"\
		{FFFFFF}Привет, меня зовут {FF6347}Абрахам{FFFFFF}. Если Вам срочно\n\
		понадобились монеты, вы пришли по адресу.\n\
		Я продаю {FF6347}АЗ{FFFFFF} Rubles. Цена {FF6347}1{FFFFFF}-го рубля: {FF6347}750 000AZ Coins{FFFFFF}\n\n\
		{A52A2A}Введите в строку, сколько монет хотите приобрести.",!"Обмен",!"Отмена");

	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 2266.3584, -807.6035, 1407.6224)) SPD(playerid, 25453, DIALOG_STYLE_MSGBOX, !"{FFD700}Колесо фортуны", !"{ffffff}Вы действительно хотите прокрутить колесо фортуны?\n\n{FFD700}-{ffffff} Призы, которые Вы можете получить с колеса фортуны:\n\n{FFD700}1.{ffffff} Admiral AMG (модификация)\n{FFD700}2.{ffffff} Rancher Black(модификация)\n{FFD700}3.{ffffff} Талон на обнуление глобальных достижений\n{FFD700}4.{ffffff} Талон на обнуление ежедневных достижений\n{FFD700}5.{ffffff} Талон на безкомиссионную продажу в казино\n{FFD700}6.{ffffff} Опыт\n{FFD700}7.{ffffff} Передаваемые AZ-Coins\n{FFD700}8.{ffffff} Бронзовая рулетка\n{FFD700}9.{ffffff} Серебрянная рулетка\n{FFD700}10.{ffffff} Золотая рулетка\n{FFD700}11.{ffffff} Семейный талон\n{FFD700}12.{ffffff} Фишки казино\n{FFD700}13.{ffffff} Подарок\n\n\n{cccccc}Для прокрутки колеса фортуны Вам требуется пробыть в казино 20 минут.\nКолесо фортуны можно прокручивать 1 раз в сутки.\nПодсчёт времени нахождения в казино начинается ровно через сутки с последней прокрутки.", !"Далее", !"Закрыть");
	else if(HouseEntered[playerid] != -1) ShowSheltMiningForPlayer(playerid, HouseEntered[playerid]);
	if(IsPlayerInRangeOfPoint(playerid, 2.5, 2534.8040, -1472.6917, 24.0019)) ShowBuyMenu(playerid, 12);
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 2232.2385, -829.7819, 1407.1273)) SPD(playerid, 25053, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Правила игры в подкидного дурака {ae433d}| Дурак", !"\n{ffffff}В игре в «подкидного дурака» могут принимать участие от двух до шести человек.\nИгровая колода состоит {ffff00}из 36 карт{ffffff}, где самая старшая по достоинству карта — туз, а самая младшая — шестерка.\n\n\t{33ccff}Начало игры\n{ffffff}Игра в {ffff00}«Дурака»{ffffff} начинается с раздачи карт. Каждому игроку выдается по шесть карт.\nПосле того, как карты розданы объявляется козырь, то есть масть, карты которой способны побить любую карту другой масти.\nПервый ход принадлежит игроку, у которого на руках имеется козырь наименьшего достоинства, если ни у кого не оказалось козыря, первым будет ходить игрок севший первым за стол.\n\n\t{33ccff}Ход игры\n{ffffff}Игрок, который делает первый ход, называется {ffff00}«ведущим»{ffffff}.\nВедущий имеет право начать ход с любой карты из имеющихся на руках. В дальнейшем подкидываются карты, значение которых соответствует выложенным на стол. Это могут быть карты любой масти.\nВ начале игры в {ffff00}«Дурака»{ffffff} рекомендуется избавляться от самых мелких и ненужных карт. Игрок, на которого ходят, должен «побить» предложенные карты. Этот игрок называется «отбивающийся».\nКарты бьются картами более старшего достоинства той же масти, либо козырем. Козырь может побить любую карту, кроме козыря более высокого достоинства.\nВсе игроки, кроме отбивающегося, могут подкидывать карты того же достоинства, что лежащие на столе. Эти карты отбивающийся тоже должен «побить».\nЕсли игроки больше не хотят подкидывать карты или просто нечего подкинуть, то они говорят {ffff00}«Бито» (клавиша BIT){ffffff}.\nОтбивающийся игрок, который не может или не хочет «побить» предложенные ему карты, должен их {ffff00}забрать (клавиша I TAKE){ffffff}. Всего подкинутых карт должно быть не более шести.\nПосле того, как карты взяты или отбиты, игрокам, у которых на руках менее шести карт выдаются карты из колоды(если она не пуста).\nCначала выдаются ведущему, затем всем остальным игрокам по часовой стрелке. Последнему выдаются карты тому, кто отбивался.\nЕсли игрок «побил» все предложенные карты или побил шесть карт, то эти карты идут в отбой (выходят из игры).\nДалее ход передается к следующему игроку по часовой стрелки (исключение: игрок, который взял карты).\nЕсли игрок отбился, и у него остались карты, тогда ход передаётся к нему, а если он затянул, тогда ход передаётся следующему после отбивающего.\n\n\t{33ccff}Конец игры\n{ffffff}Когда карты в колоде заканчиваются, тот игрок, у которого первого не осталось карт, выходит из игры. Первому вышедшему присуждается победа.\nЗаканчивается игра, когда все игроки, кроме одного, остались без карт. Тот же единственный, кто остался с картами на руках и есть дурак. Ему присуждается поражение.\nДопускается ничья, в случае если у двух последних не вышедших игроков не осталось карт на руках. (например: когда ведущий походил последними своими картами, а отбивающий отбился последними картами)", !"»", !"x");
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1755.1312, -315.8170, 1655.5055)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Школа танцев:\n\nБлагодаря обучению правильно двигаться в танце\nу вас появится возможность изменения походки\nна клавишу ALT при наборе необходимого очков навыка.\n\nПосмотреть статистику навыка: {FF2C2C}/settings - Стиль походки\n\n{ffff00}При частых тренировках можно получить уникальные навыки танцев.\nЭто новый анимации танцев, которые можно продать или использовать.", !"Понял", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1756.8585, -315.0686, 1654.5055)) SPD(playerid, 3767, DIALOG_STYLE_MSGBOX, !"Тренер по танцам", !"{ffffff}Вы хотите начать тренировку?\n\n{cccccc}Стоимость тренировки: {ffffff}$500000\n{cccccc}Длительность тренировки: {ffffff}3 минуты", !"Начать", !"Нет");
	//else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1148.6715, -1308.8401, 1019.4266)) SPD(playerid, 15310, DIALOG_STYLE_MSGBOX, !"Быстрое лечение", !"{ffffff}Вы действительно хотите пройти курс\nбыстрой реабилитации за {ffff00}$500000{ffffff}?", !"Да", !"Закрыть");
	if(BizEntered[playerid] != -1)
	{
		if(GetPlayerBiz(playerid, BizEntered[playerid]) == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.5, 1525.2045, 1436.7594, 10.9674)) J_SetPlayerPos(playerid, 1525.1495, 1439.1144, 10.9674);
			else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1525.1495, 1439.1144, 10.9674)) J_SetPlayerPos(playerid, 1525.2045, 1436.7594, 10.9674);
		}
	}
	else if(GetPVarType(playerid, !"P_SEAT_STATUS") != PLAYER_VARTYPE_NONE)
	{
		new help_id2 = help_id[playerid];
		if(!(help_id2 == -1) && IsPlayerInRangeOfPoint(playerid, 1.25, SEAT_SYSTEM_POS[help_id2][Sx], SEAT_SYSTEM_POS[help_id2][Sy], SEAT_SYSTEM_POS[help_id2][Sz]))
		{
			J_SetPlayerPos(playerid, SEAT_SYSTEM_POS[help_id2][Sx], SEAT_SYSTEM_POS[help_id2][Sy], SEAT_SYSTEM_POS[help_id2][Sz]);
			SetPlayerFacingAngle(playerid, SEAT_SYSTEM_POS[help_id2][Aa]);
			SetCameraBehindPlayer(playerid);
			ApplyAnimation(playerid, "PED", "SEAT_down", 4.0, 0, 0, 0, 0, 0, 1);
			SetPVarInt(playerid, !"P_SEAT_STATUS", 1);
			animan{playerid} = true, TextDrawShowForPlayer(playerid, StopAnimation);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1794.3065, 413.8255, 20.2294) || IsPlayerInRangeOfPoint(playerid, 1.0, -2017.0059, 445.0810, 35.1723))
	{
		new type = SearchFamilyHousesPlace(playerid);
		switch(type)
		{
			case -2: return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не состоите в семье!");
			case -1: return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вашей семьи нету семейной квартиры!");
			case 0,1: //default
			{
				new count2 = CountOwnableFamilyCars(playerid, false),
					count = CountOwnableFamilyCars(playerid, true);
				player_Global_Int[playerid][0] = 0;
				SPDf(playerid, 25192, DIALOG_STYLE_TABLIST, !"Выберите тип автопарка", "Выбрать", "Закрыть", "\
				Семейный автопарк\tсвободно %i из %i\n\
				Инкассаторские грузовики\tсвободно %i из %i",FamilyInfo[pFamilyID(playerid)][famUpgrade][0]+1+count-count2, FamilyInfo[pFamilyID(playerid)][famUpgrade][0]+1+count, FamilyInfo[pFamilyID(playerid)][famUpgrade][1]+1,FamilyInfo[pFamilyID(playerid)][famUpgrade][1]+1);
			}
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2571.3157, 978.1287, 10.9932))
	{
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация о салоне", (str_f("\
			{95D1CC}В этом тюнинг салоне вы можете приобрести товары, которые значительно увеличат технические характеристики\n\
			вашего автомобиля, а также товары визуальной модификации: тонировка, винилы, уникальные диски и многое другое,\n\
			которые выделят ваш автомобиль из толпы!\n\n{B3541E}Посетить салон можно только за рулём кастомного автомобиля, доступного при игре с лаунчера %s %s\n\n\
			{F0BB62}Один раз в час, в 25 минут на 5 минут тюнинг салон закрывается для пополнения компонентов тюнинга!\n\
			После пополнения в тюнинг салоне появится 2 случайные детали технического тюнинга,\n\
			2 случайные детали визуального тюнинга и 2 случайных винила!", ServerCFG[server_name], ServerCFG[server_logo])), !"Выход", "");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2061.5591, 463.5475, 35.1719)) J_SetPlayerPos(playerid,-2055.9150, 455.0196, 139.6406);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2055.9150, 455.0196, 139.6406)) J_SetPlayerPos(playerid,-2061.5591, 463.5475, 35.1719);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1809.5389, 409.6942, 20.2294)) J_SetPlayerPos(playerid,1807.5525, 426.1512, 96.4584);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1807.5525, 426.1512, 96.4584)) J_SetPlayerPos(playerid,1809.5389, 409.6942, 20.2294);
	else if(IsPlayerInRangeOfPoint(playerid, 1, 668.0339, -1246.1948, 1024.4080 ))
	{
		new World = GetPlayerVirtualWorld(playerid);
		new team;
		switch(World)
		{
			case 1: str_2 = "LS", team = TEAM_MEDICLS;
			case 2: str_2 = "LV", team = TEAM_MEDICLV;
			case 3: str_2 = "SF", team = TEAM_MEDICSF;
		}
		if(GetTeamID(playerid) != team) return SCMf(playerid, COLOR_LIGHTRED, !"[Ошибка] {F0F0F0}Вы не сотрудник Больницы %s!", str_2);
		if(!TeamDuty{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {F0F0F0}Взять медикаменты можно только во время работы!");
		if(OrgInfo[team][oItemCount][0] < 10) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {F0F0F0}На складе не хватает медикаментов!");
		if(GetPVarInt(playerid, !"MedicCase")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {F0F0F0}У вас уже есть медикаменты!");
		SetPVarInt(playerid, !"MedicCase", 10), OrgInfo[team][oItemCount][0] -= 10, UpdateLabelMedic(World-1);
		SCM(playerid, COLOR_VALIK, !"[Подсказка] {F0F0F0}Вы успешно взяли 10 медикаментов для лечения больных!");
		SetPlayerAttachedObject(playerid, 7, 11738, 6,  0.261000, 0.033999, 0.048000,  0.0, -100.800064, 0.0,  1.0, 1.0, 1.0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1137.7974,-1489.6229,15.7969))
	{
		if(!ConceptCount) return SCM(playerid,-1,"В наличии нет боксов");
		if(PI[playerid][pVIP][1] < global_time)
		{
			if(GetPVarInt(playerid, !"box") > global_time) return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Подождите несколько секунд!");
			SetPVarInt(playerid, !"box", global_time + 10);
		}
		else
		{
			if(LarecOpen[playerid] != false) return SCM(playerid,-1,!"Купите Add-VIP, для того чтобы забирать больше 1 кейса в PayDay");
			LarecOpen[playerid] = true;
		}
		ConceptCount--;
		InvAdd(playerid, 1644, 1);
		UpdateDynamic3DTextLabelTextf(ConceptLuxury, -1, "{FFFF00}[Ларцы Concept Car Luxury]{FFFFFF}\n\nВ наличии: %iшт.\nСледующий завоз в {FFFF00}PayDay\nЦена: 150 Euro\n\n{FFFFFF}Чтобы купить, нажмите ALT", ConceptCount);
	}
	if(GetPlayerVirtualWorld(playerid) != 0 && GetPlayerInterior(playerid) == 104)
	{
		for(new i; i < TOTAL_WAREHOUSES; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, WareHouse[i][wEnter_X], WareHouse[i][wEnter_Y], WareHouse[i][wEnter_Z]))
			{
				if(GetString(WareHouse[i][wNameOwner], "The State"))
				{
					player_Global_Int[playerid][10] = i;
					str_1[0] = EOS, f(str_1, sizeof(str_1),"{ffffff}Складское помещение: {338FAF}№%i\n{ffffff}Склад: {338FAF}№%i\n{ffffff}Стоимость: {338FAF}50000000$\n\n{ffffff}Вы действительно хотите купить этот склад?",WareHouse[i][wID],WareHouse[i][wID]);
					SPD(playerid, 25198, DIALOG_STYLE_MSGBOX, !"Покупка склада", str_1, !"Купить", !"Закрыть");
					break;
				}
				else if(GetString(WareHouse[i][wNameOwner], PN(playerid)))
				{
					if(WHDoorUsed{i} != 0) continue;
					new id = SearchDoorWareHouse(i+1);
					if(id == -1) continue;
					Iter_Add(WH_DoorTimer, id);
					MoveDynamicObject(WareHouseObject[id],WareHouseDoor[id][wPosition][0],WareHouseDoor[id][wPosition][1],14.632491,3.0);
					WHDoorUsed{i} = 8;
					break;
				}
				else
				{
					//код доступа
					player_Global_Int[playerid][10] = i;
					SPD(playerid, 25201, DIALOG_STYLE_INPUT, !"Доступ запрещён!", !"{ffffff}Чтобы открыть этот склад, введите специальный {338FAF}код доступа{ffffff}:", !"Открыть", !"Закрыть");
					break;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, WareHouse[i][wMenu_X], WareHouse[i][wMenu_Y], WareHouse[i][wMenu_Z]))
			{
				if(!SearchOwnerWareHouse(playerid)) 
				idaofcar[playerid] = i;
				SDWareHouse(playerid);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -2106.0486, -2418.8145, 30.6250)) TrailerTake(playerid);
	new id = SearchTrash(playerid);
	if(id != -1)
	{
		ShowInventory(playerid);
		PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		TrashID[playerid] = id;
		InvTypePlayer{playerid} = 1;
		ShowInvMenu(playerid, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1662.1874, -246.4930, 14.1484 ))
	{
		J_SetPlayerPos(playerid, HouseInfo[HouseEntered[playerid]][hExit_X], HouseInfo[HouseEntered[playerid]][hExit_Y], HouseInfo[HouseEntered[playerid]][hExit_Z]);
		SetPlayerInteriorEx(playerid,HouseInfo[HouseEntered[playerid]][hInt]);
		SetPlayerVirtualWorldEx(playerid,(HouseEntered[playerid]+50));
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2354.2043, 2829.5234, 1500.9688)) TrailerBuy(playerid);
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1658.7089, 1210.1034, 7.2500))
	{
		if(PAI[playerid][secondupdate] > 0 && Clother[playerid] == 144) SPD(playerid, 25447, DIALOG_STYLE_MSGBOX, !"{73B461}Тест-драйв", !"{ffffff}Вы хотите вернуться обратно?", !"Далее", !"Закрыть");
		else SPD(playerid, 25447, DIALOG_STYLE_LIST, !"{73B461}Тест-драйв", !"{73B461}1.{ffffff} Взять на примерку скин\n{73B461}2.{ffffff} Взять на примерку аксессуар (обычный)\n{73B461}3.{ffffff} Взять на примерку аксессуар (уникальный)\n{73B461}4.{ffffff} Взять на тест-драйв автомобиль", !"Далее", !"Закрыть");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -505.0940, 2597.6277, 53.5557)) SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, "Автосалон Luxe-класса", "Закрыть", "", "{ffffff}В данном автосалоне вы можете купить авто Люкс-класса, такие как:{cccccc}\n \nBMW M1, Lamborghini Countach, Koenigsegg Gemera,\nKIA K7, Lexus LX600, Nissan Qashqai,\nVolkswagen Scirocco, Toyota GR, \n\nMercedes-AMG A-45, Land Rover Defender,\nFord Mustang Mach, Audi R8, Range Rover Velar,\nMercedes-Benz EQC 400, Audi e-tron, \n\nJaguar I-PACE, Renault Twizy,\nPolestar 2  \n\n{cccccc}Авто доставляется из-за рубежа каждые 11 часов.\n\n\n{ffffff}На данный момент мы ожидаем поставку автомобиля {FA5858}%s\n{ffffff}До прибытия осталось: {FA5858}%s\n{ffffff}Цена автомобиля: {FA5858}$30000000\n\n", InfoConfigVehicle[SearchVehicleName(CarSletInfo[0])][Model_Name], Convert(CarSletInfo[1] - global_time));
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -2672.3774, -58.0518, 4.3399)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ffff00}Автосалон Премиум-класса", !"{ffffff}В данном автосалоне вы можете купить авто Премиум-класса, такие как:{cccccc}\n \nBullet, Infernus, Sultan,\nTurismo, Cheetah, Jester,\nBanshee, Super GT, \n\nNRG-500, Comet,\nHotring, Hotring, Hotring,\nBF-400, PCJ-600, \n\nFCR-900, Freeway,\nSanchez, Quad, Wayfarer,\nInfiniti FX 50, Lexus RX 450H, \n\nBMW M5 E60, BMW M5 F90,\nPorsche Panamera Turbo, Lincoln Continental  \n\n{cccccc}Авто доставляется из-за рубежа каждые 6 часов.\n\n\n{ffffff}На данный момент мы ожидаем поставку автомобиля {FA5858}-\n{ffffff}До прибытия осталось: {FA5858}-\n{ffffff}Цена автомобиля: {FA5858}$0\n\n", !"Закрыть", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -501.5304, -560.6205, 25.5634)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ffff00}Автосалон Эконом-класса", !"{ffffff}В данном автосалоне вы можете купить авто Эконом-класса, такие как:{cccccc}\n \nCadrona, Manana, Clover,\nIntruder, Previon, Majestic,\nFortune, Pereniel, \n\nTampa, Primo,\nWalton, Sadler, Vincent,\nBobcat, Bravura, \n\nRegina, Premier,\nGreenwood, Admiral, Elegant,\nHermes, Buccaneer, \n\nMerit, Broadway,\nEsperanto, Voodoo, Camper,\nStafford, Savanna, \n\nSentinel, Windsor,\nRancher, Pony, Sunrise,\nMoonbeam, Tornado, \n\nGlendale, Willard,\nNebula, Blista, Berkley's,\nVolkswagen Beetle, Fiat 500, \n\nNissan LEAF, Subaru Legacy 1989,\nHyundai Sonata, Daewoo Matiz, BMX,\nBike, Mountain, \n\nRenault Laguna, Toyota Chaser,\nToyota AE86, Mazda 6, DFT-30 \n\n\n{cccccc}Авто доставляется из-за рубежа каждые 2 часа.\n\n\n{ffffff}На данный момент мы ожидаем поставку автомобиля {FA5858}-\n{ffffff}До прибытия осталось: {FA5858}-\n{ffffff}Цена автомобиля: {FA5858}$0\n\n", !"Закрыть", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 954.0949, 2180.9241, 10.8489)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ffff00}Автосалон Среднего класса", !"{ffffff}В данном автосалоне вы можете купить авто Среднего класса, такие как:{cccccc}\n \nElegy, Phoenix, Buffalo,\nHuntley, Alpha, Yosemite,\nLandstalker, Burrito, \n\nPicador, Hermes,\nRemington, Washington, Virgo,\nSlamvan, Flash, \n\nSabre, Stallion,\nTahoma, Uranus, Feltzer,\nBlade, ZR-350, \n\nEuros, Sandking,\nHotknife, Solair, Hustler,\nBMW 530i E39, BMW 750i E38, \n\nMercedes-Benz E 55 AMG, Mercedes-Benz E500,\nSubaru Forester XT, Kia Sportage, Volkswagen Golf R,\nToyota Camry XV40, Toyota Camry XV70, \n\nVolkswagen Passat, BMW M6 1990,\nHaval H6 2.0 GDIT, Volvo XC90 2012, Cadillac Escalade 2020 \n\n\n{cccccc}Авто доставляется из-за рубежа каждые 4 часа.\n\n\n{ffffff}На данный момент мы ожидаем поставку автомобиля {FA5858}-\n{ffffff}До прибытия осталось: {FA5858}-\n{ffffff}Цена автомобиля: {FA5858}$0\n\n", !"Закрыть", !"");
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 277.2100, 2529.1033, 16.8125)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX,! "{ffff00}Автосалон Воздушного Транспорта", !"{ffffff}В данном автосалоне вы можете купить авиа-транспорт, такие как:{cccccc}\n \nSparrow, Stunt, Dodo \n\n\n{cccccc}Авиа-транспорт доставляется из-за рубежа каждые 18 часов.\n\n\n{ffffff}На данный момент мы ожидаем поставку самолёта {FA5858}-\n{ffffff}До прибытия осталось: {FA5858}-\n{ffffff}Цена самолёта: {FA5858}$0\n\n", !"Закрыть", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 215.3744, -1884.6544, 1.4205)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ffff00}Автосалон Водного Транспорта", !"{ffffff}В данном автосалоне вы можете купить лодки, такие как:{cccccc}\n \nSqualo, Speeder, Reefer,\nTropic, Marquis, Jetmax \n\n\n{cccccc}Водный транспорт доставляется из-за рубежа каждые 20 часов.\n\n\n{ffffff}На данный момент мы ожидаем поставку лодки {FA5858}-\n{ffffff}До прибытия осталось: {FA5858}-\n{ffffff}Цена лодки: {FA5858}$0\n\n", !"Закрыть", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1384.2760, -21.8199, 1000.9229)) SPDf(playerid, 15270, DIALOG_STYLE_MSGBOX, "Покупка видеокарты", "Купить", "Закрыть", "{ffffff}Вы хотите купить видеокарту для майнинга криптовалюты?\nЕё стоимость: {ffff00}$350 000\n\n{cccccc}Осталось видеокарт в наличии: %i шт.\n(завоз новых видеокарт каждый час)",BizInfo[BizEntered[playerid]][bProducts]); //ls
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1529.6951, 1576.1597, 10.9252))
	{
		new biz = BizEntered[playerid];
		if(BizInfo[biz][bState] != 30) 
		if(!GetString(BizInfo[biz][bOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не владелец этого секонд-хенда.");
		SPD(playerid, 15339, DIALOG_STYLE_LIST, "Управление секонд-хендом", "{ffffff}Статистика секонд-хенда за сегодня\nИзменить цену продажи одежды", "Выбрать", "Закрыть");
	}
	else if(!GetPlayerVirtualWorld(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1118.1356,-1428.7646,15.7969)) SetPVarInt(playerid, !"SelectAuctionType", 1), SPD(playerid, 19710, DIALOG_STYLE_LIST, !"{FF6347}Аукцион", !"{FF6347}[1]{FFFFFF} Сделать ставку\n{FF6347}[2]{FFFFFF} Выставить на аукцион", "Принять", "x");
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1139.9482,-1428.1993,15.7969)) SetPVarInt(playerid, !"SelectAuctionType", 0), SPD(playerid, 19710, DIALOG_STYLE_LIST, !"{FF6347}Аукцион", !"{FF6347}[1]{FFFFFF} Сделать ставку\n{FF6347}[2]{FFFFFF} Выставить на аукцион", "Принять", "x");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) showboomtdmenu(playerid);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1090.1139, 1525.7634, 1716.0868)) return ShowBuyMenu(playerid, 2);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1772.0677, 428.9174, 20.1436)) return ShowBuyMenu(playerid, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 3, 1771.1826, 423.7910, 20.1436)) return ShowBuyMenu(playerid, 10);
	else if(IsPlayerInRangeOfPoint(playerid, 3.5, 1773.4927,-1900.1550,13.5508) || IsPlayerInRangeOfPoint(playerid, 1.5, 1161.8972,-1751.7185,13.5838)) 
	{
		SendBotMessage(playerid, !"Здорова, что ты хочешь от меня?");
		SPD(playerid, 1053, DIALOG_STYLE_LIST, !"", "{FFFFFF}Бонусы для игроков в организации\n{FFFFFF}Авто-инвайт", !"Далее", !"Выход");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1507.9591, 1310.1906, 10.9788))
	{
		if(PI[playerid][pLevel] < 20 || GetMoney(playerid) < 100000000) return SendBotMessage(playerid,!"Для того, чтобы создать семью нужно 20-ый уровень и 100.000.000$!");
		if(PI[playerid][pFamilyMember] != -1) return SendBotMessage(playerid,!"Вы не можете создать семью, так как вы уже в ней состоите!");
		if(TOTAL_FAMILYS > MAX_FAMILY) return SCM(playerid, -1, !"Превышен лимит семей");
		SPD(playerid, 492, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы действительно хотите создать свою семью?\nСтоимость создания семьи: {FAAC58}100 000 000$\n\n", "Принять", "Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.5, -2263.4514,177.9965,35.3056))
	{
		if(GetPlayerVirtualWorld(playerid) == 0)
			SPD(playerid, 7845, DIALOG_STYLE_LIST, !"", !"{C4DF3D}<= {ffffff}Когда начинается мероприятие?\n{C4DF3D}<= {ffffff}Что собой представляет это мероприятие?\n{8D9F37}<= {ffffff}Сколько людей учавствует в мероприятии?\n{DB873D}<= {ffffff}Купить билет и войти! {DB873D}[30.000$]", !"Принять", !"Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.5, 523.8312, 848.2282, -42.9189))
	{
		str_d = "Действие\t{B6B425}В наличии\t{37B625}Стоимость\n";
		for(new i; i < sizeof(BuyMineInfo)-2; i++)
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "Продать Лари ресурс '%s'\t{FFF557}%i шт\t{64BE55}AZ Coins %i за шт\n",\
			BuyMineInfo[i][mName], GetInvCount(playerid, 361 + i), BuyMineInfo[i][mCost]);
			strcat(str_d, str_1);
		}
		str_1[0] = EOS, f(str_1, sizeof(str_1), "{D2772C}Купить у Лари инструмент для добычи\t \t{67BE55}AZ Coins %i\n",\
		BuyMineInfo[sizeof(BuyMineInfo)-2][mCost]);
		strcat(str_d, str_1);

		str_1[0] = EOS, f(str_1, sizeof(str_1), "{D2772C}Продать Лари инструмент для добычи\t \t{67BE55}AZ Coins %i",\
		BuyMineInfo[sizeof(BuyMineInfo)-1][mCost]);
		strcat(str_d, str_1);
		SPD(playerid, 8413, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите действие", str_d, !"Выбрать", !"Отмена");
		//if(OBJECT_SLEGAN[playerid] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] У вас уже есть инструмент!");
		//if(GetMoney(playerid) < 4000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету денег на покупку инструмента у Лари!");
		//SendBotMessage(playerid,!"Дай мне 4000$ и я продам тебе инструмент,\nчтобы ты смог добыть полезные ископаемые!");
		//SPD(playerid, 3213, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы хотите купить инструмент у Лари за 4000$?", "Купить", "Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, -256.7696, -1362.8536, 9.4421))
	{
		if(OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] У вас уже есть инструмент!");
		if(GetMoney(playerid) < 4000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету денег на покупку инструмента у Эмилио!");
		SendBotMessage(playerid,!"Дай мне 4000$ и я продам тебе инструмент,\nчтобы ты смог собрать урожай!");
		SPD(playerid, 3212, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы хотите купить инструмент у Эмилио за 4000$?", "Купить", "Отмена");
	}
	for(new i;i<sizeof(phonepos);i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2, phonepos[i][0],phonepos[i][1],phonepos[i][2]))
		{
			SetPlayerChatBubble(playerid, !"Использует телефон", COLOR_PURPLE, 10.0, 5000);
			SPD(playerid,2261,0,"","{FAAC58}- Телефонная будка{FFFFFF}\n\nСтоимость вызова такси составляет 250$, если наша компания найдет свободное\nтакси мы вас сразу оповестим.\n{FAAC58}Желаете продолжить?","Принять","Отмена");
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.5,-575.709, 2594.2, 1705.09))
	{
		J_SetPlayerPos(playerid,649.3248,-1353.8834,13.5470);//выход из здания
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid,0);
		PI[playerid][pBuildType]=-1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 770.8220,-77.3209,1000.6563 ))SPD(playerid,6446,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите надеть/снять форму и начать/закончить тренировку?","Одеть","Снять");
	if(Clother[playerid] != -1)
	{
		if(PI[playerid][pSkin] != 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 1.0, 199.1063, -128.3574, 1003.5152))
			{
				Clother[playerid] = -1;
				TogglePlayerControllable(playerid, true);
				TogglePlayerDynamicCP(playerid, Binko_CP, true);
				SetCameraBehindPlayer(playerid);
				
			}
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1152.2211,-1305.5664,1019.4307))
	{
		new g = GetPlayerInterior(playerid);
		new w = GetPlayerVirtualWorld(playerid);
		if(g == 2 && w == 1) SPD(playerid, 1978, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1313.7603,-1383.4368,13.7675))
	{
		f(str_2,sizeof(str_2),"{52A32A}- Развлекательный центр.{FFFFFF}\n\n\
		В этом месте вы можете как отдохнуть от своих обязаностей, так и заработать не малую\n\
		сумму денег, ведь при сприятии в победе вашей команды, вы будете получать по 1000$ за каждое\n\
		принесенное очко. Игра обрела название: 'Пейнбол', и ваша цель только победить в поединке между\n\
		красными или синими игроками. Всего лучшего!\n\n{52A32A}Игра начинается раз в 20 минут.");
		SPD(playerid,0,0,!"",str_2,!"Принять",!"");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1505.8809, 1337.0260, 10.9788))  return SPD(playerid,1977,2,!"","- Кто сейчас стоит на должности: 'Губернатор' ?\n- Чем занимается губернатор?\n- Показать расписание собеседований!\n{C1F611}- Посмотреть зарплаты гос. фракций!\n{FFFFFF}- Почему зарплаты во фракциях разные?","Принять","Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1773.6903,-1891.7493,13.5504 ) ||
	 IsPlayerInRangeOfPoint(playerid, 1.5, 1163.6832, -1754.9606, 13.6179)) SPD(playerid,7681,2,!"",!"- Поговорить\n{E64A4A}[Важно]{FFFFFF}Задания",!"Принять",!"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2572.0220,-1374.5316,1500.7570)) SPD(playerid, 1982, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Где получить права пилота?\n{FFC133}- {FFFFFF}Сколько стоят права на вождение?\n{FFC133}- {FFFFFF}Сотрудники автошколы на дежурстве.\n{FFC133}- {FFFFFF}Сколько стоит сдача на права пилота?", !"Принять", !"Отмена");
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1152.191406, -1305.585938, 1019.990723))
	{
		new g = GetPlayerInterior(playerid);
		new w = GetPlayerVirtualWorld(playerid);
		if(g == 2 && w == 1) SPD(playerid, 1978, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1152.191406, -1305.585938, 1019.990723))
	{
		new g = GetPlayerInterior(playerid);
		new w = GetPlayerVirtualWorld(playerid);
		if(g == 2 && w == 1) SPD(playerid, 1978, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1152.191406, -1305.585938, 1019.990723))
	{
		new g = GetPlayerInterior(playerid);
		new w = GetPlayerVirtualWorld(playerid);
		if(g == 2 && w == 1) SPD(playerid, 1978, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1324.0098,287.2829,20.0452 ))
	{

	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1800.4841, 409.9243, 20.2294 ) || IsPlayerInRangeOfPoint(playerid, 2.5, -2053.0842, 460.5180, 35.1719))
	{
		new count = GetInvCount(playerid, 359);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "\
			{C4DF3D}<={FFFFFF} TOП развитая семья: {F88860}-.\n\
			{C4DF3D}<={FFFFFF} TOП большая семья: {F88860}-.\n\
			{8D9F37}<={FFFFFF} TOП влиятельная семья: {F88860}-.\n\
			{DB873D}<={FFFFFF} Ежедневные задания\n\
			{808D84}Информация для семей.\n\
			{808D84}%s\n\
			{808D84}Обменять {C4DF3D}200{808D84} талонов на {C4DF3D}Активный аксессуар:{808D84}'Бумбокс'\n\
			{808D84}Обменять {C4DF3D}500{808D84} талонов на {C4DF3D}наклейку:{808D84} 'Supreme'\n\
			{808D84}Обменять {C4DF3D}1200{808D84} талонов на{C4DF3D} Samsung Galaxy S10 (Белый)\n\
			{808D84}Обменять {C4DF3D}1200{808D84} талонов на{C4DF3D} IPhone X (Белый)",
			(PI[playerid][pFamilyMember] == -1 || !count ) ? "Обмен талонов на репутацию [ {FD4D58}Недоступно{808D84} ]":(str_f("Обменять {C4DF3D}%d{808D84} талонов на {C4DF3D}%d{808D84} репутации!", count, count * 10 ))
		);
		SPD(playerid, 1931, DIALOG_STYLE_LIST, !"", str_1, "Принять", "Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1420.4176,-1685.8624,13.5469 )) SPD(playerid, 1449, DIALOG_STYLE_LIST, !"Задать вопрос", !"- Что ты тут делаешь?\n- Где взять гражданские талоны?\n- Где взять подарки?\n{852A2A}Обменять подарки\n{37FC47}Обменять гражданские талоны", !"Закрыть", !"");
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -77.9217,90.3327,3.1172 ))
	{
		if(PI[playerid][pJob]== 17 || PI[playerid][pJob]== 18 || PI[playerid][pJob]== 19 || PI[playerid][pJob]== 20)f(str_2,sizeof(str_2),"Текущая должность: %s",GetJobName(PI[playerid][pJob]));
		else f(str_2,sizeof(str_2),"");
		SPD(playerid,3919,2,str_2,"{73B461}-{FFFFFF} Информация\n{73B461}-{FFFFFF} Переодеться и начать/закончить работу\n{73B461}-{ABAE40} Устроится на работу начального фермера\n{73B461}-{FFFFFF} Устроится на работу тракториста\n{73B461}-{FFFFFF} Устроится на работу комбайнера\n{73B461}-{FFFFFF} Устроится на работу водителя кукурузника","Принять","Отмена");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2034.3145,-114.1021,1035.1719 ))
	{
		if(GetInvCount(playerid, 759)) return 0;
		if(PI[playerid][pContractTime]<7000)return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}EasterBoard Farm не раздает кому попало лицензии на полёты, только лучшим работникам!");
		SPD(playerid,0,0,!"",!"{FAC64C}Вы успешно получили бесплатную лицензию на полёты, при поддержке\nПредприятия EasterBoard Farm.","Закрыть","");
		GiveLicense(playerid, 30, 759);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 363.6908,153.9987,1025.7964)) return DialogSlet(playerid);
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 354.0459,170.0928,1025.7964 )) return DialogSlet(playerid,1);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2361.3875,91.0118,1502.0103) || IsPlayerInRangeOfPoint(playerid, 1.0, -955.6700,-2358.0708,1701.0859 ))
	{
		if(PI[playerid][pWanted] > 0)
		{
			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			PI[playerid][pDemogran] = PI[playerid][pWanted] * 180;
			PI[playerid][pBailPrice] = PI[playerid][pWanted] * 200;
			UpdatePlayerDataInt(playerid, "BailPrice", PI[playerid][pWanted] * 200);
			if(GetInvCount(playerid, 327) > 0 || GetInvCount(playerid, 328) > 0) SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
			if(!IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770))
			{
				new jrand = random( 2 );
				SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[jrand][0],JailPos[jrand][1],JailPos[jrand][2], 180.0);
			}
			else SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[2][0],JailPos[2][1],JailPos[2][2], 180.0);
			ResetPlayerWeapons(playerid);
			PI[playerid][pWanted] = 0;
			J_SetPlayerWantedLevel(playerid, 0);
			PlayerSpawn(playerid);
			SetItem(playerid, 327);
			SetItem(playerid, 328);
			f(str_2, sizeof(str_2), ">> Вы добровольно сели в тюрьму на %i минут.", (PI[playerid][pDemogran]/60));
			SCM(playerid, COLOR_LIGHTRED, str_2);
			SCM(playerid, COLOR_LIGHTBLUE, !">> Используйте /advokats чтобы найти адвоката который вам поможет выйти отсюда!");
			if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) PI[playerid][pPrison]=1,SetPlayerVirtualWorldEx(playerid, 11);
			else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) PI[playerid][pPrison]=3,SetPlayerVirtualWorldEx(playerid, 13);
			else PI[playerid][pPrison]=2,SetPlayerVirtualWorldEx(playerid, 12);
			UpdatePlayerDataInt(playerid, "Prison", PI[playerid][pPrison]);
			SetPlayerInteriorEx(playerid, 6);
			TogglePlayerControllable(playerid, true);
		}
		else SendBotMessage(playerid,!"Интересно в каком же вы собрались преступлении сознаваться, если вас нет в списке разыскиваемых?");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1527.5156, 1335.3966, 10.9787) || IsPlayerInRangeOfPoint(playerid, 1.0, 1489.7201, -1259.5638, 113.8044) || IsPlayerInRangeOfPoint(playerid, 1.0, 1500.2008, -1259.6384, 121.1435) || IsPlayerInRangeOfPoint(playerid, 1.0, 1999.9302, 1121.5923, 1038.6824)) SPD(playerid, 3772, DIALOG_STYLE_LIST, !"Выберите этаж", !"{FFFFFF}1 Этаж ( {EBEB3D}Холл/Информационная{FFFFFF} )\n2 Этаж ( {6AD630}Центр услуг/Буфет{FFFFFF} )\n3 Этаж ( {EB7D3D}Правление/Администрация{FFFFFF} )\n4 Этаж ( {EB7D3D}Зал суда{FFFFFF} ) ", !"Выбрать", !"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 0.5, 2271.7996,1440.5249,1008.8320 ))
	{
		if(PI[playerid][pJob]!= JOB_GUIDE) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не работаете здесь!");
		if(InJob[playerid]==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не начинали работу!");
		if(deal[playerid]<1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы ничего еще не заработали!");
		GiveMoney(playerid,deal[playerid]*120);
		f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы успешно забрали свои заработаные деньги ( %i$ )",deal[playerid]*120);
		SCM(playerid,COLOR_VALIK,str_2);
		deal[playerid]=0;
		
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2798.11, -2393.91, 13.96 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2743.82, -2453.84, 13.86 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2782.68, -2372.74, 13.63 ))
	{
		if(OrgInfo[TEAM_ARMY][oItemCount][0] < 2000) return SCM(playerid, 0xAFAFAFFF, !"[Ошибка] {FFFFFF}На складе недостаточно материалов!");
		if(!IsAtGang(playerid) && FamilyInfo[pFamilyID(playerid)][famMarodery] == 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		InvAdd(playerid, 655, 30);
		OrgInfo[TEAM_ARMY][oItemCount][0] -= 150;
		J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 2, 0, 0, 0, 0, 0);
		SetPlayerChatBubble(playerid, !"Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
		SPD(playerid,0,0,!"",!"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры","Закрыть","");
		
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1325.6866,476.3579,7.8498 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1294.9114,491.5177,11.1953 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1291.1442,501.8154,11.1953 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1397.9807,502.8033,11.3047 ))
	{
		if(OrgInfo[TEAM_ARMYSF][oItemCount][0] < 2000) return SCM(playerid, 0xAFAFAFFF, !"[Ошибка] {FFFFFF}На складе недостаточно материалов!");
		if(!IsAtGang(playerid) && FamilyInfo[pFamilyID(playerid)][famMarodery] == 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		InvAdd(playerid, 655, 30);
		OrgInfo[TEAM_ARMYSF][oItemCount][0] -= 150;
		J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 2, 0, 0, 0, 0, 0);
		SetPlayerChatBubble(playerid, !"Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
		SPD(playerid,0,0,!"",!"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры","Закрыть","");
		
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 154.3891,1903.3417,18.7570 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1707,1875.4081,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 115.3891,1875.2244,17.8359 ) ||
	IsPlayerInRangeOfPoint(playerid, 1.0, 117.9125,1871.2745,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1704,1875.4607,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 137.3782,1879.5315,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 193.3672,1931.5112,17.6406 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 202.5459,1861.9189,13.1406 ))
	{
		if(OrgInfo[TEAM_ARMYLV][oItemCount][0] < 2000) return SCM(playerid, 0xAFAFAFFF, !"[Ошибка] {FFFFFF}На складе недостаточно материалов!");
		if(!IsAtGang(playerid) && FamilyInfo[pFamilyID(playerid)][famMarodery] == 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		InvAdd(playerid, 655, 30);
		OrgInfo[TEAM_ARMYLV][oItemCount][0] -= 150;
		J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 2, 0, 0, 0, 0, 0);
		SetPlayerChatBubble(playerid, !"Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
		SPD(playerid,0,0,!"",!"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры","Закрыть","");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 665.9590, -567.7969, 1700.7394)) return ShowBuyMenu(playerid, 4);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -398.3770,2229.9397,1801.0859 ))
	{
		if(Clother[playerid] != -1 || BuyInt[playerid] != -1  || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1) return 0;
		SPD(playerid,1653,5,"","Аксессуар\tЯчейка\n{42B02C}-{FFFFFF} Наушники\t5\n{42B02C}-{FFFFFF} Шапки\t1\n{42B02C}-{FFFFFF} Панамки\t1\n{42B02C}-{FFFFFF} Кепки\t1\n{42B02C}-{FFFFFF} Каски\t1\n{42B02C}-{FFFFFF} Береты\t1\n{42B02C}-{FFFFFF} Парики\t1\n{42B02C}-{FFFFFF} Стильные очки\t2\n{42B02C}-{FFFFFF} Банданы\t4\n{42B02C}-{FFFFFF} Шляпы\t1\n{42B02C}-{FFFFFF} Наручные часы\t3\n{42B02C}-{FFFFFF} Сумки\t6\n{42B02C}-{FFFFFF} Шляпы [2]\t1\n{42B02C}-{FFFFFF} Банданы [2]\t1","Принять","Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.6816,-1623.1069,13.3725 )) return J_SetPlayerPos(playerid,1547.7014,-1622.3954,13.5366);
	else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.7014,-1622.3954,13.5366 )) return J_SetPlayerPos(playerid,1547.6816,-1623.1069,13.3725);

	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -166.9772,1347.3783,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.6039,1323.4382,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.6047,1327.2102,1500.9888 ) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, -210.7849,1329.7562,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -212.6879,1334.1384,1500.9888) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.9196,1334.1351,1500.9888) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, -187.4157,1305.7438,1507.6416 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -194.7263,1305.7531,1507.6416 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -180.6385,1299.5883,1507.6770) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, -183.1053,1299.8328,1507.6770 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -186.0829,1297.2595,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -190.7337,1296.8057,1507.6692) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, -193.2607,1298.5358,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -194.5027,1296.8018,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -197.0397,1298.5365,1507.6692)) return callcmd::Newsredak(playerid);

	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2570.1045,-1281.3558,1044.1250 ))
	{
		if(GetPlayerVirtualWorld(playerid)==11)
		{
			f(str_2,sizeof(str_2),"Склад армии ЛС.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[23],OrgInfo[TEAM_ARMY][oItemCount][0]);
			SPD(playerid,0,0,!"",str_2,!"Закрыть",!"");
		}
		else if(GetPlayerVirtualWorld(playerid)==12)
		{
			f(str_2,sizeof(str_2),"Склад армии LV.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[24],OrgInfo[TEAM_ARMYLV][oItemCount][0]);
			SPD(playerid,0,0,!"",str_2,!"Закрыть",!"");
		}
		else if(GetPlayerVirtualWorld(playerid)==13)
		{
			f(str_2,sizeof(str_2),"Склад армии SF.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[30],OrgInfo[TEAM_ARMYSF][oItemCount][0]);
			SPD(playerid,0,0,!"",str_2,!"Закрыть",!"");
		}
		
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.5, 2019.32,1007.7,10.8203 ))
	{
		if(GLS[32]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Казино закрыто!");
		if(PI[playerid][pWanted] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрокам с розыском, запрещено заходить в казино!");
		if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В казино могут войти игроки выше 2-го уровня!");
		if(GetMoney(playerid) < 500)return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}У вас недостаточно денег для входа в казино!");
		SetPlayerVirtualWorldEx(playerid,2);
		SetPlayerInteriorEx(playerid,215);
		J_SetPlayerPos(playerid,2269.4495,-870.7385,1407.1273);
		SetPlayerFacingAngle(playerid, 359.0948);
		if(!EnterCasino{playerid})
		{
			GiveMoney(playerid,-500, "заплатил за вход в казино");
			EnterCasino{playerid} = true;
		}
		SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы вошли в казино 4 Dragons");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.5, 2263.5845, -871.3642, 1407.1273) && GetPlayerVirtualWorld(playerid) == 2)
	{
		SetPlayerVirtualWorldEx(playerid,0);
		SetPlayerInteriorEx(playerid,0);
		J_SetPlayerPos(playerid,2019.32,1007.7,10.8203);
		EnterCasino{playerid} = false;
	}
	for(new i; i < sizeof(bandos); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, bandos[i][0], bandos[i][1], bandos[i][2])) {
			SPD(playerid, 655, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Варианты победы\n\n{eec74a}[1] {ffffff}- 3 Вишни - {73b461}x6\n{eec74a}[2] {ffffff}- 3 Винограда - {73b461}x8\n{eec74a}[3] {ffffff}- 3 числа - {73b461}x10\n{eec74a}[4] {ffffff}- 3 Колокола - {73b461}x12\n{eec74a}[5] {ffffff}- 3 слитка - {73b461}x14\n{eec74a}[6] {ffffff}- 6 слитков - {73b461}x20\n\n{eec74a}[7] {ffffff}- 2 Колокола - {73b461}x2\n{eec74a}[8] {ffffff}- 2 слитка - {73b461}x3\n{eec74a}[9] {ffffff}- 4 слитка - {73b461}x4\n\n{FFFFFF}Остальную информацию можно узнать в /help - Однорукий бандит!\n\n{f7a736}Введите количество фишек, которое хотите поставить\nна баланс игрового автомата.", !"Принять", !"Закрыть");
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1769.3776, -2019.0920, 1500.7853))
	{
		if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
		J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
		SetPlayerFacingAngle(playerid, 182.6985);
	}
	if(HouseEntered[playerid] != -1)
	{
		for(new i; i < sizeof(CellarInfoVar); i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, CellarInfoVar[i][ciPosPlayer][0], CellarInfoVar[i][ciPosPlayer][1], CellarInfoVar[i][ciPosPlayer][2])) J_SetPlayerPos(playerid, HouseInfo[HouseEntered[playerid]][hExit_X], HouseInfo[HouseEntered[playerid]][hExit_Y], HouseInfo[HouseEntered[playerid]][hExit_Z]);
	}
	//if(IsPlayerInRangeOfPoint(playerid, 1.0, 1079.0709, 937.4053, 1604.8663 )) J_SetPlayerPos(playerid, HouseInfo[HouseEntered[playerid]][hExit_X], HouseInfo[HouseEntered[playerid]][hExit_Y], HouseInfo[HouseEntered[playerid]][hExit_Z]);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1415.0663, 2081.2036, 1502.0225 )) J_SetPlayerPos(playerid, -1426.0897, 2091.5784, 1508.2068);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1426.0897, 2091.5784, 1508.2068 )) J_SetPlayerPos(playerid, -1415.0663, 2081.2036, 1502.0225);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2350.7820,-1961.5228,1601.0859 ))
	{
		if(GetMoney(playerid) < 1200)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");

		GiveMoney(playerid, -1200, "купил оружие");
		GivePlayerWeapon(playerid, 14, 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -203.7812,1314.2445,1500.9788 ))
		J_SetPlayerPos(playerid, -212.8785,1310.3716,1507.6592);

	if(IsPlayerInRangeOfPoint(playerid, 1.0, -212.8785,1310.3716,1507.6592 ))
		J_SetPlayerPos(playerid, -203.7812,1314.2445,1500.9788);

	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2682.5276,796.4670,1501.0259 )) {
		mysql_tquery(mysql, !"SELECT donation, NickName FROM `"TABLE_ACCOUNTS"` WHERE donation != 0 ORDER BY donation DESC LIMIT 20", "MysqlDonationBlago", "d", playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2661.8655, 785.9218, 1500.9688 ))
	{
		if(PI[playerid][pMember] != TEAM_BANK)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");

		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, 1518.4906, -1777.8580, 33.4269);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1518.4906, -1777.8580, 33.4269 ))
	{
		if(PI[playerid][pMember] != TEAM_BANK)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");
		SetPlayerInteriorEx(playerid, 1);
		SetPlayerVirtualWorldEx(playerid, 1);
		J_SetPlayerPos(playerid, -2661.8655, 785.9218, 1500.9688);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2053.2688, 2697.6201, 1500.9766 )) callcmd::ekonom(playerid);
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2064.8579, 2709.9797, 1500.9766 ))
	{
		if(PI[playerid][pMember] != TEAM_MERIALS)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь доступна только сотрудникам мэрии!");
		J_SetPlayerPos(playerid, 1473.2888,-1262.4442,14.5625);
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1473.2888,-1262.4442,14.5625 ))
	{
		if(PI[playerid][pMember] != TEAM_MERIALS)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь доступна только сотрудникам мэрии!");
		J_SetPlayerPos(playerid, -2064.8579, 2709.9797, 1500.9766);
		SetPlayerInteriorEx(playerid, 2);
		SetPlayerVirtualWorldEx(playerid, 2);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 295.20001220703, -38.299999237061, 1001.5 ))
	{
		new biz = BizEntered[playerid];
		if(GetInvCount(playerid, 762))
		{
			if(biz != -1)
			{
				if(BuyGuns[playerid] == -1)
				{
					PlayerTextDrawShow(playerid, InfoText[playerid]);
					SetPlayerFacingAngle(playerid, 180.0);
					J_SetPlayerPos(playerid, 295.1638,-37.8457,1001.5156);
					new gunid = BuyGunInfo[0][bgGunid];
					new model = GetWeaponModel(gunid);
					new price;
					price = BuyGunInfo[0][bgPrice];
					f(str_2, sizeof(str_2), "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[0][bgAmmo][0], price);
					PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
					DestroyPlayerObject(playerid, TempBGObject[playerid]);
					BuyGuns[playerid] = 0;
					BuyGunAmmo[playerid] = 0;
					TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 90.0);
					SetBuyGunCamera(playerid);
					if(BuyGunInfo[0][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
					TextDrawShowForPlayer(playerid, Boxmenu0);
					TextDrawShowForPlayer(playerid, Boxmenu1);
					TextDrawShowForPlayer(playerid, Boxmenu2);
					TextDrawShowForPlayer(playerid, Boxmenu3);
					TextDrawShowForPlayer(playerid, ButtonRight);
					TextDrawShowForPlayer(playerid, ButtonCancel);
					TextDrawShowForPlayer(playerid, ButtonSelect);
					TextDrawShowForPlayer(playerid,boxaccept);
					TextDrawShowForPlayer(playerid,boxcancel);
					SelectTextDraw(playerid, 0xFFFFFFAA);
				}
				else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы уже покупаете оружие");
			}
			else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы ни в 1 из бизнесов");
		}
		else SendBotMessage(playerid,!"Нееет! Я не продам пушку человеку без лицензии!");
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2154.7354,1493.4109,10.8203 ))
	{
		SetPlayerInteriorEx(playerid, 4);
		SetPlayerVirtualWorldEx(playerid, 1);
		SetPlayerFacingAngle(playerid, 263.5787);
		J_SetPlayerPos(playerid, 2351.2886, 720.3787, 1500.9688);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2351.2886,720.3787,1500.9688 ))
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.5033);
		J_SetPlayerPos(playerid, 2154.9141, 1493.4940, 10.8203);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 3.0257, 32.9454, 1199.5938 ))
	{
		SetPlayerInteriorEx(playerid, 0);
		if(GetPlayerInterior(playerid) == 1) J_SetPlayerPos(playerid, 1280.0313, -1531.1406, 1244.7153);
		if(GetPlayerInterior(playerid) == 2) J_SetPlayerPos(playerid, -2172.6094, -54.8171, 1244.2686);
		if(GetPlayerInterior(playerid) == 3) J_SetPlayerPos(playerid, 2031.6953, 1729.3984, 1244.3545);
		SetPlayerVirtualWorldEx(playerid, 0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1451.6128, -2285.0105, 13.5469 ) || IsPlayerInRangeOfPoint(playerid, 1, 1673.0103, 1447.5935, 10.7867 ) || IsPlayerInRangeOfPoint(playerid, 1, -1409.4084, -298.2005, 14.1484 )) {
		if(PI[playerid][pWanted] > 0)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрокам с розыском, запрещено прыгать с парашюта!");
		//AC_FIX_DIALOG_F(playerid, 9982);
		SPD(playerid, 9982, DIALOG_STYLE_LIST, "Стоимость прыжка: {B5FA53}900$", "Прыгнуть с парашютом над городом: {B5FA53}LS\nПрыгнуть с парашютом над городом: {53FA78}SF\nПрыгнуть с парашютом над городом: {FACE53}LV", "Принять", "Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1312.6182, 20.8936, 1597.6073))
	{
		J_SetPlayerPos(playerid, -1771.9169, -2017.0677, 1500.7853);
		SetPlayerFacingAngle(playerid, 14.4063);
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 2073.8965,-1369.1693,1007.1063 ))
	{
		J_SetPlayerPos(playerid,2342.5989,-673.4814,1055.4230);
		SetPlayerFacingAngle(playerid,269.5394);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2342.5989,-673.4814,1055.4230 ))
	{
		J_SetPlayerPos(playerid,2073.8965,-1369.1693,1007.1063);
		SetPlayerFacingAngle(playerid,91.2718);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 483.0550,246.8815,3197.7139 )) return J_SetPlayerPos(playerid,474.5011,216.2406,3194.6360);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 474.5011,216.2406,3194.6360 ))return  J_SetPlayerPos(playerid,483.0550,246.8815,3197.7139);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 481.3205,216.2760,3194.6360 ))return  J_SetPlayerPos(playerid,461.6805,223.6825,3197.7139);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 461.6805,223.6825,3197.7139 ))return  J_SetPlayerPos(playerid,481.3205,216.2760,3194.6360);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 638.197021, -1239.710449, 1024.391846 ))return  J_SetPlayerPos(playerid, 1155.955688, -1296.993530, 1019.413879);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1155.955688, -1296.993530, 1019.413879 ))return J_SetPlayerPos(playerid, 638.197021, -1239.710449, 1024.391846);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1123.963501, -1533.590820, 1010.296326 ))return J_SetPlayerPos(playerid, 1120.565186, -1311.100952, 1019.411926);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1120.565186, -1311.100952, 1019.411926 ))return J_SetPlayerPos(playerid, 1123.963501, -1533.590820, 1010.296326);
	else if(IsPlayerInRangeOfPoint(playerid, 1, 1289.0641,-1271.5160,13.5400 ))
	{
		SetPlayerInteriorEx(playerid,3);
		SetPlayerVirtualWorldEx(playerid,3);
		J_SetPlayerPos(playerid,2099.9321,781.9526,1027.1211);
		SetPlayerFacingAngle(playerid,180.2926);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1, 2099.9321,781.9526,1027.1211 ))
	{
		SetPlayerInteriorEx(playerid,0);
		SetPlayerVirtualWorldEx(playerid,0);
		J_SetPlayerPos(playerid,1289.0641,-1271.5160,13.5400);
		SetPlayerFacingAngle(playerid,180.2926);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3033,-1637.5920,13.3905 ))
	{
		if(PI[playerid][pMember] !=1)return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid,1583.3656,-1638.4817,13.3333);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3656,-1638.4817,13.3333 ))
	{
		if(PI[playerid][pMember] !=1)return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid,1583.3033,-1637.5920,13.3905);
		
	}
	//AC_FIX_DIALOG_F(playerid, 0);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1504.7090, 1271.7426, 10.9908))
	{
		if(PI[playerid][pBankPass] != -1)
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}У вас уже есть банковская карта!", "Закрыть", "");

		if(PI[playerid][pMoney] < 1000)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

		SPD(playerid, 779, DIALOG_STYLE_MSGBOX, !"", !"{FFA500}Вас приветсвуют в банковском отделении города Las Venturas!\n\n{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников.", "Принять", "Отмена");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, -38.9923,173.5192,2.4297 ))
	{
		f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}EasterBoard Farm.{FFFFFF}\nНа данный момент зарплата на ферме составляет:\n\n- Начинающий фермер: {73B461}%i${FFFFFF}\n- Тракторист: {73B461}%i${FFFFFF}\n- Комбайнер: {73B461}%i${FFFFFF}\n- Водитель кукурузника: {73B461}%i${FFFFFF}\n\n{73B461}Следите за новостями!",GLS[4],GLS[4]*14,GLS[4]*26,GLS[4]*54);
		SPD(playerid,0,0,!"Информация",str_2,!"Принять",!"");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, -83.2843,-302.1633,2.7646 ))
	{
		f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}Завод.{FFFFFF}\n\nНа данный момент зарплата составляет: {73B461}%i${FFFFFF}\n{73B461}Следите за новостями!",GLS[5]);
		SPD(playerid,0,0,!"Информация",str_2,!"Принять",!"");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1969.3076,-1981.4128,13.5469 ))
	{
		f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}Грузчики.{FFFFFF}\n\nНа данный момент зарплата составляет: {73B461}%i${FFFFFF}\n{73B461}Следите за новостями!",GLS[6]);
		SPD(playerid,0,0,!"Информация",str_2,!"Принять",!"");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1460.8505,-1743.3596,13.5469 ))
	{
		f(str_2,sizeof(str_2),"{73B461}Центральный банк Los Santos.{FFFFFF}\n\nНалог на авто: {73B461}%i{FFFFFF}\nНалог на дом: {73B461}%i{FFFFFF}\nНалог на бизнес: {73B461}%i{FFFFFF}\n\nНалоги могут изменится в любой момент.\n{73B461}Следите за новостями!",GLS[1],GLS[2],GLS[3]);
		SPD(playerid,0,0,!"Информация",str_2,!"Принять",!"");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, -954.5001,-2350.5596,1701.0869) ||
	IsPlayerInRangeOfPoint(playerid, 1.5, 2327.74, 70.09, 1502.00) ||
	IsPlayerInRangeOfPoint(playerid, 1.5, -2502.4258,-650.1299,1331.6520) ||
	IsPlayerInRangeOfPoint(playerid, 1.5, 583.2088,1433.3907,1904.2689) ||
	IsPlayerInRangeOfPoint(playerid, 1.5, 485.16, 849.70, 1500.96) ||
	IsPlayerInRangeOfPoint(playerid, 1.5, -1587.6157,-121.8007,1501.0859))
	{
		if(!IsACop(playerid) && !IsAArmy(playerid)) return SCM(playerid,COLOR_RED,!"[Ошибка] {FFFFFF}Доступ к спутнику имеется только у военных и правоохранных организаций!");
		if(GetPVarInt(playerid,!"reloader")>global_time)return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка]{FFFFFF} Не флуди!");
		//if(PI[playerid][pRank]<9)return SCM(playerid,COLOR_RED,!"[Ошибка] {FFFFFF}У вас нет доступа к этому разделу!");
		if(!ShowMap[playerid]) TogglePlayerMap(playerid, true);
		else TogglePlayerMap(playerid, false);
		SetPVarInt(playerid,"reloader",global_time+2);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 592.9380,1428.2743,1900.7980 )) return J_SetPlayerPos(playerid,592.8829,1426.6675,1900.7980);
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 592.8829,1426.6675,1900.7980 )) return J_SetPlayerPos(playerid,592.9380,1428.2743,1900.7980);
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 618.9825,-568.0446,26.1432 ))
	{
		SetPlayerInteriorEx(playerid,6);
		SetPlayerVirtualWorldEx(playerid,11);
		J_SetPlayerPos(playerid,2365.45, 73.89, 1502.01);
		SetPlayerFacingAngle(playerid,0.00);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 2095.8977,797.0555,1027.1211 ))return SPD(playerid,189,2,"","{FFFFFF}Пожертвовать: {FF6347}10 000 AZ\nПожертвовать: {FF6347}50 000 AZ\nПожертвовать: {FF6347}200 000 AZ\nПожертвовать: {FF6347}1 000 000 AZ\nПожертвовать: {FF6347}5 000 000 AZ","Принять","Отклонить");
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 2365.59, 72.03, 1502.01))
	{
		if(GetPlayerVirtualWorld(playerid)==11)
		{
			SetPlayerInteriorEx(playerid,0);
			SetPlayerVirtualWorldEx(playerid,0);
			J_SetPlayerPos(playerid,618.9825,-568.0446,26.1432);
			SetPlayerFacingAngle(playerid,84.4441);
			
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1165.4773,1346.2273,10.9219 ))return J_SetPlayerPos(playerid,1165.4714,1344.7832,10.8125);
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1165.4714,1344.7832,10.8125 ))return J_SetPlayerPos(playerid,1165.4773,1346.2273,10.9219);
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, -2657.75, 808.67, 1500.97))
	{
		foreach_player(i)
		{
			if(PI[i][pCredit]>0 && IsPlayerLogged[i])
			{
				f(str_2,sizeof(str_2),"- %s\t\t\t - Должен: %i\t\tУровень розыска: %i",PN(i),PI[i][pCredit],PI[i][pWanted]);
				SPD(playerid,0,0,!"Должники банка",str_2,!"Принять",!"");
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.5, 199.1063, -128.3574, 1003.5152 ))
	{
		if(PI[playerid][pSkin]!= GetPlayerSkin(playerid)) return SCM (playerid,COLOR_VALIK,"[Ошибка] {FFFFFF}Вы не можете переодеться , так как вы сейчас в служебной одежде!{FFFFFF}");
		if(InviteOffer[playerid]!= INVALID_PLAYER_ID)

		if(Clother[playerid] == -1) SetPlayerBuySkin(playerid, true);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1746.6765,2246.2012,10.8203 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 665.9875,-1576.6426,14.4777 ) )
	{
		//AC_FIX_DIALOG_F(playerid, 28);
		GetJob[playerid] = JOB_PIZZA;
		SPD(playerid,28,0,"Работа: Развозчик пиццы","{FFFFFF}Вы собираетесь устроиться на работу Развозчиком пиццы\nВы согласны с условиями?","Да","Нет");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1749.0339,2246.2012,10.8203 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 668.0192,-1576.7659,14.4074 ))
	{
		//AC_FIX_DIALOG_F(playerid, 1223);
		if(PI[playerid][pJob] != JOB_PIZZA) return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}Вы не развозчик пиццы!");
		if(!InJob[playerid]) SPD(playerid,1222,0,"Работа 'Развозчик пиццы'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		else SPD(playerid,1223,0,"Работа 'Развозчик пиццы'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1979.9426,-1971.1410,13.5825 ))
	{
		GetJob[playerid] = JOB_PORTER;
		SPD(playerid,28,0,"Работа: Грузчик","{FFFFFF}Вы собираетесь устроиться на работу Грузчиком\nВы согласны с условиями?","Да","Нет");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 208.4846,-225.6056,1.7749 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2111.5618,894.6057,10.9149 ))
	{
		if(PI[playerid][pJob]!=JOB_MECHANIC )return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не работаете механиком!");
		if(GetPVarInt(playerid, !"mehan") != 2) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не переоделись!");
		SPD(playerid,381,2,"Выбор работы","1. Отремонтировать авто\n2. Починить двигатель","Принять","Отмена");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 195.1261,-228.0334,1.7749 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2126.2717,896.7686,10.9149 ))
	{
		//AC_FIX_DIALOG_F(playerid, 661);
		//AC_FIX_DIALOG_F(playerid, 662);
		if(PI[playerid][pJob] != JOB_MECHANIC) return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}Вы здесь не работаете!");
		if(!InJob[playerid]) SPD(playerid,661,0,"Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		else SPD(playerid,662,0,"Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 2229.862305, 1473.939575, 1008.761292 ))
	{
		new hour,minuite,second;
		gettime(hour,minuite,second);
		if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
		{
			SCM(playerid,COLOR_GREY,"Гос. организации могут работать после 20.00 до 10.00!");
			
		}
		//AC_FIX_DIALOG_F(playerid, 663);
		//AC_FIX_DIALOG_F(playerid, 664);
		if(PI[playerid][pJob] != JOB_GUIDE) return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}Вы здесь не работаете!");
		if(!InJob[playerid]) SPD(playerid,663,0,"Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		else SPD(playerid,664,0,"Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		
	}
	//AC_FIX_DIALOG_F(playerid, 665);
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 2235.3030, -824.5659, 1407.1273)) SPD(playerid,665,2, !"", !"{acee4a}[Купить] {FFFFFF}Фишки\n{eec74a}[Продать] {FFFFFF}Фишки", !"Принять", !"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1980.1283,-1968.4868,13.5825 ))
	{
		//AC_FIX_DIALOG_F(playerid, 666);
		//AC_FIX_DIALOG_F(playerid, 667);
		if(PI[playerid][pJob] != JOB_PORTER) return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}Вы не грузчик");
		if(!InJob[playerid]) SPD(playerid,666,0,"Работа 'Грузчик'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		else SPD(playerid,667,0,"Работа 'Грузчик'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1609.7928, -110.7104, 1501.0859) || IsPlayerInRangeOfPoint(playerid, 1.0, 1169.6074, -1333.3698, -0.8618)|| IsPlayerInRangeOfPoint(playerid, 1.0, 462.35, 874.83, 1500.96) || IsPlayerInRangeOfPoint(playerid, 1.0, 550.3827, 1472.2921, 1900.7980) || IsPlayerInRangeOfPoint(playerid, 1.0, -1324.4010, 9.3590, 1601.0859))
	{
		if(!PI[playerid][pHeal])
		{
			new Float:Health = PlayerHealthAC[playerid];
			if(Health < 100.0) SPD(playerid, 186, DIALOG_STYLE_MSGBOX, "Курс лечения", "{FFFFFF}Вы хотите пройти курс лечения?", "Да", "Нет");
			else SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы здоровы!");
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже проходите лечение!");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1152.2040, -1303.6135, 1019.4307)) SPD(playerid, 25779, DIALOG_STYLE_LIST, !"Лечение", !"{FFFFFF}[1] Начать {99CC00}бесплатное{FFFFFF} лечение\n{FFFFFF}[2] Пройти курс {99CC00}быстрой{FFFFFF} реабилитации", !"Выбрать", !"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1510.8745, 1360.7517, 10.9738))
	{
		//AC_FIX_DIALOG_F(playerid, 147);
		if(!IsValidPassport(playerid)) SPD(playerid, 147, 2, "Выберите пол", "{E64444}-{FFFFFF} Мужчина\n{E64444}-{FFFFFF} Женщина", "Далее", "Отмена");
		else SendBotMessage(playerid,!"Вы в своем уме? У вас уже есть паспорт!");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2847.9468,-2519.4592,11.9786)) J_SetPlayerPos(playerid, 2842.3452,-2523.9382,17.7489);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2842.3452,-2523.9382,17.7489)) J_SetPlayerPos(playerid, 2847.9468,-2519.4592,11.9786);
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2092.2739,797.1262,1027.1211))
	{
		return SPD(playerid, 3392, DIALOG_STYLE_LIST, !"", !"Список рабочих мест\n{ff6016}Уволиться с работы", !"Принять", !"Отмена");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -190.34, 1338.59, 1500.98) || IsPlayerInRangeOfPoint(playerid, 1.0, 216.7613,-247.8414,1.9079)) return callcmd::ad(playerid, "");
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1768.1641, -1992.0632, 1500.7856))
	{
		if(PI[playerid][pHeal]) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}Вы находитесь на лечении");
		if(GetPlayerVirtualWorld(playerid)==1)
		{
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
			J_SetPlayerPos(playerid, 1147.9972,-1343.0070,13.6483);
			SetPlayerFacingAngle(playerid,177.6540);
			//PlayerFrezze[playerid] = 2;
			TogglePlayerControllable(playerid,false);
		}
		else if(GetPlayerVirtualWorld(playerid)==2)
		{
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
			J_SetPlayerPos(playerid, 1593.2783,1724.0553,10.8203);
		}
		else if(GetPlayerVirtualWorld(playerid)==3)
		{
			SetPlayerInteriorEx(playerid, 0);
			SetPlayerVirtualWorldEx(playerid, 0);
			J_SetPlayerPos(playerid, -2594.7959,642.3338,14.4531);
			SetPlayerFacingAngle(playerid,271.9759);
		}
		
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,1593.2783,1724.0553,10.8203))
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid, 2);
		J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
		GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1147.9972,-1343.0070,13.6483))
	{
		SetPlayerInteriorEx(playerid, 2);
		SetPlayerVirtualWorldEx(playerid, 1);
		J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
		GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2594.7959,642.3338,14.4531))
	{
		SetPlayerInteriorEx(playerid, 3);
		SetPlayerVirtualWorldEx(playerid, 3);
		J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
		GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -741.5166,2360.1128,1404.5170))
	{
		//AC_FIX_DIALOG_F(playerid, 420);
		if(GetTeamID(playerid) != TEAM_FBI) return 0;
		if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве");
		SPD(playerid, 240, DIALOG_STYLE_LIST, !"", !"{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", !"Выбор", !"Отмена");
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -618.6426,-679.4822,1001.0859))
	{
		if(!IsAtFrakcia(playerid, 1)) return SCM(playerid,COLOR_RED,!"[Информация] {FFFFFF}Дверь заперта!");
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, 279.5766,-1619.0736,114.6778);
		SetPlayerFacingAngle(playerid, 261.7703);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 279.5766,-1619.0736,114.6778))
	{
		if(!IsAtFrakcia(playerid, 1)) return SCM(playerid,COLOR_RED,!"[Информация] {FFFFFF}Дверь заперта!");
		SetPlayerInteriorEx(playerid, 2);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, -618.6426,-679.4822,1001.0859);
		SetPlayerFacingAngle(playerid, 271.2979);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -743.3647,2335.2883,1404.5189))
	{
		if(!IsAtFrakcia(playerid, 1)) return SCM(playerid,COLOR_RED,!"[Информация] {FFFFFF}Дверь заперта!");
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, -2467.6902,529.4441,51.0896);
		SetPlayerFacingAngle(playerid, 170.8995);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2467.6902,529.4441,51.0896))
	{
		if(!IsAtFrakcia(playerid, 1)) return SCM(playerid,COLOR_RED,!"[Информация] {FFFFFF}Дверь заперта!");
		SetPlayerInteriorEx(playerid, 2);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, -743.3647,2335.2883,1404.5189);
		SetPlayerFacingAngle(playerid, 177.6572);
		//PlayerFrezze[playerid] = 2;
		TogglePlayerControllable(playerid,false);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1426.2836,2232.1748,1500.9758) || IsPlayerInRangeOfPoint(playerid, 1.0, -265.0327,791.4764,1500.9608) || IsPlayerInRangeOfPoint(playerid, 1.0, 485.2076,864.1537,1500.9648))
	{
		if(Getemer[playerid]>global_time)return 0;
		if(Fullness{playerid} >= 95) return SCM(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}Вы не голодны");
		Getemer[playerid]=global_time+5;
		if(!IsAtFrakcia(playerid)) return SCM(playerid,COLOR_RED,!"[Ошибка] {FFFFFF}Вы не состоите в гос. структурах!");
		GiveFullness(playerid,50);
		J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		SCM(playerid, COLOR_VALIK,!"[Информация] {FFFFFF}Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
		SendEatBot(playerid);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2761.0051, -2565.0754, 13.6281))
	{
		if(!IsAtFrakcia(playerid)) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid, 2760.6651, -2566.2554, 13.6281);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2760.6651, -2566.2554, 13.6281))
	{
		if(!IsAtFrakcia(playerid)) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid, 2761.0051, -2565.0754, 13.6281);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2755.5088, -2515.5393, 13.6281))
	{
		if(!IsAtFrakcia(playerid)) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid, 2726.0520, -2521.9421, 29.8281);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2726.0520, -2521.9421, 29.8281))
	{
		if(!IsAtFrakcia(playerid)) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		J_SetPlayerPos(playerid, 2755.5088, -2515.5393, 13.6281);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -462.7133, 2214.8123, 1601.0859)) SPD(playerid, 9918, DIALOG_STYLE_LIST, !"", !"Получить стандартные номера: {FF6DF9}10 000$\nПриобрести именные номера: {FF6DF9}600 000$", !"Принять", !"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.08, -29.09, 1001.52))
	{
		PI[playerid][pTir] = 0;
		J_SetPlayerPos(playerid, 286.14, -32.38, 1001.52);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.17, -30.55, 1001.52))
	{
		PI[playerid][pTir] = 1;
		J_SetPlayerPos(playerid, 286.14, -27.38, 1001.52);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 544.7178, -587.9365, 23.0899))
	{
		SetPlayerInteriorEx(playerid, 11);
		SetPlayerVirtualWorldEx(playerid, 2);
		J_SetPlayerPos(playerid, 229.2502, 2367.7720, 1500.9756);
		SetPlayerFacingAngle(playerid, 88.2878);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 229.2502, 2367.7720, 1500.9756))
	{
		SetPlayerInteriorEx(playerid, 0);
		SetPlayerVirtualWorldEx(playerid, 0);
		J_SetPlayerPos(playerid, 544.3036, -590.3224, 22.8681);
		SetPlayerFacingAngle(playerid, 197.0002);
		
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2201.2429,-2340.7310,30.6250))
	{
		//AC_FIX_DIALOG_F(playerid, 9821);
		return SPD(playerid, 9821, DIALOG_STYLE_LIST, !"", !"{c4df3d}<= {FFFFFF}Где взять черепа?\n{c4df3d}<= {FFFFFF}Что можно купить за черепа?\n{8d9f37}<= {FFFFFF}Как купить товар за черепа?", !"Принять", !"Отмена");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.5, -1505.3370, 2718.0195, 1500.9674))
	{
		if(PI[playerid][pFamilyMember] != -1)
		{
			if(FamilyInfo[pFamilyID(playerid)][famEatFish] == 1)
			{
				SPD(playerid, 5008, DIALOG_STYLE_LIST, !"{C0BCBB}Выберите еду",
				"\
					{43C12A}- {FFFFFF}Жареная рыба\n\
					{43C12A}- {FFFFFF}Выреная рыба\n\
					{43C12A}- {FFFFFF}Запеченная тилапия с сыром\n\
					{43C12A}- {FFFFFF}Пирог с рыбой\n\
					{43C12A}- {FFFFFF}Скумбрия домашнего копчения\n\
					{43C12A}- {FFFFFF}Запечённая щука\n\
					{43C12A}- {FFFFFF}Красная рыба с кукурузой гриль\
				",
				!"Выбор",
				!"Отмена");
			}
			else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи нет улучшения 'Рыбный цех'");
		}
		else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	}
	else if(Cuffed[playerid])
	{
		if(CuffedTime[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы обездвижены и не можете двигаться");
	    if(GetPlayerWeapon(playerid) == 0)
	    {
	        new player = GetPlayerTargetPlayer(playerid);
	        if(player != INVALID_PLAYER_ID)
	        {
	            if(ProxDetectorS(3.0, playerid, player, 1))//Купира (Доделать)
	            {
		            ClickedPlayerID[playerid] = player;
		            ClickedState[playerid] = -1;
              		//for(new A; A < 12; A++) TextDrawShowForPlayer(playerid, IconsMenu[A]);
					SelectTextDraw(playerid, 0xFF9933FF);
					
				}
				else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
			}
 		}
	}
	if(InfoHouse[playerid] != -1)
	{
		new i = InfoHouse[playerid];
		if(IsPlayerInRangeOfPoint(playerid,3.0,HouseInfo[i][hEnter_X],HouseInfo[i][hEnter_Y],HouseInfo[i][hEnter_Z]))
		{
			if(HouseInfo[i][hLock] != false && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
			SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Используйте /house для управления домом.");
			HouseEntered[playerid] = i;
			InfoHouse[playerid] = -1;
			TextDrawHideForPlayer(playerid, HInfoBG);
			for(new j; j < 6; j ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][j]);
			TextDrawHideForPlayer(playerid, HInfoEnterDraw);
			TextDrawHideForPlayer(playerid, HInfoBuyDraw);
			SetPlayerInteriorEx(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorldEx(playerid,(i+50));
			J_SetPlayerPos(playerid,HouseInfo[i][hExit_X],HouseInfo[i][hExit_Y],HouseInfo[i][hExit_Z]);
			
		}
		else InfoHouse[playerid] = -1;
	}
	if(HouseEntered[playerid] != -1)
	{
		new i = HouseEntered[playerid];
		if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z]))
		{
			if(GetPlayerVirtualWorld(playerid) == (i+50)) callcmd::exit(playerid);
		}
	}
	if(InfoBiz[playerid] != -1)
	{
		new i = InfoBiz[playerid];
		if(IsPlayerInRangeOfPoint(playerid,3.0,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]))
		{
			EnterBiz(playerid, i);
			InfoBiz[playerid] = -1;
			TextDrawHideForPlayer(playerid, HInfoBG);
			for(new j; j < 6; j ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][j]);
			TextDrawHideForPlayer(playerid, HInfoEnterDraw);
			TextDrawHideForPlayer(playerid, HInfoBuyDraw);
		}
		else InfoBiz[playerid] = -1;
	}
	if(BizEntered[playerid] != -1)
	{
		new i = BizEntered[playerid];
		if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bExit_X],BizInfo[i][bExit_Y],BizInfo[i][bExit_Z]))
		{
			BizEntered[playerid] = -1;
			SetPlayerInteriorEx(playerid,0);
			SetPlayerVirtualWorldEx(playerid,0);
			J_SetPlayerPos(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
			
		}
		if(BizInfo[i][bState] == 30 && GetSecondHandClotherID(playerid) != -1) SPDf(playerid, 15338, DIALOG_STYLE_MSGBOX, !"Подтверждение", "Купить", "Закрыть","{ffffff}Стоимость одежды из секонд-хенда: {ffff00}$%d\n\nВы действительно хотите приобрести одежду?", BizInfo[i][bProdPrice]);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1541.3546, 1644.3098, 11.4203)) SPD(playerid, 9619, DIALOG_STYLE_TABLIST_HEADERS, !"{73B461}Мастерская | Список услуг", !"{cccccc}Название услуги\t{cccccc}Стоимость\n{FFFFFF}{73B461}1. {ffffff}Улучшение аксессуаров/одежды\t{73B461}$100\n{73B461}2. {ffffff}Ремонт аксессуаров/одежды\t{73B461}$1000\n{73B461}3. {ffffff}Улучшение кастомных бронежилетов\t{73B461}$1000\n{73B461}4. {ffffff}Покраска аксессуаров\t{73B461}$50000\n", !"Выбрать", !"Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1474.5449, -1266.0454, 113.8103)) ShowMeria(playerid);
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1479.8489, -1272.7487, 114.8064)) SPD(playerid,6682,2,!"", !"{FE9DA7}>>>{FFFFFF} Оставить жалобу\n{EBDA60}<<<{FFFFFF} Читать жалобы", "Открыть", "Отмена");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1471.7279, -1271.7294, 113.8103)) SPD(playerid,0,2,!"Консультант по вопросам фермы", "- Посмотреть все фермы\n- Продать ферму", "Выбрать", "Закрыть");
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1471.9293, -1268.2134, 114.8103)) SPDf(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Реконструкция зданий", "Изменить", "Отмена", "Здание\tСтоимость/Собрано\t\n\n{FEF859}LSPD{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}Лотерейная{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}Отель Marina Vay Sands{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}San News{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}Вокзал{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}Госпиталь LS{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}\n{FEF859}Мэрия{FFFFFF}\t1500000000$ / {FE5959}%i${FFFFFF}", Reconstruction[0][ReconstructionMoney], Reconstruction[1][ReconstructionMoney], Reconstruction[2][ReconstructionMoney], Reconstruction[3][ReconstructionMoney], Reconstruction[4][ReconstructionMoney], Reconstruction[5][ReconstructionMoney], Reconstruction[6][ReconstructionMoney]);
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1478.9395, -1266.2124, 114.8103)) SPD(playerid,0,2,!" ", !"Подать заявление\nПосмотреть архив заявлений", !"Выбрать", !"Выход");
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//if(newkeys & 3 && )
	//SCMf(playerid, -1, "%i", newkeys);
	if(newkeys == 1) player_CheckCaptcha(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(PRESSED(512)) callcmd::style(playerid);
		else if(newkeys & 1 && IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"InteractionMenu\"]');");
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.radial_menu.setInteractionMenuItems', '[[\"OpenBag\",\"OpenCap\",\"OpenCar\",\"OpenGlass\",\"FuelCar\",\"SFuelCar\",\"ONLight\",\"PaintCar\"]]');");
			SetFocusBrowser(playerid, svelte, true);
		}
	}
	//alt
	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
        || ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
        || ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
        && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) SetTimerEx("WalkAnim",200,0,"d",playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PRESSED(2))
	{
		CountH{playerid}++;
		if(CountH{playerid} == 2)
		{
			CountH{playerid} = 0;
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			foreach(new i: PlayerPlayersStream[playerid])
			{
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || i == playerid || IsPlayerToRaceID[i] != -1) continue;
			    if(IsPlayerInRangeOfPoint(i, 10.0, X, Y, Z))
				{
					IsPlayerToRaceID[playerid] = i;
					IsPlayerRacePresentCount[playerid] = 0;
					callcmd::gps(playerid);
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Выберите в пункте GPS, до куда хотите гоняться!");
					break;
				}
			}
		}
		else if(CountH{playerid} > 2) CountH{playerid} = 0; 
	}
    if(newkeys == 8 && !UseTurbo[playerid]) UseTurbo[playerid] = true;
    else if(oldkeys == 8 && UseTurbo[playerid]) UseTurbo[playerid] = false;
	//anti flood
	if(newkeys == KEY_WALK) KeyStateOnFoot_PressALT(playerid);
	if(PRESSED(KEY_WALK) || newkeys & 2) GarageMovement(playerid),Parking(playerid);
	if(oldkeys == KEY_SPRINT && GetPVarType(playerid, "TimerDance") != PLAYER_VARTYPE_NONE) SPD(playerid, 3768, 0, "Остановка тренировки","{FFFFFF}Вы действительно хотите завершить тренировку раньше времени?","Завершить","Нет");
	if(TeamDuty{playerid} == true && !IsAtGang(playerid) && !IsAtMafia(playerid))
	{
		for(new i; i < sizeof(PostFrac); i++)
		{
			if(postowner[i] == playerid && !IsPlayerInRangeOfPoint(playerid, 30, PostFrac[i][XPost], PostFrac[i][YPost], PostFrac[i][ZPost]))
			{
				UpdateDynamic3DTextLabelTextf(postlabel[i], -1,"{FFFFFF}Пост: %s\n\n[{FAAC58}СВОБОДЕН{FFFFFF}]\n\nИспользуйте: ALT\n( Заступить на пост )", PostFrac[i][postname]);
				postowner[i] = -1;
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отошли слишком далеко от поста, вы прекратили работу.");
				break;
			}
		}
	}
	if(newkeys == 1024 && IsPlayerInRangeOfPoint(playerid, 2.0,1615.1844,2347.3032,695.3304) && OpenMP == true && !StartMP) 
	{
		if(TypeMP != true) //14 limit
		{
			new count, count2;
			foreach_player(i)
			{
				if(IsPlayerPlayMP[i] && !IsPlayerWarTeam[i]) count++;
				if(IsPlayerPlayMP[i] && IsPlayerWarTeam[i]) count2++;
			}
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{66CCFF}Голубая {FFFFFF}(%i/7)\n{FFCC33}Золотая {FFFFFF}(%i/7)", count, count2);
			SPD(playerid, 995, DIALOG_STYLE_LIST, !"Выберите команду", str_1, "Продолжить", "Отмена");
		}
		else
		{
			if(IsPlayerPlayMP[playerid]) return SCM(playerid,0xFFD700FF,!">>> {FFFFFF}Вы уже зарегистрированы на мероприятие, ожидайте начала!");
			new count;
			foreach_player(i) if(IsPlayerPlayMP[i]) count++;
			if(count == 4) return SCM(playerid, 0xFFD700FF,!">>> {FFFFFF}Все места уже кем-то заняты, вы можете покинуть мероприятие!");
			if(count == 3) SCM(playerid, 0xFFD700FF, !">>> {FFFFFF}Вот-вот начнется!");
			IsPlayerPlayMP[playerid] = true;
			SCM(playerid,0xFFD700FF,!">>> {FFFFFF}Вы успешно зарегистрировались на мероприятие, ожидайте начала!");
		}
	}
	if(BalloonObject[playerid] != -1)
    {
        if(newkeys == KEY_SPRINT) ProgressBalloonUpdate(playerid, 3);
        if(newkeys == KEY_WALK) ProgressBalloonUpdate(playerid, 2);
        if(newkeys == KEY_CTRL_BACK)
        {
            if(IsPlayerInRangeOfPoint(playerid, 0.5, BalloonObjectPos[playerid][0],BalloonObjectPos[playerid][1],BalloonObjectPos[playerid][2]))
            {
                switch(ProgressBalloon[playerid])
                {
                    case 0:
                    {
                        ProgressBalloon[playerid] = random(3)+1;
                        ShowBalloonTD(playerid);
                        TogglePlayerControllable(playerid, false);
                    }
                    case 1: ProgressBalloonUpdateYeah(playerid);
                    default: GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~r~FAILED", 500, 3);
                }
            }
        }
    }
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(animan{playerid})
		{
		    ClearAnimations(playerid);
		    animan{playerid} = false;
		    TextDrawHideForPlayer(playerid, StopAnimation);
			DeletePVar(playerid, !"P_SEAT_STATUS");
		}
		if(selfi{playerid})
		{
	        TogglePlayerControllable(playerid, 1);
	        SetCameraBehindPlayer(playerid);
	        RemovePlayerAttachedObject(playerid, 0);
	        J_ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
		    selfi{playerid} = false;
		    TextDrawHideForPlayer(playerid, StopAnimation);
		}
	}
	/*if(newkeys == 40 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(!IsABike(carid) && !IsAVelik(carid) && !IsAPlane(carid))
	    {
			new number = GetVehicleID(carid);
			if(IsAOwnableCar(number))
			{
				if(SearchModification(number, 803) != 0 && vTemp[carid][vEngine])
				{
					if(launchdone[playerid]) return 1;
					for(new i; i < 9; i++) TextDrawShowForPlayer(playerid, launch[i]);
					launchdone[playerid] =
					skorostb[playerid] = 1;
					launchtimer[playerid] = SetTimerEx("daunmen", 1, 1, "d", playerid);
					pEngine{playerid} = 0;
				}
			}
		}
	}*/
    /*if(oldkeys == 40 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
	    new carid = GetPlayerVehicleID(playerid);
	    if(!IsABike(carid) && !IsAVelik(carid) && !IsAPlane(carid))
	    {
			new number = GetVehicleID(carid);
			if(IsAOwnableCar(number))
			{
				if(SearchModification(number, 803) != 0 && vTemp[carid][vEngine])
				{
					if(!launchdone[playerid]) return 0;
					if(LauncherSize[playerid] >= 50.000000) LauncherSize[playerid] = 50.000000;
					if(skorostb[playerid]) PlayerPlaySound(playerid, 28000, 0.0, 0.0, 0.0), SetVehicleSpeed(GetPlayerVehicleID(playerid),GetPlayerVehicleSpeedZ(playerid)+LauncherSize2[playerid]/8);
					KillTimer(launchtimer[playerid]);
					launchtimer[playerid] = SetTimerEx("LaunchBack", 1, 1, "d", playerid);
					skorostb[playerid] = 0;
					pEngine{playerid} = 1;
				}
			}
		}
    }*/
	if(InvTimer{playerid} != 255)
	{
		if(newkeys & 16)
		{
			TogglePlayerControllable(playerid, true);
			SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
			InvTimer{playerid} = 255;
			SaveChangeInv(playerid);
		}
		if(PRESSED(32)) SetPVarInt(playerid, !"SpeedInv", 1);
		if(RELEASED(32)) SetPVarInt(playerid, !"SpeedInv", 0);
		if(PRESSED(KEY_WALK)) SetPVarInt(playerid, !"SpeedInv", 2);
		if(RELEASED(KEY_WALK)) SetPVarInt(playerid, !"SpeedInv", 0);
	}
 	if(PRESSED(KEY_YES)) ShowInventory(playerid);
	if(PRESSED(KEY_NO) && !IsPlayerInAnyVehicle(playerid))
	{
	    for(new i; i != sizeof(autoBazarInfo); i++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazar2PosX], autoBazarInfo[i][autoBazar2PosY], autoBazarInfo[i][autoBazar2PosZ]))
	        {
				if(playerid == autoBazarInfo[i][autoBazarplayerid])
	                return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не можете купить свой же транспорт!");

	            if(autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
	                return 0;

	            pTemp[playerid][pSellCar] = i;
                func_OwnablePass(playerid, i, 2221, "Купить", "Отмена");
	        }
	    }
	}
	if (newkeys == KEY_SPRINT && !IsPlayerInAnyVehicle(playerid))
	{
		for(new i; i != MAX_COTTON_OBJECT; i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 3.0, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ]))
            {
                if(GetPVarInt(playerid, !"cotton_flood") > global_time) return 0;
				if(!OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть урожай, нужно купить у Эмилио инструмент (/gps - Разное - Ферма)");
				if(!CottonInfo[i][cottonStatus]) continue;
	            CottonInfo[i][cottonScore] --;

				J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				InvAdd(playerid, 653, 1, 0);
				GameTextForPlayer(playerid, !"Cotton + 1", 0, 1);
				f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[i][cottonScore]);
	            UpdateDynamic3DTextLabelText(CottonInfo[i][cottonLabel], -1, str_2);
				SetPVarInt(playerid, !"cotton_flood", global_time + 1);
	            if(CottonInfo[i][cottonScore] <= 0)
	            {
					CottonInfo[i][cottonStatus] = false;

		            CottonInfo[i][cottonSecund] = 180;
		            DestroyDynamic3DTextLabel(CottonInfo[i][cottonLabel]);
		            DestroyDynamicObject(CottonInfo[i][cottonObject]);
		            CottonInfo[i][cottonObject] = 0;
		            SetTimerEx("CottonProgressGrow", 65000, false, "i", i);
				}
				break;
            }
		}
		for(new i; i != MAX_LINEN_OBJECT; i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 3.0, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ]))
            {
                if(GetPVarInt(playerid, !"linen_flood") > global_time) return 0;
				if(!OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть урожай, нужно купить у Эмилио инструмент (/gps - Разное - Ферма)");
				if(!LinenInfo[i][linenStatus]) return 1;
	            LinenInfo[i][linenScore] --;

				J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				InvAdd(playerid, 652, 1, 0);
				GameTextForPlayer(playerid, !"Linen + 1", 0, 1);
				f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[i][linenScore]);
	            UpdateDynamic3DTextLabelText(LinenInfo[i][linenLabel], -1, str_2);
				SetPVarInt(playerid, !"linen_flood", global_time + 1);

	            if(LinenInfo[i][linenScore] <= 0)
	            {
					LinenInfo[i][linenStatus] = false;

		            LinenInfo[i][linenSecund] = 180;
		            DestroyDynamic3DTextLabel(LinenInfo[i][linenLabel]);
		            DestroyDynamicObject(LinenInfo[i][linenObject]);
		            LinenInfo[i][linenObject] = 0;
		            SetTimerEx("@__LinenProgressGrow", 65000, false, "i", i);
				}
				break;
            }
		}
		for(new i; i < sizeof(MineInfo); i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 1.2, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ]))
            {
				if(!MineInfo[i][mineStatus]) continue;
				if(!OBJECT_SLEGAN[playerid] && !UseAksSlot_3{playerid}) return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть полезное ископаемое, нужно купить у Лари инструмент (/gps - Разное - Шахта)");
				ShaxtaTimer{playerid} = true;
		        player_Global_Int[playerid][111] = i;
				animan{playerid} = true;
				ApplyAnimation(playerid, !"BASEBALL", "Bat_4", 4.1, 1, 1, 1, 1, 0, 1);
            }
		}
	}
    if(newkeys == KEY_CROUCH)
	{
		callcmd::opengate(playerid);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !RepairVehicleStatus[playerid])
		{
			new Float:hpveh;
			GetVehicleHealth(GetPlayerVehicleID(playerid), hpveh);
			for(new i ; i < sizeof(CoordsRepairVehicle); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, CoordsRepairVehicle[i][0], CoordsRepairVehicle[i][1], CoordsRepairVehicle[i][2]))
				{
					if(hpveh > 900.0) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}С вашим транспортом не требует ремонта!");
					SPD(playerid, 15424, DIALOG_STYLE_MSGBOX, !"Авто Сервис", !"{ffffff}Вы действительно хотите провести ремонтные работы с вашим автомобилем?\n{ffff00}Стоимость ремонта: $50000", !"Согласен", !"Отмена");
					player_Global_Int[playerid][0] = i;
					break;
				}
			}
		}
	}
    if(PRESSED(KEY_CTRL_BACK)) callcmd::opengate(playerid);
	if(newkeys == KEY_CROUCH)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.0, 1147.487793, -1544.051270, 1010.305725))
		{
            new g = GetPlayerInterior(playerid);
		    new w = GetPlayerVirtualWorld(playerid);
		    if(g == 2 && w == 1) SPD(playerid,185,DIALOG_STYLE_LIST,!"Выберите еду",!"{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$",!"Выбор",!"Отмена");
		}
		else if(IsAtGasStation(playerid)) ShowPlayerInterface_GasStation(playerid);
	    else if(IsAArendCar(GetPlayerVehicleID(playerid)))
	    {
			if(ArendInfo[GetArendCarID(GetPlayerVehicleID(playerid))][aID] == 578)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 5.0, -1733.3938, 187.7363, 3.5547))
			    {
				    if(Proviziya{playerid})
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже загрузили машину!");

				    Proviziya{playerid} = true;
				    EnableGPSForPlayer(playerid, 1830.3701, 416.7932, 20.1436);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно загрузили машину провизией.\nОтправляйтесь к {FABA2F}складу{FFFFFF} семьи для разгрузки!\nПункт назначения {FABA2F}отмечен{FFFFFF} на миникарте.\n\n", !"Принять", !"");
				}
			    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1830.3701, 416.7932, 20.1436))
			    {
				    if(!Proviziya{playerid})
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваша машина не загружена!");

				    Proviziya{playerid} = false;
					/*QuestProgress[playerid][11] ++;
					if(QuestProgress[playerid][11] >= 3) {
 				        NextStapQI(playerid, 11);
				        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно разгрузили нужное количество провизии для вашей семьи.\nВозвращайтесь к {FABA2F}Нейтону {FFFFFF}чтобы получить награду\n", !"Принять", !"");
					    return 1;
					}
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно разгрузили машину с провизией.\nНа миникарте {FABA2F}отмечено {FFFFFF}место следующей загрузки!\n\n", !"Принять", !"");
					EnableGPSForPlayer(playerid, -1733.3938, 187.7363, 3.5547);*/
				}
			}
		}
		for(new i; i != sizeof(autoBazarInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]))
			{
				if(autoBazarInfo[i][autoBazarType] == 1 && (!IsACar(GetPlayerVehicleID(playerid)) && !IsABike(GetPlayerVehicleID(playerid)) && !IsAVelik(GetPlayerVehicleID(playerid)))) return 0;
				else if(autoBazarInfo[i][autoBazarType] == 2 && !IsAPlane(GetPlayerVehicleID(playerid))) return 0;
			    if(IsPlayerInHisVehicle(playerid) && autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
			    {
			    	//if(pTemp[playerid][pSellCar] != -1) return 0;
			        pTemp[playerid][pSellCar] = i;
			    	SPD(playerid, 2218, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите желаемую цену за транспорт!", !"Выбрать", !"Отмена");
			        return 1;
			    }
			    else if(IsPlayerInHisVehicle(playerid) && autoBazarInfo[i][autoBazarplayerid] == playerid)
			    {
			        SPD(playerid, 2220, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы хотите снять транспорт с продажи?", !"Да", !"Отмена");
			        return 1;
			    }
			}
		}
	}
	if(PItreasure[playerid][tID] != -1)
	{
		if(PRESSED(65536) && PItreasure[playerid][tKeys] || PRESSED(131072) && !PItreasure[playerid][tKeys])
		{
			foreach(new i: TREASURE)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z])) treasureProgress(playerid,1);
			}
		}
	}
	if(newkeys == 16) RemoveRc(playerid);
    if(PRESSED(KEY_JUMP) && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && TwinTurbo[GetPlayerVehicleID(playerid)][Engine] && TwinTurbo[GetPlayerVehicleID(playerid)][cStatus] && GetPlayerVehicleSpeed(playerid) >= 50) SMD(playerid, "tt"),SetVehicleSpeed(GetPlayerVehicleID(playerid),GetPlayerVehicleSpeed(playerid)/2);
	if(newkeys & KEY_SPRINT)
	{
		if(RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime]) SpecPlayer(playerid);
	}
	if(newkeys == KEY_CROUCH)
	{
     	for(new i; i < OWNABLEBIZES; i++)
		{
		    if(!GetString(BizInfo[i][bOwner],"The State"))
	    	{
			    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
				{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,10,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]))
				        {
				            if(PI[playerid][pJob]==3)
				            {
								if(vTemp[GetPlayerVehicleID(playerid)][vJob]==3)
								{
						            f(str_2,sizeof(str_2),"{FFFFFF}Бизнес закупает {B7A51B}%i{FFFFFF} едениц товара. Стоимость 1-го продукта: {B7A51B}%i$.{FFFFFF}\nВведите количество товара которое хотите продать бизнесу.",BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
						            SPD(playerid,8762,1,"",str_2,"Принять","Отмена");
						            dBiz[playerid]=i;
						            break;
								}
							}
				        }
					}
				}
			}
		}
		if(PI[playerid][pJob]==3 && vTemp[GetPlayerVehicleID(playerid)][vJob]==3 && IsPlayerInRangeOfPoint(playerid, 6.0, -48.8906,26.7353,3.1172))
		{
		    SPD(playerid,2281,2,"","{42B02C}-{FFFFFF} Закупить продукты\n{42B02C}-{FFFFFF} Вернуть продукты","Принять","Отмена");
   			return 1;
		}
		if(PI[playerid][pJob]==3 && vTemp[GetPlayerVehicleID(playerid)][vJob]==3 &&IsPlayerInRangeOfPoint(playerid, 6.0, 1976.6340,-2029.4700,13.5469))
		{
		    SPD(playerid,2291,2,"","{42B02C}-{FFFFFF} Закупить груз\n{42B02C}-{FFFFFF} Вернуть груз","Принять","Отмена");
   			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2224.5222,-2461.0154,13.4466) || IsPlayerInRangeOfPoint(playerid, 5.0, 1124.2776,1962.4742,10.8203))
		{
			if(PI[playerid][pJob] == JOB_SCRAPER)
		    {
		        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		        {
		        	new carid = GetPlayerVehicleID(playerid);
					if(vTemp[carid][vJob] == JOB_SCRAPER)
					{
			        	if(CarScrap[carid] == -1)
			        	{
						    DestroyDynamicObject(CarScrap[carid]);
							CarScrap[carid] = CreateDynamicObject(3594, 0, 0, 0, 0, 0, 0);
							AttachDynamicObjectToVehicle(CarScrap[carid], carid, 0, -2, 1.4, -15, 0, 183);
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
							//Streamer_Update(playerid);
							SPD(playerid, 0, 0, "Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Ок", "");
							SetPVarInt(playerid,"metal",global_time+150);
						}
						else
						{
							SPD(playerid, 0, 0, "Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Ок", "");
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
						}
						return 1;
					}
				}
		    }
		    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не развозчик металлолома");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2052.71, -106.53, 35.06))
        {
    		new vehid = GetPlayerVehicleID(playerid);
    		if(vTemp[vehid][vTeam] == TEAM_LICENSERS) J_SetVehiclePos(vehid, -2052.90, -98.77, 34.90);
    	}
    	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2052.90, -98.77, 34.90))
    	{
            new vehid = GetPlayerVehicleID(playerid);
    		if(vTemp[GetPlayerVehicleID(playerid)][vTeam] == TEAM_LICENSERS) J_SetVehiclePos(vehid, -2052.71, -106.53, 35.06);
     	}
	}

    if(newkeys & KEY_WALK && oldkeys & KEY_NO) return callcmd::menu(playerid);
    if(IsPlayerInRangeOfPoint(playerid, 1.0, 2000.3831,1139.0485,1038.6882 )) callcmd::ekonom(playerid);
	if(PRESSED(KEY_FIRE))
	{
	    if(GetPlayerWeapon(playerid) == 41)
	    {
	        foreach(new car : PlayerVehiclesStream[playerid])
	        {
				new Float:XYZ[3];
			    GetVehiclePos(car,XYZ[0],XYZ[1],XYZ[2]);
		        if(IsPlayerInRangeOfPoint(playerid,2,XYZ[0],XYZ[1],XYZ[2]))
		        {
			        if(GetPlayerWeapon(playerid) == 41)
				    {
				        if(vTemp[car][vTeam]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете покрасить эту машину!");
				     	if(IsPlayerInAnyVehicle(playerid))return 0;
			    	    if(GetPVarInt(playerid, !"balon") == 0 || GetPVarInt(playerid, !"balon1") == 0 ) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не выбрали цвет для покраски или у вас нет балончика!");
			    	    new number = GetVehicleID(car);
			    	    if(IsPlayerHaveCar(playerid, number) != 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш автомобиль!");
		     	 		SetPVarInt(playerid, !"ProcessColor", GetPVarInt(playerid, !"ProcessColor") + 1);
		     	 		new ProcessColor = GetPVarInt(playerid, !"ProcessColor");
		     	 		GameTextForPlayer(playerid, (str_f("Complated %i/30", ProcessColor)), 700, 3);
		    			if(ProcessColor == 30)
		    			{
		     		        DeletePVar(playerid, !"ProcessColor");
		    				ChangeVehicleColor(car, GetPVarInt(playerid,!"balon"), GetPVarInt(playerid,!"balon1"));
			    			CarInfo[number][cColor_1] = GetPVarInt(playerid,!"balon");
			    			CarInfo[number][cColor_2] = GetPVarInt(playerid,!"balon1");
			    			UpdateDataInt("ownable","Color_1", CarInfo[number][cColor_1], CarInfo[number][cID],"=");
			    			UpdateDataInt("ownable","Color_2", CarInfo[number][cColor_2], CarInfo[number][cID],"=");
			    		}
		    			return 1;
		    		}
	    		}
	    	}
		}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(GetPlayerState(playerid) == 2)
	    {
			if(GetPlayerState(playerid) == 2)
			{
				if(newkeys & KEY_SUBMISSION)
				{
				    switch(vTemp[carid][vJob])
				    {
				        case 1: SPD(playerid,280+5,0,"Работодатель","Вы действительно хотите завершить?","Да","Нет");
				        case 5: callcmd::taxi(playerid);
				    }
				}
			}
			if(PRESSED(KEY_NO)) callcmd::engine(playerid);
		}
	}
	else
	{
	    if(PRESSED(KEY_NO))
	    {
			if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
			{
			    new target = TazerPlayer[playerid];
			    if(IsPlayerConnectEx(target))
			    {
				    if(ProxDetectorS(1.5, playerid, target, 1))
				    {
				        callcmd::cuff(playerid, IntToStr(target));
				        return 1;
				    }
			    }
			    else TazerPlayer[playerid] = INVALID_PLAYER_ID;
			}
         	if(PI[playerid][pHeal] != false)
	        {
             	if(Healttime[playerid]>global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	            if(!PlayerLie[playerid])
	            {
                    for(new i; i < sizeof(HealInfo); i ++)
                    {
		                if(IsPlayerInRangeOfPoint(playerid,1,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2]) && GetPlayerVirtualWorld(playerid)==HealInfo[i][hWorld])
				        {
				            if(HealInfo[i][hOwnerID] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Эта койка занята!");
							UpdateDynamic3DTextLabelTextf(HealText[i],-1,"Койка{FF0000} [Занята]\n\n{FF9900}Пациент: {9ACD32}%s", PN(playerid));
							J_SetPlayerPos(playerid,HealInfo[i][hBed][0],HealInfo[i][hBed][1],HealInfo[i][hBed][2]);
                            J_ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 1, 1, 1, 1, 0, 1);
                            SetPlayerFacingAngle(playerid,HealInfo[i][hBed][3]);
                            PlayerBed[playerid] = i;
							PlayerLie[playerid] = true;
							HealInfo[i][hOwnerID] = playerid;
							SCM(playerid, COLOR_LIME, !"[Информация] {FFFFFF}Вы заняли койку. Чтобы встать с неё нажмите N ещё раз");
							Healttime[playerid]=global_time+5;
							break;
				        }
			        }
	            }
	            else
	            {
	                Healttime[playerid]=global_time+5;
	                new bed = PlayerBed[playerid];
	                Controllable{playerid} = true;
					TogglePlayerControllable(playerid, true);
					J_SetPlayerPos(playerid,HealInfo[bed][hCP][0],HealInfo[bed][hCP][1],HealInfo[bed][hCP][2]);
     				CheckBed(playerid);
					SetPlayerTimer(playerid, "ClearAnim", (GetPlayerPing(playerid)*2)+100, false);
	            }
	        }
	        else if(InfoHouse[playerid] != -1)
	        {
	            new house = InfoHouse[playerid];
				new bool:cont=false;
			    if(HouseInfo[house][hCost] != 0) { if(GetMoney(playerid) >= HouseInfo[house][hCost]) cont = true; }
				else if(HouseInfo[house][hCost] == 0) { if(PI[playerid][pVirMoney]>=12000) cont = true; }
	            if(IsPlayerInRangeOfPoint(playerid,3.0,HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]))
		    	{
	           	 	if(IsValidPassport(playerid))
			    	{
			    	    if(GetPlayerPeakHouse(playerid))
			    	    {
					        if(GetString(HouseInfo[house][hOwner],"The State"))
				     	    {
              					if(cont == true) CreateCaptcha_BOT(playerid, 1);
			     	        	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				 			}
		     	        	else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот дом уже куплен");
		     	        }
		     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF} - Вы не можете приобрести больше домов! Покупайте улучшение 'Больше недвижимости' чтобы иметь до 5-ёх домов!");
					}
	     	        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нет паспорта, получить его можно в мэрии");
	     	    }
	     	    else InfoHouse[playerid] = -1;
	        }
	        else if(InfoBiz[playerid] != -1)
	        {
	            new biz = InfoBiz[playerid];
	            if(IsPlayerInRangeOfPoint(playerid,3.0,BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]))
		    	{
		        	if(GetPlayerPeakBiz(playerid))
		        	{
				        if(GetString(BizInfo[biz][bOwner],"The State"))
			     	    {
       						if(GetMoney(playerid) >= BizInfo[biz][bCost]) CreateCaptcha_BOT(playerid, 2);
			     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
	     	        }
					else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
	     	    }
	     	    else InfoBiz[playerid] = -1;
	        }
			else if(IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4139, 792.5835, 1500.9094)) SPD(playerid, 15276, DIALOG_STYLE_LIST, !"Выберите операцию", !"Продать BTC\nКупить BTC", !"Выбрать", !"Закрыть");
            else if(IsPlayerInRangeOfPoint(playerid, 2.5, -2683.9232, 807.4161, 1500.9094) ||
            IsPlayerInRangeOfPoint(playerid, 2.5, -2676.5600, 807.4161, 1500.9094) ||
            IsPlayerInRangeOfPoint(playerid, 2.5, -2669.0400, 807.4161, 1500.9094) ||
            IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4729, 805.8691, 1500.9094) ||
            IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4665, 799.2879, 1500.9094) ||
            IsPlayerInRangeOfPoint(playerid, 2.0, 1519.1604, 1270.7262, 11.0067) ||
            IsPlayerInRangeOfPoint(playerid, 2.0, 1519.2792, 1273.6433, 11.0067)||
            IsPlayerInRangeOfPoint(playerid, 2.0, 1522.7191, 1277.0123, 11.0067)||
            IsPlayerInRangeOfPoint(playerid, 2.0, 951.8005, 2458.6746, 1601.9771) ||
            IsPlayerInRangeOfPoint(playerid, 2.0, 954.9710,2463.5288,1601.9771) ||
            IsPlayerInRangeOfPoint(playerid, 2.0, 946.6893,2456.3723,1601.9771))return ShowBankMenu(playerid);
            else if(IsAtBankomat(playerid,2.0)) return ShowBankMenu(playerid,false);
			else
			{
				if(BizEntered[playerid] != -1)
				{
					if(BizInfo[BizEntered[playerid]][bState] == 2) if(IsPlayerInRangeOfPoint(playerid, 2.0, 2580.1340,1424.8770,1800.9688)) SPD(playerid, 103, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать", !"Выбор", !"Отмена");
    			 	else if(BizInfo[BizEntered[playerid]][bState] == 6) if(IsPlayerInRangeOfPoint(playerid, 3.0, 665.9590,-567.7969,1700.7394)) ShowBuyMenu(playerid, 4);
				}
	        }
	        return 1;
	    }
	}
    if(GetPlayerWeapon(playerid)==9)
    {
        if(!IsPlayerInRangeOfPoint(playerid,100,585.11108, 246.06941, 16.49663) && !IsPlayerInRangeOfPoint(playerid,20,1045.4690,-312.4203,73.9931))
        {
            SPD(playerid,0,0,!"",!"{FFFFFF}Вы используете бензопилу не по назначению! Использовать ее вы можете в месте где растут ёлки!","Принять","");
        }
    }
    return 1;
}
stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz){
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw);
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}
stock SearchFreeNumPhone(num=0)
{
	if(!num) num = random(8999999)+1000000;
	mysql_queryf_fix(mysql, "SELECT `TelNum` FROM `"TABLE_ACCOUNTS"` WHERE `TelNum` = '%i' LIMIT 1;", true, num);
	new answer = cache_num_rows();
	cache_delete(result1);
	if(!answer) return num;
	else return -1;
}
public: RepairPlayerVehicle(playerid)
{
	if(GetPlayerVehicleID(playerid) < 1) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerInRangeOfPoint(playerid, 5.0, CoordsRepairVehicle[player_Global_Int[playerid][0]][0], CoordsRepairVehicle[player_Global_Int[playerid][0]][1], CoordsRepairVehicle[player_Global_Int[playerid][0]][2]))
	{
		if(PI[playerid][pMoney] < 50000) return CancelRepairPlayerVehicle(playerid), SCM(playerid, COLOR_GREY, !"Работа механиков была прервана, похоже они заметили что вы не способны оплатить ремонт!");
		GiveMoney(playerid, -50000);
		GiveBizMoney(playerid, 50000, 36);
		J_RepairVehicle(GetPlayerVehicleID(playerid));
		SCM(playerid,COLOR_GREEN,!"Ремонт успешно выполнен! Механики взяли за работу: {ffffff}$50000");
	}
	return CancelRepairPlayerVehicle(playerid);
}
stock CancelRepairPlayerVehicle(playerid)
{
	player_Global_Int[playerid][0] = 0;
	for(new i; i < 4; i++)
	{
		DestroyDynamicActor(RepairVehicleActor[playerid][i]);
		RepairVehicleActor[playerid][i] = -1;
	}
	RepairVehicleStatus[playerid] = false;
	TogglePlayerControllable(playerid, true);
	return 1;
}
/*
+919569908051;9569908051
+919569512220;9569512220
+919569613140;9569613140
+919569236788;9569236788
+919569639802;9569639802
*/
stock SearchFirstReconstructionPickup(playerid)
{
	new id = -1;
	for(new i; i < sizeof Reconstruction; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, Reconstruction[i][ReconstructionX], Reconstruction[i][ReconstructionY], Reconstruction[i][ReconstructionZ]))
		{
			id = i;
			break;
		}
	}
	return id;
}
cmd:gc(playerid, params[])
{
	if(!IsAtGang(playerid)) return 1;
    if(GetTeamID(playerid) == 0) return 0;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:str[100]; else return SCM(playerid, COLOR_RED, !"Используй: /gc [text]");
    if(GetPVarInt(playerid,"vr")>global_time) return SCM(playerid,COLOR_RED, !"[Ошибка] {ffffff}Отправлять сообщения в этот чат, можно раз в 3 секунды!");
    foreach(new i: Player)
    {
    	if(!IsAtGang(i)) continue;
    	SCMf(i, TeamColors[GetTeamID(playerid)], "[GHETTO] [%s] %s {ffff00}%s[%i]: {ffffff}%s",global_OrgInfo[GetTeamID(playerid)][g_oName], GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,str);
    }
    SetPVarInt(playerid,"vr",global_time+3);
    return 1;
}
static const Float:s_WeaponDamage[] = {
	1.0, // 0 - Fist
	1.0, // 1 - Brass knuckles
	1.0, // 2 - Golf club
	1.0, // 3 - Nitestick
	1.0, // 4 - Knife
	1.0, // 5 - Bat
	1.0, // 6 - Shovel
	1.0, // 7 - Pool cue
	1.0, // 8 - Katana
	1.0, // 9 - Chainsaw
	1.0, // 10 - Dildo
	1.0, // 11 - Dildo 2
	1.0, // 12 - Vibrator
	1.0, // 13 - Vibrator 2
	1.0, // 14 - Flowers
	1.0, // 15 - Cane
	24.5, // 16 - Grenade
	0.0, // 17 - Teargas
	1.0, // 18 - Molotov
	9.9, // 19 - Vehicle M4 (custom)
	46.2, // 20 - Vehicle minigun (custom)
	82.5, // 21 - Vehicle rocket (custom)
	8.25, // 22 - Colt 45
	6.6, // 23 - Silenced
	23.1, // 24 - Deagle 46.2
	7.3, // 25 - Shotgun
	7.3, // 26 - Sawed-off
	4.95, // 27 - Spas
	6.6, // 28 - UZI
	8.25, // 29 - MP5
	5.2, // 30 - AK47
	4.9, // 31 - M4
	6.6, // 32 - Tec9
	24.75, // 33 - Cuntgun
	25.25, // 34 - Sniper
	82.5, // 35 - Rocket launcher
	82.5, // 36 - Heatseeker
	1.0, // 37 - Flamethrower
	46.2, // 38 - Minigun
	82.5, // 39 - Satchel
	0.0, // 40 - Detonator
	0.33, // 41 - Spraycan
	0.33, // 42 - Fire extinguisher
	0.0, // 43 - Camera
	0.0, // 44 - Night vision
	0.0, // 45 - Infrared
	0.0, // 46 - Parachute
	0.0, // 47 - Fake pistol
	2.64, // 48 - Pistol whip (custom)
	9.9, // 49 - Vehicle
	330.0, // 50 - Helicopter blades
	82.5, // 51 - Explosion
	1.0, // 52 - Car park (custom)
	1.0, // 53 - Drowning
	165.0  // 54 - Splat
};
enum infogps_
{
	igID,
	igType,
	igName[30+34+34],
	Float:igX,
	Float:igY,
	Float:igZ,
};
static const InfoGPS[][infogps_] = {
	{0, 1, "[MG] Центр обменом имущества", 1288.5930175781,317.56021118164,19.55470085144},
	{1, 1, "[LS] Аэропорт", 1685.0552978516,-2329.7712402344,13.546899795532},
	{2, 1, "{FFAB00}[SF] Кинотеатр AZMAX{FFFFFF}", -2591.4794921875,162.18649291992,4.1623997688293},
	{3, 1, "[LS] Мэрия", 1495.1422119141,-1287.5870361328,14.509900093079},
	{4, 1, "[{7DF054}LS{FFFFFF}] Центр занятости/раздачи/благотворительности", 1289.0640869141,-1271.5159912109,13.539999961853},
	{5, 1, "[{7DF054}SF{FFFFFF}] Центр занятости/раздачи/благотворительности", -1492.1320800781,920.1572265625,7.1875},
	{6, 1, "[{7DF054}LV{FFFFFF}] Центр занятости/раздачи/благотворительности", 1879.1920166016,2290.5412597656,10.979900360107},
	{7, 1, "[LS] Больница", 1178.1593017578,-1323.1184082031,14.106300354004},
	{8, 1, "[SF] Больница", -2666.66796875,580.78570556641,14.460900306702},
	{9, 1, "[SF] Автошкола", -2027.4399414063,-73.713302612305,34.876800537109},
	{10, 1, "[LS] Вокзал (Unity Station)", 1755.9361572266,-1893.2239990234,13.556599617004},
	{11, 1, "[LS] Пирс", 369.86041259766,-2042.5201416016,7.6718997955322},
	{12, 1, "[LS] Центральный банк", 1481.0374755859,-1768.9549560547,18.792900085449},
	{13, 1, "[SF] Страховая компания", -1732.1070556641,789.99572753906,24.890600204468},
	{14, 1, "[LS] Штрафстоянка (Забрать машину)", 1626.7268066406,-1136.4168701172,23.906299591064},
	{15, 1, "[LS] Военкомат", 307.34271240234,-67.054496765137,1.4297000169754},
	{16, 1, "[SF] Военкомат", -1517.865234375,810.97180175781,7.1875},
	{17, 1, "[LV] Военкомат", 143.07029724121,1816.2119140625,17.766300201416},
	{18, 1, "[LS] Черный рынок", 2539.2019042969,-1461.4838867188,24.020700454712},
	{19, 1, "{FFF66C}[LS] Спортивный зал{FFFFFF}", 667.30651855469,-1858.126953125,5.4537000656128},
	{20, 1, "{FFF66C}[LV] Спортивный зал{FFFFFF}", 2095.5288085938,2493.2524414063,14.83899974823},
	{21, 1, "[SF] Церковь", -1989.8959960938,1117.8748779297,54.468799591064},
	{22, 1, "[RC] Полицейский участок", 631.92181396484,-571.94848632813,16.335899353027},
	{23, 1, "{FFAB00}[SF] Пирс/Скупка нефти", -2079.8149414063,1341.7283935547,7.1209001541138},
	{24, 1, "{BCE951}[RC]{FFFFFF} Станция тех. обслуживания", 191.10350036621,-240.41760253906,1.5780999660492},
	{25, 1, "{BCE951}[LV]{FFFFFF} Станция тех. обслуживания", -298.43121337891,1198.0184326172,19.74220085144},
	{26, 1, "[LV] Вокзал", 2798.6843261719,1313.4533691406,10.75},
	{27, 1, "[LV] Больница", 1641.8848876953,1833.5285644531,10.850799560547},
	{28, 1, "[LV] Штрафстоянка (Забрать машину)", 2474.7954101563,2513.2712402344,10.805600166321},
	{29, 1, "[LV] Полицейский участок", 2286.8361816406,2427.5805664063,10.820300102234},
	{30, 1, "[LV] Радиостанция", 2615.0793457031,1172.7882080078,10.762399673462},
	{31, 1, "[LV] Банковское отделение", 2375.5925292969,2308.5747070313,8.1406002044678},
	{32, 1, "[LV] Авиашкола", 2423.1008300781,1662.2064208984,10.820300102234},
	{33, 1, "[SF] Вокзал", -1994.0474853516,100.20559692383,27.539100646973},
	{34, 1, "[SF] Полицейский участок", -1629.0847167969,726.17401123047,14.130599975586},
	{35, 1, "[LS] Военная база", 2716.5886230469,-2404.9147949219,13.468700408936},
	{36, 1, "[SF] Авианосец", -1529.7744140625,484.69509887695,7.1796998977661},
	{37, 1, "[LV] Тюрьма строгого режима", -18.530500411987,2066.5546875,17.44529914856},
	{38, 1, "[LS] Радиостанция", 1627.8331298828,-1722.0529785156,13.53719997406},
	{39, 1, "[SF] Радиостанция", -1941.4007568359,459.77709960938,35.171901702881},
	{40, 1, "[SF] Информационный центр", -2240.7253417969, 576.07562255859, 35.171901702881},
	{41, 1, "[SF] Штрафстоянка", -1732.33203125,991.3623046875,17.589199066162},
	{42, 1, "[LS] Полицейский участок", 1550.7995605469, -1675.6131591797, 15.567500114441},
	{43, 1, "[LS] Салон 'Сотовая связь'", 562.11181640625, -1506.6832275391, 14.549300193787 },
	{44, 1, "[SF] Банковское отделение", -1705.4897460938, 788.49200439453, 24.890600204468 },
	{45, 1, "[LS] Апартаменты 'SIGNATURE'", 1791.9835205078, -1290.6491699219, 13.577799797058 },
	{46, 1, "[LS] Апартаменты 'LS TOWER'", 283.56469726563, -1630.4208984375, 33.320999145508 },

	{0, 2, "Найти ближайшую работу", 1970.6949462891, -1964.2099609375, 13.574199676514},
	{1, 2, "{039f83}Курьер Glovo (с 1-го уровня)", 1153.9869384766, -1427.1958007813, 15.796899795532},
	{2, 2, "{FDB24A}Фермерское предприятие (ФЕРМА)", 77.759696960449, 90.219398498535, 3.1171998977661},
	{3, 2, "Производственный цех (ЗАВОД)", 86.189300537109, -305.86080932617, 1.4219000339508},
	{4, 2, "Разгрузочная станция (ГРУЗЧИКИ)", 1970.6949462891, -1964.2099609375, 13.574199676514},
	{5, 2, "{FDB24A}Развозчики пиццы LS", 667.287109375, -1578.3436279297, 14.402600288391},
	{6, 2, "{FDB24A}Развозчики пиццы LV", 1735.5614013672, 2209.4924316406, 10.820300102234},
	{7, 2, "{70B63A}Железный порт ( Нужна лицензия на лодку )", 2868.9406738281, -1969.8216552734, 11.109399795532},
	{8, 2, "Найти другую работу (ДРУГИЕ РАБОТЫ)", 1289.0640869141, -1271.5159912109, 13.539999961853 },

	{0, 3, "[LS] Мусоровозы", 2234.3591308594,-2215.4282226563,13.546899795532},
	{1, 3, "[LV] Мусоровозы", 2235.5808105469,2773.1962890625,10.686499595642},
	{2, 3, "[LS] Металловозы", 2484.4130859375,-2541.2255859375,13.574600219727},
	{3, 3, "[LV] Металловозы", 1070.3298339844,1944.0189208984,10.820300102234},
	{4, 3, "[LS] База Дальнобойщиков", 2220.5732421875,-2660.5747070313,13.540900230408},
	{5, 3, "[SF] База Дальнобойщиков", -2258.3911132813,285.04840087891,35.320301055908},
	{6, 3, "[LV] База Дальнобойщиков", 1388.0080566406,1140.4080810547,10.820300102234},
	{7, 3, "{F0D331}[LS]{FFFFFF} Таксопарк", 1107.1778564453,-1740.9813232422,13.398400306702},
	{8, 3, "{F0D331}[LV]{FFFFFF} Таксопарк", 2167.4365234375,983.27941894531,10.674799919128},
	{9, 3, "[LS] Стоянка инкассаторов", 1390.4061279297,-1649.0325927734,13.373299598694},
	{10, 3, "[LV] Стоянка инкассаторов", 2420.4074707031,2285.1882324219,10.820300102234},
	{11, 3, "[LS] Продуктовозы", 925.67218017578,-1222.4194335938,16.977100372314},
	{12, 3, "[LV] Продуктовозы", 1608.1821289063,2282.4753417969,10.826600074768},
	{13, 3, "[LS] Пристань для рыбалки (квестовая линия)", 369.89660644531,-2042.3088378906,7.6718997955322},
	{14, 3, "[LS] Офис налоговой службы", 1530.5771484375,-1072.1591796875,25.0625},
	{15, 3, "{F0D331}[SF]{FFFFFF} Таксопарк", -2258.7890625,119.73709869385,34.991199493408},
	{16, 3, "[SF] Стоянка автобусов", -2198.7729492188,312.14538574219,34.990600585938},
	{17, 3, "[SF] Стоянка мусоровозов", -2487.1481933594,369.54339599609,35.121898651123},
	{18, 3, "[SF] Свалка", -1940.5479736328,-1790.3243408203,31.744699478149},
	{19, 3, "{95D753}[LS] Машины механиков", 1138.5881347656,-1677.6755371094,13.515899658203},
	{20, 3, "[SF] Машины механиков", -2276.0144042969,181.44230651855,34.78210067749},
	{21, 3, "[LV] Машины механиков", 2134.5986328125,952.666015625,10.411800384521},
	{22, 3, "[LS] Точка инкассации", 2439.884765625,2290.2590332031,10.820300102234},
	{23, 3, "[SF] Точка инкассации", 1408.0529785156,-1779.716796875,13.546899795532},
	{24, 3, "[LV] Точка инкассации", -2654.1101074219,376.02578735352,4.3334999084473},
	{25, 3, "{ff0066}[LS] Пожарный департамент", 1728.6527099609,-1478.8383789063,13.466199874878},
	{26, 3, "[SF] Пожарный департамент", -2014.4799804688,62.822101593018,29.572799682617},
	{27, 3, "[LV] Пожарный департамент", 1764.3156738281,2060.9450683594,10.976599693298},
	{28, 3, "[LS] Аэропорт", 1685.0552978516,-2329.7712402344,13.546899795532},
	{29, 3, "[SF] Аэропорт", -1424.8017578125,-290.17581176758,14.148400306702},
	{30, 3, "[LV] Аэропорт", 1666.9685058594,1421.6363525391,10.787599563599},
	{31, 3, "[LS] Стоянка автобусов", 1244.8747558594,-1831.4915771484,13.39879989624},
	{32, 3, "[LV] Стоянка автобусов", 2789.111328125,1281.4741210938,10.75},
	{33, 3, "[SF] Трамвайное депо", -2276.0407714844,535.40997314453,35.109798431396},
	{34, 3, "[LS] Депо электропоездов", 1743.0686035156,-1943.5728759766,13.569800376892},
	{35, 3, "[LS] Частная ферма", -301.26361083984,-1364.2897949219,8.5731000900269},
	{36, 3, "[LV] Дорожная служба", 1905.5573730469,625.43188476563,10.820300102234},
	{37, 3, "[SF] Продавцы хотдогов", -1666.6828613281,1292.8076171875,7.0391001701355},
	{38, 3, "[LV] Продавцы хотдогов", 914.51068115234,1901.1317138672,10.820300102234},
	{39, 3, "[SF] Машинист крана", -1747.2844238281,30.522300720215,3.5546998977661},

	{0, 4, "{81DAF5}[SF] Авторынок (продать/купить Б/У транспорт)", -2154.6989746094,-749.40802001953,32.023399353027},
	{1, 4, "{8E908E}[LS] Автосалон Эконом класса", -489.66760253906,-567.69702148438,23.939500808716},
	{2, 4, "{26B260}[LV] Автосалон Среднего класса", 948.33697509766,2183.1630859375,10.413599967957},
	{3, 4, "{EDAD2E}[SF] Автосалон Премиум класса/мототранспорт", -2665.6896972656,-59.878799438477,3.9226999282837},
	{4, 4, "{ffff00}[LV] Автосалон Luxe класса", -506.01049804688,2593.171875,53.431098937988},
	{5, 4, "{DD564D}[LV] Авиарынок", 278.16738891602,2527.0061035156,16.799900054932},
	{6, 4, "{D63227}[LS] Лодочная", 212.73330688477,-1884.9226074219,1.4046000242233},
	{7, 4, "[SF] Салон трейлеров", -2071.7485351563,-2445.7189941406,30.625},
	{8, 4, "[LV] Авторынок поддельных авто", -2466.212890625,2250.1025390625,4.8010001182556},
	{9, 4, "[LS] Автомобильный аукцион", 354.73889160156,-1779.4808349609,5.3913998603821},

	{0, 5, "search", 0.0,0.0,0.0},
	{1, 5, "hotel", 487.33331298828,-1639.4118652344,23.703100204468},
	{2, 5, "hotel", 325.4128112793,-1514.9976806641,36.032501220703},
	{3, 5, "hotel", 1498.3958740234,-1580.5263671875,13.550800323486},
	{4, 5, "hotel", 1140.3577880859,-1586.9025878906,13.559200286865},
	{5, 5, "hotel", 1286.8001708984,-1329.3414306641,13.554900169373},
	{6, 5, "hotel", 2747.5122070313,-1638.2976074219,13.065999984741},
	{7, 5, "hotel", 1544.33984375,-1265.0649414063,17.405599594116},
	{8, 5, "hotel", 1789.2274169922,-1383.2557373047,15.757800102234},
	{9, 5, "hotel", 201.24859619141,-94.978202819824,1.5549000501633},
	{10, 5, "hotel", -2178.6489257813,-42.181400299072,35.320301055908},
	{11, 5, "hotel", -2172.458984375,252.12530517578,35.339500427246},
	{12, 5, "hotel", -2002.7646484375,-1020.2697753906,32.171901702881},
	{13, 5, "hotel", -2720.63671875,127.67939758301,7.0391001701355},
	{14, 5, "hotel", -2485.4377441406,2272.7768554688,4.9843997955322},
	{15, 5, "hotel", 1974.7247314453,1076.0567626953,10.820300102234},
	{16, 5, "hotel", 2239.0478515625,1285.7824707031,10.820300102234},
	{17, 5, "hotel", 2127.5600585938,2379.7580566406,10.820300102234},
	{18, 5, "hotel", 2388.9970703125,2467.3203125,10.820300102234},
	{19, 5, "hotel", 2628.021484375,2349.3173828125,10.820300102234},
	{20, 5, "hotel", 2232.7922363281,-1785.69140625,13.560000419617},
	{21, 5, "hotel", 2275.8547363281,-1785.7254638672,13.546899795532},
	{22, 5, "hotel", 13.559900283813,1220.0190429688,19.33930015564},
	{23, 5, "hotel", -2192.2229003906,-2255.35546875,30.693700790405},
	{24, 5, "hotel", 2064.5903320313,2172.3288574219,10.820300102234},
	{25, 5, "hotel", 1840.5123291016,2156.2980957031,10.820300102234},
	{26, 5, "hotel", -2426.2446289063,338.02389526367,36.992198944092},
	{27, 5, "hotel", 995.8173828125,-1159.3568115234,23.859399795532},
	//5 clear
	{0, 6, "[LS] Свалка", 2200.9934082031,-1977.1193847656,13.557600021362},
	{1, 6, "[LV] Свалка", 178.40989685059,1101.4073486328,16.449800491333},
	{2, 6, "[LV] Старый аэродром", 398.82760620117,2529.3464355469,16.567499160767},
	{3, 6, "[LS] Лодочная", 150.91070556641,-1812.6412353516,3.7416000366211},
	{4, 6, "{DF8721}[LS] Склад фермы", -48.852401733398, 26.721599578857, 3.1171998977661},
	{5, 6, "{DF8721}[LS] Склад разгрузочной станции", 1976.6340332031, -2029.4699707031, 13.546899795532},
	{6, 6, "{DF8721}[SF] Склад фермы", 1693.9123535156, -89.85669708252, 3.5632998943329},
	{7, 6, "{DF8721}[SF] Склад разгрузочной станции", -1722.6121826172, -118.61460113525, 3.5488998889923 },
	{8, 6, "{DF8721}[LV] Склад фермы", 2824.9436035156, 970.50317382813, 10.75},
	{9, 6, "{DF8721}[LV] Склад разгрузочной станции", 2844.3134765625, 956.30157470703, 10.75},
	//
	{10, 6, "{892626}[SF] Автобазар", -2154.3662109375,-970.68151855469,32.023399353027},
	{11, 6, "[LV] Казино 4 дракона", 2020.8898925781,1007.6807250977,10.820300102234},
	{12, 6, "[LV] Авторынок поддельных авто", -2466.212890625,2250.1025390625,4.8010001182556},
	{13, 6, "{3085D5}[LS] Концертный ЗАЛ", 642.80242919922,-1357.0797119141,13.569000244141},
	{14, 6, "{2F9928}[LS] Центральный рынок", 1126.9204101563,-1414.6187744141,13.58510017395},
	{15, 6, "{2F9928}[SF] Рынок SF", -2517.0375976563,-17.665800094604,25.61720085144},
	{16, 6, "{2F9928}[LS] ЖК Аксиома {FFFFFF}( Семьи )", 1756.9465332031,390.8323059082,20.040300369263},
	{17, 6, "{2F9928}[LS] ЖК Ультра {FFFFFF}( Семьи )", -2049.5986328125,453.73150634766,35.171901702881},
	{18, 6, "{2F9928}[LS] ЖК Авантаж {FFFFFF}( Семьи ) {FF0000}( new )", 2461.4653320313,2245.1494140625,10.820300102234},
	{19, 6, "[LV] Лодочный рынок", 2318.3989257813,528.98272705078,-0.61599999666214},
	//
	{20, 6, "[LV] Психиатрическая больница", -318.67330932617,1048.234375,20.340299606323},
	{21, 6, "[LS] Прыжки с парашютом", 1451.5230712891,-2285.0314941406,13.546899795532},
	{22, 6, "[SF] Прыжки с парашютом", -1409.1265869141,-298.16369628906,14.148400306702},
	{23, 6, "[LV] Прыжки с парашютом", 1672.6857910156,1447.67578125,10.787699699402},
	{24, 6, "[LV] Военный поселок", -172.73480224609,2494.8181152344,23.262699127197},
	{25, 6, "[LS] Аренда велосипедов", 1863.4688720703,-1382.6910400391,13.483269691467 },
	{26, 6, "[LV] Студия: 'SHOW'", 2154.9140625,1493.4940185547,10.820300102234},
	{27, 6, "[LS] Аренда вертолётов", 1961.9449462891,-2191.8337402344,13.546899795532},
	{28, 6, "[LS] Ферма [{A2F777}Добыча ресурсов{FFFFFF}]", -256.77661132813,-1362.8541259766,9.442099571228},
	{29, 6, "[LV] Шахта [{A2F777}Добыча ресурсов{FFFFFF}]", 523.81097412109,848.26959228516,-42.918899536133},
	{30, 6, "[LS] Магазин 'Все для дома'", 2303.8288574219,-16.137100219727,26.484399795532},
	{31, 6, "[SF] Магазин 'Все для дома'", -1988.2272949219,1039.0130615234,55.726600646973},
	{32, 6, "[LV] Магазин 'Все для дома'", -255.14109802246,2603.1325683594,62.858200073242},
	{33, 6, "[LS] Джозеф [{A2F777}Обмен тушек оленя{FFFFFF}]", 2356.55078125,-653.95642089844,128.05470275879},
	{34, 6, "{A2F777}[LS]{FFFFFF} Магазин Автозапчастей", 1836.5142822266,-1443.0063476563,13.596199989319},
	{35, 6, "{A2F777}[LV]{FFFFFF} Магазин Автозапчастей", 2537.9396972656,1115.6510009766,10.820300102234},
	{36, 6, "{A2F777}[SF]{FFFFFF} Магазин Автозапчастей", -1779.716796875,1208.8760986328,25.125},
	{37, 6, "{A2F777}[LV]{FFFFFF} Парковка самолётов (Без налога)", 407.53930664063,2507.9985351563,16.484399795532},
	{38, 6, "{A2F777}[SF]{FFFFFF} Парковка лодок (Без налога)", -2960.904296875,509.62649536133,-1.2704999446869},
	{39, 6, "{A2F777}[LS]{FFFFFF} Тренировочный полигон", 1019.5399780273,226.57679748535,35.425300598145},
	{40, 6, "{A2F777}[LS]{FFFFFF} Школа танцев", 602.32177734375,-1572.896484375,16.15239906311},
	{41, 6, "{A2F777}[SF]{FFFFFF} Школа танцев", -2285.7902832031,582.73828125,35.164100646973 },
	{42, 6, "{A2F777}[LV]{FFFFFF} Школа танцев", 2394.6628417969,2062.5549316406,10.820300102234},
	{43, 6, "{A2F777}[LS]{FFFFFF} Газонокосильщик (счастливая травка)", 1874.2484130859,-1162.1693115234,23.84939956665},
	{44, 6, "{892626}[SF]{FFFFFF} Букмекерская компания SAMPBET", -1886.7469482422,828.40490722656,35.171001434326},
	{45, 6, "{A2F777}[SF]{ffffff} Авто Тест Драйв", -1637.6752929688,1206.5925292969,7.1796998977661},
	{46, 6, "{A2F777}[LS]{FFFFFF} DM-арена", 2045.9426269531,-2158.9831542969,13.546899795532},
	{47, 6, "{A2F777}[LS]{FFFFFF} Ставки на конные забеги", 1411.4781494141,-1699.6512451172,13.539500236511},
	{48, 6, "{A2F777}[LS]{FFFFFF} Стенд Concept Car Luxury", 1137.4177246094,-1489.7408447266,15.796899795532},
	{49, 6, "{A2F777}[SF]{FFFFFF} Стенд Concept Car Luxury", -2509.3344726563,-3.2179000377655,25.765600204468},
	{50, 6, "{A2F777}[SF]{FFFFFF} Фуникулёр на гору Чиллиад", -2228.4899902344,-2260.6794433594,30.292999267578},
	{51, 6, "{892626}[LS]{FFFFFF} Лес с деревьями высшего качества", 2368.0920410156,-651.673828125,127.66010284424},
	{52, 6, "{A2F777}[LV]{FFFFFF} Стриптиз-клуб", 2489.2478027344,2125.8178710938,10.820300102234},
	{53, 6, "{A2F777}[LV]{FFFFFF} База Рыболовов", -2244.7353515625,2275.0393066406,4.9843997955322},
	{54, 6, "{A2F777}[LS]{FFFFFF} Скупка овощей", -142.19869995117,-219.74310302734,1.4219000339508},

	{0, 7, "[LV] Автомастерская (для кастомных моделей)", 2568.0024414063, 989.72821044922, 10.850600242615 },
	{1, 7, "[LS] Автомастерская", 1789.5806884766, -1701.6502685547, 13.289500236511},
	{2, 7, "[SF] Автомастерская", -1740.2028808594, 1090.9868164063, 45.445301055908},
	{3, 7, "[LV] Автомастерская", 1977.3474121094, 2040.6439208984, 10.812999725342},

	{0, 10, "Складское помещение №1\tLos Santos (Willowfield)", 2378.2241210938,-2017.1214599609,14.832900047302},
	{1, 10, "Складское помещение №2\tLos Santos (Ocean Docks)", 2349.7414550781,-2094.1645507813,13.546899795532},
	{2, 10, "Складское помещение №3\tLos Santos (Willowfield)", 2154.2978515625,-2150.939453125,13.546899795532},
	{3, 10, "Складское помещение №4\tLos Santos (Willowfield)", 1996.2875976563,-2093.9455566406,13.546899795532},
	{4, 10, "Складское помещение №5\tRed County (Blueberry)", 122.94529724121,-306.29458618164,1.5780999660492},
	{5, 10, "Складское помещение №6\tWhetstone (Angel Pine)", -2089.0539550781,-2262.5471191406,30.665300369263},
	{6, 10, "Складское помещение №7\tLas Venturas (LVA Freight Depot)", 1707.1103515625,1025.7175292969,10.820300102234},
	{7, 10, "Складское помещение №8\tLas Venturas (LVA Freight Depot)", 1629.6619873047,972.11242675781,10.820300102234},
	{8, 10, "Складское помещение №9\tLas Venturas (Whitewood Estates)", 1027.3140869141,2242.8122558594,10.820300102234},
	{9, 10, "Складское помещение №10\tLas Venturas (Whitewood Estates)", 1054.5394287109,2099.3891601563,10.820300102234},

	{0, 11, "{009327}Grove Street",2186.734375,-1765.5979003906,13.046600341797},
	{1, 11, "{D1DB1C}Los-Santos Vagos",2463.9794921875,-1661.3422851563,12.970000267029},
	{2, 11, "{cc00cc}East Side Ballas",2796.646484375,-1599.3337402344,10.600799560547},
	{3, 11, "{00FFE2}Varios Los Aztecas",2000.4107666016,-1114.4927978516,26.450099945068},
	{4, 11, "{BA541D}Warlock MC",2501.9011230469,-2010.0476074219,12.971300125122},
	{5, 11, "{960202}Yakuza Mafia",-2190.5993652344,-2349.5346679688,30.625},
	{6, 11, "{993366}La Cosa Nostra",-2463.4748535156,131.76249694824,35.171901702881},
	{7, 11, "{336699}Russian Mafia",1515.0059814453,2773.2885742188,10.345600128174},
	{8, 11, "{A87878}Night Wolves",941.92401123047,1731.5308837891,8.5204000473022},
	{9, 11, "{A87878}Яма Братства",2473.169921875,-1422.2637939453,28.839700698853},
	{10, 11, "{cccccc}Наркопритон №1",544.56988525391,-587.86987304688,23.117399215698},
	{11, 11, "{cccccc}Наркопритон №2",2166.1242675781,-1671.3459472656,15.073399543762},
	{12, 11, "{cccccc}Наркопритон №3",1814.4721679688,-1995.8587646484,13.554400444031},
	{13, 11, "{cccccc}Наркопритон №4",2333.4477539063,-1922.6251220703,12.29909992218},
	{14, 11, "{cccccc}Наркопритон №5",2175.9934082031,-1503.9364013672,23.951999664307},
	{15, 11, "{cccccc}Наркопритон №6",2582.9204101563,-953.26391601563,81.387901306152},

	{0, 34, "Собиратели (Ежедневное) [{ECA63C}20.15{FFFFFF} до {ECA63C}21.00{FFFFFF}]", -2263.5363769531,177.95300292969,35.305599212646},
	{1, 34, "{FFFFFF}Захват корабля (Для мафий) [{ECA63C}09.00{FFFFFF} до {ECA63C}22.00{FFFFFF}]", -2263.5363769531,177.95300292969,35.305599212646},
	{2, 34, "{ffcc66}Контейнеры {ffffff}(Ежедневное) [{ECA63C}12.00, 15.00, 19.00{FFFFFF}]", -1748.255859375,136.7400970459,3.5546998977661},
	{3, 34, "{ffcc66}Заброшенные контейнеры {ffffff}(Ежедневное) [{ECA63C}11.00 - 22.00{FFFFFF}]", 132.92889404297,-260.85501098633,4.4103999137878},
	{4, 34, "{8E1414}Зловещий дворец {ffffff}(Для семей) [{ECA63C}20.00 - 20.15{FFFFFF}]", -1376.8391113281,-2171.0029296875,22.512100219727},
	{5, 34, "{ffcc66}Дрифт-трасса {ffffff}(Ежедневное) [{ECA63C}с 15:00 до 18:00{ffffff}]", 1099.5217285156,1601.4542236328,12.546899795532},
	{6, 34, "{D8F781}DM-арена {ffffff}(Ежедневное) [{ECA63C}с 18:00 до 19:00{ffffff}]", 2045.9426269531,-2158.9831542969,13.546899795532},
	{7, 34, "{8E1414}PUBG {ffffff}(Ежедневное) [{ECA63C}в 19:05{ffffff}]", 2687.1499023438,-1691.5216064453,9.4481000900269},
	{8, 34, "{ffcc66}Драг-рейсинг {ffffff}(Ежедневное) [{ECA63C}c 19:00 до 23:00{ffffff}]", -2809.8823242188,-247.8516998291,7.0313000679016},
	//clear 8,9,10
	{0, 38, "Джереми ({F8ED58}Обучение новичков{FFFFFF})",1773.0909423828,-1892.1120605469,13.551600456238},
	{1, 38, "Федерико ({F8ED58}Обучение новичков{FFFFFF})",1163.6832275391,-1754.9605712891,13.618000030518},
	{2, 38, "Майкл ({F89558}2-ой Квестовый персонаж{FFFFFF})",1310.0804443359,329.49481201172,19.914100646973},
	{3, 38, "Джон ({F89558}3-ий Квестовый персонаж{FFFFFF})",-2521.6315917969,-17.47260093689,25.610799789429},
	{4, 38, "Николай (Горячие вакансии)",1289.1011962891,-1273.8745117188,13.542200088501},

	{0, 40, "Станция в Los Santos",353.55639648438, -1723.8345947266, 6.8341999053955},
	{1, 40, "Станция в Las Venturas",2712.09375, 705.22607421875, 10.902099609375},
	{2, 40, "Станция в El Quebrados",-1411.0388183594, 2641.4189453125, 55.6875},
	{3, 40, "Станция в San Fierro",-2490.3239746094, 1204.0505371094, 37.521701812744}
};
CMD:gps(playerid)
{
    if(InJob[playerid] != 0) return SCM(playerid, COLOR_RED, !"Вы не можете включить GPS во время работы.");
    if(vTemp[GetPlayerVehicleID(playerid)][vJob] == 1) return SCM(playerid, COLOR_RED, !"Сейчас вы не можете открыть GPS");
    //AC_FIX_DIALOG_F(playerid, 705);
	player_Global_Int[playerid][112] = -1;
    return SPD(playerid, 25305, DIALOG_STYLE_LIST, !"GPS Навигатор", !"\
		{FFC93E}[Реклама]{FFFFFF} В аммо 117 пушки по 6.666$+скидка готовьтесь к судной ночи!\n\
		{B03131}- {FFFFFF}Важные места\n\
		{B03131}- {FFFFFF}Работы для новичков\n\
		{B03131}- {FFFFFF}По работе\n\
		{B03131}- {FFFFFF}Автосалоны\n\
		{B03131}- {FFFFFF}Отели\n\
		{B03131}- {FFFFFF}Разное\n\
		{B03131}- {FFFFFF}Автомастерские\n\
		{B03131}- {FFFFFF}Фермы\n\
		{B03131}- {FFFFFF}Секонд-хенды\n\
		{B03131}- {FFFFFF}Складские помещения {ff0000}(new)\n\
		{B03131}- {FFFFFF}Бизнес/игровые организации\n\
		{B03131}- {FFFFFF}Ближайший склад дальнобойщиков\n\
		{B03131}- {FFFFFF}Ближайший автосервис\n\
		{B03131}- {FFFFFF}Ближайшая АЗС\n\
		{B03131}- {FFFFFF}Ближайшая АЗС на воде\n\
		{B03131}- {FFFFFF}Ближайший магазин 24/7\n\
		{B03131}- {FFFFFF}Ближайший магазин аксессуаров\n\
		{B03131}- {FFFFFF}Ближайшая закусочная\n\
		{B03131}- {FFFFFF}Ближайший бар\n\
		{B03131}- {FFFFFF}Ближайший магазин одежды\n\
		{B03131}- {FFFFFF}Ближайшая аренда\n\
		{B03131}- {FFFFFF}Ближайший магазин оружия\n\
		{B03131}- {FFFFFF}Ближайший банкомат\n\
		{B03131}- {FFFFFF}Ближайший паркинг\n\
		{B03131}- {FFFFFF}Ближайший ларек\n\
		{B03131}- {FFFFFF}Ближайшая мусорка\n\
		{B03131}- {FFFFFF}Ближайшая мастерская одежды\n\
		{B03131}- {FFFFFF}Ближайший магазин видеокарт\n\
		{B03131}- {FFFFFF}Ближайший магазин рыбалки\n\
		{B03131}- {FFFFFF}Ближайшая станция зарядки ({ECA63C}Бесплатная)\n\
		{B03131}- {FFFFFF}Ближайшая нефтевышка ({ECA63C}Наземная)\n\
		{B03131}- {FFFFFF}Ближайший ломбард\n\
		{B03131}- {FFFFFF}Ближайший сельскохозяйственный магазин\n\
		{B03131}- {FFFFFF}Мероприятия ({ECA63C}Ивенты{FFFFFF})\n\
		{B03131}- {FFFFFF}Эдвард ({ECA63C}Подарки/Гражданские талоны{FFFFFF})\n\
		{B03131}- {FFFFFF}Найти свой дом ({ECA63C}$500{FFFFFF})\n\
		{B03131}- {FFFFFF}Найти семейный спавн ({ECA63C}$500{FFFFFF})\n\
		{B03131}- {FFFFFF}Квестовые персонажи\n\
		{B03131}- {FFFFFF}Нефтевышки\n\
		{B03131}- {FFFFFF}Полицейские станции\n\
		{B03131}- {FFFFFF}Отключить", !"Выбор", !"Отмена");
}
stock DeletePVarRent(playerid)
{
	DeletePVar(playerid, !"rentClickSlotID");
	DeletePVar(playerid, !"rentUID");
	DeletePVar(playerid, !"rentHours");
	DeletePVar(playerid, !"rentMoney");
	return 1;
}
stock SDChangeWareHouse(playerid) return SPD(playerid, 25200, DIALOG_STYLE_INPUT, !"Изменение кода доступа",\
	!"{ffffff}Введите новый код доступа к вашему складу:\n\
	{cccccc}(код доступа должен состоять из 12 цифр)\n\n\
	{ffff00}Код доступа используется для того, чтобы вы могли дать своим знакомым\n\
	и они могли пользоваться складом так же как и вы, \n\
	кроме функций изменения кода доступа и продажи склада.", !"Изменить", !"Назад");
stock ErrorMoneyRubles(playerid) 
{
	SCM(playerid, 0xb3ffb3FF, (str_f(">>>{FFFFFF} Пополнить донат счет можно на сайте: %s", ServerCFG[server_site])));
	return 1;
}
//new
//	Float:hCreatePosition[MAX_PLAYERS][3],
//	Float:hgCreatePosition[MAX_PLAYERS][3],
//	hCreateUID[MAX_PLAYERS char];
static const BoneData[][] = {
	{"Спина"},
	{"Голова"},
	{"Плечо левой руки"},
	{"Плечо правой руки"},
	{"Левая рука"},
	{"Правая рука"},
	{"Левое бедро"},
	{"Правое бедро"},
	{"Левая нога"},
	{"Правая нога"},
	{"Правая голень"},
	{"Левая голень"},
	{"Левое предплечье"},
	{"Правое предплечье"},
	{"Левая ключица (плечо)"},
	{"Правая ключица (плечо)"},
	{"Шея"},
	{"Челюсть"}
};
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(playerid == INVALID_PLAYER_ID) return 1;
	static inputtextsave[144];
	inputtextsave[0] = EOS, str_1[0] = EOS,str_2[0] = EOS;
	if(strlen(inputtext)) mysql_escape_string(inputtext, inputtextsave);
	new bool:di;
	for(new i; i < strlen(inputtext); i++)
	{
		if(inputtext[i] == 's')
		{
			if(dialogid == 25213 && di != false) inputtext[i] = ' ';
			else di = true;
		}
	}
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	if(pmID[playerid] != -1)
	{
		SCMf(pmID[playerid], COLOR_LIGHTBLUE, "[PM] Игрок %s[%i] прочитал ваш ответ и закрыл диалог.", PN(playerid), playerid);
		pmID[playerid] = -1;
	}
	//if(player_Status_Focus[playerid] != false && IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1) SetFocusBrowser(playerid, svelte, true);
	switch(dialogid)
	{
		case 26021:
		{
			if(!response) return 1;
			SPD(playerid, 26024, DIALOG_STYLE_MSGBOX, "Информация", "{FFFFFF}Используя ползунки вокруг объекта, установите нужные позиции аксессуара и нажмите кнопку {33AA33}СОХРАНИТЬ{FFFFFF}\nТакже рядом с кнопкой СОХРАНИТЬ есть возможность переключиться на изменения угла поворота объекта\nЧтобы в момент редактирования пользоваться мышкой, зажмите {33AA33}'ПРОБЕЛ'{FFFFFF}\n\n{FF6347}Для отмены редактирования нажмите клавишу ‘CLOSE’.\nУбрать: в момент редактирования пользоваться мышкой,зажмите ‘ПРОБЕЛ’", "Понял", "");
		}
		case 26023:
		{
			if(!response) return 1;
			if(!listitem) SPD(playerid, 26021, DIALOG_STYLE_MSGBOX, !"Подшив аксессуаров", \
					!"{FFFFFF}В магазине аксессуаров сотрудники магазина за небольшую плату помогут вам\n\
					подшить любой аксессуар под ваш вкус! Вы можете изменить кость крепления (голова/нога/рука/плечо и т.д),\n\
					позиции и размеры. Это ещё больше поможет вам выделиться из толпы и показать свою уникальность.\n\n\
					{FF6347}Позиции аксессуара сохраняются только на ту одежду, на которую он был подшит. Если вы захотите сменить\n\
					свой образ, вам будет необходимо выполнить подшив повторно на новую одежду!\n\n\
					{33AA33}Стоимость услуги, установленая владельцем магазина: $100000.\n\n\
					{FFFFFF}- Хотите приступить?", !"Выбрать", !"Отмена");
			else SPD(playerid, 26027, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{FFFFFF}Мы фиксируем старые позиции вашего аксессуара, требуется ваше подтверждение.\n\nПосле подтверждения позиции будут сброшены и с ваш спишется {33AA33}$50000!", !"Готово", !"Назад");
		}
		case 26027:
		{
			if(!response) return 1;
			ResetItemAttached(playerid, SearchItemAttached(AksSlot[playerid][player_Global_Int[playerid][22]]), player_Global_Int[playerid][22]);
			RemovePlayerAttachedObject(playerid, player_Global_Int[playerid][22]);
			player_InvAks_bone[playerid][player_Global_Int[playerid][22]] = listitem+1;
			UseItemAttached(playerid, player_Global_Int[playerid][22]);
		}
		case 26024:
		{
			if(!response) return 1;
			//SCMf(playerid, -1, "%i", player_Global_Int[playerid][22]);
			str_1[0] = EOS;
			for(new i; i < sizeof(BoneData); i++) f(str_1, sizeof(str_1), "%s%s[%i] %s\n", str_1, (player_InvAks_bone[playerid][player_Global_Int[playerid][22]]-1 == i ? "{EBB02D}" : "{FFFFFF}"), i+1, BoneData[i]);
			SPD(playerid, 26025, DIALOG_STYLE_LIST, "Выберите кость", str_1, "Выбрать", "Отмена");
		}
		case 26025:
		{
			if(!response) return 1;
			//
			RemovePlayerAttachedObject(playerid, player_Global_Int[playerid][22]);
			player_InvAks_bone[playerid][player_Global_Int[playerid][22]] = listitem+1;
			UseItemAttached(playerid, player_Global_Int[playerid][22], false);
			EditAttachedObject(playerid, player_Global_Int[playerid][22]);
			mysql_pqueryf(mysql, "\
				DELETE FROM `player_inv_aks` WHERE `InvAks_ItemID` = '%i' AND `pID` = '%i' LIMIT 1;",AksSlot[playerid][player_Global_Int[playerid][22]], PI[playerid][pID]);
		}
		case 26026:
		{
			if(!response) return 1;
			SendPlayerNotification_cef(playerid, "Подшив аксессуара", 10000);
		}
		case 26036:
		{
			if(!response) return 1;
			player_Global_Int[playerid][14] = -1;
			switch(listitem)
			{
				case 0:
				{
					PI[playerid][pShowName] = !PI[playerid][pShowName];
					foreach_player(i) ShowPlayerNameTagForPlayer(playerid, i, PI[playerid][pShowName]);
				}
				case 1: 
				{
					callcmd::setspawn(playerid);
					return 1;
				}
				case 2:
				{
					PI[playerid][pShowDokument] = !PI[playerid][pShowDokument];
					UpdatePlayerDataInt(playerid, "ShowDokument", PI[playerid][pShowDokument]);
				}
				case 3:
				{
					PI[playerid][pObmen] = !PI[playerid][pObmen];
					UpdatePlayerDataInt(playerid, "Obmen", PI[playerid][pObmen]);
				}
				case 4:
				{
					PI[playerid][pInvLang] = !PI[playerid][pInvLang];
					UpdatePlayerDataInt(playerid, "InvLang", PI[playerid][pInvLang]);
					if(InventStatus{playerid}) SetInvLang(playerid);
				}
				case 5: { } //damage informer
				case 6: { } //прочее eos
				case 7:
				{
					player_Global_Int[playerid][14] = 0;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 8:
				{
					player_Global_Int[playerid][14] = 1;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 9:
				{
					player_Global_Int[playerid][14] = 2;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 10: //клавиши
				{
					player_Global_Int[playerid][14] = 3;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 11: //inv set
				{
					player_Global_Int[playerid][14] = 4;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 12:
				{
					player_Global_Int[playerid][14] = 5;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
				case 13: 
				{
					player_Global_Int[playerid][14] = 6;
					ShowPlayerCustomInterface(playerid);
					return 1;
				}
			}
			ShowPlayerSettings(playerid);
		}
		case 26037:
		{
			if(!response) return ShowPlayerSettings(playerid);
			switch(player_Global_Int[playerid][14])
			{
				case 0: //безопасность
				{
					switch(listitem)
					{
						case 0: SPD(playerid, 160, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Привязать E-mail\n\n{FFFFFF}Напишите свой активный эл.адрес ниже, после вы сможете\nвоспользоваться восстановлением пароля через сайт.", !"Я уверен", !"Не хочу");
						case 1: callcmd::passwd(playerid, "");
						case 2: return SPD(playerid, 883, 1, !"", !"{FFFFFF}Введите {B83434}текущий{FFFFFF} PIN-код от банковской карты", !"Далее", !"Отмена");
						case 3:
						{
							if(!PI[playerid][pGoogle]) SPD(playerid, 8918, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПриложение Google Authenticator используется для создания кодов двухэтапной\nаутентификации на вашем телефоне. Двухэтапная аутентификация обеспечивает\nболее надежную защиту вашего аккаунта: чтобы войти в него,\nпотребуется не только пароль, но и код подтверждения.\n\nПриложение работает на устройствах Android, IOS и как дополнение в Google Chrome.\nНайти и загрузить приложения вы можете в {FDC459}Play Market и App Store.{FFFFFF}\n\nПри подключеном Google Authenticator при каждой авторизации вам нужно будет вводить код,\nкоторый будет выводится непосредственно в вашем приложении.\n\n{B0FD59}Нажмите: 'Enter', чтобы получить инструкции по подключению.\n\n", !"Дальше", !"Отмена");
							else
							{
								if(AcceptGoogle[playerid]) SPDf(playerid, 8924, DIALOG_STYLE_LIST, !"", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
								else SPD(playerid, 8923, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nВведите в строку код из приложения {F1FC4C}Google Authenticator{FFFFFF} у вас на телефоне\nили из дополнения Google, для подтверждения аккаунта.\n\n", !"Принять", !"Отмена");
							}
							return 1;
						}
						case 4: return ShowPlayerSettings(playerid);
						case 5: return PlayerDialogVK(playerid);
					}
				}
				case 1: //Настройки
				{
					switch(listitem)
					{
						case 0:
						{
							PI[playerid][pShowCase] = !PI[playerid][pShowCase];
							UpdatePlayerDataInt(playerid, "ShowCase", PI[playerid][pShowCase]);
							if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
						}
						case 1: return ShowStyleListDialog(playerid);
						case 2:
						{
							if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Установливать описание персонажа можна только с 3-го уровня!");
							if(GetPVarInt(playerid,!"description") > global_time) return SCM(playerid,COLOR_GREY, !"Можно раз в 3 минуты!");
							if(!GetString(PI[playerid][pDescription], "default"))
							{
								str_1[0] = EOS, str_2[0] = EOS;
								f(str_2, sizeof(str_2), "%s", PI[playerid][pDescription]);
								for(new i; i < strlen(str_2); i++) if(str_2[i] == '/') str_2[i] = '\n';
								f(str_1, 150,"{FFFFFF}Сейчас у вас установлено описание:\n{AFAFAF}%s\n\n{FFFFFF}Вы хотите его удалить?", str_2);
								SPD(playerid, 899, 0, !"{808080}Описание персонажа",str_1,!"Удалить",!"Отмена");
							}
							else SPD(playerid, 899, 1, !"{808080}Описание персонажа",!"{FFFFFF}Напишите краткое описание вашего персонажа:\n{F3FF02}(символ {FF0000}/ {F3FF02}переносит строку)\n\n{808080}(это описание будет отображено на скине вашего персонажа)","Применить","Отмена");
							return 1;
						}
						case 3:
						{
							str_1[0] = EOS;
							if(GetString(PI[playerid][pPrefixAFK_0], "отошел {73B461}(s)")) strcat(str_1, !"{FFFFFF}[1] 'отошел {73B461}(%s)'\t{AAAAAA}default\n");
							else
							{
								str_q[0] = EOS;
								SetString(PI[playerid][pPrefixAFK_0], str_q);
								new one = strfind(str_q, "s");
								if(one != -1)
								{
									strdel(str_q, one, one+1);
									str_d[0] = EOS, f(str_d, sizeof(str_d), "%s", "%s");
									strins(str_q, str_d, one);
								}
								str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}[1] '%s'{FFFFFF}\t{ECC488}custom\n",str_q);
								strcat(str_1, str_2);
							}
							if(GetString(PI[playerid][pPrefixAFK_1], "Кушает {69B1E4}(5:00+)")) strcat(str_1, !"{FFFFFF}[2] 'Кушает {69B1E4}(5:00+){FFFFFF}'\t{AAAAAA}default\n");
							else
							{
								str_q[0] = EOS;
								SetString(PI[playerid][pPrefixAFK_1], str_q);
								new one = strfind(str_q, "s");
								if(one != -1)
								{
									strdel(str_q, one, one+1);
									str_d[0] = EOS, f(str_d, sizeof(str_d), "%s", "%s");
									strins(str_q, str_d, one);
								}
								str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}[2] '%s'{FFFFFF}\t{ECC488}custom\n",str_q);
								strcat(str_1, str_2);
							}
							if(GetString(PI[playerid][pPrefixAFK_2], "Вышел на улицу {EC7878}(50:00+)")) strcat(str_1, !"{FFFFFF}[3] 'Вышел на улицу {EC7878}(50:00+)'{FFFFFF}\t{AAAAAA}default\n");
							else
							{
								str_q[0] = EOS;
								SetString(PI[playerid][pPrefixAFK_2], str_q);
								new one = strfind(str_q, "s");
								if(one != -1)
								{
									strdel(str_q, one, one+1);
									str_d[0] = EOS, f(str_d, sizeof(str_d), "%s", "%s");
									strins(str_q, str_d, one);
								}
								str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}[3] '%s'{FFFFFF}\t{ECC488}custom\n",str_q);
								strcat(str_1, str_2);
							}
							strcat(str_1, !"{ECC488}>>> Информация");
							SPD(playerid, 25211, DIALOG_STYLE_TABLIST, !"Надпись над головой в AFK режиме", str_1, "Выбрать", "Назад");
							return 1;
						}
					}
				}
				case 2:
				{
					switch(listitem)
					{
						case 0:
						{
							PI[playerid][pHungryShow] = !PI[playerid][pHungryShow];
							UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
						}
						case 1:
						{
							PI[playerid][pShowDescription] = !PI[playerid][pShowDescription];
							UpdatePlayerDataInt(playerid, "ShowDescription", PI[playerid][pShowDescription]);
						}
						case 2:
						{
							PI[playerid][pShowFamilyName] = !PI[playerid][pShowFamilyName];
							UpdatePlayerDataInt(playerid, "ShowFamilyName", PI[playerid][pShowFamilyName]);
						}
						case 3:
						{
							PI[playerid][pShowAddVIP] = !PI[playerid][pShowAddVIP];
							UpdatePlayerDataInt(playerid, "ShowAddVIP", PI[playerid][pShowAddVIP]);
							ChangeStatus_AddVIP(playerid);
						}
						case 4:
						{
							PI[playerid][pShowBattlePass] = !PI[playerid][pShowBattlePass];
							UpdatePlayerDataInt(playerid, "ShowBattlePass", PI[playerid][pShowBattlePass]);
						}
						case 5:
						{
							PI[playerid][pShowSetText] = !PI[playerid][pShowSetText];
							UpdatePlayerDataInt(playerid, "ShowSetText", PI[playerid][pShowSetText]);
						}
						case 6:
						{
							PI[playerid][pShowNotif] = !PI[playerid][pShowNotif];
							UpdatePlayerDataInt(playerid, "ShowNotif", PI[playerid][pShowNotif]);
						}
					}
				}
				case 3:
				{
					//клавиши
				}
				case 4: //inv set
				{
					switch(listitem)
					{
						case 0:
						{
							PI[playerid][pInvBlack] = !PI[playerid][pInvBlack];
							if(!PI[playerid][pInvBlack]) PI[playerid][pInvColor] = 0;
							else PI[playerid][pInvColor] = 120;
							UpdatePlayerDataInt(playerid, "InvBlack", PI[playerid][pInvBlack]);
							SaveChangeInv(playerid);
							if(InventStatus{playerid}) UpdateInventory(playerid, true);
						}
						case 1:
						{
							PI[playerid][pInvPos_X] =
							PI[playerid][pInvPos_Y] =
							PI[playerid][pInvSize_X] =
							PI[playerid][pInvSize_Y] = 00.00;
							PI[playerid][pInvColor] = 0;
							PI[playerid][pInvBlack] = false;
							SaveChangeInv(playerid);
							if(InventStatus{playerid}) HideInventory(playerid);
							ShowInventory(playerid);
							SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно сбросили настройки инвентаря!");
						}
					}
				}
				case 5: //sound
				{

				}
				case 6: //custom interface
				{
					switch(listitem)
					{
						case 0..2:
						{
							player_Global_Int[playerid][15] = listitem;
							ShowPlayerMenu_CustomInterface(playerid);
							return 1;
						}
						case 3, 4: 
						{
							PI[playerid][pCustomInterface][listitem] = !PI[playerid][pCustomInterface][listitem];
							ShowPlayer_CustomInterface(playerid, listitem, true);
						}
						case 5: { } //chat team
						case 6,7: 
						{
							PI[playerid][pCustomInterface][listitem-1] = !PI[playerid][pCustomInterface][listitem-1];
							ShowPlayer_CustomInterface(playerid, listitem-1, true);
						}
						case 8:
						{
							PI[playerid][pCustomInterface][customInterface_TypeDialog]++;
							if(PI[playerid][pCustomInterface][customInterface_TypeDialog] > 2) PI[playerid][pCustomInterface][customInterface_TypeDialog] = 0;
							ShowPlayer_CustomInterface(playerid, customInterface_TypeDialog, true);
						}
						case 11:
						{
							PI[playerid][pCustomInterface][listitem-3] = !PI[playerid][pCustomInterface][listitem-3];
							ShowPlayer_CustomInterface(playerid, listitem-3, true);
						}
						case 12:
						{
							PI[playerid][pTypeCaptcha] = !PI[playerid][pTypeCaptcha];
							UpdatePlayerDataInt(playerid, "TypeCaptcha", PI[playerid][pTypeCaptcha]);
						}
					}
				}
			}
			ShowPlayerCustomInterface(playerid);
		}
		case 1610:
		{
			if(!response) return ShowPlayerCustomInterface(playerid);
			switch(player_Global_Int[playerid][15])
			{
				case customInterface_speed:
				{
					switch(listitem)
					{
						case 1,2:
						{
							SCM(playerid, -1, !"Данный тип спидометра доступен только пользователям мобильного лаунчера");
							return ShowPlayerMenu_CustomInterface(playerid);
						}
					}
				}
				case customInterface_hud:
				{
					switch(listitem)
					{
						case 1..3,6:
						{
							SCMf(playerid, -1, "Данный тип худа %s", (listitem == 3 ? "устанавливается автоматически в PUBG!" : "доступен только пользователям мобильного лаунчера"));
							return ShowPlayerMenu_CustomInterface(playerid);
						}
					}
				}
			}
			PI[playerid][pCustomInterface][ player_Global_Int[playerid][15] ] = listitem;
			ShowPlayer_CustomInterface(playerid, player_Global_Int[playerid][15], true);
			ShowPlayerMenu_CustomInterface(playerid);
		}
		case 25800:
		{
			if(!response) return 1;
			PI[playerid][pPhoneBackground] = listitem;
			ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.phone.changePhoneBg', '[%i]');", PI[playerid][pPhoneBackground]);
	    	UpdatePlayerDataInt(playerid, "PhoneBackground", PI[playerid][pPhoneBackground]);
			ShowPlayerCustomPhone(playerid);
		}
		case 3082:
		{
		    if(!response) return 1;
			new id = ShopUID{playerid};
			new biz = BizEntered[playerid], ids = player_Global_Int[playerid][100], item = ShopData[id][shopItem][ids];
			new count = strval(inputtextsave);
			if(!strlen(inputtextsave)) count = 1;
			if(count > GetInvSlot(playerid, item)) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}У вас не хватает места в инвентаре!");
			else if(!(1 <= count <= 100)) return SCM(playerid, COLOR_RED, "[Ошибка]{FFFFFF} Вы ввели некорректное количество!");
			switch(ShopData[id][shopType])
			{
				case SHOP_TYPE_BUSINESS: 
				{
					if(PI[playerid][pMoney] < (9999*count)) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				}
				case SHOP_TYPE_FAMILY: 
				{
					if(GetInvCount(playerid, 359) < ShopData[id][shopCost][ids]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно семейных талонов. Вы можете купить их в специальном магазине [/donate]");
				}
				case SHOP_TYPE_STATIC_COST: 
				{
					if(PI[playerid][pMoney] < ShopData[id][shopCost][ids]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				}
				case SHOP_TYPE_RESPECTS: 
				{
					if(GetInvCount(playerid, 1843) < ShopData[id][shopCost][ids]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас недостаточно бандитских респектов.");
				}
			}
			InvAdd(playerid, item, count);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Вы успешно купили {73B461}%s{FFFFFF} за {73B461}%s", ItemsInfo[item][ItemName], GetShopCost(ids, id, true));
			SPD(playerid, 0, 0, "", str_1, "Окей", "");
			GameTextForPlayer(playerid, !"successful", 0, 1);
			switch(ShopData[id][shopType])
			{
				case SHOP_TYPE_BUSINESS:
				{
					switch(random(4))
					{
						case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
						case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
						case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
						case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					}
					GiveBizMoney(playerid, 4444*count);
					GiveMoney(playerid, -9999*count);
					BizInfo[biz][bProducts] -= 5;
				}
				case SHOP_TYPE_STATIC_COST:
				{
					GiveMoney(playerid, -ShopData[id][shopCost][ids]);
					if(!(biz == -1))
					{
						GiveBizMoney(playerid, ShopData[id][shopCost][ids] / 5),
						BizInfo[biz][bProducts] -= 5;
					}
				}
				case SHOP_TYPE_FAMILY: InvAdd(playerid, 359, -ShopData[id][shopCost][ids]);
				case SHOP_TYPE_RESPECTS: InvAdd(playerid, 1843, -ShopData[id][shopCost][ids]);
			}
		}
		case 4460:
		{
			if(!response) return 1;
			if(!listitem) SetCount_bot(playerid);
			else
			{
				str_1[0] = EOS, f(str_1, sizeof(str_1), "\
						{FFFFFF}Последние время выполнения: {6495ED}%i {FFFFFF}мс.\n\
						Максимальное время выполнения: {6495ED}%i {FFFFFF}мс.\n\
						Время обновления под счетчик онлайна: {6495ED}%i {FFFFFF}сек.\n\
						Настоящих игроков: {6495ED}%i{FFFFFF}\n\
						Фейковых игроков: {6495ED}%i/%i\n\
						", botLastTick_Timer, botMaxTick_Timer, IsTimeUpdateBotOnLeave, Iter_Count(Player)-Iter_Count(IsPlayerBot), Iter_Count(IsPlayerBot), IsCountBotOnTime);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Статистика", str_1, !"Назад", !"");
			}
		}
		case 4461:
		{
			if(!response) return callcmd::mgb(playerid);
			SetCount_botList(playerid, listitem);
		}
		case 4462:
		{
			if(!response) return SetCount_bot(playerid);
			extract inputtextsave -> new count; else return SetCount_botList(playerid, player_Global_Int[playerid][10]);
			if(count > MAX_PLAYERS || count < -1 || player_Global_Int[playerid][10] > 24) return SetCount_botList(playerid, player_Global_Int[playerid][10]);
			AtHourBot[player_Global_Int[playerid][10]] = count;
			str_1[0] = EOS;
			for(new i; i < 24; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, AtHourBot[i]);
			mysql_pqueryf(mysql, "UPDATE `config` SET `AtHourBot` = '%s' LIMIT 1;", str_1);
			SCM(playerid,0x6495EDFF,!"[ Оповещение ] {FFFFFF}Изменения применены!");
		}
		case 25113:
		{
			if(!response) return 1;
			if(player_BonusMinute[playerid] < player_BonusInfo[listitem][bCountMinute]) SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}У вас недостаточно минут, для того чтобы забрать приз! ( Вы отыграли %i минут )", player_BonusMinute[playerid]);
			else if(player_BonusMinute[playerid] >= player_BonusInfo[listitem][bCountMinute])
			{
				if(player_BonusStatus[playerid][listitem] != false) return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы уже забирали выбранный приз!");
				player_BonusStatus[playerid][listitem] = true;
				for(new i; i < 2; i++)
				{
					if(!player_BonusInfo[listitem][bInvItem][i]) continue;
					switch(player_BonusInfo[listitem][bGiveSizeof])
					{
						case 0: InvAdd(playerid, player_BonusInfo[listitem][bInvItem][i], player_BonusInfo[listitem][bInvItemAmount][i]);
						case 1:
						{
							for(new j = player_BonusInfo[listitem][bInvItem][0]; j < player_BonusInfo[listitem][bInvItem][1]; j++) InvAdd(playerid, j, 1);
							break;
						}
						default: InvAdd(playerid, player_BonusInfo[listitem][bInvItem][i], player_BonusInfo[listitem][bInvItemAmount][i], 1, player_BonusInfo[listitem][bGiveSizeof]);
					}
				}
				SavePlayer(playerid, 1);
			}
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Приз за отыгранные минуты был выдан вам в инвентарь!");
			callcmd::bonus(playerid);
		}
		case 25857:
		{
			str_1[0] = EOS;
			new count;
			for(new i; i < sizeof global_Quest; i++)
			{
				if(player_Quest[playerid][qStatus][i] != 1) continue;
				UpdatePlayerQuest(playerid, i);
				str_d[0] = EOS;
				if(player_Quest[playerid][qProgress][i] < global_Quest[i][qCountProgress]) player_Global_Int[playerid][count] = 0, f(str_d, sizeof str_d, "%i/%i", player_Quest[playerid][qProgress][i], global_Quest[i][qCountProgress]);
				else player_Global_Int[playerid][count] = 1, f(str_d, sizeof str_d, "{DA9E30}[Можно завершить]");
				str_2[0] = EOS, f(str_2, sizeof(str_2), "%s{FFFFFF} | {DA9815}Прогресс: %s\n",global_Quest[i][qName], str_d);
				player_Global_Int[playerid][100+count] = i;
				strcat(str_1, str_2);
				count++;
			}
			if(!count) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}У вас нет принятых квестов!", "Принять", "");
			else SPD(playerid, 7650, DIALOG_STYLE_LIST, "", str_1, "{0F9435}Info{FFFFFF}", "Отмена");
		}
		case 7650:
		{
			if(!response) return 1;
			new i = player_Global_Int[playerid][100+listitem];
			player_Global_Int[playerid][100] = i;
			str_d[0] = EOS;
			if(!player_Global_Int[playerid][listitem]) f(str_d, sizeof(str_d), "%i/%i", player_Quest[playerid][qProgress][i], global_Quest[i][qCountProgress]);
			else f(str_d, sizeof str_d, "[Можно завершить]");
			str_mes[0] = EOS, f(str_mes, sizeof(str_mes), "{FFFFFF}Прогресс: %s", str_d);
			str_d[0] = EOS, f(str_d, sizeof(str_d), "%s", global_Quest[i][qName]);
			ShowQuestInfo(playerid, i, 7651, str_mes, str_d, !"Доп.", !"Закрыть");
		}
		case 7651:
		{
			if(!response) return 1;
			SPD(playerid, 7653, DIALOG_STYLE_LIST, !"", !"{FFFFFF}1. Подсказка\n2. {FE5959}Отказаться", !"Принять", !"Отмена");
		}
		case 7653:
		{
			if(!response) return 1;
			new i = player_Global_Int[playerid][100];
			if(!listitem) EnableGPSForPlayer(playerid, global_Quest[i][qGPS][0], global_Quest[i][qGPS][1], global_Quest[i][qGPS][2]);
			else player_Quest[playerid][qStatus][i] = 0;
		}
		case 12391:
		{
			if(!response) return 1;
			SCMf(playerid,COLOR_VALIK, "[Информация] {FFFFFF}Вы %s работу сборщика мусора!", Iter_Contains(WorkNPC, playerid) == 1 ? ("закончили") : ("начали"));
			if(Iter_Contains(WorkNPC, playerid) == 1) Iter_Remove(WorkNPC, playerid);
			else Iter_Add(WorkNPC, playerid);
		}
		case 10501:
		{
			if(!response) return 1;
			if(strlen(inputtextsave) < 2 || strlen(inputtextsave) > 23) return SPD(playerid, 10501, DIALOG_STYLE_INPUT, !"Имя спутника", !"{FFFFFF}Введите имя вашего будущего спутника", !"Выбрать", !"Отмена");
			if(GetUID_PlayerNPC[playerid] != -1) return SCM(playerid, -1, !"уже создан");
			SCM(playerid,-1,"closed");
			//GetTimerID_PlayerNPC[playerid] = 30;
			//FCNPC_SetVirtualWorld(CreateNPC(playerid, ItemsInfo[player_Global_Int[playerid][0]][ItemID], inputtextsave), 1228);
		}
		case 25626:
		{
			str_1[0] = EOS;
			GetPVarString(playerid, "VIP_message", str_1, 100); //sizeof lean cmd -> /vr
			DeletePVar(playerid, !"VIP_message");
			if(response) GiveMoney(playerid, -75000);
			switch(PI[playerid][pVIP][0])
			{
				case 5: SendVIPMessagef(0xFFFFFFFF,"{6495ED}%s[VIP] {FFFFFF}%s[%i]{FFFFFF}: %s", (!response) ? ("") : ("[РЕКЛАМА] "), PN(playerid), playerid, str_1);
				case 6: SendVIPMessagef(0xFFFFFFFF,"{F345FC}%s[PREMIUM] {FFFFFF}%s[%i]: %s", (!response) ? ("") : ("[РЕКЛАМА] "), PN(playerid),playerid, str_1);
				case 7: SendVIPMessagef(0xFFFFFFFF,"%s%s[%s] {FFFFFF}%s[%i]{FFFFFF}: %s", (!response) ? ("") : ("[РЕКЛАМА] "), CheckVipColor[PI[playerid][pVipColor]][0], PI[playerid][pPrefixVip], PN(playerid), playerid, str_1);
			}
			str_2[0] = EOS, f(str_2, sizeof(str_2), "написал в вип чат(/vr): \"%s\"", str_1);
			//aml(-4, playerid, "", str_2);
		}
		case 7880:
		{
			if(!response) return ViewSpawn(playerid);
			switch(player_Global_Int[playerid][listitem])
			{
				case 1: CheckSpawnPlayer(playerid, 1, player_Global_Int[playerid][100+listitem]);
				case 2: if(CheckSpawnPlayer(playerid, 3) == -1) return ViewSpawn(playerid), SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет семейной квартиры или дома");
				case 3: if(CheckSpawnPlayer(playerid, 2) == -1) return ViewSpawn(playerid), SCM(playerid, -1, !">> {BE2D2D} Вы не состоите в организации!");
				case 4,5: if(CheckSpawnPlayer(playerid, player_Global_Int[playerid][listitem]) == -1) return ViewSpawn(playerid), SCM(playerid, -1, "Не удалось");
				default: CheckSpawnPlayer(playerid, 0);
			}
			if(player_Global_Int[playerid][listitem] > 5) player_Global_Int[playerid][listitem] = 5;
			PI[playerid][pDCTime] = player_Global_Int[playerid][listitem];
			if(pTemp[playerid][SPECTPLAYER] == true) SpecPl(playerid, false);
			SpawnPlayer(playerid);
		}
/*		case 13333:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: CreateHouseD(playerid, !"{FFFFFF}Точка входной двери", \
					!"{FFFFFF}Вы действительно хотите установить точку входа\
					в дом на месте, где стоите?", 0);
				case 1: CreateHouseD(playerid, !"{FFFFFF}Стоимость дома", \
					!"{FFFFFF}Введите стоимость для нового дома", 1);
				case 2: 
				{
					str_1[0] = EOS;
					for(new i; i < 4; i++)
					{
						str_2[0] = EOS, f(str_2, sizeof(str_2), "[%i] Класс %i", i+1);
						strcat(str_1, str_2);
					}
					CreateHouseD(playerid, !"{FFFFFF}Выберите класс дома", str_1, 2);
				}
				case 3:
				{

				}
			}
		}
		case 13334:
		{
			if(!response) return 1;
			switch(hCreateUID{playerid})
			{
				case 0:
				{
					new Float:Position_[3];
					GetPlayerPos(playerid, Position_[0], Position_[1], Position_[2]);
					for(new i; i < 3; i++) hCreatePosition[playerid][i] = Position_[i];
				}
			}
			hCreateUID{playerid} = 255;
		}*/
		case 25674:
		{
			if(!response) return DeletePVarRent(playerid);
			extract inputtextsave -> new player:id; else return DeletePVarRent(playerid);
			if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
			SetPVarInt(playerid, !"rentUID", id);
			SPD(playerid, 25675, DIALOG_STYLE_INPUT, !"{FF6666}Аренда аксессуаров", !"{FF6666}-{ffffff} На сколько часов Вы хотите сдать аксессуар?\n\n{cccccc}Введите в строку ниже кол-во часов от 1 до 180 часов.\nКоличество часов будет умножено на сумму за 1 час аренды", !"Далее", !"Назад");
		}
		case 25675:
		{
			if(!response) return DeletePVarRent(playerid);
			extract inputtextsave -> new hours; else return DeletePVarRent(playerid);
			if(hours < 1 || hours > 179) return SPD(playerid, 25675, DIALOG_STYLE_INPUT, !"{FF6666}Аренда аксессуаров", !"{FF6666}-{ffffff} На сколько часов Вы хотите сдать аксессуар?\n\n{cccccc}Введите в строку ниже кол-во часов от 1 до 180 часов.\nКоличество часов будет умножено на сумму за 1 час аренды", !"Далее", !"Назад");
			SetPVarInt(playerid, !"rentHours", hours);
			str_1[0] = EOS, f(str_1, sizeof str_1, "{FF6666}-{ffffff} Введите сумму за %i час аренды аксессуара?\n\n{cccccc}Введите в строку ниже стоимость аренды.\nСтоимость не может быть меньше $50000 и не более $50000000.\nИтоговая стоимость будет показана в конце", hours);
			SPD(playerid, 25676, DIALOG_STYLE_INPUT, !"{FF6666}Аренда аксессуаров", str_1, !"Далее", !"Назад");
		}
		case 25676:
		{
			if(!response) return DeletePVarRent(playerid);
			extract inputtextsave -> new money; else return DeletePVarRent(playerid);
			if(money < 50000 || money > 50000000) return DeletePVarRent(playerid);
			SetPVarInt(playerid, !"rentMoney", money);
			SPDf(playerid, 25677, DIALOG_STYLE_MSGBOX, !"{FF6666}Аренда аксессуаров", "Далее", "Назад", "\
				{FF6666}-{ffffff} Вы действительно хотите предложить {FF6666}%s[%i]\
				{ffffff} аренду аксессуара {FF6666}%s{ffffff}?\n\n\
				{FF6666}-{ffffff} Срок аренды: {FF6666}%i{ffffff} часов\n\
				{FF6666}-{ffffff} Стоимость аренды: {FF6666}$%i{ffffff}\n\n\
				{FF6666}-{ffffff} Уровень заточки: {FF6666}%i{ffffff} уровень\n\n\
				{cccccc}Для продолжения нажмите 'Далее'",\
						PN(GetPVarInt(playerid, !"rentUID")), GetPVarInt(playerid, !"rentUID"),\
						ItemsInfo[PI[playerid][pInvItem][GetPVarInt(playerid, !"rentClickSlotID")]][ItemName],\
						 GetPVarInt(playerid, !"rentHours"), GetPVarInt(playerid, !"rentMoney"),\
						 InvPlayerParams[0][playerid][GetPVarInt(playerid, !"rentUID")]);
			//изменение в плеерной переменной

			//exit
			DeletePVarRent(playerid);
		}
		case 25447:
		{
			if(!response) return 1;
			if(PAI[playerid][secondupdate] > 0 && Clother[playerid] != -1)
			{
				ExitPAI(playerid);
				return 1;
			}
			ShowTD(playerid, listitem);
		}
		case 7759:
		{
			if(!response) return 1;
			new id = player_Global_Int[playerid][100];
			if(!listitem) 
			{
				str_d[0] = EOS, f(str_d, sizeof str_d, "\
									\n\n{FFFFFF}Подвал: {85bb65}%s\n\
									{FFFFFF}Тип: {85bb65}Комфорт\n\n\
									{FFFFFF}Необходимо для создания:\n\n\
									{f4f142}-{FFFFFF} Дрова (7500)\n\
									{f4f142}-{FFFFFF} Камень (1000)\n\
									{f4f142}-{FFFFFF} Металл (100)\n\
									{f4f142}-{FFFFFF} Бронза (10)\n\n\
									Стоимость создания: {85bb65}${FFFFFF}%i\n\n", CellarInfoVar[id][ciName], CellarInfoVar[id][ciCost]);
				SPD(playerid, 7760, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Информация | {ae433d}Подвал", str_d, !"«", !"");
			}
			else
			{
				str_d[0] = EOS, f(str_d, sizeof(str_d), "\
									\n\n{FFFFFF}Подвал: {85bb65}%s\n\
									{FFFFFF}Тип: {85bb65}Комфорт\n\n\
									{FFFFFF}Необходимо для создания:\n\n\
									{f4f142}-{FFFFFF} Дрова (7500)\n\
									{f4f142}-{FFFFFF} Камень (1000)\n\
									{f4f142}-{FFFFFF} Металл (100)\n\
									{f4f142}-{FFFFFF} Бронза (10)\n\n\
									Стоимость создания: {85bb65}${FFFFFF}%i\n\n\
									Вы действительно желаете создать этот подвал?\n\n", CellarInfoVar[id][ciName], CellarInfoVar[id][ciCost]);
				SPD(playerid, 7716, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Покупка | {ae433d}Подвал", str_d, "»", "«");
			}
		}
		case 7716:
		{
			if(!response) return SPD(playerid, 7759, DIALOG_STYLE_LIST, !"{FFFFFF}Покупка | {ae433d}Подвал", !"{FFFFFF}Информация о подвале\nПриобрести подвал", !"»", !"x");
			if(GetInvCount(playerid, 360) < 7500) return SCM(playerid, COLOR_LIGHTRED,\
			 "[Ошибка] {FFFFFF}У вас недостаточно дерева!");

			if(GetInvCount(playerid, 361) < 1000) return SCM(playerid, COLOR_LIGHTRED,\
			 "[Ошибка] {FFFFFF}У вас недостаточно камня!");

			if(GetInvCount(playerid, 362) < 100) return SCM(playerid, COLOR_LIGHTRED,\
			 "[Ошибка] {FFFFFF}У вас недостаточно металла!");

			if(GetInvCount(playerid, 363) < 10) return SCM(playerid, COLOR_LIGHTRED,\
			 "[Ошибка] {FFFFFF}У вас недостаточно бронзы!");
			new id = player_Global_Int[playerid][100];
			if(GetMoney(playerid) < CellarInfoVar[id][ciCost]) SCM(playerid, COLOR_LIGHTRED,\
			 "[Ошибка] {FFFFFF}У вас недостаточно денег!");
			GiveMoney(playerid, -CellarInfoVar[id][ciCost]);
			InvAdd(playerid, 360, -7500);
			InvAdd(playerid, 361, -1000);
			InvAdd(playerid, 362, -100);
			InvAdd(playerid, 363, -10);
			new house = HouseEntered[playerid];
			HouseInfo[house][hPodval] = id;
			UpdateDataInt("houses", "Podval", HouseInfo[house][hPodval], HouseInfo[house][hID],"=");
			SelectCellar(playerid, 1);
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно приобрели подвал \'%s\'!", CellarInfoVar[id][ciName]);
		}
		case 7760: SPD(playerid, 7759, DIALOG_STYLE_LIST, !"{FFFFFF}Покупка | {ae433d}Подвал", !"{FFFFFF}Информация о подвале\nПриобрести подвал", !"»", !"x");
		case 7757:
		{
			new id = HouseInfo[HouseEntered[playerid]][hPodval];
			if(!response || id == -1) return 1;
			if(!listitem)
			{
				str_d[0] = EOS, f(str_d, sizeof str_d, "\n\n{FFFFFF}Подвал: {85bb65}%s\n{FFFFFF}Тип: {85bb65}Комфорт\n\n", CellarInfoVar[id][ciName]);
				SPD(playerid, 7758, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Информация | {ae433d}Подвал", str_d, !"«", !"");
			}
			else SelectCellar(playerid, 0);
		}
		case 7758: SPD(playerid, 7757, DIALOG_STYLE_LIST, !"{FFFFFF}Настройки | {ae433d}Подвал", !"{FFFFFF}Информация\nОбновить подвал", !"»", !"x");
		case 25779:
		{
			if(!response) return 1;
			if(!listitem)
			{
				if(!PI[playerid][pHeal])
				{
					new Float:Health = PlayerHealthAC[playerid];
					if(Health < 100.0) SPD(playerid, 186, DIALOG_STYLE_MSGBOX, "Курс лечения", "{FFFFFF}Вы хотите пройти курс лечения?", "Да", "Нет");
					else SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы здоровы!");
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже проходите лечение!");
			}
			else SPD(playerid, 15310, DIALOG_STYLE_MSGBOX, !"Быстрое лечение", !"{ffffff}Вы действительно хотите пройти курс\nбыстрой реабилитации за {ffff00}$500000{ffffff}?", !"Да", !"Закрыть");
		}
		case 25475:
		{
			if(!listitem) callcmd::showpass(playerid, IntToStr(playerid));
			else callcmd::showmc(playerid, IntToStr(playerid));
		}
		case 25305:
		{
			if(!response)
			{
				ResetRacePlayer(playerid);
				return 1;
			}
			else if(TextFind(inputtext, "Отключить"))
			{
				if(InJob[playerid] > 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не можете отключать gps во время выполнения работы!");
				DisablePlayerRaceCheckpoint(playerid);
				DisablePlayerCheckpoint(playerid);
			}
			else
			{
				player_Global_Int[playerid][130] = listitem;
				switch(listitem)
				{
					case 5:	return SPD(playerid, 25306, DIALOG_STYLE_TABLIST_HEADERS, !"", !"Номер\tНазвание\tКоличество звезд\t\n{FFFFFF}1.\tНайти ближайший отель\t{FFB03F}???{FFFFFF}\n2.\tThe Cosmopolitan\t{66FF3F}*****{FFFFFF}\n3.\tMardan Palace\t{66FF3F}*****{FFFFFF}\n4.\tMarina Vay Sands\t{66FF3F}*****{FFFFFF}\n5.\t The Peninsula Beverly Hills\t{FF433F}***{FFFFFF}\n6.\tSundet Marquis\t{FFB03F}****{FFFFFF}\n7.\t Diamonds\t{FF433F}***{FFFFFF}\n8.\tCurio Collection by Hilton\t{66FF3F}*****{FFFFFF}\n9.\tThe Kinney Venice\t{FFB03F}****{FFFFFF}\n10.\tОтель Блуббери\t{FF433F}***{FFFFFF}\n11.\tCrowne Plaza Los\t{FFB03F}****{FFFFFF}\n12.\tFour Seasons\t{FF433F}***{FFFFFF}\n13.\tVallay of San-Fierro\t{FFB03F}****{FFFFFF}\n14.\tThe London West\t{66FF3F}*****{FFFFFF}\n15.\tHotel Casa del Mar\t{FF433F}***{FFFFFF}\n16.\t4 Dragons\t{66FF3F}*****{FFFFFF}\n17.\tInterContinental\t{66FF3F}*****{FFFFFF}\n\
						18.\tEmerald Isle\t{FFB03F}****{FFFFFF}\n19.\tHoliday Inn Express\t{FFB03F}****{FFFFFF}\n20.\tRock Hotel\t{FFB03F}****{FFFFFF}\n21.\tGanton 1\t{FF433F}***{FFFFFF}\n22.\tGanton 2\t{FF433F}***{FFFFFF}\n23.\tHotel Fort Carson\t{FF433F}***{FFFFFF}\n24.\tHotel Angel Pine\t{FF433F}***{FFFFFF}\n\
						25.\tHotel Emerald Island\t{FF433F}***{FFFFFF}\n\
						26.\tHotel Emerald Island\t{FF433F}***{FFFFFF}\n\
						27.\tHotel Business\t{FFD700}*****{FFFFFF}\n\
						28.\tHotel Luxe\t{FFD700}*****{FFFFFF}", !"Выбрать", !"Закрыть");
					case 8: return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"GPS | Фермы", !"\
						Ферма\tКоличество заданий\tКоличество рабочих\tСредняя зарплата\n\
						Ферма №1\t9774\t0 из 30\t$4000\n\
						Ферма №2\t11944\t0 из 30\t$4000\n\
						Ферма №3\t17816\t0 из 30\t$4000\n\
						Ферма №4\t27309\t0 из 30\t$4000\n\
						Ферма №5\t29382\t0 из 30\t$4000\n \t \t \t \n\
						{31B404}Найти бизнес\t(аренда сельхоз. техники)\t \t \n\
						{31B404}Найти водокачку\t(набор воды для ферм)\t \t \n\
						{31B404}Найти дядю Сэма\t(городской барыга)\t \t \n \n\
						{31B404}Сельскохозяйственный магазин\t№1\t \t \n\
						{31B404}Сельскохозяйственный магазин\t№2\t \t \n \n\
						{31B404}Ферма хлопка и льна\t \t \t ", !"Выбрать", !"Назад");
					case 9: return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Секонд-хенды", !"\
						{ffff00}Секонд-хенд\t{ffff00}Начало распродажи\t{ffff00}Количество одежды на распродаже\n\
						Секонд-хенд №1\t{ffff00}15:00\t22564 ед. товара\n\
						Секонд-хенд №2\t{ffff00}18:00\t10612 ед. товара\n\
						Секонд-хенд №3\t{ffff00}12:00\t29406 ед. товара\n\
						Секонд-хенд №4\t{ffff00}20:00\t35872 ед. товара\n \n\
						{cccccc}Склад комиссионной одежды\t{cccccc}работает с 10:00\t{cccccc}до 11:00", !"Выбрать", !"Назад");
					case 10:
					{
						str_1[0] = EOS, strcat(str_1, "{FFFFFF}Номер склада\t{FFFFFF}Город (Округ)\t{FFFFFF}Дистанция\n");
						new Float:Distance;
						for(new i; i < sizeof(InfoGPS); i++)
						{
							if(InfoGPS[i][igType] != listitem) continue;
							Distance = GetPlayerDistanceFromPoint(playerid, InfoGPS[i][igX], InfoGPS[i][igY], InfoGPS[i][igZ]);
							str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}%s\t%i метров\n", InfoGPS[i][igName], floatround(Distance, floatround_ceil));
							strcat(str_1, str_2);
						}
						return SPD(playerid, 25306, DIALOG_STYLE_TABLIST_HEADERS, !"Складские помещения", str_1, !"Выбрать", !"Назад");
					}
					case 12: return SearchBiz(playerid, 37, "ближайшего склада дальнобойщиков");
					case 13: return SearchBiz(playerid, 36, "ближайшего автосервиса");
					case 14,15: return SearchBiz(playerid, 6, "ближайшего АЗС");
					case 16: return SearchBiz(playerid, 2, "ближайшего магазина 24/7");
					case 17: return SearchBiz(playerid, 9, "ближайшего магазина аксессуаров");
					case 18: return SearchBiz(playerid, 7, "ближайшей закусочной");
					case 19: return SearchBiz(playerid, 1, "ближайшего бара");
					case 20: return SearchBiz(playerid, 3, "ближайшего магазина одежды");
					case 21: return SearchBiz(playerid, 8, "ближайшей аренды транспорта");
					case 22, 29..33: return SearchBiz(playerid, 0, "ближайшего магазина оружия");
					case 25: return SearchBiz(playerid, 19, "ближайшего ларька");
					case 27: return SearchBiz(playerid, 26, "ближайшей мастерской одежды");
					case 28: return SearchBiz(playerid, 24, "ближайшего магазина видеокарт");
					case 23: 
					{
						new Float:Distance, Float:Distance_ = 100000.0, bizid3;
						for(new i; i < sizeof(parking); i++)
						{
							Distance = GetPlayerDistanceFromPoint(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]);
							if(Distance < Distance_) bizid3 = i, Distance_ = Distance;
						}
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего авто-паркинга отмечено красным маркером.");
						EnableGPSForPlayer(playerid, parking[bizid3][pEnter_x], parking[bizid3][pEnter_y], parking[bizid3][pEnter_z]);
						return 1;
					}
					case 24:
					{
						new Float:Distance, Float:Distance_ = 100000.0, bizid3;
						for(new i; i < sizeof(Bankomats); i++)
						{
							Distance = GetPlayerDistanceFromPoint(playerid, Bankomats[i][0],Bankomats[i][1],Bankomats[i][2]);
							if(Distance < Distance_) bizid3 = i, Distance_ = Distance;
						}
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего банкомата отмечено красным маркером.");
						EnableGPSForPlayer(playerid, Bankomats[bizid3][0],Bankomats[bizid3][1],Bankomats[bizid3][2]);
						return 1;
					}
					case 26:
					{
						new Float:Distance, Float:Distance_ = 100000.0, bizid3;
						for(new i; i < sizeof(MusorPos); i++)
						{
							Distance = GetPlayerDistanceFromPoint(playerid, MusorPos[i][0],MusorPos[i][1],MusorPos[i][2]);
							if(Distance < Distance_) bizid3 = i, Distance_ = Distance;
						}
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшей мусорки отмечено красным маркером.");
						EnableGPSForPlayer(playerid, MusorPos[bizid3][0],MusorPos[bizid3][1],MusorPos[bizid3][2]);
						return 1;
					}
					//case 34: //event mp
					case 35: return EnableGPSForPlayer(playerid, 1420.4176, -1685.8624, 13.5469);
					case 36:
					{
						SetPVarInt(playerid, !"SearchHouse", 1);
						callcmd::house(playerid);
						return 1;
					}
					case 37: return callcmd::gps(playerid);
					case 39: return SCM(playerid, -1, !"этот пункт в доработке!");
				}
				strdel(inputtext, 0, 2);
				str_1[0] = EOS,strcat(str_1, "{CCCCCC}Название\t{CCCCCC}Расстояние\n");
				new Float:Distance, count;
				for(new i; i < sizeof(InfoGPS); i++)
				{
					if(InfoGPS[i][igType] != listitem) continue;
					Distance = GetPlayerDistanceFromPoint(playerid, InfoGPS[i][igX], InfoGPS[i][igY], InfoGPS[i][igZ]);
					str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}[%i] %s\t{CCCCCC}[ %.2f м. ]\n", InfoGPS[i][igID]+1, InfoGPS[i][igName], Distance);
					strcat(str_1, str_2);
					count++;
				}
				if(!count) return 1;
				else SPD(playerid, 25306, DIALOG_STYLE_TABLIST_HEADERS, inputtext, str_1, "Выбор", "Назад");
			}
		}
		case 25306:
		{
			if(!response) return callcmd::gps(playerid),ResetRacePlayer(playerid);
			//custom
			new min2 = -1;
			switch(player_Global_Int[playerid][130])
			{
				case 5:
				{
					if(!listitem)
					{
						min2 = SearchFirstGPS(playerid);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего отеля успешно отмечено в вашем GPS.");
						return EnableGPSForPlayer(playerid, InfoGPS[min2][igX], InfoGPS[min2][igY], InfoGPS[min2][igZ]);
					}
					listitem--;
				}
			}
			//default
			if(min2 == -1)
			{
				for(new i; i < sizeof(InfoGPS); i++)
				{
					if(player_Global_Int[playerid][130] == InfoGPS[i][igType] && InfoGPS[i][igX] != 0.0)
					{
						min2 = i;
						break;
					}
				}
			}
			player_Global_Int[playerid][112] = min2+listitem;
			EnableGPSForPlayer(playerid, InfoGPS[min2+listitem][igX], InfoGPS[min2+listitem][igY], InfoGPS[min2+listitem][igZ]);
		}
		case 1125:
		{
			if(!response) return ResetRacePlayer(playerid);
			extract inputtextsave -> new amount; else return ResetRacePlayer(playerid);
			if(GetDonate(playerid) <= amount || GetDonate(IsPlayerToRaceID[playerid]) <= amount || amount <= 1 || amount >= 100000000)
				return SPD(playerid, 1125, DIALOG_STYLE_INPUT, !"Гонка", !"Введите количество AZ Coins, которое вы хотите поставить!", !"Предложить", !"Закрыть"),
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У кого то из вас недостаточно AZ Coins, введите сумму ниже!");
				
			IsPlayerRacePresentCount[playerid] = amount;
			IsPlayerRacePresentCount[IsPlayerToRaceID[playerid]] = amount;
			new Float:Distance = GetPlayerDistanceFromPoint(playerid, gps_position[playerid][0], gps_position[playerid][1], gps_position[playerid][2]);
			new id = player_Global_Int[playerid][112];
			str_2[0] = EOS;
			if(id != -1) f(str_2, sizeof str_2, "%s", InfoGPS[id][igName]);
			else strcat(str_2, "Неизвестное место");
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы предложили игроку %s[%i] гонку до %s [ %2.f м. ]", PN(IsPlayerToRaceID[playerid]), IsPlayerToRaceID[playerid], str_2, Distance);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Игрок %s[%i] предложил вам гонку до %s [ %2.f м. ]", PN(playerid), playerid, str_2, Distance);
			SPD(IsPlayerToRaceID[playerid], 1126, DIALOG_STYLE_MSGBOX, !"Гонка", str_1, !"Согласен", !"Отказаться");
			IsPlayerToRaceID[IsPlayerToRaceID[playerid]] = playerid;
		}
		case 1126:
		{
			if(!response)
			{
				SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы отказался от гонки!"), SCM(IsPlayerToRaceID[playerid],COLOR_VALIK, "[Информация] {FFFFFF}Игрок отказался от гонки!");
				DisablePlayerRaceCheckpoint(playerid);
				DisablePlayerCheckpoint(playerid);
				DisablePlayerRaceCheckpoint(IsPlayerToRaceID[playerid]);
				DisablePlayerCheckpoint(IsPlayerToRaceID[playerid]);
				ResetRacePlayer(IsPlayerToRaceID[playerid]);
				ResetRacePlayer(playerid);
				return 1;
			}
			EnableGPSForPlayer(playerid, gps_position[IsPlayerToRaceID[playerid]][0], gps_position[IsPlayerToRaceID[playerid]][1], gps_position[IsPlayerToRaceID[playerid]][2]);
			SCMf(playerid, COLOR_VALIK, 					"[Информация] {FFFFFF}Вы согласились на гонку! (Сумма выигрыша: %i Az Coins)", IsPlayerRacePresentCount[playerid]);
			SCMf(IsPlayerToRaceID[playerid],COLOR_VALIK, 	"[Информация] {FFFFFF}Вы согласился на гонку! (Сумма выигрыша: %i Az Coins)", IsPlayerRacePresentCount[playerid]);
		}
        case 3725:
	    {
			if(!response) return 1;
			extract inputtextsave -> new amount; else return 0;
	    	if(amount > 10000) return SendBotMessage(playerid,"Можно за раз обменивать не больше 10000 AZ-Coin's!");
	    	if(amount <= 0) return 1;
	    	if(GetDonate(playerid) < amount*750000) return SendBotMessage(playerid,"У тебя недостаточно AZ Coins");
	    	GiveDonate(playerid,-amount*750000);
	    	GiveDonateRub(playerid,amount);
	    	SendBotMessage(playerid,"Вот твои AZ-Ruble's удачи.");
		}
		case 25529:
		{
			if(!response) return 1;
			if(!listitem)
			{
				HideFamily(playerid,0);
				str_2 = "{b0e73a}(Ранг) Ник игрока [уровень]\t{ffffff}Семейный квест\t{ffffff}Расстояние\t{ffffff}АФК\n\n";
				new count = 1, Float:Distance, Float:Position_z[3];
				foreach_family(i)
				{
					if(PI[playerid][pFamilyMember] != PI[i][pFamilyMember] || !IsPlayerLogged[i]) continue;
					GetPlayerPos(i, Position_z[0], Position_z[1], Position_z[2]);
					Distance = GetPlayerDistanceFromPoint(playerid, Position_z[0], Position_z[1], Position_z[2]);
					str_1[0] = EOS, f(str_1, sizeof(str_1),"(1) %s(%i) [%i]\t0/8\t%fм.\t%i\n\
					", PN(i), i, PI[i][pLevel], Distance, PlayerAFKTime[i]);
					strcat(str_2, str_1);
					count++;
				}
				str_1[0] = EOS, f(str_1, sizeof(str_1), !"%s (В сети: %i) | {ae433d}Семья", FamilyInfo[pFamilyID(playerid)][famName], count);
				SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_2, !"Принять", !"Отмена");
			}
			else TogglePlayerMap(playerid, true, true);
		}
		case 10801:
		{
			if(!response) return DeletePVar(playerid, !"IDBILL");
			new i = GetPVarInt(playerid, "IDBILL");
			#include modules/TEXTDRAWS/Billboard
			for(new j; j < 60; j++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][j]);
			SelectTextDraw(playerid, 0x808080FF), BillOpen{playerid} = true;
			BillboardInfo[i][bHours] = 10;
			SetString(BillboardInfo[i][bLine1], "Строка 1"), SetString(BillboardInfo[i][bLine2], "Строка 2"), SetString(BillboardInfo[i][bLine3], "Строка 3");
			f(BillboardInfo[i][bText], 100, "%s\n%s\n%s", BillboardInfo[i][bLine1], BillboardInfo[i][bLine2], BillboardInfo[i][bLine3]);
			SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF000000, 0, 1);
		    ////7,288574	//?+22,206177 //?2,299289 //+-5,918701 //+?17,420776 //?1,826457
			SetPlayerCameraPos(playerid, BillboardInfo[i][bPosCamera][0],\
			BillboardInfo[i][bPosCamera][1], BillboardInfo[i][bPosCamera][2]);

			SetPlayerCameraLookAt(playerid, BillboardInfo[i][bPosCamera][3],\
			BillboardInfo[i][bPosCamera][4], BillboardInfo[i][bPosCamera][5]);
		}
		case 10802:
		{
		    if(!response) return 1;
			str_1[0] = EOS, f(str_1, sizeof str_1, !"Строка %d", listitem+1), SetPVarInt(playerid, !"IDLINE", listitem);
            SPD(playerid, 10803, DIALOG_STYLE_INPUT, str_1, "{ffffff}Введите текст:", "Изменить", "Назад");
		}
		case 10803:
		{
		    if(!response){
                SPDf(playerid, 10802, DIALOG_STYLE_LIST, !"Выберите строку", "Изменить", "Закрыть", "{FFFFFF}%s\n%s\n%s", BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine1], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine2], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine3]);
                DeletePVar(playerid, !"IDLINE");
				return 1;
		    }
		    if(strlen(inputtextsave) < 2 || strlen(inputtextsave) > 25){
		        str_1[0] = EOS, f(str_1, sizeof str_1, !"Строка %d", GetPVarInt(playerid, "IDLINE")+1);
            	SPD(playerid, 10803, DIALOG_STYLE_INPUT, str_1, "{ffffff}Введите текст:", "Изменить", "Назад");
            	return 1;
		    }
		    new i = GetPVarInt(playerid, "IDBILL");
			switch(GetPVarInt(playerid, "IDLINE"))
			{ 
				case 0: f(BillboardInfo[i][bLine1], 25, "%s", inputtextsave); 
				case 1: f(BillboardInfo[i][bLine2], 25, "%s", inputtextsave); 
				case 2: f(BillboardInfo[i][bLine3], 25, "%s", inputtextsave); 
			}
			f(BillboardInfo[i][bText], 85, "%s\n%s\n%s", BillboardInfo[i][bLine1], BillboardInfo[i][bLine2], BillboardInfo[i][bLine3]);
			SetBillColor(i, BillboardInfo[i][bColor]);
			SPDf(playerid, 10802, DIALOG_STYLE_LIST, !"Выберите строку", "Изменить", "Закрыть", "{FFFFFF}%s\n%s\n%s", BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine1], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine2], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine3]);
            DeletePVar(playerid, !"IDLINE");
		}
		case 10804:
		{
		    if(!response) return 1;
		    if(PI[playerid][pMoney] < BillboardInfo[GetPVarInt(playerid, "IDBILL")][bHours]*1000000) return SCM(playerid, COLOR_RED, !"У вас не хватает денег!");
		    GiveMoney(playerid, -BillboardInfo[GetPVarInt(playerid, "IDBILL")][bHours]*1000000);
			BillboardInfo[GetPVarInt(playerid, "IDBILL")][bOwner] = PI[playerid][pID];
            CloseBill(playerid, 1);
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", "{FFFFFF}\n\nВы успешно купили наружную рекламу на этом баннере.\n\n", "Закрыть", "");
		}
		case 10805:{
		    if(!response) return DeletePVar(playerid, !"IDBILL2");
			new i = GetPVarInt(playerid, "IDBILL2");
			CancelSelectTextDraw(playerid);
		    EnableGPSForPlayer(playerid, BillboardInfo[i][bPosBill][0], BillboardInfo[i][bPosBill][1], BillboardInfo[i][bPosBill][2]);
		    DeletePVar(playerid, !"IDBILL2");
		}
		case 25453:
		{
			if(!response) return 1;
			if(!(PI[playerid][pCasinoTime] >= 1200)) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Для вращения колеса нужно отыграть 20 минут!");
			if(PI[playerid][pCasinoUsed] != false) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы уже вращали сегодня колесо!");
			if(casino_rouletta_status != -1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Ожидайте очереди для вращения колеса!");
			PI[playerid][pCasinoUsed] = true;
			PI[playerid][pCasinoTime] = 1200;
			casino_rouletta_status = playerid;
			casino_rouletta_velocity = 0.75;
			casino_rouletta_offset = 360;
			ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 3.8, 0, 1, 1, 1 , 1, 1);
			InterpolateCameraPos(playerid, 2267.2153, -804.0592, 1408.9911, 2266.3677, -805.2285, 1408.4572, 3000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 2267.0269, -805.0164, 1408.7715, 2266.3677, -808.2285, 1408.4572, 3000, CAMERA_MOVE);
			MoveDynamicObject(casino_rouletta_id, 2266.367676, -808.228516, 1408.467163, casino_rouletta_velocity, 0.000000, casino_rouletta_offset, 179.999863);
		}
		case 25053:
		{
			if(!response) return 1;
			SPD(playerid, 25054, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Примечания игры в подкидного дурака {ae433d}| Дурак", (str_f("\
				\n\n\t{ff704d}Примечания, нюансы игры в «Дурака» на сервере %s RP\n\
				{ffffff}* когда игра начинается, у всех игроков изымаются фишки в количестве ставки стола. (у каждого стола ставка разная)\n\
				* чтобы побить карту, нужно кликнуть сначала на свою карту(которой хотите побить), а потом кликнуть на ту карту, которую хотите побить.\n\
				* игрок, который первым лишился всех карт, считается победителем, он получает приз в двойном размере ставке (например, ставка 100 фишек, тогда он получит 200 фишек)\n\
				* остальным игрокам просто возвращается их ставка обратно, кроме дурака, ему не возвращается ничего.\n\
				* если у игрока во время игры в «Дурака» происходит: выход из игры(/quit), смерть или телепорт, тогда игрок исключается из игры, без возвращения ставки.\n\
				* если ведущий игрок исключается из игры(при этом еще не сделав хода), то ведущим назначается тот игрок который должен был отбиватся, а новым отбивающимся назначается следующий.\n\
				* если отбивающийся игрок исключается из игры, приэтом он еще не разу не отбивался в текущей схватке, тогда отбивающим назначается следующий игрок после исключенного,\n\
				и тогда он должен будет отбить те карты, которые должен был отбить исключенный игрок.\n\
				* если отбивающийся игрок исключается из игры, приэтом он уже отбился хотя бы один раз в текущей схватке, тогда все отбитые карты идут в отбой,\n\
				а не отбитые возвращаются тем, кто их подкидывал(если тот кто подкидывал карту тоже уже был исключен, то карта идёт в колоду)\n\
				* если у вас стоят модификации(ENB тоже к ним относится), которые заменяют текстуры игровых карт, тогда у вас возможно будет 'две пиковых дамы', \
				на самом деле только одна будет пиковой.\nэто вызвано ошибкой модификации, две одинаковых текстуры отвечают за две дамы разных мастей.\n\n\n\
				\t\t\t\t\t\t\t\t\t\t\t\t  Виды мастей\n\t\t\t\tПика\t\t\t\t\tБубна\t\t\t\t\t\t\tЧерви\t\t\t\t\tТреф", ServerCFG[server_name])), !"»", !"«");
			for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, cardti[i]);
		}
		case 25054:
		{
			for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, cardti[i]);
		}
		case 15310:
		{
			if(!response) return 0;
			if(PI[playerid][pMoney] < 500000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			GiveMoney(playerid, -500000, "быстрое лечение в больнице");
			J_SetPlayerHealth(playerid, 100);
			return SCM(playerid, COLOR_LIGHTBLUE, !"Вы прошли курс быстрой реабилитации за $500000, теперь вы здоровы!");
		}
		case 3768: if(response) ResetDanceForPlayer(playerid);
		case 3767:
		{
			if(!response) return 1;
			if(PI[playerid][pMoney] < 500000) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не хватает денег на занятие.");
			if(GetPVarType(playerid, !"TimerDance") != PLAYER_VARTYPE_NONE) return 0;
			SetPVarInt(playerid, !"TimerDance", 180);
			for(new i; i < 4; i++) DanceKey[playerid][i] = random(3);
			CreateGlobalTDPlayer(playerid);
			DanceTimer[playerid] = SetTimerEx("SchoolDance",100,true,"d",playerid);
			GiveMoney(playerid, -500000);
			GiveBizMoney(playerid, 500000);
			switch(random(3))
			{
				case 0: J_SetPlayerPos(playerid, 1762.2983,-304.2903,1654.5376);
				case 1: J_SetPlayerPos(playerid, 1756.8829,-307.7861,1654.5376);
				case 2: J_SetPlayerPos(playerid, 1751.3748,-307.9007,1654.5376);
			}
			SetPlayerFacingAngle(playerid, 180.0);
			SPD(playerid, 0, 0, "Тренировка", "{FFFFFF}Нажимайте соответствующие стрелочки на клавиатуре в то время когда они проходят через круг в центре экрана.\n\n{AFAFAF}Длительность тренировки: {9ACD32}3{AFAFAF}минуты.\nЧтобы завершить тренировку раньше времени, нажмите повторно [{42B02C}пробел/шифт{AFAFAF}] после начала тренировки.", "Закрыть", "");
			TogglePlayerControllable(playerid, false);
		}

        case 7773:
        {
            if(!response) return DeletePVar(playerid, "ServerTypeCase7774"), callcmd::serversettings(playerid);
            TypeServ = GetPVarInt(playerid, "ServerTypeCase7774");
            SCMAll(COLOR_RED, (str_f("[Информация]{ffffff} Основатель %s[%i] сменил {DC4747}'Тип сервера'{ffffff} на {DC4747}'%s'{ffffff}.", PN(playerid), playerid,\
			(TypeServ == 0) ? ("Фулл РП") : ("Бонусник"))));
            SaveServerConfig();
            callcmd::serversettings(playerid);
            DeletePVar(playerid, "ServerTypeCase7774");
        }
        case 7774:
        {
            if(!response) return callcmd::serversettings(playerid);
            if(TypeServ == listitem) return SCM(playerid, COLOR_LIGHTRED, "[Информация]{ffffff} У сервера и так стоит этот тип!");
            switch(listitem)
            {
                case 0: SetPVarInt(playerid, "ServerTypeCase7774", 0), SPD(playerid, 7773, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Фулл РП", "\n{ffffff}В данном типе {DC4747}отключены{ffffff} АЗ-Рубли, /adonate, и так далее.\n", "Выбрать", "Назад");
                case 1: SetPVarInt(playerid, "ServerTypeCase7774", 1), SPD(playerid, 7773, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Бонусник", "\n{ffffff}В данном типе {DC4747}включены{ffffff} АЗ-Рубли, /adonate, и так далее.\n", "Выбрать", "Назад");
            }
        }
        case 7776:
        {
            if(!response) return callcmd::serversettings(playerid);

            if(NumberServID == listitem) return SCM(playerid, COLOR_LIGHTRED, "[Информация]{ffffff} У сервера и так стоит этот номер сервера!");

            NumberServID = listitem;
            SCMAll(COLOR_RED, (str_f("[Информация]{ffffff} Основатель %s[%i] сменил {DC4747}'Номер сервера' на {DC4747}'%s'{ffffff}.", \
				PN(playerid), playerid, Server_Names[listitem+1])));

    		SaveServerConfig();
            if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
			{
				for(new i; i < 9; i++) ShowPlayer_CustomInterface(playerid, i, false);
			}
			else ShowLogo(playerid);
        	callcmd::serversettings(playerid);
        }
		case 4680:
    	{
    	    new string[512], money_str[51], donate_str[51];
    	    MoneyStr(MONEYBONUS, money_str);
    	    MoneyStr(DONATEBONUS, donate_str);

			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						//Инфа
						format(string,sizeof(string), "\
							{ffffff}Текущий бонус стоит: \n\
							{AFAFAF}level = {ffffff}%d\n{AFAFAF}money = {ffffff}%s$\n{AFAFAF}donate = {ffffff}%s", LVLBONUS, money_str, donate_str);

						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Бонус",string,"Закрыть", "");
						return false;
					}
				case 1:
					{
					    LVLBONUS = 1;
					    MONEYBONUS = 300;
					    DONATEBONUS = 0;

					    new query[256];
						format(query, sizeof(query), "UPDATE`server_settings` SET `bonus_level`='%d',`bonus_money`='%d',`bonus_donate`='%d' WHERE `id`='1';", LVLBONUS, MONEYBONUS, DONATEBONUS);
						mysql_tquery(mysql, query);

					    format(string,sizeof(string), "\
							{ffffff}Вы успешно изменили бонус сервера!\n\
							{AFAFAF}level = {ffffff}%d\n{AFAFAF}money = {ffffff}%s$\n{AFAFAF}donate = {ffffff}%s", LVLBONUS, money_str, donate_str);

						SPD(playerid,0,0,"",string,"Понял","");
					}
				case 2:
					{
						LVLBONUS = 3;
					    MONEYBONUS = 1000000;
					    DONATEBONUS = 100;

					    new query[256];
						format(query, sizeof(query), "UPDATE`server_settings` SET `bonus_level`='%d',`bonus_money`='%d',`bonus_donate`='%d' WHERE `id`='1';", LVLBONUS, MONEYBONUS, DONATEBONUS);
						mysql_tquery(mysql, query);

					    format(string,sizeof(string), "\
							{ffffff}Вы успешно изменили бонус сервера!\n\
							{AFAFAF}level = {ffffff}%d\n{AFAFAF}money = {ffffff}%s$\n{AFAFAF}donate = {ffffff}%s", LVLBONUS, money_str, donate_str);

						SPD(playerid,0,0,"",string,"Понял","");
					}
				case 3:
					{
						LVLBONUS = 10;
					    MONEYBONUS = 10000000;
					    DONATEBONUS = 5000;

					    new query[256];
						format(query, sizeof(query), "UPDATE`server_settings` SET `bonus_level`='%d',`bonus_money`='%d',`bonus_donate`='%d' WHERE `id`='1';", LVLBONUS, MONEYBONUS, DONATEBONUS);
						mysql_tquery(mysql, query);

					    format(string,sizeof(string), "\
							{ffffff}Вы успешно изменили бонус сервера!\n\
							{AFAFAF}level = {ffffff}%d\n{AFAFAF}money = {ffffff}%s$\n{AFAFAF}donate = {ffffff}%s", LVLBONUS, money_str, donate_str);

						SPD(playerid,0,0,"",string,"Понял","");
					}
				case 4:
					{
						// свой
						SPD(playerid, 4681, DIALOG_STYLE_INPUT, "", "\n\
							{BFE54C}Введите бонус сервера(level,money,donate)\n {AFAFAF}Пример: 10,1000,0", "OK", "Отмена");

						return 1;
					}
				}
			}
		}
		case 4681:
	    {
			if(response)
			{
			    new nlevel,nmoney,ndonate, string[1024];

				sscanf(inputtext,"p<,>ddd",nlevel, nmoney,ndonate);

				LVLBONUS = nlevel;
				MONEYBONUS = nmoney;
				DONATEBONUS = ndonate;

				new money_str[51], donate_str[51];
	    	    MoneyStr(MONEYBONUS, money_str);
	    	    MoneyStr(DONATEBONUS, donate_str);

				//sscanf(inputtext, "d,d,d", LVLBONUS,MONEYBONUS,DONATEBONUS);

				new query[256];
				format(query, sizeof(query), "UPDATE`server_settings` SET `bonus_level`='%d',`bonus_money`='%d',`bonus_donate`='%d' WHERE `id`='1';", LVLBONUS, MONEYBONUS, DONATEBONUS);
				mysql_tquery(mysql, query);

				format(string,sizeof(string), "\
					{ffffff}Вы успешно изменили бонус сервера!\n\
					{AFAFAF}level = {ffffff}%d\n{AFAFAF}money = {ffffff}%s$\n{AFAFAF}donate = {ffffff}%s", LVLBONUS, money_str, donate_str);

				SPD(playerid,0,0,"",string,"Понял","");
			}
		}
        case 7795:
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 12: SPD(playerid, 7774, DIALOG_STYLE_LIST, "{ffffff}Выберите тип сервера", "{DC4747}1.{FFFFFF} Фулл РП\n{DC4747}2.{FFFFFF} Бонусник", "Выбрать", "Назад");
                case 13: SPD(playerid, 7799, DIALOG_STYLE_LIST, "{ffffff}Выберите статус пароля сервера", "{DC4747}1.{FFFFFF} Пустой\n{DC4747}2.{FFFFFF} /change_password", "Выбрать", "Назад");
				case 14: SPD(playerid, 7798, DIALOG_STYLE_LIST, "{ffffff}Выберите статус пикапа паспорта", "{DC4747}1.{FFFFFF} Отключить\n{DC4747}2.{FFFFFF} Активировать", "Выбрать", "Назад");
				case 15:
				{
					SPD(playerid, 7776, DIALOG_STYLE_LIST, "{ffffff}Выберите номер сервера", "\
						{DC4747}1.{FFFFFF} Phoenix\n\
						{DC4747}2.{FFFFFF} Tucson\n\
						{DC4747}3.{FFFFFF} Scottdale\n\
						{DC4747}4.{FFFFFF} Chandler\n\
						{DC4747}5.{FFFFFF} Brainburg\n\
						{DC4747}6.{FFFFFF} Saint-Rose\n\
						{DC4747}7.{FFFFFF} Mesa\n\
						{DC4747}8.{FFFFFF} Red-Rock\n\
						{DC4747}9.{FFFFFF} Yuma\n\
						{DC4747}10.{FFFFFF} Surprise\n\
						{DC4747}11.{FFFFFF} Prescott\n\
						{DC4747}12.{FFFFFF} Glendale\n\
						{DC4747}13.{FFFFFF} Kingman\n\
						{DC4747}14.{FFFFFF} Winslow\n\
						{DC4747}15.{FFFFFF} Payson\n\
						{DC4747}16.{FFFFFF} Gilbert\n\
						{DC4747}17.{FFFFFF} Show Low\n\
						{DC4747}18.{FFFFFF} Casa-Grande\n\
						{DC4747}19.{FFFFFF} Page\n\
						{DC4747}20.{FFFFFF} Sun-City\n\
						{DC4747}21.{FFFFFF} Queen-Creek\n\
						{DC4747}22.{FFFFFF} Sedona\n\
						{DC4747}23.{FFFFFF} Holiday\n\
						{DC4747}24.{FFFFFF} Wednesday", "Выбрать", "Назад");
				}
                case 16: callcmd::serversettings(playerid);
				default:
                {
                    SetPVarInt(playerid, "listitemCFG", listitem);
                    str_2[0] = EOS;
                    f(str_2, sizeof(str_2), "{FFFFFF}Настройка | {DC4747}%s", ServerSettings[listitem][PunktName]);
                    return SPD(playerid, 7796, DIALOG_STYLE_INPUT, str_2, (str_f("\n\
						{ffffff}Введите {DC4747}в поле ниже{ffffff} новое состояние параметра \"{DC4747}%s{ffffff}\", и нажмите \"{DC4747}Изменить{ffffff}\".\n\n\
						", ServerSettings[listitem][PunktName])), "Изменить", "Назад");
                }
            }
        }
        case 7796:
        {
            static TextNoInt[50]; TextNoInt[0] = EOS;
            static pizda[30];
            if(!response) return DeletePVar(playerid, "listitemCFG"), callcmd::serversettings(playerid);
            if(sscanf(inputtextsave, "s[50]", TextNoInt)) return 1;
            switch(GetPVarInt(playerid, "listitemCFG"))
            {
                case 0:
                {
                    ServerCFG[server_name] = TextNoInt;

                    str_2[0] = EOS;
                    
                    new logostr2[1024];
                    f(str_2, sizeof(str_2), "%s", ServerCFG[server_name]);
                    f(logostr2, sizeof(logostr2), "%s", ServerCFG[server_name]);
					strdel(logostr2, 0, 0+1);

                    TextDrawHideForAll(Logotype[2]);
                    TextDrawHideForAll(Logotype[1]);

                    TextDrawSetString(Logotype[2], LogoStrOne(str_2));
                    TextDrawSetString(Logotype[1], logostr2);

                    if(PI[playerid][pCustomInterface][1] == 0)
					{
						TextDrawShowForAll(Logotype[2]);
                    	TextDrawShowForAll(Logotype[1]);
		            }

                    for(new i = 0; i < sizeof(reg_name); i ++) DestroyDynamicObject(reg_name[i]);
                    for(new i = 0; i < sizeof(garage_name); i ++) DestroyDynamicObject(garage_name[i]);
                    DestroyDynamicObject(smi_name);
                    for(new i = 0; i < sizeof(taxi_name); i ++) DestroyDynamicObject(taxi_name[i]);

					new servstr[500];
					format(servstr, sizeof(servstr), "© %s", ServerCFG[server_name]);

					reg_name[0] = CreateDynamicObject(19476, 1876.864990, 2228.277832, 1036.438110, 0.000000, -0.000051, 179.999680, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[0], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[1] = CreateDynamicObject(19476, 1876.864990, 2228.277100, 1037.401733, 0.000000, -0.000083, 179.999496, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[1], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[2] = CreateDynamicObject(19483, 1876.864990, 2227.026611, 1035.580322, 0.000000, -0.000051, 179.999680, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[2], 0, ServerCFG[server_name], 130, "Tahoma", 25, 1, 0xFFFFFFFF, 0, 1);
					reg_name[3] = CreateDynamicObject(19476, 1876.864990, 2229.495605, 1035.721191, 0.000000, -0.000090, 179.999451, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[3], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[4] = CreateDynamicObject(19476, 1876.864990, 2229.497559, 1038.217773, 0.000000, -0.000045, 179.999725, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[4], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[5] = CreateDynamicObject(19476, 1876.864990, 2225.777100, 1037.282227, 0.000000, -0.000067, 179.999588, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[6], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[6] = CreateDynamicObject(19476, 1876.864990, 2230.658691, 1035.610352, 0.000000, -0.000045, 179.999725, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[6], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[7] = CreateDynamicObject(19476, 1876.864990, 2225.767090, 1038.152466, 0.000000, -0.000083, 179.999496, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[7], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[8] = CreateDynamicObject(19476, 1876.864990, 2224.527832, 1035.610352, 0.000000, -0.000052, 179.999680, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[8], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[9] = CreateDynamicObject(19476, 1876.864990, 2231.907959, 1037.282227, 0.000000, -0.000060, 179.999634, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[9], 0, ServerCFG[server_name], 120, "Tahoma", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[10] = CreateDynamicObject(19476, 1876.864990, 2231.897949, 1038.152466, 0.000000, -0.000075, 179.999542, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[11], 0, ServerCFG[server_name], 120, "Calibri", 50, 1, 0xFFFFFFFF, 0, 1);
					reg_name[11] = CreateDynamicObject(19476, 1876.849609, 2229.511719, 1036.869141, 16.200001, -0.000076, 179.999542, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[11], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[12] = CreateDynamicObject(19476, 1876.849609, 2229.528320, 1036.926758, 16.200001, -0.000076, 179.999542, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[12], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
					reg_name[13] = CreateDynamicObject(19476, 1876.849609, 2225.789063, 1036.085938, 16.200001, -0.000068, 179.999588, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[13], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
					reg_name[14] = CreateDynamicObject(19476, 1876.849609, 2225.772461, 1036.028320, 16.200001, -0.000068, 179.999588, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[14], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[15] = CreateDynamicObject(19476, 1876.849609, 2227.070068, 1038.510742, 16.200001, -0.000108, 179.999359, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[15], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[16] = CreateDynamicObject(19476, 1876.849609, 2227.086670, 1038.568359, 16.200001, -0.000108, 179.999359, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[16], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
					reg_name[17] = CreateDynamicObject(19476, 1876.849609, 2230.682129, 1037.669922, 16.200001, -0.000068, 179.999588, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[17], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[18] = CreateDynamicObject(19476, 1876.849609, 2230.698730, 1037.727539, 16.200001, -0.000068, 179.999588, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[18], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
					reg_name[19] = CreateDynamicObject(19476, 1876.849609, 2231.903320, 1036.028320, 16.200001, -0.000060, 179.999634, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[19], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[20] = CreateDynamicObject(19476, 1876.849609, 2224.551270, 1037.669922, 16.200001, -0.000076, 179.999542, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[20], 0, "VILLAGE", 120, servstr, 70, 1, 0xFF5C4438, 0, 1);
					reg_name[21] = CreateDynamicObject(19476, 1876.849609, 2224.567871, 1037.727539, 16.200001, -0.000076, 179.999542, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[21], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);
					reg_name[22] = CreateDynamicObject(19476, 1876.849609, 2231.919922, 1036.085938, 16.200001, -0.000060, 179.999634, -1, 17); // 1
					SetDynamicObjectMaterialText(reg_name[22], 0, "LIFE IN THE", 120, servstr, 50, 1, 0xFF5C4438, 0, 1);

					garage_name[0] = CreateDynamicObject(19483, 1384.866821, -12.246814, 1001.135803, 0.000014, 0.000000, 89.999954, -1, 1);
					SetDynamicObjectMaterialText(garage_name[0], 0, ServerCFG[server_logo], 130, "Tahoma", 40, 1, 0xFFFFFFFF, 0, 1);
					garage_name[1] = CreateDynamicObject(19483, 1384.866821, -12.246814, 1001.376038, 0.000014, 0.000000, 89.999954, -1, 1);
					SetDynamicObjectMaterialText(garage_name[1], 0, ServerCFG[server_name], 130, "Tahoma", 80, 1, 0xFFFFFFFF, 0, 1);
					garage_name[2] = CreateDynamicObject(19483, 962.566650, 2130.057617, 1005.089355, 0.000000, -0.000007, 179.999954, -1, 1);
					SetDynamicObjectMaterialText(garage_name[2], 0, ServerCFG[server_logo], 130, "Tahoma", 55, 1, 0xFFFFFFFF, 0, 1);
					
					smi_name = CreateDynamicObject(7666, 1480.052246, -1689.470703, 15.766437, 60.495564, 270.000000, 179.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterialText(smi_name, 0, (str_f("%s NEWS", ServerCFG[server_name])), 140, "Arial", 70, 1, 0xFFFFFFFF, 0, 1);

					taxi_name[0] = CreateDynamicObject(19482, -874.538086, -1126.581055, 102.353333, -0.000000, -0.000009, 149.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterialText(taxi_name[0], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);
					taxi_name[1] = CreateDynamicObject(19482, -445.647949, -850.102478, 53.507275, -0.000009, 0.000010, 179.999908, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterialText(taxi_name[1], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);
					taxi_name[2] = CreateDynamicObject(19482, -1234.203369, -763.179077, 67.472115, -0.000009, 0.000018, -44.999985, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterialText(taxi_name[2], 0, (str_f("%s TAXI", ServerCFG[server_name])), 130, "Arial", 66, 1, 0xFF000000, 0, 1);

                    pizda = "Сменил название Логотипа";
                }
                case 1:
				{
				    ServerCFG[server_logo] = TextNoInt;

				    str_2[0] = EOS;
                    f(str_2, sizeof(str_2), "%s", ServerCFG[server_logo]);

                    TextDrawHideForAll(Logotype[0]);

                    TextDrawSetString(Logotype[0], str_2);

                    if(PI[playerid][pCustomInterface][1] == 0)
					{
						TextDrawShowForAll(Logotype[0]);
		            }

                    pizda = "Сменил название сервера";
				}
                case 2: Mode[CFG_Name] = TextNoInt, SetModOptions(), pizda = "Сменил название сервера";
				case 3: ServerCFG[server_reklama] = TextNoInt, SetModOptions(), pizda = "Сменил название рекламы GPS";
				case 4: ServerCFG[server_group_vk] = TextNoInt, pizda = "Сменил групу вк";
                case 5: ServerCFG[server_number] = TextNoInt, pizda = "Сменил номера транспортов";
                case 6: ServerCFG[server_mode] = TextNoInt, pizda = "Сменил название мода";
                case 7: ServerCFG[server_mail] = TextNoInt, pizda = "Сменил почту сервера";
                case 8: ServerCFG[server_discord] = TextNoInt, pizda = "Сменил дискорд сервера";
                case 9: ServerCFG[server_site] = TextNoInt, pizda = "Сменил сайт";
                case 10: ServerCFG[server_forum] = TextNoInt, pizda = "Сменил форум";
                case 11: ServerCFG[server_launcher] = TextNoInt, pizda = "Сменил ссылку на лаунчер";
            }
            if(GetPVarInt(playerid, "listitemCFG") != 14 || GetPVarInt(playerid, "listitemCFG") != 16)
			{
				SCMAll(COLOR_RED, (str_f("[Информация]{ffffff} Основатель %s[%i] сменил {DC4747}'%s'{ffffff} на {DC4747}\"%s\"{ffffff}.", \
				PN(playerid), playerid, ServerSettings[GetPVarInt(playerid, "listitemCFG")][PunktName], TextNoInt)));
			}
			SaveServerConfig();
			if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
			{
				for(new i; i < 9; i++) ShowPlayer_CustomInterface(playerid, i, false);
			}
			else ShowLogo(playerid);
            callcmd::serversettings(playerid);
            DeletePVar(playerid, "listitemCFG");
        }
        case 7797:
        {
            if(!response) return DeletePVar(playerid, "ServerTypeCase7788"), callcmd::serversettings(playerid);
            PickupStart = GetPVarInt(playerid, "ServerTypeCase7788");
            
            SCMAll(COLOR_RED, (str_f("[Информация]{ffffff} Основатель %s[%i] сменил {DC4747}'Пикап паспорта'{ffffff} на {DC4747}'%s'{ffffff}.", \
			PN(playerid), playerid, (PickupStart == 0) ? ("Отключен") : ("Активирован"))));
			
            SaveServerConfig();
            callcmd::serversettings(playerid);
            DeletePVar(playerid, "ServerTypeCase7788");
            ChangeBonusOther();
        }
        case 7798:
        {
            if(!response) return callcmd::serversettings(playerid);
            if(PickupStart == listitem) return SCM(playerid, COLOR_LIGHTRED, "[Информация]{ffffff} У сервера и так стоит этот тип!");
            switch(listitem)
            {
                case 0: SetPVarInt(playerid, "ServerTypeCase7788", 0), SPD(playerid, 7797, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Отключено", "\n{ffffff}В данном типе {DC4747}отключен{ffffff} доступ к пикапу получения паспорта и байка на спавне.\n", "Выбрать", "Назад");
                case 1: SetPVarInt(playerid, "ServerTypeCase7788", 1), SPD(playerid, 7797, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Активно", "\n{ffffff}В данном типе {DC4747}активирован{ffffff} доступ к пикапу получения паспорта и байка на спавне.\n", "Выбрать", "Назад");
            }
        }
        case 7800:
        {
            if(!response) return callcmd::serversettings(playerid);

            SCMAll(COLOR_RED, (str_f("[Информация]{ffffff} Основатель %s[%i] сменил статус {DC4747}'Пароля сервера'{ffffff} на {DC4747}'%s'{ffffff}.", \
			PN(playerid), playerid, (Mode[CFG_PASS_SERVER] == 0) ? ("Пустой") : ("/change_password"))));

            if(Mode[CFG_PASS_SERVER] != 0)
           	{
				Mode[RESTART_ETAPE] = 2;

				SendAdminsMessage(COLOR_WHITE, "{ff0000}[Внимание]: {00ff00}Сервер провиснет на несколько секунд! Идёт сохранение сервера...");
				SaveServer(), SetModOptions();
				SCM(playerid,COLOR_GREEN,"[Информация]: Сервер успешно сохранен!");

            	foreach(new i: Player)
             	{
              		if(PI[i][pAdmin] != 0) continue;
                	SCM(i, COLOR_RED, "[Информация] Владелец сервера поставиль сервер на пароль. Поэтому вы были кикнуты.");
                 	J_Kick(i, 345);
           		}
           		SetTimer("ServerRestart", 120000, false);
        	}
        	else
        	{
        	    Mode[RESTART_ETAPE] = 0;

				SaveServerConfig(), SetModOptions();
        	}
        }
        case 7799:
        {
            if(!response) return callcmd::serversettings(playerid);
            switch(listitem)
            {
                case 0: Mode[CFG_PASS_SERVER] = 0, SPD(playerid, 7800, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Пустой", "\n{ffffff}В данном типе {DC4747}пустой{ffffff} будет разрешен свободный доступ к серверу.\n", "Выбрать", "Назад");
                case 1: Mode[CFG_PASS_SERVER] = 1, SPD(playerid, 7800, DIALOG_STYLE_MSGBOX, "{ffffff}Тип | {DC4747}Рандом", "\n{ffffff}В данном типе {DC4747}рандом{ffffff} доступ к серверу будет произведен через специальный модом пароля доступа.\n", "Выбрать", "Назад");
            }
        }
		case 7777:
		{
			if !response *then return false;
			switch listitem do
			{
				case 1:
				{
					if !PI[playerid][pVkontakte] *then
						PlayerDialogVK(playerid, 1);
					else 
						PlayerDialogVK(playerid, 2);
				}
				default: PlayerDialogVK(playerid);
			}
		}
		case 7778:
		{
			if(!response) return PlayerDialogVK(playerid, 0);
			SCM(playerid, -1, "1 0");
			if(!strlen(inputtextsave) || strlen(inputtextsave) > 32) return PlayerDialogVK(playerid, 1);
			SCM(playerid, -1, "1");
			SetPVarString(playerid, "Stranicia", inputtextsave);
			
			new code = 100000+random(900000);
			SetPVarInt(playerid, !"CodeVK", code);
			
			
			str_1[0] = EOS, f(str_1, sizeof str_1, "vk_id=%s&msg=%d&list=0&nickname=%s", inputtextsave, code, PN(playerid));
			SendVK(playerid, str_1);
		}
		case 7779:
		{
			if !response || !strlen(inputtextsave) *then return false;
			if GetPVarInt(playerid, !"CodeVK") == strval(inputtextsave) *then
			{
				str_1[0] = EOS, GetPVarString(playerid, "Stranicia", str_1, 32);
				f(str_1, sizeof(str_1), "vk_id=%s&list=1", str_1);
				SendVK(playerid, str_1);
			}
		}
		case 7780:
		{
			if !response *then return false;
			PlayerDialogVK(playerid, 3);
		}
		case 7781:
		{
			if !response *then return false;
			if !strlen(inputtextsave) *then return false;
			if GetPVarInt(playerid, !"CodeVK") == strval(inputtextsave) *then
			{
				str_1[0] = EOS, f(str_1, sizeof(str_1), "vk_id=%d&list=4", PI[playerid][pVkontakte]);
				SendVK(playerid, str_1);
			}
		}
		case 7782:
		{
			if !response *then return Autorisation(playerid);
			if !strlen(inputtextsave) || !(GetPVarInt(playerid, !"CodeVK") == strval(inputtextsave)) *then 
				return SCM(playerid, 0x4c75a3FF, !"Вконтакте:{FFFFFF} Вы ввели неверный код авторизации"), KickEx(playerid);

			OnPlayerLogin(playerid);
			DeletePVar(playerid, !"CodeVK");
		}
		case 9929:
		{
			if(!response) return 0;
			str_1[0] = EOS;
			switch(listitem)
			{
				case 0: str_1 = "SELECT * FROM captchadata WHERE data >= DATE_SUB(NOW(), INTERVAL 1 HOUR) ORDER BY MS LIMIT 30;";
				case 1: str_1 = "SELECT * FROM captchadata WHERE data >= DATE_SUB(NOW(), INTERVAL 1 DAY) ORDER BY MS LIMIT 30;";
				case 2: str_1 = "SELECT * FROM captchadata WHERE data >= DATE_SUB(NOW(), INTERVAL 7 DAY) ORDER BY MS LIMIT 30;";
				case 4: f(str_1, sizeof str_1, "SELECT * FROM captchadata WHERE ownerId = %d ORDER BY MS LIMIT 30;", PI[playerid][pID]);
				default: str_1 = "SELECT * FROM captchadata WHERE data >= DATE_SUB(NOW(), INTERVAL 1 MONTH) ORDER BY MS LIMIT 50;";
			}
			mysql_tquery(mysql, str_1, "@captchatop", "d", playerid);
		}
		/*case 15900:
		{
			if(!response) return SPD(playerid, 15900, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Verification Forum Accounts", "\
			{FFFFFF}Для продолжения работы с {FA5858}админ-функциями, привяжите свой форумный аккаунт.\n\
			{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!", !"Продолжить", !"");
			//
			pTempForumVar{playerid} = 2;
			SPD(playerid, 15901, DIALOG_STYLE_INPUT, !"{FFFFFF}Verification Forum Accounts", "\
			{FFFFFF}Введите ваш {FA5858}Email адрес от форумного {FFFFFF}аккаунта\n\
			{FFFFFF}для продолжения верфикации нажмите 'Продолжить'\n\
			{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!", !"Продолжить", !"");
		}
		case 15901:
		{
			if(!response) return SPD(playerid, 15901, DIALOG_STYLE_INPUT, !"{FFFFFF}Verification Forum Accounts", "\
			{FFFFFF}Введите ваше {FA5858}форумное имя\n\
			{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!", !"Продолжить", !"");
			SCMf(playerid, -1, "%s", inputtextsave);
			mysql_queryf_fix(mysql_, "SELECT `user_id`, `username` FROM `xf_user` WHERE `email` = '%s' LIMIT 1;", true, inputtextsave);
			if(!cache_num_rows()) return cache_delete(result1), SPD(playerid, 15901, DIALOG_STYLE_INPUT, !"{FFFFFF}Verification Forum Accounts", "\
			{FFFFFF}Введите ваш {FA5858}Email адрес от форумного {FFFFFF}аккаунта\n\
			{FFFFFF}для продолжения верфикации нажмите 'Продолжить'\n\
			{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!\n \n\
			{cccccc}Ошибка: {FFFFFF}Форумного аккаунта с таким Email не было найдено.", !"Продолжить", !"");
			cache_get_int(0, !"user_id", PI[playerid][pForumID]);
			str_1[0] = EOS, cache_get_string(0, !"username", str_1);
			cache_delete(result1);
			pTempForumVar{playerid} = 255;
			SPDf(playerid, 15902, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Verification Forum Accounts", !"Верно", !"Неверно", "\
			{FFFFFF}Было найдено сходство с Email(%s) на Форумном нике(%s)\n\
			{cccccc}Подтвердите верны ли данные указанные в диалоговом окне!", inputtextsave, str_1);
			//
		}
		case 15902:
		{
			if(!response) return PI[playerid][pForumID] = -1, SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Верификация форумного аккаунта была прервана!")
			SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно верифицировали форумный аккаунт! (Доступен: /apanel)")
			UpdatePlayerDataInt(playerid, "ForumID", PI[playerid][pForumID]);
		}*/
		case 1569:
		{
			if(!response) return 1;
			new slot_stripe = player_Global_Int[playerid][88],
				slot_acs = player_Global_Int[playerid][89];
			if(!InvPlayerParams[0][playerid][slot_stripe]) InvPlayerParams[0][playerid][slot_stripe] = 1;
			if(InvPlayerParams[0][playerid][slot_stripe] > 3) InvPlayerParams[0][playerid][slot_stripe] = 3;
			
			InvPlayerParams[1][playerid][slot_acs] 	= InvPlayerParams[0][playerid][slot_stripe];
			PI[playerid][pInvItemUID][slot_acs]		= PI[playerid][pInvItem][slot_stripe];
			RefreshInv(playerid, slot_stripe);
			UseStripe[playerid] = false;
		}
		case 25195:
		{
			if(!response) return 1;
			if(FamilyAutoUID[playerid] == -1) return 1;
			new number = GetVehicleID(FamilyAutoUID[playerid]);
			if(number == INVALID_VEHICLE_ID) return 1;
			SCMf(playerid, COLOR_VALIK, "Вы эвакуировали транспорт %s(carid: %i) в семейный паркинг.",InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name],FamilyAutoUID[playerid]);
			SafeRemoveCar(number, number);
		}
		case 25194:
		{
			if(!response) return 1;
			listitem = player_Global_Int[playerid][120];
			if(player_Global_Int[playerid][listitem+10] == -1) return SCM(playerid, -1,!"return");
			mysql_queryf_fix(mysql, "SELECT `IDownable` FROM `ownable` WHERE `ID` = '%i' LIMIT 1;", true, player_Global_Int[playerid][listitem+10]);
			new id = -1;
			cache_get_int(0, !"IDownable", id);
			cache_delete(result1);
			if(id != -1) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Данный автомобиль уже занят!");
			mysql_pqueryf(mysql, "UPDATE `ownable` SET `OwnerFamilyUID` = '%i' WHERE `ID` = '%i' LIMIT 1;", PI[playerid][pID], player_Global_Int[playerid][listitem+10]);
			str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `ownable` WHERE `ID` = '%i' AND `OwnerFamily` != '-1' LIMIT 1;", player_Global_Int[playerid][listitem+10]);
			mysql_tquery(mysql, str_q, "Query_LoadCarFamily", "i", playerid);
			FamilyAutoSpawn[playerid] = true;
			SendFamilyMessagef(PI[playerid][pFamilyMember], "[Family Car] Член семьи %s[%i] взял '%s' с автопарка семьи.", PN(playerid), playerid, InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][listitem+50])][Model_Name]);
			SCMf(playerid, COLOR_VALIK, "Вы взяли транспорт '%s'. (если вы будете отсутствовать за рулём более 5 минут, транспорт будет отправлен в семейный паркинг)",InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][listitem+50])][Model_Name]);
		}
		case 15219:
		{
			if(!response) return 1;
			switch(player_GlobalID[playerid][listitem])
			{
				case -2:
				{
					SCM(playerid,-1,!"покупка слотов");
				}
				case -1:
				{
					if(FamilyAutoUID[playerid] != -1) 
					{
						SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы уже взяли автомобиль с автопарка семьи!");
						return SPDf(playerid, 25195, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"Взять", !"Назад", "{ffffff}Вы действительно хотите сдать автомобиль '%s'?",InfoConfigVehicle[SearchVehicleName(CarInfo[GetVehicleID(FamilyAutoUID[playerid])][cModel])][Model_Name]);
					}
					SPDf(playerid, 25194, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"Взять", !"Назад", "{ffffff}Вы действительно хотите взять автомобиль '%s'?",InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][listitem+50])][Model_Name]);
					player_Global_Int[playerid][120] = listitem;
				}
				default:
				{
					str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable`, `OwnerFamilyUID` FROM `ownable` WHERE `OwnerFamily` = '%i' LIMIT 12", PI[playerid][pFamilyMember]);
					mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,player_Global_Int[playerid][111],4);
				}
			}
		}
		case 25192:
		{
			if(!response) return 1;
			if(listitem > 1 || listitem < 0) return 1;
			player_Global_Int[playerid][111] = listitem;
			str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable`, `OwnerFamilyUID` FROM `ownable` WHERE `OwnerFamily` = '%i' LIMIT 12", PI[playerid][pFamilyMember]);
			mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,listitem,4);
		}
		case 995:
		{
			if(!response) return 1;
			if(IsPlayerPlayMP[playerid]) return SCM(playerid, 0x00CCCCFF,!">>> {FFFFFF}Вы уже зарегистрировались на мероприятие!");
			new count;
			if(!listitem) 
			{
				foreach_player(i) if(IsPlayerPlayMP[i] && !IsPlayerWarTeam[i]) count++;
				if(count >= 2) return SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Данная команда уже заполнена, выберите другую!");
				IsPlayerWarTeam[playerid] = false;
			}
			else 
			{
				foreach_player(i) if(IsPlayerPlayMP[i] && IsPlayerWarTeam[i]) count++;
				if(count >= 2) return SCM(playerid,0x00CCCCFF,!">>> {FFFFFF}Данная команда уже заполнена, выберите другую!");
				IsPlayerWarTeam[playerid] = true;
			}
			count = 0;
			foreach_player(i) if(IsPlayerPlayMP[i]) count++;
			if(count == 4) return SCM(playerid, 0x00CCCCFF,!">>> {FFFFFF}Все места уже кем-то заняты, вы можете покинуть мероприятие!");
			IsPlayerPlayMP[playerid] = true;
			SCMf(playerid,-1,!"count %i", count);
			SCM(playerid, 0x00CCCCFF,!">>> {FFFFFF}Вы успешно зарегистрировались на мероприятии, ожидайте начала!");
			if(count == 3) 
			{
				foreach_player(i) if(IsPlayerPlayMP[i]) SCM(i,0x00CCCCFF,!">>> {FFFFFF}Осталось совсем немного, проверка целостности команд");
				SetTimerEx("StartWar", 10000, 0, "i", 14);
			}
		}
		case 905:
		{
			if(!response) return 1;
			listitem++;
			if(PI[playerid][pAdmin] < listitem) return 1;
			str_1[0] = EOS;
			for(new i; i < sizeof(dahelp); i++) if(listitem == dahelp[i][adostupCMD] && PI[playerid][pAccessAdmin] >= dahelp[i][fdostupCMD]) f(str_1, sizeof(str_1), "%s\n{FFFFFF}%i. %s - %s", str_1, i+1, dahelp[i][nameCMD], dahelp[i][descriptionCMD]);
			str_2[0] = EOS, f(str_2, sizeof(str_2),"Администратор %i уровня", listitem);
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, str_2, str_1,!"Далее", !"Назад");
		}
		case 2052:
		{
		    if(response)
		    {
      			SetPVarInt(playerid, !"lisitem_donate", listitem);
		        f(str_1, sizeof(str_1), "{FFFFFF}Вы точно хотите купить Уровень Администратора {855dea}%i\n{FFFFFF}Стоимость {855dea}%i AZ RUB", listitem+1, aDonate[listitem]);
				SPD(playerid, 2053, DIALOG_STYLE_MSGBOX, !"Подтверждение", str_1, !"Купить", !"Отмена");
		    }
		}
		case 2053:
		{
			if(response)
			{
				new listadm = GetPVarInt(playerid, !"lisitem_donate");
				DeletePVar(playerid, !"lisitem_donate");
				if(PI[playerid][pRub] < aDonate[listadm]) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
				if(PI[playerid][pAdmin] >= listadm) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас уже есть этот уровень адм");
				SetAdminLevel(playerid, listadm, "buyadm");
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Поздравляем с покупкой админ прав {855dea}%i {FFFFFF}уровня", listadm);
				PI[playerid][pRub] -= aDonate[listadm];
				UpdatePlayerDataInt(playerid, "Rub", PI[playerid][pRub]);
				if(PI[playerid][pAdmin]) SendAdminsMessagef(COLOR_YELLOW, "[Adonate] %s[%i] Повысил свой уровень администратора к %i", PN(playerid), playerid, listadm);
				else SendAdminsMessagef(COLOR_YELLOW, "[aDonate] %s[%i] купил уровень %i администратора", PN(playerid), playerid, listadm);
			}
		}
		case 5002:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Закрыть", !"",\
						"\
						    \n\n\
						    {FFFFFF}Стоимость квартиры: {C5D0FF}%i {FFFFFF}репутации.\n\
						    {FFFFFF}Денег на складе: {C5D0FF}%i$\n\
						    {FFFFFF}Аптечек на складе: {C5D0FF}%i шт.\n\
						    {FFFFFF}Бронежилетов на складе: {C5D0FF}%i шт.\n\n\
						    %s Дополнительный респект\n\
                            %s Успех в работе\n\
                            %s Бизнессмены в долгу\n\
                            %s Неузнаваемый\n\
                            %s Медики в долгу\n\
                            %s Белый список\n\
                            %s Банковские махинации\n\
                            %s Мародёры\n\
                            %s Рыбный цех\
						",\
						FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhCost],\
						FamilyInfo[pFamilyID(playerid)][famMoney],\
						FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0],\
						FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1],\
						(FamilyInfo[pFamilyID(playerid)][famRespect] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famQuestTalon] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famBussines] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famShadow] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famMedicCredit] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famWhiteList] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famBankOffer] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famMarodery] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[pFamilyID(playerid)][famEatFish] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"));
		            }
		            case 1:
		            {
		                FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus] = !FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus];
		                TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "StatusLock", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)] %s[%i]: {FFFFFF}%s семейную квартиру!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, (!FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus]) ? ("открыл") : ("закрыл"));
                        UpdateFamHouse(FamilyInfo[pFamilyID(playerid)][famHouse]);
					}
					case 2:
					{
					    if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
						if(FamilyInfo[pFamilyID(playerid)][famRep] < 50) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутации!");
						FamilyInfo[pFamilyID(playerid)][famRep] -= 50;
						FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0] += 50;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "d");
                        TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Health", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)]{FFFFFF} Лидер/заместитель семьи купил 50 аптечек для семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]]);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно закупили аптечки в семейную квартиру.\n\n", !"Закрыть", !"");
					}
					case 3:
					{
					    if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
						if(FamilyInfo[pFamilyID(playerid)][famRep] < 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутации!");
						FamilyInfo[pFamilyID(playerid)][famRep] -= 100;
						FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1] += 20;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "d");
                        TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Armour", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)]{FFFFFF} Лидер/заместитель семьи купил 20 бронежилетов для семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]]);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно закупили бронежилеты в семейную квартиру.\n\n", !"Закрыть", !"");
					}
					case 4:
					{
         				if(response) FamMoneySklad(playerid);
					    else callcmd::fammenu(playerid);
					}
					case 5:
					{
					    if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
					    if(response) FamMoneySklad2(playerid);
					    else callcmd::fammenu(playerid);
					}
					case 6,7,9,10,11,15: return 1;
					case 12:
					{
						new carid = GetPlayerVehicleID(playerid);
						new number = GetVehicleID(carid);
						if(!IsAOwnableCar(number)) return 0;
						if(!IsPlayerInHisVehicle(playerid) || !IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_GREY, !"Вы должны сидеть в личном транспорте");
						player_Global_Int[playerid][100] = number;
						SPDf(playerid, 5045, DIALOG_STYLE_MSGBOX, "Перевод личного транспорта в семейный", "Выполнить", "Назад", "{ffffff}Вы действительно хотите сделать свой личный транспорт семейным?\n\
						Транспорт: {ffd800}%s\n\
						Стоимость перевода: {ffd800}10 000 000$", InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name]);
			//{ffffff}13. {D4D4D4} Сделать личный автомобиль семейным\n
			//{ffffff}14. {D4D4D4} Сделать семейный автомобиль личным\n
					}
					case 13:
					{
						str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable` FROM `ownable` WHERE `Owner` = '%s' AND `OwnerFamily` != '-1' LIMIT 21", PN(playerid));
						mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,0,2);
					}
					case 8:
					{
					    if(response)
					    {
							SPDf(playerid, 5006, DIALOG_STYLE_LIST, !"", !"Принять", !"Отмена",\
							"\
							    {FFFFFF}1. Дополнительный респект\t%s 1000 репутации\n\
							    {FFFFFF}2. Успех в работе\t\t%s 1200 репутации\n\
							    {FFFFFF}3. Бизнессмены в долгу\t%s 900 репутации\n\
							    {FFFFFF}4. Неузнаваемый\t\t%s 800 репутации\n\
							    {FFFFFF}5. Медики в долгу\t\t%s 1100 репутации\n\
							    {FFFFFF}6. Белый список\t\t%s 2000 репутации\n\
							    {FFFFFF}7. Банковские махинации\t%s 4000 репутации\n\
							    {FFFFFF}8. Мародёры\t\t\t%s 7000 репутации\n\
							    {FFFFFF}9. Рыбный цех\t\t\t%s 6000 репутации\n\
							    {F0EE89}Информация об улучшениях\
							",\
							(FamilyInfo[pFamilyID(playerid)][famRespect] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famQuestTalon] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famBussines] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famShadow] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famMedicCredit] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famWhiteList] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famBankOffer] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famMarodery] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[pFamilyID(playerid)][famEatFish] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"));
					    }
					}
					case 14:
					{
					    if(response)
					    {
					        if(IsPlayerAccessFamily(playerid) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру семьи!");
						    SPDf(playerid, 5007, DIALOG_STYLE_MSGBOX, !"", !"Принять", !"Назад",\
						    "\
							    {FFFFFF}Вы действительно хотите продать семейную квартиру\n\
								за пол её стоимости? Вы получите: {C5D0FF}%i репутации\
							",\
							FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhCost]/2);
					    }
					}
		        }
		    }
		    else callcmd::fammenu(playerid);
		}
		case 5007:
		{
		    if(response)
		    {
				new id = FamilyInfo[pFamilyID(playerid)][famHouse];
				SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)]{FFFFFF} %s[%d]: продал семейную квартиру!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
				FamilyInfo[pFamilyID(playerid)][famRep] += FamilyHouse[id][fhCost]/2;
				TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "d");
				FamilyHouse[id][fhStatus] = false;
			 	TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "StatusLock", FamilyHouse[id-1][fhStatus], "i");
				FamilyHouse[id][fhOwnerID] = -1;
				TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Owner", FamilyHouse[id][fhOwnerID], "i");
				FamilyHouse[id][fhUpgrade][0] = 0;
				TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Health", FamilyHouse[id][fhUpgrade][0], "i");
				FamilyHouse[id][fhUpgrade][1] = 0;
				TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Armour", FamilyHouse[id][fhUpgrade][1], "i");
				UpdateFamHouse(id);
				FamilyInfo[pFamilyID(playerid)][famHouse] = -1;
				TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "house", FamilyInfo[pFamilyID(playerid)][famHouse], "d");
		    }
		    else callcmd::fammenu(playerid);
		}
		case 25199:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					ShowInventory(playerid);
					PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					InvTypePlayer{playerid} = 5;
					ShowInvMenu(playerid, 5);
				}
				case 1: SDChangeWareHouse(playerid);
				case 2: SPD(playerid, 25203, DIALOG_STYLE_MSGBOX, !"Продажа склада", !"{ffffff}Вы действительно хотите продать ваш склад государству за пол цены?\n\nСумма продажи: {338FAF}25000000$", !"Продать", !"Назад");
			}
		}
		case 25200:
		{
			if(!response) return SDWareHouse(playerid);
			if(strlen(inputtextsave) != 12 || !CheckInput(inputtextsave)) return SDChangeWareHouse(playerid);
			new id = idaofcar[playerid];
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{ffffff}Вы изменили код доступа к складу!\n\n\
			Складское помещение: {338FAF}№%i\n\
			{ffffff}Склад: {338FAF}№%i\n\n\
			{ffffff}Новый код доступа: {338FAF}%i",id,id,strlen(inputtextsave));
			WareHouse[id][wCodeDostup] = strlen(inputtextsave);
			UpdateDataInt("warehouses","CodeDostup", WareHouse[id][wCodeDostup], WareHouse[id][wID], "=");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", str_1, !"Закрыть", !"");
		}
		case 25203:
		{
			if(!response) return SDWareHouse(playerid);
			new id = idaofcar[playerid];
			SetString(WareHouse[id][wNameOwner],"The State");
			UpdateDataStr("warehouses","Owner", WareHouse[id][wNameOwner], WareHouse[id][wID]);
			UpdateDataStr("warehouses","Item", "0", WareHouse[id][wID]);
			UpdateStorage(id);
		}
		case 25198:
		{
			if(!response) return 1;
			if(GetMoney(playerid) < 50000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF} У вас нет 50 млн $ для покупки склада.");
			GiveMoney(playerid, -50000000);
			new i = player_Global_Int[playerid][10];
			WareHouse[i][wCodeDostup] = randomEx(10000000,100000000);
			SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно приобрели склад №%i в складском помещении №%i", i, i);
			SCMf(playerid,0xFFFF00FF,"Только что сгенерированный код доступа к складу: %i", WareHouse[i][wCodeDostup]);
			SetString(WareHouse[i][wNameOwner], PN(playerid));
			UpdateStorage(i);
			UpdateDataStr("warehouses","Owner", WareHouse[i][wNameOwner], WareHouse[i][wID]);
			UpdateDataInt("warehouses","CodeDostup", WareHouse[i][wCodeDostup], WareHouse[i][wID], "=");
		}
		case 25201:
		{
			if(!response) return 1;
			new input = strlen(inputtextsave), i = player_Global_Int[playerid][10];
			if(input == WareHouse[i][wCodeDostup])
			{
				if(WHDoorUsed{i}) return 1;
				new id = SearchDoorWareHouse(i+1);
				if(id == -1) return 1;
				MoveDynamicObject(WareHouseObject[id],WareHouseDoor[id][wPosition][0],WareHouseDoor[id][wPosition][1],14.632491,3.0);
				WHDoorUsed{i} = 8;
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ввели неправильный код доступа! Попробовать еще раз можно через 1 минуту.");
		}
		case 4450:
        {
            if(!response)
			{
				for(new i; i < 3; i++) player_Global_Int[playerid][50+i] = 0;
				return 1;
			}
            new idproperty = player_Global_Int[playerid][51], i = GetPVarInt(playerid, !"editobject"), ID = player_Global_Int[playerid][52];
			player_Global_Int[playerid][53] = ID;
			switch(listitem)
            {
                case 3:
                {
                    //if(i == 1) EditPropertyObject(playerid, idproperty, HouseInfo[idproperty][hModelObject][ID], false);
                    //else EditPropertyObject(playerid, idproperty, BizInfo[idproperty][bModelObject][ID], false);//2
                }
                case 4:
                {
                    if(i == 1)
                    {
                        if(!InvAdd(playerid, HouseInfo[idproperty][hModelObject][ID], 1, 0)) return 1;
                        SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно забрали предмет %s", ItemsInfo[HouseInfo[idproperty][hModelObject][ID]][ItemName]);
                        if(HouseInfo[idproperty][hObjectEdit][ID] != -1) DestroyDynamicObject(HouseInfo[idproperty][hObjectEdit][ID]), HouseInfo[idproperty][hObjectEdit][ID] = -1;
						HouseInfo[idproperty][hModelObject][ID] = -1;
						SaveObjectHouse(idproperty+1);
					}
                    else
                    {
                        if(!InvAdd(playerid, BizInfo[idproperty][bModelObject][ID], 1, 0)) return 1;
                        SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно забрали предмет %s", ItemsInfo[BizInfo[idproperty][bModelObject][ID]][ItemName]);
                        if(BizInfo[idproperty][bObjectEdit][ID] != -1) DestroyDynamicObject(BizInfo[idproperty][bObjectEdit][ID]), BizInfo[idproperty][bObjectEdit][ID] = -1; //i - 1 house
						BizInfo[idproperty][bModelObject][ID] = -1;
						SaveObjectBussines(idproperty);
					}
                }
            }
        }
        case 1650:
		{
			if(!response) return 1;
			if(GetString(inputtext, ">>> Следующая страница")) CheckMemberss(playerid, 1);
            else if(GetString(inputtext, "<<< Предыдущая страница")) CheckMemberss(playerid, 2);
		}
		case 1055:
		{
			if(response)
			{
				new Float:X, Float:Y, Float:Z, Float:A;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle(playerid, A);
				PlVeh(playerid, 522, X+random(5), Y+random(5), Z+random(5), A);
			}
		}
		case 1053:
		{
			if(!response) return 1;
			if(!listitem) 
			{
				SendBotMessage(playerid, !"Эхх, мне бы такое, в мои былые годы");
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Награждения за отыгровку часов в организации", "{ff0000}----------------------------------------------\n{00cc00}У вас отыграно в организации: 0 часов.\n\n{ffff00}Призы:\n10 часов - 50 AZ-rub\n20 часов - 100 AZ-rub\n25 часов - 150 AZ-rub\n30 часов - 200 AZ-rub\n40 часов - 250 AZ-rub\n50 часов - 300 AZ-rub\n150 часов - BonusLand VIP\n\n{00cc00}Для получения бонуса пропишите /memberbonus\n\n{ff0000}----------------------------------------------", !"Закрыть", !"");
			}
			else ShowDialogAutoInvite(playerid);
		}
		case 7771:
		{
			if(!response) return ShowDonate(playerid);
			ShowDonate(playerid,1);
		}
		case 923:
		{
			if(!response) return ShowDonate(playerid, 1);
			if(!listitem) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Дополнительные сведения | DamageBoost", !"text",!"Закрыть", !"");
			else
			{
				static const SetDamageIDs[][] = {{0,1},{16,2},{24,3},{25,4},{26,5},{27,6},{28,7},{29,8},{30,9},{31,10},{34,11}};
				new number = -1;
				for(new i; i < sizeof(SetDamageIDs); i++)
				{
					if(listitem != SetDamageIDs[i][1]) continue;
					number = i;
					break;
				}
				if(number == -1) return SCM(playerid,-1,"Произошла внутриигровая ошибка!");
				if(PI[playerid][pDamageBoost][SetDamageIDs[number][0]] >= 10.0)return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас уже куплено максимальное улучшение для %s",WeaponNames[SetDamageIDs[number][0]]);
				player_Global_Int[playerid][20] = SetDamageIDs[number][0];
				str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Вы точно хотите купить увеличение урона на {993366}5,25 единиц{FFFFFF} для {FF0066}%s\n{FFFFFF}Стоимость {FF0066}2000 BitCoin", WeaponNames[SetDamageIDs[number][0]]);
				SPD(playerid, 924, DIALOG_STYLE_MSGBOX, !"Подтверждение", str_1, !"Купить", !"Отмена");
			}
		}
		case 924:
		{
			if(!response) return 1;
			if(GetInvCount(playerid, 1203) <= 1999) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас недостаточно BitCoin!");
			InvAdd(playerid, 1203, -2000);
			PI[playerid][pDamageBoost][player_Global_Int[playerid][20]] += 5.25;
			SaveInventory(playerid, 5);
			SCMf(playerid,-1,"{33CC66}[Выполнено] {FFFFFF}Вы успешно увеличили пробиваемость с %s на 5,25 единиц",WeaponNames[player_Global_Int[playerid][20]]);
		}
		case 20000:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 7772, DIALOG_STYLE_INPUT, !"{FFFFFF}Обмен | {BE2D2D}AZ-Rubles", !"{FFFFFF}Вы собираетесь обменять AZ-RUB на AZ-Coins\n\n{BE2D2D}На данный момент курс составляет: 1 Рубль = 100 AZ-Coins\n{FFFFFF}Введите сколько аз рублей хотите обменять.", !"Обменять", !"Отмена");
				case 1:
				{
					//mamaeba
					str_1 = "{FFFFFF}Название оружия\t {FFFFFF}Стандартный урон \t{FF0066}( + add custom )\n\
								{993366}Информация о системы увеличения урона\n";
					for(new i; i < sizeof(s_WeaponDamage); i++)
					{
						switch(i)
						{
							case 0,16,24,25,26,27,28,29,30,31,34:
							{	
								str_2[0] = EOS, f(str_2, sizeof(str_2),"{FFFFFF}%s\t %.1f \t{FF0066}( +%.1f )\n", WeaponNames[i], s_WeaponDamage[i], PI[playerid][pDamageBoost][i]);
								strcat(str_1, str_2);
							}
							default: continue;
						}
					}
					SPD(playerid, 923, DIALOG_STYLE_TABLIST_HEADERS, !"Увеличения урона | {993366}DamageBoost", str_1, "Далее", "Назад");
				}
				case 2: ShowBuyMenu(playerid, 7);
				case 3: SPD(playerid, 7766, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{FFFFFF}Вы действительно хотите приобрести {BE2D2D}Скин СJ?\n{FFFFFF}Стоимость данного товара составляет {FF6347}700 AZ-рублей", !"Принять", !"Отмена");
				case 4: SPD(playerid, 7767, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{FFFFFF}Вы действительно хотите приобрести {BE2D2D}BonusLand VIP?\n{FFFFFF}Стоимость данного товара составляет {FF6347}29.999 AZ-рублей", !"Принять", !"Отмена");
				case 5,6: ShowBuyMenu(playerid, 8);
				case 7: callcmd::bonus(playerid);
				case 8: ShowBuyMenu(playerid, 9);
				default: ShowDonate(playerid,1);
			}
		}
		case 7767:
		{
			if(!response) return 1;
			if(PI[playerid][pRub] < 29999) return ErrorMoneyRubles(playerid);
            if(PI[playerid][pVIP][0] >= 7) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
			PI[playerid][pRub] -= 29999;
			UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
			J_SetPlayerVIP(playerid, 7);
			PI[playerid][pVipTime] = unixtime(30);
			UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			SCMAll(COLOR_RED, (str_f(">>> {FFFFFF}Игрок %s приобрел BonusLand VIP.", PN(playerid))));
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой BonusLand VIP на 30 дней!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /vipmenu.", !"Принять", !"");
		}
		case 7822: ShowDonate(playerid,1);
		case 7766:
		{
			if(!response) return 1;
			if(PI[playerid][pRub] < 700) return ErrorMoneyRubles(playerid);
			PI[playerid][pRub] -= 700;
			UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
			InvAdd(playerid,74,1);
			SCM(playerid,COLOR_BLUE,"[ИНФОРМАЦИЯ] {FFFFFF}Вы успешно приобрели скин 'CJ'!");
		}
		case 7772:
		{
			if(!response) return 1;
			if(!strlen(inputtextsave)) return ShowDonate(playerid,1);
			new money = strval(inputtextsave);
			if(money >= 1 && PI[playerid][pRub] >= money)
			{
				SCMf(playerid,-1,"Вы успешно обменяли {BE2D2D}%i{FFFFFF} az rubles на {BE2D2D}%i az coins.",money,money*100);
				PI[playerid][pRub] -= money;
				UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
				GiveDonate(playerid, money*100);
			}
			else ErrorMoneyRubles(playerid);
		}
		case 1007:
		{
			if(!response) return 1;
			if(!listitem)
			{
				new Cache:request = mysql_query(mysql, "SELECT `ID`,`name` FROM `present` WHERE `count_use` != 0;", true);
				str_1 = "{B5B8B1}uID\t{B5B8B1}Название кода\n";
				for(new i; i < cache_num_rows(); i++)
				{
					cache_get_int(i, !"ID", player_Global_Int[playerid][i]);
					str_2[0] = EOS, cache_get_string(i, !"name", str_2);
					f(str_1, sizeof(str_1), "%s{FFFFFF}%i\t{B5B8B1}%s\n", str_1, player_Global_Int[playerid][i], str_2);
				}
				if(!cache_num_rows()) SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ничего не найдено!");
				else SPD(playerid, 1008, DIALOG_STYLE_TABLIST_HEADERS, (str_f("{7f7679}Present %s | {FFFFFF}Полный список", ServerCFG[server_logo])), str_1, !"Показать", "Закрыть");
				cache_delete(request);
			}
			else
			{
				SPD(playerid, 1010, 1, (str_f("{7f7679}Present %s | {FFFFFF}Создание", ServerCFG[server_logo])), "\
				{FFFFFF}1. Выберите название промокода, например, {a33e3e}\"trizka\".\n\
				{FFFFFF}2. Определите идентификатор предмета, для которого будет действовать промокод. В данном случае это число {a33e3e}1491.\n\
				{FFFFFF}3. Определите количество предметов, которое будет доступно при использовании промокода. В данном случае это число {a33e3e}19.\n\
				{FFFFFF}4. Укажите дополнительный параметр промокода, если требуется. В данном случае это параметр \"заточка\" со значением {a33e3e}1.\n\
				{FFFFFF}5. Определите количество раз, которое промокод может быть использован. В данном случае это число {a33e3e}55.\n\
				{FFFFFF}6. Составьте полный промокод, используя все определенные значения в заданном порядке, через символ вертикальной черты {a33e3e}\"|\". \n\
				{FFFFFF}Символ {a33e3e}\".\" {FFFFFF}обозначает разделение между предметами(максимальное значение предметов в промокоде - 3).\n\
				В итоге промокод будет выглядеть так:\n\
				{a33e3e}'trizka|1491,19,1.1491,19,1.1491,19,1|55'\n\n\
				{FFFFFF}Введите корректные значения для создания промокода и нажмите {a33e3e}'создать'.", !"Создать", "Закрыть");
			}
		}

		case 1008:
		{
			if(!response) return 1;
			if(player_Global_Int[playerid][listitem] == -1) return SCM(playerid, -1, !"debug 321A");
			str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT * FROM `present` WHERE `ID` = '%i' LIMIT 1", player_Global_Int[playerid][listitem]);
			mysql_tquery(mysql, str_q, "info_present", "i", playerid);
		}
		case 1009:
		{
			if(!response) return 1;
			mysql_pqueryf(mysql, "DELETE FROM `present` WHERE `ID` = '%i' LIMIT 1;", player_Global_Int[playerid][1]);
			SendAdminsMessagef(-1, "[A] %s[%i] удалил код с UID - %i", PN(playerid), playerid, player_Global_Int[playerid][1]);
		}
		case 1010:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid, !"ondialogresponse") > global_time) return 1;
			SetPVarInt(playerid, !"ondialogresponse", global_time + 15);
			sscanf(inputtextsave, "p<|>s[25]s[100]i", player_Global_Int[playerid], str_1, player_GlobalID[playerid][9]); //trizka|1111,1112,1113&2222,2223,2224&3333,3334,3335|55
			sscanf(str_1, "p<.>s[25]s[25]s[25]", str_2, str_d, str_q); 
			sscanf(str_2, "p<,>a<i>[5]", player_GlobalID[playerid][0], player_GlobalID[playerid][1], player_GlobalID[playerid][2]);
			sscanf(str_d, "p<,>a<i>[5]", player_GlobalID[playerid][3], player_GlobalID[playerid][4], player_GlobalID[playerid][5]);
			sscanf(str_q, "p<,>a<i>[5]", player_GlobalID[playerid][6], player_GlobalID[playerid][7], player_GlobalID[playerid][8]);
			//show
			static const 
					item[] = {0,3,6},
					amount[] = {1,4,7},
					params[] = {2,5,8};
			str_2[0] = EOS;
			for(new i; i < 3; i++)
			{
				if(!player_GlobalID[playerid][item[i]] || !player_GlobalID[playerid][amount[i]] || player_GlobalID[playerid][params[i]] > 9999 || player_GlobalID[playerid][item[i]] >= sizeof(ItemsInfo)) continue;
				if(CheckItemFromAks(player_GlobalID[playerid][item[i]]) == 1) player_GlobalID[playerid][amount[i]] = 1;
				f(str_2, sizeof(str_2), "%s{fbae60}[%i] %s(ид %i, шт. %i, пар. %i)\n", str_2, i, ItemsInfo[player_GlobalID[playerid][item[i]]][ItemName], player_GlobalID[playerid][item[i]], player_GlobalID[playerid][amount[i]], player_GlobalID[playerid][params[i]]);
			}
			str_1[0] = EOS;
			f(str_1, sizeof(str_1), "\
				{FFFFFF}Для того чтобы создать промокод, необходимо подтвердить ниже перечисленные данные.\n\
				Без этого действия мы не сможем продолжить процесс создания промокода.\n\
				Введите правильную информацию и убедитесь, что все поля заполнены верно\n\n\
				{FDD9B5}Подробная информация о промокоде:\n\
				{FFFFFF}Название: {FDD9B5}[%s]\n\
				{FFFFFF}Возможно использований: {FDD9B5}[%i]\n\n\
				{FFFFFF}Призы на выдачу:\n%s\n", player_Global_Int[playerid], player_GlobalID[playerid][9], str_2);
			SPD(playerid, 1011, 0, (str_f("{7f7679}Present %s | {FFFFFF}Создание", ServerCFG[server_logo])), str_1, "Создать", "Закрыть");
		}
		case 1011:
		{
			if(!response) return callcmd::present_settings(playerid);
			mysql_tqueryf(mysql, "INSERT INTO `present`(`name`, `item`, `amount`, `params`, `owner_create`, `count_use`) VALUES \
				('%s','%i,%i,%i','%i,%i,%i','%i,%i,%i','%s','%i')",\
				player_Global_Int[playerid],\
				player_GlobalID[playerid][0], player_GlobalID[playerid][3], player_GlobalID[playerid][6],\
				player_GlobalID[playerid][1], player_GlobalID[playerid][4], player_GlobalID[playerid][7],\
				player_GlobalID[playerid][2], player_GlobalID[playerid][5], player_GlobalID[playerid][8],\
				PN(playerid), player_GlobalID[playerid][9]);
			SCM(playerid, -1, !"++");
			callcmd::present_settings(playerid);
		}
		case 4323:
        {
            if(!response) return 1;
            new i = SearchFirstReconstructionPickup(playerid);
			if(i == -1) return 1;
			extract inputtextsave -> new money; else return 1;
            if(money < 0 || money > 2140000000) return 1;
            if(money > 1500000000-Reconstruction[i][ReconstructionMoney]) money = 1500000000-Reconstruction[i][ReconstructionMoney];
            if(PI[playerid][pMoney] < money) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
            if(money >= 100000) InvAdd(playerid, 806, money/100000);
            Reconstruction[i][ReconstructionMoney] += money;
            SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Выход", !"", "{FFFFFF}Вы успешно пожертвовали $%i на реконструкцию здания!", money);
            GiveMoney(playerid, -money);
            UpdateReconstruction(i);
            if(Reconstruction[i][ReconstructionMoney] >= 1500000000)
            {
                if(Reconstruction[i][ReconstructionPickup] != -1) DestroyDynamicPickupEx(Reconstruction[i][ReconstructionPickup]), Reconstruction[i][ReconstructionPickup] = -1;
                UpdateDynamic3DTextLabelText(Reconstruction[i][Reconstruction3DText], -1, !" ");
                SCMAll(COLOR_GREEN, (str_f("[Информация] Успешно завершена реконструкция здания '%s'!", Reconstruction[i][ReconstructionName])));
                SCMAll(COLOR_GREEN, !"на сервере активирован x8 payday на 2 часов!");
				GLS[29] = 8;
				UpdateDataConfig("XPAYDAY",GLS[29]);
            }
        }
		case 15424:
		{
			if(!response) return 1;
			SCM(playerid,COLOR_GREEN,!"Механики начали ремонтировать ваш автомобиль, дождитесь завершения.");
			TogglePlayerControllable(playerid, false);
			RepairVehicleStatus[playerid] = true;
			//DestroyDynamicActor(RepairVehicleActor[playerid][i]);
			new Float:x[4], Float:y[4], Float:z[4], Float:angle[4],
				mechanic_data[4] = {50, 42, 268, 8},
				model = GetVehicleModelBogdan(GetVehicleModel(GetPlayerVehicleID(playerid))),
				carid = GetPlayerVehicleID(playerid);
			for(new i; i < 4; i++)
			{
				GetVehicleModelInfo(model, 1, x[i], y[i], z[i]);
				GetVehicleZAngle(carid, angle[i]);
				switch(i)
				{
					case 0: { // Багажник
						y[i] = y[i] / 2 + 0.15;
						x[i] += y[i] * floatsin(-angle[i] + 180, degrees);
						y[i] += y[i] * floatcos(-angle[i] + 180, degrees);
					}
					case 1: { // Капот
						y[i] = y[i] / 2 + 0.15;
						x[i] -= y[i] * floatsin(-angle[i] + 180, degrees);
						y[i] -= y[i] * floatcos(-angle[i] + 180, degrees);
						angle[i] -= 180.0;
					}

					case 2: { // Правое переднее колесо
						y[i] = y[i] / 2 - 0.90;
						x[i] += y[i] * floatsin(-angle[i] + 35.0, degrees);
						y[i] += y[i] * floatcos(-angle[i] + 35.0, degrees);
						angle[i] += 90;
					}
					case 3: { // Заднее левое колесо
						y[i] = y[i] / 2 - 0.90;
						x[i] -= y[i] * floatsin(-angle[i] + 35.0, degrees);
						y[i] -= y[i] * floatcos(-angle[i] + 35.0, degrees);
						angle[i] -= 90;
					}
				}
				if(RepairVehicleActor[playerid][i] != -1)
				{
					DestroyDynamicActor(RepairVehicleActor[playerid][i]);
					RepairVehicleActor[playerid][i] = -1;
				}
				RepairVehicleActor[playerid][i] = CreateDynamicActor(mechanic_data[random(4)], x[i], y[i], z[i], angle[i], true, 100.0, 0, 0, playerid);
				ApplyDynamicActorAnimation(RepairVehicleActor[playerid][i], "casino", "slot_bet_01", 4.1, true, true, true, true, true);
			}
			Streamer_Update(playerid);
			SetTimerEx("RepairPlayerVehicle", randomEx(12000,15000), false, "i", playerid);
		}
		/*-------- [ Система контейнеров ] --------*/
		case 83:
		{
			new cont = Item_Select[playerid], slot = Item_SelectID[playerid];
			if(!response || gContainer[cont][gBlockSlot][slot] != false) return 1;
			new item = gContainer[cont][gPrize][slot];
			new amount = gContainer[cont][gPrizeAmount][slot];
			InvAdd(playerid, item, amount, 1);
			gContainer[cont][gBlockSlot][slot] = true;
			ContTextDrawText(playerid, cont);
			return 1;
		}
		case 13000:
		{
			if(!response) return 1;
			new i = GetContainerDistance(playerid);
			if(i == -1) return 1;
			switch(listitem)
			{
				case 0: return 1; // Возможный выигрыш
				case 6:
				{
					str_1[0] = EOS, f(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
					switch(gContainer[i][gStatus])
					{
						case 0: return ContainerDialog(playerid, i);
						case 1: return SPD(playerid, 13001, 0, str_1, !"{FFFFFF}Вы действительно желаете принять участие в аукционе?", !"»", !"«");
						case 2: if(gContainer[i][gOwned] == PI[playerid][pID]) return ContainerOpen(playerid, i); // Открытие контейнера
					}
				}
				default: return ContainerDialog(playerid, i);
			}
		}
		case 13001:
		{
			if(!response) return 1;
			new i = GetContainerDistance(playerid);
			if(i == -1) return 1;
			if(gContainer[i][gStatus] == 1)
			{
				f(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
				str_mes[0] = EOS, requestPN(gContainer[i][gOwned], str_mes);
				f(str_2, sizeof(str_2), "\n\n{FFFFFF}Класс: {E98E52}%s\nНачальная цена: %s {E98E52}%i{FFFFFF}\n\n{FF0000}Аукцион:{FFFFFF}\n\t- Последняя ставка: {E98E52}%s{FFFFFF}\n\t- Последняя сумма %s {E98E52}%i{FFFFFF}\n\nВведите сумму больше последней ставки или в случае отсутствия ставок больше начальной цены\n(Разница должна быть в %s {E98E52}%s{FFFFFF}):\n\n", ContainerInfo[i][ContName],
				ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), ContainerInfo[i][ContCost], str_mes, ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContType] == 1 ? ("100") : ("100000"));
				SPD(playerid, 13002, DIALOG_STYLE_INPUT, str_1, str_2, !"»", !"«");
			}
		}
		case 13002:
		{
			if(!response) return 1;
			new bet;
			new i = GetContainerDistance(playerid);
			if(i == -1) return 1;
			if(sscanf(inputtext, "d",bet)) return ContainerDialog(playerid, i);
			if(gContainer[i][gStatus] == 1)
			{
				if(PI[playerid][pMoney] < ContainerInfo[i][ContCost]) return 1;
				if(ContainerInfo[i][ContType] == 1)
				{
					if(gContainer[i][gOwned] != -1) if(bet < ContainerInfo[i][ContCost]+100 || strval(inputtext) < gContainer[i][gCash]+100) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма (разница +100 AZ)");
					if(gContainer[i][gOwned] == -1) if(bet < ContainerInfo[i][ContCost] || strval(inputtext) < gContainer[i][gCash]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма");
					if(bet > PI[playerid][pVirMoney]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
					GiveDonate(playerid, -bet);
				}
				else
				{
					if(gContainer[i][gOwned] != -1) if(bet < ContainerInfo[i][ContCost]+100000 || strval(inputtext) < gContainer[i][gCash]+100000) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма (разница +100000 $)");
					if(gContainer[i][gOwned] == -1) if(bet < ContainerInfo[i][ContCost] || strval(inputtext) < gContainer[i][gCash]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма");
					if(bet > PI[playerid][pMoney]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
					GiveMoney(playerid, -bet);
				}
				if(gContainer[i][gOwned] == -1) SendClientMessage(playerid, -1, "{73B461}[Container-System] {FFFFFF}Вы успешно поставили ставку на этот контейнер!");
				else
				{
					new id = requestUID(gContainer[i][gOwned]);
					SCMf(id, -1, "{73B461}[Container-System] {FFFFFF}Вашу ставку за контейнер %s перебили!", ContainerInfo[i][ContName]);
					SendClientMessage(playerid, -1, "{73B461}[Container-System] {FFFFFF}Вы успешно перебили ставку на контейнер!");
					if(ContainerInfo[i][ContType] == 1) GiveDonate(id, gContainer[i][gCash]);
					else GiveMoney(id, gContainer[i][gCash]);
				}
				gContainer[i][gOwned] = PI[playerid][pID];
				gContainer[i][gCash] = bet;
				if(gContainer[i][gTime] < 60) gContainer[i][gTime] = 60;
				Container3dText(i, gContainer[i][gStatus]);
			}
		}
		case 15341:
	    {
		    if(!response) return SPD(playerid, 15341, DIALOG_STYLE_LIST, !"Управление секонд-хендом", "{FFFFFF}Статистика секонд-хенда за сегодня\nСписок сотрудников\nНанять нового сотрудника\nИзменить цену продажи одежды", "Выбрать", "Закрыть");
		    new id; 
			if(sscanf(inputtext, "d", id)) return SPDf(playerid, 15341, DIALOG_STYLE_INPUT, !"Цена продажи одежды", "Изменить", "Назад", "Сейчас 1 еденица одежды из секонд-хенда продается за $%d.\n\nУкажите новый ценник: (от $500 до $50000)", BizInfo[BizEntered[playerid]][bItemCost][0]);
		    if(id < 500 || id > 500000) return SPDf(playerid, 9105, DIALOG_STYLE_INPUT, !"Цена продажи одежды", "Изменить", "Назад", "Сейчас 1 еденица одежды из секонд-хенда продается за $%d.\n\nУкажите новый ценник: (от $500 до $50000)", BizInfo[BizEntered[playerid]][bItemCost][0]);
		    BizInfo[BizEntered[playerid]][bItemCost][0] = id, SaveCostBiz(BizEntered[playerid]);
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы установили новую цену на продажу одежды из секонд-хенда. Новая цена $%d.", id);
	    }
	    case 15340:
	    {
	        if(!response) return 1;
			new biz = BizEntered[playerid];
			if(BizInfo[biz][bState] != 30) return 1;
			if(!GetString(BizInfo[biz][bOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не владелец этого секонд-хенда.");
			SPD(playerid, 15339, DIALOG_STYLE_LIST, "Управление секонд-хендом", "{ffffff}Статистика секонд-хенда за сегодня\nИзменить цену продажи одежды", "Выбрать", "Закрыть");
	    }
	    case 15339:
	    {
	        if(!response) return 1;
	        new biz = BizEntered[playerid];
			if(BizInfo[biz][bState] != 30) return 1;
			if(!GetString(BizInfo[biz][bOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не владелец этого секонд-хенда.");
	        switch(listitem)
	        {
	            case 0:
	            {
					str_1 = "День\tПрибыль\n";
					f(str_1, sizeof(str_1), "%s{FFFFFF}Понедельник\t{73B461}%i$\n{FFFFFF}Вторник\t{73B461}%i$\n{FFFFFF}Среда\t{73B461}%i$\n{FFFFFF}Четверг\t{73B461}%i$\n{FFFFFF}Пятница\t{73B461}%i$\n{FFFFFF}Суббота\t{73B461}%i$\n{FFFFFF}Воскресенье\t{73B461}%i$",str_1,BizInfo[biz][bDayOfWeak][0],BizInfo[biz][bDayOfWeak][1],BizInfo[biz][bDayOfWeak][2],BizInfo[biz][bDayOfWeak][3],BizInfo[biz][bDayOfWeak][4],BizInfo[biz][bDayOfWeak][5],BizInfo[biz][bDayOfWeak][6]);
					SPD(playerid, 15340, DIALOG_STYLE_TABLIST_HEADERS, "Статистика секонд-хенда", str_1, "Назад", "Закрыть");
	            }
	            case 1:
	            {
	           	 	f(str_1, sizeof(str_1), "{ffffff}Сейчас 1 единица одежды из секонд-хенда продаётся за $%d.\n\nУкажите новый ценник: (от $500000 до $2000000)", BizInfo[biz][bProdPrice]);
					SPD(playerid, 15341, DIALOG_STYLE_INPUT, "Цена продажи одежды", str_1, "Изменить", "Назад");
	            }
	        }
	    }
		case 15338:
	    {
	        if(!response) return 1;
			new bizid = BizEntered[playerid];
			if(BizInfo[bizid][bState] == 30 && GetSecondHandClotherID(playerid) != -1) ShowSecondHandClotherSelect(playerid, GetSecondHandClotherID(playerid));
	    }
		case 9208:
		{
			if(!response) return 1;
			new id = SearchFreeNumPhone();
			if(id == -1) id = SearchFreeNumPhone();
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы успешно зарегистрировали новую SIM карту. Её номер телефона: %i", id);
			PI[playerid][pTelNum] = id;
			UpdatePlayerDataInt(playerid, "TelNum", id);
			InvPlayerParams[0][playerid][GetPVarInt(playerid, !"VideoCardSlot")] = id;
			InvSlotUpdate(playerid, GetPVarInt(playerid, !"VideoCardSlot"));
			DeletePVar(playerid, !"VideoCardSlot");
		}
		case 6702:
		{
		    if(!response) return 1;
			extract inputtextsave -> new amount; else return 1;
     		if(amount < 0 || amount > 500) return 1;
		    if(amount > GetInvCount(playerid, 807)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно талонов EXP");
			PI[playerid][pExp] += amount;
			CheckNextLevel(playerid);
			InvAdd(playerid, 807, -amount);
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вам было добавлено %i EXP", amount);
		}
		case 2000:
		{
			switch(listitem)
			{
				case 0: //exit default pos
				{
					DeletePVar(playerid, !"FlyMode");
					CancelEdit(playerid);
					TogglePlayerSpectating(playerid, false);
					DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
					noclipdata[playerid][cameramode] = 0;
				}
				case 1: //exit to object pos
				{
					CancelEdit(playerid);
					TogglePlayerSpectating(playerid, false);
					DeletePVar(playerid, !"FlyMode");
					new Float:x, Float:y, Float:z;
					GetPlayerObjectPos(playerid, noclipdata[playerid][flyobject], x, y, z);
					J_SetPlayerPos(playerid,x,y,z);
					DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
					noclipdata[playerid][cameramode] = 0;
					SetPlayerInteriorEx(playerid, 0);
					SetPlayerVirtualWorldEx(playerid, 0);
				}
			}
		}
	    case 1428:
	    {
	        if(!response) return 1;
	        new id;
            if(TextFind(inputtext, "1")) id = 1;
            else if(TextFind(inputtext, "2")) id = 2;
            else if(TextFind(inputtext, "3")) id = 3;
            SetPVarInt(playerid, !"trailerid", id);
            str_1[0] = EOS, f(str_1, sizeof(str_1),"{ffffff}Вы хотите купить трейлер №%i за {ff0000}%i${ffffff}?",id,id*1800000);
            SPD(playerid, 1429, DIALOG_STYLE_MSGBOX, !"Подтверждение покупки", str_1, !"Купить", !"Отмена");
	    }
	    case 1429:
	    {
			if(!response) return DeletePVar(playerid, !"trailerid");
			if(GetTrailerID(playerid) != INVALID_PLAYER_ID) return SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}У вас уже есть трейлер!");
			new price = GetPVarInt(playerid, !"trailerid")*1800000;
			if(GetMoney(playerid) <= price) return SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}У вас не хватает средств на покупку трейлера!");
			if(Iter_Count(OWNABLETRi)+2 >= MAX_TI) return SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}В салоне недостаточно трейлеров!");
			GiveMoney(playerid,-price);
			SCM(playerid,0xff9966FF,!"[ Оповещение ] {FFFFFF}Поздравляем Вас с покупкой трейлера!");
			SCM(playerid,0xff9966FF,!"[ Оповещение ] {FFFFFF}Забрать его можно на личном автомобиле в гараже нашего салона(на улице, метка на радаре).");
			mysql_tqueryf(mysql, "INSERT INTO `trailers`(`Owner`, `Pos_X`, `Pos_Y`, `Pos_Z`, `Pos_rX`, `Pos_rY`, `Pos_rZ`, `Lock`, `Parked`, `Nalog`, `Model`, `Activated`) VALUES ('%s','0.0','0.0','0.0','0.0','0.0','0.0','0','0','0','0','%i','0');", PN(playerid),GetPVarInt(playerid, !"trailerid"));
    		AddProperty("trailers",PN(playerid));
            DeletePVar(playerid, !"trailerid");
            EnableGPSForPlayer(playerid,-2106.0486, -2418.8145, 30.6250);
	    }
	    case 15276:
	    {
	        if(response)
	        {
				if(!listitem)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1),"{cccccc}В банке доступно: %i BTC\n{cccccc}У вас есть: %i BTC\n\n{ffffff}Банк покупает BTC по курсу {ffff00}1 BTC = $%i\n\n{ffffff}Укажите, сколько BTC вы хотите продать в банк?\n{cccccc}(от 1 до 1000 BTC)",bitamount,GetInvSlot(playerid, 1203),bitprice-10000);
					SPD(playerid, 15277, DIALOG_STYLE_INPUT, !"Продать BTC", str_1, !"Далее", !"Назад");
				}
				else
				{
    				str_1[0] = EOS, f(str_1, sizeof(str_1),"{cccccc}В банке доступно: %i BTC\n{cccccc}У вас есть: %i BTC\n\n{ffffff}Банк продаёт BTC по курсу {ffff00}1 BTC = $%i\n\n{ffffff}Укажите, сколько BTC вы хотите купить?\n{cccccc}(от 1 до 1000 BTC)",bitamount,GetInvSlot(playerid, 1203),bitprice);
					SPD(playerid, 15279, DIALOG_STYLE_INPUT, !"Купить BTC", str_1, !"Далее", !"Назад");
				}
			}
	    }
	    case 15277:
	    {
	        if(response)
	        {
				extract inputtextsave -> new count; else return 1;
	            if(count < 0 || count > 1000) return 1;
			    if(count > GetInvCount(playerid, 1203)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно BTC");
				GiveMoney(playerid,count*(bitprice-5000));
				InvAdd(playerid, 1203, -count);
				bitamount += count;
	   			UpdateDataConfig("bitamount",bitamount);
	        }
	        else SPD(playerid, 15276, DIALOG_STYLE_LIST, !"Выберите операцию", !"Продать BTC\nКупить BTC", !"Выбрать", !"Закрыть");
	    }
	    case 15279:
	    {
	        if(response)
	        {
				extract inputtextsave -> new count; else return 1;
                if(count < 0 || count > 1000) return 1;
   		    	if(count*bitprice > PI[playerid][pMoney]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
	            if(count > bitamount) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У штата недостаточно BTC");
				GiveMoney(playerid,-count*(bitprice-100));
				bitamount -= count;
				InvAdd(playerid, 1203, count);
				UpdateDataConfig("bitamount",bitamount);
	        }
	        else SPD(playerid, 15276, DIALOG_STYLE_LIST, !"Выберите операцию", !"Продать BTC\nКупить BTC", !"Выбрать", !"Закрыть");
	    }
	    case 9088:
	    {
	        if(response)
	        {
	            new id = GetTrailerID(playerid);
				switch(listitem)
				{
		            case 0:
		            {
		                if(TRi[id][tPark])
		                {
		                	new Float:x, Float:y, Float:z, Float:rX, Float:rY, Float:rZ;
							GetVehiclePos(TRiVehicle[playerid], x, y, z);
							GetVehicleRotation(TRiVehicle[playerid], rX, rY, rZ);
			    			TRi[id][tPos_X] = x;
						    TRi[id][tPos_Y] = y;
						    TRi[id][tPos_Z] = z;
						    TRi[id][tPos_rX] = rX;
						    TRi[id][tPos_rY] = rY;
						    TRi[id][tPos_rZ] = rZ;
		        			UpdateDataFloat("trailers", "Pos_X", TRi[id][tPos_X], TRi[id][tID], 1);
						    UpdateDataFloat("trailers", "Pos_Y", TRi[id][tPos_Y], TRi[id][tID], 1);
						    UpdateDataFloat("trailers", "Pos_Z", TRi[id][tPos_Z], TRi[id][tID], 1);
							UpdateDataFloat("trailers", "Pos_rX", TRi[id][tPos_rX], TRi[id][tID], 1);
						    UpdateDataFloat("trailers", "Pos_rY", TRi[id][tPos_rY], TRi[id][tID], 1);
						    UpdateDataFloat("trailers", "Pos_rZ", TRi[id][tPos_rZ], TRi[id][tID], 1);
						    DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						    destroyvehicle_(TRiVehicle[playerid]);
						    UpdateTrailer(INVALID_PLAYER_ID,id,0);
		                }
		                else
		                {
	                        if(!IsPlayerInRangeOfPoint(playerid, 5.0,TRi[id][tPos_X],TRi[id][tPos_Y],TRi[id][tPos_Z])) return SCM(playerid,0xff9966FF,!"Ошибка:{FFFFFF} Вы далеко от трейлера!");
		                    UpdateTrailer(playerid,id,1);
		                }
		            }
		            case 1:
		            {
		                if(TRi[id][tPark])
		                {
		                    if(GetVehicleTrailer(GetPlayerVehicleID(playerid))) DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
		                    else SCM(playerid,0xff9966FF,!"Ошибка:{FFFFFF} У вас нету активного прицепа!");
		                }
		                else TrailerLock(playerid,id);
		            }
		            case 2:
		            {
		                if(TRi[id][tPark]) TrailerLock(playerid,id);
		                else SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}Эта функция работает только на личном автомобиле.");
		            }
		            case 3:
		            {
		                if(TRi[id][tPark]) SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}Эта функция работает только на личном автомобиле.");
		                else SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}Для продажи трейлера игроку, нужно находится в интерьере Вашего трейлера.");
		            }
					case 4:
					{
					    if(TRi[id][tPark]) SCM(playerid,0xff9966FF,!"Ошибка: {FFFFFF}Для продажи трейлера игроку, нужно находится в интерьере Вашего трейлера.");
						else if(!TRi[id][tActivated]) callcmd::trmenu(playerid);
					}
					case 5:
					{
					    if(TRi[id][tPark]) if(!TRi[id][tActivated]) callcmd::trmenu(playerid);
					    else TrailerNalog(playerid,id);
					}
					case 6: TrailerNalog(playerid,id);
				}
	        }
	    }
		case 25050:
		{
			if(response)
			{
				switch(listitem)
				{
					case 50: ShowCarsInfo(playerid, PageItems[playerid]+1, 50);
					case 51:
					{
						if(PageItems[playerid] == 2) ShowCarsInfo(playerid, 1, 0);
						else ShowCarsInfo(playerid, PageItems[playerid]-1, 50);
					}
				}
			}
		}
		case 25012:
		{
			if(response)
			{
			    new Float:price = PI[playerid][pVKBoost][listitem]*DefaultVKBoost[listitem][pboost]*100;
				if(PI[playerid][pVKCoins] <= price) return SCM(playerid,COLOR_RED,!"[Ошибка] {FFFFFF}У вас недостаточно VKCoin's!");
		        str_d[0] = EOS, f(str_d, sizeof(str_d), "{FFFFFF}Вы действительно желаете приобрести %s за %0.6f {556a83}VKCoin's {FFFFFF}?",DefaultVKBoost[listitem][nboost],price);
		        SPD(playerid,25013,0,"{FFFFFF}Покупка | {944445}Переферия",str_d,"»","X");
		        SetPVarInt(playerid,!"number_vk",listitem);
			}
		}
		case 25013:
		{
		    if(response)
			{
  				if(GetPVarInt(playerid, !"coins") > global_time) return ShowDForBoost(playerid);
				SetPVarInt(playerid, !"coins", global_time + 1);
				new list = GetPVarInt(playerid,!"number_vk");
				PI[playerid][pVKCoins] -= PI[playerid][pVKBoost][list]*DefaultVKBoost[list][pboost]*100;
				PI[playerid][pVKBoost][list]++;
			    DeletePVar(playerid,!"number_vk");
			    ShowDForBoost(playerid);
			}
			else DeletePVar(playerid,!"number_vk");
		}
	    case 15590:
	    {
			if(adddonate <= 3 || GLS[29] <= 3 || !dialogforplayer[playerid])
			{
				if(!PI[playerid][pActionShow])
				{
					SCM(playerid, COLOR_LIGHTRED, !"[АКЦИЯ]{ffffff} Отыграйте 48 часов и получите один из трёх автомобилей - бесплатно! (( /actioncar ))");
					callcmd::actioncar(playerid);
				}
				return 1;
			}
	        if(!response) 
	        {
	            str_1[0] = EOS,
				f(str_1, sizeof(str_1), "\
					{ffffff}Мы рады видеть вас на проекте %s Role Play.\n\
					Сейчас на сервере проходит акция {FA5858}Х%i пополнение счета {ffffff}и {FA5858}Х%i PayDay\n\n\n\
					{ffffff}Наш сайт: {cccccc}%s\n\
					{ffffff}Паблик ВКонтакте: {cccccc}%s\n\
					{ffffff}Форум проекта: {cccccc}%s\n\
					{FFD700}»{FFFFFF} Вам доступны уникальные промокоды - {FFD700}/PROMO{FFFFFF}!\n\n\
					{ffffff}Приятной игры на %s Role Play.",ServerCFG[server_name],adddonate,GLS[29],ServerCFG[server_site],ServerCFG[server_group_vk],ServerCFG[server_forum],ServerCFG[server_name]);

				SPD(playerid, 15590, DIALOG_STYLE_MSGBOX, (str_f("Акции на %s Role Play", ServerCFG[server_name])), str_1, !"Закрыть", !"");
	        }
			else
			{
			    str_1[0] = EOS,
				f(str_1, sizeof(str_1), "\
					{ffffff}Мы рады видеть вас на проекте %s Role Play.\n\
					Сейчас на сервере проходит акция {FA5858}Х%i пополнение счета {ffffff}и {FA5858}Х%i PayDay\n\n\n\
					{ffffff}Наш сайт: {cccccc}%s\n\
					{ffffff}Паблик ВКонтакте: {cccccc}%s\n\
					{ffffff}Форум проекта: {cccccc}%s\n\
					{FFD700}»{FFFFFF} Вам доступны уникальные промокоды - {FFD700}/PROMO{FFFFFF}!\n\n\
					{ffffff}Приятной игры на %s Role Play.",ServerCFG[server_name],adddonate,GLS[29],ServerCFG[server_site],ServerCFG[server_group_vk],ServerCFG[server_forum],ServerCFG[server_name]);

				SPD(playerid, 15590, DIALOG_STYLE_MSGBOX, (str_f("Акции на %s Role Play", ServerCFG[server_name])), str_1, !"Закрыть", !"");
			}
		}
        case 899:
        {
            if(!response) return ShowPlayerSettings(playerid);
           	UpdateDescription(playerid, inputtextsave, 0);
        }
	    case 15270:
	    {
	        if(!response) return 1;
            new biz = BizEntered[playerid];
		    if(!BizInfo[biz][bProducts]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас в магазине видеокарт нет, ожидайте нового завоза.");
		    if(GetMoney(playerid) < 350000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
		    SCM(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы купили видеокарту. (как использовать прочтите в информации о предмете в инвентаре)"),InvAdd(playerid,1136,1);
			BizInfo[biz][bProducts]--;
			GiveBizMoney(playerid,350000);
			GiveMoney(playerid,-350000);
	    }
        case 9238:
        {
            if(!response) return DeletePVar(playerid, !"RollCost");
            new cost = GetPVarInt(playerid, !"RollCost"), roll = SelectedRoulette[playerid];
            DeletePVar(playerid, !"RollCost");
            if(PI[playerid][pVirMoney] < cost) return 1;
            PI[playerid][pVirMoney] -= cost;
            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
            InvAdd(playerid, roll !=3 ? roll+313 : 1135, 1);
            PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][41], "%i", PI[playerid][pVirMoney]);
            PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][42], "%i", roll != 3 ? GetInvCount(playerid, 313+roll) : GetInvCount(playerid, 1135));
            PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][42]);
        }
 		case 10151:
        {
            if(!response) return 1;
            if(GetString(inputtextsave, "Следующая страница >>>")) return CheckAllAdmins(playerid, 36);
            if(GetString(inputtextsave, "<<< Предыдущая страница")) return CheckAllAdmins(playerid, 37);
            CheckAllAdmins(playerid, FirstBL[playerid] - 36);
        }
		case 8255:
		{
			if(!response) return 1;
			if(GetPlayerInterior(playerid) != 104 && GetPlayerVirtualWorld(playerid) != 1) if(HouseEntered[playerid] != HouseID[playerid]) return 1;
			switch(listitem)
		    {
		        case 0: SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
		        case 1: SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите снять", !"Принять", !"Отмена");
			}
		}
		case 8256:
		{
			if(!response) return 1;
			extract inputtextsave -> new amount;
			if(PI[playerid][pMoney] < amount) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
			if(amount < 1) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
			if(amount > 99999999) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить\nМаксимально 99.999.999$ за раз", !"Принять", !"Отмена");
			new countall;
			if(GetPlayerInterior(playerid) == 104 && GetPlayerVirtualWorld(playerid) == 1)
			{
				if(WareHouse[idaofcar[playerid]][wItem][150] + amount > 200000000) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить\nНельзя хранить более 200.000.000$", !"Принять", !"Отмена");
				WareHouse[idaofcar[playerid]][wItem][150] += amount;
				countall = WareHouse[idaofcar[playerid]][wItem][150];
				SaveWareHouse(idaofcar[playerid]);
			}
			else
			{
				if(HouseEntered[playerid] != HouseID[playerid]) return 1;
				new house = HouseID[playerid];
				if(HouseInfo[house][hMoney] + amount > 99999999) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить\nНельзя хранить более 99.999.999$", !"Принять", !"Отмена");
				HouseInfo[house][hMoney] += amount;
				countall = HouseInfo[house][hMoney];
				SaveShkaf(house);
			}
			GiveMoney(playerid, -amount);
			PlayerTDSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", countall);
		}
		case 8257:
		{
			if(!response) return 1;
			extract inputtextsave -> new amount;
        	if(amount < 1) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать", !"Принять", !"Отмена");
        	if(amount > 99999999) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать\nМаксимально 99.999.999$ за раз", !"Принять", !"Отмена");
			new countall;
			if(GetPlayerInterior(playerid) == 104 && GetPlayerVirtualWorld(playerid) == 1)
			{
				if(WareHouse[idaofcar[playerid]][wItem][150] < amount) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать", !"Принять", !"Отмена");
				WareHouse[idaofcar[playerid]][wItem][150] -= amount;
				countall = WareHouse[idaofcar[playerid]][wItem][150];
				SaveWareHouse(idaofcar[playerid]);
			}
			else
			{
				if(HouseEntered[playerid] != HouseID[playerid]) return 1;
				new house = HouseID[playerid];
				if(HouseInfo[house][hMoney] < amount) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать", !"Принять", !"Отмена");
				HouseInfo[house][hMoney] -= amount;
				countall = HouseInfo[house][hMoney];
				SaveShkaf(house);
			}
			GiveMoney(playerid, -amount);
			PlayerTDSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", countall);
		}
		case 8254:
		{
			if(!response) return 1;
			if(!GetInvCount(playerid, 318)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет телефонной книжки");
		    new targetid = strval(inputtextsave);
		    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
			if(PI[targetid][pAdmin]) return 0;
		    if(!PI[targetid][pTelNum]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет sim карты!");
		    SetPlayerChatBubble(playerid, !"Смотрит телефонную книгу", COLOR_PURPLE, 10.0, 5000);
		    SCMf(playerid, -1, "{FFFFFF}%s[%i]:    {33CCFF}%i", PN(targetid), targetid, PI[targetid][pTelNum]);
		}
		case 8252://Трейд
		{
			if(!TradeTime[playerid][0]) return 1;
			if(!response) return TradeClose(playerid);
			KillTimer(TradeTime[playerid][0]);
			new id = TradeID[playerid];
			TradeTime[playerid][0] = 0;
			TradeTime[playerid][1] = 10;
			TradeSend{playerid} = false;
			ShowTrade(playerid);
			ShowTrade(id);
		}
		case 8249://Трейд
		{
			if(!response)
			{
				InventClick{playerid} = 255;
				return 1;
			}
			if(!TradeOpen{playerid}) return 1;
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(Amount < 1) return SPD(playerid, 8249, DIALOG_STYLE_INPUT, !"Торговля", !"{FFFFFF}Введите количество, которое хотите передать", !"Выбрать", !"Отмена");
			new Total = PI[playerid][pInvItemAmount][ID], Item = PI[playerid][pInvItem][ID];
			if(Amount > Total) Amount = Total;
			if(!TradeAdd(playerid, Item, Amount,InvPlayerParams[0][playerid][ID],PI[playerid][pInvItemUID][ID],InvPlayerColor[playerid][ID], InvPlayerParams[1][playerid][ID])) return 1;
            PI[playerid][pInvItemLockTrade][GetPVarInt(playerid, !"InvItemLock")] = ID;
            PI[playerid][pInvItemLock][ID] = true;
			
			InventClick{playerid} = 255;
            InvSlotUpdate(playerid, ID);
		}
		case 8248://Для меню инва, если кол-во > 1 (при переносе с инва)
		{
			new InvType = InvTypePlayer{playerid};
			if(!response)
			{
				
				InventClick{playerid} = 255;
				return 1;
			}
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(ID == 255) return SCM(playerid,-1,!"Произошла неизвестная ошибка!");
			if(Amount < 1) return SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
			new Total = PI[playerid][pInvItemAmount][ID], Item = PI[playerid][pInvItem][ID];
			if(Amount > Total) Amount = Total;
			
			if(!InvAdd(playerid, Item, -Amount)) return 1;
			new id;
			switch(InvType)
			{
				case 1: id = TrashID[playerid];
				case 2: id = HouseID[playerid];
				case 3,5: id = idaofcar[playerid];
			}
   			switch(InvType)
			{
				case 1:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "положил в мусорку предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "положил в мусорку предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
				case 2:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "положил в шкаф предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "положил в шкаф предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
				case 3:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "положил в багажник предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "положил в багажник предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
			}
			InventClick{playerid} = 255;
			switch(InvType)
			{
				case 1: if(!TrashAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][ID])) return 1;
				case 2: if(!ShkafAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][ID])) return 1;
				case 3: if(!TrunkAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][ID])) return 1;
				case 5: if(!WareHouseAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][ID])) return 1;
			}
			////aml(23, playerid, "", ItemsInfo[Item][ItemName], id, Amount, Item);
		}
		case 8251://Для меню инва, если кол-во > 1 (при переносе в инв)
		{
			new InvType = InvTypePlayer{playerid};
			if(!response)
			{
				
				InventClick{playerid} = 255;
				return 1;
			}
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(ID == 255) return SCM(playerid,-1,!"Произошла неизвестная ошибка!");
			if(Amount < 1) return SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
			new id;
			switch(InvType)
			{
				case 1: id = TrashID[playerid];
				case 2: id = HouseID[playerid];
				case 3,5: id = idaofcar[playerid];
			}
			new Item, Total, Enchant, UID, color;
			switch(InvType)
			{
				case 1:
				{
					Item = TrashInfo[id][TrashItem][ID];
					Total = TrashInfo[id][TrashItemAmount][ID];
					Enchant = InvTrashParams[0][id][ID];
					UID = InvTrashUID[id][ID];
					color = InvTrashColor[id][ID];
				}
				case 2:
				{
					Item = HouseInfo[id][hItem][ID];
					Total = HouseInfo[id][hItemAmount][ID];
					Enchant = InvHouseParams[0][id][ID];
					UID = InvHouseUID[id][ID];
					color = InvHouseColor[id][ID];
				}
				case 3:
				{
					Item = TrunkInfo[id][TrunkItem][ID];
					Total = TrunkInfo[id][TrunkItemAmount][ID];
					Enchant = TrunkInfo[id][TrunkItemSharpening][ID];
					UID = TrunkInfo[id][TrunkItemUID][ID];
					color = TrunkInfo[id][TrunkItemColor][ID];
				}
				case 5:
				{
					Item = WareHouse[id][wItem][ID];
					Total = WareHouse[id][wItemAmount][ID];
					Enchant = InvWareHouseParams[0][id][ID];
					UID = InvWareHouseUID[id][ID];
					color = InvWareHouseColor[id][ID];
				}
			}
			if(Amount > Total)
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ошибка переноса, там нет столько");
				return SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
			}
			if(!InvAdd(playerid,Item,Amount,0,Enchant,UID,color)) return InventClick{playerid} = 255;
			switch(InvType)
			{
				case 1:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "взял в мусорку предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "взял в мусорку предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
				case 2:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "взял в шкаф предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "взял в шкаф предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
				case 3:
				{
				    str_1[0] = EOS;
                    if(Item != 657) f(str_1, sizeof(str_1), "взял в багажник предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
                    else f(str_1, sizeof(str_1), "взял в багажник предмет Наклейка Суприм [%i]", Amount);
                    //aml(16, playerid, "", str_1);
				}
			}
			switch(InvType)
			{
				case 1: if(!TrashAdd(playerid, id, Item, -Amount,Enchant,UID, color)) return 1;
				case 2: if(!ShkafAdd(playerid, id, Item, -Amount,Enchant,UID, color)) return 1;
				case 3: if(!TrunkAdd(playerid, id, Item, -Amount,Enchant,UID, color)) return 1;
				case 5: if(!WareHouseAdd(playerid, id, Item, -Amount,Enchant,UID, color)) return 1; 
			}
			////aml(24, playerid, "", ItemsInfo[Item][ItemName], Amount, Item, id);
		}
  		case 5010://modellimit
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 4: AddCarsSalon();
                default:
                {
                    new cars;
					for(new i; i < sizeof(ModelLimit); i++)
					{
					    if(ModelLimit[i][vehType] != listitem) continue;
						f(str_1, sizeof(str_1), "%s\n%s ($ %i) - %i", str_1, InfoConfigVehicle[SearchVehicleName(ModelLimit[i][vehID])][Model_Name],GetCarPrice(ModelLimit[i][vehID]),MLVehCount[i]);
						player_Global_Int[playerid][cars] = i;
						cars++;
					}
		            SPD(playerid, 5012, 2, !"{AFAFAF}Список транспорта", str_1, !"Выбрать", !"Закрыть");
				}
			}
		}
		case 5012:
		{
			if(!response) return 0;
			SetPVarInt(playerid, !"CarID", player_Global_Int[playerid][listitem]);
			SPDf(playerid, 5013, DIALOG_STYLE_INPUT, !"{AFAFAF}Количество", !"Отправить", !"Закрыть", "{FFFFFF}Укажите количество доступного транспорта модели %s,\n Текущее количество %i,\n стоимость $%i", InfoConfigVehicle[SearchVehicleName(ModelLimit[player_Global_Int[playerid][listitem]][vehID])][Model_Name], MLVehCount[player_Global_Int[playerid][listitem]], GetCarPrice(ModelLimit[player_Global_Int[playerid][listitem]][vehID]));
		}
		case 5013:
		{
            if(!response) return 0;
            if(strval(inputtextsave) < 0) return 1;
            new i = GetPVarInt(playerid, !"CarID");
            SCMf(playerid, -1, "Вы установили модели %s новые лимит %i", InfoConfigVehicle[SearchVehicleName(ModelLimit[i][vehID])][Model_Name], strval(inputtextsave));
            MLVehCount[i] = strval(inputtextsave);
            DeletePVar(playerid, !"CarID");
		}
		case 9159:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDonateSelect(playerid, 1);
					case 1: ShowDonateSelect(playerid, 2);
					case 2: ShowDonateSelect(playerid, 3);
					case 3: ShowDonateSelect(playerid, 4);
					case 4: ShowDonateSelect(playerid, 5);
					case 5: ShowDonateSelect(playerid, 6);

				}
			}
		}
    	case 8265:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 3000000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: 3000000 EURO)");
            if(amount < 1) return ShowTradeBTC(playerid);
            if(GetInvCount(playerid, 809) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно EURO!");
            TradeEURO[playerid] = amount;
            UpdateTradeEURO(playerid);
        }
		case 8264:
        {
            if(response) {
                switch(listitem)
                {
                    case 0: ShowTradeMoney(playerid);
                    case 1: ShowTradeEURO(playerid);
                    case 2: ShowTradeBTC(playerid);
                }
            }
        }
        case 8266:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 150000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: 150000 BTC)");
            if(amount < 1) return ShowTradeBTC(playerid);
            if(GetInvCount(playerid, 1203) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно BITCOIN!");
            TradeBTC[playerid] = amount;
            UpdateTradeBTC(playerid);
        }
        case 8258:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 150000000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: $150000000)");
            if(amount < 1) return ShowTradeMoney(playerid);
            if(GetMoney(playerid) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно денег!");
            TradeMoney[playerid] = amount;
            UpdateTradeMoney(playerid);
        }
		case 932:
		{
            if(!response) return 1;
            if(OWNABLEBIZES+1 >= MAX_BIZ) return SCM(playerid, -1, !"Превышен лимит бизнесов");
		    static Float:bizpos[3];
		    GetPlayerPos(playerid, bizpos[0],bizpos[1],bizpos[2]);
			listitem--;
		   	f(str_2, sizeof str_2, "INSERT INTO `businesses` (`State`, `Owner`, `Enter_X`, `Enter_Y`, `Enter_Z`, `Cost`, `Zam`) VALUES ('%i', '%s', 'wipeHouse', '%.4f', '%.4f', '%.4f', '%i', 'The State')",InfoBusinesses[listitem][BState],bizpos[0],bizpos[1],bizpos[2],InfoBusinesses[listitem][BCost]);
			mysql_pquery(mysql, str_2, "AddProperty", "ss", "businesses","wipehouse");
		}
    	case 13300:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
					case 1: ShowMySQLReferals(playerid);
					case 2: SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
		        }
		    }
		}
		case 13301:
	    {
	        if(response) CheckMySQLReferal(playerid, inputtextsave);
	        else callcmd::referals(playerid);
	    }
    	case 13302:
	    {
	        if(response) SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
	        else SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
	    }
		case 13303:
	    {
	        if(response)
	        {

	        }
	        else callcmd::referals(playerid);
	    }
		case 13304:
	    {
	        if(response)
	        {
	            if(strlen(inputtextsave)==0)
				{
				    SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
					SCM(playerid, -1, !"{73B461}[Referal-System]{FFFFFF} Введите сумму, которую хотите возвращать рефералу");
				}
				if(strval(inputtextsave) < 0 || strval(inputtextsave) > 300000)
				{
					SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
					SCM(playerid, -1, !"{73B461}[Referal-System]{FFFFFF} Введенная Вами сумма не входит в указанный диапазон");
				}
	            PI[playerid][pReferalReturn]=strval(inputtextsave);
	            UpdatePlayerDataInt(playerid, "ReferalReturn", PI[playerid][pReferalReturn]);
	            callcmd::referals(playerid);
	        }
	        else callcmd::referals(playerid);
	    }
		case 232: {
			if(!response) return 1;
  		    new zkp = strval(inputtextsave);
		    if(zkp > 0)
		    {
			    if(PI[playerid][pVirMoney] >= (zkp*3000))
			    {
			        if((PI[playerid][pZKP]+zkp)<=100)
			        {
			        	PI[playerid][pZKP] += zkp;
			        	UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
			        }
			        else
			        {
			            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Законопослушность не может быть выше 100 очков!");
			            return 0;
			        }
					GiveDonate(playerid, -zkp*3000);
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно купили законопослушность");
				}
			}
		}
		case 9502:
		{
            if(!response) return 1;
            switch(listitem)
			{
			    case 0:
				{
                	if(PI[playerid][pVirMoney] < 5000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
					{
					    PI[playerid][pVirMoney] -= 5000000;
					    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
						SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно купили скилл крафтера");\
					}

				}
                case 1:
				{
                	if(PI[playerid][pVirMoney] < 60000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
					{
						InvAdd(playerid, 2721, 3);
					    PI[playerid][pVirMoney] -= 60000;
					    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
						SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно купили 3 точильных амулетов");\
					}

				}
				case 2:
				{
				    if(PI[playerid][pVirMoney] < 000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    {
                        PI[playerid][pVirMoney] -= 000000;
                        UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                        SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно вышли из черного списка");\
                    }
				}
				case 3:
				{
				    if(GetDonate(playerid) < 80000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");

                    PI[playerid][pContractTime] = 8000;
                    UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
                    PI[playerid][pVirMoney] -= 80000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык фермера!");
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Навык фермера: 8000 очк.\nНа данный момент вы можете работать: {42B02C}водителем кукурузника\n\nДля работы тракториста необходимо: 500 очк. фермера - [ Открыто ]\nДля работы комбайнером необходимо: 3200 очк. фермера - [ Открыто ]\nДля работы кукурузника необходимо: 700 очк. фермера - [ Открыто ]\n\n{FFFFFF}- Хорошей работы.", !"Dong", !"");
				}
				case 4:
				{
				    if(GetDonate(playerid) < 800000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 800000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык таксиста!");
				}
				case 5:
				{
				    if(GetDonate(playerid) < 950000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 950000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык развозчика продуктов!");
				}
				case 6:
				{
				    if(GetDonate(playerid) < 1500000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 1500000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык дальнобойщика!");
				}
				case 7:
				{
				    if(GetDonate(playerid) < 8000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 8000000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык адвоката!");
				}
				case 8:
				{
				    if(GetDonate(playerid) < 5800000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 5800000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык пилота!");
				}
				case 9:
				{
				    if(GetDonate(playerid) < 800000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 800000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный навык мотоциклиста!");
				}
				case 10:
				{
				    if(GetDonate(playerid) < 5000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 5000000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили возможность иметь две фермы!");
				}
				case 11:
				{
				    if(GetDonate(playerid) < 50000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 50000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный Военный билет!");
				}
				case 12:
				{
				    if(PI[playerid][pVirMoney] >= 3000)
					{
                        SPD(playerid, 232, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите купить законопослушность\nGia ca: 3 рубля за 1 законопослушность\nВведите кол-во очков законопослушности в окно\nЗатем нажмите \"Купить\"", !"Купить", !"Отмена");
                    }
                    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");

				}
				case 13:
                {
                    if(GetDonate(playerid) < 300000) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас недостаточно az coins!");
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					SCM(playerid, COLOR_LIGHTRED, !"Вы успешно купили все навыки боя");
                }
                case 14:
				{
				    if(GetDonate(playerid) < 5500000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 5500000;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили максимальный уровень силы!");
				}
				case 15:
				{
				    if(GetDonate(playerid) < 300000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 300000;
                    PI[playerid][pAllRepl] = -1;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили вылечится от наркозависимости!");
				}
				case 16:
				{
				    if(GetDonate(playerid) < 500000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 500000;

                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили сбросили пробег с автомобиля!");
				}
				case 17:
				{
				    if(GetDonate(playerid) < 4000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 4000000;
					PI[playerid][pDemorgan] = 0;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно вышли из тюрьмы!");
				}
				case 18:
				{
				    if(GetDonate(playerid) < 550000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 550000;
                    //PI[playerid][pDanceFortine] = 1;
                    //UpdatePlayerDataInt(playerid, "DanceFortine", PI[playerid][pDanceFortine]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно {FFFF00}'Уникальный танец Фортнайт'!");
				}
				case 19:
				{
				    if(GetDonate(playerid) < 550000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 550000;
                    //PI[playerid][pDanceGangnam] = 1;
                   // UpdatePlayerDataInt(playerid, "DanceGangnam", PI[playerid][pDanceGangnam]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили {FFFF00}'Уникальный танец Gangnam Style'!");
				}
				case 20:
				{
				    if(GetDonate(playerid) < 550000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pVirMoney] -= 550000;
                    //PI[playerid][pKovboi] = 1;
                   // UpdatePlayerDataInt(playerid, "Kovboi", PI[playerid][pKovboi]);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы успешно купили {FFFF00}'Уникальный танец Ковбой'!");
				}

			}
		}
		case 4690:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0: SPD(playerid, 4691, DIALOG_STYLE_LIST, !"{9ACD32}» {FFFFFF}Выберите действие", !"{FFFFFF}Телепортироваться на текущую позицию\nУстановить новую позицию", !"Выбрать", !"Назад");
					case 1: SPDf(playerid, 4692, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Сообщение при открытии телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее сообщение:\n{AFAFAF}''%s''{ffffff}\n\nЧтобы изменить сообщение, введите его ниже: (20-100 символов)", MPName);
					case 2: SPDf(playerid, 4693, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача HP при телепорте", !"Изменить", !"Назад", "{FFFFFF}Текущее значение: {AFAFAF}%i HP{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (1-100 HP)", MPHealth);
					case 3: SPDf(playerid, 4694, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача брони при телепорте", !"Изменить", !"Назад", "{FFFFFF}Текущее значение: {AFAFAF}%i брони{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (0-100 брони)", MPArmour);
					case 4:
				    {
				        MPWeapon = !MPWeapon;
			            callcmd::eventmenu(playerid);
				    }
					case 5:
				    {
				        if(!MPTeleport)
				        {
				            MPWeapon = !MPWeapon;
				            callcmd::eventmenu(playerid);
						}
						else
						{
						    MPWeapon = !MPWeapon;
						    foreach_player(i) MPTeleportPlayer[i] = false;
				            callcmd::eventmenu(playerid);
						}
				    }
					case 6: SPDf(playerid, 4695, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Лимит игроков для телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущий лимит игроков: {AFAFAF}%i{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (1-1000 игроков)", MPPlayerLimit);
					case 7: SPDf(playerid, 4696, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Время действия телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее время действия(после запуска): {AFAFAF}%i сек{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (10-1200 сек)", MPTimeStatic);
					case 8:
				    {
						if(!TeleportFloat[0])
						{
							SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Позиция для телепорта отсутствует!");
							return callcmd::eventmenu(playerid);
						}
						if(Teleport)
						{
							Teleport = false;
						    MPTime = 60;
 							for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
							return SCMAll(COLOR_LIGHTRED, (str_f("[Teleport Event]{FFFFFF} А: %s досрочно де-активировал телепорт на мероприятие.", PN(playerid))));
						}
						MPPlayersLimit = MPPlayerLimit;
						MPTime = MPTimeStatic;
						Teleport = true;
						SCMAll(0x40FF00FF, (str_f("[Начало Мероприятия]{ffffff} %s", MPName)));
					    for(new i; i < 14; i++) TextDrawShowForAll(TeleportEvent[i]);
					    foreach(new i: Player) MPTeleportPlayer{i} = false;
					   	str_1[0] = EOS, f(str_1, 200, " создал мероприятие (название: %s)", MPName);
                        //aml(1, playerid, "", str_1);
				    }
				}
			}
		}
		case 4691:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    callcmd::eventmenu(playerid);
						if(!TeleportFloat[0]) return SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Позиция для телепорта отсутствует!");
					    SetPlayerInteriorEx(playerid, TeleportInfoq[1]);
						SetPlayerVirtualWorldEx(playerid, TeleportInfoq[0]);
						J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
					}
					case 1:
					{
						SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Вы установили новую позицию для телепорта.");
						GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]); // Записываем координаты
						TeleportInfoq[0] = GetPlayerVirtualWorld(playerid); // Записываем интерьер
						TeleportInfoq[1] = GetPlayerInterior(playerid); // Записываем виртуальный мир
						callcmd::eventmenu(playerid);
					}
				}
			}
			else callcmd::eventmenu(playerid);
		}
		case 4692:
	    {
			if(response)
			{
				if(strlen(inputtextsave) < 20 || strlen(inputtextsave) > 80) return SPDf(playerid, 4692, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Сообщение при открытии телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее сообщение:\n{AFAFAF}''%s''{ffffff}\n\nЧтобы изменить сообщение, введите его ниже: (20-100 символов)\n\n{FF1C05}Ошибка:{ffffff} Слишком мало либо много символов!", MPName);
				SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Вы изменили сообщение для всех при открытии телепорта на мероприятие!");
				strmid(MPName, inputtextsave, 0, sizeof inputtextsave);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 9996:
		{
			if(!response) return DeletePVar(playerid, !"WhatRP"), DeletePVar(playerid, !"listitemORG");
			if(GetPVarInt(playerid, !"WhatRP") == 228) return SetPVarInt(playerid, !"GoodOtvet", 0), ShowDialogRP(playerid, 0);
			if(listitem+1 == RPtest[ GetPVarInt(playerid, !"WhatRP") ][tRPOtvet_Good]) SCM(playerid, COLOR_RED, !"[Информация]{ffffff} Вы {00cc00}правильно{ffffff} ответили на вопрос!"), SetPVarInt(playerid, !"GoodOtvet", GetPVarInt(playerid, !"GoodOtvet")+1);
			else SCM(playerid, COLOR_RED, !"[Информация]{ffffff} Вы {ff0000}неправильно{ffffff} ответили на вопрос!");
			ShowDialogRP(playerid, GetPVarInt(playerid, !"WhatRP")+1);
		}
		case 9997:
		{
			if(!response) return 1;
			SetPVarInt(playerid, !"listitemORG", listitem);
			SetPVarInt(playerid, !"WhatRP", 228);
			SendBotMessage(playerid, !"Я уверен, ты справишься!");
			fmt(str_1, "{ffffff}Для вступления в организацию, вам нужно пройти тест на знание РП терминов.\n\n\
			Тест состоит из {ffff00}%i вопросов{ffffff}, каждый из которого имеет 1 правильный ответ.\n\
			Для того что бы успешно сдать тест, вам нельзя ошибиться более 2-ух раз!\n\
			Если вы готовы, нажмите {ffff00}'Приступить'.",sizeof(RPtest));
			SPD(playerid, 9996, DIALOG_STYLE_MSGBOX, "{ffff00}RolePlay Тест", str_1, "Приступить", "Отмена");
		}
		case 1942:
		{
		    if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 1943, DIALOG_STYLE_INPUT, !"{cccccc}Ввод префикса", !"{FFFFFF}Введите свой будущий префикс ниже:", "Ввести", "Назад");
				case 1: SPD(playerid, 1944, DIALOG_STYLE_LIST, !"{cccccc}Выбор цвета", !"{FF0099}Розовый\n{006600}Зеленый\n{0000FF}Синий\n{33CCCC}Голубой\n{990000}Красный\n{5D1BCA}Фиолетовый\n{DCDCDC}Белый", "Далее", "Закрыть");
				case 2:
				{
                    new cars;
					str_2[0] = EOS;
                    foreach(new i: OWNABLECARS)
                    {
                        new carid = OwnableCar[i];
                        if(IsPlayerHaveCar(playerid, i) == 1)
                        {
                            player_Global_Int[playerid][cars] = carid;
                            new number = GetVehicleID(carid);
                            str_1[0] = EOS, f(str_1, sizeof(str_1), "%s %s(%i)\n", SelectModCar[SearchSelectModCar(CarInfo[number][cSlotItem][6])][namemod], InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], carid);
                            strcat(str_2, str_1);
                            cars ++;
                        }
                    }
                    if(!cars) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного транспорта!");
                    return SPD(playerid, 1945, DIALOG_STYLE_LIST, !"Мой транспорт", str_2, !"Выбор", !"Назад");
				}
				case 3:
				{
				    new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					if(PI[playerid][plveh] != -1) destroyvehicle_(PI[playerid][plveh]);
				    PI[playerid][plveh] = J_AddStaticVehicleEx(522, X, Y, Z, A, 1, 1);
				    vTemp[PI[playerid][plveh]][Fuel] = 100.00;
					TwinTurboInstall(PI[playerid][plveh]);
					VehicleHealth[PI[playerid][plveh]] = 1500;
				 	PutPlayerInVehicleEx(playerid, PI[playerid][plveh], 0);
				}
				case 4:
				{
				    if(GetPlayerState(playerid)!=2) return SCM(playerid,COLOR_RED,!"Вы должны находиться в машине!");
					new veh = GetPlayerVehicleID(playerid);
					new Float:X,Float:Y,Float:Z,Float:A;
					GetVehiclePos(veh,X,Y,Z);
					J_SetVehiclePos(veh,X,Y,Z);
					GetVehicleZAngle(veh, A);
					SetVehicleZAngle(veh, A);
					J_RepairVehicle(veh);
				}
				case 5:
				{
					if(PI[playerid][pVIP][1] > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть ADD VIP!");
					PI[playerid][pVIP][1] += unixtime(3);
					for(new i; i < 2; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pVIP][i]);
					UpdatePlayerDataStr(playerid, "VIP", str_1);
					SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с получением 'Дополнение к VIP-аккаунту'!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
				}
				case 6:
				{
					if(PI[playerid][pItemRandom] > global_time) return SCMf(playerid, COLOR_RED, "[Ошибка]{FFFFFF} Получить следующий предмет вы сможете через %s", Convert(PI[playerid][pItemRandom] - global_time));
					UpdatePlayerDataInt(playerid, "ItemRandom", PI[playerid][pItemRandom] = global_time + 10800);
					new itemid = random(sizeof ItemsInfo);
					SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы получаете %s, в следующий раз вам повезет больше!", ItemsInfo[itemid][ItemName]);
					InvAdd(playerid, itemid, 1, 0);
				}
				case 7:
				{
					if(GetPVarInt(playerid, !"VIP_hp") > global_time) return SCMf(playerid, COLOR_RED, "[Ошибка]{FFFFFF} Получить следующий порцию здоровья вы сможете через >- %s", Convert(GetPVarInt(playerid, !"VIP_hp") - global_time));
					SetPVarInt(playerid, !"VIP_hp", global_time + 360);
					J_SetPlayerHealth(playerid, GetPlayerPeakHealth(playerid));
					SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно пополнили себе здоровье до %i", GetPlayerPeakHealth(playerid));
				}
				case 8:
				{
					new carid = GetPlayerVehicleID(playerid),
						number = GetVehicleID(carid);
					if(number == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находиться в личной машине для того, чтобы заправить бак!");
					vTemp[carid][Fuel] = 100;
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно заправили бак автомобиля на 100.0 литров!");
				}
				case 9:
				{
					str_1[0] = EOS;
					for(new i; i < sizeof fighting_style_info; i++)
					{
						str_2[0] = EOS, f(str_2, sizeof(str_2), "%i. %s\n", i+1, fighting_style_info[i][fsName]);
						strcat(str_1, str_2);
					}
					SPD(playerid, 1946, DIALOG_STYLE_LIST, !"Выберите стиль боя", str_1, !"Выбрать", !"Назад");
				}
			}
		}
		case 1946:
		{
			if(!response) return callcmd::vipmenu(playerid);
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно сменили стиль боя на %s ( Прошлый: %s ).", fighting_style_info[listitem][fsName], fighting_style_info[SearchStyleBoxing(playerid)][fsName]);
			SetPlayerFightingStyle(playerid, fighting_style_info[listitem][fsID]);
			PI[playerid][pStyleBoxing] = fighting_style_info[listitem][fsID];
			UpdatePlayerDataInt(playerid, "StyleBoxing", fighting_style_info[listitem][fsID]);
			callcmd::vipmenu(playerid);
		}
		case 1943:
		{
		    if(!response) return 1;
		    if(strlen(inputtextsave) < 1 || strlen(inputtextsave) > 10) return SPD(playerid, 1943, DIALOG_STYLE_INPUT, !"{cccccc}Ввод префикса", !"{FFFFFF}Введите свой будущий префикс ниже:\n{cccccc}от 2 до 10 символов", "Ввести", "Назад");
            SetString(PI[playerid][pPrefixVip], inputtextsave);
            UpdatePlayerDataStr(playerid, "PrefixVip", inputtextsave);
            SCMf(playerid, COLOR_VALIK, "Вы успешно установили себе Префикс \"%s%s\"", CheckVipColor[PI[playerid][pVipColor]][0], PI[playerid][pPrefixVip]);
		}
		case 1944:
		{
		    if(!response) return 1;
		    PI[playerid][pVipColor] = listitem;
		    UpdatePlayerDataInt(playerid, "VipColor", listitem);
		    static color[42];
		    color[0] = EOS;
			switch(listitem)
			{
				case 0: color = "{FF0099}Розовый";
		    	case 1: color = "{006600}Зеленый";
		    	case 2: color = "{0000FF}Синий";
		    	case 3: color = "{33CCCC}Голубой";
		    	case 4: color = "{990000}Красный";
		    	case 5: color = "{5D1BCA}Фиолетовый";
		    	case 6: color = "{DCDCDC}Белый";
		    	default: color = "";
			}
            SCMf(playerid, COLOR_VALIK, "Вы успешно установили себе %s цвет (Префикс %s)", color, PI[playerid][pPrefixVip]);
		}
		case 1945:
	    {
            if(!response) return callcmd::vipmenu(playerid);
            new car = player_Global_Int[playerid][listitem];
            new Float:X, Float:Y, Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            LinkVehicleToInterior(car, GetPlayerInterior(playerid));
            SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
            SetVehiclePos(car, X - 4, Y, Z + 1);
		}
		case 4693:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 100)
				{
					f(str_1, sizeof(str_1), "{FFFFFF}Текущее значение: {AFAFAF}%i HP{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (1-100 HP)\n\n{FF1C05}Ошибка:{ffffff} Слишком маленькое либо большое значение!", MPHealth);
					SPD(playerid, 4693, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача HP при телепорте", str_1, !"Изменить", !"Назад");
					return 0;
				}
				MPHealth = strval(inputtextsave);
				f(str_1, sizeof(str_1), "[Teleport Event]{FFFFFF} Вы изменили выдачу HP на: %i", MPHealth);
				SCM(playerid, 0x40FF00FF, str_1);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4694:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 0 || strval(inputtextsave) > 100)
				{
					f(str_1, sizeof(str_1), "{FFFFFF}Текущее значение: {AFAFAF}%i брони{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (0-100 брони)\n\n{FF1C05}Ошибка:{ffffff} Слишком маленькое либо большое значение!", MPArmour);
					SPD(playerid, 4694, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача брони при телепорте", str_1, !"Изменить", !"Назад");
					return 0;
				}
				MPArmour = strval(inputtextsave);
				f(str_1, sizeof(str_1), "[Teleport Event]{FFFFFF} Вы изменили выдачу брони на: %i", MPArmour);
				SCM(playerid, 0x40FF00FF, str_1);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4695:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 1000)
				{
					f(str_1, sizeof(str_1), "{FFFFFF}Текущий лимит игроков: {AFAFAF}%i{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (1-1000 игроков)\n\n{FF1C05}Ошибка:{ffffff} Слишком маленькое либо большое значение!", MPPlayerLimit);
					SPD(playerid, 4695, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Лимит игроков для телепорта",str_1,!"Изменить", !"Назад");
					return 0;
				}
				MPPlayerLimit = strval(inputtextsave);
				f(str_1, sizeof(str_1), "[Teleport Event]{ffffff} Вы изменили лимит количества игроков для телепорта: %i игроков", MPPlayerLimit);
				SCM(playerid, 0x40FF00FF, str_1);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4696:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 1200)
				{
					str_1[0] = EOS, f(str_1,sizeof(str_1), "{ffffff}Текущее время действия(после запуска): {AFAFAF}%i сек{ffffff}\n\nЧтобы изменить, введите ниже новое значение: (10-1200 сек)\n\n{FF1C05}Ошибка:{ffffff} Слишком маленькое либо большое значение!", MPTimeStatic);
					SPD(playerid, 4696, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Время действия телепорта", str_1, !"Изменить", !"Назад");
					return 0;
				}
				MPTimeStatic = strval(inputtextsave);
				f(str_1, sizeof(str_1), "[Teleport Event]{ffffff} Вы изменили время действия телепорта: %i сек", MPTimeStatic);
				SCM(playerid, 0x40FF00FF, str_1);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4697:
		{
		    if(response)
		    {
		        if(!MPWeapon) {
					ResetPlayerWeapons(playerid);
					SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}Вы телепортированы на мероприятие.");
					SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}По правилам мероприятия ваше оружие изьято.");
				}
				J_SetPlayerArmour(playerid, MPArmour);
				J_SetPlayerHealth(playerid, MPHealth);
			    SetPlayerInteriorEx(playerid, TeleportInfoq[1]);
				SetPlayerVirtualWorldEx(playerid, TeleportInfoq[0]);
				J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
				MPPlayersLimit --;
				if(!MPPlayersLimit)
				{
				    SCMAll(0x40FF00FF, !"[Мероприятие]{ffffff} Телепорт на мероприятие закрыт, лимит игроков закончился.");
					Teleport = false;
					MPTime = 60;
					for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
				}
				if(MPTeleport) MPTeleportPlayer[playerid] = true;
		    }
		}
		case 2221:
		{
		    if(!response)
		        return 1;

		    new i = pTemp[playerid][pSellCar];
		    if(GetMoney(playerid) < autoBazarInfo[i][autoBazarCost])
		        return SCM(playerid, COLOR_RED, !">>>> {FFFFFF}- У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

			if(autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
			    return 0;

		    if(!ProxDetectorS(7.0, playerid, autoBazarInfo[i][autoBazarplayerid]))
				return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");

            if(IsValidNumberCars(playerid))
            {
				autoBazarInfo[i][autoBazar2PosX] =
				autoBazarInfo[i][autoBazar2PosY] =
				autoBazarInfo[i][autoBazar2PosZ] = 0.0;
				GiveMoney(autoBazarInfo[i][autoBazarplayerid], autoBazarInfo[i][autoBazarCost], "продал авто на автобазаре");
				GiveMoney(playerid, -autoBazarInfo[i][autoBazarCost], "купил авто на автобазаре");
			    SetCarOwner(autoBazarInfo[i][autoBazarCarID], PN(playerid));
			    SetCarKeyer(autoBazarInfo[i][autoBazarCarID], playerid);
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, !"successful", 0, 1);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с приобретением транспортного средства");
				GameTextForPlayer(autoBazarInfo[i][autoBazarplayerid], !"successful", 0, 1);
			    SCM(autoBazarInfo[i][autoBazarplayerid], COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с продажей транспортного средства.");
			    RemovePlayerFromVehicle(autoBazarInfo[i][autoBazarplayerid]);
			    new number = GetVehicleID(autoBazarInfo[i][autoBazarCarID]);
   				GiveBizMoney(playerid, CarInfo[number][cNalog]);
   				CarInfo[number][cNalog] = 0;
		        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
		        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
		        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         		DestroyAutoBazarTable(i);
         		pTemp[playerid][pSellCar] = -1;
		        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
		    	if(autoBazarInfo[i][autoBazarType] == 1) {
		    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		    	}
		    	else {
		    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		    	}
				i = 0;
			}
		    else
			{
				SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
				SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
    			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			}
		}
	    case 2220:
	    {
	        if(!response) return 1;
	        new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) {
	    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	}
	    	else {
	    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	}
			i = 0;
	    }
	    case 2219:
	    {
	        if(!response) return 1;

	        new i = pTemp[playerid][pSellCar];
	        SCMf(playerid, COLOR_VALIK, "Вы успешно выставили ваш транспорт на продажу за $%i", autoBazarInfo[i][autoBazarCost]);
	        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Чтобы снять его с продажи, повторно нажмите на 'H' (сигнал)");
	        new carid = GetPlayerVehicleID(playerid);
	        autoBazarInfo[i][autoBazarCarID] = carid;
	        autoBazarInfo[i][autoBazarplayerid] = playerid;
	        if(!IsAVelik(carid)) SetEngineStatus(carid, false, playerid);
	        J_SetVehiclePos(carid, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]);
			new Float:x, Float:y, Float:z;
			SetVehicleZAngle(carid, autoBazarInfo[i][autoBazarZAngle]);
			GetCoordBonnetVehicle(carid, x, y, z, 4, autoBazarInfo[i][autoBazarZAngle]);
			autoBazarInfo[i][autoBazarLabel2] = CreateDynamic3DTextLabel(!"Для покупки нажмите N", -1, x, y, z-2, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
			autoBazarInfo[i][autoBazar2PosX] = x;
		    autoBazarInfo[i][autoBazar2PosY] = y;
			autoBazarInfo[i][autoBazar2PosZ] = z;
	        PutPlayerInVehicleEx(playerid, carid, 0);
			UpdateDynamic3DTextLabelTextf(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {aa3f33}[Занято]\n\n{9ACD32}%s", PN(playerid));
			autoBazarInfo[i][autoBazarArea] = CreateDynamicSphere(autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 6.5, 0, 0, -1);
			CreateAutoBazarTable(i);
	    }
	    case 2218:
	    {
	        if(!response)
	            return 1;

			if(!IsPlayerInAnyVehicle(playerid))
			    return 0;

			new i = pTemp[playerid][pSellCar];
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]))
			    return 0;

	        if(strval(inputtextsave) < 10000)
			{
				pTemp[playerid][pSellCar] = -1;
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Слишком маленькая цена! [ Минимум 10.000$ ]");
				return 1;
			}
			autoBazarInfo[i][autoBazarCost] = strval(inputtextsave);
	        f(str_1, sizeof(str_1), "{FFFFFF}Вы хотите выставить свой транспорт на продажу за $%i?", strval(inputtextsave));
	        SPD(playerid, 2219, DIALOG_STYLE_MSGBOX, !"", str_1, !"Выбрать", !"Отмена");
	    }
	    case 3392:
	    {
			if(!response)
			    return 1;

			switch(listitem) {
				case 0: SPD(playerid, 233, DIALOG_STYLE_TABLIST_HEADERS, !"", !"Название\t\tТребование\n{FAAC58}Механик\t\t3-ий уровень{FFFFFF}\n{FC660F}Таксист\t\t2-ой уровень{FFFFFF}\nКрупье\t\t\t5-тый уровень\nРаботник Налоговой\t7-ой уровень\nИнкассатор\t\t6-ой уровень\nДальнобойщик\t5-тый уровень\nМеталлоломщик\t4-тый уровень\nМусорщик\t\t3-ий уровень\n{FAAC58}Водитель автобуса\t2-ой уровень{FFFFFF}\nРазвозчик продуктов\t4-тый уровень\nАдвокат\t\t7-ой уровень", !"Выбор", !"Отмена");
				case 1: callcmd::quitjob(playerid);
			}
	    }
	   	case 9821:
	   	{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return SendBotMessage(playerid, !"Каждый байкер получает по 1 черепу в Payday.\nНо если вдруг ты не состоишь в Warlock MC, ты можешь попыть удачу\nна дерби, но шанс того что тебе выпадет череп, равен 1к3!");
			    case 1: return SendBotMessage(playerid, !"За черепа ты можешь купить самые уникальные детали для своего мотоцикла.\nНапример туристическая сумка, дает возможность перевозить в ней предметы.\nОстальные просто улучшают его внешний вид.");
			    case 2: return SendBotMessage(playerid, !"Чтобы что-то купить за черепа, ты должен подъехать\nко мне на мото, затем посигналить.");
			}
	   	}
       	case 1981:
       	{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
					new carid = GetPlayerVehicleID(playerid);
					if(ParkingEntered[playerid] == -1)
					{
						for(new i; i < sizeof(parking); i++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
					        {
								if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
								{
									J_SetVehiclePos(carid, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 1.0);
									SetVehicleZAngle(carid, parking[i][pExit_a]);
									LinkVehicleToInterior(carid, parking[i][pInt]);
									SetVehicleVirtualWorld(carid, parking[i][pVWorld]);
									SetPlayerFacingAngle(playerid, parking[i][pExit_a]);
									SetPlayerInteriorEx(playerid, parking[i][pInt]);
									SetPlayerVirtualWorldEx(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
								else //Когда игрок не в тачке
								{
									J_SetPlayerPos(playerid, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 1.0);
									SetPlayerFacingAngle(playerid, parking[i][pExit_a]);
									SetPlayerInteriorEx(playerid, parking[i][pInt]);
									SetPlayerVirtualWorldEx(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
							}
						}
					}
				}
			    case 1:
				{
					new carid = GetPlayerVehicleID(playerid);
					if(ParkingEntered[playerid] == -1)
					{
						for(new i; i < sizeof(parking); i++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
					        {
								if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
								{
									J_SetVehiclePos(carid, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 1.0);
									SetVehicleZAngle(carid, parking[i][pVExit_a]);
									LinkVehicleToInterior(carid, 1);
									SetVehicleVirtualWorld(carid, parking[i][pVWorld]);
									//
									SetPlayerFacingAngle(playerid, parking[i][pVExit_a]);
									SetPlayerInteriorEx(playerid, 1);
									SetPlayerVirtualWorldEx(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
								else
								{
									J_SetPlayerPos(playerid, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 1.0);
									SetPlayerFacingAngle(playerid, parking[i][pVExit_a]);
									SetPlayerInteriorEx(playerid, 1);
									SetPlayerVirtualWorldEx(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
							}
						}
					}
				}
			}
	   	}
	    case 9982:
	    {
	        if(!response) return 1;
	        if(GetMoney(playerid) < 900) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} У вас недостаточно денег!");
	        switch(listitem)
	        {
	            case 0: SetPlayerVirtualWorldEx(playerid, 1);
	            case 1: SetPlayerVirtualWorldEx(playerid, 2);
	            case 2: SetPlayerVirtualWorldEx(playerid, 3);
	        }
            J_SetPlayerPos(playerid, 1.6695, 24.3364, 1199.5938);
            SetPlayerFacingAngle(playerid, 0.2490);
            SetPlayerInteriorEx(playerid, 1);
            GivePlayerWeapon(playerid, 46, 1);
	    }
        case 3212:
        {
			if(!response) return 1;
            OBJECT_RAKE[playerid] = 1;
            GiveMoney(playerid, -4000, "покупка иструмента для сбора льна");
			SetPlayerAttachedObject(playerid, 0, 18890, 6, 0.045999, -0.060999, 0.000000, 0.000000, 0.000000, 0.000000, 1.0, 1.0, 1.000000);
            SendBotMessage(playerid,!"Отлично! Держи инструмент, с помощью него\nты сможешь собирать лён и хлопок на поле");
            SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы собрать урожай, дождитесь созревания урожая");
            SCM(playerid, COLOR_GREEN, !"[Подсказка] После того как урожай созреет, подойдите к грядке и нажмите ПРОБЕЛ!");
            GiveBizMoney(playerid, 4000);
        }
		case 8414:
		{
			if(!response) return 1;
			new item = player_Global_Int[playerid][100]+361, cost;
			switch(item)
			{
				case 361..365:
				{
					new cost_client = strval(inputtext);
					if(cost_client < 0 || cost_client > 10000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Введите число от 1 до 10000");
					if(GetInvCount(playerid, item) < cost_client) return SCMf(playerid, COLOR_LIGHTRED, "\
					[Ошибка] {FFFFFF}У вас недостаточно %s",BuyMineInfo[item - 361][mName]);
					InvAdd(playerid, item, -cost_client);
					cost += BuyMineInfo[item - 361][mCost]*cost_client;
				}
				case 366:
				{
					if(OBJECT_SLEGAN[playerid] != false) return 1;
					OBJECT_SLEGAN[playerid] = true;
					cost -= BuyMineInfo[item - 361][mCost];
					RemovePlayerAttachedObject(playerid, 8);
					SetPlayerAttachedObject(playerid, 8, 19631, 6, 0.053000, 0.047000, 0.018999, 101.800003, 1.299999, 3.999996, 1.0, 1.0, 1.000000);
					SendBotMessage(playerid,!"Отлично! Держи инструмент, с помощью него\nты сможешь добыть камень, металл и другие полезные ископаемые на месторождениях");
					SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть полезные ископаемые, подойдите к месторождению и нажмите ПРОБЕЛ!");
					GiveBizMoney(playerid, 40000);
					//купить
				}
				case 367:
				{
					if(OBJECT_SLEGAN[playerid] != true) return 1;
					OBJECT_SLEGAN[playerid] = false;
					cost -= BuyMineInfo[item - 361][mCost];
					RemovePlayerAttachedObject(playerid, 8);
					SCM(playerid, COLOR_GREEN, !"[Подсказка] Вы продали инструмент обратно!");
					//продать
				}
			}
			GiveDonate(playerid, cost);
		}
        case 8413:
        {
            if(!response) return 1;
			player_Global_Int[playerid][100] = listitem;
			if(listitem >= 0 && listitem < sizeof(BuyMineInfo)-2)
			{
				SPDf(playerid, 8414, DIALOG_STYLE_INPUT, !"Какое количество вы хотите продать", !"Выбрать", !"Отмена",\
				"{FFFFFF}Введите какое количество предмета {FFF557}'%s'{FFFFFF} хотите продать Лари\n\
				{64BE55}Лари предлагает вам AZ Coins %i за 1 штуку",BuyMineInfo[listitem][mName], BuyMineInfo[listitem][mCost]);
				player_Global_Int[playerid][100] = listitem;
			}
			else if(listitem == 5)
			{
				SPDf(playerid, 8414, DIALOG_STYLE_MSGBOX, !"","Купить", "Отмена",\
				"{FFFFFF}Вы хотите купить инструмент у Лари за $%i?",\
				BuyMineInfo[listitem][mCost]);
			}
			else if(listitem == 6)
			{
				SPDf(playerid, 8414, DIALOG_STYLE_MSGBOX, !"","Купить", "Отмена",\
				"{FFFFFF}Вы хотите продать инструмент у Лари за $%i?",\
				BuyMineInfo[listitem][mCost]);
			}
        }
        case 7000:
		{
			if(!response) return 1;
			if(!bumboxopen{playerid}) return 1;
			extract inputtextsave -> new page;
			if(page < 1) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс/Колонка", !"{FFFFFF}Введите страницу на которую хотите перейти\n{FFFFFF}Нельзя перейти меньше 1 страницы", !"Перейти", !"Отмена");
			if(page > 27) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс/Колонка", !"{FFFFFF}Введите страницу на которую хотите перейти\n{FFFFFF}Нельзя перейти больше 27 страницы!", !"Перейти", !"Отмена");
			BumBoxStr(playerid, page);
		}
		case 6700:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowDayRewardsDialog(playerid);
		            case 2: ShowJobRewardsDialog(playerid);
		            case 3: ShowFracRewardsDialog(playerid);
		        }
		    }
		}
		case 6703:
		{
		    if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отыграть 5 часов", !"{FFFFFF}Тебе нужно отыграть 5 часов на сервере\n{FFFFFF}Награда: {FFD700}+1000 Талонов AZ Coins\n{FFFFFF}Каждый день линейка достижений обнуляется", !"Понял", !"Отмена");
					}
					case 1:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отыграть 10 часов", !"{FFFFFF}Тебе нужно отыграть 10 часов на сервере\n{FFFFFF}Награда: {FFD700}+2000 Талонов AZ Coins\n{FFFFFF}Каждый день линейка достижений обнуляется", !"Понял", !"Отмена");
					}
					case 2:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отыграть 20 часов", !"{FFFFFF}Тебе нужно отыграть 20 часов на сервере\n{FFFFFF}Награда: {FFD700}+4000 Талонов AZ Coins\n{FFFFFF}Каждый день линейка достижений обнуляется", !"Понял", !"Отмена");
					}
				}
			}
		}
		case 6704:
		{
		    if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отнести 50 стогов сена", !"{FFFFFF}Твоя задача отнести 50 стогов сена на ферме\n{FFFFFF}Награда: {FFD700}+5000 Талонов AZ Coins\n{FFFFFF}Данное достижение можно выполнить раз в 3 дня", !"Понял", !"Отмена");
					}
					case 1:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отнести 100 стогов сена", !"{FFFFFF}Твоя задача отнести 100 стогов сена на ферме\n{FFFFFF}Награда: {FFD700}+10000 Талонов AZ Coins\n{FFFFFF}Данное достижение можно выполнить раз в 3 дня", !"Понял", !"Отмена");
					}
					case 2:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отнести 200 стогов сена", !"{FFFFFF}Твоя задача отнести 200 стогов сена на ферме\n{FFFFFF}Награда: {FFD700}+20000 Талонов AZ Coins\n{FFFFFF}Данное достижение можно выполнить раз в 3 дня", !"Понял", !"Отмена");
					}
				}
			}
		}
		case 6705:
		{
		    if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отслужить 15 часов в Армии", !"{FFFFFF}Твоя задача отслужить в любой Армии 15 часов\n{FFFFFF}Награда: {FFD700}+2500 Талонов AZ Coins + Военный билет(30д)\n{FFFFFF}Данное достижение можно выполнить только 1 раз", !"Понял", !"Отмена");
					}
					case 1:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отслужить 30 часов в Армии", !"{FFFFFF}Твоя задача отслужить в любой Армии 30 часов\n{FFFFFF}Награда: {FFD700}+5000 Талонов AZ Coins + Военный билет(60д)\n{FFFFFF}Данное достижение можно выполнить только 1 раз", !"Понял", !"Отмена");
					}
					case 2:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Отслужить 60 часов в Армии", !"{FFFFFF}Твоя задача отслужить в любой Армии 60 часов\n{FFFFFF}Награда: {FFD700}+10000 Талонов AZ Coins + Военный билет(120д)\n{FFFFFF}Данное достижение можно выполнить только 1 раз", !"Понял", !"Отмена");
					}
					case 3:
					{
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, !"Достижение: {5afad5}Арестовать 5 преступников", !"{FFFFFF}Твоя задача арестовать 5 любых преступников\n{FFFFFF}Награда: {FFD700}+2500 Талонов AZ Coins\n{FFFFFF}Данное достижение можно выполнить только 1 раз", !"Понял", !"Отмена");
					}

				}
			}
		}
		case 3998:
		{
			if(!response) return false;
			switch(listitem)
			{
				case 5:
				{
					new count = GetInvCount(playerid, 359);
					if(!count) return 0;
					SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%d]:{FFFFFF} обменял %d талонов на %d очков репутации для семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, count, count * 10);
					InvAdd(playerid, 359, -count);
					FamilyInfo[pFamilyID(playerid)][famRep] += count*10;
					mysql_tqueryf(mysql, "UPDATE `familys` SET `rep` = '%i' WHERE `ID` = '%i' LIMIT 1;",FamilyInfo[pFamilyID(playerid)][famRep],PI[playerid][pFamilyMember]);
					return SendBotMessage(playerid, !"Хорошая сделка!");
				}
				default: SendBotMessage(playerid, !"Сделать это сейчас нельзя, подойти позже!");
			}
		}
	    case 9619:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowSharpening(playerid,0);
				case 1,2: return 1;
				case 3: ShowSharpening(playerid,3);
			}
		}
		case 998:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid, !"airdrop") > global_time) return SCM(playerid,COLOR_RED,!"[Ошибка] {FFFFFF}Забирать предметы с AirDrop, можно раз в 15 секунд!");
			if(AirDropItem[listitem] == -1) return 1;
			SetPVarInt(playerid, !"airdrop", global_time + 13);
			new id = -1;
			switch(AirDropItem[listitem])
			{
				case 0: id = 328;
				case 1: id = 327;
				case 2: id = 806;
				case 3: id = 1203;
			}
			if(AirDropItem[listitem] == 4) InvAdd(playerid, AirDropItemAmount[listitem], 1), id = AirDropItemAmount[listitem];
			if(id == -1) id = 806;
			if(id != -1) InvAdd(playerid, id, AirDropItemAmount[listitem]),SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно взяли %s с ящика контрабанды", ItemsInfo[id][ItemName]);
			AirDropItem[listitem] = -1;
			new count;
			for(new i; i < 6; i++)
			{
				if(AirDropItem[i] == -1) continue;
				count++;
			}
			if(!count) 
			{
				DeleteAirDrop();
				foreach_player(i) SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Груз контрабанды был полностью разобран!"),SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Информация по следующему грузу будет в течении часа!");
				DeletePVar(playerid, !"airdrop");
			}
		}
	    case 9989:
		{
			if(!response) return 1;
			new i = HouseEntered[playerid];
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у двери дома!");
			switch(listitem)
			{
				case 0:
				{
					if(!RecInfo[playerid][rOpen])
					{
						SetPlayerInteriorEx(playerid, 0);
						SetPlayerVirtualWorldEx(playerid, 0);
						J_SetPlayerPos(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
					}
					SetCameraBehindPlayer(playerid);

					HouseEntered[playerid] = -1;
				}
				case 1:
				{
					new id = HouseInfo[HouseEntered[playerid]][hPodval];
				    if(id == -1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала, его нужно построить!");
					J_SetPlayerPos(playerid, CellarInfoVar[id][ciPosPlayer][0], CellarInfoVar[id][ciPosPlayer][1], CellarInfoVar[id][ciPosPlayer][2]);
					SetPlayerFacingAngle(playerid, CellarInfoVar[id][ciPosPlayer][3]);
				}
    			case 2:
                {
                    if(!HouseInfo[HouseEntered[playerid]][hVentPodval]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала с вентеляцией, его нужно построить!");
                    SetPlayerInteriorEx(playerid, 17);
                    J_SetPlayerPos(playerid, -1661.0420,-246.3548,14.1484);
                    SetPlayerFacingAngle(playerid, 373.3650);
                }
				case 3: EnterToGarage(playerid, i);
			}
		}
		case 25036:
		{
			if(!response) return 0;
			new cardPos = player_Global_Int[playerid][0], hId = HouseEntered[playerid], cardOutput = floatround(MiningBTC[hId][cardPos][card_balance], floatround_floor);
			if(hId == INVALID_PLAYER_ID || !GetString(PlayerName[playerid], HouseInfo[hId][hOwner])) return 0;
			else if(cardOutput < 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Выводить можно только если на счету карты больше 1 BTC.");
			MiningBTC[hId][cardPos][card_balance] -= float(cardOutput);
			//GiveRoubles(playerid, cardOutput);
			SCMf(playerid, COLOR_YELLOW, "Вы вывели {ffffff}%d BTC{ffff00}, осталось на счету видеокарты: {ffffff}%f BTC.", cardOutput, MiningBTC[hId][cardPos][card_balance]);
			return SaveMiningBTC(hId);
		}
		case 25035:
		{
			if(!response) return 0;
			new cardPos = player_Global_Int[playerid][0], hId = HouseEntered[playerid];
			if(hId == INVALID_PLAYER_ID || !GetString(PlayerName[playerid], HouseInfo[hId][hOwner])) return 0;
			GetMiningCard(playerid, hId, cardPos);
			return SaveMiningBTC(hId);
		}
		case 25034:
		{
			if(!response) return 0;
			new cardPos = player_Global_Int[playerid][0], hId = HouseEntered[playerid];
			if(hId == INVALID_PLAYER_ID || !GetString(PlayerName[playerid], HouseInfo[hId][hOwner])) return 0;
			switch(listitem)
			{
				case 0:
				{
					MiningBTC[hId][cardPos][card_status] = !MiningBTC[hId][cardPos][card_status];
					MiningBTC[hId][cardPos][card_last_update] = global_time;
					ShowSheltMiningForPlayer(playerid, HouseEntered[playerid]);
				}
				case 1: return SPDf(playerid, 25036, DIALOG_STYLE_MSGBOX, !"Вывод прибыли видеокарты", "{cccccc}На выбранной видеокарте сейчас добыто {FFFF00}%f BTC.\n{ffffff}Поскольку выводить можно только целую часть прибыли,\nвы можете вывести сейчас только {ffff00}%d BTC{ffffff}.\n\nВы действительно хотите вывести столько BTC?", !"Вывод", !"Назад", MiningBTC[hId][cardPos][card_balance], floatround(MiningBTC[hId][cardPos][card_balance], floatround_floor));
				case 2:
				{
					if(!GetInvCount(playerid, 1202)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{ffffff} У вас нет охлождающей жидкости для видеокарты!");
					InvAdd(playerid, 1202, -1);
					MiningBTC[hId][cardPos][card_percent] = (MiningBTC[hId][cardPos][card_percent] + 50.0 > 100.0) ? 100.0:MiningBTC[hId][cardPos][card_percent] + 50.0;
					SCMf(playerid, COLOR_VALIK, "Вы залили 50%% охлаждающей жидкости в видеокарту, состояние системы охлаждения восстановлено до %.1f %%", MiningBTC[hId][cardPos][card_percent]);
					if(!MiningBTC[hId][cardPos][card_status]) SCM(playerid, COLOR_GREY, !"[Подсказка] Не забудьте запустить видеокарту");
				}

				case 3:
				{
					if(MiningBTC[hId][cardPos][card_balance] > 1.0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Чтобы достать видеокарту, необходимо вывести всю прибыль, которую принесла эта видеокарта.");
					if(!(MiningBTC[hId][cardPos][card_balance] == 0.0)) return SPDf(playerid, 25035, DIALOG_STYLE_MSGBOX, !"Достать видеокарту", "{cccccc}На выбранной видеокарте сейчас добыто {FFFF00}%f BTC.\n{FFFFFF}Если вы сейчас достанете видеокарту, то прибыль на ней будет утеряна.\n\nВы действительно хотите достать видеокарту и потерять %f BTC{ffffff}?", !"Достать", !"Назад", MiningBTC[hId][cardPos][card_balance], MiningBTC[hId][cardPos][card_balance]);
					else GetMiningCard(playerid, hId, cardPos);
				}
			}
			return SaveMiningBTC(hId);
		}

		case 25033:
		{
			if(!response) return 1;
			new cardPos = player_Global_Int[playerid][listitem], hId = HouseEntered[playerid];
			if(hId == -1 || !GetString(PlayerName[playerid], HouseInfo[hId][hOwner])) return 0;
			switch(listitem)
			{
				case 0..3:
				{
					if(!MiningBTC[hId][cardPos][card_level]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} На этой полке не установлена видеокарта.");
					player_Global_Int[playerid][0] = cardPos;
					return SPDf(playerid, 25034, DIALOG_STYLE_LIST, (str_f("Стойка №%d | Полка №%d", floatround(cardPos / 4, floatround_ceil) + 1, cardPos % 4 + 1)), !"Выбрать", !"Назад", "%s\n{FFFFFF}Забрать прибыль (%f BTC)\nЗалить охлаждающую жидкость\n{FFFFFF}Достать видеокарту", !MiningBTC[hId][cardPos][card_status] ? "{73B461}Запустить видеокарту":"{FF6347}Остановить видеокарту", MiningBTC[hId][cardPos][card_balance]);
				}
				case 8: // забрать всю прибыль
				{
					new cardOutput;
					for(new i; i < 4; i++)
					{
						cardPos = player_Global_Int[playerid][i];
						if MiningBTC[hId][cardPos][card_level] *then
						{
							cardOutput = floatround(MiningBTC[hId][cardPos][card_balance], floatround_floor);
							MiningBTC[hId][cardPos][card_balance] -= float(cardOutput);
							//GiveRoubles(playerid, cardOutput);
						}
					}
				}

				case 9: // Включить все видюхи
				{
					for new i; i < 4; i++ do
					{
						cardPos = player_Global_Int[playerid][i];
						if(MiningBTC[hId][cardPos][card_level] && MiningBTC[hId][cardPos][card_percent]) MiningBTC[hId][cardPos][card_status] = true;
					}
				}
				case 10: // Залить жидкость всем видюхам
				{
					for new i; i < 4; i++ do
					{
						cardPos = player_Global_Int[playerid][i];
						if MiningBTC[hId][cardPos][card_level] && MiningBTC[hId][cardPos][card_percent] < 99.0 *then
						{
							if(!GetInvCount(playerid, 1202))
							{
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} У вас нету охлождающей жидкости для видеокарты!");
								break;
							}

							InvAdd(playerid, 1202, -1);
							MiningBTC[hId][cardPos][card_percent] += 50.0;
							if(MiningBTC[hId][cardPos][card_percent] > 100.0) MiningBTC[hId][cardPos][card_percent] = 100.0;
						}
					}
				}
			}
			return ShowSheltMiningForPlayer(playerid, hId), SaveMiningBTC(hId);
		}
		case 25031:
		{
			if(!response) return DeletePVar(playerid, !"VideoCardSlot");
			new slot = GetPVarInt(playerid, !"VideoCardSlot");
			DeletePVar(playerid, !"VideoCardSlot");
			if(!GetInvCount(playerid, 1136)) return 0;
			return UpdateCardLevelPlayer(playerid, slot, InvPlayerParams[0][playerid][slot]);
		}
		case 25032:
		{
			if(!response) return DeletePVar(playerid, !"VideoCardSlot");
			new hId = HouseEntered[playerid], item = GetPVarInt(playerid, !"VideoCardSlot"), sheltId = player_Global_Int[playerid][15], cardPos = listitem + 4 * sheltId;
			if(hId == -1 || !GetString(PN(playerid), HouseInfo[hId][hOwner])) return 0;
			else if(MiningBTC[hId][cardPos][card_level]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} На этой полке уже установлена видеокарта.");
			else if(!GetInvCount(playerid, 1136)) return 0;
			MiningBTC[hId][cardPos][card_status] = false;
			MiningBTC[hId][cardPos][card_percent] =
			MiningBTC[hId][cardPos][card_balance] = 0.0;
			if(!InvPlayerParams[0][playerid][item]) InvPlayerParams[0][playerid][item] = 1;
			MiningBTC[hId][cardPos][card_level] = InvPlayerParams[0][playerid][item];
			MiningBTC[hId][cardPos][card_last_update] = global_time;
			RefreshInv(playerid, item);
			DeletePVar(playerid, !"VideoCardSlot");
			return SaveMiningBTC(hId), SCM(playerid, COLOR_VALIK, !"Вы установили видеокарту. Для управления используйте компьютером рядом со стойкой.");
		}
	    case 8172:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1172.6415, -1323.3395, 15.4030)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInteriorEx(playerid, 2);
					SetPlayerVirtualWorldEx(playerid, 1);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInteriorEx(playerid, 2);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorldEx(playerid, 1);
				}
			}
	    }
	    case 8173:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1607.4197, 1815.2408, 10.8203)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInteriorEx(playerid, 3);
					SetPlayerVirtualWorldEx(playerid, 2);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInteriorEx(playerid, 3);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorldEx(playerid, 2);
				}
			}
	    }
	    case 8174:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, -2668.8684, 640.1640, 14.4531)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInteriorEx(playerid, 3);
					SetPlayerVirtualWorldEx(playerid, 3);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInteriorEx(playerid, 3);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorldEx(playerid, 3);
				}
			}
	    }
        /*case 8788: // Главное меню настроек анти-чита
        {
            if(!response) // Если игрок закрыл диалог
            {
                pAntiCheatSettingsPage{playerid} = 0; // Присваиваем значение 0 переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
                return 1; // Закрываем диалог
            }

            if(!strcmp(inputtextsave, ">>> Следующая страница")) // Если игрок нажал на кнопку перелистывания на следующую страницу
            {
                pAntiCheatSettingsPage{playerid} ++; // Инкрементируем (прибавляем 1) значение переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
            }
            else if(!strcmp(inputtextsave, "<<< Предыдущая страница")) // Если игрок нажал на кнопку перелистывания на предыдущую страницу
            {
                pAntiCheatSettingsPage{playerid} --; // Декрементируем (убавляем 1) значение переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
            }
            else // Если игрко выбрал какой-либо из кодов анти-чита
            {
                pAntiCheatSettingsEditCodeId[playerid] = pAntiCheatSettingsMenuListData[playerid][listitem]; // Присваиваем переменной, хранящей номер кода анти-чита, который редактирует игрок, номер кода, который он выбрал
                return ShowPlayer_AntiCheatEditCode(playerid, pAntiCheatSettingsEditCodeId[playerid]); // Показываем игроку диалог настройки кода анти-чита
            }
            return ShowPlayer_AntiCheatSettings(playerid); // Относится к выбору следующей и предыдущей страницы. Заново показываем игроку главное меню настройки анти-чита.
        }
        case 8789: // Меню настройки определённого кода анти-чита
        {
            if(!response) // Если игрок закрыл диалог
            {
                pAntiCheatSettingsEditCodeId[playerid] = -1; // Присваиваем переменной, хранящей идентификатор (ID) кода анти-чита, который редактирует игрок, занчение -1
                return ShowPlayer_AntiCheatSettings(playerid); // Показываем игроку главное меню настроек анти-чита
            }

            new
	            item = pAntiCheatSettingsEditCodeId[playerid]; // Создаём локальную переменную item, которая примет значение кода анти-чита, который редактирует игрок
            if(AC_CODE_TRIGGER_TYPE[item] == listitem) // Если игрок пытается присвоить коду уже присвоенный ему тип срабатывания
                return ShowPlayer_AntiCheatSettings(playerid); // Показываем главное меню настроек анти-чита
            if(AC_CODE_TRIGGER_TYPE[item] == AC_CODE_TRIGGER_TYPE_DISABLED && listitem != AC_CODE_TRIGGER_TYPE_DISABLED)
                EnableAntiCheat(item, 1);
            else if(listitem == AC_CODE_TRIGGER_TYPE_DISABLED)
                EnableAntiCheat(item, 0);
            AC_CODE_TRIGGER_TYPE[item] = listitem; // Если же игрок выбрал другой тип срабатывания - присваиваем его переменной
            mysql_pqueryf(mysql, "UPDATE AC SET `ac_code_trigger_type` = '%i' WHERE `ac_code` = '%i' LIMIT 1",listitem, item);// Отправляем запрос в базу данных
            return ShowPlayer_AntiCheatSettings(playerid); // Показываем главное меню настроек анти-чита
        }*/
        case 23045:
        {
			if(!response || GetPVarType(playerid, "captchaOpen") == PLAYER_VARTYPE_NONE) return DestroyCaptcha_BOT(playerid);
			player_CheckCaptcha(playerid, inputtextsave);
        }
   		case 7722:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: SCM(playerid, -1, !"Авторизация аккаунта прервана. Вы были отключены от сервера"), J_Kick(playerid, 391);
					case 1: SCM(playerid, -1, !"-1");
					case 2: SCM(playerid, -1, !"-2");
				}
			}
			else Autorisation(playerid);
		}
		case 1:
	    {
			if(response)
			{
			    PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
			    switch(RegisterState[playerid])
			    {
				    case 1:
				    {
						if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20) return ShowRegisterDialog(playerid,RegisterState[playerid]);
						else if(!CheckPassword(inputtextsave)) return ShowRegisterDialog(playerid,RegisterState[playerid]);
						RegisterState[playerid] = 2;
						mysql_escape_string(inputtextsave, RegPass[playerid]);
						ShowRegisterDialog(playerid,RegisterState[playerid]);
					}
					case 2:
					{
					    RegisterState[playerid] = 3;
				        ShowRegisterDialog(playerid,RegisterState[playerid]);
				        RegSex[playerid] = listitem+1;
				        PI[playerid][pSex] = RegSex[playerid];
					}
					case 3:
					{
					    RegisterState[playerid] = 4;
				        ShowRegisterDialog(playerid, RegisterState[playerid]);
				        RegRace[playerid] = listitem;
					}
				    case 4:
				    {
					    RegisterState[playerid] = 0;
					    SetString(RegReferal[playerid],"No Referal");
					    ClearChatForPlayer(playerid);
					    PlayerReg(playerid);
					}
				    case 5:
				    {
				        str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", inputtextsave);
				        mysql_tquery(mysql, str_1, "MysqlCheckNickReferal", "ds", playerid, inputtextsave);
				    }
				    default: return 0;
				}
			}
			else
			{
		        if(RegisterState[playerid] > 1)
		        {
		       	 	RegisterState[playerid] --;
					ShowRegisterDialog(playerid,RegisterState[playerid]);
				}
				else J_Kick(playerid, 7725);
			}
		}
		case 377:
		{
		    if(response)
		    {
		        if(GetMoney(playerid)< SellGzone[playerid])return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        new zone = GetPlayerGangZone(playerid);
		        GiveMoney(playerid,-SellGzone[playerid], "захватили территорию");
		        GiveMoney(SellPGzone[playerid],SellGzone[playerid], "потеряли территорию");
				GangZone_Flash[0] = -1;
				GangZone_FlashColor[0] = -1;
      			GangZoneHideForAll(GangZone[zone]);
			    GangZoneShowForAll(GangZone[zone],TeamColors[PI[playerid][pMember]]);
			    new lastgang = GZInfo[zone][gzFracID];
			    GZInfo[zone][gzFracID] = PI[playerid][pMember];
			    STM(PI[playerid][pMember],COLOR_VALIK,"Ваша банда захватила новую территорию");
                UpdateDorm(PI[playerid][pMember]);
			    UpdateDorm(lastgang);
			    SaveGangZone(zone);
		    }
		}
        case 556:
        {
        	if(response)
        	{
				new num;
				if(PI[playerid][pMuteTime]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете редактировать объявления, так как у вас бан чата!");
                foreach_player(i)
                {
                    if(AddTimeMessages[i] > 0)
                    {
                		if(num == listitem)
  						{
  						    new time = AddTimeMessages[i];
							time -= global_time;
  						    AddId[playerid] = i;
							if(TimeMessage[playerid] > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Обрабатывать объявления можно раз в 10 секунд!");
  						    AddTimeMessages[AddId[playerid]] = 0;
							str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Объявление от {FFD700}%s, спустя %ic.\n{FFFFFF}Сообщение:\t{33AA33}%s\n\n{FFFFFF}Отредактируйте рекламу в нужный формат.",PN(i),time,AddMessages[i]);
							SPD(playerid,557,1,"Редактирование",str_1,"Отправить","Отклонить");
							break;
  						}
  						num ++;
					}
				}
			}
		}
		case 557:
		{
		    if(response)
        	{
        	    if(vipob[AddId[playerid]] > 0)
        	    {
        	        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 60) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Объявление должно состоять с 6 до 60 символов!");
                 	foreach_player(i)
	                {
						if(!IsPlayerLogged[AddId[playerid]])return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
						if(PI[AddId[playerid]][pTelNum]<=0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
	                    if(PI[i][pNewsChat]==0)
	                    {
							str_1[0] = EOS;
				            switch(PI[playerid][pMember])
				            {
				                case TEAM_RADIO: str_1 = "LS";
				                case TEAM_RADIOSF: str_1 = "SF";
				                case TEAM_RADIOLV: str_1 = "LV";
				                default: str_1 = "";
				            }
			        	    SCMf(i, -1, "{FCAA4D}[VIP] Объявление: %s. Отправил: %s[%i] Тел. %i",inputtextsave,PN(AddId[playerid]),AddId[playerid],PI[AddId[playerid]][pTelNum]);
							SCMf(i, -1, "{C17C2D}				Отредактировал сотрудник СМИ [ %s ] : %s[%i]",str_1,PN(playerid),playerid);
						}
					}
					GiveMoney(playerid,GLS[20], "отредактировал объявление");
					OrgInfo[PI[playerid][pMember]][oBank]+=GLS[20];
					SCMf(playerid, COLOR_RED, "Вы получили $%i за отредактированое вами объявление.",GLS[20]);
	                AddTimeMessages[AddId[playerid]] = 0;
	                vipob[AddId[playerid]] = 0;
					if(PI[AddId[playerid]][pMoney]<GLS[20])
					{
						PI[AddId[playerid]][pCredit]+=GLS[20];
						UpdatePlayerDataInt(AddId[playerid], "Credit", PI[AddId[playerid]][pCredit]);
						SCMf(AddId[playerid], COLOR_GREY, "[Подсказка] {FFFFFF}На ваш кредитный счет начислено %i$ т.к. у вас недостаточно средств на оплату.",GLS[20]);
					}
					else GiveMoney(AddId[playerid], -25000, "оплатил редактирование объявление");
					callcmd::Newsredak(playerid);
					TimeMessage[playerid] = global_time + 10;
        	    }
        	    else
        	    {
	                if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 60) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Объявление должно состоять с 6 до 60 символов!");
                 	foreach_player(i)
	                {
						if(IsPlayerLogged[AddId[playerid]])return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
						if(PI[AddId[playerid]][pTelNum]<=0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
	                    if(PI[i][pNewsChat]==0)
	                    {
							str_1[0] = EOS;
				            switch(PI[playerid][pMember])
				            {
				                case TEAM_RADIO: str_1 = "LS";
				                case TEAM_RADIOSF: str_1 = "SF";
				                case TEAM_RADIOLV: str_1 = "LV";
				                default: str_1 = "";
				            }
			        	    str_1[0] = EOS, f(str_1, sizeof(str_1),"Объявление: %s. Отправил: %s[%i] Тел. %i",inputtextsave,PN(AddId[playerid]),AddId[playerid],PI[AddId[playerid]][pTelNum]);
							SCM(i,COLOR_VALIK,str_1);
							str_1[0] = EOS, f(str_1, sizeof(str_1),"				Отредактировал сотрудник СМИ [ %s ] : %s[%i]",str_1,PN(playerid),playerid);
							SCM(i,COLOR_VALIK,str_1);
						}
					}
					GiveMoney(playerid,GLS[19], "отредактировал объявление");
					OrgInfo[PI[playerid][pMember]][oBank]+=20;
					str_1[0] = EOS, f(str_1, sizeof(str_1),"Вы получили $%i за отредактированое вами объявление.",GLS[19]);
	                SCM(playerid,COLOR_RED,str_1);
	                AddTimeMessages[AddId[playerid]] = 0;
					if(PI[AddId[playerid]][pMoney]<GLS[19])
					{
						PI[AddId[playerid]][pCredit]+=GLS[19];
						UpdatePlayerDataInt(AddId[playerid], "Credit", PI[AddId[playerid]][pCredit]);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"[Подсказка] {FFFFFF}На ваш кредитный счет начислено %i$ т.к. у вас недостаточно средств на оплату.",GLS[19]);
						SCM(AddId[playerid],COLOR_GREY,str_1);
					}
					else GiveMoney(AddId[playerid],-5000, "оплатил за объявление");
					callcmd::Newsredak(playerid);
					TimeMessage[playerid]=global_time+10;
				}
			}
			else
			{
			    AddTimeMessages[AddId[playerid]] = 0;
			    SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы отклонили объявление!");
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Ваше объявление на редакцию СМИ , отклонено редактором: %s[%i].",PN(playerid),playerid);
			    SCM(AddId[playerid],COLOR_RED,str_1);
			    callcmd::Newsredak(playerid);
			}
		}
		case 2:
		{
			if(response)
			{
				if(!strlen(inputtextsave) || strlen(inputtextsave) < 6 || strlen(inputtextsave) > 25) return ShowLoginDialog(playerid);
				str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `Password`, `Google`, `GoogleKey`, `RegIP` FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
			 	mysql_tquery(mysql, str_q, "LoginDialogMysql", "is", playerid, inputtextsave);
			}
			else SPD(playerid, 7722, DIALOG_STYLE_LIST, !"{FFFFFF}Контекст | {ae433d}Авторизация", "{FFFFFF}1. {ae433d}Покинуть игру\n{FFFFFF}2. Восстановить аккаунт | {4c75a3}ВКонтакте\n{FFFFFF}3. Восстановить аккаунт | {ae433d}Почта", "Выбрать", "Назад");
		}
		case 3:
		{
		    if(response) J_Kick(playerid, 951);
		    else Autorisation(playerid);
		}
		case 4:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: J_Kick(playerid, 141);
					case 2: ShowLoginDialog(playerid);
					default: return 0;
				}
			}
			else Autorisation(playerid);
		}
		case 783:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0..9:
					{
						new home = player_Global_Int[playerid][listitem];
						if(PI[playerid][pMoney] < HouseInfo[home][hNalog])return SendBotMessage(playerid,!"Извините, но у вас нет нужной сумы денег!");
						//if(HouseInfo[home][hNalog] == 0)return SendBotMessage(playerid,!"Извините, но у вас нет налога на этот дом!");
						if(PI[playerid][pImprovement][1]) GiveMoney(playerid,-HouseInfo[home][hNalog]/2, "оплатил налоги на дом");
						else GiveMoney(playerid,-HouseInfo[home][hNalog]);
						HouseInfo[home][hNalog] = 0;
						UpdateDataInt("houses", "Nalog", HouseInfo[home][hNalog], HouseInfo[home][hID],"=");
						SCM(playerid,COLOR_RED, !"Вы успешно погасили неоплаченые счета за комунальные услуги");
						if(!PI[playerid][pImprovement][1])SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик, вы будете платить в 2 раза меньше!");
						SendBankBot(playerid);
						SCMf(playerid,-1,"» {BE2D2D}[Информация] {FFFFFF}Вы успешно оплатили налог за дом: [{FFD700}№%i{ffffff}]!",HouseInfo[home][hID]);
						OrgInfo[GLS[13]][oBank] += HouseInfo[home][hNalog];
						SaveOrg(GLS[13]);
					}
				}
			}
		}
		case 784:
		{
		    if(response)
			{
			    new biz = ShowPBiz[playerid];
				if(GetMoney(playerid) < BizInfo[biz][bNalog])return SendBotMessage(playerid,!"Извините, но у вас нет нужной суммы денег!");
				if(PI[playerid][pImprovement][1]) GiveMoney(playerid,-BizInfo[biz][bNalog]/2, "оплатил налоги на бизнес");
				else GiveMoney(playerid,-BizInfo[biz][bNalog]);
				OrgInfo[GLS[13]][oBank]+=BizInfo[biz][bNalog];
				SaveOrg(GLS[13]);
				BizInfo[biz][bNalog] = 0;
				UpdateDataInt("businesses", "Level", BizInfo[biz][bNalog], BizInfo[biz][bID],"=");
       			SCM(playerid, COLOR_GREEN, !"Вы успешно погасили неоплаченые счета за бизнес.");
       			if(!PI[playerid][pImprovement][1])SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик, вы будете платить в 2 раза меньше!");
       			SendBankBot(playerid);
			}
		}
		case 713:
    	{
			if(response)
	  		{
		    	new para1 = PanelPlayerID[playerid];
	    		switch(listitem)
				{
					case 0:
					{
						if(GetTeamID(playerid) == TEAM_BANK && PI[playerid][pRank]>=6)
					 	{
					        if(PI[para1][pCredit] == 0)
							{
								SPD(playerid,227,1,!"Кредит",!"{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $100000",!"Далее",!"Отмена");
	       						str_1[0] = EOS, f(str_1, sizeof(str_1), "%s достал банковские документы!", PN(playerid));
								ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
							}
							else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У этого человека уже есть задолженность в банке!");

				 		}
				 		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Либо вы не состоите в банке ,либо ваш ранг ниже 6-го!");
			 		}
					case 1:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Долг(кредит) игрока: %s составляет: {33CCFF}%i\n",PN(para1),PI[para1][pCredit]);
							SPD(para1,0,0,!"Банк",str_1,!"Принять","");
							SPD(playerid,0,0,!"Банк",str_1,!"Принять","");
							str_1[0] = EOS, f(str_1, sizeof(str_1), "%s что то показывает ", PN(playerid));
							ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
						}
					}
					case 2:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}На Cчету: {33CCFF}%i\n",PI[para1][pBank]);
							SPD(para1,0,0,!"Банк",str_1,!"Принять","");
							SPD(playerid,0,0,!"Банк",str_1,!"Принять","");
							str_1[0] = EOS, f(str_1, sizeof(str_1), "%s что то показывает ", PN(playerid));
							ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
						}
					}
					case 3:
					{
						if(PI[para1][pBankPass] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека уже есть банковская карта!");
						if(PI[para1][pMoney]<3000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека недостаточно средств! [3 000$]");
						SPD(playerid,0,0,!"",!"{A99E9E}Вы успешно показали(а) форму оформления банковской карты.","Закрыть","");
						SPD(para1,779,0,"","{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников,\nа следующие подробности вы можете узнать в работников банка.","Принять","Отмена");
   						str_1[0] = EOS, f(str_1, sizeof(str_1), "%s передал документы для получения банковской карты игроку %s!", PN(playerid),PN(para1));
						ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                        PanelPlayerID[para1]=playerid;
					}
					case 4:
					{
					    if(PI[para1][pBankPass] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
					    if(PI[para1][pMoney]<30000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека недостаточно средств! [30 000$]");
						///
						if(!ProxDetectorS(3.0, playerid, para1, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
					    str_1[0] = EOS, f(str_1, sizeof(str_1), "%s предложил %s восстановить пароль на получение банковской карты", PN(playerid),PN(para1));
						ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
						SPD(playerid,0,0,!"",!"{73B461}Вы успешно отправили предложение на смену пароля.","Закрыть","");
						PanelPlayerID[para1]=playerid;
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Банкир {73B461}%s{FFFFFF} , предложил вам восстановить пароль от банковской карты.\n\t\t\t\tСтоимость услуги: {73B461}30 000${FFFFFF}.",PN(playerid));
						SPD(para1,887,0,"",str_1,"Принять","Отмена");
					}
					case 5:
					{
					    if(PI[para1][pBankPass] == -1)
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
						if(!ProxDetectorS(3.0, playerid, para1, 1))
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
					    str_1[0] = EOS, f(str_1, sizeof(str_1), "%s предложил %s положить деньги на депозит", PN(playerid), PN(para1));
						ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
						SPD(para1, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n\n", !"Далее", !"Отмена");
					}
					case 6:
					{
					    if(PI[para1][pBankPass] == -1)
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
						if(!ProxDetectorS(3.0, playerid, para1, 1))
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
						if(PI[para1][pDepositChar])
						{
						    str_1[0] = EOS, f(str_1, sizeof(str_1), "[Ошибка] {FFFFFF}Данному человеку еще нельзя снимать деньги с депозита, ему осталось %i часов!", PI[para1][pDepositChar]);
							return SCM(playerid, COLOR_RED, str_1);
						}
					    str_1[0] = EOS, f(str_1, sizeof(str_1), "%s предложил %s забрать деньги с депозита", PN(playerid), PN(para1));
						ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
						SPD(para1, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
					}
				}
			}
	 	}
		case 7: Autorisation(playerid);
		case 8:
		{
		    if(!response) return 1;
	        new invite = InviteOffer[playerid];
	        if(invite != INVALID_PLAYER_ID)
	        {
		        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
		        SCMf(invite, COLOR_VALIK, "[Информация] {FFFFFF}%s принял ваше предложение вступить к вам в организацию.", PN(playerid));
		        SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы приняли предложение %s вступить в организацию.", PN(invite));
		        InviteOffer[playerid] = INVALID_PLAYER_ID;
				ResetSpawnInfo(playerid, GetTeamID(invite));
		        PI[playerid][pMember] = GetTeamID(invite);
		        SetSpawnPI(playerid, 2);
    			PI[playerid][pRank] = 1;
		        PI[playerid][pFWarns] = 0;
				UpdatePlayerDataInt(playerid, "Member", GetTeamID(invite));
				UpdatePlayerDataInt(playerid, "DCTime", 2);
				UpdatePlayerDataInt(playerid, "Rank", 1);
				UpdatePlayerDataInt(playerid, "FWarns", 0);
				CheckDuty(playerid);
				UpdatePlayerQuest(playerid, 2);
				SendTeamMessagef(GetTeamID(playerid), COLOR_VALIK, "Приветствуем нового члена нашей организации %s, которого пригласил: %s[%i].", PN(playerid), PN(invite), invite);
		    }
		    else
		    {
		        if(invite != INVALID_PLAYER_ID)
		        {
			        str_1[0] = EOS, f(str_1, sizeof(str_1), "[Информация] {FFFFFF}%s отклонил ваше предложение вступить к вам в организацию.", PN(playerid));
			        SCM(invite, COLOR_VALIK, str_1);
			        str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы отклонили предложение %s вступить к нему в организацию.", PN(invite));
			        SCM(playerid, COLOR_VALIK, str_1);
					InviteOffer[invite] = INVALID_PLAYER_ID;
					InviteOffer[playerid] = INVALID_PLAYER_ID;
				}
		    }
		}
		case 11:
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new number = GetVehicleID(carid);
			if(response)
			{
       			if(IsASellCar(number))
			    {
			        if(IsValidPassport(playerid))
			        {
					    if(GetMoney(playerid) >= CarInfo[number][cCost])
					    {
					        if(IsValidNumberCars(playerid))
							{
								new Float:x, Float:y, Float:z;
								GetCoordBonnetVehicle(carid, x, y, z, 6.0);
								J_SetVehiclePos(carid, x, y, z);
						        SetCarOwner(carid, PN(playerid));
								SetCarKeyer(carid, playerid);
								PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
								SPD(playerid, 0, 0, !"", !"			---------( {FF2121}Обратите внимание!{FFFFFF})---------\n\nЕсли вы не припаркуете свою машину, то в течение определенного времени её отвезут на штрафстоянку!\n{d7d27f}Для того чтобы припарковать машину используйте: /park.{FFFFFF}\nКогда вы припаркуете машину, она будет спавнится в том месте, после каждого входа в игру.\nРекомендуем парковать машину:\n\n     {A7A7A4}-Возле дома\n     -На парковке\n     -В гараже.{a25552}\n\nМашины запрещено парковать в общественных местах!", !"Принять", !"");
								SCM(playerid, -1, !"{73B461}Поздравляем! Теперь этот транспорт принадлежит вам!");
								SCM(playerid, -1, !"Чтобы вставить/вытащить ключи в зажигание введите {73B461}/key");
								SCM(playerid, -1, !"Для управления своим транспортом используйте {73B461}/cars");
								GiveMoney(playerid, -CarInfo[number][cCost], "купил авто по госу");
				                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] словил автомобиль по гос. цене: %i$", PN(playerid), playerid, CarInfo[number][cCost]);
				                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
			                	str_2[0] = EOS, f(str_2, 30, " за %i$", CarInfo[number][cCost]);
                                //aml(39, playerid, "авто", str_2, number, CarInfo[number][cCost], 5);
								new Float:Distance, Float:Distance_ = 100000.0, bizid;
								for(new i; i < OWNABLEBIZES; i++)
								{
									if(BizInfo[i][bState] <= 19 || BizInfo[i][bState] >= 24) continue;
									Distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
									if(Distance < Distance_) bizid = i, Distance_ = Distance;
								}
								GiveBizMoney(playerid, CarInfo[number][cCost]/1000);
								if(bizid != -1) SendAdminsMessagef(COLOR_GREEN, "[A] %s[%i] купил транспорт по госу (%s), цена: $%i, автосалон: %s",PN(playerid),playerid, InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], CarInfo[number][cCost],InfoBusinesses[BizInfo[bizid][bState]][BName]);
								else SendAdminsMessagef(COLOR_GREEN, "[A] %s[%i] купил транспорт по госу (%s), цена: $%i, автосалон: autosalon noname",PN(playerid),playerid, InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], CarInfo[number][cCost]);
								SetVehiclePosToStandartPark(carid);
								UpdateCarInfo(carid);
								UpdatePlayerQuest(playerid, 0);
								if(GetIntCars(playerid) > ValidNumberCars(playerid)) SafeRemoveCar(number, number);
							}
							else
							{
							    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
								SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
								SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
								RemovePlayerFromVehicle(playerid);
							}
					    }
					    else
					    {
					        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					        SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
					        RemovePlayerFromVehicle(playerid);
					    }
				    }
				    else
					{
					    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					    SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нет паспорта для покупки этого транспорта, получить его можно в мэрии.");
						RemovePlayerFromVehicle(playerid);
					}
			    }
			    else
				{
				    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				    SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот транспорт не для продажи.");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				RemovePlayerFromVehicle(playerid);
			}
		}
		case 12:
		{
			if(response)
			{
			    new offer = CarOffer[playerid];
			    if(CarOffer[offer] != playerid)
					return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Ошибка.");
		        if(!IsPlayerInHisVehicle(offer))
					return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Продавец должен находится в личном транспорте.");
	            if(!IsValidPassport(playerid))
					return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нет паспорта для покупки этого транспорта, получить его можно в мэрии.");
	            new
					carid = GetPlayerVehicleID(offer);
				if(!ProxDetectorS(7.0, playerid, offer, 1))
					return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
			    if(GetMoney(playerid) < CarPrice[playerid])
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
                if(IsValidNumberCars(playerid))
                {
                    new number = GetVehicleID(carid);
                	GiveMoney(offer, CarPrice[playerid], "продал авто игроку");
				    GiveMoney(playerid, -CarPrice[playerid], "купил авто в игрока");
				    SetCarOwner(carid, PN(playerid));
				    SetCarKeyer(carid, playerid);
				    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с приобретением транспортного средства.");
					GameTextForPlayer(playerid, !"successful", 0, 1);
				    SCM(offer, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с продажей транспортного средства.");
				    GameTextForPlayer(offer, !"successful", 0, 1);
				    RemovePlayerFromVehicle(offer);
				    CarPrice[playerid] = 0;
				    CarOffer[offer] =
				    CarOffer[playerid] = INVALID_PLAYER_ID;
					GiveBizMoney(playerid, CarInfo[number][cNalog]);
					CarInfo[number][cNalog] = 0;
					str_1[0] = EOS;
                    f(str_1, sizeof(str_1), "машину(id: %i)", number);
                    //aml(36, offer, PN(playerid), str_1, CarPrice[playerid], 5);
                    //aml(37, playerid, PN(offer), str_1, CarPrice[playerid], 5);
				}
			    else
				{
					SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
					SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
	    			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				}
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    CarPrice[playerid] = 0;
			    CarOffer[CarOffer[playerid]] =
			    CarOffer[playerid] = INVALID_PLAYER_ID;
			}
		}
		case 3000:
		{
		    if(response) SPD(playerid,12,0,"","{EC2218} Вы действительно согласны на покупку транспорта?","Принять","Отмена");
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    CarPrice[playerid] = 0;
			    CarOffer[CarOffer[playerid]] = INVALID_PLAYER_ID;
			    CarOffer[playerid] = INVALID_PLAYER_ID;
			}
		}
		case 2999:
		{
		    if(response) SPD(playerid,2777,0,"","{EC2218} Вы действительно согласны на обмен транспорта?","Принять","Отмена");
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			    cardop[playerid]=0;
			}
		}
		case 2777:
		{
			if(response)
			{
			    new offer = caoffer[playerid];
			    if(caoffer[playerid] == playerid) return SCM(playerid, COLOR_GREY, !"Ошибка.");
			    //
			    if(GetMoney(playerid)<cardop[offer])return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег на оплату доплаты обмена транспортом!");
			    if(cartrade[playerid]!=GetPlayerVehicleID(playerid) || cartrade[offer]!=GetPlayerVehicleID(offer))return 0;
			    //
		        if(!IsPlayerInHisVehicle(offer)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Человек с которым вы обменеваетесь должен находится в личном транспорте!");
		        if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы должны находится в личном транспорте!");
	            new carid = GetPlayerVehicleID(offer);
	            new caridd = GetPlayerVehicleID(playerid);
				if(!ProxDetectorS(10.0, playerid, offer, 1)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
				if(playerid == offer) return 0;
            	////aml(59, playerid, PN(offer), "", number, numberr, cardop[offer]);
			    SetCarOwner(carid,PN(playerid));
			    SetCarOwner(caridd,PN(offer));
			    SetCarKeyer(carid,playerid);
			    SetCarKeyer(caridd,offer);
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			    PlayerPlaySound(offer, 30800, 0.0, 0.0, 0.0);
				GiveMoney(playerid,-cardop[offer], "доплатил за обмен транспорта");
				GiveMoney(offer,cardop[offer], "получил доплату за транспорт");
			    SCM(playerid,COLOR_ACHAT,"[Подсказка] {FFFFFF}Поздравляем с успешным обменом транспорта.");
			    GameTextForPlayer(playerid, !"successful", 0, 1);
			    SCM(offer,COLOR_ACHAT,"[Подсказка] {FFFFFF}Поздравляем с успешным обменом транспорта.");
			    GameTextForPlayer(offer, "successful", 0, 1);
			    RemovePlayerFromVehicle(offer);
			    RemovePlayerFromVehicle(playerid);
			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			}
			return 1;
		}
        case 16:
		{
		    if(response)
		    {
		        new biz = InfoBiz[playerid];
	         	if(biz != -1)
		        {
			        switch(listitem)
			        {
			            case 0:
			            {
			                if(IsPlayerInRangeOfPoint(playerid,3.0,BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z])) EnterBiz(playerid, biz);
							else InfoBiz[playerid] = -1;
			            }
			            case 1:
			            {
							InfoBiz[playerid] = -1;
			            }
			            default: return 0;
					}
		        }
		    }
		}
		case 17:
		{
		    if(response)
		    {
		        new house = InfoHouse[playerid];
		        if(house != -1)
		        {
		            switch(listitem)
		            {
		                case 0:
		                {
		                    if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]))
					        {
					            if(HouseInfo[house][hLock] != false && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
				                HouseEntered[playerid] = house;
				                if(!RecInfo[playerid][rOpen])
				                {
				                	SetPlayerInteriorEx(playerid,HouseInfo[house][hInt]);
				                	SetPlayerVirtualWorldEx(playerid, (house+50) );
				                	J_SetPlayerPos(playerid,HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z]);
				                }
					        }
					        else InfoHouse[playerid] = -1;
		                }
		            }
		        }
		    }
		}
		case 23:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowStats(playerid, playerid);
		            case 1: ShowLicenses(playerid, playerid);
		            case 2: ShowSkills(playerid, playerid);
		            default: return 0;
		        }
		    }
		    else callcmd::menu(playerid);
		}
        case 353:
		{
			if(response)
			{
			    switch(listitem)
				{
			        case 0:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Desert Eagle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 2);
                        SPD(playerid, 354, 1, "", str_1, "Сделать", "Отмена");
					}
					case 1:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Shotgun{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 2);
                        SPD(playerid, 355, 1, "", str_1, "Сделать", "Отмена");
					}
					case 2:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}MP5{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 2);
                        SPD(playerid, 356, 1, "", str_1, "Сделать", "Отмена");
					}
					case 3:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}M4{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 2);
                        SPD(playerid, 357, 1, "", str_1, "Сделать", "Отмена");
					}
					case 4:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}AK47{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 3);
                        SPD(playerid, 358, 1, "", str_1, "Сделать", "Отмена");
					}
					case 5:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Country Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 10);
                        SPD(playerid, 359, 1, "", str_1, "Сделать", "Отмена");
					}
					case 6:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Sniper Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 50);
                        SPD(playerid, 360, 1, "", str_1, "Сделать", "Отмена");
					}
					case 7:
			        {
                        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Micro Uzi (Mac 10){FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, 328) / 2);
                        SPD(playerid, 361, 1, "", str_1, "Сделать", "Отмена");
					}
				}
			}
		}
		case 354:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 2)
		        {
					str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Desert Eagle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 2);
					return SPD(playerid, 354, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 24, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*2);
			}
		}
        case 355:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 2)
				{
                     str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Shotgun{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 2);
                     return SPD(playerid, 355, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 25, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid,str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*2);
			}
		}
        case 356:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo/2)
				{
					str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}MP5{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 2);
					return SPD(playerid, 356, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 29, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*2);
			}
		}
        case 357:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 2)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}M4{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 2);
				    return SPD(playerid, 357, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 31, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*2);
			}
		}
        case 358:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 3)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}AK47{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 3);
                    return SPD(playerid, 358, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 30, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*3);
			}
		}
		case 359:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
			    new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 10)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Country Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 10);
				    return SPD(playerid, 359, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 33, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*10);
			}
		}
        case 360:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
			    new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 50)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Sniper Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 50);
				    return SPD(playerid, 360, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 34, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*50);
			}
		}
		case 361:
		{
            if(response)
		    {
				extract inputtextsave -> new amount;
                if(amount > 100000 || amount < 1) return 1;
			    new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, 328) < ammo / 2)
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество патронов для {A0FF80}Micro Uzi (Mac 10){FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, 328) / 2);
				    return SPD(playerid, 361, 1, "", str_1, "Сделать", "Отмена");
				}
                GivePlayerWeapon(playerid, 28, ammo);
                str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
                J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, 328, -ammo*2);
			}
		}
		case 24:
		{
			if(response)
			{
			    new id = SGunOffer[playerid];
			    if(GetMoney(playerid) >= SGunPrice[playerid])
			    {
			        if(GetInvCount(id, 328) >= SGunMats[playerid])
					{
					    if(ProxDetectorS(3, playerid, id, 1))
						{
							if(GetMoney(playerid) >= SGunPrice[playerid])
						 	{
						 		if(GetInvCount(id, 328) >= SGunMats[playerid])
								{
								    str_1[0] = EOS, f(str_1, sizeof(str_1),"%s[%i] cделал себе оружие.",PN(playerid),playerid);
								    SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 15.0, 5000);
								    ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
								    GivePlayerWeapon(playerid,SGunID[playerid],SGunAmmo[playerid]);
								   	GiveMoney(playerid,-SGunPrice[playerid], "купил оружие");
								   	GiveMoney(id,SGunPrice[playerid], "продал оружие");
								   	InvAdd(id, 328, -SGunMats[playerid]);
								   	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно купили оружие");
								   	SCM(id,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали оружие");
								   	SGunOffer[playerid] = INVALID_PLAYER_ID;
								   	SGunPrice[playerid] = 0;
								   	SGunAmmo[playerid] = 0;
								   	SGunID[playerid] = 0;
								}
								else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает материалов");
							}
							else SCM(id,COLOR_RED,!"[Ошибка] {FFFFFF}У вас нехватает денег");
							SGunOffer[playerid] = INVALID_PLAYER_ID;
						}
			    	}
			    }
			    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			}
			return 1;
		}
		case 26:
		{
		    if(response)
		    {
		        new id = MLPlayer[playerid];
          		if(OrgInfo[listitem+1][oLeaderUID] == -1)
		        {
		            PI[id][pMember] = listitem+1;
		            UpdatePlayerDataInt(id, "Member", listitem+1);
					OrgInfo[PI[id][pMember]][oLeaderUID] = PI[id][pID];
					SetSpawnPI(id, 2);
		            PI[id][pRank] = 10;
		            UpdatePlayerDataInt(id, "Rank", 10);
		            SCMf(id,COLOR_VALIK, "А: %s назначил вас лидером организации '%s'",PN(playerid),global_OrgInfo[listitem+1][g_oName]);
		            SendAdminsMessagef(COLOR_VALIK, "[A] %s назначил игрока %s лидером организации '%s'",PN(playerid),PN(id),global_OrgInfo[listitem+1][g_oName]);
					ResetSpawnInfo(id, listitem+1);
		            SaveOrg(listitem+1);
		            PlayerSpawn(id), SMD(id, "default led");
					TeamDuty{playerid} = true;
					CheckDuty(playerid);
					//aml(4, playerid, PN(id), OrgInfo[listitem+1][oName]);
		        }
		        else
		        {
                    if(OrgInfo[listitem+1][oLeaderUID] != -1)
		            {
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\
						Ошибка! У этой организации уже есть лидер!\n\
						Текущий лидер: {B83434}%i(UID){FFFFFF}\n\
						Хотите его снять с лидерства и назначить лидером {B83434}%s",OrgInfo[listitem+1][oLeaderUID],PN(id));
						SPD(playerid,27,0,"Снять",str_1,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот человек уже лидер этой организации");
		        }
		    }
		    return 1;
		}
        case 27:
        {
            if(!response) return 1;
            new leader = MLeader[playerid];
            new id = MLPlayer[playerid];
            foreach(new i: Player)
            {
                if(OrgInfo[leader][oLeaderUID] == PI[i][pID])
                {
                    PI[i][pMember] =
                    PI[i][pDCTime] =
                    PI[i][pRank] =
                    PI[i][pJob] = 0;
                    UpdatePlayerDataInt(i, "DCTime", 0);
                    UpdatePlayerDataInt(i, "Job", 0);
                    UpdatePlayerDataInt(i, "Rank", 0);
                    UpdatePlayerDataInt(i, "Member", 0);
                    TeamDuty{i} = false;
                    SCMf(i, COLOR_VALIK, "[Информация] {FFFFFF}А: %s выгнал вас из организации", PN(playerid));
                    SCM(i, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");

                    f(str_1, sizeof(str_1), "[Информация] {FFFFFF}А: %s выгнал игрока %s из должности лидерства", PN(playerid), PN(i));
                    SendAdminsMessage(COLOR_VALIK, str_1);
                    PlayerUnleader(i, PN(i));
                    SetBumSkin(i);
                }
            }
            OrgInfo[leader][oLeaderUID] = PI[id][pID];
            PI[id][pMember] = leader;
            UpdatePlayerDataInt(id, "Member", leader);
            PI[id][pDCTime] = 2;
            UpdatePlayerDataInt(id, "DCTime", 2);
            SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
            PI[id][pRank] = 10;
            UpdatePlayerDataInt(id, "Rank", 10);
            ResetSpawnInfo(id, leader);
            SCMf(id, COLOR_VALIK, "А: %s назначил вас лидером организации '%s'", PN(playerid), global_OrgInfo[leader][g_oName]);
            SCMf(playerid, COLOR_VALIK, "Вы назначили игрока %s лидером организации '%s'", PN(id), global_OrgInfo[leader][g_oName]);
            SendAdminsMessagef(COLOR_VALIK, "[A] А: %s назначил игрока %s лидером организации '%s'", PN(playerid), PN(id), global_OrgInfo[leader][g_oName]);
            SaveOrg(leader);
            return 1;
        }
  		case 28:
		{
		    if(response)
		    {
     			new hour,minuite,second;
			    gettime(hour,minuite,second);
				if(PI[playerid][pJob]== GetJob[playerid])return SendBotMessage(playerid,!"Вы и так уже тут работаете!");
				if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
				{
			 		return SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
				}
		        PI[playerid][pJob] = GetJob[playerid];
		        UpdatePlayerDataInt(playerid, "Job", GetJob[playerid]);
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			 	SendBotMessage(playerid,!"Вы приняты на работу. Используйте /jobhelp /help для того чтобы изучить работу.");
				ResetDynamicCPs(playerid);
				ShowJobInfo(playerid, PI[playerid][pJob]);
			    return 1;
			}
		}
		case 29:
		{
		    if(response)
		    {
		        if(IsValidPassport(playerid))
			    {
			        new house = InfoHouse[playerid];
			        if(GetPlayerPeakHouse(playerid))
			        {
				        if(GetString(HouseInfo[house][hOwner],"The State"))
			     	    {
			     	        if(GetMoney(playerid) >= HouseInfo[house][hCost])
			     	        {
		     	                HouseEntered[playerid] = house;
		     	                SetSpawnPI(playerid, 1);
								UpdatePlayerDataInt(playerid, "DCTime", 1);
		     	                SCM(playerid, -1, !">> {BE2D2D} Местом спавна автоматически назначен ваш дом. Изменить место спавна >> /setspawn!");
		     	                GiveMoney(playerid,-HouseInfo[house][hCost], "купил дом");
		     	                PI[playerid][pHouseMain] = house;
		     	                UpdatePlayerDataInt(playerid, "HouseSpawned", house);
								if(!RecInfo[playerid][rOpen])
								{
		     	                	SetPlayerInteriorEx(playerid,HouseInfo[house][hInt]);
			               	 		SetPlayerVirtualWorldEx(playerid,house+50);
		     	                	J_SetPlayerPos(playerid,HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z]);
			               	 	}
			               	 	SetString(HouseInfo[house][hOwner],PN(playerid));
			               	 	UpdateHouse(house);
			               	 	UpdateDataStr("houses", "Owner", HouseInfo[house][hOwner], HouseInfo[house][hID]);
		     	                SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот дом ваш");
		     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
								return 1;
			     	        }
			     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот дом уже куплен");
	     	        }
	     	        else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - У вас уже максимальное количество домов!");
	     	        if(!PI[playerid][pImprovement][5]) SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше домов! Покупайте улучшение 'Больше недвижимости' чтобы иметь до 5-ёх домов!");
					if(!PI[playerid][pImprovement][5] && PI[playerid][pVIP][0] != 5) SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Улучшение 'Больше недвижимости' + 'ПРЕМИУМ ВИП' дадут возможность иметь до 7-ми домов!");
	     	    }
	     	    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нет паспорта, получить его можно в мэрии");
		    }
		    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		    return 1;
		}
		case 30:
		{
		    if(response)
		    {
		        new house = InfoHouse[playerid];
		        if(HouseInfo[house][hLock] != false && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
      			HouseEntered[playerid] = house;
      			if(!RecInfo[playerid][rOpen])
      			{
      				SetPlayerInteriorEx(playerid,HouseInfo[house][hInt]);
      				SetPlayerVirtualWorldEx(playerid, (house+50) );
      				J_SetPlayerPos(playerid,HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z]);
      			}
		    }
		    return 1;
		}
		case 32: 
		{
			if(!response) return 1;
			if(pTemp[playerid][ReReport] > global_time) return 1;
			if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
			if(strlen(inputtextsave) < 7 || strlen(inputtextsave) > 70)
	        {
	            SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам необходимо сформулировать свою жалобу корректно!");
	            SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 7, максимальное - 70");
				return ShowDialogReport(playerid);
			}//11535
			if(!SystemReport)
			{
				AddReport(playerid);
				SendAdminsMessagef(COLOR_LIGHTRED, "[Жалоба] от %s[%i]: {ffffff}%s. Уже %i жалоб!!!", PN(playerid), playerid, inputtextsave, pTemp[playerid][NumReports] + 1);
		        SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы отправили жалобу: %s", inputtextsave);
			    SCMf(playerid, -1, "На ваш вопрос обязательно ответит администрация! Вы %i в очереди!", pTemp[playerid][NumReports] + 1);
			    SCM(playerid, -1, !"Если за вами необходимо срочно проследить, администрация сделает это вне очереди!");
				SetPVarString(playerid, !"ReportMessage", inputtextsave);
		    }
		    else
		    {
				SendAdminsMessagef(COLOR_LIGHTRED, "[Жалоба] от %s[%i]:{FFFFFF} %s", PN(playerid), playerid, inputtextsave);
				SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы отправили жалобу: %s", inputtextsave);
		    }
		    foreach_player(i)
			{
				if(!PI[i][pAdmin] || !ADuty{i}) continue;
				GameTextForPlayer(i, !"Report ++", 0, 1);
			}
			//aml(32, playerid, "", inputtextsave);
		    GameTextForPlayer(playerid, !"Successful", 0, 1);
			if(PI[playerid][pVIP][1] < global_time) pTemp[playerid][ReReport] = global_time + 180;
			else pTemp[playerid][ReReport] = global_time + 30;
			return 1;
		}
		case 1333: SPD(playerid, 1332, DIALOG_STYLE_LIST, !"Оцените работу админа!", !"{BFE54C}Хороший ответ!\n{D94040}Плохой ответ!", !"Выбрать", !"Отмена");
		case 1332:
		{
			new id = pTemp[playerid][ReportID];
			if(id == -1) return 0;
			if(!listitem) PI[id][pReputation] += 2;
			else PI[id][pReputation] --;
			UpdatePlayerDataInt(id, "Reputation", PI[id][pReputation]);
			SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Спасибо за ваш отзыв!");
			pTemp[playerid][ReportID] = -1;
			DeletePVar(playerid, !"ReportMessage");
			return 1;
		}
		case 6370:
		{
			new id = pTemp[playerid][ReportID];
			if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок вышел с игры");
			str_1[0] = EOS, GetPVarString(id, !"ReportMessage", str_1, 128);
			if(response)
		    {
	 			if(!strlen(inputtextsave) || strlen(inputtextsave) > 70)
				{
			        SPDf(playerid, 6370, DIALOG_STYLE_INPUT, !"", !"Принять", !"Отмена", "{FFFFFF}Жалоба/Вопрос от: %s[%i]\n\n{BFE54C}%s\n\n", PN(id), id, str_1);
				    return SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Много символов, или нет символов");
				}
				//aml(33, playerid, PN(id), inputtextsave);
		        SPDf(id, 1333, DIALOG_STYLE_MSGBOX, !"", !"Спасибо", !"", "{FFFFFF}Вам ответил администратор!\n\n{FFFFFF}Ваш вопрос: {c8e464}%s\n{FFFFFF}%s: {c8e464}%s\n\n", str_1, PN(playerid), inputtextsave);
				SCMf(id, COLOR_LIGHTRED, "А: %s[%i]: {FFFFFF}%s", PN(playerid), playerid, inputtextsave);
				SendAdminsMessagef(COLOR_ORANGE, "А: %s[%i] ответил игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, inputtextsave);
	    	}
	    	else
	    	{
				SendAdminsMessagef(COLOR_ORANGE, "А: %s[%i] СКИПНУЛ репорт игрока %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, str_1);
	    		PI[playerid][pReputation] --;
	    		UpdatePlayerDataInt(playerid, "Reputation", PI[playerid][pReputation]);
	    	}
		}
		case 6377:
		{
		    switch(listitem)
		    {
		        case 0: SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы выбрали временный ответ");
		        case 1: SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы выбрали как быстрый ответ");
		    }
		    return 1;
		}
		case 401:
		{
		    if(response)
		    {
		        switch(listitem)
			    {
			        case 0: SPD(playerid,402,2,!"Править налоги",!"{73B461}[1] Информация\n[2] Изменить часовую плату за дом\n[3] Изменить часовую плату за бизнес\n[4] Изменить часовую плату за авто",!"Принять",!"Отмена");
			        case 1: SPD(playerid,404,2,!"Править цены на аренду",!"{73B461}[1] Информация\n[2] Изменить цену на аренду свободного транспорта\n[3] Изменить цены на аренду рабочего транспорта",!"Принять",!"Отмена");
			        case 2: SPD(playerid,405,2,!"Править премии",!"{73B461}[1] Информация\n[2] Изменить премию полицейским\n[3] Изменить премию за доставку патронов\n[4] Изменить премию за убийство бандита в з.з.\n[5] Изменить премию за редакцию объявлений\n[6] Изменить премию за проведение помолвки",!"Принять",!"Отмена");
					case 3: SPD(playerid,397,2,!"Глобальные настройки",!"{73B461}[1] Информация\n[2] Направление налогов\n[3] Пополнить баланс организации (за счет казны)\n[4] Изменить цену выкупа\n[5] Изменить стоимость закупки продуктов на ферме\n[6] Изменить стоимость закупки предметов на грузчиках",!"Принять",!"Отмена");
			    }
		    }
		    return 1;
		}
		case 397:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                strcat(str_1,!"- - - - - - - - - - - - - - - - - - - - - - - - - - - - {73B461}Баланс Фракций{FFFFFF} - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n");
	                 	strcat(str_1,!"Обратите внимание что вы можете перенаправлять прием налогов на другие организации\nчтобы пополнить их баланс или внести деньги лично из казны штата Аризоны.\n");
	                  	strcat(str_1,!"Каждой организации необходимо иметь деньги на счету банка чтобы выплачивать\nпремии своим работникам, а также закупать патроны и продукты у других предприятий и фракций.\n\n");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"- Полиция LS: {73B461}%i{FFFFFF}\n- RCPD: {73B461}%i{FFFFFF}\n- FBI: {73B461}%i{FFFFFF}\n- SFPD: {73B461}%i{FFFFFF}\n- Больница ЛС: {73B461}%i{FFFFFF}\n",OrgInfo[TEAM_LSPD][oBank],OrgInfo[TEAM_RCPD][oBank],OrgInfo[TEAM_FBI][oBank],OrgInfo[TEAM_SFPD][oBank],OrgInfo[TEAM_MEDICLS][oBank]);
						strcat(str_1,str_1);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"- Правительство: {73B461}%i{FFFFFF}\n- Больница SF: {73B461}%i{FFFFFF}\n- Автошкола: {73B461}%i{FFFFFF}\n- Radio LS: {73B461}%i{FFFFFF}\n- Army LS: {73B461}%i{FFFFFF}\n- Bank: {73B461}%i{FFFFFF}\n- Radio SF: {73B461}%i{FFFFFF}\n",OrgInfo[TEAM_MERIALS][oBank],OrgInfo[TEAM_MEDICSF][oBank],OrgInfo[TEAM_LICENSERS][oBank],OrgInfo[TEAM_RADIO][oBank],OrgInfo[TEAM_ARMY][oBank],OrgInfo[TEAM_BANK][oBank],OrgInfo[TEAM_RADIOSF][oBank]);
						strcat(str_1,str_1);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"- Больница LV: {73B461}%i{FFFFFF}\n- Полиция LV: {73B461}%i{FFFFFF}\n- Radio LV: {73B461}%i{FFFFFF}\n- Army LV: {73B461}%i{FFFFFF}\n\n- Army SF: {73B461}%i{FFFFFF}\n\n",OrgInfo[TEAM_MEDICLV][oBank],OrgInfo[TEAM_LVPD][oBank],OrgInfo[TEAM_RADIOLV][oBank],OrgInfo[TEAM_ARMYLV][oBank],OrgInfo[TEAM_ARMYSF][oBank]);
						strcat(str_1,str_1);
      					str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Получатель налогов: {73B461}%s\n\n{FFFFFF}",global_OrgInfo[GLS[13]][g_oName]);
						strcat(str_1,str_1);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Цена выкупа: {73B461}%i\n\n{FFFFFF}",GLS[21]);
						strcat(str_1,str_1);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Закупка продуктов на ферме: {73B461}%i\n{FFFFFF}",GLS[28]);
						strcat(str_1,str_1);
		                SPD(playerid,0,0,!"Информация",str_1,!"Принять",!"");
		            }
		            case 1: SPD(playerid,398,2,!"Перенаправить налоги",!"[1] Полиция LS\n[2] RCPD (Dilimore)\n[3] FBI\n[4] SFPD\n[5] Больница ЛС\n[6] Правительство\n[7] Больница SF\n[8] Автошкола\n[9] Radio LS\n[10] Army LS\n[11] Central Bank\n[12] Больница LV\n[13] Полиция LV\n[14] Radio LV\n[15] Army LV\n[16] Radio SF\n[17] Army SF",!"Принять",!"Отмена");
					case 2: SPD(playerid,396,2,!"Пополнить баланс",!"[1] Полиция LS\n[2] RCPD (Dilimore)\n[3] FBI\n[4] SFPD\n[5] Больница ЛС\n[6] Правительство\n[7] Больница SF\n[8] Автошкола\n[9] Radio LS\n[10] Army LS\n[11] Central Bank\n[12] Больница LV\n[13] Полиция LV\n[14] Radio LV\n[15] Army LV\n[16] Radio SF\n[17] Army SF",!"Принять",!"Отмена");
					case 3:
					{
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение выкупа из кпз\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 90000.");
		                SPD(playerid,425,1,!"Изменить цену выкупа",str_1,!"Принять",!"Отмена");
					}
					case 4:
					{
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение цены на закупку продуктов\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 10.");
		                SPD(playerid,426,1,!"Изменить стоимость закупки продуктов",str_1,!"Принять",!"Отмена");
					}
					case 5:
					{
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение цены на закупку предметов\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 15.");
		                SPD(playerid,427,1,!"Изменить стоимость закупки предметов",str_1,!"Принять",!"Отмена");
					}
		        }
			}
		}
		case 398:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: GLS[13] = 1;
		            case 1: GLS[13] = 2;
		            case 2: GLS[13] = 3;
		            case 3: GLS[13] = 4;
		            case 4: GLS[13] = 5;
		            case 5: GLS[13] = 6;
		            case 6: GLS[13] = 8;
		            case 7: GLS[13] = 9;
		            case 8: GLS[13] = 10;
		            case 9: GLS[13] = 20;
		            case 10: GLS[13] = 21;
		            case 11: GLS[13] = 22;
		            case 12: GLS[13] = 23;
		            case 13: GLS[13] = 24;
		            case 14: GLS[13] = 7;
		            case 15: GLS[13] = TEAM_RADIOSF;
		            case 16: GLS[13] = TEAM_ARMYSF;
				}
				UpdateDataConfig("GLS[13]",GLS[13]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} перенаправил прием платежей с налогов на {FFFFFF}%s",PN(playerid),playerid,global_OrgInfo[GLS[13]][g_oName]);
				SendGosMessage(0x73B461FF,str_1);
			}
		}
		case 402:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Получатель налогов: {73B461}%s\nСостояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n{73B461}-{FFFFFF} Налог на дом: {73B461}%i{FFFFFF}\n{73B461}-{FFFFFF} Налог на бизнес: {73B461}%i{FFFFFF}\n{73B461}-{FFFFFF} Налог на авто: {73B461}%i{FFFFFF}",global_OrgInfo[GLS[13]][g_oName],OrgInfo[GLS[13]][oBank],GLS[2],GLS[3],GLS[1]);
		                SPD(playerid,0,0,!"Информация о налогах штата",str_1,!"Принять",!"");
		            }
		            case 1:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение налогов на дома может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 2000 до 4000.");
		                SPD(playerid,406,1,!"Изменить часовую плату за дом",str_1,!"Принять",!"Отмена");
		            }
		            case 2:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение налогов на бизнес может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 2000 до 4000.");
		                SPD(playerid,407,1,!"Изменить часовую плату за бизнес",str_1,!"Принять",!"Отмена");
		            }
		            case 3:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение налогов на авто может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 2000 до 3000.");
		                SPD(playerid,408,1,!"Изменить часовую плату за авто",str_1,!"Принять",!"Отмена");
		            }
		        }
		    }
		    else callcmd::ekonom(playerid);
		}
		case 118:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >PI[playerid][pMoney]) return SendBotMessage(playerid,!"Уважаемый! Пытайтесь ввести все символы правильно!");
				OrgInfo[PI[playerid][pMember]][oBank]+=money;
				GiveMoney(playerid,-money, "пополнил счет организации");
				str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}%s {73B461}пополнил счет организации на {FFFFFF}%i$",PN(playerid),money);
				STM(PI[playerid][pMember],0x73B461FF,str_1);
				SaveOrg(PI[playerid][pMember]);
				SendBankBot(playerid);
		    }
		}
		case 406:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 2000 || money >4000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[2] = money;
				UpdateDataConfig("hNalog",GLS[2]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату дома. Теперь почасовая плата за дом составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}
		case 407:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 2000 || money >4000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[3] = money;
				UpdateDataConfig("bNalog",GLS[3]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату бизнеса. Теперь почасовая плата составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}
		case 408:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 2000 || money >3000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[1] = money;
				UpdateDataConfig("cNalog",GLS[1]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату авто. Теперь почасовая плата составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}
		case 404:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"{73B461}Получатель налогов: %s\n{73B461}Состояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n- Свободный транспорт: {73B461}%i{FFFFFF}\n- Автобусы: {73B461}%i{FFFFFF}",global_OrgInfo[GLS[13]][g_oName],OrgInfo[GLS[13]][oBank],GLS[14],GLS[15]);
		                SPD(playerid,0,0,!"Информация о аренде",str_1,!"Принять",!"");
		            }
		            case 1:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение цен на аренду транспорта может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 100000 до 250000.");
		                SPD(playerid,418,1,!"Изменить цены на аренду транспорта",str_1,!"Принять",!"Отмена");
		            }
		            case 2:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение цен на аренду транспорта может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 100000 до 200000.");
		                SPD(playerid,419,1,!"Изменить цены на аренду р.транспорта",str_1,!"Принять",!"Отмена");
		            }
		        }
			}
			else callcmd::ekonom(playerid);
		}
		case 418:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 100000 || money >250000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену на аренду!");
				GLS[14] = money;
				UpdateDataConfig("GLS[14]",GLS[14]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в аренду транспорта. Теперь стоимость аренды составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}
		case 419:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 100000 || money >200000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену на аренду!");
				GLS[15] = money;
				UpdateDataConfig("GLS[15]",GLS[15]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в аренду рабочего транспорта. Теперь стоимость аренды составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}
		case 405:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"{73B461}Получатель налогов: %s\n{73B461}Состояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n- Премия за поимку преступника: {73B461}%i{FFFFFF}\n- Премия за доставку патронов: {73B461}%i{FFFFFF}\n- Премия за убийство бандита в з.з.: {73B461}%i{FFFFFF}\n- Премия за обработку объявлений: {73B461}%i{FFFFFF}\n- Премия за проведение помолвки: {73B461}%i{FFFFFF}",global_OrgInfo[GLS[13]][g_oName],OrgInfo[GLS[13]][oBank],GLS[16],GLS[17],GLS[18],GLS[19],GLS[20]);
						SPD(playerid,0,0,!"Информация о премиях штата",str_1,!"Принять",!"");
		            }
		            case 1:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2500.");
		                SPD(playerid,420,1,!"Изменить премию в полиции",str_1,!"Принять",!"Отмена");
		            }
		            case 2:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 1000.");
		                SPD(playerid,421,1,!"Изменить премию в армии",str_1,!"Принять",!"Отмена");
		            }
		            case 3:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 1000.");
		                SPD(playerid,422,1,!"Изменить премию в армии",str_1,!"Принять",!"Отмена");
		            }
		            case 4:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 500.");
		                SPD(playerid,423,1,!"Изменить премию за обработку объявлений",str_1,!"Принять",!"Отмена");
		            }
		            case 5:
		            {
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2000.");
		                SPD(playerid,424,1,!"Изменить премию за проведения помолвки",str_1,!"Принять",!"Отмена");
		            }
				}
			}
			else callcmd::ekonom(playerid);
		}
		case 420:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[16] = money;
				UpdateDataConfig("arest",GLS[16]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию полицейских. Теперь их премия за арест человека составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str_1);
		    }
		}
		case 421:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SCM(playerid, COLOR_RED, !"Вы не можете установить такую премию!");
				GLS[17] = money;
				UpdateDataConfig("dostav",GLS[17]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию Army LS. Теперь их премия за доставку патронов составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str_1);
		    }
		}
		case 422:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[18] = money;
				UpdateDataConfig("ybil",GLS[18]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию Army LS. Теперь премия за убийство бандита составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str_1);
		    }
		}
		case 423:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >500) return SCM(playerid, COLOR_RED, !"Вы не можете установить такую премию!");
				GLS[19] = money;
				UpdateDataConfig("redak",GLS[19]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию CNN. Теперь их премия за обработку объявлений составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str_1);
		    }
		}
		case 424:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[20] = money;
				UpdateDataConfig("pomol",GLS[20]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию за проведение помолвки. Теперь их премия составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str_1);
		    }
		}
		case 425:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >90000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену выкупа!");
				GLS[21] = money;
				UpdateDataConfig("bail",GLS[21]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в выкуп из КПЗ. Теперь ее стоимость составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
		    }
		}

		case 426:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >10) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену для закупки!");
				GLS[28] = money;
				UpdateDataConfig("GLS[28]",GLS[28]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в стоимость закупки продуктов на ферме. Теперь ее стоимость: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[25],GLS[28]);
				UpdateDynamic3DTextLabelText(FactoryText[1], -1, str_1);
		    }
		}
		case 427:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >15) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену для закупки!");
				GLS[27] = money;
				UpdateDataConfig("GLS[27]",GLS[27]);
				str_1[0] = EOS, f(str_1, sizeof(str_1),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в стоимость закупки предметов на грузчиках. Теперь ее стоимость: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str_1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[26],GLS[27]);
				UpdateDynamic3DTextLabelText(FactoryText[2], -1, str_1);
		    }
		}
		case 9612:
		{
		    if(response)
		    {
		        static plase[64];
		        plase[0] = EOS;
		        switch(listitem)
				{
				    case 0:
				    {
				        plase = "Лесопилке";
				        SetPVarInt(playerid,"warplace",1);
				    }
				    case 1:
				    {
				        plase = "Заброшенном аэродроме";
				        SetPVarInt(playerid,"warplace",2);
				    }
				    case 2:
				    {
				        plase = "Ферме Fort Carson";
				        SetPVarInt(playerid,"warplace",3);
				    }
					case 3:
					{
					    plase = "Заброшенной деревне";
				        SetPVarInt(playerid,"warplace",4);
					}
				}
				str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы хотите начать войну за этот бизнес?\n\nЕсли вы согласитесь вам придётся провести переговоры на %s, взяв собой более 4 человек!\nПосле чего ждать 10 минут пока все соберутся и если на точке соберутся по 4 человека с каждой мафии ,вы начнете войну!",plase);
				SPD(playerid,591,0,"Информация",str_1,"Да","Нет");
		    }
		}
		case 15252:
		{
			if !response *then return false;

			new cost = GetPVarInt(playerid, "AllNalogBank");

			if(PI[playerid][pMoney] < cost) return SendBotMessage(playerid,"Извините, но у вас нет нужной суммы денег!");

			GiveMoney(playerid, -cost);

			for(new i; i < MAX_VEHICLES; i++)
			{
				if(!(OwnableCar[i] == INVALID_VEHICLE_ID))
				{
					new carid = OwnableCar[i];
					if(IsPlayerHaveCar(playerid, carid) && CarInfo[i][cNalog]) CarInfo[i][cNalog] = 0;
				}

				if(i < OWNABLEBIZES && (GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid))) && BizInfo[i][bNalog])
					BizInfo[i][bNalog] = 0;

				if(i < OWNABLEHOUSES && (GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i)) && HouseInfo[i][hNalog])
					HouseInfo[i][hNalog] = 0;
			}
			SCMf(playerid, COLOR_VALIK, "Вы оплатили все налоги на сумму:{FFFFFF} $%i", cost);
			return DeletePVar(playerid, "AllNalogBank");
		}
		case 33:
		{
		    if(!response) return 1;
			if(!IsAtBankomat(playerid,10.0))
			{
				switch(listitem)
				{
					case 0:
					{
						str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Текущее состояние счета: {B83434}$%i, {FFFFFF}состояние депозита: {B83434}$%i", PI[playerid][pBank][0], PI[playerid][pDeposit]);
						SendBotMessage(playerid, str_1);
					}
					case 1:
					{
						if(!IsAtBankomat(playerid,10.0)) SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"{FFFFFF}Введите сумму для снятия\nКомиссия на снятие: {FCBE52}2{FFFFFF} процента", !"Далее", !"Отмена");
						else SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для снятия\n{F69B2C}При снятии денег в банкомате вы теряете 1 процент за услуги нашей компании.\n", !"Далее", !"Отмена");
					}
					case 2: SPD(playerid, 34, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для пополнения\n\n", !"Далее", !"Отмена");
					case 3:
					{
						if(PI[playerid][pLevel] >= 3) SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"{FFFFFF}Введите ID/Ник игрока которому хотите перевести деньги\nКомиссия на переводы:\nот {5ebf70}100 000${FFFFFF} 1 процент\nот {4ac24a}1 000 000${FFFFFF} 2 процента\nот {3a9e3a}10 000 000${FFFFFF} 3 процента\nот {d4904c}100 000 000${FFFFFF} 4 процента", !"Выбор", !"Отмена");
						else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Переводить деньги можно только с 3-го уровня");
					}
					case 4:
					{
						new cost;
						str_1 = "{FFFFFF}";
						for(new i; i < MAX_VEHICLES; i++)
						{
							if(!(OwnableCar[i] == INVALID_VEHICLE_ID))
							{
								new carid = OwnableCar[i];
								if(IsPlayerHaveCar(playerid, carid) && CarInfo[i][cNalog])
								{
									cost += CarInfo[i][cNalog];
									strcat(str_1, (str_f("Транспорт %s: $%d\n", GetVehicleName(carid), CarInfo[i][cNalog])));
								}
							}

							if(i < OWNABLEHOUSES && (GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i)) && HouseInfo[i][hNalog])
							{
								cost += HouseInfo[i][hNalog];
								strcat(str_1, (str_f("Дом №%d: $%d\n", i, HouseInfo[i][hNalog])));
							}

							if(i < OWNABLEBIZES && (GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid))) && BizInfo[i][bNalog])
							{
								cost += BizInfo[i][bNalog];
								strcat(str_1, (str_f("Бизнес №%i (%s): $%i\n", i, InfoBusinesses[BizInfo[i][bState]][BName], BizInfo[i][bNalog])));
							}

						}

						SetPVarInt(playerid, !"AllNalogBank", cost);

						strcat(str_1, (str_f("{ffffff}\n\n\n{ffffff}В сумме за всё: {ffff00}$%i%s\n\n{ffffff}Вы хотите оплатить все вышеперечисленные налоги?", cost)));

						return SPD(playerid, 15252, DIALOG_STYLE_MSGBOX, !"Оплата всех налогов", str_1, !"Оплатить", !"Отмена");
					}
					case 5:
					{
						//static str[250]; str = ""; new cars;
						new cars;
						str_1[0] = EOS;
						foreach(new i: OWNABLECARS)
						{
							if(OwnableCar[i] == INVALID_VEHICLE_ID) continue;
							new carid = OwnableCar[i];
							if(IsPlayerHaveCar(playerid, carid))
							{
								if(CarInfo[i][cNalog] > 0)
								{
									player_Global_Int[playerid][cars] = carid;
									f(str_1, sizeof(str_1), "%s %s(%i)\n", str_1, GetVehicleName(carid), carid);
									cars ++;
								}
								else SCMf(playerid, COLOR_GREY, "На транспорт: %s(%i) не выставлено налогов!\n", GetVehicleName(carid), carid);
							}
						}
						if(!cars) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет налога на личный транспорт!");
						else SPD(playerid, 881, DIALOG_STYLE_LIST, !"Мой транспорт", str_1, !"Выбор", !"Отмена");
					}
					case 6:
					{
//						if(PI[playerid][pDepositIn]) return SendBotMessage(playerid, !"Класть деньги на депозит, можно 1-ин раз в час!");
		//				SPD(playerid, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n\n", !"Далее", !"Отмена");
					}
					case 7:
					{
//						if(PI[playerid][pDepositOut]) return SendBotMessage(playerid, !"Снимать деньги с депозита, можно\nчерез 5 часов, после последнего пополнения!");
//						SPD(playerid, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
					}
					case 8:
					{
						str_1 = "";
						new cars;
						foreach(new i: OWNABLECARS)
						{
							if(OwnableCar[i] == INVALID_VEHICLE_ID) continue;
							new carid = OwnableCar[i];
							if(IsPlayerHaveCar(playerid, carid))
							{
								if(CarInfo[i][cShtraf] > 0)
								{
									player_Global_Int[playerid][cars] = carid;
									f(str_1, sizeof(str_1), "%s{FFFFFF}%s(%d)\n", str_1, GetVehicleName(carid), carid);
									cars ++;
								}
							}
						}
						if(!cars) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет транспорта, который стоит на штрафстоянке!");
						else SPD(playerid, 171, DIALOG_STYLE_LIST, !"Мой транспорт", str_1, !"Выбор", !"Отмена");
					}
					case 9:
					{
						str_1[0] = EOS, f(str_1,350,"{FFFFFF}Вы хотите приобрести ЕВРО?\n\nСтоимость 1-й купюры: {10F441}%d${FFFFFF}\nВ наличии {10F441}%d{FFFFFF} ЕВРО\n{AFAFAF}Введите в строку нужное количество валюты!",GLS[33],GLS[34]);
						SPD(playerid,3722,DIALOG_STYLE_INPUT,"",str_1,"Обмен","Отмена");
					}
					case 10:
					{
						str_1[0] = EOS, f(str_1,350,"{FFFFFF}Вы хотите продать ЕВРО?\n\nСтоимость 1-й купюры: {10F441}%d${FFFFFF}\nУ вас {10F441}%d{FFFFFF} ЕВРО\n{AFAFAF}Введите в строку нужное для продаже количество валюты!",GLS[33],GetInvCount(playerid, 809));
						SPD(playerid,3723,DIALOG_STYLE_INPUT,"",str_1,"Продать","Отмена");
					}
					case 11:
					{
						str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Состояние счета: {B83434}$%d", PI[playerid][pBank][0]);
						SendBotMessage(playerid, str_1);
					}
					case 12: SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"{FFFFFF}Введите сумму для снятия", !"Далее", !"Отмена"),SetPVarInt(playerid, "SwitchBankMy", 1);
					case 13: SPD(playerid, 34, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для пополнения\n\n", !"Далее", !"Отмена"),SetPVarInt(playerid, "SwitchBankMy", 1);
				}
			}
			else
			{
				switch(listitem)
				{
					case 0:
					{
						str_1[0] = EOS, f(str_1, 125, "{FFFFFF}Текущее состояние счета: {B83434}$%d, {FFFFFF}состояние депозита: {B83434}$%d", PI[playerid][pBank], PI[playerid][pDeposit]);
						SendBotMessage(playerid, str_1);
					}
					case 1:
					{
						SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"{FFFFFF}Введите сумму для снятия\n{F69B2C}При снятии денег вы теряете 6 процентов за услуги нашей компании.\n", !"Далее", !"Отмена");
					}
				}
			}
			if(listitem == DListitem[playerid]{14})
			{
				/*if(!HouseInfo[house][hNalog]) return SendBotMessage(playerid,"На этот дом налога не выставлено.");
				if(PI[playerid][pMoney] < HouseInfo[house][hNalog])return SendBotMessage(playerid,"Извините, но у вас нет нужной суммы денег!");
				f(global_str, 150, "оплата коммуналки на дом idh:%d", house);
				GiveMoney(playerid, PI[playerid][pPack] ? -HouseInfo[house][hNalog]/2:-HouseInfo[house][hNalog], global_str);
				OrgInfo[GLS[13]][oBank] += HouseInfo[house][hNalog];
				SaveOrg(GLS[13]);
				HouseInfo[house][hNalog] = 0;
				SaveHouse(house);
				SCM(playerid,COLOR_GREEN, !"Вы успешно погасили неоплаченые счета за коммунальные услуги");
				if(!PI[playerid][pPack]) SCM(playerid,COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик, вы будете платить в 2 раза меньше!");
				SendBankBot(playerid);*/
				str_1 = "{FFFFFF}Номер дома\t{dc143c}Налог\n";
				new i2;
				str_1[0] = EOS;
				for(new i; i < OWNABLEHOUSES; i++)
				{
					if(GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i) != 0)
					{
						player_Global_Int[playerid][i2] = i;
						static nalog;
						if(PI[playerid][pImprovement][1]) nalog = HouseInfo[i][hNalog]/2;
						else nalog = HouseInfo[i][hNalog];
						f(str_1, sizeof(str_1), "%s{FFFFFF}[%i] Дом №%i\t{dc143c}%i\n", str_1, i2+1, i, nalog);
						i2++;
					}
				}
				if(!i2) SCM(playerid, COLOR_GREY, !"У вас нет дома");
				return SPD(playerid, 174, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Выбор дома", str_1, !"Выбор", !"Отмена");
			    /*if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
			    new bizs;
			    str_1 = "";
			    for(new i; i < OWNABLEBIZES;i++)
				{
					if(GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid)))
					{
						if(BizInfo[i][bNalog] > 0)
						{
						    ShowBiz[playerid][bizs] = i;
						    f(str_1, sizeof(str_1), "%s{FFFFFF}%s {E5AB2E}(%d){FFFFFF} Налог: {D44F23}%d$\n", str_1, BizInfo[i][bName], i, BizData[i][bNalog]);
						    bizs ++;
						}
					}
				}
				if(strlen(str_1) > 0) SPD(playerid, 9762, DIALOG_STYLE_LIST, !"Оплата налога", str_1, !"Выбор", !"Отмена");
				else SendBotMessage(playerid, !"На данный момент, вам не надо платить налог за бизнес!");*/
			}
			else if(listitem == DListitem[playerid]{15})
			{
			    if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
			    new bizs;
			    str_1 = "";
			    for(new i; i < OWNABLEBIZES;i++)
				{
					if(GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid)))
					{
						if(BizInfo[i][bNalog] > 0)
						{
						    player_Global_Int[playerid][bizs] = i;
						    f(str_1, sizeof(str_1), "%s{FFFFFF}%s {E5AB2E}(%d){FFFFFF} Налог: {D44F23}%d$\n", str_1, InfoBusinesses[BizInfo[i][bState]][BName], i, BizInfo[i][bNalog]);
						    bizs ++;
						}
					}
				}
				if(strlen(str_1) > 0) SPD(playerid, 9762, DIALOG_STYLE_LIST, !"Оплата налога", str_1, !"Выбор", !"Отмена");
				else SendBotMessage(playerid, !"На данный момент, вам не надо платить налог за бизнес!");
			}
			else if(listitem == DListitem[playerid]{16})
			{
			    if(!PI[playerid][pMember]) return 0;
			    str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}Введите сумму для пополнение на счет организации {73B461}%s\n\n", global_OrgInfo[GetTeamID(playerid)][g_oName]);
			    SPD(playerid, 118, DIALOG_STYLE_INPUT, !"Пополнение счета организации", str_1, !"Оплатить", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{17})
			{
			    if(!PI[playerid][pTelNum]) return 0;
			    SPD(playerid, 119, DIALOG_STYLE_INPUT, !"Пополнить баланс", !"\n\n{FFFFFF}Введите сумму для пополнение на баланс своего телефона\n\n", !"Оплатить", !"Отмена");
			}
		}
		case 3722:
		{
  			if(!response) return 1;
			extract inputtextsave -> new count; else return 1;
     		if(count < 0 || count > 10000) return 1;
		    if(count*GLS[33] > PI[playerid][pMoney]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
            if(count > GLS[34]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У штата недостаточно EURO");
			GiveMoney(playerid,-count*GLS[33], "купил евро в банке");
			GLS[34] -= count;
			InvAdd(playerid, 809, count);
			UpdateDataConfig("bankeuro",GLS[34]);
		}
		case 3723:
		{
	  		if(!response) return 1;
			extract inputtextsave -> new count; else return 1;
     		if(count < 0 || count > 10000) return 1;
		    if(count > GetInvCount(playerid, 809)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно EURO");
			GiveMoney(playerid,count*GLS[33]-floatround((count/700*1000)+count), "продал евро банку");
			InvAdd(playerid, 809, -count);
			GLS[34] += count;
   			UpdateDataConfig("bankeuro",GLS[34]);
		}
		case 55:
		{
		    if(!response)
		        return ShowBankMenu(playerid);
			if(!strlen(inputtextsave))
			    return SPD(playerid, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n", !"Далее", !"Отмена");
		    if(PI[playerid][pDeposit] > 100000000 && FamilyInfo[pFamilyID(playerid)][famBankOffer] == 0)
		        return SendBotMessage(playerid, !"На вашем депозитном счету, больше 100 миллионов,\n положить больше нельзя, дабы снять это ограничение вам нужно состоять в семье\nимеющийю улучшение 'Банковские махинации'");

			if(PI[playerid][pDeposit] >= 500000000)
		        return SendBotMessage(playerid, !"На вашем депозитном счету, 500 миллионов,\nположить больше нельзя!");
			new
			    money = strval(inputtextsave);
			if(money >= 1 && PI[playerid][pMoney] >= money && money <= 5000000)
			{
				PI[playerid][pDeposit] += money;
				UpdatePlayerDataInt(playerid, "Deposit", PI[playerid][pDeposit]);
				GiveMoney(playerid, -money, "положил на свой депозит");
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Вы положили на свой депозитный счет $%i", money);
				SendBotMessage(playerid, str_1);
				PI[playerid][pDepositChar2] = 1;
				UpdatePlayerDataInt(playerid, "DepositChar2", PI[playerid][pDepositChar2]);
				PI[playerid][pDepositChar] = 5;
				UpdatePlayerDataInt(playerid, "DepositChar", PI[playerid][pDepositChar]);
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
			else
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\nУважаемый! Пытайтесь ввести все символы правильно!\nМинимальная сумма для пополнения {EE772D}10 000$\n{FFFFFF}Максимальная сумма для пополнения {EE772D}5 000 000$\n\n", !"Понял", !"");
		}
		case 57:
		{
		    if(!response) return ShowBankMenu(playerid);
			if(!strlen(inputtextsave)) return SPD(playerid, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
			new money = strval(inputtextsave);
			if(money >= 1 && PI[playerid][pMoney] >= money && money <= 5000000 && PI[playerid][pDeposit] >= money)
			{
				PI[playerid][pDeposit] -= money;
				UpdatePlayerDataInt(playerid, "Deposit", PI[playerid][pDeposit]);
				GiveMoney(playerid, money, "снял с депозита");
                str_1[0] = EOS, f(str_1, sizeof(str_1), "Вы сняли со своего депозитного счета $%i", money);
				SendBotMessage(playerid, str_1);
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
			else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\nУважаемый! Пытайтесь ввести все символы правильно!\nМинимальная сумма для снятия {EE772D}10 000$\n\n", !"Понял", !"");
		}
		case 34:
		{
		    if(!response) return ShowBankMenu(playerid);
		    if(!strlen(inputtextsave)) return SPD(playerid, 34, DIALOG_STYLE_INPUT, !"Введите сумму", !"Введите сумму для пополнения", !"Далее", !"Отмена");
	        new	money = strval(inputtextsave);
	        if((PI[playerid][pBank][0] + money) > 40000000 && PI[playerid][pVIP][0] < 5) return SendBotMessage(playerid, !"Приносим извинения, но в нашем банке ячейки не позволяют\nзапихнуть в них больше 40 миллионов!\nДля того чтобы получить 2-ой ящик, покупайте Titan VIP!");
	        if(money >= 1 && PI[playerid][pMoney] >= money)
	        {
	            PI[playerid][pBank][0] += money;
	            if(PI[playerid][pBank][0] < 0) PI[playerid][pBank][0] = 2000000000;
	            SavePlayer(playerid,7);
	            GiveMoney(playerid, -money, "положил на свой банковский счет");
	            //aml(40, playerid, "получил деньги в банк", "Положил на свой банквский счет", money);
	         	////aml(61, playerid, PN(playerid), "положил на банковский счет");
	            SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы положили на свой банковский счет $%i", money);
	            SendBankBot(playerid);
	        }
	        else SendBotMessage(playerid, !"Уважаемый! Пытайтесь ввести все символы правильно!");
			return 1;
		}
		case 35:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return SPD(playerid,35,1,"Введите сумму","Введите сумму для снятия","Далее","Отмена");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PI[playerid][pBank][0] >= money)
		        {
		            if(!IsAtBankomat(playerid,10.0))
		            {
			            PI[playerid][pBank][0] -= money;
			            GiveMoney(playerid,money, "снял с своего банковского счета");
			            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы сняли со своего банковского счета $%i",money);
			            SCM(playerid,COLOR_VALIK,str_1);
					}
					else
					{
					    new moni = money/100;
					    PI[playerid][pBank][0] -= money;
			            GiveMoney(playerid,(money-moni), "снял с своего банковского счета");
			            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы сняли со своего банковского счета $%i",money);
			            SCM(playerid,COLOR_VALIK,str_1);
			            SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы потеряли 1 процент от снятых денег за использование банкомата.");

					}
					//aml(40, playerid, "потерял деньги с банка", "снял с банковского счета", money);
					SavePlayer(playerid,7);
                    SendBankBot(playerid);
		        }
		        else SendBotMessage(playerid,!"Уважаемый! Пытайтесь ввести все символы правильно!");
			}
			else ShowBankMenu(playerid);
			return 1;
		}
		case 2235:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return SPD(playerid, 2235, DIALOG_STYLE_INPUT, !"Введите сумму", "{FFFFFF}Введите сумму для снятия\nКомиссия на снятие: {FF8349}2{FFFFFF} процента", "Далее", "Отмена");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PI[playerid][pBank][1] >= money)
		        {
				    new moni = money/100;
				    PI[playerid][pBank][1] -= money;
				    SavePlayer(playerid,7);
		            GiveMoney(playerid,(money-moni), "снял с своего банковского счета");
		            SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы сняли со своего личного банковского счета $%i",money);
		            SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы потеряли 1 процент от снятых денег за использование банкомата.");
                    SendBankBot(playerid);
					SavePlayer(playerid,7);
		        }
		        else SendBotMessage(playerid,!"Уважаемый! Пытайтесь ввести все символы правильно!");
			}
			else ShowBankMenu(playerid);
			return 1;
		}
		case 2234:
		{
		    if(!response) return ShowBankMenu(playerid);
		    if(!strlen(inputtextsave)) return SPD(playerid, 2234, DIALOG_STYLE_INPUT, !"Введите сумму", "\n\n{FFFFFF}Введите сумму для пополнения\n\n", "Далее", "Отмена");
	        new	money = strval(inputtextsave);
	        if((PI[playerid][pBank][1] + money) > 40000000 && PI[playerid][pVIP][0] < 5) return SendBotMessage(playerid, !"Приносим извинения, но в нашем банке ячейки не позволяют\nзапихнуть в них больше 40 миллионов!\nДля того чтобы получить 2-ой ящик, покупайте Titan VIP!");
	        if(money >= 1 && PI[playerid][pMoney] >= money)
	        {
	            PI[playerid][pBank][1] += money;
	            if(PI[playerid][pBank][1] < 0) PI[playerid][pBank][1] = 2000000000;
	            SavePlayer(playerid,7);
	            GiveMoney(playerid, -money, "положил на свой банковский счет");
	            SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы положили на свой банковский счет $%i", money);
	            SendBankBot(playerid);
				SavePlayer(playerid,7);
	        }
	        else SendBotMessage(playerid, !"Уважаемый! Пытайтесь ввести все символы правильно!");
			return 1;
		}
		case 37:
		{
		    if(!response)
		        return ShowBankMenu(playerid);

	        if(!strlen(inputtextsave))
				return SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"{FFFFFF}Введите ID игрока которому хотите перевести деньги", !"Выбор", !"Отмена");
	        sscanf(inputtextsave, "u", TransferPlayer[playerid]);
	        if(PI[TransferPlayer[playerid]][pLevel] < 2)
	            return SendBotMessage(playerid, !"Переводить деньги, можно игрокам старше 1-го уровня!");

	        if(IsPlayerConnectEx(TransferPlayer[playerid]))
	        {
		        str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s", PN(TransferPlayer[playerid]));
		        SPD(playerid, 41, DIALOG_STYLE_INPUT, !"Введите сумму", str_1, !"Готово", !"Отмена");
	        }
	        else
			{
				SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот игрок не в сети");
				ShowBankMenu(playerid);
			}
		    return 1;
		}
	 	case 39:
	    {
	    	if(response)
	    	{
	    		new Number = PI[playerid][pMember];
				if(strval(inputtextsave) >= 1 && OrgInfo[Number][oBank] >= strval(inputtextsave))
				{
	    			OrgInfo[Number][oBank] -= strval(inputtextsave);
	    			GiveMoney(playerid,strval(inputtextsave), "снял с счета организации");
	    			str_1[0] = EOS, f(str_1, sizeof(str_1), "Вы сняли $%i со счёта вашей организации.Теперь на счету вашей организации $%i",strval(inputtextsave),OrgInfo[Number][oBank]);
	   				SPD(playerid,0,0,!"Банк",str_1,"ОК","");
	   				str_1[0] = EOS, f(str_1, sizeof(str_1),"{ECB534}%s снял с организации %i$",PN(playerid),strval(inputtextsave));
	   				STM(PI[playerid][pMember],-1,str_1);
	    			SaveOrg(Number);
	    			SendBankBot(playerid);
	    		}
			    else
			    {
			    	SendBotMessage(playerid,!"Извините, но на счету вашей организации нет столько денег!");
			    	return 1;
			    }
			}
			else ShowBankMenu(playerid);
			return 1;
		}
		case 41:
		{
		    if(!response)
		        return SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"{FFFFFF}Введите ID игрока которому хотите перевести деньги", !"Выбор", !"Отмена");

	        new
				id = TransferPlayer[playerid],
	            money = strval(inputtextsave);
	        if(!strlen(inputtextsave))
			{
	        	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s", PN(TransferPlayer[playerid]));
	        	SPD(playerid, 41, DIALOG_STYLE_INPUT, !"Введите сумму", str_1, !"Готово", !"Отмена");
	        	return 1;
	        }
	        if(id == playerid)
				return 0;

	        if(money >= 1 && PI[playerid][pBank][0] >= money)
	        {
                if((PI[id][pBank]+money) > 40000000 && PI[playerid][pVIP][0] < 5) return SendBotMessage(playerid, !"Приносим извинения, вместе с вашим переводом у этого человека получится\nбольше 40-ка миллионов, которые мы не можем поместить в его ячейку!");
	            PI[playerid][pBank][0] -= money;
	            SavePlayer(playerid,7);
	            PI[id][pBank][0] += money;
	            SavePlayer(id,7);
	            if(money > 3000)
	            {
	            	foreach_player(i)
	            	{
						if(!PI[i][pAdmin]) continue;
	            		if(ShowIP[i]) SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] перевел игроку %s[%i] на счет $%i [$%i]", PN(playerid), playerid, PN(id), id, money, PI[id][pBank][0]);
	            		else SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] [IP: %s] перевел игроку %s[%i] [IP: %s] на счет $%i [$%i]", PN(playerid), playerid, PlayerIP(playerid), PN(id), id, PlayerIP(id), money, PI[id][pBank][0]);
	            		break;
					}
	            }
				SCMf(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы перевели $%i игроку %s(%i) на счет", money, PN(id), id);
		        SCMf(id, COLOR_YELLOW, "Вам поступил перевод на ваш счет в размере $%i от жителя %s(%i)", money, PN(playerid), playerid);
		        SendBankBot(playerid);
		        f(str_1, sizeof(str_1), "перевел %i money игроку", money);
                //aml(15, playerid, PN(id), str_1);
	        }
	        else SendBotMessage(playerid, !"Уважаемый! Пытайтесь ввести все символы правильно!");
			return 1;
		}
		case 3920:
		{
		    if(response)
			{
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"{D38A37}- EasterBoard Farm. Часть 2{FFFFFF}\n\nВ чем же отличие между работами и должностями на ферме, или зачем вобще нужна ферма?\nБлагодаря нашей ферме, развозчики продуктов могут поставлять товары на склады городов.\nОтличие работ, в их перспективности, интересе работы, а также прибылью.\nПо скольку в нашем штате не так много пилотов, то работа водителя кукурузника на данный момент, самая прибыльная, перед ней идет комбайнер, а там уже и тракторист.");
       			SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
			}
		}
		case 7971:
		{
			if(!response) return 1;
			new i = player_Global_Int[playerid][100+listitem];
			player_Global_Int[playerid][99] = i;
			switch(player_Global_Int[playerid][listitem])
			{
				case -1:
				{
					//инфа о квесте
					ShowQuestInfo(playerid, i, 7972, "{FFFFFF}Вы действительно хотите принять квест?", "", !"Принять", !"Отмена");
				}
				case 0: SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте /quest!");
				case 1:
				{
					//начал квест(закончил)
					SendBotMessage(playerid,!"Молодец, ты очень быстро справился.");
					player_Quest[playerid][qStatus][i] = 2;
					if(player_QuestSave{playerid} == 0) player_QuestSave{playerid} = 5;
					for(new j; j < 2; j++) InvAdd(playerid, global_Quest[i][qPresentItem][j], global_Quest[i][qPresentItemCount][j]);
				}
				case 2: SendBotMessage(playerid, !"Вы уже выполняли у меня это задание!");
			}
		}
		case 7972:
		{
			if(!response) return 1;
			new i = player_Global_Int[playerid][99];
			if(i != 0)
			{
				if((player_BonusMinute[playerid]/60) < i) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Для продолжения выполнения квестовой линии, у вас должно быть %i+ часов ( у вас %i часов )", i, (player_BonusMinute[playerid]/60));
				if(player_Quest[playerid][qStatus][i-1] != 2) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Квестовую линию можно выполнять только по ПОРЯДКУ!");
				if(i > 3) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Этот квест будет доступен после 10:00, 16 января 2023 года!");
			}
			EnableGPSForPlayer(playerid, global_Quest[i][qGPS][0], global_Quest[i][qGPS][1], global_Quest[i][qGPS][2]);
			player_Quest[playerid][qStatus][i] = 1;
			player_Quest[playerid][qProgress][i] = 0;
			SendBotMessage(playerid,!"Хорошо что взялся, жду выполнения!\nИспользуй /quest чтобы посмотреть принятые задания.");
			UpdatePlayerQuest(playerid, i);
		}
        case 1449:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: SendBotMessage(playerid,!"Я приехал из другого города искать работу, и тут наткнулся на это.\nПостараюсь проработать тут все лето, а дальше посмотрим.\nЕсли что, я занимаюсь обменом подарков на шкатулки, так что подходи. {FFFEFE}*Улыбается*");
        			case 1:
					{
						SendBotMessage(playerid,(str_f("\
							Гражданские талоны можно получить каждый PAYDAY,\n\
							но с условием что вы будете играть через ЛАУНЧЕР %s %s\n\
							Скачать его можно на сайте: %s", ServerCFG[server_name], ServerCFG[server_logo], ServerCFG[server_site])));
					}
					case 2: SendBotMessage(playerid,!"Для обмена необходимо 200 подарков,\nкоторые можно найти по всему штату. Собственно они\nпоявляются раз в 60 минут, так что найти их будет не просто!\n");
        			case 3: SendBotMessage(playerid,!"В штате стали возникать проблемы с экономикой, вот и какой-то засранец\nрешил побаловаться, дав вам шанс подзаработать.");
					case 4:
					{
					    if(GetInvCount(playerid, 316) < 200) return SendBotMessage(playerid,!"Дружище, я обменяю тебе шкатулку, только если ты принесешь 200 подарков!");
						InvAdd(playerid, 316, -200);
					}
				}
			}
		}
		case 1339:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: SendBotMessage(playerid,!"Приехал я с другого города на заработки, вот и жду тут автобус.\nКстати, где-то сейчас он должен подьехать, если лень ждать, там велики на прокат стоят!");
        			case 1: SendBotMessage(playerid,!"Говорили тут на ферме можно подзаработать, а можно и карьеру сделать,\nдумаю первое время там, а потом на права, паспорт и тому подобное.");
        			case 2: SendBotMessage(playerid,!"По-моему тебе должны были выдать GPS, вот его и советую использовать,\nСчитай благодаря ему тут только можно освоиться.");
        			case 3: SendBotMessage(playerid,!"Даа не беда, в Аризоне тут проблем нет, в мэрии можно получить его бесплатно\nно учти, что во второй раз тебе его выдавать не будут,\nполиция может задержать и бог знает что будет!");
        			case 4: SendBotMessage(playerid,!"Я вот когда получал сдал со 2 раза, чтобы сдать на права не надо платить.\nСоветую подготовить теорию, она там играет важную роль!");
        			case 5: SendBotMessage(playerid,!"По всему штату куча отелей, я например с 1-го дня поселился.\nИ недорого, знаешь, всего лишь 5 000 и все.");
        			case 6: SendBotMessage(playerid,!"Нуу даже не знаю, тут много где его можно купить, например\nчерез дорогу есть магазин, но не думаю что у тебя хватит денег на его покупку.");
        			case 7: SendBotMessage(playerid,!"Тут какой то бизнесмен завелся, всех приезжих бесплатно кормит.\nА что ты спрашиваешь, разве это плохо?");
        			case 8: SendBotMessage(playerid,!"Думаю в больничке, если сейчас там есть доктора.\nКстати, тебе мед.карта понадобится при поступлении в армию.");
				}
			}
		}
		case 133:
		{
			if(!response)
				return 1;

			switch(listitem)
			{
		        case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		        case 4: J_ApplyAnimation(playerid, !"DANCING", !"DAN_Left_A", 4.1, 1, 0, 0, 0, 0, 0);
		        case 5: J_ApplyAnimation(playerid, !"DANCING", !"dnce_M_a", 4.1, 1,0, 0, 0, 0, 0);
		        case 6: J_ApplyAnimation(playerid, !"ON_LOOKERS", !"wave_loop", 4.1, 1, 1, 1, 0, 0);
		        case 7: J_ApplyAnimation(playerid, !"BEACH", !"bather", 4.0, 1, 0, 0, 0, 0);
		        case 8: J_ApplyAnimation(playerid, "PED", "endchat_03", 4.1, 1, 0, 0, 0, 0, 0);
		        case 9: J_ApplyAnimation(playerid, !"benchpress", !"gym_bp_celebrate", 4.0, 0, 0, 0, 0, 0);
				case 10: J_ApplyAnimation(playerid, "PED", "COWER", 4.1, 0, 0, 0, 0, 0, 1);
				case 11: J_ApplyAnimation(playerid, !"SHOP", !"ROB_SHIFTY", 4.1, 0, 0, 0, 0, 0, 1);
				case 12: J_ApplyAnimation(playerid, !"SHOP", !"ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0, 1);
				case 13: J_ApplyAnimation(playerid, !"COP_AMBIENT", !"Coplook_loop", 4.0, 0, 1, 1, 1, -1);
				case 14: J_ApplyAnimation(playerid, !"FOOD", !"EAT_VOMIT_P", 4.1, 0, 0, 0, 0, 0, 1);
				case 15: J_ApplyAnimation(playerid, !"FOOD", !"EAT_BURGER", 4.1, 0, 0, 0, 0, 0, 1);
				case 16: J_ApplyAnimation(playerid, !"DEALER", !"DEALER_DEAL", 4.1, 0, 0, 0, 0, 0, 1);
				case 17: J_ApplyAnimation(playerid, !"CRACK", !"CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
				case 18: J_ApplyAnimation(playerid, !"LOWRIDER", !"M_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 19: J_ApplyAnimation(playerid, !"LOWRIDER", !"F_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 20: J_ApplyAnimation(playerid, !"BEACH", !"ParkSit_M_loop", 4.0, 0, 0, 0, 1, 1, 1);
				case 21: J_ApplyAnimation(playerid, !"PARK", !"Tai_Chi_Loop",4.0,1,0,0,0,0,1);
				case 22: J_ApplyAnimation(playerid, !"BAR", !"dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
				case 23: J_ApplyAnimation(playerid, !"DANCING", !"DAN_RIGHT_A", 4.1, 0, 0, 0, 0, 0, 1);
				case 24: J_ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_DEF_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 25: J_ApplyAnimation(playerid, !"MISC", !"PLYR_SHKHEAD", 4.1, 0, 0, 0, 0, 0, 1);
				case 26: J_ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 27: J_ApplyAnimation(playerid, !"CAMERA", !"camstnd_cmon", 4.0, 0, 0, 0, 0, 0);
				case 28: J_ApplyAnimation(playerid, !"SHOP", !"SHP_ROB_HANDSUP", 4.1, 0, 0, 0, 0, 0, 1);
				case 29: J_ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE2", 4.1, 0, 0, 0, 0, 0, 1);
				case 30: J_ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE4", 4.1, 0, 0, 0, 0, 0, 1);
				case 31: J_ApplyAnimation(playerid, !"DEALER", !"DEALER_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 32: J_ApplyAnimation(playerid, !"GANGS", !"LEANIDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 33: J_ApplyAnimation(playerid, !"GANGS", !"SHAKE_CARSH", 4.1, 0, 0, 0, 0, 0, 1);
				case 34: J_ApplyAnimation(playerid, !"GANGS", !"SMKCIG_PRTL", 4.1, 0, 0, 0, 0, 0, 1);
				case 35: J_ApplyAnimation(playerid, !"BEACH", !"ParkSit_W_loop", 3.0, 0, 1, 1, 1, 0);
				case 36: J_ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 37: J_ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_BORED_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 38: J_ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_IDLE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 39: J_ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_TYPE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 40: J_ApplyAnimation(playerid, !"INT_SHOP", !"SHOP_SHELF", 4.1, 0, 0, 0, 0, 0, 1);
				case 41: J_ApplyAnimation(playerid, !"JST_BUISNESS", !"girl_02", 4.1, 0, 0, 0, 1, 1, 1);
				case 42: J_ApplyAnimation(playerid, !"KISSING", !"GF_STREETARGUE_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 43: J_ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
				case 44: J_ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
				case 45: J_ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_02", 4.0, 0, 0, 0, 0, 0, 1);
				case 46: J_ApplyAnimation(playerid, !"LOWRIDER", !"RAP_B_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 47: J_ApplyAnimation(playerid, !"MEDIC", !"CPR", 4.0, 0, 0, 0, 0, 0);
				case 48: J_ApplyAnimation(playerid, !"MISC", !"BITCHSLAP", 4.1, 0, 0, 0, 0, 0, 1);
				case 49: J_ApplyAnimation(playerid, !"MISC", !"BNG_WNDW", 4.1, 0, 0, 0, 0, 0, 1);
				case 50: J_ApplyAnimation(playerid, !"MISC", !"KAT_THROW_K", 4.1, 0, 0, 0, 0, 0, 1);
				case 51: J_ApplyAnimation(playerid, !"MISC", !"SEAT_LR", 4.1, 0, 0, 0, 0, 0, 1);
				case 52: J_ApplyAnimation(playerid, "PED", "SEAT_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 53: J_ApplyAnimation(playerid, !"ON_LOOKERS", !"LKUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 54: J_ApplyAnimation(playerid, !"ON_LOOKERS", !"POINTUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 55: J_ApplyAnimation(playerid, !"ON_LOOKERS", !"PANIC_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 56: J_ApplyAnimation(playerid, !"ON_LOOKERS", !"SHOUT_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 57: J_ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 1, 1);
				case 58: J_ApplyAnimation(playerid, "PED", "IDLE_taxi", 4.0, 0, 0, 0, 0, 0);
				case 59: J_ApplyAnimation(playerid, !"POLICE", !"DOOR_KICK", 4.1, 0, 0, 0, 0, 0, 1);
				case 60: J_ApplyAnimation(playerid, !"POLICE", !"COPTRAF_STOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 61: J_ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY_B", 4.1, 0, 0, 0, 0, 0, 1);
				case 62: J_ApplyAnimation(playerid, !"LOWRIDER", !"RAP_C_Loop", 4.0, 1, 0, 0, 0, 0);
				case 63: J_ApplyAnimation(playerid, !"SWAT", !"GNSTWALL_INJURD", 4.1, 0, 0, 0, 0, 0, 1);
				case 64: J_ApplyAnimation(playerid, !"SWEET", !"SWEET_INJUREDLOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 65: J_ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY", 4.0, 0, 0, 0, 0, 0);
				case 66: J_ApplyAnimation(playerid, !"GHANDS", !"GSIGN2", 4.1, 0, 0, 0, 0, 0, 1);
				case 67: J_ApplyAnimation(playerid, !"GHANDS", !"GSIGN4", 4.1, 0, 0, 0, 0, 0, 1);
				case 68: J_ApplyAnimation(playerid, !"GHANDS", !"GSIGN5", 4.1, 0, 0, 0, 0, 0, 1);
				case 69: J_ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE1", 4.1, 0, 0, 0, 0, 0, 1);
				case 70: J_ApplyAnimation(playerid, !"SPRAYCAN", !"spraycan_full", 4.0, 0, 0, 0, 0, 0);
				case 71: J_ApplyAnimation(playerid, !"GRAFFITI", !"SPRAYCAN_FIRE", 4.1, 0, 0, 0, 0, 0, 1);
				case 72: J_ApplyAnimation(playerid, !"SMOKING", !"M_SMKSTND_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 73: J_ApplyAnimation(playerid, !"RIOT", !"RIOT_CHANT", 4.1, 0, 0, 0, 0, 0, 1);
				case 74: J_ApplyAnimation(playerid, !"RIOT", !"RIOT_PUNCHES", 4.1, 0, 0, 0, 0, 0, 1);
				case 75: J_ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0, 1);
				case 76: J_ApplyAnimation(playerid, !"LOWRIDER", !"RAP_A_Loop", 4.0, 1, 0, 0, 0, 0);
				case 77: J_ApplyAnimation(playerid, !"CAR", !"FIXN_CAR_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 78: J_ApplyAnimation(playerid, !"CAR_CHAT", !"CAR_TALKM_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 79: J_ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_01", 4.1, 0, 0, 0, 0, 0, 1);
				case 80: J_ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 81: J_ApplyAnimation(playerid, !"GHANDS", !"GSIGN1", 4.0, 0, 0, 0, 0, 1, 1);
				case 82: J_ApplyAnimation(playerid, !"GHANDS", !"GSIGN3", 4.0, 0, 0, 0, 0, 1, 1);
				case 83: J_ApplyAnimation(playerid, !"GRAVEYARD", !"mrnF_loop", 4.1, 0, 1, 1, 0, 0);
				case 84: J_ApplyAnimation(playerid, !"MISC", !"scratchballs_01", 4.0, 0, 0, 0, 0, 0);
				case 85: J_ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_In", 4.1, 0, 0, 0, 1, 1, 1);
				case 86: J_ApplyAnimation(playerid, !"SUNBATHE", !"Lay_Bac_in", 3.0, 0, 1, 1, 1, 0);
				case 87: J_ApplyAnimation(playerid, !"BEACH", !"SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0);
				case 88: J_ApplyAnimation(playerid, "PED", "DLE_armed", 4.1, 0, 1, 1, 1, 1, 1);
				case 89: J_ApplyAnimation(playerid, "PED", "Gun_stand", 4.1, 0, 1, 1, 1, 1, 1);
				case 90: J_ApplyAnimation(playerid, !"KISSING", !"gfwave2", 4.1, 0, 1, 1, 0, 0);
				case 91: J_ApplyAnimation(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 1, 1);
				case 92: J_ApplyAnimation(playerid, "PED", "BIKE_pickupL", 4.1, 0, 0, 0, 0, 0, 1);
				case 93: J_ApplyAnimation(playerid, !"GANGS", !"hndshkaa", 4.0, 0, 0, 0, 0, 0, 1);
				case 94: J_ApplyAnimation(playerid, !"GANGS", !"hndshkfa", 4.0, 0, 0, 0, 0, 0, 1);
				case 95: J_ApplyAnimation(playerid, !"GANGS", !"hndshkfa_swt", 4.0, 0, 0, 0, 0, 0, 1);
				case 96: J_ApplyAnimation(playerid, !"GANGS", !"shake_carK", 4.0, 0, 0, 0, 0, 0);
				case 97: J_ApplyAnimation(playerid, !"GANGS", !"shake_cara", 4.0, 0, 0, 0, 0, 0);
				case 98: J_ApplyAnimation(playerid, "PED", "KO_shot_stom", 4.0, 0, 1, 1, 1, 0);
				case 99: J_ApplyAnimation(playerid, "PED", "EV_DIVE", 4.0, 0, 1, 1, 1, 0);
				case 100: J_ApplyAnimation(playerid, "PED", "BIKE_fallR", 4.0, 0, 1, 1, 1, 0);
				case 101: J_ApplyAnimation(playerid, !"GYMNASIUM", !"GYMshadowbox", 4.0, 1, 1, 1, 1, 0);
				case 102: J_ApplyAnimation(playerid, "PED", "gang_gunstand", 3.0, 0, 1, 1, 1, 0);
			}
			animan{playerid} = true;
			TextDrawShowForPlayer(playerid, StopAnimation);
		}
		case 10031:
		{
		    if (!response) return 1;
			GLS[34] +=50000;
			SendAdminsMessagef(COLOR_GREEN, "[A] %s(%i) пополнил валюту Euro (+50000 | %i)", PN(playerid), playerid, GLS[34]);
			UpdateDataConfig("bankeuro",GLS[34]);
		}
		case 3724:
		{
			if(!response) return callcmd::or_cancel(playerid);
		    if(PI[playerid][pMoney] < OrelMoney[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У кого-то из вас не хватает денег!");
			str_d[0] = EOS, f(str_d,sizeof(str_d),"Началась игра Орёл и Решка между %s(%s) и %s(%s).",PN(playerid),StatusMoneta[playerid],PN(OrelName[playerid]),StatusMoneta[OrelName[playerid]]);
			ProxDetector(25,playerid,str_d,COLOR_DOCHAT);
			str_d[0] = EOS, f(str_d,sizeof(str_d),"%s подкинул(а) монетку..",PN(playerid));
			ProxDetector(25,playerid,str_d,COLOR_ME);
            SetTimerEx("OrelTimer",2000, 0, "d", playerid);//OrelAndReshkaWin
		}
		case 10030:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: UpdateTreasure(true),SCMAll(COLOR_VALIK, !"[Информация] {FFFFFF}Где то, недалеко от вас появились новые клады!");
					case 1: SPD(playerid, 1014, DIALOG_STYLE_TABLIST, "{cccccc}Амнистия", "{7B68EE}1. {FFFFFF}Массовый разбан\n{7B68EE}2. {FFFFFF}Массовый размут\n{7B68EE}3. {FFFFFF}Массовый выпуск с деморгана", "Выбрать", "Отмена");
					case 2:{
	    				f(str_1, sizeof(str_1), "{ffffff}Кол-во {FF6347}%i {FFFFFF}| Цена {008000}%i$", GLS[34], GLS[33]);
						SPD(playerid, 10031, DIALOG_STYLE_LIST, str_1, "{B03131}[1]{FFFFFF} Пополнить Euro", "Выбрать", "Закрыть");
					}case 3: SPD(playerid, 8759, DIALOG_STYLE_LIST, !"{FFD700}Вкладка основателя", !"{cccccc}- {FFFFFF}Множитель PAYDAY\n{cccccc}- {FFFFFF}Множитель DONATE\n{cccccc}- {FFFFFF}Множитель фин. статы бизнеса\n{cccccc}- {FFFFFF}Вайп", !"Вызов", !"Отмена");
					case 4:{
						hostname_all = !hostname_all;
						if(!hostname_all)
						{
						    SendRconCommand("loadfs hostname");
							SendAdminsMessagef(COLOR_GREY, "[A] %s включил Auto HostName.",PN(playerid));
						}
						else
						{
						    SendRconCommand("unloadfs hostname");
							SendAdminsMessagef(COLOR_GREY, "[A] %s выключил Auto HostName.",PN(playerid));
						}
					}
					case 5: SPD(playerid, 8756, DIALOG_STYLE_INPUT, !"{FFD700}Уведомление при входе", !"{808080}- {FFFFFF}Введите ваше уведомление:{808080}(Чтобы удалить впишите 'NONE')", !"Вызов", !"Отмена");
					case 6:
					{
						SCM(playerid, -1, "++");
						global_GetTimeIsFinal = unixtime(10);
						UpdateDataConfig("global_GetTimeIsFinal",global_GetTimeIsFinal);
					}
				}
			}
		}
		case 8756:
		{
			if(strlen(inputtext) > 50) return SPD(playerid, 8756, DIALOG_STYLE_INPUT, !"{FFD700}Уведомление при входе", !"{808080}- {FFFFFF}Введите ваше уведомление:{808080}(Чтобы удалить впишите 'NONE')", !"Вызов", !"Отмена");
			SetString(WSCM, inputtext);
	    	SendAdminsMessagef(COLOR_GREY, "[A] %s[%d] изменил сообщение при входе на %s", PN(playerid), playerid, inputtext);
		}
		case 8759:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0: SPD(playerid, 8755, DIALOG_STYLE_INPUT, !"{FFD700}PAYDAY", !"{808080}- {FFFFFF}Введите количество активаций PAYDAY:", !"Вызов", !"Отмена");
			        case 1: SPD(playerid, 8758, DIALOG_STYLE_INPUT, !"{FFD700}DONATE", !"{808080}- {FFFFFF}Введите количество множителя DONATE:", !"Вызов", !"Отмена");
					case 2: SPD(playerid, 8766, DIALOG_STYLE_INPUT, !"{FFD700}FINKA", !"{808080}- {FFFFFF}Введите количество множителя FINKA:", !"Вызов", !"Отмена");
			        case 3:
					{
						new amount[2];
    					for(new bizid; bizid < OWNABLEBIZES; bizid++) if(GetString(BizInfo[bizid][bOwner], "wipeHouse")) SellBiz(bizid), amount[0]++;
						for(new houseid; houseid < OWNABLEHOUSES; houseid++) if(GetString(HouseInfo[houseid][hOwner], "wipeHouse")) SellHouse(houseid), amount[1]++;
                        SendAdminsMessagef(COLOR_GREY, "[A] %s[%d] вайпнул бизнесов: %i и домов: %i", PN(playerid), playerid, amount[0],amount[1]);
					}
				}
			}
		}
  		case 8755:
		{
			extract inputtextsave -> new count; else return 1;
			if(count < 1 || count > 100) return SPD(playerid, 8755, DIALOG_STYLE_INPUT, !"{FFD700}PAYDAY", !"{808080}- {FFFFFF}Введите количество активаций PAYDAY:", !"Вызов", !"Отмена");
			GLS[29] = count;
	    	SendAdminsMessagef(COLOR_GREY, "[A] %s[%d] изменил количество активаций payday на %i", PN(playerid), playerid, count);
	    	UpdateDataConfig("XPAYDAY",GLS[29]);
		}
		case 8758:
		{
			extract inputtextsave -> new count; else return 1;
			if(count < 1 || count > 10) return SPD(playerid, 8758, DIALOG_STYLE_INPUT, !"{FFD700}DONATE", !"{808080}- {FFFFFF}Введите умножение доната(Например: 4 это X4 донат):", !"Вызов", !"Отмена");
			adddonate = count;
	    	SendAdminsMessagef(COLOR_GREY, "[A] %s[%d] изменил множитель пополнение счета на X%i", PN(playerid), playerid, count);
	    	UpdateDataConfig("adddonate",adddonate);
		}
		case 8766:
		{
			extract inputtextsave -> new count; else return 1;
			if(count < 1 || count > 10) return SPD(playerid, 8766, DIALOG_STYLE_INPUT, !"{FFD700}FINKA", !"{808080}- {FFFFFF}Введите умножение доната(Например: 4 это X4 финка в бизнесах):", !"Вызов", !"Отмена");
			xFinka = count;
	    	SendAdminsMessagef(COLOR_GREY, "[A] %s[%d] изменил множитель финки X%i", PN(playerid), playerid, count);
	    	UpdateDataConfig("xFinka",xFinka);
		}
		case 440:
		{
		    if(!response) return DeletePVar(playerid, !"ClickGun");
		    new click = GetPVarInt(playerid, !"ClickGun"), amount = strval(inputtext);
            if(amount > PI[playerid][pInvItemAmount][click]) return SCM(playerid, -1, !"У вас нету столько AZ-COINS!");
		    if(strval(inputtext) > 10000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать больше 10000 AZ-COINS");
            if(strval(inputtext) < 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать меньше 1 AZ-COINS");
			InvAdd(playerid, 806, -amount);
		    GiveDonate(playerid, amount);
		    return DeletePVar(playerid, !"ClickGun");
		}
		case 441:
		{
		    if(!response) return DeletePVar(playerid, !"ClickGun");
			new click = GetPVarInt(playerid, !"ClickGun"), gun;
			new item = PI[playerid][pInvItem][click], amount = strval(inputtext);
			if(amount > PI[playerid][pInvItemAmount][click]) return SCM(playerid, -1, !"У вас нету столько патронов!");
			if(strval(inputtext) > 500) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать больше 500 Патронов");
            if(strval(inputtext) < 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать меньше 1 Патронов");
			switch(item)
			{
			    case 1077: gun = 24;
			    case 1078: gun = 23;
			    case 1079: gun = 25;
		        case 1080: gun = 29;
		        case 1081: gun = 30;
		        case 1082: gun = 31;
		        case 1083: gun = 33;
			}
			InvAdd(playerid, item, -amount);
	   	 	GivePlayerWeapon(playerid, gun, amount);
	    	J_ApplyAnimation(playerid, !"RIFLE", "RIFLE_load", 4.1, 0, 0, 0, 0, 0, 0);
			SetPlayerChatBubble(playerid, !"Достал(а) оружие из кармана", COLOR_PURPLE, 10.0, 1500);
			f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы достали из кармана '%s' Количество '%i'", ItemsInfo[item][ItemName], amount);
			SCM(playerid, COLOR_VALIK, str_1);
			DeletePVar(playerid, !"ClickGun");
		}
		case 10002:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0..49:
					{
						if(listitem+311-PlusItems[playerid]-sizeof(ItemsInfo) == 312) return 1;
						InvAdd(playerid, listitem+311-PlusItems[playerid]-sizeof(ItemsInfo), 1);
						ShowItemsInfo(playerid, 1);
					}
					case 50: ShowItemsInfo(playerid, PageItems[playerid]+1, 50);
					case 51:
					{
						if(PageItems[playerid] == 2) ShowItemsInfo(playerid, 1, 0);
						else ShowItemsInfo(playerid, PageItems[playerid]-1, 50);
					}
				}
			}
		}
		case 1000: if(response) UsePhone(playerid, player_Global_Int[playerid][listitem]);
		case 1014:
		{
			if(!response) return 1;
			{
				SetPVarInt(playerid, !"amnesty", listitem+1);
				switch(listitem)
				{
	                case 0:{
						new Cache:result = mysql_query(mysql, !"SELECT * FROM `bannames` WHERE `BanSeconds`");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы уверены, что хотите разбанить {7B68EE}%i человек.",cache_num_rows());
						SPD(playerid,1015,DIALOG_STYLE_MSGBOX,"",str_1,"Разбанить","Отмена");
						cache_delete(result);
	                }case 1:{
					    new Cache:result = mysql_query(mysql, !"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `MuteTime`");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы уверены, что хотите размутить {7B68EE}%i человек.",cache_num_rows());
						SPD(playerid,1015,DIALOG_STYLE_MSGBOX,"",str_1,"Размутить","Отмена");
						cache_delete(result);
					}case 2:{
					    new Cache:result = mysql_query(mysql, !"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `JailTime`");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы уверены, что хотите выпустить из тюрьмы {7B68EE}%i человек.",cache_num_rows());
						SPD(playerid,1015,DIALOG_STYLE_MSGBOX,"",str_1,"Выпустить","Отмена");
						cache_delete(result);
					}
	            }
	        }
		}
		case 1015:
		{
			if(!response) return 1;
			str_1[0] = EOS; static text[5]; text[0] = EOS;
			switch(GetPVarInt(playerid, !"amnesty"))
			{
				case 1:
				{
					mysql_pquery(mysql, !"TRUNCATE TABLE bannames;");
					mysql_pquery(mysql, !"TRUNCATE TABLE banip;");
					text = "Ban";
				}
				case 2:
				{
     				foreach_player(i)
					{
						if(!PI[i][pMuteTime]) continue;
			        	PI[i][pMuteTime] = 0;
					}
					mysql_pquery(mysql, !"UPDATE `"TABLE_ACCOUNTS"` SET `MuteTime` = '0'");
					text = "Mute";
				}
				case 3:
				{
     				foreach_player(i)
					{
						if(!PI[i][pDemorgan]) continue;
				        PI[i][pDemorgan] = 0;
						PlayerSpawn(i),SMD(playerid, "default amnisty");
					}
					mysql_pquery(mysql, !"UPDATE `"TABLE_ACCOUNTS"` SET `Demorgan` = '0'");
					text = "Jail";
				}
			}
			SCMAll(COLOR_ORANGE, (str_f(">>> Владелец %s сделал амнистию \"{FFFFFF}%s\", всех игроков <<<", PN(playerid), text)));
		}
		case 1016: if(response) Scare(playerid, strval(inputtext));
		case 1017: UseBalloon(playerid, strval(inputtext), strval(inputtext));
		case 134:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1285.9365,-1270.2250,13.5939))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже на 1 этаже!");
				        J_SetPlayerPos(playerid,1285.9365,-1270.2250,13.5939);
				    }
				    case 1:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1287.2783,-1261.7417,20.6199))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже на 2 этаже!");
				        J_SetPlayerPos(playerid,1287.2783,-1261.7417,20.6199);
				    }
				    case 2: J_SetPlayerPos(playerid,1289.0641,-1271.5160,13.5400);
				}
			}
		}
		case 56:
		{
			if(response)
			{
			    new tarif;
			    static name[24];
				sscanf(inputtextsave, "p<,>is[30]", tarif, name);
				new carid = GetPlayerVehicleID(playerid);
				if(tarif > 0 && tarif <= 70)
				{
				    if(strlen(name) <= 30)
				    {
						TaxiTarif[playerid] = tarif;
						PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
						TextDrawShowForPlayer(playerid, BoxTaxi1);
			            TextDrawShowForPlayer(playerid, BoxTaxi2);
			            TextDrawShowForPlayer(playerid, Taximonitor);
			            TextDrawShowForPlayer(playerid, TaxiServ);
			            TextDrawShowForPlayer(playerid, TaxiDol);
						str_1[0] = EOS, f(str_1, sizeof(str_1),"\n{B83434}%s\n{FFFFFF}Тариф: %i", name, tarif);
						UpdateDynamic3DTextLabelText(TaxiText[carid], -1, str_1);
					}
					else SPD(playerid,56,1,"Тариф","{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов","Ок","Отмена");
				}
				else SPD(playerid,56,1,"Тариф","{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов","Ок","Отмена");
			}
			return 1;
		}
		case 64:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Часто задаваемые вопросы", (str_f("\
							{FFFFFF}01. Где мне получить паспорт? - Паспорт можно получить в мэрии.\n\
							02. Как мне заработать немного денег? - Вы можете поработать на заводе/ферме/грузчиках.\n\
							03. Где мне найти то или иное место? - /gps.\n04. Как сменить пароль? - /passwd\n\
							05. Как изменить настройки аккаунта? - /mm > Настройки.\n\
							06. На этом сервере выдают деньги, лвл? - Нет, каждый игрок должен начинать с 0.\n\
							07. Какой сайт у сервера? - %s\n08. Как посмотреть список команд сервера? - /help\n\
							09. Как быстро прокачать скилл оружия? - Самый быстрый способ - Тир.\n\
							10. Где найти мэрию? - /gps -> Важные места\n\
							11. Почему нет машин на авторынке? - На сервере единый оборот автомобилей , они там появляются если кто-то не оплатит налог!\n\
							12. Как быстро написать в репорт? - /report\n13. Где получить медкарту? - Ее можно получить , пройдя мед. осмотр у врачей! \n\
							14. Продаются ли на сервере админки? - Нет не продаются! \n\
							{FFE741}15. Как передать игроку что-либо? Как обменяться с игроком? Как продать игроку? -> /trade [id] \n", ServerCFG[server_site])), !"Принять", !"");
					}
			        case 1:
			        {
			            if(CheckPhones(playerid)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Телефон)", !"{FFFFFF}/phone - Управление телефоном\n/sms - Открыть меню СМС", !"Принять", !"");
						else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Телефон)", !"{AFAFAF}У вас нет телефона", !"Принять", !"");
			        }
			        case 2:
			        {
			            switch(PI[playerid][pJob])
			            {
				            case JOB_GUNDEALER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n/quitjob - Уволиться с работы", !"Принять", !"");
				            case JOB_DETECTIVE: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
        			  		case JOB_CARJACKER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/orderlist{FFFFFF} - Найти бизнес для перепродажи продуктов\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            case JOB_MECHANIC: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/gomechanik{FFFFFF} - Принять вызов\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_GUIDE: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_TAXI: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/gotaxi{FFFFFF} - Принять вызов\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/rt{FFFFFF} - Рация для таксистов\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            case JOB_ADVOKAT: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/zeks{FFFFFF} - База заключенных\n{73B461}/free{FFFFFF} - Сократить срок заключенному\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_MINER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_PORTER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_COLLECTOR: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_DRUGDEALER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/selldrugs{FFFFFF} - Продать наркотики\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_TRUCKER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/rt{FFFFFF} - Рация для дальнобойщик\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_PIZZA: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/stopjob{FFFFFF} - Закончить работу ( по желанию )\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_SCRAPER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_NALOG: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/stopjob{FFFFFF} - Закончить работу ( по желанию )\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_MUSOR: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 17: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 18: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 19: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 20: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 21: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            default: SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы нигде не работаете!");
			            }
			        }
            		case 3:
			        {
			            if(GetTeamID(playerid) > 0)
			            {
			                str_1 = "{FFFFFF}";
							if(IsACop(playerid))
							{
							    strcat(str_1,!"{73B461}/su{FFFFFF} - Объявить игрока в розыск\n");
							    strcat(str_1,!"{73B461}/find{FFFFFF} - Найти игрока\n");
							    strcat(str_1,!"{73B461}/clear{FFFFFF} - Очистить розыск игрока\n");
							    strcat(str_1,!"{73B461}/take{FFFFFF} - Отобрать что либо\n");
							    strcat(str_1,!"{73B461}/frisk{FFFFFF} - Обыскать игрока\n");
							    strcat(str_1,!"{73B461}/cuff{FFFFFF} - Надеть/Снять наручиники\n");
							    strcat(str_1,!"{73B461}/putobject{FFFFFF} - Поставить ограждение/предмет\n");
							    strcat(str_1,!"{73B461}/incar{FFFFFF} - Затащить игрока в транспорт\n");
							    strcat(str_1,!"{73B461}/wanted{FFFFFF} - Список разыскиваемых\n");
							    strcat(str_1,!"{73B461}/ticket{FFFFFF} - Выписать штраф\n");
							    strcat(str_1,!"{73B461}/arrest{FFFFFF} - Арестовать преступников\n");
							    strcat(str_1,!"{73B461}/unmask{FFFFFF} - Стянуть маску с игрока\n");
							    strcat(str_1,!"{73B461}/m{FFFFFF} - Мегафон (В транспорте)\n");
							    strcat(str_1,!"{73B461}/strafs{FFFFFF} - Поставить машину на штрафстоянку\n");
							    strcat(str_1,!"{73B461}/tow{FFFFFF} - Прицепить машину (в эвакуаторе)\n");
							    strcat(str_1,!"{73B461}/demoute{FFFFFF} (9-11) [FBI] - Уволить гос.служащего\n");
							    strcat(str_1,!"{73B461}/d{FFFFFF} - Гос. чат\n");
							    strcat(str_1,!"{73B461}/bot{FFFFFF} - Отобрать скрепки\n");
							    strcat(str_1,!"{73B461}/gotome{FFFFFF} - Вести игрока за собой\n");
							}
							if(GetTeamID(playerid) == TEAM_FBI) strcat(str_1,!"{73B461}/scutes{FFFFFF} - Прикрепить жучек на мобильный\n");
							else if(GetTeamID(playerid) == TEAM_MEDICLS || GetTeamID(playerid) ==  TEAM_MEDICLV)
							{
							    strcat(str_1,!"{73B461}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str_1,!"{73B461}/heal{FFFFFF} - Вылечить пациента\n");
							    strcat(str_1,!"{73B461}/recept{FFFFFF} - выдать рецепт на лекарство\n");
							}
							else if(GetTeamID(playerid) == TEAM_MERIALS)
							{
								strcat(str_1,!"{73B461}/demoute{FFFFFF} (9-10) - Уволить гос.служащего\n");
								strcat(str_1,!"{73B461}/ekonom{FFFFFF} - Управление экономикой\n");
							}
							else if(GetTeamID(playerid) == TEAM_MEDICSF)
							{
							    strcat(str_1,!"{73B461}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str_1,!"{73B461}/heal{FFFFFF} - Вылечить пациента\n");
							}
							else if(GetTeamID(playerid) == TEAM_BANK)
							{
								strcat(str_1,!"{73B461}/bankmenu{FFFFFF} - Банковкое меню\n");
								strcat(str_1,!"{73B461}/credit{FFFFFF} - Изменить кредитную ставку\n");
							}
							else if(GetTeamID(playerid) == TEAM_LICENSERS) strcat(str_1,!"{73B461}/givelicense{FFFFFF} - Выдать лицензию\n");
							else if(IsANews(playerid))
							{
								strcat(str_1,!"{73B461}/live{FFFFFF} - Взять интервью у игрока\n");
								strcat(str_1,!"{73B461}/endlive{FFFFFF} - Окончить интервью с игроком\n");
								strcat(str_1,!"{73B461}/news{FFFFFF} - Говорить в чат News\n");
							}
							else if(Isameria(playerid)) if(PI[playerid][pRank] >= 4) strcat(str_1,!"{73B461}/wedding{FFFFFF} - Провести помолвку\n");
							else if(IsAtMafia(playerid))
							{
							    strcat(str_1,!"{73B461}/f{FFFFFF} - Чат семьи\n");
							    strcat(str_1,!"{73B461}/mbiz{FFFFFF} - Бизнесы\n");
							    strcat(str_1,!"{73B461}/minvite{FFFFFF} - Пригласить работать попрошайкой\n");
							    strcat(str_1,!"{73B461}/bizwar{FFFFFF} - Начать войну за Биз.\n");
							    strcat(str_1,!"{73B461}/givebiz{FFFFFF} - Добровольно отдать бизнес.\n");
							    strcat(str_1,!"{73B461}/createbomb{FFFFFF} - Сделать бомбу\n");
							    strcat(str_1,!"{73B461}/bomb{FFFFFF} - Заложить бомбу.\n");
							    strcat(str_1,!"{73B461}/stuff{FFFFFF} - Набить татурировку.\n");
							}
							else if(IsAtGang(playerid))
							{
							    strcat(str_1,!"{73B461}/f{FFFFFF} - Чат семьи\n");
						     	strcat(str_1,!"{73B461}/drug{FFFFFF} - Посадить наркотик\n");
						 		strcat(str_1,!"{73B461}/capture{FFFFFF} - Захватить зону\n");
						 		strcat(str_1,!"{73B461}/sellgun{FFFFFF} - Сделать и продать оружие\n");
						 		strcat(str_1,!"{73B461}/creategun{FFFFFF} - Сделать себе оружие\n");
						 		strcat(str_1,!"{73B461}/sellgangzone{FFFFFF} - Продать территорию\n");
						 		if(PI[playerid][pRank]>=9)
						 		{
						 		    strcat(str_1,!"{73B461}/getmoney{FFFFFF} - Забрать деньги с наркопритона\n");
						 		    strcat(str_1,!"{73B461}/putmoney{FFFFFF} - Положить деньги на баланс наркопритона\n");
						 		    strcat(str_1,!"{73B461}/setdsell{FFFFFF} - Установить стоимость продажи наркотиков\n");
						 		    strcat(str_1,!"{73B461}/setdbuy{FFFFFF} - Установить стоимость продажи наркотиков\n");
						 		}
							}
							if(!IsAtGang(playerid) && !IsAtMafia(playerid)) strcat(str_1,!"{73B461}/r{FFFFFF} - Чат организации\n");
							strcat(str_1,!"{73B461}/opengate{FFFFFF} - Открыть ворота организации\n");
							strcat(str_1,!"{73B461}/invite{FFFFFF} - Принять игрока в организацию\n");
							strcat(str_1,!"{73B461}/uninvite{FFFFFF} - Выгнать игрока из организации\n");
							strcat(str_1,!"{73B461}/giverank{FFFFFF} - Выдать игроку ранг\n");
							strcat(str_1,!"{73B461}/fwarn{FFFFFF} - Дать игроку выговор\n");
							strcat(str_1,!"{73B461}/unfwarn{FFFFFF} - Снять игроку выговор\n");
							strcat(str_1,!"{73B461}/fmute{FFFFFF} - Заглушить игрока\n");
							strcat(str_1,!"{73B461}/funmute{FFFFFF} - Снять мут игроку\n");
			                SPD(playerid,184,0,"Команды (Организация)",str_1,"Принять","");
			            }
			            else SPD(playerid,184,0,"Команды (Организация)","{AFAFAF}Вы не состоите ни в одной из организаций","Принять","");
			        }
			        case 4:
			        {
			            if(GetPlayerHouses(playerid) != -1) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Дом)", !"{73B461}/house{FFFFFF} - Управление домом\n{73B461}/exit{FFFFFF} - Выйти из дома", !"Закрыть", !"");
			            else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Дом)", !"{AFAFAF}У вас нет дома и вы не арендуете дом", !"Принять", !"");
					}
					case 5: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Бизнес)", !"{FFFFFF}{73B461}/bizinfo{FFFFFF} - Управление бизнесом\n{73B461}/showbizinfo{FFFFFF} - Показать прибыль бизнеса\n\n{73B461}/expel{FFFFFF} - Выгнать с помещения (доступно только владельцам баров)\n\n{FFFFFF}Изначально вы можете владеть 2-мя бизнесами, если\nвы хотите стать владельцем и крупным предпринимателем, можете\nприобрести улучшение, которое даст возможность стать владельцем 5-ю бизнесами.\n\n/mm - Действия персонажа - Улучшения - Бизнесмен\n", !"Принять", !"");
					case 6:
			        {
			            if(GetNumberCars(playerid) > 0)
			            {
			            	if(!PI[playerid][pVIP][0]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n", !"Принять", !"");
							else if(PI[playerid][pVIP][0] >= 1) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n", !"Принять", !"");
							else if(PI[playerid][pVIP][0] >= 3) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/fixmycar{FFFFFF} - Зареспавнить транспорт\n", !"Принять", !"");
			            }
			            else SPD(playerid,0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{AFAFAF}У вас нет ни одного личного транспорта", !"Принять", !"");
			        }
			        case 7: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Транспорт)", !"{FFFFFF}{73B461}/engine{FFFFFF} - Завести/Заглушить двигатель\n{73B461}/repcar{FFFFFF} - Починить транспорт набором для починки\n{73B461}/fill{FFFFFF} - Заправить транспорт\n{73B461}/fillcar{FFFFFF} - Заправить транспорт с канистры\n{73B461}/limit{FFFFFF} - Ограничитель скорости\n{73B461}/style{FFFFFF} - Изменить тип езды ( COMFORT/SPORT )\n{73B461}/lights{FFFFFF} - Включить/Выключить фары", !"Принять", !"");
					case 8: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Анимации)", !"{FFFFFF}/anims - Список анимаций", !"Принять", !"");
					case 9: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Чаты)", !"/c - Сказать шепотом\n/ad - Подать объявление\n/s - Кричать\n/b - ООС чат\n/r - Командный чат\n/m - Говорить в мегафон\n/d - Говорить в департамент\n/rb - OOC чат в рации\n/f - Чат мафии/банды\n/fb - OOC чат в чате банды/мафии\n/rt - Рабочая рация (ТАКСИ/Дальнобои)\n/pt - Рабочая рация (ПИЛОТЫ)\n/gov - Объявление на весь сервер!", !"Принять", !"");
			        case 10: callcmd::ahelp(playerid,PI[playerid][pAdmin]);
					case 11: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Похищение)", !"{FFFFFF}{73B461}/tie{FFFFFF} - Связать игрока\n{73B461}/untie{FFFFFF} - Развязать игрока\n{73B461}/bag{FFFFFF} - Надеть мешок на голову\n{73B461}/unbag{FFFFFF} - Снять мешок с головы\n{73B461}/gag{FFFFFF} - Засунуть кляп в рот\n{73B461}/ungag{FFFFFF} - Высунуть кляп изо рта\n{73B461}/lead{FFFFFF} - Принудительно тащить за собой игрока (должен быть связан)\n{73B461}/unlead{FFFFFF} - Перестатить тащить\n{73B461}/incar{FFFFFF} - Засунуть игрока в машину (должен быть связан)\n", !"Принять", !"");
					case 12:
					{
						SetPVarInt(playerid, !"DialogPage", 1);
						SPD(playerid, 18498, DIALOG_STYLE_MSGBOX,  !"[1 страница] Команды (Другое)", !"{FFFFFF}{73B461}/trade{FFFFFF} - Передать/обменять/продать что-либо игроку.\n{73B461}/todo{FFFFFF} - Разговор совмещен с действием\n{73B461}/me{FFFFFF} - Действие игрока\n{73B461}/do{FFFFFF} - Разговор от 3-го лица\n{73B461}/satiety{FFFFFF} - Состояние голода\n{73B461}/killme{FFFFFF} - Самоубийство\n{73B461}/leaders{FFFFFF} - Список лидеров онлайн\n{73B461}/pay{FFFFFF} - Передать деньги игроку\n{73B461}/hi{FFFFFF} - Поздороваться с игроком\n{73B461}/smoke{FFFFFF} - Курить\n{73B461}/drink{FFFFFF} - Пить что-либо\n{73B461}/mask{FFFFFF} - Надеть/Снять маску\n{73B461}/usebad{FFFFFF} - Использовать таблетку от наркозав.\n{73B461}/eat{FFFFFF} - Кушать.\n{73B461}/beer{FFFFFF} - Пить пиво.\n{73B461}/sprunk{FFFFFF} - Пить спранк.\n{73B461}/number{FFFFFF} - Телефонная книга.\n{73B461}/break{FFFFFF} - Вскрыть наручники.\n{73B461}/radio{FFFFFF} - Включить радио.\n{73B461}/armour{FFFFFF} - Надеть/снять бронежилет.\n{73B461}/usemed{FFFFFF} - Использовать аптечку.\n{73B461}/setspawn{FFFFFF} - Сменить место спавна.\n{73B461}/dropgun{FFFFFF} - Положить оружие на землю\n{73B461}/sellcard{FFFFFF} - Продать SIM-карту\n{73B461}/flowers{FFFFFF} - Подарить цветы\n{73B461}/kiss{FFFFFF} - Поцеловать человека\n{73B461}/advokats{FFFFFF} - Адвокаты онлайн\n{73B461}/quest{FFFFFF} - Ваши квесты\n{73B461}/showtatu{FFFFFF} - Снять верхнюю одежду(татуировки показать)\n{73B461}/firewood{FFFFFF} - Разжечь костер\n{73B461}/cl{FFFFFF} - Проверить игрока на лаунчер (голосовой чат)\n", !" >>>>>> ", !"Выход");
					}
					case 13: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"FAQ (Скиллы оружий)", !"{FFFFFF}\n\n{FFFFFF}У каждого оружия есть свой скилл для его прокачки.\nЧтобы лучше стрелять вам нужно повышать его.\nСкилл можно прокачать сходив в тир, который вы можете найти в любом магазине оружия!\nИ уже там вы узнаете все подробности его прокачки\n\nПосмотреть навык стрельбы можно с помощью команды: /skill\n\n", !"Закрыть", !"");
					case 14: callcmd::jobhelp(playerid);
					case 15: ShowRules(playerid);
					case 16: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"FAQ (Преимущества VIP)", !"\n{D5FF52}Преимущества Diamond статуса{FFFFFF}\n1)Каждый PayDay +2EXP\n2)Возможность иметь 2 авто, 3 если есть дом или отель.\n3)На много больше процент депозита в банке.\n4)Лечение в больнице проходит в 2 раза быстрее.\n5)При подборе подарка у вас будет шанс получить больше 3 подарков.\n6)Испытывать чувство голода вы будете в 2 раза реже.\n7)Прокачка скиллов в тире в 2 раза быстрей.\n8)Возможность респавнить личный транспорт /fixmycar.\n9)3 очка репутации семьи каждый payday\n10)Прокачка навыков фермера/дальнобойщика/развозчика продуктов/таксиста в 2 раза быстрей\n11)Вы теряете уровень розыска в 2-а раза быстрее!\n12)Срок действия {FFE741}30{FFFFFF} дней!\n\n{FFB252}Преимущества Titan статуса{FFFFFF}\n1)Каждый payday вы будете получать 2 az coins (donat очки){FFFFFF}\n2)Возможности всех VIP.\n3)VIP Чат (Для всех богачей сервера) (/vr)\n4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Больше процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)3 очка репутации семьи каждый payday\n8)Возможность иметь 4 авто, 5 если есть дом или отель.\n9)Вы не теряете наркотики при попадании в больницу\n10)Доступ к команде /out (Уволиться с организации по с.ж.) \n\n{FF5252}Преимущества PREMIUM статуса{FFFFFF}\n1)Каждый payday вы будете получать 4 az coins (donat очки){FFFFFF}\n2)Возможности всех VIP.\n3)PREMIUM Чат (Для всех владельцев этого VIP) (/vr)\n4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Самый высокий процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)4 очка репутации семьи каждый payday\n8)Шанс крафта в 2 раза выше \n9)Вы практически никогда не нуждаетесь в еде \n10)Вы бесплатно арендуете любой транспорт\n11)Законопослушность всегда 100\n12)Стоимость рекламы на билбордах и в GPS в 2 раза ниже\n13)Возможность выбора точки спавна в любом месте карты\n{FF5252}14)Бесплатный МАВЕРИК комплектации ПРЕМИУМ со специальным\nтюнингом и красивыми наклейками.{FFFFFF}\n15)Нахождение в списке топ игроков онлайн, а так-же в рейтинге\nТОП игроков на площади у БАНКА", !"Принять", !"");
					case 17: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"CMD (Отель)", !"{73B461}/hotel{FFFFFF} - управление номером.\n", !"Принять", !"");
					case 18: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Информация", !"\n\n{73B461}- Однорукий бандит\n\n{FFFFFF}Для игры в эту игру вам необходимо найти казино, найти его можно\n{FFFFFF}с помощью /gps - казино. После подойти к свободному автомату и нажать клавишу {73B461}'ALT'{FFFFFF}\n{FFFFFF}Там вы сможете посмотреть шанс победы и начать игру , вставив в автомат фишки , которые\n{FFFFFF}вы можете купить в обменнике в самом казино.\n\n", !"Принять", !"");
					case 19:
					{
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Информация", (str_f("\
							{FFFFFF}Наш сайт: {73B461}%s{FFFFFF}\n\
							Наш Форум: {73B461}%s{FFFFFF}\n\
							Группа Вконтакте: {73B461}%s{FFFFFF}\n\
							Группа для общения игроков: {73B461}%s", ServerCFG[server_site], ServerCFG[server_forum], ServerCFG[server_group_vk], ServerCFG[server_group_vk])), !"Принять", !"");
					}
					case 20: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Авиашкола \n{FFFFFF}Можно ли садиться на зданиях? -{73B461}В особых местах{FFFFFF}\n{FFFFFF}Разрешено ли буксировать другие транспортные средства? -{73B461}Нет{FFFFFF}\n{FFFFFF}Какая дистанция должна быть между двумя летящими вертолётам/самолетами? -{73B461}Необходимая для безопасного пролета{FFFFFF}\n{FFFFFF}Полет между зданиями -{73B461}Запрещен{FFFFFF}\n{FFFFFF}Летать разрешено -{73B461}За исключением военных объектов{FFFFFF}\n{FFFFFF}Покидать кабину летательного аппарата разрешено -{73B461}После остановки двигателя{FFFFFF}\n{FFFFFF}Перед взлетом необходимо проверить -{73B461}Уровень реактивного топлива{FFFFFF}\n\n{73B461}- Автошкола\n{FFFFFF}Максимальная скорость в городе: -{73B461} 60 Км/ч{FFFFFF}\n{FFFFFF}Максимальная скорость вне города: -{73B461} 120 Км/ч{FFFFFF}\n{FFFFFF}Разрешена ли парковка на тротуаре? -{73B461} Только в экстренных ситуациях{FFFFFF}\n{FFFFFF}Что нужно делать при тумане? -{73B461} Снизить скорость и включить фары{FFFFFF}\n", !"Закрыть", !"");
					case 21: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Воровство материалов{FFFFFF} \n{8B8181}Для начала вам надо запастись терпением и силой воли, ведь вам придётся воровать\n{8B8181}ингредиенты прямо из территории армии LS или LV. Будьте осторожны когда это будете делать!\n{8B8181}В Армии LS склад с ингредиентами расположен на корабле, а в армии LV в специально отведенных зданиях.\n{8B8181}Для того чтобы из ингредиентов изготовить патроны, а затем оружие , вам\nнеобходимо отправиться на завод /gps - работы для новичков - завод\n{8B8181}И найти там чекпойнт в котором можно обменять ингредиенты.\n{8B8181}Затем у вас появятся патроны и из них можно сделать оружие командой /sellgun.\n\n{73B461}Приятной игры", !"Закрыть", !"");
					case 22: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ферма и ее влияние на штат{FFFFFF} \nЭто предприятие предназначено в основном для игроков 1-го уровня, которые хотят выбится в люди, с помощью карьеры на ферме.\nEasterBoard Farm производит продукты, которые закупают развозчики продуктов и поставляют на склады. После чего владельцы бизнесов\nтам закупают продукты для своих закусочных и баров. На ферме можно прокачать навык и уже не просто носить мешки с сеном, а заниматься\nчем-то лучше. Например получив 500 очк. новыка вы можете работать трактористом, зарабатывая больше и получая удовольствие от работы.\nКогда вы накопите 3200 очк. навыка, вы получите возможность работать комбайнером, при этом еще больше зарабатывая на своём труде.\nПри достижении следующей работы, вы сможете бесплатно получить лицензию на авиа транспорт, не проходя экзамен в авиашколе, который\nочень дорогой и сложный. Как вы получите лицензию для работы, у вас будет возможность работать водителем кукурузника.\n\nИспользуйте /ffarm для того чтобы узнать свой навык.\nИспользуйте /GPS - работы для новичков - Ферма.", !"Закрыть", !"");
					case 23: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Банковская карта{FFFFFF} \nПолучить банковскую карту вы можете в Центральном банке LS , найти его можно с помощью /gps - важные, места у сотрудника банка выше 5-го ранга.\nЕсли же в банке нет человека который мог бы вам ее выдать, вы можете отправиться в банковское отделение Las Venturas , в котором сами ее получите.\nДля получения банковской карты необходимо с собой иметь 1 000$. После того как вы добрались к месту назначения, внимательно перечитайте условия банка.\nОбратите внимание, если вы не правильно введете пароль, при регистрации банковской карты, его можно будет восстановить у сотрудника банка, за кругленькую сумму.\nТакже вы можете в любой момент сменить свой пароль в /mm - Настройки - сменить пароль [ Банковская карта ].\nВы не сможете пользоватся банком/банкоматом не имея банковской карты или пароля к ней! Вводить пароль вам придётся только 1 раз, при\nпервой попытке воспользоватся денежными средствами в вашем банке, в дальнейшем вам не придётся его вводить до перезахода в игру.\n", !"Закрыть", !"");
					case 24: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Рыболовля и заработок на ней{FFFFFF} \nДля того чтобы иметь возможность ловить рыбу, вам необходима удочка и черви, в качестве наживки.\nКупить это все можно в любом магазине 24/7, его можно найти с помощью /gps - найти ближайший 24/7.\nМаксимум вы можете с собой переносить 5 разных рыб, до 20 кг. в общем весе.\nКаждая рыба имеет свою стоимость, и ее можно продать в любой магазин в котором вы покупали удочку или наживку.\nРыба достаточно дорогая, а значит вы можете на этом зарабатывать. Удачной рыболовли.\n", !"Закрыть", !"");
					case 25: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ограбление матовозов{FFFFFF} \nГрузовики в армии ( матовозы ), практически не убиваемые, в одиночку вам его точно не ограбить.\nчтобы ограбить матовоз и забрать весь его груз, достаточно сделать так-чтобы он взорвался, при этом в нем сидел водитель.\nПри взрыве с грузовика вылетят ящики, в которых по 500 готовых патронов, из которых уже можно сделать оружие.\nСовершить ограбление может абсолютно каждый, для этого достаточно собрать нужное количество людей и взятся за работу.\n", !"Закрыть", !"");
					case 26: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Багажник{FFFFFF} \n\nБагажник необходим для хранения и перевозки различных предметов.\nОткрыть багажник вашей личной машины не может никто кроме вас, а организационной\nмогут только те, кто состоит в вашей организации. Если вы оставите багажник открытым,\nто вас могут обчистить, забрав все добро с него. Багажник транспорта который не принадлежит\nорганизации или вам, может открыть любой игрок!\n\n{73B461}Открыть багажник можно с помощью L.ALT.\n", !"Закрыть", !"");
					case 27: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Наркопритоны{FFFFFF} \n\nЭто одно из средств заработка денег, а также закупки наркотиков для любых целей.\nВ наркопритоне ограничены как средства, так и товар, поэтому банды имеют возможность их контролировать,\nа именно банда которая держит территорию наркопритона, может управлять его ресурсами и\nсажать семена в огороде. Семена могут созревать от 1-го до 2-ух часов, поэтому\nочень важным этапом в выращивании товара есть охрана территории наркопритона, дабы вражесские банды\nне украли наркотики или не испортили саженец. Семена можно найти вне города, которые\nрастут у больших деревьев. Посадить наркотик можно в огороде наркопритона, командой /drug.\n", !"Закрыть", !"");
					case 28: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Семья)", !"{FFFFFF}/fammenu - Панель семьи", !"Принять", !"");
					case 29: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ограбление банка{FFFFFF} \n\nДля того чтобы ограбить банк, вы должны состоять в организации банды или мафии и\nиметь ключи от дверей в банк, которые можно купить на черном рынке (/gps - важные места).\nЕсли так и есть, тогда соберите больше 5-ти человек, все они должны находиться в банке, у\nдвери в хранилище! Сделайте 1-у бомбу (/createbomb) и заложите её под дверь хранилища (/bomb).\nКак только вы заложите бомбу, в банк приедут полицейские, а как бомба взорвется, у вас будет 30 секунд\nна то чтобы забежать в хранилище и украсть там деньги! Если у вас получится украсть мешки с деньгами,\nтогда нужно бежать и постараться не быть пойманным в течение 10-ти минут. Если вас поймают, вы сядете в\nтюрьму на 2-а часа и потеряете деньги с банка. Если вы выйдете из игры, с вами случится такая же ситуация!\nКогда пройдет 10 минут и вы останетесь живым, тогда вам будут начислены деньги и полиция не сможет вас арестовать!\n", !"Закрыть", !"");
					case 30: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Автозавод{FFFFFF} \n\nДля того чтобы начать работу на автозаводе, необходимо устроиться механиком в центре занятости.\nРабота доступна с 3-го уровня и после трудоустройства вы должны отправиться на сам автозавод,\nкоторый находится в LV, найти его можно с помощью GPS - Работы для новичков - Автозавод.\nУ входа, вы найдете раздевалку, там необходимо переодеться в рабочую форму и приступить к работе.\nСуть самой работы заключается в сборе автомобилей, нужно по-этапно брать детали и устанавливать на\nмашину. По окончанию сборки, автомобиль будет отправлен в автосалон. ( будет добавлена рандомная машина )\nЗа каждое проделанное действие, вы будете получать все больше денег.\n", !"Закрыть", !"");
					case 31: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Спортивный зал/Характеристики{FFFFFF}\n\nНа нашем проекте есть только один спортзал,\nкоторый находится в городе Las-Venturas.\nЕсли часто заниматься в зале, вы сможете повышать\nсвои характеристики и изучать новые стили боя,\nа именно: силу, выносливость и мускулатуру.\nКаждая из них влияет на определенные навыки:\n\nСила - {37FF92}повышает силу удара кулаком или холодным оружием.{FFFFFF}\nВыносливость - {37FF92}быстрее регенерирует энергию.{FFFFFF}\nМускулатура - {37FF92}повышает защиту персонажа от\nкулаков, холодного оружия и пуль.{FFFFFF}\n\nВ спортзале так-же есть ринг, на котором вы сможете\nнайти себе соперника и устроить с ним бой на деньги!\n\nЭнергия, для занятий на тренажерах восстанавливается,\nкаждый Payday, в количестве, которое зависит от выносливости.", !"Закрыть", !"");
					case 32: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}\nRole Play ({EB6834}Ролевая игра{FFFFFF}) представляет собой моделирование событий, происходящих в определённом мире в определённое время. Её участники отыгрывают\nсобственных персонажей, руководствуясь при этом характером своей роли и внутренними убеждениями персонажа в рамках игровых реалий.\n\nFAQ по использованию команд '/me, /do, /try', /todo'.\n\nКоманда '/me'{FFFFFF}\nCлужит для описания масштабных действий, которые совершает Ваш персонаж. Использовать ее нужно лишь для важных действий, которые необходимо видеть\nвсем игрокам, которые играют рядом с вами, в локальном чате. Описания мелких действий при помощи этой команды уместны, только если эти действия должны \nбыть донесены в локальный чат. Соответственно, использовать /me нужно для масштабных и важных действий со стороны вашего персонажа.\n\n{EB6834}Пример:{FFFFFF}\n/me открыл багажник автомобиля и вытащил оттуда три пакета с продуктами.\n\n{EBEB34}Команда '/do'{FFFFFF}\nОчень важна в отыгровке. С помощью /do Вы можете описать обстановку вокруг вашего персонажа, либо самого персонажа. Стоит заметить, что описывать других \nперсонажей через эту команду не есть правильно. Но, при помощи /do можно узнать описание / состояние другого персонажа, либо обстановки вокруг него. \n\n{EB6834}Пример:{FFFFFF}\n/do В руке у Джеймса пистолет – Кольт, полностью заряженный\n\n{EBEB34}Команда '/try'{FFFFFF}\nКоманда используется для действий, вероятность успешности которых – 50%. Применять ее можно только к неживым предметам. Применение к другим персонажам\nявляется неправильным использованием команды. Для этого используйте команды /me и /do.\n\n{EB6834}Пример:{FFFFFF}\n/try взвалил самый большой мешок себе на плечи\n\n{EBEB34}Команда '/todo'{FFFFFF}\nУниверсальная команда для смешивания действия персонажа и его слов. Структура команды - /todo [слова*действие], причем пишется это через символ звездочки (*).\nДанная команда служит для описания одновременно и слов, которые говорит персонаж, и действия, которое он выполняет в виде деепричастия (", !"Закрыть", !"");
					case 33: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}- Система трейлеров ( {ECE162}Дома на колесах{FFFFFF} )\n\nКупить трейлер вы можете в салоне трейлеров ( {ECE162}/GPS - Автосалоны - Салон трейлеров{FFFFFF} )\nили у любого игрока, который им владеет. Количество трейлеров ограничено в 500 шт. \nМеню управления: {ECE162}/trmenu{FFFFFF}. Используя {ECE162}/setspawn{FFFFFF}, вы можете указать место спавна: '{ECE162}В трейлере{FFFFFF}'\nВы можете перевозить трейлер и парковать его в нужном вам месте, а так-же создавая с друзьями \n{ECE162}трейлерные{FFFFFF} городки. Въезд в город и парковка в городе запрещена! \n\nТрейлеры можно тюнинговать в гараже салона, изменяя каждую их текстуру за определенную оплату. \nЗа потерю трейлера, салон попросит у вас штраф в размере {ECE162}40 000${FFFFFF}, а за неуплату налогов, государство\nотберет его у вас. При парковке трейлера на дороге, местах общего пользования, в чертах города,\nна входе в бизнес, дом или в любых случаях NONRP, трейлер будет продан в гос. без возврата средств.\n\n", !"Закрыть", !"");
					case 34: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Галочка для семьи:\n\n- Специальный знак, подтверждающий запатентованость семьи.\n- Возможность влияния на расформ. семьи, которая копировала название вашей.\n- Возможность терять в 2-а раза меньше репутации, при наказании членов семьи.\n- Возможность пользования депозитом в кассах в любое время суток.\nСтоимость галочки: 50.000.000.\n\n", !"Закрыть", !"");
					case 35: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Бренд для семьи:\n\n- Специальный знак, выделяя вас от других семей.\n- Повышенные шансы получения рулеток в собирателях и дерби.\n- Семейный адвокат сможет с вероятностью в 2 раза больше освободить вас от ТСР.\n- Доступ к информационному центру через телефон.\n- Возможность владеть одним домом больше.\nСтоимость: 80.000.000\n\n", !"Закрыть", !"");
					case 36: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Улучшения для семьи:\n\nДополнительный респект - Все члены семьи начнут получать дополнительные 1-2 опыта каждый PAYDAY\nУспех в работе - Каждый член семьи будет получать дополнительный талон.\nБизнессмены в долгу - Участники семьи смогут бесплатно входить на \"Собиратели\".\nНеузнаваемый - Время действия маски в 2-а раза больше.\nМедики в долгу - Члены семьи смогут покупать аптечки без рецепта врача.\nБелый список - Участники семьи платят {EEDB64}в 3 раза меньше штраф{FFFFFF} за превышение скорости перед радаром.\nБанковские махинации - Участники семь смогут держать ставку в банке до 200.000.000 и получать до 200.000 каждый PAYDAY.\nМародёры - Члены семь смогут воровать патроны и ингредиенты у армий без состояния в банде, или мафии.\nРыбный цех - Члены семьи смогут бесплатно кушать у холодильника семейной квартиры.\n\n", !"Закрыть", !"");
					case 37: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Спортивный зал:\n\nСила - повышает силу удара кулаком, или холодным оружием.\nВыносливость - быстрее регенеррует энергию.\nМускулатура -повышает защиту персонажа от кулаков, холодного оружия и пуль.\nЭнергия, для занятий на тренажёрах восстанавливается, каждый PAYDAY, в количестве, которое зависит от выносливости.\n\n", !"Закрыть", !"");
					case 38: SCM(playerid, COLOR_LIGHTRED, !"Ждите в следующем обновлении!");
				}
		    }
		}
		case 69:
		{
		    if(response) FirstReferal[playerid] += 10;
		    else
		    {
		        if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
		        else return 1;
		    }
		    str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT `NickName`, `Level` FROM `"TABLE_ACCOUNTS"` WHERE `Referal` = '%s' LIMIT %i, 10", PN(playerid), FirstReferal[playerid]);
		    new Cache:result = mysql_query(mysql, str_1);
      		new accounts = cache_num_rows();
      		if(accounts == 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Больше вас никто не указывал как реферала");
      		str_1[0] = EOS;
      		for(new i; i < accounts; i ++)
      		{
				new Name[24], Level;
	  			cache_get_string(i, !"NickName", Name);
	  			cache_get_int(i, !"Level", Level);
      			if(Level < 3) str_1[0] = EOS, f(str_1, sizeof(str_1), "%s{FFFFFF}%i. %s - {FF0000}%i level\n", str_1, i+FirstReferal[playerid]+1, Name, Level);
      			else str_1[0] = EOS, f(str_1, sizeof(str_1), "%s{FFFFFF}%i. %s - {33AA33}%i level\n", str_1, i+FirstReferal[playerid]+1, Name, Level);
      		}
      		cache_delete(result);
  			SPD(playerid, 69, 0, "Приглашенные", str_1, "Далее", "Назад");
		}
		///////авиашкола
        case 79:
        {
            if(response)
            {
                if(PI[playerid][pMoney] >= CostGiveMoney[playerid])
                {
	                if(PI[playerid][pMoney] < CostGiveMoney[playerid]) return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
					new biz = BizEntered[playerid];
					if(!GetInvSlot(playerid, 0)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
	                if(BizInfo[biz][bProducts]<5) return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");
					new Item = player_Global_Int[playerid][GetPVarInt(playerid, !"BuyTD")];
					InvAdd(playerid, Item, 1);
					switch(random(4))
			        {
			            case 0: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
			            case 1: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
			            case 2: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
			            case 3: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Хорошего вам дня.");
			        }
		        	GiveBizMoney(playerid, CostGiveMoney[playerid]);
					BizInfo[biz][bProducts] -= 5;
					UpdateDataInt("businesses", "Products", BizInfo[biz][bProducts], BizInfo[biz][bID],"=");
			        GiveMoney(playerid, -CostGiveMoney[playerid], "купил в магазине");
			        UpdateBiz(biz);
            	}
            	else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
			}
		}
		case 81:
		{
		    if(!response) return 1;
		    new Item = player_Global_Int[playerid][GetPVarInt(playerid, !"BuyTD")];
		    new id = player_Global_Int[playerid][GetPVarInt(playerid, !"BuyTD")];
    		if(!GetInvSlot(playerid, 0)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
		  	if(GetInvCount(playerid, 359) < GetCostID(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно семейных талонов!");
		    InvAdd(playerid, 359, -GetCostID(id));
		    InvAdd(playerid, Item, 1);

    		switch(random(4))
	        {
	            case 0: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
	            case 1: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
	            case 2: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
	            case 3: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Хорошего вам дня.");
	        }
		}
		case 80:
        {
            if(response)
            {
                if(PI[playerid][pMoney] >= CostGiveMoney[playerid]*strval(inputtext))
                {
	                new biz = BizEntered[playerid];
	                if(strval(inputtext) > 5000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя купить больше 5000 продуктов!");
	                if(strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя купить меньше 1 продукта!");
	                if(BizInfo[biz][bProducts]<5) return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");
					new Item = player_Global_Int[playerid][GetPVarInt(playerid, !"BuyTD")];
					InvAdd(playerid, Item, strval(inputtext));
					switch(random(4))
			        {
			            case 0: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
			            case 1: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
			            case 2: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
			            case 3: SendBotMessage(playerid,!"Кассир:\n{FFFFFF}Хорошего вам дня.");
			        }
		        	GiveBizMoney(playerid, CostGiveMoney[playerid]*strval(inputtext));
					BizInfo[biz][bProducts] -= 5;
			        GiveMoney(playerid, -CostGiveMoney[playerid]*strval(inputtext), "купил в магазине");
			        UpdateBiz(biz);
				}
				else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
			}
		}
		case 86:
		{
	        if(!response) {
				new id = HouseOffer[playerid];
			    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
			    HouseOffer[id] =
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
			}
			SetPVarInt(playerid, !"antinaebdom", global_time + 5);
			SPD(playerid, 92, DIALOG_STYLE_MSGBOX, !"", !" {FFFFFF}Вы действительно согласны на покупку дома?\n{EC2218}Для вашей безопасности, принять покупку\nможно спустя 5 секунд с момента предложения", !"Принять", !"Отмена");
		}
		case 92:
		{
		    if(!response) {
			    new id = HouseOffer[playerid];
			    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
			    HouseOffer[id] =
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
	        	DeletePVar(playerid, !"antinaebdom");
			}
            if(GetPVarInt(playerid, !"antinaebdom") > global_time)
                return SPD(playerid, 92, DIALOG_STYLE_MSGBOX, !"", !" {FFFFFF}Вы действительно согласны на покупку дома?\n{EC2218}Для вашей безопасности, принять покупку\nможно спустя 5 секунд с момента предложения", !"Принять", !"Отмена");
            DeletePVar(playerid, !"antinaebdom");
            SPD(playerid, 94, DIALOG_STYLE_MSGBOX, !"", !"{EC2218} Вы действительно согласны на покупку дома?", !"Принять", !"Отмена");
		}
		case 94:
		{
		    new id = HouseOffer[playerid];
			if(response)
			{
		        if(HouseOffer[playerid] != INVALID_PLAYER_ID && HouseOffer[HouseOffer[playerid]] == playerid)
		        {
              		new house = player_Global_Int[id][GetPVarInt(id, "ListItemHouse")];
		            if(GetString(HouseInfo[house][hOwner], PN(id)))
		            {
		                if(GetMoney(playerid) >= HousePrice[playerid])
		                {
				            GiveMoney(playerid, -HousePrice[playerid], "купил дом в игрока");
				            GiveMoney(id, HousePrice[playerid], "продал дом игроку");
				        	SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы купили дом у игрока %s за $%i", PN(id), HousePrice[playerid]);
							SCMf(id, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Игрок %s купил у вас дом за $%i", PN(playerid), HousePrice[playerid]);
							SetSpawnPI(id, 0);
							SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        	PI[playerid][pDCTime] = 1;
				        	UpdatePlayerDataInt(playerid, "DCTime", 1);
				        	SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        	SetString(HouseInfo[house][hOwner], PN(playerid));
				        	UpdateHouse(house);
				        	UpdateDataStr("houses", "Owner", HouseInfo[house][hOwner], HouseInfo[house][hID]);
				        	PI[playerid][pHouseMain] = house;
				        	UpdatePlayerDataInt(playerid, "HouseSpawned", house);
				        	PI[id][pHouseMain] = -1;
				        	UpdatePlayerDataInt(id, "HouseSpawned", -1);
				        	HouseOffer[id] =
				        	HouseOffer[playerid] = INVALID_PLAYER_ID;
				        	HousePrice[playerid] = 0;
				        	str_1[0] = EOS;
                            f(str_1, sizeof(str_1), "дом(id: %i)", house);
                            //aml(36, id, PN(playerid), str_1, HousePrice[playerid], 7);
                            //aml(37, playerid, PN(id), str_1, HousePrice[playerid], 7);
					    }
					}
				}
			}
			else
			{
			    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
			    HouseOffer[id] =
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
	       }
		}
		case 87:
		{
		    if(response)
		    {
		        if(ProxDetectorS(5,playerid,TicketOffer[playerid], 1))
		        {
		            if(GetMoney(playerid) >= TicketPrice[playerid])
		            {
		            	GiveMoney(playerid,-TicketPrice[playerid], "оплатил штраф");
		            	GiveMoney(TicketOffer[playerid],TicketPrice[playerid], "выписал шраф игроку");
		            	////aml(50, TicketOffer[playerid], PN(playerid), "Оплата Шрафа", TicketPrice[playerid]);
		            	str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}%s оплатил штраф в размере $%i",PN(playerid),TicketPrice[playerid]);
		            	SCM(TicketOffer[playerid],COLOR_VALIK,str_1);
		            	str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы оплатили штраф полицейскому %s в размере $%i",PN(TicketOffer[playerid]),TicketPrice[playerid]);
		            	SCM(playerid,COLOR_VALIK,str_1);
		            	TicketPrice[playerid] = 0;
		            	TicketOffer[playerid] = INVALID_PLAYER_ID;
		            }
		        }
		    }
		}
		case 91:
		{
		    if(response)
		    {
		        if(PI[playerid][pAdmin] >= 3)
		        {
				    if(IsBannedName(UnbanName[playerid]))
				    {
				        UnBanName(UnbanName[playerid]);
				        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Игрок разбанен");
				        f(str_1, sizeof(str_1) ," А: %s разбанил игрока %s", PN(playerid), UnbanName[playerid]);
				        SendAdminsMessage(COLOR_YELLOW, str_1);
					}
				    else SCM(playerid, COLOR_GREY, !"Игрок уже разбанен");
		        }
		    }
		}
  		case 96:
		{
			if(response)
			{
			    if(listitem == 20 || listitem == 21) CheckBanned(playerid,listitem);
       			else
			    {
			        strmid(UnbanName[playerid], inputtextsave, 0, strlen(inputtextsave) );
			        if(GetString(inputtextsave, "<<< Назад")) return CheckBanned(playerid,21);
			        static reason[7+23], admin[24], Name[22+2];
				    new seconds;
				    str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT * FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
					new Cache:result = mysql_query(mysql, str_1);
					if(cache_num_rows() > 0)
					{
      					cache_get_string(0, !"Name", Name);
				        cache_get_string(0, !"BanAdmin", admin);
				        cache_get_string(0, !"BanReason", reason);
				        cache_get_int(0, !"BanSeconds", seconds);
						new dima;
						if(floatround((seconds-global_time) / 60 / 60 / 24) > 1)
						{
							str_1 = "дней";
							dima = floatround((seconds-global_time) / 60 / 60 / 24, floatround_ceil);
						}
						else if(floatround((seconds-global_time) / 60 / 60) > 1)
				 	    {
					 		str_1 = "час(ов)";
					 		dima = floatround((seconds-global_time) / 60 / 60, floatround_ceil);
						}
						else
						{
					 		str_1 = "минут";
					 		dima = floatround((seconds-global_time) / 60, floatround_ceil);
						}
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"\
						{FFFFFF}Блокиратор: \t{FF0000}%s\n\
						{FFFFFF}Причина: \t{FF0000}%s\n\
						{FFFFFF}До разблокировки: \t\t{FF0000}%i %s",
						admin, reason, dima, str_1);
						SPD(playerid, 91, 0, UnbanName[playerid], str_1, !"Разбан", !"Отмена");
					}
					else SCMf(playerid, COLOR_GREY, "Игрок %s не забанен", UnbanName[playerid]);
				    cache_delete(result);
			    }

			}
		}
	    case 98:
	    {
	        if(response)
		    {
		        new biz = InfoBiz[playerid];
		        if(GetPlayerPeakBiz(playerid))
		        {
			        if(GetString(BizInfo[biz][bOwner],"The State"))
		     	    {
		     	        if(GetMoney(playerid) >= BizInfo[biz][bCost])
		     	        {
	     	                GiveMoney(playerid,-BizInfo[biz][bCost], "купил бизнес");
                            BizInfo[biz][bNalog]=0;
                            UpdateDataInt("businesses", "Level", BizInfo[biz][bNalog], BizInfo[biz][bID],"=");
                            SetString(BizInfo[biz][bOwner],PN(playerid));
                            UpdateDataStr("businesses", "Owner", BizInfo[biz][bOwner], BizInfo[biz][bID]);
	     	                SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот бизнес ваш!");
	     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	     	                UpdateBiz(biz);
		     	        }
	     	        }
	     	    }
	     	    else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
		    }
		    return 1;
	    }
	    case 99:
	    {
	        if(response)
	        {
		        new i = InfoBiz[playerid];
				if(!IsNoEnterBiz(i))
				{
					if(IsPlayerInRangeOfPoint(playerid,3.0,BizInfo[i][bExit_X],BizInfo[i][bExit_Y],BizInfo[i][bExit_Z]))
					{
					    BizEntered[playerid] = -1;
					    SetPlayerInteriorEx(playerid,0);
						SetPlayerVirtualWorldEx(playerid,0);
						J_SetPlayerPos(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
					}
				}
			}
			return 1;
	    }
		case 103:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0: ShowBuyMenu(playerid, 3);
				    case 1: SPD(playerid,104,2,"Что продать?","Рыбу","Выбор","Отмена");
				    case 2:
				    {
				        PI[playerid][pVID] = !PI[playerid][pVID];
					    str_1[0] = EOS, f(str_1, sizeof(str_1), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать");
						SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str_1, !"Выбор", !"Отмена");
				    }
			    }
			}
		}
		case 104:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0: SPD(playerid,105,2,"Что продать?","Всю рыбу","Выбор","Отмена");
			    }
			}
			else {
			    str_1[0] = EOS, f(str_1, sizeof(str_1), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать");
				SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str_1, !"Выбор", !"Отмена");
			}
		}
		case 107:
		{
		    if(response)
		    {
		        switch(listitem)
				{
			       	case 0:
			        {
               			foreach_player(i)
						{
							if(PI[i][pDemogran] > 0) SCMf(playerid,COLOR_GREY,"%s(%i) | Время: %i мин | Залог: $%i",PN(i),i,PI[i][pDemogran]/60,PI[i][pBailPrice]);
						}
			        }
			        case 1:
			        {
      					foreach_player(i)
						{
							if(PI[i][pWanted] > 0) SCMf(playerid,COLOR_GREY,"%s(%i) - %i-й уровень розыска",PN(i),i,PI[i][pWanted]);
						}
			        }
		        }
		    }
		}
		case 111:
		{
			if(response)
			{
				if(pTemp[playerid][SPECTPLAYER]==true) SpecPl(playerid,false);
			}
		}
  		case 115:
		{
		    if(response)
		    {
		        new number = listitem + 1;
                if(OrgInfo[number][oLeaderUID] != -1)
		        {
                    new id = INVALID_PLAYER_ID;
			        foreach(new i: Player)
                    {
                        if(OrgInfo[number][oLeaderUID] == PI[i][pID])
                        {
                            id = i;
                            break;
                        }
                    }
			        if(id != INVALID_PLAYER_ID)
					{
                        OrgInfo[number][oLeaderUID] = -1;
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"** А: %s снял вас с поста лидера",PN(playerid));
					    SCM(id,-1,str_1);
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы сняли игрока %s с поста лидера",PN(id));
					    SCM(playerid,-1,str_1);

					    str_1[0] = EOS, f(str_1, sizeof(str_1)," А: %s выгнал игрока %s из должности лидерства",PN(playerid),PN(id));
    					SendAdminsMessage(-1,str_1);
                        PlayerUnleader(id, PN(id));
                        SaveOrg(listitem+1);
			        }
			        else
			        {
                        SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Об этом игроке нет информации");
                        PlayerUnleader(INVALID_PLAYER_ID,OrgInfo[number][oLeaderUID]);
                        SCMf(playerid,-1,"Вы сняли игрока %i(UID) с поста лидера",OrgInfo[number][oLeaderUID]);
                        OrgInfo[number][oLeaderUID] = -1;
                        SaveOrg(number);
			        }
		        }
		        else SCM(playerid, COLOR_GREY, !"Эта лидерка и так свободна");
		    }
		    else {
		    	callcmd::apanel(playerid);
		    }
		}
		case 116:
		{
			if(response)
			{
				listitem++;
				OrgInfo[listitem][oItemCount][0]+=50000;
				switch(listitem)
				{
					case 10..18,25: 
					{
						OrgInfo[listitem][oItemCount][1]+=50000;
						UpdateDorm(listitem);
						SCM(playerid, COLOR_GREY, !"drugs++50000");
					}
				}
				SCM(playerid, COLOR_GREY, !"material++50000");
                SaveOrg(listitem);
				callcmd::updatesklad(playerid);
			}
			else callcmd::apanel(playerid);
		}
		case 124:
		{
      		if(response)
		    {
		        if(RecInfo[playerid][rPlayer]==INVALID_PLAYER_ID)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
			    if(!strlen(inputtextsave)) return SPD(playerid,124,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку причину.\n","Принять","Отмена");
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"%i %s",RecInfo[playerid][rPlayer],inputtextsave);
			    callcmd::warn(playerid,str_1);
		    }
		}
		case 125:
		{
		    if(response)
		    {
	         	if(RecInfo[playerid][rPlayer]==INVALID_PLAYER_ID)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
		        if(!strlen(inputtextsave)) return SPD(playerid,125,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,Чит )\n\nМаксимум 30 символов!","Принять","Отмена");
		        new time;
		        static reason[30];
				sscanf(inputtextsave,"p<,>ds[30]",time,reason);
                str_1[0] = EOS, f(str_1, sizeof(str_1),"%i %i %s",RecInfo[playerid][rPlayer],time,reason);
			    callcmd::ban(playerid,str_1);
		    }
		}
		case 126:
		{
		    if(response)
		    {
		        if(RecInfo[playerid][rPlayer]==INVALID_PLAYER_ID)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
			    if(!strlen(inputtextsave)) return SPD(playerid,126,1,"Введите причину","{73B461}Внимание!\n\n{FFFFFF}Введите причину бана IP","Ок","Отмена");
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"%i %s",RecInfo[playerid][rPlayer],inputtextsave);
			    callcmd::banip(playerid,str_1);
		    }
		}
		case 129:
		{
		    if(response)
		    {
		        if(RecInfo[playerid][rPlayer]==INVALID_PLAYER_ID)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
		        if(!strlen(inputtextsave)) return SPD(playerid,129,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Посадить","Отмена");
		        new time;
		        static reason[30];
				sscanf(inputtextsave,"p<,>ds[30]",time,reason);
                str_1[0] = EOS, f(str_1, sizeof(str_1),"%i %i %s",RecInfo[playerid][rPlayer],time,reason);
			    callcmd::jail(playerid,str_1);
			}
		}
		case 661:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 50);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 198);
				SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Для того чтобы работать выберите работу и подойдите к машин и нажимайте клавишу ALT");
	            DeletePVar(playerid, !"dilo");
				SetPVarInt(playerid, !"mehan", 2);
	        }
		}
		case 662:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
	            DeletePVar(playerid, !"dilo");
	            DeletePVar(playerid, !"mehan");
	        }
		}
		case 663:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 171);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 11);
				SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Используйте /help если вы впервые здесь!");
	        }
		}
		case 664:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись. Напоминаем, что забрать зарплату нужно у специального места!");
	        }
		}
		case 665:
		{
		    if(!response) return 1;
			if(!listitem) SPD(playerid, 668, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {acee4a}фишек{FFFFFF}, которое хотите приобрести.\n\tСтоимость 1-ой фишки: {acee4a}9000$\t ", !"Принять", !"Отмена");
			else SPD(playerid, 669, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {acee4a}фишек{FFFFFF}, которое хотите продать.\n\tСтоимость продажи 1-ой фишки: {acee4a}8500$\t ", !"Принять", !"Отмена");
		}
		case 668:
		{
            if(response)
	        {
                if(strval(inputtextsave) < 1) return SPD(playerid, 668, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {FBAD2F}фишек{FFFFFF}, которое хотите приобрести.\n\tСтоимость 1-ой фишки: {FBAD2F}9000$\t ", !"Принять", !"Отмена");
                if(strval(inputtextsave) > 10000) return 1;
				if(GetMoney(playerid) < strval(inputtextsave) * 9000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
               	InvAdd(playerid, 320, strval(inputtextsave));
               	new money = strval(inputtextsave) * 9000;
                GiveMoney(playerid, -money, "купил фишек в казино");
                str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Информация:\n\nВы успешно купили {acee4a}%i {FFFFFF}фишек для игры в казино.\nУ вас уже: {acee4a}%i{FFFFFF} фишек.", strval(inputtextsave), GetInvCount(playerid, 320));
                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
			}
		}
		case 2394:
		{
			if(!response) return ShowCheckPassword(playerid);
			
			if(GetString(CodeCheckDostup, "0")) Autorisation(playerid);
			if(!GetString(inputtextsave,CodeCheckDostup) || strlen(inputtextsave) < 3 || strlen(inputtextsave) > 23) return ShowCheckPassword(playerid);
		}
		case 669:
		{
			if(response)
			{
                if(strval(inputtextsave) < 1) return SPD(playerid, 669, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {FBAD2F}фишек{FFFFFF}, которое хотите продать.\n\tСтоимость продажи 1-ой фишки: {FBAD2F}8500$\t ", !"Принять", !"Отмена");
				if(strval(inputtextsave) > 10000) return 1;
				if(GetInvCount(playerid, 320) < strval(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно фишек в инвентаре!");
				InvAdd(playerid, 320, -strval(inputtextsave));
				new money = strval(inputtextsave) * 8500;
				GiveMoney(playerid, money, "продал фишек в казино");
				str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Информация:\n\nВы успешно продали {acee4a}%i {FFFFFF}фишек для игры в казино.\nВы получили {acee4a}%i$.", strval(inputtextsave), strval(inputtextsave) * 8500);
                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
			}
		}
	    case 7551:
	    {
	        if(!response) return 1;
            switch(listitem)
            {
                case 0:
                {
                    if(!TeamDuty{playerid})
					{
						if(PI[playerid][pSkin] != GetPlayerSkin(playerid)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы не в своей одежде!", !"Закрыть", !"");
					    TeamDuty{playerid} = true;
					    str_1[0] = EOS, f(str_1, sizeof(str_1), " %s переодевается в рабочую одежду.", PN(playerid));
						ProxDetector(25, playerid, str_1, COLOR_PURPLE);
						CheckDuty(playerid);
					}
					else
					{
					    TeamDuty{playerid} = false;
                        if(GetPVarInt(playerid, !"MedicCase")) DeletePVar(playerid, !"MedicCase"), RemovePlayerAttachedObject(playerid, 7);
					    str_1[0] = EOS, f(str_1, sizeof(str_1), " %s переодевается в гражданскую одежду.", PN(playerid));
						ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
					    if(IsACop(playerid) || IsAArmy(playerid))
						{
						    J_SetPlayerArmour(playerid, 0);
						 	ResetPlayerWeapons(playerid);
						}
						CheckDuty(playerid);
					}
                }
                case 1:
                {
                    if(!IsACop(playerid) || !TeamDuty{playerid}) return 0;
                    if(PI[playerid][pRank] < 6)return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{A31919}\n\nДоступ к гардеробу S.W.A.T. имеют доступ только работники выше 6-го ранга!\n\n", !"Принять", !"");
                    if(GetPlayerSkin(playerid) == 285) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{A31919}\n\nВы и так уже одеты в форму S.W.A.T.\n\n", !"Принять", !"");
                    SetPlayerSkinEx(playerid, 285);

					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nВы успешно переоделись в форму S.W.A.T.\n\n", !"Принять", !"");
                }
            }
	    }
		case 581:
		{
		    if(!response) return 1;
		    new team = GetTeamID(playerid);
		    switch(listitem)
			{
				case 0:
				{
				    if(!TeamDuty{playerid}) SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}рабочую{FFFFFF} форму.", !"Принять", !"Отмена");
					else
					{
					    if(IsACop(playerid)) SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}свою{FFFFFF} одежду.\n- Переодется в {31853A}S.W.A.T.{FFFFFF} форму.", !"Принять", !"Отмена");
					    else SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}свою{FFFFFF} одежду.", !"Принять", !"Отмена");
					}
				}
				case 1:
				{
				    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Вы не на службе!");
					f(str_2, sizeof(str_2), "{FFFFFF}На складе: {42B02C}%i{FFFFFF} патронов.", OrgInfo[team][oItemCount][0]);
				    if(IsAArmy(playerid)) return SPD(playerid, 582, DIALOG_STYLE_LIST, str_2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет", !"Принять", !"Отклонить");
					else if(IsACop(playerid) && GetPlayerSkin(playerid) == 285) return SPD(playerid, 582, DIALOG_STYLE_LIST, str_2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5 rank]\n{42B02C}-{FFFFFF} Взять Тазер 10пт. [ 600 пт. ]\n{42B02C}-{FFFFFF} Взять набор {31853A}S.W.A.T.{FFFFFF} [ 500 пт. ]", !"Принять", !"Отклонить");
				    else if(IsACop(playerid)) return SPD(playerid, 582, DIALOG_STYLE_LIST, str_2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5 rank]\n{42B02C}-{FFFFFF} Взять Тазер 10пт. [ 600 пт. ]", !"Принять", !"Отклонить");
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете пользоваться этим разделом!");
				}
			}
		}
		case 582:
		{
		    if(response) ShowWeaponMenu(playerid);
		}
		case 3303:
		{
		    if(!response) return 1;
		    Eat(playerid, listitem);
			callcmd::eat(playerid);
		}
		case 6446:
		{
			if(response)
			{
				if(pSportZal[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже переоделись");
				pSportZal[playerid] = 1;
				if(PI[playerid][pSex]==1) SetPlayerSkinEx(playerid, 80);
				else SetPlayerSkinEx(playerid,192);
				SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Вы начали тренировку, бейте по грушам для прокачки своего навыка.");
				SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Используйте клавиши PKM+F для того чтобы бить грушу.");
			}
			else
			{
				if(pSportZal[playerid])
				{
					pSportZal[playerid] = 0;
					SCM(playerid, COLOR_LIGHTBLUE, !"[Ошибка] {FFFFFF}Вы закончили тренировку!");
				}
				else SCM(playerid, COLOR_LIGHTBLUE, !"[Ошибка] {FFFFFF}Вы не начинали тренировку!");
			}
		}
		case 799:
		{
			if(!response) return 1;
			if(TextFind(inputtext,"/donate")) return ShowDonate(playerid, 0);
			if(listitem < 11) 
			{
				if(PI[playerid][pImprovement][listitem] != false) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			}
			else
			{
				if(listitem == 11) if(PI[playerid][pAddSlotCar] >= 10) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
				else if(PI[playerid][pAddSlotHouse] >= 10) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			}
			player_Global_Int[playerid][61] = listitem;
			switch(listitem)
			{
				case 0: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Шумахер' за $850000?\n\n{cccccc}Имея это умение, Ваша машина не будет глохнуть при столкновении.", !"Купить", !"Отмена");
				case 1: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Халявщик' за 800 AZ-коинов?\n\n{cccccc}Ваш персонаж становится везунчиком и платит налоги на дом, и на машину в 2 раза меньше.", !"Купить", !"Отмена");
				case 2: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Бизнесмен' за 2000 AZ-коинов?\n\n{cccccc}Вы сможете владеть 5-ю бизнесами.", !"Купить", !"Отмена");
				case 3: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Планшет' за $2000000?\n\n{cccccc}Вы сможете отправлять объявления на редакцию, с любой точки карты.", !"Купить", !"Отмена");
				case 5: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Больше недвижимости' за 2300 AZ-коинов?\n\n{cccccc}Вы сможете владеть 4 домами.", !"Купить", !"Отмена");
				case 6: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Нет налогам' за 1500 AZ-коинов?\n\n{cccccc}Вам не придется платить комиссию в банке и банкоматах.", !"Купить", !"Отмена");
				case 7: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{ffffff}Вы действительно хотите купить улучшение 'Семь бизнесов' за 25000", !"Купить", !"Отмена");
				case 8: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nС помощью него вы сможете получать каждый PayDay по 10000$ (только если вы в браке).\n\n{cccccc}Приобрести семейный сертификат можно только у сотрудников страховой компании!\n\n", !"Ок", !"");
				case 9: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nВы сможете получать на 15 процентов больше денег с депозита.\n\n{cccccc}Приобрести семейный сертификат можно только у сотрудников страховой компании!\n\n", !"Ок", !"");
				case 10: SPD(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", "{ffffff}Вы действительно хотите купить улучшение 'Выгодная рассрочка' за $600 000 000?\n\n{cccccc}Имея это улучшение, каждый PayDay вы будете получать 10 AZ-монет.\nПри Х4 PayDay AZ-монеты не начисляются", "Купить", "Отмена");
				case 11: 
				{
					if(PI[playerid][pAddSlotCar] >= 10) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
					SPDf(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"Купить", !"Отмена", "{ffffff}Вы действительно хотите купить один дополнительный слот транспорта за $50 000 000?\n\nСейчас у вас уже куплено: {ffff00}%i слота.", PI[playerid][pAddSlotCar]);
				}
				case 12:
				{
					if(PI[playerid][pAddSlotHouse] >= 10) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
					if(!PI[playerid][pImprovement][5]) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}Покупать дополнительные слота для дома можно после покупки улучшения 'Больше недвижимости'.", !"Закрыть", !"");
					SPDf(playerid, 15129, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"Купить", !"Отмена", "{ffffff}Вы действительно хотите купить один дополнительный слот дома за $60 000 000?\n\nСейчас у вас уже куплено: {ffff00}%i слота.", PI[playerid][pAddSlotHouse]);
				}
				case 13: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Помощь", !"\n\n{1874cd}Шумахер {FFFFFF}- Имея это умение, Ваша машина не будет глохнуть при столкновении.\n{1874cd}Халявщик {FFFFFF}- Ваш персонаж становится везунчиком и платит налоги на дом, и на машину в 2 раза меньше.\n{1874cd}Бизнесмен {FFFFFF}- Вы сможете владеть 5-ю бизнесами.\n{1874cd}Больше недвижимости {FFFFFF}- Вы сможете владеть 4 домами.\n{1874cd}Планшет {FFFFFF}- Вы сможете отправлять объявления на редакцию, с любой точки карты.\n{1874cd}Вечный Car Skill {FFFFFF}- Ваш навык вождения, не будет уменьшаться!\n{1874cd}Нет налогам {FFFFFF}- Вам не придется платить комиссию в банке и банкоматах!\n{1874cd}Семь бизнесов {FFFFFF}- Вы сможете владеть 7-ю бизнесами.\n{1874cd}Семейный сертификат {FFFFFF}- Вы сможете получать каждый PayDay по 10000$ (только если вы в браке).\n{1874cd}Пенсионное страхование {FFFFFF}- Вы сможете получать на 15 процентов больше денег с депозита.\n{1874cd}Выгодная рассрочка {FFFFFF}- Вы сможете получать по 10 AZ-монет каждый PayDay.\n\n", !"Принять", !"");
			}
		}
		case 15129:
		{
			if(!response) return Show2UpdateSettings(playerid);
			new cost, bool:type, list = player_Global_Int[playerid][61];
			switch(list)
			{
				case 0: cost = 850000;
				case 1: cost = 800, type = true;
				case 2: cost = 2000, type = true;
				case 3: cost = 2000000;
				case 5: cost = 2300, type = true;
				case 6: cost = 1500, type = true;
				case 7: cost = 25000;
				case 10: cost = 600000000;
				case 11: cost = 50000000;
				case 12: cost = 60000000;
			}
			if(!type && cost != 25000)
			{
				if(PI[playerid][pMoney] < cost) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				GiveMoney(playerid, -cost);
			}
			else if(!type && cost == 25000)
			{
				if(GetInvCount(playerid, 1203) < cost) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно BTC (Bitcoin)!");
				InvAdd(playerid, 1203, -cost);
			}
			else
			{
				if(PI[playerid][pVirMoney] < cost) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно az монет. Вы можете пополнить свой баланс [/donate]");
				GiveDonate(playerid, -cost);
			}
			if(list < 11) 
			{
				PI[playerid][pImprovement][list] = true;
				str_1[0] = EOS;
				for(new i; i < 11; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pImprovement][i]);
				UpdatePlayerDataStr(playerid, "Improvement", str_1);
			}
			else
			{
				if(list == 11) PI[playerid][pAddSlotCar]++, UpdatePlayerDataInt(playerid, "AddSlotCar", PI[playerid][pAddSlotCar]);
				else PI[playerid][pAddSlotHouse]++, UpdatePlayerDataInt(playerid, "AddSlotHouse", PI[playerid][pAddSlotHouse]);
			}
			//
			switch(list)
			{
				case 0: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\n{cccccc}Имея это умение, Ваша машина не будет глохнуть при столкновении.", !"Закрыть", !"");
				case 1: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\n{cccccc}Ваш персонаж становится везунчиком и платит налоги на дом, и на машину в 2 раза меньше.", !"Закрыть", !"");
				case 2: 
				{
					SCMAll(-1, (str_f("<<< Игрок {FF6347}%s(%i){FFFFFF} купил улучшение {FF6347}'Бизнесмен'{FFFFFF}, теперь он может владеть 5-ми бизнесами.", PN(playerid), playerid)));
					SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь\n{cccccc}Вы сможете владеть 5-ю бизнесами.", !"Закрыть", !"");
				}
				case 3: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь\n{cccccc}Вы сможете отправлять объявления на редакцию, с любой точки карты.", !"Закрыть", !"");
				case 5: 
				{
			        SCMAll(-1,(str_f("<<< Игрок {FF6347}%s(%i){FFFFFF} купил улучшение {FF6347}'Больше недвижимости'{FFFFFF}, теперь он может владеть 3-мя домами.", PN(playerid), playerid)));
					SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь\n{cccccc}Вы сможете владеть 4 домами.", !"Закрыть", !"");
				}
				case 6: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\n{cccccc}Вам не придется платить комиссию в банке и банкоматах.", !"Закрыть", !"");
				case 7: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\n{cccccc}купить дополнительно 7 бизнесов", !"Закрыть", !"");
				case 10: SPD(playerid, 15130, DIALOG_STYLE_MSGBOX, "", "{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\n{cccccc}Имея это улучшение, каждый PayDay вы будете получать 10 AZ-монет.\nПри Х4 PayDay AZ-монеты не начисляются", "Закрыть", "");
				case 11: SPDf(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"Закрыть", !"", "{ffffff}Вы купили один дополнительный слот транспорта за $50 000 000\n\nСейчас у вас уже куплено: {ffff00}%i слота.", PI[playerid][pAddSlotCar]);
				case 12: SPDf(playerid, 15130, DIALOG_STYLE_MSGBOX, !"", !"Закрыть", !"", "{ffffff}Вы купили один дополнительный слот дома за $60 000 000\n\nСейчас у вас уже куплено: {ffff00}%i слота.", PI[playerid][pAddSlotHouse]);
			}
		}
		case 15130: Show2UpdateSettings(playerid);
		case 8004:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: SPD(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "Выбрать", "Назад");
					case 1: AddVehicleComponent(vehicleid, 1087), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0), callcmd::atune(playerid);
					case 2:
					{
						new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
						switch(Model)
						{
							case 559, 560, 561, 562, 565: SPD(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow\nСпойлер Alien\nБоковая юбка X-Flow\nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
							default: SCM(playerid, COLOR_WHITE, !"Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
						}
					}
					case 3: SPD(playerid, 8013, 2, "Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжевый\nЧерный\nБелый", "Выбрать", "Назад");
					case 4: SPD(playerid, 8014, 2, "Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
					case 5: SPD(playerid, 8015, 2, "Выбор азота", "Азот 2X\nАзот 5X\nАзот 10X", "Выбрать", "Назад");
				}
			}
			return 1;
		}
		case 800:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        PI[playerid][pNewsChat] = !PI[playerid][pNewsChat];
				        UpdatePlayerDataInt(playerid, "NewsChat", PI[playerid][pNewsChat]);
				        Show3UpdateSettings(playerid);
				    }
				    case 1:
				    {
				        PI[playerid][pRacia] = !PI[playerid][pRacia];
				        UpdatePlayerDataInt(playerid, "Racia", PI[playerid][pRacia]);
				        Show3UpdateSettings(playerid);
				    }
				    case 2:
				    {
						PI[playerid][pDepChat] = !PI[playerid][pDepChat];
						UpdatePlayerDataInt(playerid, "DepChat", PI[playerid][pDepChat]);
				        Show3UpdateSettings(playerid);
				    }
				    case 3:
				    {
						PI[playerid][pAdmAction] = !PI[playerid][pAdmAction];
						UpdatePlayerDataInt(playerid, "AdmAction", PI[playerid][pAdmAction]);
				        Show3UpdateSettings(playerid);
				    }
                    case 4:
				    {
                        if(PI[playerid][pMember]!=TEAM_LSPD && PI[playerid][pMember]!=TEAM_RCPD && PI[playerid][pMember]!=TEAM_LVPD && PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_SFPD) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Эта возможность доступна только полицейским!");
						PI[playerid][pKillShow] = !PI[playerid][pKillShow];
						UpdatePlayerDataInt(playerid, "KillShow", PI[playerid][pKillShow]);
				        Show3UpdateSettings(playerid);
				    }
                    case 5:
				    {
						if(PI[playerid][pVIP][0] != 5) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Эта функция доступна только для владельцев Titan VIP!");
						PI[playerid][pVipChat] = !PI[playerid][pVipChat];
						UpdatePlayerDataInt(playerid, "VipChat", PI[playerid][pVipChat]);
                        Show3UpdateSettings(playerid);
				    }
                    case 6:
				    {
						if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не состоите в семье!");
						PI[playerid][pFamilyChat] = !PI[playerid][pFamilyChat];
						UpdatePlayerDataInt(playerid, "FamilyChat", PI[playerid][pFamilyChat]);
                        Show3UpdateSettings(playerid);
				    }
				    case 7: {
						PI[playerid][pRespawnChat] = !PI[playerid][pRespawnChat];
						UpdatePlayerDataInt(playerid, "RespawnChat", PI[playerid][pRespawnChat]);
						Show3UpdateSettings(playerid);
				    }
				}
			}
		}
	   	case 722:
	    {
     		if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 600, 2, !"Выберите действие", !"{B03131}[1]{FFFFFF} Моя статистика\n{B03131}[2]{FFFFFF} Меню автомобиля\n{B03131}[3]{FFFFFF} Меню дома\n{B03131}[4]{FFFFFF} Меню бизнеса\n{B03131}[5]{FFFFFF} Меню лидера\n{B03131}[6]{FFFFFF} Улучшения\n{B03131}[7]{FFFFFF} Мои лицензии\n{B03131}[8]{FFFFFF} Мой паспорт\n{B03131}[9]{FFFFFF} Квесты\n{B03131}[10]{FFFFFF} Татурировки\n{B03131}[11]{FFFFFF} Меню семьи\n{B03131}[12]{FFFFFF} Сменить Non-RP Nick", !"Выбор", !"Отмена");
				case 1: SPD(playerid, 500, 2, !"Навыки", !"{B03131}[1]{FFFFFF} Скиллы\n{B03131}[2]{FFFFFF} Стили боя\n{B03131}[3]{FFFFFF} Навык фермера", !"Выбор", !"Отмена");
				case 2: callcmd::report(playerid);
				case 3: callcmd::help(playerid);
				case 4: ShowPlayerSettings(playerid);
				case 5: ShowDonate(playerid);
				case 6: callcmd::phone(playerid);
                case 7:
				{
					fmt(str_q, "SELECT * FROM `namehistory` WHERE `nh_owner` = '%i' LIMIT 1", PI[playerid][pID]);
					mysql_tquery(mysql, str_q, "PNameStore", "is", playerid,PN(playerid));
				}
				case 8: CheckPunish(playerid,playerid);
				case 9: CheckVipPlayers(playerid);
				case 10: SPD(playerid, 9469, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите {E9FB4B}промо-код{FFFFFF} пригласившего вас человека!", "Ввод", "Назад");
				case 11:
				{
					str_1[0] = EOS, f(str_1,sizeof(str_1), "SELECT * FROM `promo` WHERE `pID` = '%i' LIMIT 1", PI[playerid][pID]);
            		mysql_tquery(mysql, str_1, "CheckPromo", "i", playerid);
				}
				case 12: ShowReferalsInviteTD(playerid);
			}
	    }
    	case 9469: //no
        {
            if(!response) return callcmd::menu(playerid);
            if(!GetString(PI[playerid][pPromo],"0")) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}Вы уже активировали промокод ютубера!");
			if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 15) return SCM(playerid, -1, !"error DSI");
			SetPVarString(playerid, !"PromoCode", inputtextsave);
            str_1[0] = EOS, f(str_1,sizeof(str_1), "{FFFFFF}Вы действительно хотите использовать промо-код {D2772C}%s{FFFFFF}?",inputtextsave);
			SPD(playerid, 9476, DIALOG_STYLE_MSGBOX, !"", str_1, !"Выбрать", !"Отмена");
        }
       	case 9476: //no
        {
            if(!response) return callcmd::menu(playerid);
			new lvl,money = 100000;
			str_1[0] = EOS, GetPVarString(playerid, !"PromoCode", str_1, 15);
			mysql_queryf_fix(mysql, "SELECT * FROM `promo` WHERE `name` LIKE '%s' LIMIT 1",true, str_1);
			if(cache_num_rows())
			{
				cache_get_int(0, !"lvl", lvl);
				money = money*lvl;
				SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы активировали промокод %s и получили %i AZ Coins",str_1,money);
				GiveDonate(playerid,money);
				mysql_pqueryf(mysql, "UPDATE `promo` SET `Used`=`Used`+1 WHERE `pID`='%i' LIMIT 1;", PI[playerid][pID]);
				SetString(PI[playerid][pPromo], str_1), UpdatePlayerDataStr(playerid, "Promo", str_1);
				DeletePVar(playerid, !"PromoCode");
			}
			else SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}Промокод не найден!");
			cache_delete(result1);
        }
    	case 9470: //no
        {
            if(!response) return callcmd::menu(playerid);
		    static name[MAX_PLAYER_NAME];
		    SetString(name, PN(playerid));
           	for(new i=1; name[i]; i++)
			{
				if('А' <= name[i-1] <= 'я' || 'A' <= name [i-1] <= 'z' )
				name[i-1] = tolower(name[i-1]);
			}
			str_1[0] = EOS, f(str_1,sizeof(str_1), "%i", randomEx(0,1000));
			strcat(name,str_1,MAX_PLAYER_NAME+5);
			strins(name, "#", 0);
			SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно создали собственный промо-код {73B461}%s{FFFFFF}. Сообщите его вашим друзьям!",name);
			mysql_tqueryf(mysql, "INSERT INTO `promo` (`name`,`lvl`,`money`,`used`,`pID`) VALUES ('%s','1','0','0','%i')", name, PI[playerid][pID]);
			SPD(playerid, 9463, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Любой игрок может ввести ваш промо-код в личном меню,\n{FFD476}(/mm > Промо-код){FFFFFF} если уровень игрока\nсоответствует требованиям вашего промо-кода, то игрок\nполучит бонус, вы в свою очередь будете получать\nпроцент от доната игрока в виде {FFD476}реферальных монет{FFFFFF}\n\n{D2772C}Уровень - {FFFFFF}Уровень промо-кода, при повышении которого,\n\
			повышается бонус при использовании, процент с доната\nна максимальном (10) уровне снижается требование по\nуровню игрока с 6 до 5\n\n{D2772C}Бонус при использовании - {FFFFFF}деньги, который получит\nигрок после активации промо-кода, сумма бонуса зависит\nот уровня вашего промо-кода.\n\n{D2772C}Требования по уровню игрока - {FFFFFF}уровень, с которого\nигрок сможет активировать промо-код.\n\n\
			{D2772C}Реферальные монеты - {FFFFFF}Общая сумма полученных монет\nот доната игроков, активировавших ваш промо-код\n\n{D2772C}Позиция в рейтинге{FFFFFF} - в первую очередь зависит от\n{FFD476}уровня промо-кода{FFFFFF} потом от {FFD476}количество активаций{FFFFFF}\nи в конце от {FFD476}баланса реферальных монет{FFFFFF}", !"Выбрать", !"Назад");
        }
        case 9464:
        {
            if(!response) return callcmd::menu(playerid);
            switch(listitem)
            {
                case 0:
				{
					new name[MAX_PLAYER_NAME+6],lvl;
					mysql_queryf_fix(mysql, "SELECT * FROM `promo` WHERE `pID` = '%i' LIMIT 1",true, PI[playerid][pID]);
					if(cache_num_rows())
					{
					    cache_get_string(0, !"name", name);
						cache_get_int(0, !"lvl", lvl);
		    			str_1[0] = EOS, f(str_1,sizeof(str_1), "{FFFFFF}Промо-код: {D2772C}%s{FFFFFF}   Уровень: {D2772C}%i из 10",name,lvl);
						SPD(playerid, 9465, DIALOG_STYLE_INPUT, str_1, !"{FFFFFF}Изменить промо-код\n{FFFFFF}Вы можете изменить свой промо-код за {FFD476}AZ Coins{FFFFFF}\nУсловия изменения:\n1. Количество букв\n\tот 3 до 5 - {FFD476}250 AZ Coins{FFFFFF}\n\tот 6 до 8 - {FFD476}100 AZ Coins{FFFFFF}\n\tот 9 до 24 - {FFD476}бесплатно{FFFFFF}\n2. Использование русской раскладки {FFD476}+ 50 AZ Coins{FFFFFF}\n3. Разрешено использование цифр (совместно с буквами)\n4. Запрещено использовать спец. символы (_ @ $ и т.д)\n5. Запрещено использовать пробел!\n\nВыбранный промо-код будет преобразован в хэштег:\n{C9BC8D}FRANZESCO  ->  #franzesco\n[SC]Mason  ->  #scmason\n#SCMason01  ->  #scmason01\nФермер  ->  #фермер", !"Выбрать", !"Назад");
					}
					cache_delete(result1);
				}
				case 1:
				{
    				new name[MAX_PLAYER_NAME+6],lvl;
					mysql_queryf_fix(mysql, "SELECT * FROM `promo` WHERE `pID` = '%i' LIMIT 1",true, PI[playerid][pID]);
					if(cache_num_rows())
					{
					    cache_get_string(0, !"name", name);
						cache_get_int(0, !"lvl", lvl);
		    			str_1[0] = EOS, f(str_1,sizeof(str_1), "{FFFFFF}Промо-код: {D2772C}%s{FFFFFF}   Уровень: {D2772C}%i из 10",name,lvl);
		    			f(str_2,sizeof(str_2), "%s1 Уровень\t{FFD476}Бонус: $100000, 2.00% от доната в реферальные монеты\n\t\t\t{C9BC8D}Стоимость: 1000 AZ Coins\n\n\
						%s2 Уровень\t{FFD476}Бонус: $200000, 2.00% от доната в реферальные монеты\n\t\t\tТребования: 5 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s3 Уровень\t{FFD476}Бонус: $300000, 2.50% от доната в реферальные монеты\n\t\t\tТребования: 10 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s4 Уровень\t{FFD476}Бонус: $400000, 2.50% от доната в реферальные монеты\n\\t\t\tТребования: 20 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s5 Уровень\t{FFD476}Бонус: $500000, 3.00% от доната в реферальные монеты\n\t\t\tТребования: 40 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s6 Уровень\t{FFD476}Бонус: $600000, 3.00% от доната в реферальные монеты\n\t\t\tТребования: 80 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s7 Уровень\t{FFD476}Бонус: $700000, 4.00% от доната в реферальные монеты\n\t\t\tТребования: 100 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s8 Уровень\t{FFD476}Бонус: $800000, 4.00% от доната в реферальные монеты\n\t\t\tТребования: 125 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s9 Уровень\t{FFD476}Бонус: $900000, 5.00% от доната в реферальные монеты\n\t\t\tТребования: 150 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n\
						%s10 Уровень\t{FFD476}Бонус: $1000000, 5.00% от доната в реферальные монеты\n\t\t\tТребования: 200 использования промо-кода\n\t\t\tСтоимость: 1000 AZ Coins\n\n",
						( lvl >= 1 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 2 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 3 ) ? ("{D2772C}") : ("{74705D}"),
						( lvl >= 4 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 5 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 6 ) ? ("{D2772C}") : ("{74705D}"),
						( lvl >= 7 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 8 ) ? ("{D2772C}") : ("{74705D}"),( lvl >= 9 ) ? ("{D2772C}") : ("{74705D}"),
						( lvl >= 10 ) ? ("{D2772C}") : ("{74705D}"));
					}
					cache_delete(result1);
				}
			}
		}
        case 9463: //yes
        {
            if(!response) return callcmd::menu(playerid);
			str_1[0] = EOS, f(str_1,sizeof(str_1), "SELECT * FROM `promo` WHERE `pID` = '%i' LIMIT 1", PI[playerid][pID]);
    		mysql_tquery(mysql, str_1, "SelectPromo", "i", playerid);
        }
		case 666:
	    {
	        if(response)
	        {
	            new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
				{
			 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
			 		return 1;
				}
	            SCM(playerid,0xFF9900FF,!"[Информация] {FFFFFF}Отправляйтесь к разгрузке вагонов");
	            InJob[playerid] = 1;
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 50);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
			}
	    }
		case 142:
		{
		    if(response) return SPD(playerid,0,0,!"Ошибочка",!"{FFFFFF}Данная функция временно не доступна","Закрыть","");
			else ShowPlayerSettings(playerid);
		}
		case 143:
		{
		    if(response)
		    {
                if(OrgInfo[listitem+1][oLeaderUID] == -1)
		        {
					mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Leader` = '%i',`Member` = '0',`Rank` = '13' WHERE `NickName` = '%s' LIMIT 1", listitem+1,player_Global_Int[playerid][3]);
		            OrgInfo[listitem+1][oLeaderUID] = player_Global_Int[playerid][3];
		            SCMf(playerid,-1,"Вы назначили игрока %s лидером организации '%s'",player_Global_Int[playerid][3],global_OrgInfo[listitem+1][g_oName]);
		            SaveOrg(listitem+1);
		        }
          		else
		        {
		            if(OrgInfo[listitem+1][oLeaderUID] != -1)
		            {
						str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\
                            Ошибка! У этой организации уже есть лидер!\n\
                            Текущий лидер: {B83434}%i(UID){FFFFFF}\n\
                            Хотите его снять с лидерства и назначить лидером %s",OrgInfo[listitem+1][oLeaderUID],PN(player_Global_Int[playerid][3]));
						SPD(playerid,144,0,"Снять",str_1,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SCM(playerid, COLOR_GREY, !"Этот человек уже лидер этой организации");
		        }
		    }
		    return 1;
		}
		case 144:
		{
		    if(response)
		    {
		        new leader = MLeader[playerid];
		        new unleader;
          		foreach_player(i)
		        {
	            	if(PI[i][pID] == OrgInfo[leader][oLeaderUID])
	            	{
					    PI[i][pMember] =
                        PI[i][pRank] =
					    PI[i][pDCTime] = 0;
					    UpdatePlayerDataInt(i, "DCTime", 0);
					    UpdatePlayerDataInt(i, "Member", 0);
					    UpdatePlayerDataInt(i, "Rank", 0);
					    SCM(i, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
					    PI[i][pRank] = 0;
					    UpdatePlayerDataInt(i, "Rank", 0);
					    SetBumSkin(i);
					    SCMf(i, -1, " А: %s выгнал вас из организации", PN(playerid));
					    SendAdminsMessagef(-1, " А: %s выгнал игрока %s из должности лидерства", PN(playerid), PN(i));
					    TeamDuty{i} = false;
					   	//PlayerSpawn(i);
					   	unleader = 1;
					   	break;
	                }
	            }
		        if(!unleader) mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Member` = '0', `Rank` = '0', `Skin` = '79' WHERE `ID` = '%i' LIMIT 1", OrgInfo[leader][oLeaderUID]);
		        OrgInfo[leader][oLeaderUID] = player_Global_Int[playerid][3];
		        mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Member` = '%i', `Rank` = '10', `Job` = '0' WHERE `ID` = '%i' LIMIT 1", listitem + 1, OrgInfo[leader][oLeaderUID]);
		        SCMf(playerid, -1, "Вы назначили игрока %s лидером организации '%s'", player_Global_Int[playerid][3], global_OrgInfo[leader][g_oName]);
		        SaveOrg(leader);
		    }
		    return 1;
		}
		case 147:
		{
		    if(response)
		    {
          		PassRegSex[playerid] = listitem + 1;
          		SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
		    }
		}
		case 148:
		{
		    if(response)
	        {
	            new day2,month2,year2;
                if(sscanf(inputtextsave, "p</>iii", day2, month2, year2))
	            {
	                return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
	            }
	            new check = global_year - year2;
				if( check > 50 || check < 1 || day2 > GetMonthDays(year2, month2) || day2 < 1 || month2 > 12 || month2 < 1 )
				{
				    return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
				}
				if(check<18)return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n{FFFFFF}Вы должны быть старше 18 лет!\n\n", "Выбор", "Отмена");
				if(month2 > global_month || (month2 == global_month && day2 > global_day) ) check --;
                PI[playerid][pSex] = PassRegSex[playerid];
                UpdatePlayerDataInt(playerid, "Sex", PI[playerid][pSex]);
				new city = GetPlayerVirtualWorld(playerid) + 1;
				if(city < 1) city = 1;
				else if(city > 3) city = 3;
		        PassInfo[playerid][psDateBirth][0] = day2;
		        PassInfo[playerid][psDateBirth][1] = month2;
		        PassInfo[playerid][psDateBirth][2] = year2;
		        PassInfo[playerid][psDate][0] = global_day;
		        PassInfo[playerid][psDate][1] = global_month;
		        PassInfo[playerid][psDate][2] = global_year;
				PassInfo[playerid][psNumber] = 100000 + random(900000);
				PassInfo[playerid][psSeria] = 1000 + random(9000);
				OnRegPass(playerid);
				SendBotMessage(playerid,!"Работник мэрии:\n{FFFFFF}Вот, держите. Вы, кстати на фотографии хорошо получились.\nИспользуйте /showpass чтобы показать паспорт!");
	        }
		}
		case 25239:
		{
			if(!response) return ShowPlayerSettings(playerid);
			if(PI[playerid][pLevelWalk] < StyleWalkInfo[listitem][count_style]) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}У вас не хватает навыков. (обучиться можно в школе танцев: /gps > Разное > Школа танцев)");
			PI[playerid][pStyleWalk] = listitem+1;
			UpdatePlayerDataInt(playerid, "StyleWalk", PI[playerid][pStyleWalk]);
		}
		case 25211:
		{
			if(!response) return 1;
			if(listitem == 3) return SPD(playerid, 25214, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}Когда игрок сворачивает игру, он находится в состоянии AFK, в этот момент над его\nперсонажем отображается текст, который отображает его статус и время как долго он отсутствует\n- отошел {73B461}( 00:00 ){FFFFFF}\n- Кушает {69B1E4}( 5:00+ ){FFFFFF}\n- Вышел на улицу {EC7878}( 50:00+ ){FFFFFF}\nВы можете изменить отображаемый текст на который пожелаете.\n{DD4A48}Если он будет не соответствовать правилам, администрация сервера может очистить\nваши настройки и наложить запрет на изменение!\n\n", !"Отмена", !"");
			else 
			{
				player_Global_Int[playerid][19] = listitem;
				switch(listitem)
				{
					case 0: if(!GetString(PI[playerid][pPrefixAFK_0], "отошел {73B461}(s)")) return SPD(playerid, 25212, DIALOG_STYLE_LIST, !"Информация", !"[1] Изменить\n[2] Сбросить", !"Выбрать", !"Назад");
					case 1: if(!GetString(PI[playerid][pPrefixAFK_1], "Кушает {69B1E4}(5:00+)")) return SPD(playerid, 25212, DIALOG_STYLE_LIST, !"Информация", !"[1] Изменить\n[2] Сбросить", !"Выбрать", !"Назад");
					case 2: if(!GetString(PI[playerid][pPrefixAFK_2], "Вышел на улицу {EC7878}(50:00+)")) return SPD(playerid, 25212, DIALOG_STYLE_LIST, !"Информация", !"[1] Изменить\n[2] Сбросить", !"Выбрать", !"Назад");
				}
				SPD(playerid, 25213, DIALOG_STYLE_INPUT, !"Информация", !"{FFFFFF}Введите ваш новый вариант текста над головой\n\n{E9DAC1}- Вы можете использовать символ %s для отображения времени!\n{FFFFFF}Например: \"отошел ( %s )\" -> \"отошел ( %s )\"\n{E9DAC1}- Вы можете использовать цветовую палитру RGB, установите перед текстом {32СD32}\nчто будет соответствовать зелёному цвету (R - {e4cba0}32{E9DAC1}, G - {e4cba0}CD{E9DAC1}, B - {e4cba0}32{E9DAC1}).\n{FFFFFF}Например: \"{69В1E4}ушел в себя, {32СD32}вернусь не скоро{FFFFFF}\" -> \"{69B1E4}ушел в себя, {32CD32}вернусь не скоро{FFFFFF}\"", !"Выбрать", !"Назад");
			}
		}
		case 25212:
		{
			if(!response) return 1;
			if(!listitem) SPD(playerid, 25213, DIALOG_STYLE_INPUT, !"Информация", !"{FFFFFF}Введите ваш новый вариант текста над головой\n\n{E9DAC1}- Вы можете использовать символ %s для отображения времени!\n{FFFFFF}Например: \"отошел ( %s )\" -> \"отошел ( %s )\"\n{E9DAC1}- Вы можете использовать цветовую палитру RGB, установите перед текстом {32СD32}\nчто будет соответствовать зелёному цвету (R - {e4cba0}32{E9DAC1}, G - {e4cba0}CD{E9DAC1}, B - {e4cba0}32{E9DAC1}).\n{FFFFFF}Например: \"{69В1E4}ушел в себя, {32СD32}вернусь не скоро{FFFFFF}\" -> \"{69B1E4}ушел в себя, {32CD32}вернусь не скоро{FFFFFF}\"", !"Выбрать", !"Назад");
			else
			{
				switch(player_Global_Int[playerid][19])
				{
					case 0: SetString(PI[playerid][pPrefixAFK_0], "отошел {73B461}(s)"),mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_0` = 'отошел {73B461}(s)' WHERE `ID` = '%i' LIMIT 1;", PI[playerid][pID]);
					case 1: SetString(PI[playerid][pPrefixAFK_1], "Кушает {69B1E4}(5:00+)"),mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_1` = 'Кушает {69B1E4}(5:00+)' WHERE `ID` = '%i' LIMIT 1;", PI[playerid][pID]);
					case 2: SetString(PI[playerid][pPrefixAFK_2], "Вышел на улицу {EC7878}(50:00+)"),mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_2` = 'Вышел на улицу {EC7878}(50:00+)' WHERE `ID` = '%i' LIMIT 1;", PI[playerid][pID]);
				}
			}
		}
		case 25213:
		{
			if(!response) return 1;
			if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 64) return SPD(playerid, 25213, DIALOG_STYLE_INPUT, !"Информация", !"{FFFFFF}Введите ваш новый вариант текста над головой\n\n{E9DAC1}- Вы можете использовать символ %s для отображения времени!\n{FFFFFF}Например: \"отошел ( %s )\" -> \"отошел ( %s )\"\n{E9DAC1}- Вы можете использовать цветовую палитру RGB, установите перед текстом {32СD32}\nчто будет соответствовать зелёному цвету (R - {e4cba0}32{E9DAC1}, G - {e4cba0}CD{E9DAC1}, B - {e4cba0}32{E9DAC1}).\n{FFFFFF}Например: \"{69В1E4}ушел в себя, {32СD32}вернусь не скоро{FFFFFF}\" -> \"{69B1E4}ушел в себя, {32CD32}вернусь не скоро{FFFFFF}\"", !"Выбрать", !"Назад");
			str_1[0] = EOS;
			switch(player_Global_Int[playerid][19])
			{
				case 0:
				{
					if(GetString(PI[playerid][pPrefixAFK_0], "отошел {73B461}(s)")) SetString(str_1, "отошел {73B461}(%%s)");
					else SetString(str_1, PI[playerid][pPrefixAFK_0]);
					SetString(PI[playerid][pPrefixAFK_0], inputtext);
					mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_0` = '%s' WHERE `ID` = '%i' LIMIT 1;", inputtextsave, PI[playerid][pID]);
				}
				case 1: 
				{
					if(GetString(PI[playerid][pPrefixAFK_1], "Кушает {69B1E4}(5:00+)")) SetString(str_1, "Кушает {69B1E4}(5:00+)");
					else SetString(str_1, PI[playerid][pPrefixAFK_1]);
					SetString(PI[playerid][pPrefixAFK_1], inputtext);
					mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_1` = '%s' WHERE `ID` = '%i' LIMIT 1;", inputtextsave, PI[playerid][pID]);
				}
				case 2:
				{
					if(GetString(PI[playerid][pPrefixAFK_2], "Вышел на улицу {EC7878}(50:00+)")) SetString(str_1, "Вышел на улицу {EC7878}(50:00+)");
					else SetString(str_1, PI[playerid][pPrefixAFK_2]);
					SetString(PI[playerid][pPrefixAFK_2], inputtext);
					mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `PrefixAFK_2` = '%s' WHERE `ID` = '%i' LIMIT 1;", inputtextsave, PI[playerid][pID]);
				}
			}
			new one = strfind(inputtext, "s");
			str_2[0] = EOS, SetString(str_2, inputtext);
			if(one != -1)
			{
				strdel(str_2, one, one+1);
				str_d[0] = EOS, f(str_d, sizeof(str_d), "%s", "%%s");
				strins(str_2, str_d, one, sizeof str_2);
			}
			SCMf(playerid, 0x9ACD32FF, "\"%s\" {9ACD32}изменено на \"%s\"",str_1,str_2);
			SPD(playerid, 25214, DIALOG_STYLE_MSGBOX, !"Поздравляем!", !"{E9DAC1}Вы успешно изменили текст над головой во время AFK!", !"Назад", !"");
		}
		case 8918:
		{
			if(response) GoogleSteep(playerid, 1);
		}
		case 8919:
		{
			if(response) GoogleSteep(playerid, 2);
			else GoogleSteep(playerid, 2, 1);
		}
		case 8920:
		{
			if(response)
			{
				GoogleSteep(playerid, 3);
				static tempcodeauth[17];
				tempcodeauth[0] = EOS;
				for(new i; i < 17; i ++) strcat(tempcodeauth, randomcode32[random(sizeof(randomcode32))]);
				SCM(playerid, -1, tempcodeauth);
				SetString(GoogleCodeTemp[playerid], tempcodeauth);
				SPDf(playerid, 8921, DIALOG_STYLE_MSGBOX, !"3-тий шаг", !"Дальше", !"Отмена", "{FFFFFF}\n\nТеперь выбираем 2-ой пункт (Ввести код вручную).\nВ появившемся окошке в 1-вом поле вводим свой ник,\nа во втором этот код:\n\n{F55F5F}%s{FFFFFF} и жмем подтвердить.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", tempcodeauth);
			}
			else GoogleSteep(playerid, 3, 1);
		}
		case 8921:
		{
			if(response) GoogleSteep(playerid, 4);
			else GoogleSteep(playerid, 4, 1);
		}
		case 8922:
		{
			if(response)
			{
				if(GoogleAuthenticatorCode(GoogleCodeTemp[playerid], global_time) == strval(inputtext))
				{
					GoogleSteep(playerid, 0);
					SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"Успешно", !"Закрыть", !"", "{FFFFFF}\n\nВсе получилось! Вы успешно подключили Google Authenticator к вашему аккаунту!\nТеперь при каждой авторизации на сервере вы должны вводить код, который будет постоянно\nобновляться у вас в телефоне. Если вы удалите приложение или удалите\nаккаунт с приложения, вы потеряете доступ к аккаунту. Чтобы этого избежать, запишите {FC4C4C}%s{FFFFFF}\nчтобы потом заново подключить обновление кода для входа на сервер, используя гайд.\nЕсли вы не записали код и не имеете возможности получить код для авторизации,\nвы можете отключить проверку при авторизации в личном кабинете на сайте\nиспользуя почту (Если она у вас правильно привязана).\n\n", GoogleCodeTemp[playerid]);
					SCMf(playerid, COLOR_VALIK, "Обязательно запишите код: {FFFFFF}%s{73B461} или сделайте скриншот F8!", GoogleCodeTemp[playerid]);
					SCM(playerid, -1, !"При потере телефона или неуклюжести, он вам понадобится.");
					PI[playerid][pGoogle] = 1;
					UpdatePlayerDataInt(playerid, "Google", PI[playerid][pGoogle]);
					SetString(PI[playerid][pGoogleKey], GoogleCodeTemp[playerid]);
					UpdatePlayerDataStr(playerid, "GoogleKey", PI[playerid][pGoogleKey]);
				}
				else SPD(playerid, 8922, DIALOG_STYLE_INPUT, !"4-тый шаг", !"{FFFFFF}\n\nЕсли вы правильно ввели код, то теперь\nу вас в приложении будет обновляться другой код, который\nвы будете использовать для авторизации на сервере.\n(Код, который на компютере, это пример!)\n\n{FFFFFF}Теперь введите код с вашего телефона в этот диалог.\nЕсли он совпадет, значит все получилось!\n\n\n{FF0000}Неверный код!\n\n", !"Дальше", !"Отмена");
			}
			else GoogleSteep(playerid, 0);
		}
		case 8923:
		{
			if(response)
			{
				if(GoogleAuthenticatorCode(PI[playerid][pGoogleKey], global_time) == strval(inputtext))
				{
					SPDf(playerid, 8924, DIALOG_STYLE_LIST, !"", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
					AcceptGoogle[playerid] = true;
				}
				else SPD(playerid, 8923, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nВведите в строку код из приложения {F1FC4C}Google Authenticator{FFFFFF} у вас на телефоне\nили из дополнения Google, для подтверждения аккаунта.\n\n{FC4C4C}Неверный код!\n\n", !"Принять", !"Отмена");
			}
		}
		case 8924:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: SPDf(playerid, 8924, DIALOG_STYLE_LIST, !"", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
					case 1:
					{
						new Cache:result = mysql_query(mysql, !"SELECT ID FROM `"TABLE_ACCOUNTS"` WHERE `Google` > 0");
						SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Понял", !"", "{FFFFFF}\n\nПриложение {F1FC4C}Google Authenticator{FFFFFF} уже подключили {F1FC4C}%i{FFFFFF} игроков!\n\n", cache_num_rows());
						cache_delete(result);

					}
					case 2:
					{
						AcceptGoogle[playerid] = false;
						PI[playerid][pGoogle] = 0;
						UpdatePlayerDataInt(playerid, "Google", PI[playerid][pGoogle]);
						SetString(PI[playerid][pGoogleKey], "");
						UpdatePlayerDataStr(playerid, "GoogleKey", PI[playerid][pGoogleKey]);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nВы успешно отключили {F1FC4C}Google Authenticator{FFFFFF} от вашего аккаунта.\nРекомендуем вернуть его, чтобы обезопастить игровой аккаунт.\n\n", !"Понял", !"");
					}
				}
			}
		}
	 	case 156:
	 	{
	 	    if(response)
	 	    {
	 	        new biz = ShowPBiz[playerid];
	 	        if(biz != -1)
	 	        {
					static Text[50];
				    switch(BizInfo[biz][bState])
					{
					    case 6: Text = "Изменить стоимость продуктов/товаров и бензина";
						case 7,0,1,2: Text = "Изменить стоимость продуктов/товаров";
						case 15..17: Text = "Изменить стоимость бочки с нефьтю";
					    default: Text = "{B71B1B}Недоступно для вашего бизнеса{FFFFFF}";
				    }
				    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					{
					    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0) str_1[0] = EOS, f(str_1, sizeof(str_1),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку\n{CAD715}Скупать продукты у развозчиков\n{C85151}Отозвать заказ на скупку продуктов",Text);
					    else str_1[0] = EOS, f(str_1, sizeof(str_1),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку\n{CAD715}Скупать продукты у развозчиков",Text);
					}
				    else str_1[0] = EOS, f(str_1, sizeof(str_1),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку",Text);

	 	        	SPD(playerid,157,2,"BizInfo",str_1,"Выбор","Отмена");
				}
			 }
			 else callcmd::bizinfo(playerid);
		}
		case 7707:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
		        extract inputtext -> new objid; else return SCM(playerid, -1, !"Вы неправильно ввели ид игрока");
		        if(!IsPlayerConnectEx(objid)) return SCM(playerid,COLOR_RED,!"Игрок не найден");
		        if(objid == playerid) {
		            BizInfo[biz][bZam] = -1;
					SCM(playerid, COLOR_RED, !"Вы успешно сняли заместителя.");
					UpdateDataInt("businesses", "Zam", BizInfo[biz][bZam], BizInfo[biz][bID]);
					return 1;
				}
				if(ProxDetectorS(3.0, playerid, objid, 1))
				{
			        if(GetPlayerPeakBiz(objid))
					{
			            BizInfo[biz][bZam] = PI[objid][pID];
						SCMf(playerid, COLOR_VALIK, "<< {FFFFFF}Вы успешно назначили игрока %s, своим заместителем!",PN(objid));
						SCMf(objid, COLOR_VALIK,"Вам выдали ключи от бизнеса №%i",biz);
						UpdateDataInt("businesses", "Zam", BizInfo[biz][bZam], BizInfo[biz][bID]);
					}
					else return SCM(playerid, -1, !"У игрока нет места для бизнеса.");
				}
				else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
		    }
		}
		case 7708:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				extract inputtextsave -> new string:description[32];
				if(!strlen(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
				if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 32) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 3, максимальное - 32");
				SetString(BizInfo[biz][bDescription], inputtext);
				SCM(playerid, COLOR_VALIK, !"[Информация]: Вы успешно изменили название бизнеса!");
				UpdateBiz(biz);
				UpdateDataStr("businesses", "Description", BizInfo[biz][bDescription], BizInfo[biz][bID]);
		    }
		}
		case 7709:
		{
		    if(response)
			{
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
				extract inputtextsave -> new string:description[32];
				if(!strlen(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
				if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 32) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 3, максимальное - 32");
				SetString(HouseInfo[house][hDescription], inputtext);
				SCM(playerid, COLOR_VALIK, !"[Информация]: Вы успешно изменили название дома!");
				UpdateHouse(house);
				UpdateDataStr("houses", "Description", HouseInfo[house][hDescription], HouseInfo[house][hID]);
		    }
		}
		case 9029:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				str_1[0] = EOS;
		        switch(listitem)
		        {
		            case 0:
		            {
		                BizInfo[biz][bLock] = !BizInfo[biz][bLock];
						callcmd::bizinfo(playerid);
		            }
		            case 1:
					{
					    if(BizInfo[biz][bZam] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
				 	    SPD(playerid, 7707, 1, !"", !"\n\nДля того чтобы назначить нового заместителя необходимо\n\
	 					ввести в строку ниже, ид человека которого хотите взять управляющим.\n\n\
				 		{CD5C5C}Обратите внимание, он будет иметь абсолютно те-же возможности что и у вас!\nЧто бы снять заместителя, введите свой ID.\n\n", "Ок", "Отмена");
					}
					case 2:
					{
						str_1 = "День\tПрибыль\n";
						str_1[0] = EOS, f(str_1, sizeof(str_1),"%s{FFFFFF}Понедельник\t{73B461}%i$\n{FFFFFF}Вторник\t{73B461}%i$\n{FFFFFF}Среда\t{73B461}%i$\n{FFFFFF}Четверг\t{73B461}%i$\n{FFFFFF}Пятница\t{73B461}%i$\n{FFFFFF}Суббота\t{73B461}%i$\n{FFFFFF}Воскресенье\t{73B461}%i$",str_1,BizInfo[biz][bDayOfWeak][0],BizInfo[biz][bDayOfWeak][1],BizInfo[biz][bDayOfWeak][2],BizInfo[biz][bDayOfWeak][3],BizInfo[biz][bDayOfWeak][4],BizInfo[biz][bDayOfWeak][5],BizInfo[biz][bDayOfWeak][6]);
  						SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"",str_1,"Окей","");
					}
					case 3:
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не доступно для вашего бизнеса!");
					}
					case 4:
					{
					    if(BizInfo[biz][bZam] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
	 					str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Текущее название: {FFFF00}%s\n\n\
	 					{C0C0C0}Укажите название для вашего бизнеса (от 3 до 32 символов)",BizInfo[biz][bDescription]);
 						SPD(playerid,7708,1,"",str_1,"Изменить", "Отмена");
					}
					case 5:
					{
					    if(BizInfo[biz][bZam] != PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не являетесь заместителем!");
				    	BizInfo[biz][bZam] = -1;
						UpdateDataInt("businesses", "Zam", BizInfo[biz][bZam], BizInfo[biz][bID]);
				    	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно покинули пост заместителя.");
					}
		        }
		    }
			else callcmd::bizinfo(playerid);
		}
		case 157:
	 	{
	 	    if(response)
	 	    {
	 	        new biz = ShowPBiz[playerid];
	 	    	if(biz == -1) return 1;
				switch(listitem)
				{
				    case 0:
				    {
						str_1 = "{9ACD32}Назначить заместителя", str_2[0] = EOS;
						str_mes[0] = EOS, requestPN(BizInfo[biz][bZam], str_mes);
				        if(BizInfo[biz][bZam] != -1) str_1[0] = EOS, f(str_1, sizeof(str_1),"Заместитель: {FF6347}%s",str_mes);
						if(BizInfo[biz][bZam] == PI[playerid][pID]) str_2 = "\n6. {F08080}Покинуть пост заместителя.";
				        str_d[0] = EOS, f(str_d,sizeof(str_d),"{FFFFFF}1. %s бизнес{FFFFFF}\n2. %s{FFFFFF}\n\
						3. {FF6347}Статистика за неделю{FFFFFF}\n4. Реклама в телефоне/GPS [{73B461} Заказать{FFFFFF}]\n5. Изменить название бизнеса\n%s",BizInfo[biz][bLock] ? ("{FF6347}Открыть") : ("{9ACD32}Закрыть"), str_1, str_2);
                        SPD(playerid,9029,2,"",str_d,"Выбор","Отмена");
				    }
				    case 1:
				    {
				        new maxcost;
						switch(BizInfo[biz][bState])
						{
						    case 0: maxcost = 15000;
						    case 1: maxcost = 15000;
						    case 2: maxcost = 15000;
						    case 3: maxcost =0;
						    case 4: maxcost = 0;
						    case 5: maxcost = 0;
						    case 6: maxcost = 50;
						    case 7: maxcost = 15000;
						    case 8: maxcost = 0;
						    case 9: maxcost =0;
						    case 15..17: maxcost = 50000;
							default: maxcost = 0;
						}
						if(!maxcost) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта функция доступна только для владельцев АЗС, 24/7, баров, закусочных и амуниций!");
					    switch(BizInfo[biz][bState])
						{
						    case 6:
							{
							    SPD(playerid, 150, DIALOG_STYLE_LIST, !"", "{FFFFFF}\
								1. Изменить стоимость 1 литра бензина\n\
								2. Изменить стоимость продуктов/товаров", !"Выбрать", !"Отмена");
							}
							case 2:
							{
					            str_1[0] = EOS, f(str_1, sizeof(str_1),"Название	Стоимость	\n\
								{FFFFFF}Чипсы\t{F0E68C}%i$\n\
								{FFFFFF}Спранк\t{F0E68C}%i$\n\
								{FFFFFF}Пиво\t{F0E68C}%i$\n\
								{FFFFFF}Телефонная книга\t{F0E68C}%i$\n\
								{FFFFFF}Скрепка\t{F0E68C}%i$\n\
								{FFFFFF} Маска\t{F0E68C}%i$\n\
								{FFFFFF}Радио\t{F0E68C}%i$\n\
								{FFFFFF}Фотоаппарат\t{F0E68C}%i$\n\
								{FFFFFF}Телефон Xiaomi Mi 8\t{F0E68C}%i$\n\
								{FFFFFF}SIM-Карта\t{F0E68C}%i$\n\
								{FFFFFF}Сигареты\t{F0E68C}%i$\n\
								{FFFFFF}Зажигалка\t{F0E68C}%i$\n\
								{FFFFFF}Удочка\t{F0E68C}%i$\n\
								{FFFFFF}Черви\t{F0E68C}%i$\n\
								{FFFFFF}Бронежилет\t{F0E68C}%i$\n\
								{FFFFFF}Яд\t{F0E68C}%i$\n\
								{FFFFFF}Аптечка\t{F0E68C}%i$\n\
								{FFFFFF}Таблетки от наркозависимости\t{F0E68C}%i$\n\
								{FFFFFF}Цветы\t{F0E68C}%i$\n",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],BizInfo[biz][bItemCost][4],
								BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6],BizInfo[biz][bItemCost][7],BizInfo[biz][bItemCost][8],BizInfo[biz][bItemCost][9],BizInfo[biz][bItemCost][10],BizInfo[biz][bItemCost][11],
								BizInfo[biz][bItemCost][12],BizInfo[biz][bItemCost][13],BizInfo[biz][bItemCost][14],BizInfo[biz][bItemCost][15],BizInfo[biz][bItemCost][16],BizInfo[biz][bItemCost][17],BizInfo[biz][bItemCost][18]);
							    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
							}
							case 0:
							{
							    format(str_1,sizeof(str_1),"Название	Стоимость	\n\
								{FFFFFF}Кастет\t{F0E68C}%i$\n\
								{FFFFFF}Бита\t{F0E68C}%i$\n\
								{FFFFFF}Катана\t{F0E68C}%i$\n\
								{FFFFFF}Парашют с краской\t{F0E68C}%i$\n\
								{FFFFFF}Дымовая Шашка\t{F0E68C}%i$\n\
								{FFFFFF}Desert Eagle\t{F0E68C}%i$\n\
								{FFFFFF}Shotgun\t{F0E68C}%i$\n\
								{FFFFFF}MP5\t{F0E68C}%i$\n\
								{FFFFFF}AK-47\t{F0E68C}%i$\n\
								{FFFFFF}M4\t{F0E68C}%i$\n\
								{FFFFFF}Country Rifle\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],
								BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6],BizInfo[biz][bItemCost][7],BizInfo[biz][bItemCost][8],BizInfo[biz][bItemCost][9],
								BizInfo[biz][bItemCost][10]);
							    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
							}
							case 1:
							{
							    str_1[0] = EOS, f(str_1, sizeof(str_1),"Название	Стоимость	\n\
								{FFFFFF}Спранк\t{F0E68C}%i$\n\
								{FFFFFF}Виски\t{F0E68C}%i$\n\
								{FFFFFF}Коньяк\t{F0E68C}%i$\n\
								{FFFFFF}Пицца\t{F0E68C}%i$\n\
								{FFFFFF}Бургер\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],BizInfo[biz][bItemCost][4]);
							    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
							}
							case 7:
							{
							    str_1[0] = EOS, f(str_1, sizeof(str_1),"Название	Стоимость	\n\
								{FFFFFF}Картофель фри\t{F0E68C}%i$\n\
								{FFFFFF}Сэндвич\t{F0E68C}%i$\n\
								{FFFFFF}Баскет\t{F0E68C}%i$\n\
								{FFFFFF}Крылышки\t{F0E68C}%i$\n\
								{FFFFFF}Салат\t{F0E68C}%i$\n\
								{FFFFFF}Курица\t{F0E68C}%i$\n\
								{FFFFFF}Комплексный обед\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6]);
							    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
							}
							case 15..17:
							{
							    str_1[0] = EOS, f(str_1, sizeof(str_1),"Название	Стоимость	\n\
								{FFFFFF}Бочка с нефьтю\t{F0E68C}%i$", BizInfo[biz][bItemCost][0]);
							    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
							}
					    }
				    }
					case 2: {
						if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Брать деньги с баланса бизнеса можно со 2-го уровня!");
						SPD(playerid,159,1,"","\n\n{FFFFFF}Введите сумму, которую хотите снять.\n\n","Ок","Отмена");
				    }
					case 3: {
						if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ложить деньги на баланса бизнеса можно со 2-го уровня!");
						SPD(playerid,173,1,"","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n","Ок","Отмена");
				    }
					case 4:
					{
					    EnableGPSForPlayer(playerid, BizInfo[biz][bEnter_X], BizInfo[biz][bEnter_Y], BizInfo[biz][bEnter_Z]);
					    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно отметили ваш бизнес в GPS.");
					}
					case 5:
					{
					    if(BizInfo[biz][bZam] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы точно хотите продать свой бизнес?\n\n{19A725}Обратите внимание что за продажу вашего бизнеса в\nгосударство вы получите полько половину от его гос. стоимости.\nБудете продавать ваш бизнес за {FFFFFF}%i${19A725} ?",BizInfo[biz][bCost]/2);
						SPD(playerid,161,0,"",str_1,"Да","Отмена");
					}
					case 6:
					{
					    if(BizInfo[biz][bZam] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
						SPD(playerid,164,1,"","{FFFFFF}Введите ид игрока и цену через запятую, без пробела.\nПример: {9ACD32}6,1000000.","Далее","Отмена");
					}
					case 7:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					    {
					        if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)return  SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже заказали продукты! Если хотите составить заказ заново, отозвите старый!");
					        str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Обратите внимание на стоимость товара где скупают развозчики! Если\nоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\nДля магазинов/баров - {51C859}%i${FFFFFF}\nДля закусочных - {51C859}%i${FFFFFF}.",GLS[27],GLS[28]);
					    	str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\nВам нужно указать количество товара и его стоимость чтобы они могли его доставить.\nНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n{CAD715}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35.\n\n%s",str_1);
							SPD(playerid,182,1,"",str_1,"Далее","Отмена");
						}
					}
					case 8:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					    {
						    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
						    {
                                BizInfo[biz][bBuyCost]=0;
                                BizInfo[biz][bNeedItem]=0;
                                UpdateDataInt("businesses", "BuyCost", BizInfo[biz][bBuyCost], BizInfo[biz][bID],"=");
                                UpdateDataInt("businesses", "NeedItem", BizInfo[biz][bNeedItem], BizInfo[biz][bID],"=");
								SCM(playerid, COLOR_GREEN, !"Вы успешно отказались от своего заказа на скупку продуктов!");
								callcmd::bizinfo(playerid);
								UpdateBiz(biz);
						    }
						}
					}
				}
	 	    }
		}
		case 151:
		{
		    if(!response) return player_Global_Int[playerid][0] = 0;
		    new biz = ShowPBiz[playerid], buy = strlen(inputtext);
		    if(sscanf(inputtext, "d", buy)) return 1;
			if(buy < 100 || buy > 15000) return 1;
			switch(player_Global_Int[playerid][0])
			{
			    case 1: BizInfo[biz][bItemCost][0] = buy;
			    case 2: BizInfo[biz][bItemCost][1] = buy;
			    case 3: BizInfo[biz][bItemCost][2] = buy;
			    case 4: BizInfo[biz][bItemCost][3] = buy;
			    case 5: BizInfo[biz][bItemCost][4] = buy;
			    case 6: BizInfo[biz][bItemCost][5] = buy;
			    case 7: BizInfo[biz][bItemCost][6] = buy;
			    case 8: BizInfo[biz][bItemCost][7] = buy;
			    case 9: BizInfo[biz][bItemCost][8] = buy;
			    case 10: BizInfo[biz][bItemCost][9] = buy;
			    case 11: BizInfo[biz][bItemCost][10] = buy;
			    case 12: BizInfo[biz][bItemCost][11] = buy;
			    case 13: BizInfo[biz][bItemCost][12] = buy;
			    case 14: BizInfo[biz][bItemCost][13] = buy;
			    case 15: BizInfo[biz][bItemCost][14] = buy;
			    case 16: BizInfo[biz][bItemCost][15] = buy;
			    case 17: BizInfo[biz][bItemCost][16] = buy;
			    case 18: BizInfo[biz][bItemCost][17] = buy;
			    case 19: BizInfo[biz][bItemCost][18] = buy;
			}
			SaveCostBiz(biz);
			player_Global_Int[playerid][0] = 0;
			switch(BizInfo[biz][bState])
			{
				case 6:
				{
				    SPD(playerid, 150, DIALOG_STYLE_LIST, !"", "{FFFFFF}\
					1. Изменить стоимость 1 литра бензина\n\
					2. Изменить стоимость продуктов", !"Выбрать", !"Отмена");
				}
				case 0:
				{
				    str_1[0] = EOS, f(str_1, sizeof(str_1),"Название	Стоимость	\n\
					{FFFFFF}Кастет\t{F0E68C}%i$\n\
					{FFFFFF}Бита\t{F0E68C}%i$\n\
					{FFFFFF}Катана\t{F0E68C}%i$\n\
					{FFFFFF}Парашют с краской\t{F0E68C}%i$\n\
					{FFFFFF}Дымовая Шашка\t{F0E68C}%i$\n\
					{FFFFFF}Desert Eagle\t{F0E68C}%i$\n\
					{FFFFFF}Shotgun\t{F0E68C}%i$\n\
					{FFFFFF}MP5\t{F0E68C}%i$\n\
					{FFFFFF}AK-47\t{F0E68C}%i$\n\
					{FFFFFF}M4\t{F0E68C}%i$\n\
					{FFFFFF}Country Rifle\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],
					BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6],BizInfo[biz][bItemCost][7],BizInfo[biz][bItemCost][8],BizInfo[biz][bItemCost][9],
					BizInfo[biz][bItemCost][10]);
				}
				case 1:
				{
				    format(str_1,sizeof(str_1),"Название	Стоимость	\n\
					{FFFFFF}Спранк\t{F0E68C}%i$\n\
					{FFFFFF}Виски\t{F0E68C}%i$\n\
					{FFFFFF}Коньяк\t{F0E68C}%i$\n\
					{FFFFFF}Пицца\t{F0E68C}%i$\n\
					{FFFFFF}Бургер\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],BizInfo[biz][bItemCost][4]);
				}
				case 7:
				{
				    format(str_1,sizeof(str_1),"Название	Стоимость	\n\
					{FFFFFF}Картофель фри\t{F0E68C}%i$\n\
					{FFFFFF}Сэндвич\t{F0E68C}%i$\n\
					{FFFFFF}Баскет\t{F0E68C}%i$\n\
					{FFFFFF}Крылышки\t{F0E68C}%i$\n\
					{FFFFFF}Салат\t{F0E68C}%i$\n\
					{FFFFFF}Курица\t{F0E68C}%i$\n\
					{FFFFFF}Комплексный обед\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6]);
				}
				case 2:
				{
				    format(str_1,sizeof(str_1),"Название	Стоимость	\n\
					{FFFFFF}Чипсы\t{F0E68C}%i$\n\
					{FFFFFF}Спранк\t{F0E68C}%i$\n\
					{FFFFFF}Пиво\t{F0E68C}%i$\n\
					{FFFFFF}Телефонная книга\t{F0E68C}%i$\n\
					{FFFFFF}Скрепка\t{F0E68C}%i$\n\
					{FFFFFF} Маска\t{F0E68C}%i$\n\
					{FFFFFF}Радио\t{F0E68C}%i$\n\
					{FFFFFF}Фотоаппарат\t{F0E68C}%i$\n\
					{FFFFFF}Телефон Xiaomi Mi 8\t{F0E68C}%i$\n\
					{FFFFFF}SIM-Карта\t{F0E68C}%i$\n\
					{FFFFFF}Сигареты\t{F0E68C}%i$\n\
					{FFFFFF}Зажигалка\t{F0E68C}%i$\n\
					{FFFFFF}Удочка\t{F0E68C}%i$\n\
					{FFFFFF}Черви\t{F0E68C}%i$\n\
					{FFFFFF}Бронежилет\t{F0E68C}%i$\n\
					{FFFFFF}Яд\t{F0E68C}%i$\n\
					{FFFFFF}Аптечка\t{F0E68C}%i$\n\
					{FFFFFF}Таблетки от наркозависимости\t{F0E68C}%i$\n\
					{FFFFFF}Цветы\t{F0E68C}%i$\n",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],
					BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6],BizInfo[biz][bItemCost][7],BizInfo[biz][bItemCost][8],BizInfo[biz][bItemCost][9],BizInfo[biz][bItemCost][10],BizInfo[biz][bItemCost][11],
					BizInfo[biz][bItemCost][12],BizInfo[biz][bItemCost][13],BizInfo[biz][bItemCost][14],BizInfo[biz][bItemCost][15],BizInfo[biz][bItemCost][16],BizInfo[biz][bItemCost][17],BizInfo[biz][bItemCost][18]);
				}
				case 15..17: callcmd::bizinfo(playerid);
			}
			SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
			SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно изменили стоимость продажи {C0C0C0}товара {FFFFFF}в вашем магазине.");
			SCM(playerid, 0xFFFFFFFF, "Следите за ценами в других магазинах, чтобы у вас было дешевле.");
		}
		case 150:
		{
		    if(response)
			{
			    new biz = ShowPBiz[playerid];
			    switch(listitem)
				{
				    case 0: SPD(playerid,158,1,"","\n\n{FFFFFF}Введите стоимость 1 литра и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}5000${19A725} за один литр.","Ок","Отмена");
					case 1:
					{
					    format(str_1,sizeof(str_1),"Название	Стоимость	\n\
						{FFFFFF}Лопата\t{F0E68C}%i$\n\
						{FFFFFF}Набор для починки\t{F0E68C}%i$\n\
						{FFFFFF}Канистра\t{F0E68C}%i$\n\
						{FFFFFF}Балончик с краской\t{F0E68C}%i$\n\
						{FFFFFF}Бензопила\t{F0E68C}%i$\n\
						{FFFFFF}Отмычка\t{F0E68C}%i$\n\
						{FFFFFF}Замок для велосипеда\t{F0E68C}%i$\n\
						{FFFFFF}Домкрат\t{F0E68C}%i$",BizInfo[biz][bItemCost][0],BizInfo[biz][bItemCost][1],BizInfo[biz][bItemCost][2],BizInfo[biz][bItemCost][3],
						BizInfo[biz][bItemCost][4],BizInfo[biz][bItemCost][5],BizInfo[biz][bItemCost][6],BizInfo[biz][bItemCost][7]);
					    SPD(playerid, 152, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Изменить", !"Отмена");
					}
				}
			}
		}
		case 152:
		{
		    if(response)
	 	    {
	 	        new biz = ShowPBiz[playerid];
	 	    	if(biz == -1) return 1;
                switch(listitem)
				{
				    case 0..18:
					{
					    switch(BizInfo[biz][bState])
						{
						    case 2: str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nИспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$",NameInfoBiz[listitem][NameItem24]);
							case 6: str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nИспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$",NameInfoBiz[listitem][NameItemAZS]);
							case 0: str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nИспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$",NameInfoBiz[listitem][NameItemAmmo]);
							case 7: str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nИспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$",NameInfoBiz[listitem][NameItemZakus]);
							case 1: str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nИспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$",NameInfoBiz[listitem][NameItemBar]);
							case 15..17:
							{
	                            SPD(playerid, 151, DIALOG_STYLE_INPUT, !"", "{FFFFFF} Введите новую стоимость {EEE8AA}Бочку с нефьтю{FFFFFF} в вашем магазине\n\
								Используйте цену от {FFD700}100${FFFFFF} до {FFD700}50.000$", !"Изменить", !"Отмена");
							}
						}
						SPD(playerid, 151, DIALOG_STYLE_INPUT, !"", str_1, !"Изменить", !"Отмена");
						player_Global_Int[playerid][0] = listitem+1;
					}
				}
	 	    }
	 	    else callcmd::bizinfo(playerid);
		}
		case 182:
		{
		    if(response)
		    {
	            new id,money;
		        sscanf(inputtextsave,"p<,>dd",id,money);
                new bizz = ShowPBiz[playerid];
 				if(!IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bExit_X], BizInfo[bizz][bExit_Y], BizInfo[bizz][bExit_Z]) && !IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bEnter_X], BizInfo[bizz][bEnter_Y], BizInfo[bizz][bEnter_Z])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится возле вашего бизнеса!");
 				if(bizz == -1)return 1;
 				if(id < 1 || money < 1)
 				{
			        str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Обратите внимание на стоимость товара где скупают развозчики! Если\nоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\nДля магазинов/баров - {51C859}%i${FFFFFF}\nДля закусочных - {51C859}%i${FFFFFF}.",GLS[27],GLS[28]);
			    	str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\nВам нужно указать количество товара и его стоимость чтобы они могли его доставить.\nНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n{CAD715}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35.\n\n%s",str_1);
					SPD(playerid,182,1,"",str_1,"Далее","Отмена");
					return 1;
 				}
				if(id > 10000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете заказать больше 10 000 товара на скупку!");
				if(id < 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете заказать меньше 100 товара на скупку!");
				if(BizInfo[bizz][bState] != 7)
				{
				    if(money < GLS[27])
				    {
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам!");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[27])<1)
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$.");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[27])>10)
					{
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"[Ошибка] {FFFFFF}Вы не можете установить такую большую цену за товар! Используйте от {FFFFFF}%i${BE2D2D} до {FFFFFF}%i$.{BE2D2D}",(GLS[27]+1),(GLS[27]+10));
					    SCM(playerid,COLOR_RED,str_1);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
				else
				{
				    if(money < GLS[28])
				    {
				        SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам!");
					    callcmd::bizinfo(playerid);
					    return 1;
				    }
				    if((money-GLS[28])<1)
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$.");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[28])>10)
					{
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"[Ошибка] {FFFFFF}Вы не можете установить такую большую цену за продукты! Используйте от {FFFFFF}%i${BE2D2D} до {FFFFFF}%i$.{BE2D2D}",(GLS[28]+1),(GLS[28]+10));
					    SCM(playerid,COLOR_RED,str_1);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
                BizInfo[bizz][bBuyCost]=money;
                BizInfo[bizz][bNeedItem]=id;
                UpdateDataInt("businesses", "BuyCost", BizInfo[bizz][bBuyCost], BizInfo[bizz][bID],"=");
                UpdateDataInt("businesses", "NeedItem", BizInfo[bizz][bNeedItem], BizInfo[bizz][bID],"=");
				SCMf(playerid,COLOR_GREEN,"Вы успешно составили заказ на скупку {FFFFFF}%i{42B02C} товара для вашего бизнеса, по цене {FFFFFF}%i${FFFFFF}.",BizInfo[bizz][bNeedItem],BizInfo[bizz][bBuyCost]);
				UpdateBiz(bizz);
				callcmd::bizinfo(playerid);
			}
			else callcmd::bizinfo(playerid);
		}
		case 158:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				new Float:cost = floatstr(inputtextsave);
				new Float:maxcost;
				switch(BizInfo[biz][bState])
				{
				    case 0: maxcost = 0.0;
				    case 1: maxcost = 0.0;
				    case 2: maxcost = 0.0;
				    case 3: maxcost = 0.0;
				    case 4: maxcost = 0.0;
				    case 5: maxcost = 0.0;
				    case 6: maxcost = 50.0;
				    case 7: maxcost = 50.0;
				    case 9: maxcost = 0.0;
				}
				if(maxcost == 0.0) return SCM(playerid, COLOR_GREY, !"[Ошибка]");
				if(cost < 0.5 || cost > maxcost) return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Произошла ошибка, пожалуйста проверьте правильность ввода.");
				BizInfo[biz][bEnterPrice] = cost;
				static Text[30];
    			switch(BizInfo[biz][bState])
				{
    				case 6:
					{
						Text = "стоимость 1 литра бензина";
						UpdateFuels(biz);
					}
					case 7: Text="стоимость продуктов";
				    default: Text = "";
    			}
    			str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы успешно изменили %s на $%.1f",Text,cost);
				SCM(playerid,COLOR_ORANGE,str_1);
				UpdateBiz(biz);
				callcmd::bizinfo(playerid);
		    }
		    else callcmd::bizinfo(playerid);
		}
		case 159:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > BizInfo[biz][bMoney]) return SPD(playerid,159,1,"BizInfo","\n\nВведите сумму, которую хотите снять\n\n{D71515}На балансе бизнеса не достаточно средств!","Ок","Отмена");
                BizInfo[biz][bMoney] -= cost;
                GiveMoney(playerid,cost);
                UpdateDataInt("businesses", "Money", BizInfo[biz][bMoney], BizInfo[biz][bID],"=");
                UpdateBiz(biz);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно сняли деньги со счета.");
				callcmd::bizinfo(playerid);
		    }
		    else callcmd::bizinfo(playerid);
		}
		case 173:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > PI[playerid][pMoney]) return SPD(playerid,173,1,"BizInfo","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n{D71515}У вас не достаточно денег чтобы положить эту сумму!","Ок","Отмена");
                BizInfo[biz][bMoney] += cost;
                UpdateDataInt("businesses", "Money", BizInfo[biz][bMoney], BizInfo[biz][bID],"=");
                GiveMoney(playerid,-cost);
                UpdateBiz(biz);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно пополнили баланс вашего бизнеса.");
				callcmd::bizinfo(playerid);
				str_1[0] = EOS;
                f(str_1, sizeof(str_1), "бизнес [id: %i]", biz);
                //aml(38, playerid, "", str_1, cost, 6);
		    }
		    else callcmd::bizinfo(playerid);
		}
		case 8929:
		{
			if(!response)
			{
				SPD(playerid, 8929, DIALOG_STYLE_INPUT, !"Подтверждение", (str_f("\
					{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\n\
					Введите код подтверждения для входа в игру.\n\n{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\n\
					идентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\nотключить Google Authenticator на сайте:\n\n\
					{FFFFFF}%s/profile/in", ServerCFG[server_site])), !"Принять", !"Отмена");
			}
			if(GoogleAuthenticatorCode(PI[playerid][pGoogleKey], global_time) == strval(inputtext)) GoogleLogin(playerid);
			else
			{
				gPlayerGoogleTries[playerid]--;
				if(!gPlayerGoogleTries[playerid]) return J_Kick(playerid, 7730);
				SPDf(playerid, 8929, DIALOG_STYLE_INPUT, !"Подтверждение", !"Принять", !"Отмена", "\
					{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\nВведите код подтверждения для входа в игру.\n\n\
					{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\nидентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\n\
					отключить Google Authenticator на сайте:\n\n{FFFFFF}%s/profile/in \n\n{FC4C4C}Неверный код!\nОсталось попыток: %i", ServerCFG[server_site], gPlayerGoogleTries[playerid]);
			}
		}
		case 161:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
		        if(biz != -1)
				{
				    if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z])) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы должны находится возле свого бизнеса!");
				    if(GetString(BizInfo[biz][bOwner],PN(playerid)))
				    {
			         	SetString(BizInfo[biz][bOwner],"The State");
					    GiveMoney(playerid,BizInfo[biz][bCost]/2, "продла свой бизнес");
                        if(BizInfo[biz][bProducts] < 0) BizInfo[biz][bProducts] = 1000, UpdateDataInt("businesses", "Money", BizInfo[biz][bMoney], BizInfo[biz][bID],"=");
                        if(BizInfo[biz][bMoney] < 0) BizInfo[biz][bMoney] = 1000, UpdateDataInt("businesses", "Products", BizInfo[biz][bProducts], BizInfo[biz][bID],"=");
				     	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали ваш бизнес.");
				     	SetString(BizInfo[biz][bDescription], "");
          				UpdateDataStr("businesses", "Description", BizInfo[biz][bDescription], BizInfo[biz][bID]);
                        UpdateDataStr("businesses", "Owner", BizInfo[biz][bOwner], BizInfo[biz][bID]);
						UpdateBiz(biz);
						str_1[0] = EOS;
                        f(str_1, sizeof(str_1), "продал бизнес ид %i в гос", biz);
                        //aml(-4, playerid, "", str_1);
					}
				}
		    }
            else callcmd::bizinfo(playerid);
		}
		case 9762:
		{
		    if(response)
		    {
		        new biz = player_Global_Int[playerid][listitem];
			    ShowPBiz[playerid]=biz;
			    if(biz != -1)
				{
				    if(!PI[playerid][pImprovement][1])    str_1[0] = EOS, f(str_1, sizeof(str_1),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%i{FFFFFF}\nВы желаете погасить все счета?\n\n",BizInfo[biz][bNalog]);
				    else str_1[0] = EOS, f(str_1, sizeof(str_1),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%i{FFFFFF}\nНо по скольку вы имеете улучшение: {42B02C}Халявщик{FFFFFF}, вы должны заплатить только: {42B02C}%i${FFFFFF}\n\nВы желаете погасить все счета?\n\n",BizInfo[biz][bNalog],BizInfo[biz][bNalog]/2);
				    SPD(playerid,784,0,"Налоговая",str_1,"Оплатить","Отмена");
				}
		    }
		}
		case 9761:
		{
		    if(response)
		    {
		        if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
			    static lock[15];
			    lock[0] = EOS;
			    new biz = player_Global_Int[playerid][listitem];
			    ShowPBiz[playerid]=biz;
			    if(BizInfo[biz][bLock]) lock = "{FF6347}Закрыт";
				else lock = "{9ACD32}Открыт";
			    if(!IsNoEnterBiz(biz))
			    {
			        if(BizInfo[biz][bState] == 6 || BizInfo[biz][bState] == 7)
					{
				        switch(BizInfo[biz][bState])
						{
						    case 6: str_2 = "{FFFFFF}Стоимость 1-го литра бензина";
						    case 7: str_2 = "{FFFFFF}Стоимость 1-го продукта";
						    default: str_2 = "{FFFFFF}";
				        }
					    f(str_2,sizeof(str_2),"{FFFFFF}%s: {9ACD32}$%.1f\n",str_2,BizInfo[biz][bEnterPrice]);
					    strcat(str_1,str_2);
					}
				}
				if(BizInfo[biz][bState] == 6)
				{
				    f(str_2,sizeof(str_2),"{FFFFFF}Всего топлива: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str_1,str_2);
				}
				else if(BizInfo[biz][bState] == 0)
				{
				    f(str_2,sizeof(str_2),"{FFFFFF}Всего патронов: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str_1,str_2);
				}

				else if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 1  || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
				{
				    f(str_2,sizeof(str_2),"{FFFFFF}Продуктов: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str_1,str_2);
				}
			    f(str_2,sizeof(str_2),"{FFFFFF}Бизнес: {9ACD32}%s( %i )\n",InfoBusinesses[BizInfo[biz][bState]][BName], biz);
				strcat(str_1,str_2);
				f(str_2,sizeof(str_2),"{FFFFFF}Банк бизнеса: {9ACD32}$%i\n",BizInfo[biz][bMoney]);
				strcat(str_1,str_2);
				f(str_2,sizeof(str_2),"{FFFFFF}Открыт/Закрыт: %s\n",lock);
				strcat(str_1,str_2);
				strcat(str_1,"{FFFFFF}Крыша: {9ACD32}");
				switch(BizInfo[biz][bKrasher])
				{
				    case TEAM_RM: strcat(str_1,"Русская Мафия");
					case TEAM_YAKUZA: strcat(str_1,"Якудза");
					case TEAM_LCN: strcat(str_1,"ЛКН");
					case TEAM_BIKERS: strcat(str_1,"Байкеры");
					default: strcat(str_1,"none");
				}
				strcat(str_1,"\n");
				f(str_2,sizeof(str_2),"{FFFFFF}Налог к оплате: {9ACD32}%i/%i$\n",BizInfo[biz][bNalog], LIMITNALOG);
				strcat(str_1,str_2);

				if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
				{
				    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
					{
						f(str_2,sizeof(str_2),"{FFFFFF}Открытый заказ на: {9ACD32}%i товара\n",BizInfo[biz][bNeedItem]);
						strcat(str_1,str_2);
						f(str_2,sizeof(str_2),"{FFFFFF}Стоимость скупки товара: {9ACD32}%i$\n\n",BizInfo[biz][bBuyCost]);
						strcat(str_1,str_2);
					}
				}
				f(str_2,sizeof(str_2),"\n{FFFFFF}Прибыль за сегодня: {61B23D}%i${FFFFFF}\nПосетителей за {61B23D}%i{FFFFFF} часов: {61B23D}%i{FFFFFF} чел.\n\n\n",BizInfo[biz][bWin],BizInfo[biz][bNum],BizInfo[biz][bVisit]);
				strcat(str_1,str_2);
				if(BizInfo[biz][bState] == 19)
				{
					f(str_2,sizeof(str_2),"{FFFFFF}Стоимость товара {ffd700}в{ffffff} ларьке:\n",BizInfo[biz][bNeedItem]);
					strcat(str_1,str_2);
					f(str_2,sizeof(str_2),"{FFFFFF}Бургер: %i$\n",30000);
					strcat(str_1,str_2);
					f(str_2,sizeof(str_2),"{FFFFFF}Пицца: %i$\n",30000);
					strcat(str_1,str_2);
				}
				SPD(playerid,156,0,"Меню",str_1,"Изменить","Отмена");
				return 1;
		    }
		}
		case 169:
        {
            if(!response) return 1;
            new list = GetPVarInt(playerid, !"ListOwnableCars"), id;
            mysql_queryf_fix(mysql, "SELECT * FROM `ownable` WHERE `Owner` = '%s' AND `ID` = '%i' LIMIT 1;", true, PN(playerid), player_GlobalID[playerid][list]);
            id = Iter_Free(OWNABLECARS);
            if(!listitem)
            {
                DeletePVar(playerid, !"ListOwnableCars");
                if(GetIntCars(playerid) >= ValidNumberCars(playerid))
				{
				    cache_delete(result1);
					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Недостаточно места для загрузки, сначала выгрузите один автомобиль!");
				}
                Query_LoadOwnableCar(0,id, false, -1);
            }
            else
            {
                new connect;
				cache_get_int(0, !"typeconnect", connect);
                new type;
                if(!connect) type = 1;
                mysql_pqueryf(mysql, "UPDATE `ownable` SET `typeconnect` = '%i' WHERE `ID` = '%i' LIMIT 1;", type, player_GlobalID[playerid][list]);
            }
            cache_delete(result1);
        }
		case 162:
		{
		    if(!response || listitem == -1) return 1;
    		str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable`, `typeconnect` FROM `ownable` WHERE `Owner` = '%s' AND `ID` = '%i' LIMIT 1", PN(playerid), player_GlobalID[playerid][listitem]);
			mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,listitem,1);
		}
		case 167:
		{
		    if(!response || listitem == -1) return 1;
    		str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable` FROM `ownable` WHERE `Owner` = '%s' AND `ID` = '%i' AND `OwnerFamily` != '-1' LIMIT 1", PN(playerid), player_GlobalID[playerid][listitem]);
			mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,listitem,3);
		}
		case 5045:
		{
			if(!response) return 1;
			if(PI[playerid][pMoney] < 10000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			if(!IsPlayerInRangeOfPoint(playerid, 100.0, 1753.3832,438.5953,19.8877) && !IsPlayerInRangeOfPoint(playerid, 100.0, -2014.1184,425.2711,34.8857)) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы должны находиться вблизи от Жилого Комплекса Семьи!");
			if(CountOwnableFamilyCars(playerid, true) > 11) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В семье недостаточно ячеек для перевода транспорта в семейный!");
			GiveMoney(playerid, -10000000);
			new number = player_Global_Int[playerid][100];
			mysql_pqueryf(mysql, "UPDATE `ownable` SET `OwnerFamily` = '%i' WHERE `ID` = '%i' LIMIT 1;", FamilyInfo[pFamilyID(playerid)][famID], CarInfo[number][cID]);
			SCMf(playerid, COLOR_VALIK, "Вы успешно перевели личный транспорт '%s' в семейный", InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name]);
			SafeRemoveCar(number, number);
		}
		case 163:
		{
		    if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: callcmd::lock(playerid);
	            case 1: callcmd::key(playerid);
	            case 2: SPD(playerid, 6971, DIALOG_STYLE_LIST, !"", !"- Припарковать в этом месте\n- Вернуть на стандартную парковку", !"Принять", !"Отмена");
	            case 3:
	            {
	                valstr(str_1, ShowVeh[playerid]);
	                callcmd::findcar(playerid, str_1);
	            }
	            case 4:
	            {
	                valstr(str_1, ShowVeh[playerid]);
	                callcmd::alarm(playerid, str_1);
	            }
	            case 5:
	            {
                    func_OwnablePass(playerid, ShowVeh[playerid]);
	            }
	            case 6:
	            {
                	new number = GetVehicleID(ShowVeh[playerid]);
                 	if(IsPlayerRegCar(playerid, number))
                 	{
						SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно удалили всех посредников на ваш автомобиль.");
						callcmd::cars(playerid);
					}
					else SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно вернули ключи от автомобиля.");
					SetCarKeyer(number, playerid);
	            }
	            case 7: callcmd::style(playerid);
	            case 8:
	            {
	                valstr(str_1, ShowVeh[playerid]);
	                callcmd::fixmycar(playerid, str_1);
	            }
	            case 9:
	            {
	                new number = player_GlobalID[playerid][GetPVarInt(playerid, !"ListOwnableCars")];
		            mysql_queryf_fix(mysql, "SELECT `typeconnect` FROM `ownable` WHERE `ID` = '%i' LIMIT 1;", true, number);
					new connect,type;
					cache_get_int(0, !"typeconnect", connect);
		            if(!connect) type = 1;
		            cache_delete(result1);
		            mysql_pqueryf(mysql, "UPDATE `ownable` SET `typeconnect` = '%i' WHERE `ID` = '%i' LIMIT 1;", type, number);
		            SetTimerEx("ShowCars", 200, 0, "i", playerid);
	            }
 	           	case 10:
                {
                    new number = GetVehicleID(ShowVeh[playerid]);
                    SafeRemoveCar(number, number);
                }
	        }
		}
		case 164:
		{
		    if(response)
		    {
		        if(PI[playerid][pLevel] >= 2)
		        {
		            new id,money;
			        sscanf(inputtextsave,"p<,>ud",id,money);
			        if(IsPlayerConnectEx(id))
			        {
			            if(money <1)return 1;
			            if(GetPlayerPeakBiz(id))
			            {
			                if(BizOffer[id] == INVALID_PLAYER_ID)
			                {
				                new bizz = ShowPBiz[playerid];
                 				if(!IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bExit_X], BizInfo[bizz][bExit_Y], BizInfo[bizz][bExit_Z]) && !IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bEnter_X], BizInfo[bizz][bEnter_Y], BizInfo[bizz][bEnter_Z])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для передачи прав на бизнес, вы должны находится в его интерьере или у входа в него!");
				                if(ProxDetectorS(5.0, playerid, id, 1))
				                {
				                    BizOffer[playerid] = id;
				                    BizOffer[id] = playerid;
				                    BizPrice[id] = money;
				                    ShowPBiz[id]= bizz;
									str_1[0] = EOS, f(str_1, sizeof(str_1), "Предлагает %s купить у него бизнес.", PN(id));
									SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 10.0, 5000);
				                    SPD(playerid,0,0,!"",!"{FFFFFF}\n\nВы успешно предложили игроку продать ваш бизнес.\n\n","Принять","");
				                    str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\n\n%s предлагает вам купить у него бизнес за $%i.\n\n",PN(playerid),money);
				                    SPD(id,165,0,"Покупка бизнеса",str_1,"Купить","Отмена");
				                }
				                else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
					        }
					        else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - Игроку уже предложили покупку бизнеса!");
				        }
				        else
						{
							SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот игрок не может купить у вас бизнес! Он не может содержать больше бизнесов чем у него есть сейчас!");
							SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вам предложили купить бизнес, но вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
						}
			        }
		        }
		        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Продавать бизнес другим игрокам можно только со 2-го уровня");
			}
            else callcmd::bizinfo(playerid);
		}
		case 165:
		{
		    new id = BizOffer[playerid];
		    if(response)
		    {
		        new money = BizPrice[playerid];
		        if(GetString(BizInfo[ShowPBiz[playerid]][bOwner], PN(id)))
		        {
			        if(BizOffer[id] == playerid)
			        {
			            if(GetMoney(playerid) >= money)
						{
				            if(ProxDetectorS(10.0, playerid, id, 1))
				            {
					            if(GetPlayerPeakBiz(playerid))
					            {
									new biz = ShowPBiz[playerid];
									BizInfo[biz][bNalog] = 0;
									UpdateDataInt("businesses", "Level", BizInfo[biz][bNalog], BizInfo[biz][bID],"=");
									SetString(BizInfo[biz][bOwner], PN(playerid));
									GiveMoney(playerid, -money);
									GiveMoney(id, money);
									////aml(50, playerid, PN(id), "Покупка Бизнеса", money);
									BizOffer[playerid] =
									BizOffer[id] = INVALID_PLAYER_ID;
									BizPrice[playerid] = 0;
									SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю вас с приобретением бизнеса!");
									SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали свой бизнес");
									PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
									UpdateBiz(biz);
									str_1[0] = EOS;
                                    f(str_1, sizeof(str_1), "бизнес(id: %i)", biz);
                                    //aml(36, id, PN(playerid), str_1, money, 6);
                                    //aml(37, playerid, PN(id), str_1, money, 6);
									return 1;
					            }
					            else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
				            }
				            else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - Вы далеко от продавца!");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			        }
					else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - ОШИБКА!");
				}else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - ОШИБКА!");
		    }
		    else
			{
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно отказались от покупки бизнеса.");
				SCM(id, COLOR_RED, !"[Информация] {FFFFFF}Игрок отказался от покупки бизнеса.");
			}
			BizOffer[playerid] =
			BizOffer[id] = INVALID_PLAYER_ID;
			BizPrice[playerid] = 0;
		}
        case 171:
        {
            if(!response) return 1;
            new carid = player_Global_Int[playerid][listitem];
            new number = GetVehicleID(carid);
            if(IsPlayerHaveCar(playerid, number) == 1)
            {
                ShowVeh[playerid] = carid;
                if(!CarInfo[number][cShtraf]) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот транспорт не стоит на штрафстоянке");
                f(str_1, sizeof(str_1), "{FFFFFF}Номер транспорта: SP %i\nСумма залога: $%i", carid, CarInfo[number][cShtraf]);
                SPD(playerid, 172, DIALOG_STYLE_MSGBOX, !"Подтверждение", str_1, !"Выкупить", !"Отмена");
            }
            else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт!");
        }
		case 1782:
		{
		    if(response)
		    {
		        new housemain = HouseInfo[player_Global_Int[playerid][listitem]][hID]-1;
			    PI[playerid][pHouseMain]=housemain;
		        str_1[0] = EOS;
				f(str_1, sizeof(str_1), ">> {BE2D2D} Вы установили дом № %i местом спавна!",PI[playerid][pHouseMain]);
		        SCM(playerid, -1, str_1);
			    PI[playerid][pDCTime] = 1;
		      	UpdatePlayerDataInt(playerid, "DCTime", 1);
		      	UpdatePlayerDataInt(playerid, "HouseSpawned", housemain);
		      	callcmd::setspawn(playerid);
		    }
		}
		case 1781:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: callcmd::setspawn(playerid);
		            case 1:
		            {
		                if(IsAArmy(playerid) && PI[playerid][pRank]<4)
						{
						    PI[playerid][pDCTime] = 2;
						    UpdatePlayerDataInt(playerid, "DCTime", 2);
							SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
							return 0;
						}
		                if(GetPlayerHouses(playerid) ==-1) return SCM(playerid, -1, !">> {BE2D2D} Вы не проживаете в доме!");
		                new house, num = 1;
						str_1[0] = EOS, str_2[0] = EOS;
						str_2 = "{FFFFFF}Номер дома\t{FFFFFF}Город\t{dc143c}Налог\t{FFFFFF}Расстояние\n";
						for(new i; i < OWNABLEHOUSES; i++)
						{
							if(GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i) != 0)
							{
							    player_Global_Int[playerid][house] = i;
								new gorod[10+8];
								SetString(gorod, gSAZonesCity[GetCityName(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y])][SAZONE_NAME]);
								new nalog;
								if(PI[playerid][pImprovement][1]) nalog = HouseInfo[i][hNalog]/2;
								else nalog = HouseInfo[i][hNalog];
							    new Float:Distance = GetPlayerDistanceFromPoint(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
							 	f(str_1, sizeof(str_1), "{FFFFFF}[%i] Дом №%i\t%s\t{dc143c}%i\t\t{ffffff}%.2f\n", num, i, gorod, nalog, Distance);
								strcat(str_2, str_1);
								house ++;
								num ++;
							}
						}
						SPD(playerid, 1782, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Выбор дома", str_2, !"Выбор", !"Отмена");
		            }
		            case 2:
		            {
		                if(PI[playerid][pMember]==0) return SCM(playerid, -1, !">> {BE2D2D} Вы не состоите в организации!");
						SetSpawnPI(playerid, 2);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили организацию местом спавна!");
		                callcmd::setspawn(playerid);
		            }
		            case 3:
		            {
		                if(IsAArmy(playerid) && PI[playerid][pRank]<4)
						{
						    PI[playerid][pDCTime] = 2;
						    UpdatePlayerDataInt(playerid, "DCTime", 2);
							SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
							return 0;
						}
		                PI[playerid][pDCTime] = 0;
		                UpdatePlayerDataInt(playerid, "DCTime", 0);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили вокзал местом спавна!");
		                callcmd::setspawn(playerid);
					}
					case 4:
					{
					    if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
					    if(FamilyInfo[pFamilyID(playerid)][famHouse] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет семейной квартиры");
					    if(IsAArmy(playerid) && PI[playerid][pRank] < 4)
						{
						    PI[playerid][pDCTime] = 2;
						    UpdatePlayerDataInt(playerid, "DCTime", 2);
							return SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
						}
						PI[playerid][pDCTime] = 3;
						UpdatePlayerDataInt(playerid, "DCTime", 3);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили семейную квартиру местом спавна!");
		                callcmd::setspawn(playerid);
					}
					case 5:
					{
						if(PI[playerid][pVIP][0] < 6) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция!");
						if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) ==0)
						{
						    new Float:Pos[4];
						    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
							GetPlayerFacingAngle(playerid,Pos[3]);
							for(new i; i < 4; i++) PI[playerid][pPoint_Pos][i] = Pos[i];
							PI[playerid][pDCTime]=4;
							str_1[0] = EOS;
							for(new i; i < 4; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, PI[playerid][pPoint_Pos][i]);
							UpdatePlayerDataStr(playerid, "Point_Pos", str_1);
							UpdatePlayerDataInt(playerid, "DCTime", 4);
							SCM(playerid,-1,!">> {BE2D2D} Вы установили новую точку спавна!");
							callcmd::setspawn(playerid);
						}
						else SCM(playerid,COLOR_RED,!"[Ошибка] {ffffff}Сдесь нельзя установить место спавна!");
					}
				}
			}
		}
        case 172:
        {
            if(!response) return 1;
            new number = GetVehicleID(ShowVeh[playerid]);
            if(IsPlayerHaveCar(playerid, number) == 1)
            {
                if(!CarInfo[number][cShtraf]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт не стоит на штрафстоянке!");
                if(GetMoney(playerid) >= CarInfo[number][cShtraf])
                {
                    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно выкупили свой транспорт!");
                    GiveMoney(playerid, -CarInfo[number][cShtraf]);
                    CarInfo[number][cShtraf] = 0;
    				UpdateDataInt("ownable","Shtraf", CarInfo[number][cShtraf], CarInfo[number][cID],"=");
                }
                else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
            }
        }
		case 887:
		{
		    if(response)
		    {
		        if(GetMoney(playerid)<30000)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Поздравляем! Ваш пароль востановлен.\n{E52B2B}Обязательно запомните этот пароль и измените его.\n{FFFFFF}Новый пароль: 123456{FFFFFF}.\n");
		        SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
		        PI[playerid][pBankPass] = 123456;
		        UpdatePlayerDataInt(playerid, "BankPass", 123456);
		        GiveMoney(playerid,-30000, "восстановил пароль от банковский карты");
                GiveMoney(PanelPlayerID[playerid],20000, "получил за вотсановление пароля банковский карты");
				GameTextForPlayer(playerid, !"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~New password: 123456", 30000, 3);
		    }
		    else SCM(PanelPlayerID[playerid],COLOR_GREY,"[Информация] {FFFFFF}Игрок отклонил ваше предложение о изменении пароля!");
		}
		case 881:
		{
		    if(response)
		    {
		        new carid = player_Global_Int[playerid][listitem];
		        new number = GetVehicleID(carid);
		        if(IsPlayerHaveCar(playerid, number) == 1)
		        {
		            ShowVeh[playerid] = carid;
		            if(!PI[playerid][pImprovement][1]) str_1[0] = EOS, f(str_1, sizeof(str_1),"\n\n{FFFFFF}Номер транспорта: {42B02C}SP %i{FFFFFF}\nСумма к оплате: {42B02C}$%i{FFFFFF}\n\n", carid, CarInfo[number][cNalog]);
		            else str_1[0] = EOS, f(str_1, sizeof(str_1),"\n\n{FFFFFF}Номер транспорта: {42B02C}SP %i{FFFFFF}\nСумма к оплате: {42B02C}$%i{FFFFFF}\nПо скольку у вас имеется улучшение, вам прийдеться заплатить всего лишь {42B02C}%i${FFFFFF}\n\n", carid, CarInfo[number][cNalog], CarInfo[number][cNalog]/2);
		            SPD(playerid,882,0,"Подтверждение",str_1,"Оплатить","Отмена");
		        }
		        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Это не ваш транспорт");

		    }
		}
		case 882:
		{
		    if(response)
		    {
		        new number = GetVehicleID(ShowVeh[playerid]);
		        if(IsPlayerHaveCar(playerid, number))
		        {
		            if(GetMoney(playerid) >= CarInfo[number][cNalog])
		            {
			            SCM(playerid, COLOR_GREEN, !"Вы успешно оплатили налог на транспорт");
			            if(!PI[playerid][pImprovement][1])SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик вы будете платить в 2 раза меньше!");
			            OrgInfo[GLS[13]][oBank]+=CarInfo[number][cNalog];
			            SaveOrg(GLS[13]);
			            if(PI[playerid][pImprovement][1]) GiveMoney(playerid,-CarInfo[number][cNalog]/2, "оплатил налог на транспорт (халявщик)");
						else GiveMoney(playerid,-CarInfo[number][cNalog], "оплатил налог на транспорт");
						CarInfo[number][cNalog] = 0;
						UpdateDataInt("ownable","Nalog", CarInfo[number][cNalog], CarInfo[number][cID],"=");
			            SendBankBot(playerid);
		            }
		            else SendBotMessage(playerid,!"Извините, но  у вас недостаточно денег!");
		        }
		    }
		}
		case 804:
  		{
	 		if(response)
			{
         		new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
             	if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return 1;
		        SetString(HouseInfo[house][hOwner],"The State");
		        if(HouseInfo[house][hCost] != 0)
				{
				    new cost;
				    if(HouseInfo[house][hCost] < 500000000) cost = 100000;
				    else cost = HouseInfo[house][hCost]/2;
				    GiveMoney(playerid,cost);
				}
				else if(!HouseInfo[house][hCost]) GiveDonate(playerid, 6000);
		     	PI[playerid][pHouseMain] = -1;
		     	UpdatePlayerDataInt(playerid, "HouseSpawned", -1);
		     	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали ваш дом");
		     	PI[playerid][pDCTime] = 0;
		     	SetString(HouseInfo[house][hDescription], "");
		     	UpdatePlayerDataInt(playerid, "DCTime", 0);
				if(!RecInfo[playerid][rOpen] && HouseEntered[playerid] == house)
				{
					J_SetPlayerPos(playerid, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]);
					SetPlayerVirtualWorldEx(playerid, 0);
					SetPlayerInteriorEx(playerid, 0);
				}
    			UpdateHouse(house);
    			UpdateDataStr("houses", "Owner", HouseInfo[house][hOwner], HouseInfo[house][hID]);
				str_1[0] = EOS;
                f(str_1, sizeof(str_1), "продал дом ид %i в гос", house);
                //aml(-4, playerid, "", str_1);
			}
		}
  		case 803:
  		{
  			if(response)
			{
				new number = GetVehicleID(GetPlayerVehicleID(playerid));
				if(IsAOwnableCar(number))
				{
					if(IsPlayerInHisVehicle(playerid))
					{
					    if(IsPlayerRegCar(playerid, number))
					    {
					        new cost;
					        if(CarInfo[number][cCost] > 500000000) cost = 100000;
							else cost = CarInfo[number][cCost]/2;
							GiveMoney(playerid,cost, "продал транспортное средство");
       						SellCar(number, number, playerid);
							SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы продали ваше транспортное средство за $%i",cost);
							str_1[0] = EOS;
                            f(str_1, sizeof(str_1), "продал машину ид %i(model: %i) в гос", number,GetVehicleModelEx(GetPlayerVehicleID(playerid)));
                            //aml(-4, playerid, "", str_1);
						}
					}
				}
			}
		}
		case 195:
		{
		    if(response)
			{
			    if(GetPlayerHouses(playerid) != -1)
			    {
			        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
			        if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return 0;
		            if(HRoomOwner[house][listitem] == -1) return callcmd::house(playerid);
					new id = -1;
					foreach_player(i)
					{
						if(PI[i][pID] == HRoomOwner[house][listitem])
						{
							id = i;
							break;
						}
					}
				    if(id != -1)
				    {
				        PI[id][pHouseMain] = -1;
				        UpdatePlayerDataInt(id, "HouseSpawned", -1);
				        PI[id][pDCTime] = 0;
				        UpdatePlayerDataInt(id, "DCTime", 0);
     					SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена улица. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        SCMf(id, -1, "Владелец дома {42B02C}%s{FFFFFF} выселил вас.",PN(playerid));
				    }
				    else mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `HouseSpawned` = '-1', `DCTime` = '0' WHERE `ID` = '%i' LIMIT 1", HRoomOwner[house][listitem]);
        			str_q[0] = EOS, requestPN(HRoomOwner[house][listitem], str_q);
					SCMf(playerid,-1,"Вы выселили игрока {42B02C}%s{FFFFFF} из своего дома.",str_q);
				    HRoomOwner[house][listitem] = -1;
					SaveRoomOwner(house);
				}
			}
		}
		case 196:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnectEx(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
				new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
				if(house == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не известный номер дома.");
			    if(!GetString(HouseInfo[house][hOwner],PN(player))) return 0;
		        new s = GetHouseStyle(house);
    			for(new i;i < HouseRooms[s];i ++) str_1[0] = EOS, f(str_1, sizeof(str_1),"%s- Комната {42B02C}№%i{FFFFFF}\n",str_1,i+1);
	    		SPD(playerid,197,2,"",str_1,"Занять","Назад");
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 197:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnectEx(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		    	if(HRoomOwner[house][listitem] == -1)
		    	{
		    	    HRoomOwner[house][listitem] = PI[playerid][pID];
					SaveRoomOwner(house);
		    	    SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно арендовали комнату в доме игрока %s",PN(player));
		    	    SCMf(player,COLOR_GREEN,"%s принял ваше предложение пожить у него в доме!",PN(playerid));
					PI[playerid][pHouseMain] = house;
					UpdatePlayerDataInt(playerid, "HouseSpawned", house);
					RHouseOffer[playerid] = INVALID_PLAYER_ID;

					PI[playerid][pDCTime] = 1;
					UpdatePlayerDataInt(playerid, "DCTime", 1);
					SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
		    	}
		    	else
		    	{
				    new s = GetHouseStyle(house);
		    		for(new i;i < HouseRooms[s];i ++) str_1[0] = EOS, f(str_1, sizeof(str_1),"%s- Комната {42B02C}№%i{FFFFFF}\n",str_1,i+1);
  			    	SPD(playerid,197,2,"",str_1,"Занять","Назад");
		    	}
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 198:
		{
		    if(response)
			{
			    new id = strval(inputtextsave);
				if(!ProxDetectorS(5,playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
				new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
				if(GetPlayerTenant(playerid, house) != 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок уже живет в доме!");
			    for(new i;i < HouseRooms[GetHouseStyle(house)];i ++)
				{
					if(HRoomOwner[house][i] == -1)
					{
						str_1[0] = EOS, f(str_1, sizeof(str_1),"Игрок {42B02C}%s{FFFFFF} предлагает вам жить в комнате его дома.",PN(playerid));
						SPD(id,196,0,"",str_1,"Принять","Отмена");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы предлагаете игроку {42B02C}%s{FFFFFF} жить в комнате вашего дома.",PN(id));
						SCM(playerid,COLOR_GREEN,str_1);
						RHouseOffer[id] = playerid;
						return 1;
					}
					SCM(playerid, COLOR_GREY, !"Все комнаты вашего дома заняты");
				}
			}
		}
		case 2431:
		{
		    if(!response) return 1;
		    {
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(HouseEntered[playerid] == -1) return 1;
         				SPD(playerid, 185, DIALOG_STYLE_TABLIST_HEADERS, !"", !"Еда\tНеобходимо продуктов\nКартофель-Фри\t{A5EC67}60\nСэндвич\t{A5EC67}80\nБургер\t{E3EC67}100\nКрылышки\t{ECD667}120\nПицца\t{ECB267}140\nКурица с салатом\t{EC8D67}160\nКомплексный Обед\t{EC6767}300", "Выбор", "Отмена");
		            }
		          //  case 1: callcmd::drink(playerid);
		            case 2:
					{
				        if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
			    	    if(GetPlayerVirtualWorld(playerid) == house + 50)
			    	    {
							HouseID[playerid] = HouseEntered[playerid];
							InvTypePlayer{playerid} = 2;
			    	    	ShowInvMenu(playerid, 2);
			    	    	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
			    	    }
       					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего шкафа");
					}
					case 3:
					{
					    new s = GetHouseStyle(house);//тип дома
     					if(GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Владелец не может выселится!");
     					for(new i; i < HouseRooms[s]; i++)// перебираеться количество комнат
						{
							if(HRoomOwner[house][i] == PI[playerid][pID])//возвращает комнаты
							{
							    HRoomOwner[house][i] = -1;
								SaveRoomOwner(house);
							    PI[playerid][pHouseMain] = -1;
							    UpdatePlayerDataInt(playerid, "HouseSpawned", -1);
						        PI[playerid][pDCTime] = 0;
						        UpdatePlayerDataInt(playerid, "DCTime", 0);
						        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначена улица. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
						        SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы успешно выселились из дома.");
						       	return 1;
							}
						}
						PI[playerid][pHouseMain] = -1;
						UpdatePlayerDataInt(playerid, "HouseSpawned", -1);
      					PI[playerid][pDCTime] = 0;
      					UpdatePlayerDataInt(playerid, "DCTime", 0);
					}
		        }
		    }
		}
		case 6698:
		{
		    if(response)
		    {
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		        if(house != -1)
				{
					switch(listitem)
					{
					    case 0:
					    {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]) ||
								IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
							{
								HouseInfo[house][hLock] = !HouseInfo[house][hLock];
								SCMf(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Дверь %s", HouseInfo[house][hLock] != true ? ("{9ACD32}открыта") : ("{FF6347}закрыта"));
								UpdateHouse(house);
								UpdateDataInt("houses", "Lock", HouseInfo[house][hLock], HouseInfo[house][hID],"=");
    						}
			    			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего дома");
          					callcmd::house(playerid);
						}
						case 1:
						{
							if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!"), callcmd::house(playerid);
							new num = 0;
  					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(HRoomOwner[house][s] != -1) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
							SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\nПример: {9ACD32}6,1000000", !"Далее", !"Отмена");
						}
					}
				}
			}
		}
		case 174:
		{
		    if(response)
		    {
		        new house1 = player_Global_Int[playerid][listitem];
		        SetPVarInt(playerid, !"ListItemHouse",listitem);
				if(GetPVarInt(playerid, !"SearchHouse") == 1)
				{
					if(PI[playerid][pMoney] < 500) return DeletePVar(playerid, !"SearchHouse");
					GiveMoney(playerid, -500);
					EnableGPSForPlayer(playerid, HouseInfo[house1][hEnter_X], HouseInfo[house1][hEnter_Y], HouseInfo[house1][hEnter_Z]);
					DeletePVar(playerid, !"SearchHouse");
					return 1;
				}
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Дом №%i", house1);
            	if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[house1][hEnter_X], HouseInfo[house1][hEnter_Y], HouseInfo[house1][hEnter_Z]))
				{
				    str_2[0] = EOS,f(str_2, sizeof(str_2), "\
					{42B02C}-{FFFFFF} %s дом\n\
					{42B02C}-{FFFFFF} Продать дом игроку\n\
					{42B02C}-{FFFFFF} Предметы недвижимости", (HouseInfo[house1][hLock] != false) ? ("{A5EC67}Открыть{FFFFFF}") : ("{EC6767}Закрыть{FFFFFF}"));
					SPD(playerid, 2022, DIALOG_STYLE_LIST, str_1, str_2, "Выбор", "Отмена");
				}
				else if(IsPlayerInRangeOfPoint(playerid, 20.0, HouseInfo[house1][hExit_X], HouseInfo[house1][hExit_Y], HouseInfo[house1][hExit_Z]))
				{
					if(GetString(HouseInfo[house1][hOwner],PN(playerid)))
					{
					    str_2[0] = EOS, f(str_2, sizeof(str_2), "\
						{42B02C}-{FFFFFF} %s дом\n\
						{42B02C}-{FFFFFF} Меню дома\n\
						{42B02C}-{FFFFFF} Улучшить дом\n\
						{42B02C}-{FFFFFF} Продать дом\n\
						{42B02C}-{FFFFFF} Продать дом игроку\n\
						{42B02C}-{FFFFFF} Выставить дом на аукцион\n\
						{42B02C}-{FFFFFF} Налоги\n\
						{42B02C}-{FFFFFF} Продукты\n\
						{42B02C}-{FFFFFF} Подселить игрока\n\
						{42B02C}-{FFFFFF} Список жителей%s",\
						 (HouseInfo[house1][hLock] != false) ? ("{A5EC67}Открыть{FFFFFF}") : ("{EC6767}Закрыть{FFFFFF}"),\
						 (HouseInfo[house1][hGarage] != 0) ? ("\n{42B02C}-{FFFFFF} Войти в гараж") : (" "));
						SPD(playerid, 1761, DIALOG_STYLE_LIST, str_1, str_2, "Выбор", "Отмена");
					}
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у своего дома!");
			}
		}
		case 2022:
		{
		    if(response)
		    {
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
				switch(listitem)
				{
				    case 0:
				    {
						HouseInfo[house][hLock] = !HouseInfo[house][hLock];
						SCMf(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Дверь %s", HouseInfo[house][hLock] != false ? ("{9ACD32}открыта") : ("{FF6347}закрыта"));
						UpdateHouse(house);
						UpdateDataInt("houses", "Lock", HouseInfo[house][hLock], HouseInfo[house][hID],"=");
					}
					case 1:
					{
						new num;
					    for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
						{
						    if(HRoomOwner[house][s] != -1) num++;
						}
						if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
	    			    SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\nПример: {9ACD32}6,1000000", !"Далее", !"Отмена");
					}
				}
		    }
		}
		case 1761:
		{
		    if(response)
		    {
		        new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		        if(house != -1)
				{
					switch(listitem)
					{
					    case 0:
					    {
							if(IsPlayerInRangeOfPoint(playerid, 10.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]) ||
								IsPlayerInRangeOfPoint(playerid, 12.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
							{
								HouseInfo[house][hLock] = !HouseInfo[house][hLock];
								SCMf(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Дверь %s", HouseInfo[house][hLock] != false ? ("{9ACD32}открыта") : ("{FF6347}закрыта"));
								UpdateHouse(house);
								UpdateDataInt("houses", "Lock", HouseInfo[house][hLock], HouseInfo[house][hID],"=");
    						}
			    			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего дома");
          					callcmd::house(playerid);
						}
						case 1:
						{
                            if(!GetString(HouseInfo[house][hOwner], PN(playerid))) SPD(playerid, 2431, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Холодильник\n{42B02C}-{FFFFFF} Минибар\n{42B02C}-{FFFFFF} Шкаф\n{42B02C}-{FFFFFF} Выселится из дома", !"Принять", !"Назад");
                            else SPD(playerid, 2431, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Холодильник\n{42B02C}-{FFFFFF} Минибар\n{42B02C}-{FFFFFF} Шкаф", !"Принять", !"Назад");
						}
		    			case 2:
		    			{
                            str_1[0] = EOS, f(str_1, sizeof(str_1), "{42B02C}-{FFFFFF} Ремонт\n{42B02C}-{FFFFFF} %s\n{42B02C}-{FFFFFF} %s\n{42B02C}-{FFFFFF} %s", "Минибар {EC6767}[ Имеется ]", (HouseInfo[house][hPodval] != -1) ? ("Подвал: {EC6767}[ Имеется ]") : ("Построить подвал {42B02C}[ 1 000 000 $ ]"), (HouseInfo[house][hVentPodval] == 1) ? ("Подвал с вентеляцией: {EC6767}[ Имеется ]") : "Построить подвал с вентеляцией {42B02C}[ 1 000 000 $ ]");
		    			    SPD(playerid, 176, DIALOG_STYLE_LIST, !"HouseUpgrade", str_1, !"Выбрать", !"Отмена");
						}
		    			case 3:
						{
						    new num = 0;
					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(HRoomOwner[house][s] != -1) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
							SPD(playerid, 804, DIALOG_STYLE_MSGBOX, "Предупреждение", "{FFFFFF}Вы действительно хотите продать свой дом?\nОбратите внимание, что при продаже дома вам дадут только\n{EC6767}50 {FFFFFF}процентов от его гос. стоимости", "Дальше", "Отмена");
						}
		    			case 4:
		    			{
		    				new num = 0;
					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(HRoomOwner[house][s] != -1) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
		    			    SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", "{FFFFFF}Введите ид игрока и цену через запятую\nПример: {9ACD32}6,1000000", "Далее", "Отмена");
						}
						case 5: SCM(playerid, -1, !"в разработке");
						case 6:
		    			{
		    			    str_1[0] = EOS, f(str_1, sizeof(str_1), "\
								{FFFFFF}Счет к оплате: {86EC67}%i\n{FFFFFF}Недошедшие счета: {86EC67}%i\n\n{FFFFFF}Внимание если счет к оплате вашего дома выше $69000\n\
								Работники налоговой могут конфиксовать ваш дом.\nОплатить счета вы можете в центральном банке %s!",
								HouseInfo[house][hNalog], HouseInfo[house][hNalog2], ServerCFG[server_name]);
								
				    		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Домашний Счет", str_1, !"Закрыть", !"");
						}
						case 7:
		    			{
						}
						case 8: SPD(playerid, 198, DIALOG_STYLE_INPUT ,!"Аренда", !"{FFFFFF}\n\nВведите {42B02C}id{FFFFFF} игрока которого хотите подселить к себе в дом.\n\n", !"Ок", !"Отмена");
		    			case 9:
		    			{
							new s = GetHouseStyle(house);
							str_1[0] = EOS;
							for(new i; i < HouseRooms[s]; i++)
							{
								if(HRoomOwner[house][i] == -1) strcat(str_1, !"{42B02C}Свободная комната{FFFFFF}\n");
								else
								{
									str_2[0] = EOS, f(str_2, sizeof(str_2),"%i\n", HRoomOwner[house][i]);
									strcat(str_1, str_2);
								}
							}
							SPD(playerid, 195, DIALOG_STYLE_LIST, "Список арендаторов", str_1, "Выселить", "Назад");
		    			}
						case 10: EnterToGarage(playerid, HouseEntered[playerid]);
			    	}
			    }
		    }
		}
		case 77:
		{
			if(!response) SPD(playerid,2761,2,"","{42B02C}-{FFFFFF} Покушать на месте\n{42B02C}-{FFFFFF} Купить в дом","Принять","Отмена");
		}
		case 176:
		{
		    if(response)
			{
			    new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		        if(house != -1)
		        {
				    switch(listitem)
				    {
						case 0:
						{
						    if(IsPlayerInRangeOfPoint(playerid, 90, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
						    {
						        if(BuyInt[playerid] == -1)
						        {
						            if(PI[playerid][pDCTime] != 1)
						            {
						            	PI[playerid][pDCTime] = 1;
						            	UpdatePlayerDataInt(playerid, "DCTime", 1);
						            }
						            Clother[playerid] = -1;
								    BuyInt[playerid] = 1;
								    if(pTemp[playerid][SPECTPLAYER] == false) SpecPl(playerid, true);
								    SCM(playerid, 0xFFFFFFFF, "[Информация] {FFFFFF}Подождите немного ...");
									SetTimerEx("ChangeInterior", 1000, false, "i", playerid);///триазов фулл
								}
								else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы уже выбираете интерьер");
							}
							else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы должны находиться в доме");
						}
						case 1:
						{
						    /*if(GetString(HouseInfo[house][hOwner], PN(playerid)))
						    {
						    	if(!HouseInfo[house][hBar])
						    	{
						    	    if(GetMoney(playerid) >= 5000)
						    	    {
						    	        HouseInfo[house][hBar] = 1;
						    	        GiveMoney(playerid, -5000, "купил бар для дома");
						    	        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы купили бар для дома [/drink] (-$5000)");
										UpdateDataInt("houses", "Bar", HouseInfo[house][hBar], HouseInfo[house][hID],"=");
									}
						    	    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						    	}
						    	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть бар!");
						    }*/
						}
						case 2:
						{
						    if(GetString(HouseInfo[house][hOwner], PN(playerid)))
						    {
						    	if(HouseInfo[house][hPodval] == -1)
						    	{
						    	    if(GetMoney(playerid) >= 1000000)
						    	    {
						    	        HouseInfo[house][hPodval] = 0;
						    	        GiveMoney(playerid, -1000000, "заказал подвал для дома");
						    	        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно заказали строительство подвала для вашего дома!");
										UpdateDataInt("houses", "Podval", HouseInfo[house][hPodval], HouseInfo[house][hID],"=");
          								callcmd::house(playerid);
									}
						    	    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						    	}
						    	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть подвал!");
						    }
						}
      					case 3:
                        {
                            if(GetString(HouseInfo[house][hOwner], PN(playerid)))
                            {
                                if(!HouseInfo[house][hVentPodval])
                                {
                                    if(GetMoney(playerid) >= 1000000)
                                    {
                                        HouseInfo[house][hVentPodval] = 1;
                                        UpdateDataInt("houses", "VentPodval", HouseInfo[house][hVentPodval], HouseInfo[house][hID],"=");
                                        GiveMoney(playerid, -1000000);
                                        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно заказали строительство подвала с вентеляцией для вашего дома!");
                                        callcmd::house(playerid);
                                    }
                                    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
                                }
                                else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть подвал с вентеляцией!");
                            }
                        }
					}
			    }
		    }
		    else callcmd::house(playerid);
		}
		case 177:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\n{9ACD32}- Пример: {B83434}6,1000000", !"Далее", !"Отмена");
		        new
					id,
					price;
		        sscanf(inputtextsave, "p<,>dd", id, price);
		        if(price < 1) return SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\n{9ACD32}- Пример: {B83434}6,1000000", !"Далее", !"Отмена");
    			new house = player_Global_Int[playerid][GetPVarInt(playerid, !"ListItemHouse")];
		        if(house != -1)
		        {
			        if(GetString(HouseInfo[house][hOwner], PN(playerid)))
				    {
					    if(ProxDetectorS(10.0, playerid, id, 1))
					    {
					        if(GetPlayerPeakHouse(id))
					        {
						        if(HouseOffer[id] == INVALID_PLAYER_ID)
						        {
						    		str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s хочет продать вам свой дом\nНомер дома: %i\nЦена: $%i", PN(playerid), house, price);
									SPD(id, 86, DIALOG_STYLE_MSGBOX, !"Продажа дома", str_1, !"Купить", !"Отмена");
									str_1[0] = EOS, f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы предлагаете %s купить ваш дом за $%i", PN(id), price);
									SCM(playerid, COLOR_VALIK, str_1);
									str_1[0] = EOS, f(str_1, sizeof(str_1), "Предлагает %s купить у него дом.", PN(id));
									SetPlayerChatBubble(playerid, str_1, COLOR_PURPLE, 10.0, 5000);
									HouseOffer[id] = playerid;
									HouseOffer[playerid] = id;
									HousePrice[id] = price;
								}
								else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этому игроку уже кто-то предлагает купить дом");
							}
							else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот игрок уже где-то прописан");
					    }
			            else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
					}
			    }
		    }
		    else callcmd::house(playerid);
		}
		case 1666:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(Fullness{playerid} >= 95) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<600)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -600, "купил блюдо");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Курица в соусе Терияки'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
                  		SendEatBot(playerid);
		            }
		            case 1:
		            {
		                if(GetMoney(playerid)<500)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
                        if(Fullness{playerid} >= 95) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не голодны");
			 			GiveMoney(playerid, -500, "купил блюдо");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=500;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Мисо-суп'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,40);
                  		SendEatBot(playerid);
		            }
		            case 2:
		            {
                        if(Fullness{playerid} >= 95) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<700)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -700, "купил блюдо");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=700;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Прозрачная лапша с говядиной'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,60);
                  		SendEatBot(playerid);
		            }
					case 3:
					{
                        if(Fullness{playerid} >= 95) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<800)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -800, "купил блюдо");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=800;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Удон в сливочном соусе с говядиной'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,70);
		                SendEatBot(playerid);
		            }
					case 4:
					{
                        if(Fullness{playerid} >= 95) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<600)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -600, "купил блюдо");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Кани спайси'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
		                SendEatBot(playerid);
		            }
		        }
			}
		}
		case 186:
	    {
	        if(response)
	        {
	            if(!PI[playerid][pHeal])
	            {
	                PI[playerid][pHeal] = true;
	                UpdatePlayerDataInt(playerid, "Heal", PI[playerid][pHeal]);
	                PI[playerid][pHealTime] = 0;
	                SCM(playerid, COLOR_LIGHTBLUE, !"[Информация] {FFFFFF}Вы согласились пройти курс лечения");
	            }
	        }
		}
		case 193:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money < 800 || money > 10000) return SPD(playerid,193,1,"Введите сумму","Введите сумму залога\n\n{9ACD32}- Не менее $800 и не более $10000","Ок","Отмена");
		        if(GetPlayerState(playerid) == 2)
			  	{
			  	    new carid = GetPlayerVehicleID(playerid);
			    	if(vTemp[carid][vTeam] == TEAM_LSPD || vTemp[carid][vTeam] == TEAM_LVPD || vTemp[carid][vTeam] == TEAM_RCPD || vTemp[carid][vTeam] == TEAM_SFPD)
			    	{
				    	if(GetVehicleModelEx(carid) == 525)
						{
						    if(IsTrailerAttachedToVehicle(carid))
						    {
								new vehid = GetVehicleTrailer(carid);
								new number = GetVehicleID(vehid);
								new Float:Health;
							    for(new i;i < sizeof(CarPounds);i ++)
							    {
									if(!IsAOwnableCar(number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете поставить данное транспортное средство на штраф стоянку");
									if(IsPlayerToKvadrat(playerid,CarPounds[i][0],CarPounds[i][1],CarPounds[i][2],CarPounds[i][3]))
									{
										if(IsPlayerInRangeOfPoint(playerid,15.0,1570.2062,-1151.0127,23.9412) || IsPlayerInRangeOfPoint(playerid,10.0,1815.2671,-1145.4780,23.8606) || IsPlayerInRangeOfPoint(playerid,10.0,1732.3651,-1145.3220,23.8720)) return SCM(playerid, COLOR_RED, !"В этом месте нельзя оставить машину");
										DetachTrailerFromVehicle(carid);
										if(CarInfo[number][cShtraf]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете поставить данное транспортное средство на штраф стоянку , так как оно уже там стоит!");
										SPD(playerid,0,0,!"",!"Вы поставили транспорт на штрафстоянку и получили 800$ в виде поощрения.","Закрыть","");
										GiveMoney(playerid,800, "поставил транспорт на штрафстоянку");
										CarInfo[number][cShtrafName] = PI[playerid][pID];
										GetVehicleHealth(vehid,Health);
										CarInfo[number][cShtraf] = strval(inputtextsave);
										CarInfo[number][cKeyIN] = false;
										GetVehiclePos(vehid,CarInfo[number][cPos_X],CarInfo[number][cPos_Y],CarInfo[number][cPos_Z]);
										GetVehicleZAngle(vehid,CarInfo[number][cPos_A]);
										VehicleHealth[vehid] = Health;
                                        RespawnOwnableCar(playerid, vehid);
                                        UpdateDataStr("ownable","Shtraf", CarInfo[number][cShtraf], CarInfo[number][cID]);
                                        UpdateDataInt("ownable","ShtrafName", CarInfo[number][cShtrafName], CarInfo[number][cID]);
                                        UpdateDataInt("ownable","KeyIN", CarInfo[number][cKeyIN], CarInfo[number][cID],"=");
										return 1;
									}
						        }
							}
						}
					}
				}
		    }
		}
		case 206:
		{
		    if(response)
		    {
				new number = UnLeaderID[playerid];
				PlayerUnleader(INVALID_PLAYER_ID,OrgInfo[number][oLeaderUID]);
				SCMf(playerid, -1, "Вы сняли игрока %i(UID) с поста лидера",OrgInfo[number][oLeaderUID]);
   				SendAdminsMessagef(-1, " А: %s выгнал игрока %s из должности лидерства", PN(playerid), OrgInfo[number][oLeaderUID]);
   				OrgInfo[number][oLeaderUID] = -1;
  				SaveOrg(number);
		    }
		    return 1;
		}
		case 207:
		{
		    if(response) StopAudioStreamForPlayer(playerid);
		    callcmd::phone(playerid);
		}
		case 492:
		{
		    if(!response) return 1;
		    GiveMoney(playerid, -100000000);
		    SendBotMessage(playerid, !"Хорошего дня!");
		    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно создали семью!\n{DF553A}Используйте /fammenu для её регистрации и установки настроек.", !"Принять", !"");
		    GameTextForPlayer(playerid, !"Successful", 0, 1);
		   	str_2[0] = EOS, f(str_2, sizeof str_2, "INSERT INTO `familys` (`Leader`) VALUES ('%i')", PI[playerid][pID]);
			mysql_tquery(mysql, str_2, "CreateFamily", "i", playerid);
		}
	    case 493:
	    {
			if(!response) return 1;
			switch(listitem)
	        {
				case 0: SPD(playerid, 494, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
				case 1:
				{
					if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сначала укажите название семьи!"), SPD(playerid, 494, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
					SPD(playerid, 495, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина слогана от 15 до 40 символов.\n{FFFFFF}2. {dda64d}Слоган (Девиз) нельзя нарушать.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}Примеры: \n\n1. {dda64d}Семья, долг, честь\n{FFFFFF}2. {dda64d}Непресклонные, несгибаемые, несдающиеся\n{FFFFFF}3. {dda64d}Мудрость и сила\n\n", "Принять", "Отмена");
				}
			}
		}
        case 494:
        {
			if(!response) return callcmd::fammenu(playerid);
			if(strlen(inputtextsave) < 5 || strlen(inputtextsave) > 15) return SPD(playerid, 494, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
            if(strfind(inputtextsave, " ", true) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В названии семьи запрещены пробелы!"), SPD(playerid, 494, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно установили название вашей семьи. Теперь ваша семья будет называться: %s", inputtextsave);
            SetString(FamilyInfo[pFamilyID(playerid)][famName], inputtextsave);
			mysql_pqueryf(mysql, "update `familys` set `name` = '%s' WHERE `ID` = '%i' LIMIT 1;",FamilyInfo[pFamilyID(playerid)][famName], PI[playerid][pFamilyMember]);
			callcmd::fammenu(playerid);
        }
        case 495:
        {
            if(!response) return callcmd::fammenu(playerid);
		    if(strlen(inputtextsave) < 10 || strlen(inputtextsave) > 40) return SPD(playerid, 495, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина слогана от 15 до 40 символов.\n{FFFFFF}2. {dda64d}Слоган (Девиз) нельзя нарушать.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}Примеры: \n\n1. {dda64d}Семья, долг, честь\n{FFFFFF}2. {dda64d}Непресклонные, несгибаемые, несдающиеся\n{FFFFFF}3. {dda64d}Мудрость и сила\n\n", "Принять", "Отмена");
    		SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно установили слоган. ( %s )", inputtextsave);
            SetString(FamilyInfo[pFamilyID(playerid)][famSlogan], inputtextsave);
			mysql_pqueryf(mysql, "update `familys` set `slogan` = '%s' WHERE `ID` = '%i' LIMIT 1;",FamilyInfo[pFamilyID(playerid)][famSlogan], PI[playerid][pFamilyMember]);
        }
		case 5003:
		{
      		if(!response) return 1;
			if(strlen(inputtextsave) < 6)
			{
			    strmid(FamilyInfo[pFamilyID(playerid)][famDiscord], "None", 0, 40);
	            mysql_pqueryf(mysql, "UPDATE `familys` SET `discord` = 'None' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно установили {D1FD4D}Discord {FFFFFF}для вашей семьи!\nТеперь каждый член семьи, сможет узнать ваш {FFFFFF}сервер!\n\n{D1FD4D}Убедитесь, что номер указан верно!\n\n", "Принять", "");
				GameTextForPlayer(playerid, !"Successful", 0, 1);
				return 1;
		    }
            strmid(FamilyInfo[pFamilyID(playerid)][famDiscord], inputtextsave, 0, 40);
            TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "discord", FamilyInfo[pFamilyID(playerid)][famDiscord], "s");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно установили {D1FD4D}Discord {FFFFFF}для вашей семьи!\nТеперь каждый член семьи, сможет узнать ваш {FFFFFF}сервер!\n\n{D1FD4D}Убедитесь, что номер указан верно!\n\n", "Принять", "");
			GameTextForPlayer(playerid, !"Successful", 0, 1);
		}
		case 16222:
		{
		    if(!response) return 1;
      		if(PI[playerid][pVirMoney] < 2000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно az монет. Вы можете пополнить свой баланс [/donate]");
        	PI[playerid][pVirMoney] -= 2000;
      		if(strlen(inputtextsave) < 4 && strlen(inputtextsave) > 14) return SPD(playerid, 16222, DIALOG_STYLE_INPUT, !"Изменить название", "{FFFFFF}Введите в строку новое название для вашей семьи.\nСтоимость: {FFB828}2000 AZ Coins", !"Принять", !"Назад");
            strmid(FamilyInfo[pFamilyID(playerid)][famName], inputtextsave, 0, 40);
            TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "name", FamilyInfo[pFamilyID(playerid)][famName], "s");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно изменили {D1FD4D}Слоган {FFFFFF}для вашей семьи!\n\n", "Принять", "");
			GameTextForPlayer(playerid, !"Successful", 0, 1);
			foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
		}
		case 16223:
		{
		    if(!response) return 1;
      		if(PI[playerid][pVirMoney] < 500) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно az монет. Вы можете пополнить свой баланс [/donate]");
        	PI[playerid][pVirMoney] -= 500;
      		if(strlen(inputtextsave) < 5 && strlen(inputtextsave) > 40) return SPD(playerid, 16223, DIALOG_STYLE_INPUT, !"", "\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{F2A425}Критерии:\n\n{FFFFFF}1.{DDA64D} Длина слогана 15 до 40 символов.\n{FFFFFF}2.{DDA64D} Слоган(Девиз) нельзя нарушать.\n{FFFFFF}3.{DDA64D} Не должно быть ненормативной лексики\n\n{FFFFFF}Примеры:\n\n1.{DDA64D} Семья, долг, честь\n{FFFFFF}2.{DDA64D} Непреклонные, несгибаемые, несдающиеся\n{FFFFFF}3.{DDA64D} Мудрость и сила\n\n{FFFFFF}Стоимость: {FF6D33}500 AZ Coins ", "Принять", "Отмена");
            strmid(FamilyInfo[pFamilyID(playerid)][famSlogan], inputtextsave, 0, 40);
            TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "slogan", FamilyInfo[pFamilyID(playerid)][famSlogan], "s");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно изменили {D1FD4D}Слоган {FFFFFF}для вашей семьи!\n\n", "Принять", "");
			GameTextForPlayer(playerid, !"Successful", 0, 1);
			foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
		}
		case 5001:
		{
  			if(!response)
		    {
		        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались от расформирования вашей семьи!");
	    		return callcmd::fammenu(playerid);
		    }
		}
		case 4999:
		{
			if(!response) return 1;
			if(strval(inputtextsave) < 0 || strval(inputtextsave) > 30) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!"), callcmd::fammenu(playerid);
            FamilyInfo[pFamilyID(playerid)][famChatColor] = strval(inputtextsave);
            SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}Изменил цвет чата/статуса семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
   			UpdateDataInt("familys", "chatcolor", FamilyInfo[pFamilyID(playerid)][famChatColor], PI[playerid][pFamilyMember],"=");
			foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
		}
		case 499:
		{
		    if(!response) return 1;
			if(strval(inputtextsave) == playerid)
		    {
				FamilyInfo[pFamilyID(playerid)][famZam_0] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_0` = '-1' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
				callcmd::fammenu(playerid);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно очистили список заместителя!");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет заместителем!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать заместителем, не состоит в вашей семье!");
			FamilyInfo[pFamilyID(playerid)][famZam_0] = strval(inputtextsave);
			mysql_pqueryf(mysql,"UPDATE `familys` SET `zam_0` = '%i' WHERE `ID` = '%i' LIMIT 1;",PI[strval(inputtextsave)][pID],FamilyInfo[pFamilyID(playerid)][famID]);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}%s[%i] назначил вас заместителем в семье!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str_1, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}назначил %s[%i] заместителем в семье!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));		
		}
		case 4991:
		{
		    if(!response) return 1;
			if(strval(inputtextsave) == playerid)
		    {
				FamilyInfo[pFamilyID(playerid)][famZam_1] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_1` = '-1' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
				callcmd::fammenu(playerid);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно очистили список заместителя!");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет заместителем!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать заместителем, не состоит в вашей семье!");
			FamilyInfo[pFamilyID(playerid)][famZam_1] = strval(inputtextsave);
			mysql_pqueryf(mysql,"UPDATE `familys` SET `zam_1` = '%i' WHERE `ID` = '%i' LIMIT 1;",PI[strval(inputtextsave)][pID],FamilyInfo[pFamilyID(playerid)][famID]);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}%s[%i] назначил вас заместителем в семье!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str_1, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}назначил %s[%i] заместителем в семье!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
		}
		case 4992:
		{
		    if(!response) return 1;
			if(strval(inputtextsave) == playerid)
		    {
				FamilyInfo[pFamilyID(playerid)][famZam_2] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_2` = '-1' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
				callcmd::fammenu(playerid);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно очистили список заместителя!");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет заместителем!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать заместителем, не состоит в вашей семье!");
			FamilyInfo[pFamilyID(playerid)][famZam_2] = strval(inputtextsave);
			mysql_pqueryf(mysql,"UPDATE `familys` SET `zam_2` = '%i' WHERE `ID` = '%i' LIMIT 1;",PI[strval(inputtextsave)][pID],FamilyInfo[pFamilyID(playerid)][famID]);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}%s[%i] назначил вас заместителем в семье!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str_1, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}назначил %s[%i] заместителем в семье!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
		}
		case 100500:
		{
		    if(!response) return 1;
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет лидером!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать лидером, не состоит в вашей семье!");
            //if(GetString(PN(strval(inputtextsave)), FamilyInfo[pFamilyID(playerid)][famLeader])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
			if(PI[strval(inputtextsave)][pID] == FamilyInfo[pFamilyID(playerid)][famLeader])return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
			FamilyInfo[pFamilyID(playerid)][famLeader] = PI[strval(inputtextsave)][pID];
            mysql_pqueryf(mysql,"UPDATE `familys` SET `Leader` = '%i' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famLeader], PI[playerid][pFamilyMember]);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}%s[%i] новый лидер семьи!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str_1, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}передал лидерство семьи %s[%i]", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
		}
		case 498:
		{
			if(!response) return 1;
			if(strval(inputtextsave) == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!"), callcmd::fammenu(playerid);
			if(PI[strval(inputtextsave)][pFamilyMember] != PI[playerid][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок не состоит в вашей семье!"), callcmd::fammenu(playerid);
			if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
			FamilyInfo[PI[strval(inputtextsave)][pFamilyMember]][famMembersCount] --;
			mysql_pqueryf(mysql,"UPDATE `familys` SET `Members` = '%i' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[PI[strval(inputtextsave)][pFamilyMember]][famMembersCount], PI[playerid][pFamilyMember]);
			SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал из семьи: %s[%i]!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s[%i] выгнал вас из семьи: %s.", PN(playerid), playerid, FamilyInfo[pFamilyID(playerid)][famName]);
			SPD(strval(inputtextsave), 0, 0, "Информация", str_1, "Принять", "");
			PI[strval(inputtextsave)][pFamilyMember] = 0;
			UpdatePlayerDataInt(strval(inputtextsave), "FamilyMember", 0);
		}
		case 497:
		{
		    if(!response) return 1;
			if(strval(inputtextsave) == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!");
				return ShowFamily(playerid);
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave)))
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок слишком далеко от вас!");
				return ShowFamily(playerid);
			}
			if(PI[strval(inputtextsave)][pFamilyMember])
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок состоит в другой семьи!");
				return ShowFamily(playerid);
			}
			if(PI[strval(inputtextsave)][pLevel] < 3)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок должен иметь уровень выше 3-го!");
				return ShowFamily(playerid);
			}
			SCMf(strval(inputtextsave), COLOR_ORANGE, "[Информация] {FFFFFF}Игрок %s[%i] приглашает вас в семью: {c8ec36}%s.", PN(playerid), playerid, FamilyInfo[pFamilyID(playerid)][famName]);
			SCM(strval(inputtextsave), -1, !"Введите {c8ec36}/acceptfam{FFFFFF} для того чтобы принять предложение, или {ec4636}/cancelfam{FFFFFF}, чтобы отклонить.");
			SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно предложили %s[%i] вступить в вашу семью!", PN(strval(inputtextsave)), strval(inputtextsave));
			AcceptFam{strval(inputtextsave)} = true;
			SetPVarInt(strval(inputtextsave), !"IDInvite", playerid);
		}
		case 5008:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Жареная рыба'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 5);
					}
					case 1:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Варенная рыба'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 10);
					}
     				case 2:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Запеченная тилапия с сыром'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 15);
					}
					case 3:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Пирог с рыбой'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 25);
					}
					case 4:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Скумбрия домашнего копчения'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 35);
					}
					case 5:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Запеченная щука'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 45);
					}
					case 6:
					{
					    if(Fullness{playerid} >= 95) return SCM(playerid, 0xFFBC60FF, !"[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Красная рыба с кукурузой гриль'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 100);
					}
		        }
		    }
		}
		case 5009:
		{
		    if(!response) return 1;
		    {
		        for(new i; i < sizeof(fType);i ++)
     	        {
     	            if(listitem+1 == fType[i][typeDialog])
	              	{
	              	    if(FamilyInfo[pFamilyID(playerid)][famLevel] < fType[i][typeLevel])
	 	                {
	 	                    if(AntiFloodTypeFamily[playerid] > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Менять тип семьи, можно раз в 10 минут!");
						    SCMf(playerid, COLOR_RED, "[Ошибка]{FFFFFF} Чтобы изменить тип семьи на %s, уровень Вашей семьи должен быть не ниже %i - го!", fType[i][typeName], fType[i][typeLevel]);
	 	                    return FamRedacType(playerid);
	 	                }
	 	                break;
	              	}
     	        }
              	if(FamilyInfo[pFamilyID(playerid)][famType] == listitem+1)
     	        {
     	            SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У Вашей семьи уже установлен этот тип");
                    return FamRedacType(playerid);
     	        }
     	        else
     	        {
     	            if(AntiFloodTypeFamily[playerid] > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Менять тип семьи, можно раз в 10 минут!");
		        	AntiFloodTypeFamily[playerid] = global_time + 600;
     	            FamilyInfo[pFamilyID(playerid)][famType] = listitem+1;
 	                TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "Type", FamilyInfo[pFamilyID(playerid)][famType], "i");
				    SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)] %s[%i]:{B9C1B8} Изменил тип семьи! Теперь мы %s!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, fType[FamilyInfo[pFamilyID(playerid)][famType]][typeName]);
				    FamRedacType(playerid);
				    foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
     	        }
		    }
		}
		case 5006:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
		                if(FamilyInfo[pFamilyID(playerid)][famRespect] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
		                if(FamilyInfo[pFamilyID(playerid)][famRep] < 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");
		                FamilyInfo[pFamilyID(playerid)][famRep] -= 1000;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");
						FamilyInfo[pFamilyID(playerid)][famRespect] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "Respect", FamilyInfo[pFamilyID(playerid)][famRespect], "i");
						SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
		            }
			        case 1:
			        {
			            if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famQuestTalon] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 1200) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");
		                FamilyInfo[pFamilyID(playerid)][famRep] -= 1200;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");
						FamilyInfo[pFamilyID(playerid)][famQuestTalon] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "QuestTalon", FamilyInfo[pFamilyID(playerid)][famQuestTalon], "i");
						SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
			        }
			        case 2:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famBussines] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 900) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 900;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famBussines] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "Bussines", FamilyInfo[pFamilyID(playerid)][famBussines], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 3:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famShadow] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 800) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 800;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famShadow] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "Shadow", FamilyInfo[pFamilyID(playerid)][famShadow], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 4:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famMedicCredit] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 1100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 1100;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famMedicCredit] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "MedicCredit", FamilyInfo[pFamilyID(playerid)][famMedicCredit], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 5:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");

			            FamilyInfo[pFamilyID(playerid)][famRep] -= 2000;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famWhiteList] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "WhiteList", FamilyInfo[pFamilyID(playerid)][famWhiteList], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 6:
			        {
			            if(FamilyInfo[pFamilyID(playerid)][famBankOffer] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 4000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 4000;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famBankOffer] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "BankOffer", FamilyInfo[pFamilyID(playerid)][famBankOffer], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 7:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famMarodery] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 7000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 7000;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famMarodery] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "Marodery", FamilyInfo[pFamilyID(playerid)][famMarodery], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 8:
			        {
			            if(!IsPlayerAccessFamily(playerid))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[pFamilyID(playerid)][famEatFish] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[pFamilyID(playerid)][famRep] < 6000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[pFamilyID(playerid)][famRep] -= 6000;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "rep", FamilyInfo[pFamilyID(playerid)][famRep], "i");

						FamilyInfo[pFamilyID(playerid)][famEatFish] = 1;
						TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "EatFish", FamilyInfo[pFamilyID(playerid)][famEatFish], "i");

		                static const fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						str_2[0] = EOS, f(str_2, sizeof(str_2), fmt_str, FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
						SendFamilyMessage(PI[playerid][pFamilyMember], str_2);
			        }
			        case 9:
			        {
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
						!"\
							{F4AF7F}1.{FFFFFF} Дополнительный респект - Все члены семьи смогут получать дополнительные\n{F2E471}1-2{FFFFFF} опыта каждый PAYDAY.\n\
							{F4AF7F}2.{FFFFFF} Успех в работе - Каждый член семьи будет получать дополнительный {F2E471}талон\n{FFFFFF}при выполнении семейных заданий.\n\
							{F4AF7F}3.{FFFFFF} Бизнессмены в долгу - Участники семьи смогут {F2E471}Бесплатно {FFFFFF}входить\nна евент: Собиратели.\n\
							{F4AF7F}4.{FFFFFF} Неузнаваемый - Время действия маски каждого участника семьи\nв {F2E471}2-а {FFFFFF}раза больше.\n\
							{F4AF7F}5.{FFFFFF} Медики в долгу - Члены семьи смогу покупать аптечки {F2E471}без рецепта {FFFFFF}врача.\n\
							{F4AF7F}6.{FFFFFF} Белый список - Участники семьи платят {F2E471}в 3 раза меньше штраф {FFFFFF}за\nпревышение скорости перед радаром.\n\n\
							{F4AF7F}7.{FFFFFF} Банковские махинации - Участники семьи могут держать ставку в банке до {F2E471}200 000 000$ {FFFFFF}и получать до 200 000$ каждый payday.\n\
	                        {F4AF7F}8.{FFFFFF} Мародёры - Члены семьи смогут воровать патроны и ингридиенты у {F2E471}армий {FFFFFF}без состояния в банде или мафии.\n\
	                        {F4AF7F}9.{FFFFFF} Рыбный цех - Члены семьи смогут бесплатно кушать у {F2E471}холодильника {FFFFFF}семейной квартиры.\
						 ",!"Закрыть",!"");
			        }
		        }
		    }
		}
		case 8888://Уйти по с/ж в /fammenu
		{
			if(!response) return 1;
			if(PI[playerid][pID] == FamilyInfo[pFamilyID(playerid)][famZam_0])
			{
				FamilyInfo[pFamilyID(playerid)][famZam_0] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_0` = 'None' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
			}
			if(PI[playerid][pID] == FamilyInfo[pFamilyID(playerid)][famZam_1])
			{
				FamilyInfo[pFamilyID(playerid)][famZam_1] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_1` = 'None' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
			}
			if(PI[playerid][pID] == FamilyInfo[pFamilyID(playerid)][famZam_2])
			{
				FamilyInfo[pFamilyID(playerid)][famZam_2] = -1;
				mysql_pqueryf(mysql, "UPDATE `familys` SET `zam_2` = 'None' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
			}
			FamilyInfo[pFamilyID(playerid)][famMembersCount] --;
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{%s}[Cемья (Новости)] %s[%i]: {B9C1B8}самостоятельно покинул семью!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
			SendFamilyMessage(PI[playerid][pFamilyMember], str_1);
			str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}Вы успешно покинули семью: {d0d026}%s.\n\n\n", FamilyInfo[pFamilyID(playerid)][famName]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", str_1, !"Принять", !"");
            mysql_pqueryf(mysql, "UPDATE `familys` SET `Members` = '%i' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famMembersCount], PI[playerid][pFamilyMember]);
		   	PI[playerid][pFamilyMember] = -1;
		   	UpdatePlayerDataInt(playerid, "FamilyMember", -1);
		   	if(Iter_Contains(Familys, playerid) == 1) Iter_Remove(Familys, playerid);
		}
        case 10003:
        {
            if(!response) return 1;
            if(GetMoney(playerid) < 50000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас на руках недостаточно денег!");
            GiveMoney(playerid, -50000000);
            str_1[0] = EOS, f(str_1, sizeof(str_1), "UPDATE `familys` SET `galka` = '1' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
            mysql_pquery(mysql, str_1);
            str_1[0] = EOS, f(str_1, sizeof(str_1), "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}купил галочку для нашей семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
            SendFamilyMessage(PI[playerid][pFamilyMember], str_1);
            FamilyInfo[pFamilyID(playerid)][famGalka] = 1;
            callcmd::fammenu(playerid);
            UpdateDataInt("familys", "galka", FamilyInfo[pFamilyID(playerid)][famGalka], PI[playerid][pFamilyMember],"=");
			foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
        }
        case 10004:
        {
            if(!response) return 1;
            if(GetMoney(playerid) < 80000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас на руках недостаточно денег!");
            GiveMoney(playerid, -80000000);
            str_1[0] = EOS, f(str_1, sizeof(str_1), "UPDATE `familys` SET `brand` = '1' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famID]);
            mysql_pquery(mysql, str_1);
            str_1[0] = EOS, f(str_1, sizeof(str_1), "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}оформил бренд для нашей семьи!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
            SendFamilyMessage(PI[playerid][pFamilyMember], str_1);
            FamilyInfo[pFamilyID(playerid)][famBrand] = 1;
            callcmd::fammenu(playerid);
            UpdateDataInt("familys", "brand", FamilyInfo[pFamilyID(playerid)][famBrand], PI[playerid][pFamilyMember],"=");
			foreach_family(i) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerFamily(i);
        }
		case 211:
		{
			if(!response) return 0;
			if(GetPVarInt(playerid, !"alogin"))
			{
				new input = strlen(inputtextsave);
				if(input < 4 || input > 6 || !CheckInput(inputtextsave)) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Придумайте и введите админ-пароль\n\nПримечание:\n\t{FF6347}- Пароль должен состоять из цифр\n\t- Размер пароля может быть от 4 до 6 символов", !"Ввод", !"Отмена");
				PI[playerid][pAPass] = strval(inputtextsave);
				UpdatePlayerDataInt(playerid, "APass", PI[playerid][pAPass]);
				DeletePVar(playerid, !"alogin");
				SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Админ-панель", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
			}
			else
			{
   				if(!strval(inputtextsave)) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Админ-панель", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
				if(PI[playerid][pAPass] != strval(inputtextsave)) return J_Kick(playerid, 6666);
				str_d[0] = EOS;
				if(GetString(PlayerTag[playerid], "none")) f(str_d, sizeof(str_d), "%s",AInfo[PI[playerid][pAdmin]][Admin_Tag]);
				else f(str_d, sizeof(str_d), "%s",PlayerTag[playerid]);
			 	if(!NameIsFullDostup(playerid, 3)) SendAdminsMessagef(-1, "[A] %s%s {FFFFFF}%s вошел в систему администратирования", AInfo[PI[playerid][pAdmin]][AdminTag_Color], str_d, PN(playerid));
				SCMf(playerid, -1, "[A] Вы успешно авторизовались как %s%s", AInfo[PI[playerid][pAdmin]][AdminTag_Color], str_d);
	//			for(new i; i < 53; i++) 
	//			{
//					if(PI[playerid][pAdmin] > 5) EnableAntiCheatForPlayer(playerid, i, 0);
		//			else EnableAntiCheatForPlayer(playerid, i, 1);
		//		}
				ADuty{playerid} = true;
				CheckIsASuccesIP(playerid);
				callcmd::apanel(playerid);
			}
			return 1;
		}
		case 216: if(response) SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски\n \nВзять организационное оружие","Выбор","Назад");
		case 217:
	    {
			if(response)
	  		{
                new team = GetTeamID(playerid);
                switch(listitem)
	  		    {
					case 0: SPD(playerid,218,1,"","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n","Положить","Назад");
					case 1: SPD(playerid,219,1,"","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n","Положить","Назад");
					case 2:
					{
                        if(OrgInfo[team][oWareHouse]==true)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,220,1,"","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n","Взять","Назад");
					    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 3:
					{
                        if(OrgInfo[team][oWareHouse]==true)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,221,1,"","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
     				case 4: SPD(playerid,2666,1,"","\n\n{FFFFFF}Введите кол-во канистр которое хотите положить в Общак\n\n","Положить","Назад");
					case 5:
					{
                        if(OrgInfo[team][oWareHouse]==true)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2667,1,"","\n\n{FFFFFF}Введите кол-во канистр которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 6: SPD(playerid,2668,1,"","\n\n{FFFFFF}Введите кол-во инструментов которое хотите положить в Общак\n\n","Положить","Назад");
					case 7:
					{
                        if(OrgInfo[team][oWareHouse]==true)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2669,1,"","\n\n{FFFFFF}Введите кол-во инструментов которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 8: SPD(playerid,2670,1,"","\n\n{FFFFFF}Введите кол-во масок которое хотите положить в Общак\n\n","Положить","Назад");
					case 9:
					{
                        if(OrgInfo[team][oWareHouse]==true)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2671,1,"","\n\n{FFFFFF}Введите кол-во масок которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 10: SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски\n \nВзять организационное оружие","Выбор","Назад");
					case 11:
					{
                        if(IsAtGang(playerid))GivePlayerWeapon(playerid, 5, 1);
                        if(PI[playerid][pMember]==TEAM_LCN)GivePlayerWeapon(playerid, 2, 1);
                        if(PI[playerid][pMember]==TEAM_BIKERS)GivePlayerWeapon(playerid, 7, 1);
                        if(PI[playerid][pMember]==TEAM_YAKUZA)GivePlayerWeapon(playerid, 8, 1);
                        if(PI[playerid][pMember]==TEAM_RM)GivePlayerWeapon(playerid, 15, 1);
					}
	  		    }
			}
			return 1;
		}
		case 3735:
	    {
	    	if(!response) return 1;
        	else treasureProgress(playerid);
	    }
	    case 3736:
	    {
			if(!response) return 1;
			if(!HitchInfoStatus[PItreasure[playerid][tID]]) return 1;
            if(strlen(inputtext) < 1 || strlen(inputtext) > 16) return SCM(playerid, COLOR_VALIK, !"[Hitch-System]{FFFFFF} Ответ слишком длинный/короткий!");
			if(GetString(kladqusans[ PItreasure[playerid][tQuestionID] ][kladanswer],inputtext))
			{
  				if(GetPVarInt(playerid, !"treasure") > global_time) return SCM(playerid, COLOR_VALIK, !"[Hitch-System]{FFFFFF} Подождите немного!");
 				SetPVarInt(playerid, !"treasure", global_time + 10);
			    new i = PItreasure[playerid][tID];
				for(new j; j < 2; j++) DestroyDynamicObject(KladObject[i][j]);
				if(IsValidDynamic3DTextLabel(Klad3dText[i])) DestroyDynamic3DTextLabel(Klad3dText[i]);
				HitchInfoStatus[i] 		= 0;
				PItreasure[playerid][tQuestionID] = 0;
				if(Iter_Contains(TREASURE, i) == 1) Iter_Remove(TREASURE,i);
                SCM(playerid, COLOR_VALIK, !"[Hitch-System]{FFFFFF} Поздравляем! Вы успешно взломали замок клада.");
                SCM(playerid, COLOR_VALIK, !"[Hitch-System]{FFFFFF} Выберите призы, которые хотите взять из клада.");
				treasureShowTD(playerid);
			}
			else
			{
            	new rands = random(sizeof(kladqusans));
				PItreasure[playerid][tQuestionID] = rands;
				SCM(playerid, COLOR_VALIK, !"[Hitch-System]{FFFFFF} Ответ неправильный! Вы не смогли взломать замок");
				str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\n\nДля того, чтобы взломать замок,\nвам необходима ответить на вопрос-загадку!\n\nВопрос:\n%s\n\nВведите ответ в пустое контекстное поле:\n\n", kladqusans[rands][kladquestion]); 
				SPD(playerid,3736,DIALOG_STYLE_INPUT,!"{FFFFFF}Взлом | {DC4747}Клад",str_1,!"»",!"X");
			}
		}
    	case 218:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs > 0)
	  		    {
	  		        if(drugs <= GetInvCount(playerid, 327))
	  		        {
	  		            if(OrgInfo[team][oItemCount][1] + drugs <= 5000)
	  		            {
		  		            InvAdd(playerid, 327, -drugs);
		  		            OrgInfo[team][oItemCount][1] += drugs;
		  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы положили %iг наркотиков в Общак",drugs);
		  		            SCM(playerid,COLOR_VALIK,str_1);
		  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"%s положил в общак %i наркотиков.",PN(playerid),drugs);
		  		            STM(PI[playerid][pMember],COLOR_GREY,str_1);
		  		            UpdateDorm(team);
		  		            SaveOrg(team);
	  		            }
	  		            else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: Столько в общак не поместится","Положить","Назад");
	  		        }
	  		        else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько наркотиков","Положить","Назад");
	  		    }
	  		    else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1г","Положить","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 219:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new mats = strval(inputtextsave);
	  		    if(mats > 0)
	  		    {
	  		        if(mats <= GetInvCount(playerid, 328))
	  		        {
	  		            if(OrgInfo[team][oItemCount][0] + mats <= 50000)
	  		            {
		  		            InvAdd(playerid, 328, -mats);
		  		            OrgInfo[team][oItemCount][0] += mats;
		  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы положили %i патронов в Общак",mats);
		  		            SCM(playerid,COLOR_VALIK,str_1);
		  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"%s положил в общак %i патронов.",PN(playerid),mats);
		  		            STM(PI[playerid][pMember],COLOR_GREY,str_1);
		  		            UpdateDorm(team);
		  		            SaveOrg(team);
	  		            }
	  		            else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: Столько в общак н поместится","Положить","Назад");
	  		        }
	  		        else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько патронов","Положить","Назад");
	  		    }
	  		    else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1 патрона","Положить","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 220:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs > 0)
	  		    {
	  		        if(drugs <= OrgInfo[team][oItemCount][1])
	  		        {
	  		            InvAdd(playerid, 327, drugs);
	  		            OrgInfo[team][oItemCount][1] -= drugs;
	  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы достали %iг наркотиков с Общака",drugs);
	  		            SCM(playerid,COLOR_VALIK,str_1);
	  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"%s забрал с общака %iг. наркотиков!",PN(playerid),drugs);
	  		            STM(GetTeamID(playerid),COLOR_GREY,str_1);
	  		            UpdateDorm(team);
	  		            SaveOrg(team);
	  		        }
	  		        else SPD(playerid,220,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько наркотиков","Взять","Назад");
	  		    }
	  		    else SPD(playerid,220,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1г","Взять","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
 		}
		case 221:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new mats = strval(inputtextsave);
	  		    if(mats > 0)
	  		    {
	  		        if(mats <= OrgInfo[team][oItemCount][0])
	  		        {
	  		            InvAdd(playerid, 328, mats);
	  		            OrgInfo[team][oItemCount][0] -= mats;
	  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы достали %i патронов с Общака",mats);
	  		            SCM(playerid,COLOR_VALIK,str_1);
	  		            str_1[0] = EOS, f(str_1, sizeof(str_1),"%s забрал с общака %i патронов!",PN(playerid),mats);
	  		            STM(GetTeamID(playerid),COLOR_GREY,str_1);
	  		            UpdateDorm(team);
	  		            SaveOrg(team);
	  		        }
	  		        else SPD(playerid,221,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько патронов","Взять","Назад");
	  		    }
	  		    else SPD(playerid,221,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1 патрона","Взять","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 222:
	    {
			if(response)
			{
			    if(donateopen{playerid}) return 1;
                HideLogo(playerid);
			    HideTextDraws(playerid, 2);
			    ShowDonateTD(playerid);
			}
		}
		case 900:
	    {
			if(response)
	  		{
	  		    if(!strlen(inputtextsave)) return SPD(playerid,0,0,!"",!"Ошибка.","Закрыть","");
		        new money = strval(inputtextsave);
		        if(money >= 1 && money <= 10000 && PI[playerid][pVirMoney] >= money)
		        {
		            if(money<3000)
					{
						GiveMoney(playerid, money*11000, "купил в донате");
						str_1[0] = EOS, f(str_1, sizeof(str_1),"Вы успешно обменяли {BE2D2D}%i{FFFFFF} az coin's на {BE2D2D}%i${FFFFFF}.",money,money*11000);
						SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
					}
		            else
		            {
		                GiveMoney(playerid, money*11000, "купил в донате");
		                str_1[0] = EOS, f(str_1, sizeof(str_1),"Вы успешно обменяли {BE2D2D}%i{FFFFFF} az coin's на {BE2D2D}%i$.{FFFFFF}\n\n{BE2D2D}Внимание!\n\n{FFFFFF}За обмен который составляет выше {BE2D2D}3000{FFFFFF} az coin's вы\nполучаете дополнительный бонус {BE2D2D}250{FFFFFF} az coin's.",money,money*11000);
						SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
		                GiveDonate(playerid, 250);
		            }
		            GiveDonate(playerid, -money);
		        }
		        else SPD(playerid,0,0,!"",!"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n","Закрыть","");
			}
		}
		case 901:
	    {
			if(response)
	  		{
	  		    if(!strlen(inputtextsave))
				  	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Ошибка.", !"Закрыть", !"");

		        new
					money = strval(inputtextsave);
		        if(money >= 1 && money <= 500 && PI[playerid][pVirMoney] >= money*5)
		        {
		            if(money < 101)
					{
						InvAdd(playerid, 359, money);
						GiveDonate(playerid, -money*5);
						str_1[0] = EOS, f(str_1, sizeof(str_1), "\n\n{FFFFFF}Вы успешно обменяли {42B02C}%i{FFFFFF} az coin's на {42B02C}%i семейных талонов.\n{FFFFFF}На миникарте будет отмечено место, где можно обменять талоны!\n\n", money*5, money);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
						EnableGPSForPlayer(playerid, 1770.2777, 423.8289, 20.1436);
					}
					else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
		        }
		        else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
			}
		}
		case 8821:
	    {
			if(response)
	  		{
	  			if(strval(inputtext) > 501) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FF6347}Ошибка. Нельзя купить больше 500 EXP.", !"Закрыть", !"");
				if(!strlen(inputtext)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Ошибка.", !"Закрыть", !"");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PI[playerid][pVirMoney] >= money*2)
		        {
		            str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Вы успешно обменяли {FFD93B}%i {FFFFFF}az coins\nна {FFD93B}%i EXP.", money*2, money);
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
					GiveDonate(playerid, -money*2);
		            PI[playerid][pExp] += money;
		            CheckNextLevel(playerid);
		        }
		        else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
			}
		}
		case 8992:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 600) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
		}
		case 8993:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 1200) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
			InvAdd(playerid, 658, 1);
		    GiveDonate(playerid, -1200);
		}
		case 8994: {
		    if(!response) {
		        return 1;
		    }
		    if(PI[playerid][pImprovement][4] != false)
		    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данное улучшение уже куплено!");

		    if(GetDonate(playerid) < 4000)
		        return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");

		    GiveDonate(playerid, -4000);
		    PI[playerid][pImprovement][4] = true;
			str_1[0] = EOS;
			for(new i; i < 11; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pImprovement][i]);
			UpdatePlayerDataStr(playerid, "Improvement", str_1);
		    PI[playerid][pCarSkill] = 100;
		    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
	        GameTextForPlayer(playerid, !"successful", 0, 1);
	        besttime[playerid] = 0;
        	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}- Поздравляем!\nТеперь вы владелец улучшения: {FF5824}'Вечный Car Skill'", !"Окей", !"");
		}
		case 8990:
		{
			if(!response) return 1;
			if(GetDonate(playerid) < 500) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
			if(PI[playerid][pInvCell] == MAX_SLOT_INV) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже куплены все улучшения!");
			PI[playerid][pInvCell] += 6;
			UpdatePlayerDataInt(playerid, "InvCell", PI[playerid][pInvCell]);
			GiveDonate(playerid, -500);
			SPD(playerid, 0, 0, !"", !"{FFFFFF}-Поздравляем!\nТеперь вы владелец улучшения {FF6347}'Дополнительные 6 ячеек'", !"Окей", !"");
			GameTextForPlayer(playerid, !"Successful", 0, 1);
		}
		case 8996:
		{
			if(!response) return 1;
            if(PI[playerid][pVirMoney] >= 1200)
	  	  	{
	  			GiveDonate(playerid, -1200);
	  			PI[playerid][pVirMoney] -= 1200;
				for(new i; i < 9; i++) PI[playerid][pSkill][i] = 10000;
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы прокачали все скиллы до 100%");
				SetPlayerSkills(playerid);
                SavePlayer(playerid,6);
			}
	  		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
		}
		case 8997:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 650000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
            if(PI[playerid][pVIP][0] > 5) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
            GiveDonate(playerid, -650000);
			J_SetPlayerVIP(playerid, 6);
			InvAdd(playerid,595,1);
			PI[playerid][pVipTime] = forever;
			UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			SCMAll(COLOR_RED, (str_f("[Информация]{FFFFFF} Игрок %s приобрел PREMIUM VIP.", PN(playerid))));
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой Premium VIP!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
		}
		case 8999:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 150000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
            if(PI[playerid][pVIP][0] >= 5) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
            GiveDonate(playerid, -150000);
			J_SetPlayerVIP(playerid, 5);
			PI[playerid][pVipTime] = unixtime(30);
			UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			SCMAll(COLOR_LIGHTRED, (str_f("[Информация]{FFFFFF} Игрок %s приобрел Titan VIP.", PN(playerid))));
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой Titan VIP!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
		}
		case 8995:
		{
		    if(!response) return 1;
		    if(GetDonate(playerid) < 50) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
		    GiveDonate(playerid, -50);
		    PI[playerid][pCarSkill] = 100;
		    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
		    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Ваш навык вождения восстановлен к 100 единицам!");
		}
		case 9002: {
			if(!response) return 1;
			if(GetDonateRub(playerid) < 5999) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет 3000 AZ-Rubles для покупки дополнения к VIP-аккаунту!");
   			PI[playerid][pRub] -= 5999;
			InvAdd(playerid, 5241, 1);
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой 'Дополнение к VIP-аккаунту'!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
		}
		case 9003: {
		    if(!response) {
		        return 1;
		    }
            if(PI[playerid][pVirMoney] >= 300)
  		    {
  		        if(!GiveLicense(playerid, 365)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже куплены все лицензии!");
				GiveDonate(playerid, -300);
				SCM(playerid, COLOR_GREY, !"Вы успешно купили/восстановили все лицензии!");
  		    }
  		    else
  			{
			  	SCM(playerid, COLOR_GREY, !"У вас нехватает денег на счету");
			}
		}
		case 8991:
		{
			if(!response) return 1;
			if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
			if(PI[playerid][pVirMoney] >= 300)
			{
				GiveDonate(playerid, -300);
				FamilyInfo[pFamilyID(playerid)][famRep] += 1000;
				mysql_tqueryf(mysql, "UPDATE `familys` SET `rep` = '%i' WHERE `ID` = '%i' LIMIT 1;",FamilyInfo[pFamilyID(playerid)][famRep],PI[playerid][pFamilyMember]);
				SCM(playerid, COLOR_GREY, !"Вы успешно купили семейную репутацию!");
				//aml(54, playerid, "", "покупка репутации для семьи", 1000);
			}
		}
		case 9012:
		{
		    if(!response) return 1;
           	if(PI[playerid][pRank] == 10) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");
            if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");
            if(GetPlayerHouses(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть дом или вы в нем подселены!");
            if(GetPlayerBiz(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть бизнес!");
            if(GetNumberCars(playerid) != 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть автомобиль!");
  		    if(PI[playerid][pVirMoney] >= 20) SPD(playerid, 224, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"", !"Сменить", !"Отмена");
  		    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
		}
		case 9011: {
		    if(!response) {
		        return 1;
		    }
            if(PI[playerid][pWarns] > 0)
            {
	  		    if(PI[playerid][pVirMoney] >= 250)
	  		    {
	  		        if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете снять варны, тк. у вас есть выговор!");
	  		        GiveDonate(playerid, -250);
	  		        PI[playerid][pWarns] --;
	  		        UpdatePlayerDataInt(playerid, "Warns", PI[playerid][pWarns]);
	  		        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы сняли 1 предупреждение");
    			}
	  		    else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
  		    }
  		    else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет предупреждений");
		}
		case 8105:
	    {
	        if(!donateopen{playerid}) return 1;
	        if(!response) return 1;
	        new select = Donate_Select[playerid], item = DonateInfo[select][Item_InvID];
	        if(!DonateInfo[select][Item_TypeCost])
	        {
				if(item == 1087 || item == 1088 || item == 1089)
				{
					if(!RareBoxAmount{item-1087}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас не достаточно боксов для покупки!");
					RareBoxAmount{item-1087}--;
				}
				if(GetDonate(playerid) < DonateInfo[select][Item_Cost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
				GiveDonate(playerid, -DonateInfo[select][Item_Cost]);
			}
			else
			{
				if(GetDonateRub(playerid) < DonateInfo[select][Item_Cost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az rub!");
				PI[playerid][pRub] -= DonateInfo[select][Item_Cost];
				UpdatePlayerDataInt(playerid, "pRub", PI[playerid][pRub]);
			}
			InvAdd(playerid, DonateInfo[select][Item_InvID], 1);
	    	SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Поздравляем вас с покупкой!");
		}
        case 224:
	    {
			if(response)
	  		{
			    if(PI[playerid][pVirMoney] >= 20)
			    {
			        if(strfind(inputtextsave, " ")!=-1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В вашем нике замечен пробел!");
			        if(!IsARPPN(inputtextsave)) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
			        if(!IsAGameNick(inputtextsave)) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
			        if(strlen(inputtextsave) > 20 ) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник слишком длинный!","Сменить","Отмена");
			        static name[20];
			        name[0] = EOS;
			        mysql_escape_string(inputtextsave, name);
				    mf(mysql, str_2, sizeof(str_2), "SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
					mysql_tquery(mysql, str_2, "MysqlCheckNameBuyName", "ds", playerid, name);
					return 1;
				}
			}
		}
		case 189:
		{
		    if(!response)
				return 1;

	        switch(listitem)
  		    {
		        case 0:
		        {
		            if(GetDonate(playerid) < 10000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно доната.");
       				PI[playerid][pVirMoney] -= 10000;
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					SCM(playerid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы пожертвовали {FF6347}10 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
					FondInfoMoney += 10000;
				    mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET donation = donation + 10000 WHERE NickName = '%s' LIMIT 1;", PN(playerid));
		        }
				case 1:
				{
				    if(GetDonate(playerid) < 50000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно доната.");
       				PI[playerid][pVirMoney] -= 50000;
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					SCM(playerid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы пожертвовали {FF6347}50 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
					FondInfoMoney += 50000;
					mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET donation = donation + 50000 WHERE NickName = '%s' LIMIT 1;", PN(playerid));
				}
				case 2:
				{
				    if(GetDonate(playerid) < 200000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно доната.");
       				PI[playerid][pVirMoney] -= 200000;
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					SCM(playerid, COLOR_LIGHTRED,!"[Информация]{FFFFFF} Вы пожертвовали {FF6347}200 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
					FondInfoMoney += 200000;
				    mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET donation = donation + 200000 WHERE NickName = '%s' LIMIT 1;", PN(playerid));
				}
				case 3:
				{
				    if(GetDonate(playerid) < 1000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно доната.");
       				PI[playerid][pVirMoney] -= 1000000;
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					GameTextForPlayer(playerid, !"Successful", 0, 1);
                    foreach_player(i) {
                    	if(!PI[i][pNewsChat]) {
					    	str_1[0] = EOS, f(str_1, sizeof(str_1), "[Новости штата] {FFFFFF}%s{FFD700} пожертвовал {FFFFFF}1000000${FFD700} в благотворительный фонд штата", PN(playerid));
					    	SCM(i, COLOR_GOLD, str_1);
                    	}
                    }
					FondInfoMoney += 1000000;
                    mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET donation = donation + 1000000 WHERE NickName = '%s' LIMIT 1;", PN(playerid));
				}
				case 4:
				{
				    if(GetDonate(playerid) < 5000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно доната.");
       				PI[playerid][pVirMoney] -= 5000000;
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					GameTextForPlayer(playerid, !"Successful", 0, 1);
                    foreach_player(i) {
                    	if(!PI[i][pNewsChat]) {
					    	str_1[0] = EOS, f(str_1, sizeof(str_1), "[Новости штата] {FFFFFF}%s{FFD700} пожертвовал {FFFFFF}5000000${FFD700} в благотворительный фонд штата", PN(playerid));
					    	SCM(i, COLOR_GOLD, str_1);
                    	}
                    }
					FondInfoMoney += 5000000;
                    mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET donation = donation + 5000000 WHERE NickName = '%s' LIMIT 1;", PN(playerid));
				}
			}
		}
		case 188:
		{
		    if(response)
		    {
		        if(GetMoney(playerid) < 5000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        SCM(playerid, COLOR_BLUENEW, !"Вы купили обручальные кольца (После перезахода в игру они исчезают!)");
		        Ring[playerid] = 1;
		        GiveMoney(playerid, -5000, "купил обручальные кольца");
			}
		}
		case 227:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money >= 5000 && money <= 100000)
				{
					if(OrgInfo[TEAM_BANK][oBank]< money) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В банке недостаточно денег для того чтобы выдать кредит");
					str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}Вы действительно хотите выдать кредит игроку в размере: $%i?\n{B83434}На данный момент баланс банка составляет: %i\nПри выдачи кредита деньги с банка спишутся!",money,OrgInfo[TEAM_BANK][oBank]);
					SPD(playerid, 228, 0, "Кредит", str_1, "Выдать", "Отмена");
				}
				else SPD(playerid,227,1,"Кредит","{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $100000\nВнимание: Не верная сумма!","Далее","Отмена");
		    }
		}
		case 3772:
		{
			if(!response) return 1;
			new Float:pos[3],world,interior;
			switch(listitem)
			{
				case 0: pos[0] = 1527.5156, pos[1] = 1335.4166, pos[2] = 10.9787, world = 1, interior = 220;
				case 1: pos[0] = 1489.7201, pos[1] = -1259.5638,pos[2] = 113.8044, world = 2, interior = 0;
				case 2: 
				{
					if(!IsAtGang(playerid) && !IsAtMafia(playerid)) pos[0] = 1999.9302, pos[1] = 1121.5923, pos[2] = 1038.6824, world = 4, interior = 0;
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам запрещен вход в это помещение!");
				}
				case 3: pos[0] = 1500.2008, pos[1] = -1259.6384, pos[2] = 121.1435, world = 3, interior = 0;
			}
			SetPlayerVirtualWorldEx(playerid, world);
			SetPlayerInteriorEx(playerid, interior);
			J_SetPlayerPos(playerid, pos[0],pos[1],pos[2]);
		}
		case 9001:
		{
		    if(response)
		    {
		        if(GetDonate(playerid) < 150) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
		        if(TeamDuty{playerid})return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В момент дежурства вы не можете сменить пол! Переоденьтесь или увольтись с организации!");
		        if(InJob[playerid]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закончите сначало свою работу!");
				switch(PI[playerid][pSex])
				{
				    case 1:
					{
					    SPD(playerid,0,0,!"",!"{8CB736}Поздравляем!\n\n{FFFFFF}Вы успешно сменили свой пол на женский, а стоимость реабилитации составила 150 az coin`s\nСоветуем обзавестись хорошей одеждой.","Принять","");
					    SetPlayerSkinEx(playerid,90);
					    PI[playerid][pSkin] = 90;
					    PI[playerid][pSex]=2;
					}
					default:
					{
					    SPD(playerid,0,0,!"",!"{8CB736}Поздравляем!\n\n{FFFFFF}Вы успешно сменили свой пол на мужской, а стоимость реабилитации составила 150 az coin`s\nСоветуем обзавестись хорошей одеждой.","Принять","");
					    SetPlayerSkinEx(playerid,73);
					    PI[playerid][pSkin] = 73;
					    PI[playerid][pSex]=1;
					}
				}
				UpdatePlayerDataInt(playerid, "Skin", PI[playerid][pSkin]);
				UpdatePlayerDataInt(playerid, "Sex", PI[playerid][pSex]);
				GiveDonate(playerid, -150);
				PlayerSpawn(playerid);
		    }
		}
		case 1977:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    if(OrgInfo[6][oLeaderUID] != -1)
						{
                            str_1[0] = EOS, requestPN(OrgInfo[6][oLeaderUID], str_1);
						    f(str_1, sizeof(str_1),"На данный момент должность губернатора занимает: %s",str_1);
							SendBotMessage(playerid,str_1);
						}
					    else SendBotMessage(playerid,!"Сейчас должность губернатора никто не занимает.");
					}
					case 1: SendBotMessage(playerid,!"В задачи губернатора входят много дел, например следить за экономикой штата,\nобновлять казну организаций, правильно распределять прием и направление налогов,\nи много другого, к сожaлению больше ничего сказать не могу.");
		        	case 2: callcmd::sobes(playerid);
					case 3: SendBotMessage(playerid,!"У мэрии пропала информация по данным вопросам, обратитесь позже!");
					case 4: SendBotMessage(playerid,!"Каждый лидер фракции может изменить зарплату своих подчиненных\nв зависимости от бюджета органзации, который регулируется за счет активности\nлюдей в ней.");
				}
		    }
		}
		case 1982:
		{
			if(!response)
				return 1;
			switch(listitem)
			{
				case 0: SendBotMessage(playerid, !"В авиашколе города Las-Venturas!");
				case 1: SendBotMessage(playerid, !"Сдача на права бесплатная!");
				case 2:
				{
				    new num;
        			foreach_player(i)
				    {
				        if(PI[i][pMember] == 9 && TeamDuty{i})
							num ++;
				    }
				    if(!num)
						return SendBotMessage(playerid, !"Сейчас никого нет на дежурстве");

				    else
						str_1[0] = EOS, f(str_1, sizeof(str_1), "На дежурстве сейчас %i человек!", num);

				    SendBotMessage(playerid, str_1);
				}
				case 3: SendBotMessage(playerid, !"$20 000, примерно!");
			}
		}
	    case 1978:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
                    if(OrgInfo[5][oLeaderUID] != -1)
                    {
                        str_1[0] = EOS, requestPN(OrgInfo[6][oLeaderUID], str_1);
						f(str_1, sizeof(str_1), "На данный момент должность главврача занимает: %s", str_1);
						SendBotMessage(playerid, str_1);
					}
					else SendBotMessage(playerid,!"Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid,!"Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
        			foreach_player(i)
				    {
				        if(PI[i][pMember] == 5 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid,!"Сейчас никого нет на дежурстве");
				    else str_1[0] = EOS, f(str_1, sizeof(str_1), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str_1);
				}
				case 3: SendBotMessage(playerid,!"Сейчас вы в Больнице ЛС!");
			}
		}
	    case 1979:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
                    if(OrgInfo[8][oLeaderUID] != -1)
                    {
                        str_1[0] = EOS, requestPN(OrgInfo[8][oLeaderUID], str_1);
						f(str_1, sizeof(str_1), "На данный момент должность главврача занимает: %s", str_1);
						SendBotMessage(playerid, str_1);
					}
					else SendBotMessage(playerid,!"Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid,!"Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
        			foreach_player(i)
				    {
				        if(PI[i][pMember] == 8 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid,!"Сейчас никого нет на дежурстве");
				    else str_1[0] = EOS, f(str_1, sizeof(str_1), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str_1);
				}
				case 3: SendBotMessage(playerid,!"Сейчас вы в Больнице СФ!");
			}
		}
	    case 1980:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
                    if(OrgInfo[22][oLeaderUID] != -1)
                    {
                        str_1[0] = EOS, requestPN(OrgInfo[22][oLeaderUID], str_1);
						f(str_1, sizeof(str_1), "На данный момент должность главврача занимает: %s", str_1);
						SendBotMessage(playerid, str_1);
					}
					else SendBotMessage(playerid,!"Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid,!"Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
        			foreach_player(i)
				    {
				        if(PI[i][pMember] == 22 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid,!"Сейчас никого нет на дежурстве");
				    else str_1[0] = EOS, f(str_1, sizeof(str_1), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str_1);
				}
				case 3: SendBotMessage(playerid,!"Сейчас вы в Больнице ЛВ!");
			}
		}
		case 1966:
		{
		    if(response)
		    {
		        new idofcar=idaofcar[playerid];
				switch(listitem)
				{
				    case 0:
				    {
				        if(!TrunkInfo[idofcar][tOpen])
						{
							new number = GetVehicleID(idofcar);
							if(IsPlayerHaveCar(playerid, number) != 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой личной машины!");
							else if(vTemp[idofcar][vTeam] > 0 && PI[playerid][pMember]!=vTemp[idofcar][vTeam]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой, огранизации!");
							TrunkInfo[idofcar][tOpen]=true;
			       			SetBootStatus(idofcar,1);
			       			J_ApplyAnimation(playerid, !"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
						}
				        else
						{
							new number = GetVehicleID(idofcar);
							if(IsPlayerHaveCar(playerid, number) != 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой личной машины!");
							else if(vTemp[idofcar][vTeam] > 0 && PI[playerid][pMember]!=vTemp[idofcar][vTeam]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой, огранизации!");
							TrunkInfo[idofcar][tOpen]=false;
			       			SetBootStatus(idofcar,0);
			       			J_ApplyAnimation(playerid, !"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
						}
				        TetCar(playerid);
				    }
				    case 1://Открытие багажника
				    {
        				if(!TrunkInfo[idofcar][tOpen]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Багажник сейчас закрыт!");
				    	InvTypePlayer{playerid} = 3;
				    	ShowInvMenu(playerid, 3);
				    	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
				    }
				}
		    }
		}
		case 1081:
		{
		    if(response)
		    {
			    new id = PI[playerid][pMScutes];
				if(id!=-1)PI[id][pScutes] = -1,str_1[0] = EOS, f(str_1, sizeof(str_1),"Вы успешно отключили жучек с мобильного телефона игрока %s.",PN(id));
				PI[playerid][pMScutes]=-1,SCM(playerid,COLOR_GREEN,str_1);
			}
		}
		case 2761:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid,185,2,"Выберите еду","{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$","Выбор","Отмена");
		            case 1:
		            {
		            }
		        }
		    }
		}
		case 7681:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: SPD(playerid,1339,2,"Задать вопрос","- Что ты тут делаешь?\n- Куда ты сейчас направляешся?\n- Как найти автошколу?\n- Что делать если нет паспорта?\n- Сложно ли тут получить права?\n- Сколько стоит номер в отеле?\n- Где взять телефон?\n- Почему чувак справа раздает халявную еду?\n- У меня нет мед.карты, где ее получить?","Закрыть","");
					case 1: ShowQuest(playerid, 0);
		        }
		    }
		}
		case 1653:
		{
		    if(response)
		    {
		        PI[playerid][pType] = listitem;
          		SetPlayerBuyItem(playerid);
		    }
		}
		case 8761:
		{
		    if(response)
		    {
		        for(new i;i<22;i++)
		        {
		            if(listitem==i)
					{
						EnableGPSForPlayer(playerid,BizInfo[player_GlobalID[playerid][i]][bEnter_X],BizInfo[player_GlobalID[playerid][i]][bEnter_Y],BizInfo[player_GlobalID[playerid][i]][bEnter_Z]);
						SCM(playerid, COLOR_LIGHTBLUE, !"Местоположение заказчика отмечено на карте красным маркером. Не забудьте загрузить товар (/gps - разное - склады)");
						if(BizInfo[player_GlobalID[playerid][i]][bState] == 7 || BizInfo[player_GlobalID[playerid][i]][bState] == 1) SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает продукты только со склада фермы!");
						else if(BizInfo[player_GlobalID[playerid][i]][bState] == 2) SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает продукты с фермы и разгрузочной станции!");
						else  SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает товар только со склада разгрузочной станции!");
					}
		        }
		    }
		}
		case 6971:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: callcmd::park(playerid);
			    case 1:
			    {
					new carid = ShowVeh[playerid];
					new number = GetVehicleID(ShowVeh[playerid]);
					if(!IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_RED, !"Это не ваша машина!");
					CarInfo[number][cVirtualWorld] = 0;
					CarInfo[number][cInterior] = 0;
					SetVehiclePosToStandartPark(carid);
					SetVehicleToRespawn(carid);
					UpdateDataInt("ownable","VirtualWorld", CarInfo[number][cVirtualWorld], CarInfo[number][cID],"=");
					UpdateDataInt("ownable","Interior", CarInfo[number][cInterior], CarInfo[number][cID],"=");
					return 1;
			    }
			}
		}
		case 229:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money > 0 && PI[playerid][pBank][0] >= money)
				{
				    if(money <= PI[playerid][pCredit])
				    {
					    PI[playerid][pBank][0] -= money;
					    SavePlayer(playerid,7);
					    PI[playerid][pCredit] -= money;
					    UpdatePlayerDataInt(playerid, "Credit", PI[playerid][pCredit]);
					    OrgInfo[TEAM_BANK][oBank]+=money;
					    SaveOrg(TEAM_BANK);
					    str_1[0] = EOS, f(str_1, sizeof(str_1),"[Информация] {FFFFFF}Вы погасили кредит на $%i",money);
					    SCM(playerid, COLOR_VALIK, str_1);
					    SendBankBot(playerid);
					    //////aml(62, playerid, PN(playerid), "погасил кредит");
					    if(PI[playerid][pCredit] <= 0)
					    {
					        PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
					        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Вы полностью погасили кредит!");
					    }
				    }
				    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Сумма вашего кредита меньше, чем вы хотите заплатить");
				}
				else SendBotMessage(playerid,!"На вашем банковском счету нет нужной суммы!");
			}
			else ShowBankMenu(playerid);
		}
		case 230:
		{
		    if(response)
		    {
		    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return RemovePlayerFromVehicle(playerid);
		        new arid = GetArendCarID(GetPlayerVehicleID(playerid));
			    new vehid = GetPlayerVehicleID(playerid);
       			new cost;
       			switch(GetVehicleModel(vehid))
			    {
           			case 454: cost= 10000;
			        case 484: cost = 12000;
			        case 558: cost = 9000;
			        case 541: cost = 22000;
			        case 560: cost = 13000;
			        case 409: cost = 10000;
					case 462: cost = 250;
					case 469: cost = 15000;
					case 487: cost = 20000;
			        default: cost = GLS[14];
				}
		        if(GetMoney(playerid) >= cost)
		        {
		            ArendKey[playerid] = arid;
		            ArendInfo[arid][aRentID] = playerid;
		            SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно арендовали это ТС");
		            SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Чтобы отказаться от аренды [/unrentcar]");
		            SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Чтобы закрыть автомобиль используйте [/jlock]");
		            GiveMoney(playerid,-cost, "арендовал т/с");
					GiveBizMoney(playerid,cost);
		        }
				else
				{
				    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
		    else RemovePlayerFromVehicle(playerid);
		    return 1;
		}
		case 329:
		{
		    if(response)
		    {
		        listitem++;
				GLS[0] = listitem;
			    UpdateDataConfig("credit",GLS[0]);
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"Лидер центрального банка - %s. Установил кредитную ставку %i процентов!",PN(playerid),GLS[0]);
				SCMAll(COLOR_GOLD,str_1);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFD700}Получение кредитa\n{FFD700}Кредитная ставка %i процентa(ов).\n{FFD700}Получить кредит можно через сотрудника банка!",GLS[0]);
				UpdateDynamic3DTextLabelText(cretits, 0xFFFFFFFF, str_1);
			}
		}

		case 233:
		{
		    if(response)
		    {
		        if(PI[playerid][pJob] != JOB_NONE) return SendBotMessage(playerid,!"У вас уже есть работа, чтобы уволиться напишите /quitjob");
		    	switch(listitem)
			    {
					case 0:
					{
					    if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,!"На эту работу можно устроиться с 3 уровня!");
						GetJob[playerid] = JOB_MECHANIC;
						SPD(playerid,28,0,"Работа: Механик","{FFFFFF}Вы собираетесь устроиться на работу Механиком\nВы согласный с условиями?","Да","Нет");
					}
					case 1:
					{
					    if(PI[playerid][pLevel] < 2) return SendBotMessage(playerid,!"На эту работу можно устроиться с 2 уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
                        if(!GetInvCount(playerid, 1176)) return SendBotMessage(playerid,!"У вас нет прав таксиста");
						GetJob[playerid] = JOB_TAXI;
						SPD(playerid,28,0,"Работа: Таксист","{FFFFFF}Вы собираетесь устроиться на работу Таксистом\nВы согласный с условиями?","Да","Нет");
					}
					case 2:
					{
						if(PI[playerid][pLevel]<5)return SendBotMessage(playerid,!"На эту работу можно устроиться с 5-го уровня!");
						GetJob[playerid] = JOB_GUIDE;
						SPD(playerid,28,0,"Работа: Крупье","{FFFFFF}Вы собираетесь устроиться на работу Крупье в казино\nВы согласны с условиями?","Да","Нет");
					}
					case 3:
					{
		   				if(PI[playerid][pLevel] < 7) return SendBotMessage(playerid,!"На эту работу можно устроиться с 7-го уровня!");
						if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,!"Чтобы работать в Налоговой нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_NALOG;
						SPD(playerid,28,0,"Налоговая","{FFFFFF}Вы собираетесь устроиться в налоговую кантору\nВы согласны с условиями?","Да","Нет");
					}
					case 4:
					{
					    if(PI[playerid][pLevel]<6)return SendBotMessage(playerid,!"На эту работу можно устроиться только с 6-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,!"Чтобы работать инкассатором нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_COLLECTOR;
						SPD(playerid,28,0,"Работа: Инкассатор","{FFFFFF}Вы собираетесь устроиться на работу Инкассатором\nВы согласный с условиями?","Да","Нет");
					}
					case 5:
					{
					    if(PI[playerid][pLevel] < 5) return SendBotMessage(playerid,!"На эту работу можно устроиться с 5-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						GetJob[playerid] = JOB_TRUCKER;
						SPD(playerid,28,0,"Работа: Дальнобойщик","{FFFFFF}Вы собираетесь устроиться на работу Дальнобойщиком\nВы согласный с условиями?","Да","Нет");
					}
					case 6:
					{
					    if(PI[playerid][pLevel] < 4) return SendBotMessage(playerid,!"На эту работу можно устроиться с 4-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						GetJob[playerid] = JOB_SCRAPER;
						SPD(playerid,28,0,"Работа: Развозчик металлолома","{FFFFFF}Вы собираетесь устроиться на работу Развозчиком металлолома\nВы согласный с условиями?","Да","Нет");
					}
					case 7:
					{
					    if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,!"На эту работу можно устроиться с 3-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						GetJob[playerid] = JOB_MUSOR;
						SPD(playerid,28,0,"Работа: Мусорщик","{FFFFFF}Вы собираетесь устроиться на работу мусорщиком\nВы согласный с условиями?","Да","Нет");
					}
					case 8:
					{
					    if(PI[playerid][pLevel] < 2) return SendBotMessage(playerid,!"На эту работу можно устроиться с 2-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						GetJob[playerid] = JOB_GUNDEALER;
						SPD(playerid,28,0,"Работа: Водитель автобуса","{FFFFFF}Вы собираетесь устроиться на работу водителя автобуса\nВы согласный с условиями?","Да","Нет");
					}
					case 9:
					{
					    if(PI[playerid][pLevel] < 4) return SendBotMessage(playerid,!"На эту работу можно устроиться с 4-го уровня!");
                        if(!GetInvCount(playerid, 757)) return SendBotMessage(playerid,!"У вас нет водительских прав");
						GetJob[playerid] = JOB_CARJACKER;
						SPD(playerid,28,0,"Работа: развозчик продуктов","{FFFFFF}Вы собираетесь устроиться на работу развозчика продуктов\nВы согласный с условиями?","Да","Нет");
					}
					case 10:
					{
					    if(PI[playerid][pLevel] < 7) return SendBotMessage(playerid,!"На эту работу можно устроиться с 7-го уровня!");
					    if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,!"Чтобы работать адвокатом нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_ADVOKAT;
						SPD(playerid,28,0,"Работа: адвокат","{FFFFFF}Вы собираетесь устроиться на работу адвоката\nВы согласный с условиями?","Да","Нет");
					}
				}
			}
		}
		case 235: if(response) TShowStats(playerid, player_Global_Int[playerid][0]);
		case 3391: if(response) ShowStats(playerid, player_Global_Int[playerid][0]);
	    case 240:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(PI[playerid][pRank] >= 4)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 241, 2, !"",!"\
					            - Наркоман\n\
								- Человек в панаме\n\
								- Уборщик 1\n\
								- Уборщик 2\n\
								- Рабочий 1\n\
								- Рабочий 2\n\
								- Турист 1 \n\
								- Турист 2\n\
								- Гольфер\n\
								- Фермер\n\
								- Фермер (Жен.)\n\
								- Гражданский 1\n\
								- Гражданский 2\n\
								- Гражданский 3\n\
								- Гражданский 4 \n\
								- Гражданский 5\n\
								",!"Выбор",!"Назад");
							}
						}
						else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
			        }
			        case 1:
			        {
			            if(PI[playerid][pRank] >= 6)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 242, 2, !"",!"\
					            - Стрит рейсер 1\n\
								- Стрит рейсер 2\n\
								- Гроув стрит 1\n\
								- Гроув стрит 2\n\
								- Вагос 1\n\
								- Вагос 2\n\
								- Баллас 1\n\
								- Баллас 2\n\
								- Коронос 1\n\
								- Коронос 2\n\
								- Рифа 1\n\
								- Рифа 2\n\
								- Байкер 1\n\
								- Байкер 2\n\
								- Крипс 1\n\
								- Крипс 2\n\
					            ",!"Выбор",!"Назад");
							}
			            }
			            else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
			        }
			        case 2://ляка
			        {
			            if(PI[playerid][pRank] >= 9)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 243, 2, !"",!"\
					            - Стрит рейсер (Лид.)\n\
								- Гроув стрит (Лид.)\n\
								- Вагос (Лид.)\n\
								- Баллас (Лид.)\n\
								- Коронос (Лид.)\n\
								- Рифа (Лид.)\n\
								- Байкер (Лид.)\n\
								- Крипс (Лид.)\n\
								- Р.М. 1\n\
								- Р.М. 2\n\
								- Р.М. (Лид.)\n\
								- LCN. 1\n\
								- LCN. 2\n\
								- LCN. (Лид.)\n\
								- Якудза 1\n\
								- Якудза 2\n\
								- Якудза (Лид.)\n\
								- Полиция 1\n\
								- Полиция 2\n\
								- Полиция (Лид.)\n\
								- Армеец\n\
					            ",!"Выбор",!"Назад");
							}
			            }
			            else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
					}
					case 3:
					{
					    TeamDuty{playerid}=true;
					    Vnedren[playerid]=0;
					    SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					    SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
					    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы переоделись в служебную одежду.");
					}
			    }
			}
		}
		case 241:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 1);
					case 1: SetPlayerSkinEx(playerid, 2);
					case 2: SetPlayerSkinEx(playerid, 8);
					case 3: SetPlayerSkinEx(playerid, 42);
					case 4: SetPlayerSkinEx(playerid, 16);
					case 5: SetPlayerSkinEx(playerid, 27);
					case 6: SetPlayerSkinEx(playerid, 26);
					case 7: SetPlayerSkinEx(playerid, 35);
					case 8: SetPlayerSkinEx(playerid, 37);
					case 9: SetPlayerSkinEx(playerid, 34);
					case 10: SetPlayerSkinEx(playerid, 31);
					case 11: SetPlayerSkinEx(playerid, 3);
					case 12: SetPlayerSkinEx(playerid, 6);
					case 13: SetPlayerSkinEx(playerid, 15);
					case 14: SetPlayerSkinEx(playerid, 18);
					case 15: SetPlayerSkinEx(playerid, 19);
		        }
		        SetPlayerColor(playerid,0xFDFCFC15);
	         	J_SetPlayerArmour(playerid, 0);
		    }
		    else SPD(playerid, 240, 2, !"", !"{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 242:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 67);
					case 1: SetPlayerSkinEx(playerid, 60);
					case 2:
					{
						SetPlayerSkinEx(playerid, 105);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 106);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 108);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=12;
					}
					case 5:
					{
						SetPlayerSkinEx(playerid, 109);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=11;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 102);
						SetPlayerColor(playerid,0x93008099);
						Vnedren[playerid]=13;
					}
					case 7:
					{
						SetPlayerSkinEx(playerid, 103);
                        SetPlayerColor(playerid,0x93008099);
                        Vnedren[playerid]=13;
					}
					case 8:
					{
						SetPlayerSkinEx(playerid, 114);
						SetPlayerColor(playerid,0x00FFE299);
						Vnedren[playerid]=14;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 116);
						SetPlayerColor(playerid,0x00FFE299);
						Vnedren[playerid]=14;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 174);
						SetPlayerColor(playerid,0x238C8C99);
						Vnedren[playerid]=15;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 175);
						SetPlayerColor(playerid,0x238C8C99);
						Vnedren[playerid]=15;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 181);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 248);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 14: SetPlayerSkinEx(playerid, 221);
					case 15: SetPlayerSkinEx(playerid, 293);
		        }
		        J_SetPlayerArmour(playerid, 0);
		    }
		    else SPD(playerid, 240, 2, !"", !"{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 243:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 23);
					case 1:
					{
						SetPlayerSkinEx(playerid, 270);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 2:
					{
						SetPlayerSkinEx(playerid, 110);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=12;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 104);
						SetPlayerColor(playerid,0x93008099);
						Vnedren[playerid]=13;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 115);
                        SetPlayerColor(playerid,0x00FFE299);
                        Vnedren[playerid]=14;
					}
					case 5:
					{
					    SetPlayerSkinEx(playerid, 173);
					    SetPlayerColor(playerid,0x238C8C99);
					    Vnedren[playerid]=15;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 247);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 7: SetPlayerSkinEx(playerid, 143);
					case 8:
					{
					    SetPlayerSkinEx(playerid, 272);
					    SetPlayerColor(playerid,0x33669980);
					    Vnedren[playerid]=16;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 112);
						SetPlayerColor(playerid,0x33669980);
						Vnedren[playerid]=16;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 46);
						SetPlayerColor(playerid,0x33669980);
						Vnedren[playerid]=16;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 124);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 223);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 113);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 14:
					{
						SetPlayerSkinEx(playerid, 121);
						SetPlayerColor(playerid,0x96020280);
						Vnedren[playerid]=17;
					}
					case 15:
					{
				 		SetPlayerSkinEx(playerid, 122);
                        SetPlayerColor(playerid,0x96020280);
                        Vnedren[playerid]=17;
					}
					case 16:
					{
						SetPlayerSkinEx(playerid, 120);
                        SetPlayerColor(playerid,0x96020280);
                        Vnedren[playerid]=17;
					}
					case 17:
					{
						SetPlayerSkinEx(playerid, 280);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 18:
					{
						SetPlayerSkinEx(playerid, 288);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 19:
					{
						SetPlayerSkinEx(playerid, 283);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 20:
					{
						SetPlayerSkinEx(playerid, 287); //?????
						SetPlayerColor(playerid,0x99663380);
					}
		        }
		        J_SetPlayerArmour(playerid, 0);
		    }
		    else SPD(playerid, 240, 2, !"", !"{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 885:
		{
		    if(response)
		    {
		        if(strlen(inputtextsave)>5)
		        {
		            for(new i;i < strlen(inputtextsave);i ++)
					{
					    if(inputtextsave[i] < '0' || inputtextsave[i] > '9') return SPD(playerid, 885, 1, !"", !"{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\n\n{FF0000}Ошибка: Код безопасности может состоять только из цифр!","Далее","Отмена");
					}
          			PI[playerid][pBankPass] = strval(inputtextsave);
          			UpdatePlayerDataInt(playerid, "BankPass", strval(inputtextsave));
          			str_1[0] = EOS, f(str_1, sizeof(str_1),"{929290}Вы успешно сменили свой пароль от банковской карты.\nТеперь ваш пароль: %i запишите его чтобы не забыть!",PI[playerid][pBankPass]);
          			SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
		        }
		        else SPD(playerid, 885, 1, !"", !"{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\nКод должен состоять из 6 символов!","Далее","Отмена");

		    }
		}
		case 883:
		{
			if(!response) return 1;
			if(PI[playerid][pBankPass] == -1) SPD(playerid,0,0,!"",!"У вас нет банковской карты. Получить ее можно в\nбанковском отделении Las Venturas ,или у сотрудника банка!","Закрыть","");
			if(!strlen(inputtextsave)) SPD(playerid, 883, 1, !"", !"{FFFFFF}Введите {B83434}ваш{FFFFFF} код безопасности", !"Далее", !"Отмена");
			if(PI[playerid][pBankPass] == strval(inputtextsave)) SPD(playerid, 885, 1, !"", !"{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код","Далее","Отмена");
			else SPD(playerid, 0, 0, !"", !"{929090} Вы не правильно ввели свой PIN-код!", !"Закрыть", !"");
		}
		case 3001:
		{
			if(!response) return 1;
            switch(listitem)
            {
                case 0: callcmd::admins(playerid);
                case 1: CheckAllAdmins(playerid);
			}
		}
		case 266:
		{
			if(!response) return 1;
            switch(listitem)
            {
                case 0:
                {
					foreach_vehicle(i)
					{
						if(VALID_VEHICLE_ID(i)) continue;
						SetVehicleToRespawn(i);
					}
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили весь транспорт.");
                    str_1[0] = EOS, f(str_1, sizeof(str_1), "[A] А: %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str_1);
                }
                case 1:
                {
					foreach_vehicle(i)  if(IsAArendCar(i)) SetVehicleToRespawn(i);
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили транспорт для аренды.");
                    str_1[0] = EOS, f(str_1, sizeof(str_1), "[A] А: %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str_1);
                }
                case 2:
                {
					foreach(new i: OWNABLECARS)  if(IsAOwnableCar(GetVehicleID(i))) SetVehicleToRespawn(i);
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили транспорт игроков.");
                    str_1[0] = EOS, f(str_1, sizeof(str_1), "[A] А: %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str_1);
                }
			}
		}
		case 255:
		{
	        if(response)
	        {
			    AntiDm[listitem][zStatus] = !AntiDm[listitem][zStatus];
				SendAdminsMessagef(COLOR_GOLD, "[ZZ] %s[%i] %s АнтиДм зону '%s'",PN(playerid),playerid,AntiDm[listitem][zStatus] ? ("Включил") : ("Выключил"),AntiDm[listitem][zName]);
	            mysql_pqueryf(mysql, "UPDATE `antidm` SET `status`= '%i' WHERE `ID` = '%i' LIMIT 1", AntiDm[listitem][zStatus], AntiDm[listitem][zID]);
			    ShowAntiDmSettings(playerid);
	        }
	        else callcmd::apanel(playerid);
		}
		case 265:
		{
			if(!response) return 1;
            switch(listitem)
            {
				case 0: SPD(playerid, 3001, DIALOG_STYLE_LIST, !"", !"Администрация онлайн\nПолный список администрации", !"Принять", !"Отмена");
                case 1: callcmd::cc(playerid);
                case 2:
                {
                 	if(PI[playerid][pAdmin] < 5) return 0;
					foreach(new vehicleid: Vehicle) vTemp[vehicleid][Fuel] = float(GetVehicleLimitTank(vehicleid));
					SCM(playerid, COLOR_GREY, !"Вы заправили все автомобили");
                }
                case 3:
                {
        			foreach_player(i)
					{
					    if(PI[i][pRank] > 8 && PI[i][pLevel] <= 3)
					    {
					        str_1[0] = EOS, f(str_1, sizeof(str_1), "Ник: %s[%i]\t<%i LVL>\t<Организация: %s\t[RANK %i]>\n ", PN(i), i, PI[i][pLevel], global_OrgInfo[GetTeamID(i)][g_oName], PI[i][pRank]);
					    }
					}
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Принять", !"");
                }
                case 4:
                {
                	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
				    if(IsPlayerInAnyVehicle(playerid)) J_RepairVehicle(GetPlayerVehicleID(playerid));
                }
				case 5:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SPD(playerid, 266, DIALOG_STYLE_LIST, !"Транспорт", !"Весь транспорт\nДля аренды\nТранспорт игроков", !"Принять", !"Отмена");
				}
				case 6:
                {
					if(PI[playerid][pAdmin] < 3) return 1;
					new Cache:result = mysql_query(mysql, "SELECT `Name` FROM `bannames` ORDER BY `ID` DESC LIMIT 0, 20");
					if(cache_num_rows())
					{
					    FirstBL[playerid] = 0,str_1[0] = EOS;
					    static Name[MAX_PLAYER_NAME-2+2];
					    for(new i; i < cache_num_rows(); i++) Name[0] = EOS, cache_get_string(i, !"Name", Name),f(str_1, sizeof(str_1), "%s%s\n",str_1, Name);
					    if(cache_num_rows() == 20) f(str_1, sizeof(str_1), "%s{AFAFAF}Далее >>>\n", str_1);
					    SPD(playerid, 96, DIALOG_STYLE_LIST, !"Забаненые", str_1, !"Выбор", !"Назад");
					}
					else SCM(playerid, COLOR_GREY, !"Список забаненных пуст");
					cache_delete(result);
                }
                case 7:
				{
				    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_GREY, !"Ты еще мал для такого удовольствия!");
					str_1[0] = EOS;
					for(new i = 1; i < MAX_ORGS; i++) f(str_1, sizeof(str_1), "%s{FFFFFF}%s: \t\t{9ACD32}%i(UID)\n", str_1, global_OrgInfo[i][g_oName], OrgInfo[i][oLeaderUID]);
					str_2[0] = EOS, strcat(str_2, str_1);
					SPD(playerid, 115, DIALOG_STYLE_LIST, !"Снять с лидерства", str_2, !"Снять", !"Отмена");
				}
				case 8:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
				}
				case 9:
				{
					if(PI[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					str_1[0] = EOS, f(str_1, sizeof(str_1), "Параметр\tСтатус\nEXP(x2)\t%s\nКазино\t%s", GLS[22] ? ("{9ACD32}Включено") : ("{FF6347}Выключено"), GLS[32] ? ("{FF6347}Закрыто") : ("{9ACD32}Открыто"));
	                SPD(playerid, 951, DIALOG_STYLE_TABLIST_HEADERS, !"Информация", str_1, !"Выбор", !"Отмена");
				}
				case 10:
				{
                    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					str_1 = "Ничего не найдено";
                    for(new i; i < OWNABLEHOUSES; i++) if(HouseInfo[i][hMoney] > 1000000) str_1[0] = EOS, f(str_1, sizeof(str_1), "%s\n ID DOMA - [%i] - Денег в доме: %i\n ", str_1, i, HouseInfo[i][hMoney]);
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"дома с бабками", str_1, !"Принять", !"");
				}
				case 11:
				{
				    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"баннеры", "Ничего не найдено", !"Принять", !"");
				}
				case 12:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Terakt = !Terakt;
					if(Terakt)
					{
						SendAdminsMessagef(COLOR_GREY, "[A] %s включил мероприятие Теракты БАНК/M/А.",PN(playerid));
						SCMAll(COLOR_RED, !"[Сирена] {FFFFFF}В городе Лос-Сантос начался теракт!Срочно покидайте город!");
					}
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил мероприятие Теракты БАНК/M/А.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 13:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Meteorit = !Meteorit;
					if(Meteorit)
					{
						SendAdminsMessagef(COLOR_GREY, "[A] %s включил мероприятие Падение метеорита.", PN(playerid));
						SCMAll(COLOR_RED, !"[Сирена]{FFFFFF} В небе появились осколки огромного метеорита и они движутся прямиком на центер города ЛС! Срочно уезжайте с зоны центра!");
					}
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил мероприятие Падение метеорита.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 14:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					GLS[25] += 10000;
					GLS[26] += 10000;
					FactoryFerum += 10000;
					FactoryMats += 10000;
					FactoryFuel += 10000;
					UpdateDataConfig("farmsklad",GLS[25]);
					UpdateDataConfig("GLS[26]",GLS[26]);
					UpdateDataConfig("FactoryFerum",FactoryFerum);
					UpdateDataConfig("FactoryMats",FactoryMats);
					UpdateDataConfig("FactoryFuel",FactoryFuel);
					SPD(playerid, 0, 0, !"", !"Склады фермы, завода, грузчиков успешно пополнены на 10000.", !"Закрыть", !"");
				}
				case 15:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					OtvetHelper = !OtvetHelper;
					if(OtvetHelper) SendAdminsMessagef(COLOR_GREY, "[A] %s включил обязательные ответы ХЕЛПЕРОВ.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил обязательные ответы ХЕЛПЕРОВ.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 16:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					ShowAntiDmSettings(playerid);
				}
				case 17:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
				}
				case 18:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SCM(playerid,-1,"dev");
				}
				case 19:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					for(new i;i < OWNABLEBIZES;i ++)
					{
						if(!GetString(BizInfo[i][bOwner], "The State")) continue;
						if(BizInfo[i][bState] == 24) BizInfo[i][bProducts] += 10;
						else BizInfo[i][bProducts] += 10000;
                        UpdateDataInt("businesses", "Products", BizInfo[i][bProducts], BizInfo[i][bID],"=");
                        UpdateBiz(i);
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно пополнили склады для гос. бизнесов.");
					callcmd::apanel(playerid);
				}
				case 20: SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"ок", !"", "{FFFFFF}Статистика за сегодня!\n\n\
				Слито с викторины: {ACEE3A}0${FFFFFF}\n\
				Слито с бота казино: {ACEE3A}%i{FFFFFF} фишек\n\
				Слито с благотворительности: {ACEE3A}%i{FFFFFF} AZ Coins\n\
				Слито с 10 процентов продаж авто по х3: {ACEE3A}0${FFFFFF}\n\
				Слито с банкоматов+проценты на переводы/бизнесы: {ACEE3A}0${FFFFFF}\n\
				Слито с Гурама: {ACEE3A}0${FFFFFF}\n\
				Слито с VIP объявлений: {ACEE3A}0${FFFFFF}\n\
				Слито с Информационного центра: {ACEE3A}0${FFFFFF}\n\
				Слито с Комиссии продажи скинов 5 процентов: {ACEE3A}0${FFFFFF}\n\
				Слито с Комиссии продажи аксессуаров 5 процентов: {ACEE3A}0${FFFFFF}\n\
				Слито с Комиссии продажи бизнесов 5 процентов: {ACEE3A}0${FFFFFF}\n\
				Слито с Комиссии продажи домов 5 процентов: {ACEE3A}0${FFFFFF}\n\
				Слито с Аренды гос. транспорта (такси, автобусы и тд.): {ACEE3A}0${FFFFFF}\n\
				Слито с Аренды транспорта ( Гос. биз. или без биз. ): {ACEE3A}0${FFFFFF}\n\
				Слито с покупок в гос. бизнесах и амуниции: {ACEE3A}0${FFFFFF}\n\
				Слито с покупок интерьеров: {ACEE3A}0${FFFFFF}\n\
				Слито с покупок на базаре ( Аксессуары/скины, что по госу ): {ACEE3A}0${FFFFFF}\n\
				Слито с входа в казино ( VIP и просто вход ): {ACEE3A}0${FFFFFF}\n\
				Слито с Авиашколы/Установки номеров/бара для дома: {ACEE3A}0${FFFFFF}\n\
				Слито с аренды концертного зала: {ACEE3A}0${FFFFFF}\n\
				Слито c входа на мероприятия и аренды отелей: {ACEE3A}0${FFFFFF}\n\
				Слито на создание и улучшение семей: {ACEE3A}0${FFFFFF}\n\
				Слито с радаров: {ACEE3A}0${FFFFFF}\n\
				Слито с Комиссии продажи симок 5 процентов:: {ACEE3A}0${FFFFFF}\n\
				Всякая мелочь: {ACEE3A}0${FFFFFF}\n\
				Казино (покупка/продажа фишек, за счет разницы): {ACEE3A}0${FFFFFF}\n\
				Улучшения гардероба в доме: {ACEE3A}0${FFFFFF}\n\
				Реклама в телефоне/GPS: {ACEE3A}0${FFFFFF}\n\
				Конвертировано в VKoin's: {ACEE3A}0${FFFFFF}\n\
				Покупка аз coins: {ACEE3A}0${FFFFFF}\n\
				Потратили на выход из деморгана: {ACEE3A}0${FFFFFF}\n\
				Итого: {FF8762}0${FFFFFF}",CasinoInfoMoney,FondInfoMoney);
				case 21:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Lotery = !Lotery;
					if(Lotery) SendAdminsMessagef(COLOR_GREY, "[A] %s включил лотерейную.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил лотерейную.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 22:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
				}
				case 23:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Minigun = !Minigun;
					if(Minigun) SendAdminsMessagef(COLOR_GREY, "[A] %s включил анти-чит на миниган.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил анти-чит на миниган.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 24:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					AutoRespawn = !AutoRespawn;
					if(AutoRespawn) SendAdminsMessagef(COLOR_GREY, "[A] %s включил авто респаун транспорта.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил авто респаун транспорта.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 25:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SystemReport = !SystemReport;
					if(SystemReport) SendAdminsMessagef(COLOR_GREY, "[A] %s включил старую систему репорта.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s включил новую систему репорта.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 26:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SellVirt = !SellVirt;
					if(SellVirt) SendAdminsMessagef(COLOR_GREY, "[A] %s включил распродажу ВИРТОВ.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил распродажу ВИРТОВ.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 27:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					FastAnswer = !FastAnswer;
					SendAdminsMessagef(COLOR_GREY, "[A] %s %sлючил FastAnswer.", FastAnswer == true ? ("вк") : ("вык"), PN(playerid));
					callcmd::apanel(playerid);
				}
				case 28:
				{
					KillList[playerid] = !KillList[playerid];
					if(KillList[playerid]) SCM(playerid, COLOR_RED, !"Вы успешно выключили килл-лист");
					else SCM(playerid, COLOR_RED, !"Вы успешно включили килл-лист");
					callcmd::apanel(playerid);
				}
				case 29: callcmd::orgmembers(playerid);
				case 30:
				{
					ShowIP[playerid] = !ShowIP[playerid];
					callcmd::apanel(playerid);
				}
				case 31: callcmd::apanel(playerid);
				case 32:
				{
					if(CheckAdmin(playerid,8,4)) return 1;
			        SPD(playerid,10030,DIALOG_STYLE_LIST,!"",!"\
					{FFD700}1. {FFFFFF}Перезагрузка кладов(Пополнение)\n\
					{FFD700}2. {FFFFFF}Амнистия игроков\n\
					{FFD700}3. {FFFFFF}Управление евро\n\
					{FFD700}4. {FFFFFF}Настройки экономики\n\
					{FFD700}5. {FFFFFF}Auto HostName\n\
					{FFD700}6. {FFFFFF}Установить сообщение при входе\n\
					{FFD700}7. {FFFFFF}Restart /TOPMINUTE",!"Вызов",!"Отмена");
				}
			}
		}
		case 8744:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: FindOrgNumbers(playerid,1);
					case 1: FindOrgNumbers(playerid,2);
					case 2: FindOrgNumbers(playerid,3);
					case 3: FindOrgNumbers(playerid,4);
					case 4: FindOrgNumbers(playerid,5);
					case 5: FindOrgNumbers(playerid,22);
					case 6: FindOrgNumbers(playerid,6);
					case 7: FindOrgNumbers(playerid,7);
					case 8: FindOrgNumbers(playerid,8);
					case 9: FindOrgNumbers(playerid,9);
					case 10: FindOrgNumbers(playerid,10);
					case 11: FindOrgNumbers(playerid,20);
					case 12: FindOrgNumbers(playerid,21);
					case 13: FindOrgNumbers(playerid,23);
					case 14: FindOrgNumbers(playerid,24);
					case 15: FindOrgNumbers(playerid,26);
					case 16: FindOrgNumbers(playerid,27);
					//
					case 17: FindJobNumbers(playerid,5);
					case 18: FindJobNumbers(playerid,4);
					case 19: FindJobNumbers(playerid,11);
					case 20: FindJobNumbers(playerid,16);
					case 21: FindJobNumbers(playerid,6);
					case 22: FindJobNumbers(playerid,8);
		        }
		    }
		}
        case 966:
        {
            if(!response) return 1;
            switch(listitem)
            {
				case 0: SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Рекламный баннер для для бизнеса свободен!"),SearchPhone(playerid);
                case 1: Show3UpdateSettings(playerid);
                case 2: SPD(playerid, 8744, DIALOG_STYLE_LIST, !"", !"{FFFFFF}<< Полиция ЛС\n<< RCPD\n<< FBI\n<< Полиция SF\n<< Больница LS\n<< Больница LV\n<< Правительство\n<< Армия LV\n<< Больница SF\n<< Лицензеры\n<< Radio LS\n<< Армия LS\n<< Центральный Банк\n<< Полиция LV\n<< Radio LV\n<< Radio SF\n<< Армия SF\n<< Таксисты\n<< Механики\n<< Дальнобойщики\n<< Налоговая служба\n<< Адвокаты\n<< Крупье", !"Выбрать", !"Отмена");
				case 3: SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Отключено администрацией!"),SearchPhone(playerid);
				case 4:
                {
                    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В машине вы не можете использовать селфи!");
                    if(animan{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Перед тем как включить режим селфи, остановите анимации!");
                    if(PI[playerid][pHeal] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
                    if(Cuffed[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
                    if(CuffedTime[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы парализованы!");
                    if(selfi{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваши руки заняты!");
                    //HidePhone(playerid);
                    TextDrawShowForPlayer(playerid, StopAnimation);
                    selfi{playerid} = true;
                    TogglePlayerControllable(playerid, 0);
                    PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
                    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Используйте /headmove, чтобы выровнять голову!");
                    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Нажмите 'F8', для того чтобы сделать фото.");
                    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Используйте 'Enter' , чтобы выключить камеру.");
                    GetPlayerPos(playerid, selfi1[playerid][0], selfi1[playerid][1], selfi1[playerid][2]);
                    new Float:n1X, Float:n1Y, Float:Selfi1;
                    GetPlayerFacingAngle(playerid, Selfi1);
                    n1X = selfi1[playerid][0] + 1.7 * floatcos(180.0, degrees);
                    n1Y = selfi1[playerid][1] + 1.15 * floatsin(180.0, degrees);
                    SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
                    SetPlayerCameraPos(playerid, n1X, n1Y, selfi1[playerid][2] + 1.15);
                    SetPlayerCameraLookAt(playerid, selfi1[playerid][0], selfi1[playerid][1], selfi1[playerid][2] + 1);
                    SetPlayerFacingAngle(playerid, selfi2[playerid] - 270.0);
                    J_ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
                    return 1;
                }
                case 5: callcmd::sobes(playerid);
                case 7:
                {
                    str_1[0] = EOS, f(str_1, sizeof(str_1),"На балансе вашего телефона: {73B461}%i${FFFFFF}.\n\n",PI[playerid][pTelBalance]);
                    SPD(playerid,0,0,!"",str_1,!"Закрыть",!"");
                    SetPlayerChatBubble(playerid, !"Набрал не известный номер.", COLOR_PURPLE, 10.0, 5000);
                }
                case 8:
				{
    				if(GetPVarInt(playerid, !"telephone") == 1) PI[playerid][pTelWork] = !PI[playerid][pTelWork], UpdatePlayerDataInt(playerid, "TelWork", PI[playerid][pTelWork]),SearchPhone(playerid);
    				else DialogSlet(playerid);
				}
                case 9:
				{
    				if(GetPVarInt(playerid, !"telephone") == 1) SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Отключено администрацией!"),SearchPhone(playerid);
    				else DialogSlet(playerid,1);
				}
                case 10:
                {
                    if(GetPVarInt(playerid, !"telephone") == 1) return 1;//HidePhone(playerid);
                    else PI[playerid][pTelWork] = !PI[playerid][pTelWork], UpdatePlayerDataInt(playerid, "TelWork", PI[playerid][pTelWork]), SearchPhone(playerid);
                    SPD(playerid, 966, DIALOG_STYLE_LIST, !"Меню", str_1, !"Принять", !"Отмена");
                }
                case 11: SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Отключено администрацией!"),SearchPhone(playerid);
                case 12: {}//HidePhone(playerid);
            }
        }
        case 119:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(GetMoney(playerid)<money)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        if(money < 1 || (money+PI[playerid][pTelBalance])>5000)
		        {
		            str_1[0] = EOS, f(str_1, sizeof(str_1),"\n\n{FFFFFF}Введите сумму для пополнение на баланс свого телефона\n\n{D01212}Ошибка! Не верная Сумма!");
				    SPD(playerid,119,1,"Пополнить баланс",str_1,"Оплатить","Отмена");
					return 0;
		        }
		        GiveMoney(playerid,-money, "пополнил баланс телефона");
		        PI[playerid][pTelBalance] +=money;
		        SendBankBot(playerid);
		    }
		}

		case 963:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				extract inputtextsave -> new player:id;
		        if(!IsPlayerConnectEx(id)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}Вы не можете пополнить баланс человека , который оффлайн!", !"Принять", !"");
		        if(PI[playerid][pTelBalance] < money) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}У вас на балансе телефона недостаточно денег!", !"Принять", !"");
		        if(money < 1 || (money + PI[id][pTelBalance]) > 5000)
		        {
		            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}Вы не можете пополнить баланс телефона своему контакту на такую сумму, так как на телефоне можно держать до 5000$", !"Принять", !"");
					return 0;
		        }
		        PI[playerid][pTelBalance] -= money;
		        PI[id][pTelBalance] += money;
		        str_1[0] = EOS, f(str_1, sizeof(str_1), "{73B461}Вы успешно пополнили баланс контакта %s на %i$!", PN(id), money);
		        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", str_1, !"Принять", !"");
		        str_1[0] = EOS, f(str_1, sizeof(str_1), "%s пополнил баланс вашего мобильного на %i$.", PN(playerid), money);
		        SCM(id, COLOR_VALIK, str_1);
		    }
		}
		case 951:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
		            {
		                if(GLS[22] > 0)
		                {
		                    str_1[0] = EOS, f(str_1, sizeof(str_1),"Основатель: {FFFFFF}%s выключил х2 ЕХР!",PN(playerid));
		                    SCMAll(COLOR_VALIK,str_1);
		                    GLS[22] = 0;
		                }
		                else
		                {
		                    str_1[0] = EOS, f(str_1, sizeof(str_1),"Основатель: {FFFFFF}%s включил х2 ЕХР!",PN(playerid));
		                    SCMAll(COLOR_VALIK,str_1);
		                    GLS[22] = 1;
		                }
		                UpdateDataConfig("exp",GLS[22]);
		            }
					case 1:
					{
					    GLS[32] = !GLS[32];
	                    SCMf(playerid, COLOR_VALIK, "Вы %s казино!", GLS[32] ? ("выключили") : ("включили"));
                        UpdateDataConfig("casinoclose",GLS[32]);
					}
		        }
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Параметр\tСтатус\nEXP(x2)\t%s\nКазино\t%s", GLS[22] ? ("{9ACD32}Включено") : ("{FF6347}Выключено"), GLS[32] ? ("{FF6347}Закрыто") : ("{9ACD32}Открыто"));
                SPD(playerid, 951, DIALOG_STYLE_TABLIST_HEADERS, !"Информация", str_1, !"Выбор", !"Отмена");
		    }
		    else {
		    	callcmd::apanel(playerid);
		    }
		}
		case 779:
		{
		    if(response) SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		}
		case 778:
		{
		    if(response)
		    {
		        new len = strlen(inputtextsave);
		        for(new i; i < len; i++)
		        {
		            switch(inputtextsave[i])
		            {
		                case '0'..'9':{}
		                default: return SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6-10 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		            }
		        }
		        if(IsPlayerInRangeOfPoint(playerid, 1.0, 951.6823,2451.9871,1601.9871 )) {
					if(GetMoney(playerid)<1500)return SendBotMessage(playerid,!"Извините, но  у вас недостаточно денег!");
		    	}
		    	else {
		    		if(GetMoney(playerid)<1000)return SendBotMessage(playerid,!"Извините, но  у вас недостаточно денег!");
		    	}
		        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 10) return SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6-10 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		        if(PanelPlayerID[playerid]==-1) {
	        		if(IsPlayerInRangeOfPoint(playerid, 1.0, 951.6823,2451.9871,1601.9871 )) {
		        		GiveMoney(playerid,-1500);
		        	}
		        	else {
		        		GiveMoney(playerid, -1000);
		        	}
		        }
		        else
		        {
		            GiveMoney(playerid,-3000);
		            GiveMoney(PanelPlayerID[playerid],2000);
		            PanelPlayerID[playerid]=-1;
		        }
		        PI[playerid][pBankPass] = strval(inputtextsave);
		        UpdatePlayerDataInt(playerid, "BankPass", strval(inputtextsave));
		        IsVerifyBankCode{playerid}=false;
		        SendBankBot(playerid);
		        str_1[0] = EOS, f(str_1, sizeof(str_1),"Вы успешно получили банковскую карту.\nВаш пароль: {73B461}%i{FFFFFF}. Обязательно запишите его или ваш счет будет утерян!",PI[playerid][pBankPass]);
		        SPD(playerid,0,0,!"Информация",str_1,!"Принять",!"");
		    }
		}
		case 991:
		{
		    if(!response) return 1;
			if(PI[playerid][pBankPass] == -1) return 0;
	        if(strval(inputtextsave) != PI[playerid][pBankPass]) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{FFFFFF}Вы не правильно ввели PIN-код!\nЕсли вы забыли свой PIN-код вы можете его восстановить у сотрудника банка\n8-го и выше ранга, оплатив его работу.", !"Принять", !"");
	        IsVerifyBankCode{playerid} = true;
      		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}PIN-код принят!\nХорошего {DBEF2A}дня!", "Понял", "");
		}
        case 400:
		{
		    if(response)
		    {
		        new player = ClickedPlayerID[playerid];
		        switch(listitem)
		        {
		            case 0: callcmd::showpass(playerid, IntToStr(player));
		            case 1: callcmd::showlic(playerid, IntToStr(player));
		            case 2: callcmd::showbadge(playerid, IntToStr(player));
		            case 3: callcmd::showmc(playerid, IntToStr(player));
		            default: return 0;
		        }
		    }
		}
		case 500:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowSkills(playerid, playerid);
		            default: return 0;
		        }
		    }
		}
		case 600:
		{
		    if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: ShowStats(playerid, playerid), player_Global_Int[playerid][0] = playerid;
	            case 1: callcmd::cars(playerid);
          		case 2: callcmd::house(playerid);
          		case 3: callcmd::bizinfo(playerid);
          		case 4: callcmd::lmenu(playerid);
                case 5: Show2UpdateSettings(playerid);
                case 6: ShowLicenses(playerid, playerid);
                case 7:
				{
				    valstr(str_1, playerid);
					callcmd::showpass(playerid, str_1);
				}
                case 8: SPD(playerid, 7841, DIALOG_STYLE_LIST, !"", !"- Принятые квесты", !"Принять", !"Назад");
                case 9: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"test", str_1, !"Принять", !"");
                case 10: ShowFamily(playerid);
                case 11:
                {
					if(PI[playerid][pRank] == 10)
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");

					if(PI[playerid][pAdmin] > 0)
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");

					if(GetPlayerHouses(playerid) != -1)
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть дом или вы в нем подселены!");

					if(GetPlayerBiz(playerid) != -1)
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть бизнес!");

					if(GetNumberCars(playerid) > 0)
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник пока у вас есть автомобиль!");

					if(IsARPPN(PN(playerid)))
						return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сменить РП ник!");

					SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"", !"Сменить", !"Отмена");
                }
			}
		}
		case 7982:
		{
		    if(!response) return 1;
		    if(!IsARPPN(inputtextsave) || strlen(inputtextsave) > 20 || !IsAGameNick(inputtextsave)) return SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"\n\n{F47F51}Ошибка. Ваш ник не соотвествует правилам сервера!", !"Сменить", !"Отмена");
	        static name[20+3];
	        name[0] = EOS;
	        mysql_escape_string(inputtextsave, name);
			str_1[0] = EOS, f(str_1, sizeof str_1,"SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
			mysql_tquery(mysql, str_1, "MysqlCheckNameBuyNames", "ds", playerid, name);
		}
		case 1218:
		{
		    if(response)
			{
				switch(listitem) {
					case 0: {
						if(!IsAtFrakcia(playerid)) return 0;
						if(PI[playerid][pMuteTime]>0) return SCM(playerid, 0xAFAFAFFF, !"[Ошибка] У Вас бан чата!");
						SPD(playerid,2994,1,"","\
						{FFFFFF}Укажите {98BC5E}время{FFFFFF} на которое хотите назначить собеседование!\n\n\
						Напишите {A6BE6E}часы, минуты и местоположение{FFFFFF} через запятую!\n\n\
						Пример:[ {D5C576}17,00,Мэрия{FFFFFF} ]","Принять","Отмена");
					}
					case 1: callcmd::sobes(playerid); //sobes
				}
			}
		}
		case 2994:
	    {
	        if(response)
	        {
				new size_of = strlen(inputtextsave);
	            if(!size_of || size_of > 15) return 0;
				new id=GetTeamID(playerid);
				str_1[0] = EOS;
				sscanf(inputtextsave,"p<,>dds[16]", SobesTime1[id], SobesTime2[id], str_1);
				SetString(SobesMesto[id],str_1);
			    str_1[0] = EOS, f(str_1, sizeof(str_1),"[D] %s %s[%d] {AFAFAF}- Назначил собеседование в свою организацию на %i:%i!",GetRankName(id,PI[playerid][pRank]),PN(playerid),playerid,\
				 SobesTime1[id], SobesTime2[id]);
				SendGosMessage(COLOR_DEPAR,str_1);
	        }
	    }
        case 15210:
        {
			if(!response) return DeletePVar(playerid, !"idKvadrat");
			switch(listitem)
			{
				case 0:
				{
                    new id = GetPVarInt(playerid, !"idKvadrat");
					EnableGPSForPlayer(playerid, GangZone_X[id], GangZone_Y[id], GangZone_Z[id]);
                    SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Вы установили метку на семейную территорию №%i", id-130);
				}
				case 1:
				{
					static const mtext[][] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
					new minuite, hour;
					gettime(hour, minuite, _);
					SPDf(playerid, 12512, DIALOG_STYLE_LIST, !"Выберите дату встречи", "Выбрать", "Отмена", "%i %s\n%i %s\n%i %s", global_day, mtext[global_month -1], global_day+1, mtext[global_month -1], global_day+2, mtext[global_month -1]);
				}
			}
        }
		case 12512: 
		{
			if(!response) return DeletePVar(playerid, !"idKvadrat");
			SPD(playerid,12513,DIALOG_STYLE_INPUT,"Укажите время встречи","{ffffff}Введите время в формате{F3FF02}час:минуты{ffffff}(через двоеточие)\n\n{C3C3C3} - проводить встречи для выяснений отношений можно с 14:00 до 21:00\n - семья может защищаться 3 раза в день\n - нападать 3 раза в день\n - семья может проводить разборки с интервалом 1 час до встречи и после встречи","Далее","Отмена");
		}
		case 12513:
        {
			if(!response) return DeletePVar(playerid, !"idKvadrat");
            new hour, minut;
            sscanf(inputtextsave,"p<:>ii", hour, minut);
			str_1[0] = EOS;
			new id = FamilyID_(GZInfo[GetPVarInt(playerid, !"idKvadrat")][gzFracID]);
			if(id != 0) f(str_1, sizeof(str_1), "{%s}%s",FamilyChatColor[FamilyInfo[id][famChatColor]], FamilyInfo[id][famName]);
            SPDf(playerid, 15230, DIALOG_STYLE_MSGBOX, !"Подтвердите встречу", !"Далее", !"Отмена",\
			 "{cccccc}Территории {ffff00}№%i {cccccc}принадлежит семье {ffff00}%s\n"\
			 , GetPVarInt(playerid, !"idKvadrat")-lv_id+1, str_1);
            player_Global_Int[playerid][0] = global_day,\
				player_Global_Int[playerid][1] = hour,\
				player_Global_Int[playerid][2] = minut;
		}
		case 15230:
   		{
			if(!response) return DeletePVar(playerid, !"idKvadrat");
			new id = GetPVarInt(playerid, !"idKvadrat");
			//SCMf(playerid, -1, "id-lv_id = %i & id = %i", id-lv_id, id);
			if(GangZone_FamAttackID[id-lv_id] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Встреча уже забита!");
			for(new i; i < 3; i++) GangZone_FamDataWar[id-lv_id][i] = player_Global_Int[playerid][i];
			GangZone_FamAttackID[id-lv_id] = PI[playerid][pFamilyMember];
			Iter_Add(FamilysCapture, id);
			static const mtext[][] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
			foreach_family(i)
			{
				SCMf(i, -1, "{%s}[Family War] Семья %s назначила встречу семье %s на территории №%i, дата встречи %i %s %i:%02i",\
					FamilyChatColor[ FamilyInfo[pFamilyID(playerid)][famChatColor]], \
					FamilyInfo[pFamilyID(playerid)][famName], \
					FamilyInfo[FamilyID_(GZInfo[id][gzFracID])][famName], \
					id-lv_id+1, \
					GangZone_FamDataWar[id-lv_id][0], \
					mtext[global_month -1], \
					GangZone_FamDataWar[id-lv_id][1], \
					GangZone_FamDataWar[id-lv_id][2]);
			}
			DeletePVar(playerid, !"idKvadrat");
   		}
	    case 15208:
		{
			if(response)
			{
			    switch(listitem)
				{
			        case 0: ShowFamilyZones(playerid);
			        case 1: 
					{
						str_1 = "{ffff00}Дата\t{ffff00}Территория\t{ffff00}Встреча\n";
						static const mtext[][] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
						new count;
						for(new i=lv_id; i < GANGZONES; i++)
						{
							if(GangZone_FamAttackID[i-lv_id] != pFamilyID(playerid)) continue;
							str_2[0] = EOS,\
								f(str_2, sizeof str_2, "[%i %s %i:%i]\t№%i\t{%s}%s {ffffff}vs {%s}%s\n",\
									GangZone_FamDataWar[i-lv_id][0], mtext[global_month-1], GangZone_FamDataWar[i-lv_id][1], GangZone_FamDataWar[i-lv_id][2], i+1-lv_id,\
									FamilyChatColor[ FamilyInfo[FamilyID_(GangZone_FamAttackID[i-lv_id])][famChatColor] ], FamilyInfo[FamilyID_(GangZone_FamAttackID[i-lv_id])][famName],\
									FamilyChatColor[ FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famChatColor] ], FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName]);
							strcat(str_1, str_2);
							count++;
						}
						if(count != 0) SPD(playerid, 15209, DIALOG_STYLE_TABLIST_HEADERS, !"Список всех предстоящих встреч вашей семьи", str_1, "Закрыть", "Назад");
						else SPD(playerid, 15209, DIALOG_STYLE_MSGBOX, !"Уведомление", !"{ffffff}У вашей семьи нет предстоящих встреч!", !"Закрыть", !"Назад");
					}
					case 2:
					{
						str_1 = "{ffff00}Дата\t{ffff00}Территория\t{ffff00}Встреча\n";
						static const mtext[][] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
						new count;
						for(new i=lv_id; i < GANGZONES; i++)
						{
							if(GangZone_FamAttackID[i-lv_id] == -1) continue;
							str_2[0] = EOS,\
								f(str_2, sizeof str_2, "[%i %s %i:%i]\t№%i\t{%s}%s {ffffff}vs {%s}%s\n",\
									GangZone_FamDataWar[i-lv_id][0], mtext[global_month-1], GangZone_FamDataWar[i-lv_id][1], GangZone_FamDataWar[i-lv_id][2], i+1-lv_id,\
									FamilyChatColor[ FamilyInfo[FamilyID_(GangZone_FamAttackID[i-lv_id])][famChatColor] ], FamilyInfo[FamilyID_(GangZone_FamAttackID[i-lv_id])][famName],\
									FamilyChatColor[ FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famChatColor] ], FamilyInfo[FamilyID_(GZInfo[i][gzFracID])][famName]);
							strcat(str_1, str_2);
							count++;
						}
						if(count != 0) SPD(playerid, 15209, DIALOG_STYLE_TABLIST_HEADERS, !"Список всех предстоящих встреч", str_1, "Закрыть", "Назад");
						else SPD(playerid, 15209, DIALOG_STYLE_MSGBOX, !"Уведомление", !"{ffffff}У семей нет предстоящих встреч!", !"Закрыть", !"Назад");
					}
			        case 3:
					{
						str_1 = "{ffff00}№ территории\t{ffff00}Семейные монеты\t{ffff00}Деньги\n";
//						static const mtext[][] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
						new count = 1;
						for(new i=lv_id; i < GANGZONES; i++)
						{
							if(FamilyID_(GZInfo[i][gzFracID]) != pFamilyID(playerid)) continue;
							str_2[0] = EOS,\
								f(str_2, sizeof str_2, "[%i] Территория №%i\t13 монет\t$100\n", count, i+1-lv_id);
							strcat(str_1, str_2);
							count++;
						}
						if(count != 1) SPD(playerid, 15209, DIALOG_STYLE_TABLIST_HEADERS, !"Список территорий вашей семьи", str_1, "Закрыть", "Назад");
						else SPD(playerid, 15209, DIALOG_STYLE_MSGBOX, "Уведомление", "{ffffff}У вашей семьи нет территорий!", "Закрыть", "Назад");
					}
					case 4:
					{
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Полезная информация", !"{D45B5B}Войны за семейные территории\n\n\
							{ffffff}По всему городу Las Venturas расставлены специальные зоны - семейные территории, всего их {ffff00}156 штук{ffffff}.\n\
							Найти территорию можно с помощью команды {ffff00}/findfamzone{ffffff}.\n\n\
							Каждая семья которая имеет семейную квартиру в одном из жилых комплексов может участвовать в войнах за территории.\n\
							Для того чтобы начать войну за территорию, лидеру нужно зайти в меню семьи и выбрать пункт - Война за Территории.\n\n\
							Перед вами откроется специальная карта всех территории, \nна этой карте вы сможете выбрать любую территорию и узнать какая семья в данный момент ей владеет.\n\
							Для того чтобы объявить войну и попробовать забрать территорию себе,\n\
							вам нужно нажать на территорию и выбрать пункт - Отобрать территорию. \n\
							Далее вам нужно указать удобное для вашей семьи время {ffff00}(с 14:00 до 21:00){ffffff}, \n\
							когда наибольшее количество членов вашей семьи смогут принять участие в битве.\n\
							После утверждения времени битвы вам остается только тщательно к ней подготовиться, оповестить всех членов семьи и дождаться самой битвы.\n\n\
							Главная суть битвы - перестрелка. \nТерритория достанется той семье которая убьет наибольшее количество противников во время схватки.\n\
							Время 1 битвы - 10 мин.\n\n\n{D45B5B}Заработок с территорий:\n\n\
							{ffffff}Каждый PayDay на баланс территории начисляется {ffff00}$21500 средств, а так же 8 семейных монет{ffffff}. \n\
							Для того чтобы данные ресурсы зачислились на баланс вашей семьи вам нужно будет перевозить их на специальных фургонах!\n\n\
							Каждая семья может купить до 6 фургонов. Сделать это можно у каждого ЖК.\n\
							Стоимость фургонов начинается от 2.000 и достигает 12.000 семейной репутации.\n\n\
							Для того чтобы перевезти ресурсы с территории вам нужно взять фургон на специальном пикапе у ЖК и отправиться к себе на территорию.\n\
							На самой территории вы сможете заметить специальный пикап (доллар), \n\
							для того чтобы погрузить все ресурсы в фургон вам нужно просто посигналить рядом с ним.\n\
							После сигнала все доступные для перевозки ресурсы будут загружены в ваш фургон. \n\
							После этого вам нужно отправиться обратно к ЖК и у специального места произвести разгрузку.\n\
							За доставку ресурсов на счет семьи будет зачислено 75%% от привезенного количества, \n\
							а остальные 25%% достанутся тому человеку который производил транспортировку.\n\n\
							{D45B5B}Обратите внимание! {cccccc}Во время перевозки ресурсов ваш семейный фургон могут ограбить, для его ограбления нужно попросту его взорвать. \n\
							В случае ограбления все средства что будут находиться в фургоне на момент взрыва рассыпятся в виде пачек с деньгами на дорогу. \n\
							Эти пачки сможет подобрать любой игрок, а сложить обратно и доставить в ЖК их уже не получится.\n\
							Подробнее об ограблении - /help > Ограбление фургонов",!"Закрыть",!"Назад");
					}
				}
			}
		}
		case 1214:
		{
			if(response)
			{
				switch(listitem) {
					case 0: return SPD(playerid,1216,DIALOG_STYLE_INPUT,"PLAYERID","Введите ид игрока которого хотите принять","Далее","Oтмена");
					case 1: return callcmd::members(playerid);
					case 2: {
					    if(!IsAtMafia(playerid)&& !IsAtGang(playerid))
						{
							if(PI[playerid][pMember]!=TEAM_LSPD && PI[playerid][pMember]!=TEAM_RCPD && PI[playerid][pMember]!=TEAM_LVPD && PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_SFPD)return SCM(playerid, COLOR_RED, !"Доступно только для Полиции и FBI!");
							SPD(playerid,1213,1,"Информация","Введите ид игрока которого вы хотите перевести!\n\n{4682B4}Перевод возможен с :{FFFFFF}\n\n-ARMY {FFD700}(4 ранг){FFFFFF} - LSPD/RCPD/LVPD/SFPD\n-LSPD/RCPD/LVPD/SFPD {FFD700}(5 ранг){FFFFFF} - FBI\n","Принять","Отмена");
						}
						else
						{
						    if(OrgInfo[PI[playerid][pMember]][oWareHouse]==true)
							{
								OrgInfo[PI[playerid][pMember]][oWareHouse]=false;
								str_1[0] = EOS, f(str_1, sizeof(str_1),"[F] %s[%i] Открыл общак!",PN(playerid),playerid);
								SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str_1);
								UpdateDorm(PI[playerid][pMember]);
							}
						    else
							{
								OrgInfo[PI[playerid][pMember]][oWareHouse]=true;
								str_1[0] = EOS, f(str_1, sizeof(str_1),"[F] %s[%i] Закрыл общак!",PN(playerid),playerid);
								SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str_1);
								UpdateDorm(PI[playerid][pMember]);
							}
						    callcmd::lmenu(playerid);
						}
					}
					case 3: {
						if(OrgInfo[GetTeamID(playerid)][oBank] < 25000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На счет вашей организации недостачно денег!");
                        foreach_vehicle(i) if(vTemp[i][vTeam] == PI[playerid][pMember]) J_SetVehicleToRespawn(i);
						OrgInfo[GetTeamID(playerid)][oBank] -= 25000;
		    			SaveOrg(GetTeamID(playerid));
						str_1[0] = EOS, f(str_1, sizeof(str_1),"[F] %s[%i] Заспавнил транспорт организации!",PN(playerid),playerid);
						SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str_1);
					}
					case 4: {
	                    if(OrgInfo[GetTeamID(playerid)][oBank] < 35000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На счет вашей организации недостачно денег!");
	                    foreach_vehicle(i) if(vTemp[i][vTeam] == PI[playerid][pMember]) vTemp[i][Fuel] = 100.0;
						OrgInfo[GetTeamID(playerid)][oBank] -= 35000;
		    			SaveOrg(GetTeamID(playerid));
						str_1[0] = EOS, f(str_1, sizeof(str_1),"[F] %s[%i] Заказал бензин для транспортов организации!",PN(playerid),playerid);
						SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str_1);
					}
				}
			}
		}
		case 1217:
		{
			if(response)
			{
			    switch(listitem) {
			        case 0: callcmd::members(playerid);
			        case 1: {
						str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE Member = %i", PI[playerid][pMember]);
						mysql_tquery(mysql, str_1, "OfflineMembers", "d", playerid);
						OfflineMembers(playerid);
					}
				}
			}
		}
		case 1216:
		{
			if(response)
			{
				if(PI[playerid][pRank] == 10 || PI[playerid][pRank] >= 9)
				{
				    if(PI[playerid][pMember]==TEAM_FBI)return SCM(playerid, COLOR_RED, !"В FBI можно попасть только переводом из полиции!");
					extract inputtextsave -> new player:id; else return SPD(playerid,1216,DIALOG_STYLE_INPUT,"PLAYERID","Введите ид игрока которого хотите принять","Далее","Oтмена");
					if(IsPlayerConnectEx(id) && IsPlayerLogged[id])
					{
						if(!GetTeamID(id))
						{
							if(ProxDetectorS(5.0, playerid, id))
							{
                                if(IsAtFrakcia(playerid) && PI[id][pBL]!=0)
                                {
	                                SCM(playerid, COLOR_GREY, !"Вы не можете принять этого игрока. Возможные причины:");
									SCM(playerid, COLOR_GREY, !"- Этот игрок находится в чёрном списке закона");
									return 1;
								}
								///
								if(Clother[id]!=-1)return 0;
								if(GetPlayerVirtualWorld(playerid)!=GetPlayerVirtualWorld(id))return 0;
								///
								if(InviteOffer[id] == INVALID_PLAYER_ID)
								{
									static Leader[15];
									if(PI[playerid][pMember]==0 || PI[playerid][pMember] >= MAX_ORGS)return 0;
									if(PI[id][pWarns] > 0) return SCM(playerid, COLOR_RED, !"Игрока с варном нельзя принять в организацию");
									if(IsAtFrakcia(playerid, 1) && PI[id][pZKP] <35)
									{
									    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Законопослушность этого гражданина не позволяет ему вступить в организацию! (Необходимо 35 законопослушности!)");
									    SCM(id,COLOR_RED,!"[Ошибка] {FFFFFF}Вас не смогли принять в организацию, тк. у вас слишком мало законопослушности! (Необходимо 35 законопослушности!)");
									    return 0;
									}
									if(PI[playerid][pRank] == 10) Leader = "Лидер";
									else Leader = "Зам. лидера";
									InviteOffer[id] = playerid;
									SCMf(playerid,COLOR_LIGHTBLUE,"Вы приглашаете %s к себе в организацию",PN(id));
									str_1[0] = EOS, f(str_1, sizeof(str_1),"%s %s приглашает вас к себе в организацию %s",Leader, PN(playerid),global_OrgInfo[GetTeamID(playerid)][g_oName]);
									SPD(id,8,0,"Инвайт",str_1,"Принять","Отмена");
								}
								else
								{
									SCM(playerid, COLOR_GREY, !"Этому игроку уже было выслано приглашение на вступление в организацию");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_GREY, !"Этот игрок уже состоит в одной из организаций");
							return 1;
						}
					}
				}
			}
		}
		case 1213:
		{
		    if(response)
			{
                new id = strval(inputtextsave);
                if(!IsPlayerConnectEx(id) || !IsPlayerLogged[id]) return SCM(playerid, COLOR_RED, !"Неверный ид!");
				if(!ProxDetectorS(5.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
				if(id==playerid)return 0;
				if(!IsAArmy(playerid) && PI[id][pMember] != TEAM_LSPD && PI[id][pMember] != TEAM_RCPD && PI[id][pMember] != TEAM_LVPD && PI[id][pMember] != TEAM_SFPD) return SCM(playerid, COLOR_RED, !"Этот игрок не состоит в нужной организации!");
				if(PI[id][pRank] < 4) return SCM(playerid, COLOR_RED, !"Этот игрок не достиг еще нужного (4-го) ранга!");
				if(PI[id][pRank] >= 9) return SCM(playerid, COLOR_RED, !"Вы не можете к себе перевести заместителя или лидера!");
				if(PI[playerid][pMember]==TEAM_FBI && PI[id][pMember]!=TEAM_LSPD && PI[id][pMember]!=TEAM_RCPD && PI[id][pMember]!=TEAM_LVPD && PI[id][pMember]!=TEAM_SFPD) return SCM(playerid, COLOR_RED, !"В FBI можно перевести только работников полиции!");
				if((PI[playerid][pMember] == TEAM_FBI) && PI[id][pRank] < 5) return SCM(playerid, COLOR_RED, !"В FBI можно перевести только работников полиции с 5-го ранга!");
				PI[id][pMember] = PI[playerid][pMember];
				UpdatePlayerDataInt(id, "Member", PI[playerid][pMember]);
                PI[id][pFWarns] = 0;
                UpdatePlayerDataInt(id, "FWarns", 0);
				PI[id][pRank] = 1;
				UpdatePlayerDataInt(id, "Rank", 1);
				PI[id][pDCTime] = 2;
				UpdatePlayerDataInt(id, "DCTime", 2);
    			SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				SCM(playerid, COLOR_VALIK, !"Вы успешно перевели игрока к себе в организацию");
				SCMf(id, COLOR_VALIK, "Поздравляем вы были переведены в организацию: %s на должность: %s", global_OrgInfo[GetTeamID(id)][g_oName], GetRankName(GetTeamID(id), PI[id][pRank]));
				//PlayerSpawn(id);
			}
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(IsPlayerCursorUsed{playerid} != false && _:clickedid == INVALID_TEXT_DRAW) return HideInvalidClick(playerid);
//	if(AntiCheatGetDialog(playerid) != -1) return 1;
	if(clickedid == boomtext[3])
	{
	    for(new i; i < 16; i++) PlayerTextDrawHide(playerid, pboom[playerid][i]);
	    if(BoomUse[playerid] == 27) return ShowMenuBoom(playerid);
	    for(new i; i < 9; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	    Music[playerid] += 8;
	    BoomUse[playerid] ++;
	    if(NumMusic[playerid] !=0) ShowMenuBoom(playerid);
		if(BoomUse[playerid] != 27)
		{
		    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
	    }
		else
		{
		    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
		}
		PlayerTDSetStringf(playerid, boomtext_p[playerid][0], "%i_/_27", BoomUse[playerid]);
		for(new i; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
		if(BoomUse[playerid] == 27) for(new i = 1; i < 7; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	}
	if(clickedid == boomtext[2])
	{
	    for(new i; i < 16; i++) PlayerTextDrawHide(playerid, pboom[playerid][i]);
        if(BoomUse[playerid] == 1) return ShowMenuBoom(playerid);
	    Music[playerid] -= 8;
	    BoomUse[playerid] --;
	    for(new i; i < 9; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	    if(NumMusic[playerid] !=0) ShowMenuBoom(playerid);
	    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
		PlayerTDSetStringf(playerid, boomtext_p[playerid][0], "%i_/_27", BoomUse[playerid]);
		for(new i; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
	}
	if(clickedid == boomtext[0])
	{
		DestroyDynamic3DTextLabel(b_box3D[playerid]);
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
		{
			switch(ItemsInfo[AksSlot[playerid][5]][ItemID])
			{
			 	case 2226: SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{ffffff} Вы слишком далеко от бумбокса.");
				case 2102: SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{ffffff} Вы слишком далеко от колонки.");
			}
			return 1;
		}
		DestroyDynamicObject(bumboxobject[playerid]);
		bumboxobject[playerid] = 0;
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
		for(new i; i < 16; i++) 
		{
			if(i < 10) TextDrawHideForPlayer(playerid, boomtext[i]);
			if(i < 9) DestroyPlayerTD(playerid, boomtext_p[playerid][i]);
			DestroyPlayerTD(playerid, pboom[playerid][i]);
		}
  		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		StopAudioStreamForPlayerFix(playerid);
		J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		if(ItemsInfo[AksSlot[playerid][5]][ItemID]==2102) UseItemAttached(playerid, 5), SCM(playerid, COLOR_LIGHTRED, !"[Информация] {ffffff}Вы забрали свою колонку!");
		if(ItemsInfo[AksSlot[playerid][5]][ItemID]==2226) UseItemAttached(playerid, 5), SCM(playerid, COLOR_LIGHTRED, !"[Информация] {ffffff}Вы забрали свой бумбокс!");
		CancelSelectTextDraw(playerid);
		return 1;
	}
    if(clickedid == Donate_Global[71]) SPD(playerid, 900, DIALOG_STYLE_INPUT, !"", !"{FF733B}Внимание! {FFFFFF}Вы пытаетесь обменять {FF733B}AZ {FFFFFF}coin's\nна игровую валюту в доларах.\nКурс обмена зависит от\nсостояния экономики сервера и его акций. Курс обмена:\n{ff733B}1 {FFFFFF}az coin = {FF733B}11000${FFFFFF}.\n\nВведите в строчку сколько az coin's\nжелаете обменять!\n\n", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[68])
    {
        if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Покупать EXP можно только с 2-го уровня!");
		SPD(playerid, 8821, DIALOG_STYLE_INPUT, !"", !"{f0d52a}Внимание! {FFFFFF}Вы пытаетесь обменять {f0d52a}AZ {FFFFFF}coin's\nна игровой опыт. Курс обмена:\n{f0d52a}2 {FFFFFF}az coin = {f0d52a}1 EXP{FFFFFF}.\n\nВведите в строчку сколько опыта\nжелаете получить!\n\n", !"Обмен", !"Отмена");
    }
	if(clickedid == Donate_Global[41]) ShowDonateSelect(playerid, 1); //рулетки
	else if(clickedid == Donate_Global[39]) ShowDonateSelect(playerid, 2); //серты
    else if(clickedid == Donate_Global[66]) ShowDonateSelect(playerid, 3); //телефон
    else if(clickedid == Donate_Global[64]) ShowDonateSelect(playerid, 4); //аксы
	else if(clickedid == Donate_Global[35]) ShowDonateSelect(playerid, 6); //машинки
    else if(clickedid == Donate_Global[77]) ShowDonateSelect(playerid, 5); //боксы
    else if(clickedid == Donate_Global[62]) SPD(playerid, 9003, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Все доступные лицензии\n{FFFFFF}Стоимость: {6bc02e}300 {FFFFFF}AZ Coins\n\nПосле покупки, ваш персонаж будет владеть\nвсеми {f0d52a}лицензиями{FFFFFF}, доступными в игре.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[14]) SPD(playerid, 8992, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Пятизначный номер для {6bc02e}телефона\n{FFFFFF}Стоимость: {6bc02e}600 {FFFFFF}AZ Coins\n\nДает возможность владеть рандомным 5-ти значным номером\nдля любых номеров\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[85]) SPD(playerid, 8993, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Предмет: {6bc02e}TWIN-TURBO\n{FFFFFF}Стоимость: {6bc02e}1200 {FFFFFF}AZ Coins\n\nПакет улучшений для вашего авто. При использовании,\nнаделяет ваш авто специальной наклейкой и улучшает\nтехнические характеристики двигателья и тормозов.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[81]) SPD(playerid, 8994, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}Вечный навык вождения\n{FFFFFF}Стоимость: {6bc02e}400 {FFFFFF}AZ Coins\n\nПосле приобретения ваш навык вождения никогда не будет падать.\nНе имеет срока годности, покупается навсегда.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[79]) SPD(playerid, 8996, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}Навыки стрельбы\n{FFFFFF}Стоимость: {6bc02e}400 {FFFFFF}AZ Coins\n\nПосле приобретения все навыки стрельбы будут улучшены\nдо максимального уровня.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[75]) SPD(playerid, 8990, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6BC02E}Дополнительные 6 ячеек{FFFFFF} инвентаря\nСтоимость: {6BC02E}500{FFFFFF} AZ Coins\n\nПосле приобретения количество ячеек в вашем инвентере\nбудет увеличено на 6 пунктов, а так-же появится 3 страница.\nВсего можно увеличить инвентарь на 36 пунктов (6 улучшений)\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[73]) SPD(playerid, 8997, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6BC02E}PREMIUM VIP{FFFFFF}\nСтоимость: {6BC02E}650000{FFFFFF} AZ Coins\n\n\n{FF5252}Преимущества PREMIUM статуса{FFFFFF}\n1) Каждый payday вы будете получать 4 az coins (donat очки){FFFFFF}\n(если отсутствует задолженность в банке и не находитесь под арестом)\n2) Возможности всех VIP.\n3) PREMIUM Чат (Для всех владельцев этого VIP) (/vr)\n4) VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5) Самый высокий процент депозита в банке.\n6) В банке можно хранить больше 40 миллионов.\n7) 4 очка репутации семьи каждый payday\n8) Шанс крафта в 2 раза выше \n9) Вы практически никогда не нуждаетесь в еде \n10) Аренда любого транспорта для вас со скидкой 50%\n11) Законопослушность всегда 100\n12) Стоимость рекламы на билбордах и в GPS в 2 раза ниже\n13) Возможность выбора точки спавна в любом месте карты\n{FF5252}14) Бесплатный МАВЕРИК комплектации ПРЕМИУМ со специальным\nтюнингом и красивыми наклейками.{FFFFFF}\n15) Нахождение в списке топ игроков онлайн, а так-же в рейтинге\nТОП игроков на площади у БАНКА.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[16]) SPD(playerid, 8999, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6BC02E}Titan VIP{FFFFFF}\nСтоимость: {6BC02E}150000{FFFFFF} AZ Coins\n\n{FFB252}Преимущества Titan статуса{FFFFFF}\n1) Каждый payday вы будете получать 2 az coins (donat очки){FFFFFF}\n(если отсутствует задолженность в банке и не находитесь под арестом)\n2)Возможности всех VIP [/help - преимущества VIP]\n3)VIP Чат (Для всех богачей сервера) (/vr)\n4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Больше процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)3 очка репутации семьи каждый payday\n8)Возможность иметь 4 авто, 5 если есть дом или отель.\n9)Вы не теряете наркотики при попадании в больницу\n10)Доступ к команде /out (Уволиться с организации по с.ж.)\n\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", !"Обмен", !"Отмена");
	else if(clickedid == Donate_Global[60]) SPD(playerid, 8991, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Семейная репутация: {6BC02E}1000 очков{FFFFFF}\nСтоимость: {6BC02E}300{FFFFFF} AZ Coins\n\nНеобходима для покупки улучшений и семейных квартир.\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[37]) SPD(playerid, 9001, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Сменить пол\nСтоимость: {6bc02e}150 {FFFFFF}AZ Coins\n\nПосле приобретения, ваш {f0d52a}пол {FFFFFF}будет изменен.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[33]) SPD(playerid, 8995, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Пополнить навык вождения\n{FFFFFF}Стоимость: {6bc02e}50 {FFFFFF}AZ Coins\n\nПосле приобретения, ваш навык вождения будет\nполностью восстановлен до {f0d52a}100 {FFFFFF}единиц.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[31]) SPD(playerid, 9002, DIALOG_STYLE_MSGBOX, !"Подтверждение покупки", !"{ffffff}Дополнение к VIP-аккаунту.\nСтоимость на месяц: {6BC02E}5999{FFFFFF} AZ-Rubles.\n\nЭто не заменяет VIP-аккаунт, а дополняет его.\nПри покупке выдаётся предмет дополнения.\nЧтобы его активировать - нужно его использовать через инвентарь.\nДо активации предмет можно продавать, передавать, скупать.\nПосле активации дополнение будет действовать ровно 1 месяц.\n\n\n{ffff00}Преимущества дополнения:{cccccc}\n1. Вы не нуждаетесь в еде.\n2. Отсутствие КД на отправку репорта.\n3. Бесплатная отправка объявлений в СМИ (бесплатно раз в 30 минут).\n4. Бесплатные звонки и смс.\n5. Бесплатная аренда лавок на Центральном рынке.\n6. Бесплатный вход в казино и бары.\n7. Везде в 2 раза меньше комиссия при перечислении и передаче денежных средств.\n8. Шанс улучшения предметов выше в 2 раза.\n9. Каждый PayDay вы будете получать 6 AZ-коинов.\n10. За 30 минут можно перевозить 26 бочек, работая на нефтевышках.\n11. Через /pay можно передавать суммы до 1 000.000$.\n12. Лечение в больнице проходит в 5 раз быстрее.\n13. Вы не теряете оружие при попадании в больницу.\n14. Действие маски увеличено на 10 минут.\n15. При ограблении армии, Вы будете получать 4 ингредиента, вместо 2.\n16. Появляется шанс получения платинум рулетки при использовании сундуков.\n17. При использовании антибиотиков, наркозависимость уменьшается на 10 единиц больше.\n18. 6 очков репутации вашей семье каждый пейдей.\n19. При взломе авто /breakcar, отмычка не сломается.\n20. Увеличен шанс получить тюремную отмычку при выполнении заданий в ТСР.\n21. КД ящика с рулетками уменьшено до 60 минут.\n22. При выполнении семейных квестов будет выдаваться в два раза больше семейных талонов.\n23. Можно загружать до 5-ти автомобилей.\n24. Можно оплачивать налоги без отыгранных 40 минут.\n25. КД на покупку ларцов Concept Car Luxury 2 ларца за 10 секунд.\n26. Вы можете входить куда-то угодно будучи не вакцинированым.\n27. Отсутствие общего КД на VIP-чат.\n28. Возможность оплаты налогов через онлайн-банкинг в телефоне.\n29. При входе в игру доступна возможность - выбора места спавна / последнее место выхода.\n\n\n{00ff00}При активации дополнения вы получите 10 разных ящиков с автомобилями.", "Купить", "Закрыть");
    else if(clickedid == Donate_Global[4]) SPD(playerid, 9012, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Сменить {6bc02e}Ник\n{FFFFFF}Стоимость: {6bc02e}20 {FFFFFF}AZ Coins\n\nДает возможность сменить Ник вашего персонажа.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[0]) SPD(playerid, 9011, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Снять {6bc02e}варн\n{FFFFFF}Стоимость: {6bc02e}250 {FFFFFF}AZ Coins\n\nПри покупке, снимает 1 варн с вашего персонажа.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    else if(clickedid == Donate_Global[12]) SPD(playerid, 9502, DIALOG_STYLE_TABLIST, !"", !"\
		{FFFF00}10.000 в скилл крафтера\t{FAAC58}5000000 AZ-монет\n\
		{FFFF00}Купить точильный амулет\t{FAAC58}60000 AZ-монет\n\
		{FFFFFF}Выйти из ЧС \t{FAAC58}275000 AZ-монет\n\
		{FFFFFF}Макс. навык фермера\t{FAAC58}850000 AZ-монет\n\
		{FFFFFF}Макс. навык таксиста\t{FAAC58}800000 AZ-монет\n\
		{FFFFFF}Макс. навык развозчика продуктов\t{FAAC58}950000 AZ-монет\n\
		{FFFFFF}Макс. навык дальнобойщика\t{FAAC58}1500000 AZ-монет\n\
		{FFFFFF}Макс. навык адвоката\t{FAAC58}8000000 AZ-монет\n\
		{FFFFFF}Макс. навык пилота\t{FAAC58}5800000 AZ-монет\n\
		{FFFFFF}Макс. навык мотоциклиста\t{FAAC58}800000 AZ-монет\n\
		{FFFFFF}Макс. навык велосипедиста\t{FAAC58}2000000 AZ-монет\n\
		{FFFF00}Возможность иметь две фермы\t{FAAC58}5000000 AZ-монет\n\
		{FFFFFF}Военный билет\t{FAAC58}50000 AZ-монет\n\
		{FFFFFF}+1 Законопослушность\t{FAAC58}3000 AZ-монеты\n\
		{FFFFFF}Все навыки боя\t{FAAC58}300000 AZ-монет\n\
		{FFFFFF}Максимальный уровень силы\t{FAAC58}5500000 AZ-монет\n\
		{FFFFFF}Избавиться от наркозависимости\t{FAAC58}300000 AZ-монет\n\
		{FFFFFF}Сбросить пробег с автомобиля\t{FAAC58}500000 AZ-монет\n\
		{FF332C}Выйти из Тюрьмы\t{FFFFFF}4000000 AZ-монет\n\
		{FFF52B}Уникальный танец 'Фортнайт'\t{FFFFFF}550000 AZ-монет\n\
		{FFF52B}Уникальный танец 'Gangnam Style'\t{FFFFFF}550000 AZ-монет\n\
		{FFF52B}Уникальный танец 'Ковбой'\t{FFFFFF}550000 AZ-монет\n\
		{FFF52B}Вылечиться от коронавируса\t{FFFFFF}350000 AZ-монет", !"Выбрать", !"Отмена");
  	new biz = BizEntered[playerid];
	new Float:Health = PlayerHealthAC[playerid];
    if(clickedid == alcodraw[0])
	{
	    if(HouseEntered[playerid] == -1)
	    {
        	if(GetMoney(playerid) < 2000) return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
        	if(biz != -1) GiveBizMoney(playerid,20);
        	GiveMoney(playerid, -2000);
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
        if(Health <= 95.0) J_SetPlayerHealth(playerid,Health+5);
        else J_SetPlayerHealth(playerid,100);
        SendBarBot(playerid);
        return 1;
    }
	if(clickedid == alcodraw[1])
	{
	    if(HouseEntered[playerid] == -1)
	    {
		    if(GetMoney(playerid) < 400) return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
		    if(biz != -1)
			{
			    if(BizInfo[biz][bProducts]<5)return SendBotMessage(playerid,!"Извините, но у нас закончились продукты!");
				GiveBizMoney(playerid,400);
				BizInfo[biz][bProducts]-=5;
			}
			GiveMoney(playerid, -400);
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
        if(Health <= 70.0) J_SetPlayerHealth(playerid,Health+30);
        else J_SetPlayerHealth(playerid,100);
        SendBarBot(playerid);
        return 1;
	}
	if(clickedid == alcodraw[2])
	{
	    if(HouseEntered[playerid] == -1)
	    {
   	 		if(GetMoney(playerid) < 500)return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
   	 		if(biz != -1)
			{
			    if(BizInfo[biz][bProducts]<7)return SendBotMessage(playerid,!"Извините, но у нас закончились продукты!");
				GiveBizMoney(playerid,500);
				BizInfo[biz][bProducts]-=7;
			}
			GiveMoney(playerid, -500);
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
		SendBarBot(playerid);
        if(Health <= 50.0) J_SetPlayerHealth(playerid,Health+50);
        else J_SetPlayerHealth(playerid,100);
        return 1;
	}
	if(clickedid == alcodraw[3])
	{
	    if(GetMoney(playerid) < 200) return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
		if(Fullness{playerid} >= 70) return SCM(playerid, COLOR_GREY, !"Вы не голодны!");
        if(biz != -1)
		{
		    if(BizInfo[biz][bProducts]<3)return SendBotMessage(playerid,!"Извините, но у нас закончились продукты!");
			GiveBizMoney(playerid,200);
			BizInfo[biz][bProducts]-=3;
		}
		GiveMoney(playerid, -200, "покушал");
		GiveFullness(playerid, 25);
		SCM(playerid, COLOR_VALIK, !"Вы взяли пиццу. Посмотреть состояние голода можно {FFFFFF}/satiety");
		J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		Send2BarBot(playerid);
		return 1;
	}
	if(clickedid == alcodraw[4])
	{
	    if(GetMoney(playerid) < 300) return SendBotMessage(playerid,!"Извините, но у вас не хватает денег!");
        if(Fullness{playerid} >= 60) return SCM(playerid, COLOR_GREY, !"Вы не голодны!");
        if(biz != -1)
		{
		    if(BizInfo[biz][bProducts]<4)return SendBotMessage(playerid,!"Извините, но у нас закончились продукты!");
			GiveBizMoney(playerid,300);
			BizInfo[biz][bProducts]-=4;
		}
		GiveMoney(playerid, -300, "покушал");
		GiveFullness(playerid, 40);
		SCM(playerid, COLOR_VALIK, !"Вы взяли ланч. Посмотреть состояние голода можно {FFFFFF}/satiety");
		J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		Send2BarBot(playerid);
		return 1;
	}
	if(clickedid == alcodraw1[5])
	{
		for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw[A]); //квадратики дисков
		for(new A; A < 7; A++) TextDrawHideForPlayer(playerid, alcodraw1[A]); //квадратики дисков
		for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw2[A]); //квадратики дисков
		CancelSelectTextDraw(playerid);
		return 1;
	}
	else if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1)
	{
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0xFFFFFFAA);
		else if(clickedid == ButtonLeft) callcmd::back(playerid);
		else if(clickedid == ButtonRight) callcmd::next(playerid);
		else if(clickedid == boxaccept) callcmd::cancel(playerid);
		else if(clickedid == boxcancel) callcmd::done(playerid);
		return true;
	}
	if(KindFuel[playerid] != -1)
 	{
   		if(clickedid == FillTD[9])
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new Float:maxfuel = 100.0 - vTemp[carid][Fuel];
		    if(CountFuel[playerid] < maxfuel)
		    {
			    CountFuel[playerid] += 1.0;
			    new bizid = SearchBiz(playerid, 6);
		    	new Float:cost = BizInfo[bizid][bEnterPrice];
       			new price = floatround( cost * CountFuel[playerid] );
				str_1[0] = EOS, f(str_1, sizeof(str_1), "$%i", price);
			    PlayerTextDrawSetString(playerid, FuelCostDraw[playerid], str_1);
			    new Float:part = 100.0 / float(100) * CountFuel[playerid];
				new Float:length = 243.0 + part * 1.64;
				if(length > 397.0) length = 397.0;
				PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], length, 0.0);
				PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
			}
		}
		else if(clickedid == FillTD[8])
		{
		    if(CountFuel[playerid] > 0.0)
		    {
			    CountFuel[playerid] -= 1.0;
			    new bizid = SearchBiz(playerid, 6);
			    new Float:cost = BizInfo[bizid][bEnterPrice];
			    new price = floatround( cost * CountFuel[playerid] );
				str_1[0] = EOS, f(str_1, sizeof(str_1), "$%i", price);
			    PlayerTextDrawSetString(playerid, FuelCostDraw[playerid], str_1);
			    PlayerTextDrawShow(playerid, FuelCostDraw[playerid]);
			    new Float:part = 100.0 / float(100) * CountFuel[playerid];
				new Float:length = 243.0 + part * 1.64;
				if(length < 243.0) length = 234.0;
				PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], length, 0.0);
				PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
			}
		}
		//АЗС НА 100 ПРОЦ
		else if(clickedid == FillTD[30])
		{
		    CountFuel[playerid] = 100.0;
		    new bizid = SearchBiz(playerid, 6);
		    new Float:cost = BizInfo[bizid][bEnterPrice];
		    new price = floatround( cost * CountFuel[playerid] );
			str_1[0] = EOS, f(str_1, sizeof(str_1), "$%i", price);
		    PlayerTextDrawSetString(playerid, FuelCostDraw[playerid], str_1);
		    PlayerTextDrawShow(playerid, FuelCostDraw[playerid]);
		 	new Float:part = 100.0 / float(100) * CountFuel[playerid];
			new Float:length = 243.0 + part * 1.64;
			if(length > 397.0) length = 397.0;
			PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], length, 0.0);
			PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
		}
		else if(clickedid == FillTD[14])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] < sizeof(FuelName) - 1) KindFuel[playerid] ++;
			else KindFuel[playerid] = 0;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid, !"~w~",1,3);
			else GameTextForPlayer(playerid, !"~w~This type of fuel ~r~ is not suitable~w~~n~ for your vehicles!",10000,4);
		    PlayerTextDrawSetString(playerid, KindFuelDraw[playerid], FuelName[kind]);
		}
		else if(clickedid == FillTD[13])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] > 0) KindFuel[playerid] --;
			else KindFuel[playerid] = sizeof(FuelName) - 1;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid, !"~w~",1,3);
			else GameTextForPlayer(playerid, !"~w~This type of fuel ~r~ is not suitable~w~~n~ for your vehicles!",10000,4);
		    PlayerTextDrawSetString(playerid, KindFuelDraw[playerid], FuelName[kind]);
		}
		else if(clickedid == FillTD[0]) UsePlayerInterface_GasStation(playerid);
 		else if(clickedid == FillTD[1])
		{
		    KindFuel[playerid] = -1;
			CountFuel[playerid] = 0.0;
			CheckFuelDraws(playerid);
			SCM(playerid, COLOR_GREY, !"Вы отказались заправляться.");
			GameTextForPlayer(playerid, !"~w~",1,3);
			TogglePlayerControllable(playerid, true);
			CancelSelectTextDraw(playerid);
        }
	}
    return 0;
}
stock CheckReferalsInviteCount(playerid)
{
	mysql_queryf_fix(mysql, "SELECT `Referal` FROM `"TABLE_ACCOUNTS"` WHERE `Referal` = '%s' LIMIT 12;", true, PN(playerid));
	new all = cache_num_rows();
	cache_delete(result1);
	return all;
}
stock CheckReferalsInvite(playerid, id)
{
	new all = CheckReferalsInviteCount(playerid);
	if(GetString(PlayerReferal[playerid], "666")) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже получили автомобиль!");
	if(all < 12) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{cccccc}Недостаточно приглашенных игроков (возможно еще не все дошли до 8 уровня)", !"Закрыть", !"");
	SetString(PlayerReferal[playerid],"666");
	UpdatePlayerDataInt(playerid, "Referal", 666);
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][8], "%d/12", all);
	InvAdd(playerid, 1286+id, 1);
	return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно получили автомобиль, за приглашение друзей!");
}
enum infoguntd
{
	id_gun,
	id_gunID,
	name_gun[15],
	Float:x5,
	Float:y5,
	Float:z5,
	Float:a5
};
static const InfoWeaponMenuID[][infoguntd] = {
	{1242,0,"Body Armor",0.0, 0.0, 0.0, 1.0},
	{346,23,"Tazers",0.0, -15.0, 0.0, 1.4},
	{334,3,"Nightstick",0.0, -15.0, 0.0, 1.4},
	{348,24,"Desert Eagle",0.0, -15.0, 0.0, 1.4},
	{356,31,"M4",0.0, -15.0, 0.0, 2.0}
};
stock HideInvalidClick(playerid)
{
	if(KindFuel[playerid] != -1)
	{
		KindFuel[playerid] = -1;
		CheckFuelDraws(playerid);
	}
	if(!InventWallet[playerid] && InventStatus{playerid}) HideInventory(playerid);
	if(InventWallet[playerid] && InventStatus{playerid}) return HideInventWallet(playerid,true);
	if(!RollTimeUpdate[playerid]) ShowLogo(playerid);
	if(FamMenu1[playerid]) HideFamily(playerid);
	if(FamMenu2[playerid]) HideFamily(playerid, 1);
	if(FamMenu3[playerid]) HideFamily(playerid, 2);
	if(FamZones[playerid]) HideFamily(playerid, 3);
	if(PAI[playerid][open_td]) SelectTextDraw(playerid, 0xA52A2AAA);
	if(GetPVarType(playerid, !"telephone") != PLAYER_VARTYPE_NONE && phone_2[playerid]) return DestroyVKCoinsMenu(playerid),SelectTextDraw(playerid, -16776961);
	if(PItreasure[playerid][tTD] != false) treasureHideTD(playerid);
	HideTextDraws(playerid);
	ShowSpeedometr(playerid);
	ShowLogo(playerid);
	if(Second_Hand_Clother_Select[playerid] != -1) ShowSecondHandClotherSelect(playerid, -1);
	if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid] != -1) SelectTextDraw(playerid, -16776961);
	for(new A; A < 7; A++) 
	{
		if(A < 5) TextDrawHideForPlayer(playerid, alcodraw[A]),TextDrawHideForPlayer(playerid, alcodraw2[A]);
		TextDrawHideForPlayer(playerid, alcodraw1[A]);
	}
	if(ShowMap[playerid]) TogglePlayerMap(playerid, false);
	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(IsPlayerCursorUsed{playerid} != false && _:playertextid == INVALID_TEXT_DRAW) return HideInvalidClick(playerid);
//	if(AntiCheatGetDialog(playerid) != -1 || !IsPlayerTextDrawVisible(playerid, playertextid)) return 0;
	if(IsCellarTextDraw{playerid} != false)
	{
		if(playertextid == GlobalTDPlayer[playerid][26-16]) //next
		{
			player_Global_Int[playerid][100]++;
			if(player_Global_Int[playerid][100] == sizeof(CellarInfoVar)) player_Global_Int[playerid][100] = 0; 
			SelectCellar(playerid, 2);
		}
		else if(playertextid == GlobalTDPlayer[playerid][25-16]) //last
		{
			player_Global_Int[playerid][100]--;
			if(player_Global_Int[playerid][100] == -1) player_Global_Int[playerid][100] = sizeof(CellarInfoVar)-1; 
			SelectCellar(playerid, 2);
		}
		else if(playertextid == GlobalTDPlayer[playerid][22-16]) SPD(playerid, 7759, DIALOG_STYLE_LIST, !"{FFFFFF}Покупка | {ae433d}Подвал", !"{FFFFFF}Информация о подвале\nПриобрести подвал", !"»", !"x");
		else if(playertextid == GlobalTDPlayer[playerid][21-16]) SelectCellar(playerid, 1);
		else if(playertextid >= GlobalTDPlayer[playerid][20-16] && playertextid <= GlobalTDPlayer[playerid][17-16]) //
		{
			//SCM(playerid, -1, "item 1");
//			SCMf(playerid, -1, "%i", GlobalTDPlayer[playerid][20-16]-GlobalTDPlayer[playerid][17-16]);
			/*ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация о предмете", "\
			{FFFFFF}Предмет: {FDCF28}Металл{FFFFFF}\n\
			Можно приобрести на {FDCF28}Центральном{FFFFFF} рынке,\n\
			добыть на шахте ({FDCF28}/GPS - Разное - Шахта.{FFFFFF})\n\
			Используется для изготовления (крафта) {FDCF28}редких товаров{FFFFFF} в\n\
			подвале дома или улучшения {FDCF28}гаража{FFFFFF}.\n\n\
			{FFFFFF}Необходимое количество для крафта данного подвала: {6BC02E}100\n", "x", "");*/
		}
		/*else if(playertextid == GlobalTDPlayer[playerid][19-16]) //
		{
			SCM(playerid, -1, "item 2");
		}
		else if(playertextid == GlobalTDPlayer[playerid][18-16]) //
		{
			SCM(playerid, -1, "item 3");
		}
		else if(playertextid == GlobalTDPlayer[playerid][17-16]) //
		{
			SCM(playerid, -1, "item 4");
		}*/
	}
	else if(BillOpen{playerid} != false)
	{
		if(playertextid == GlobalTDPlayer[playerid][2]) SPDf(playerid, 10804, DIALOG_STYLE_MSGBOX, !"Подтверждение", "Да", "Отмена", "{ffffff}Вы действительно хотите арендовать баннер на {ffff00}%d часов{ffffff}?\nСтоимость аренды составит: {ffff00}$%d", BillboardInfo[GetPVarInt(playerid, "IDBILL")][bHours], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bHours]*1000000);
		else if(playertextid == GlobalTDPlayer[playerid][1]) SPDf(playerid, 10802, DIALOG_STYLE_LIST, !"Выберите строку", "Изменить", "Закрыть", "{FFFFFF}%s\n%s\n%s", BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine1], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine2], BillboardInfo[GetPVarInt(playerid, "IDBILL")][bLine3]);
		new i = GetPVarInt(playerid, "IDBILL");
		if(playertextid == GlobalTDPlayer[playerid][49]){
			BillboardInfo[i][bFon]++;
			if(BillboardInfo[i][bFon] == 12) BillboardInfo[i][bFon] = 0;
			SetFone(i, BillboardInfo[i][bFon]);
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][26], "FON_%d", BillboardInfo[i][bFon]+1), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][26]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][48]){
			BillboardInfo[i][bFon] --;
			if(BillboardInfo[i][bFon] == -1) BillboardInfo[i][bFon] = 11;
			SetFone(i, BillboardInfo[i][bFon]);
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][26], "FON_%d", BillboardInfo[i][bFon]+1), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][26]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][21]){
			BillboardInfo[i][bColor] ++;
			if(BillboardInfo[i][bColor] == 10) BillboardInfo[i][bColor] = 0;
			SetBillColor(i, BillboardInfo[i][bColor]);
			static color[20]; switch(BillboardInfo[i][bColor]) { case 0: color = "COLOR_BLACK"; case 1: color = "COLOR_WHITE"; case 2: color = "COLOR_GREY"; case 3: color = "COLOR_RED"; case 4: color = "COLOR_YELLOW"; case 5: color = "COLOR_GREEN"; case 6: color = "COLOR_BLUE"; case 7: color = "COLOR_LIGHTBLUE"; case 8: color = "COLOR_PURPLE"; case 9: color = "COLOR_ORANGE"; }
			PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][22], color), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][22]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][20]){
			BillboardInfo[i][bColor] --;
			if(BillboardInfo[i][bColor] == -1) BillboardInfo[i][bColor] = 9;
			SetBillColor(i, BillboardInfo[i][bColor]);
			static color[20]; switch(BillboardInfo[i][bColor]) { case 0: color = "COLOR_BLACK"; case 1: color = "COLOR_WHITE"; case 2: color = "COLOR_GREY"; case 3: color = "COLOR_RED"; case 4: color = "COLOR_YELLOW"; case 5: color = "COLOR_GREEN"; case 6: color = "COLOR_BLUE"; case 7: color = "COLOR_LIGHTBLUE"; case 8: color = "COLOR_PURPLE"; case 9: color = "COLOR_ORANGE"; }
			PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][22], color), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][22]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][6]){
			BillboardInfo[i][bHours] ++;
			if(BillboardInfo[i][bHours] == 121) BillboardInfo[i][bHours] = 1;
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][8], "%d", BillboardInfo[i][bHours]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][8]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][5]){
			BillboardInfo[i][bHours] --;
			if(BillboardInfo[i][bHours] == 0) BillboardInfo[i][bHours] = 120;
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][8], "%d", BillboardInfo[i][bHours]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][8]);
		}
	}
	if(ActionCarOpen[playerid] != false)
	{
		if(playertextid == GlobalTDPlayer[playerid][42] || playertextid == GlobalTDPlayer[playerid][30] || playertextid == GlobalTDPlayer[playerid][23]) 
		{
			//if(playertextid == GlobalTDPlayer[playerid][42])
			SPD(playerid, 1234, DIALOG_STYLE_MSGBOX, !"{ae433d}Акция", !"{cccccc}Как только выполните условия акции, то Вы сможете забрать данный автомобиль.\n\nДанная акция позволяет получить один из трёх автомобилей абсолютно бесплатно.\nДля получения автомобиля требуется отыграть {ae433d}48{ffffff} часов.", !"Закрыть", !"");
		}
		else if(playertextid == GlobalTDPlayer[playerid][0]) HideActionCar(playerid);
	}
	else if(InventWallet[playerid] && InventStatus{playerid})
	{
		if(playertextid == GlobalTDPlayer[playerid][13]) HideInventWallet(playerid,true);
		for(new i; i < 12; i++)
		{
			if(playertextid != GlobalTDPlayer[playerid][i] || !PI[playerid][pInvWallet][i]) continue;
			if(PI[playerid][pInvWallet][i]) InvAdd(playerid,PI[playerid][pInvWallet][i],1,0);
			PI[playerid][pInvWallet][i] = 0;
			SaveInventory(playerid, 4);
			UpdateCellForWallet(playerid, i);
			break;
		}
	}
	else if(WeaponTDStatus[playerid])
	{
		//new past, present, next;
		if(playertextid == GlobalTDPlayer[playerid][10])
		{
			//if(player_Global_Int[playerid][10] < 2) return 1;
			if(!player_Global_Int[playerid][10]) return 1;
			player_Global_Int[playerid][10]--;
			UpdateWeaponMenu(playerid, player_Global_Int[playerid][10]-1, player_Global_Int[playerid][10], player_Global_Int[playerid][10]+1);
		}
		else if(playertextid == GlobalTDPlayer[playerid][7])
		{
			if(player_Global_Int[playerid][10] == sizeof(InfoWeaponMenuID)-1) return 1;
			player_Global_Int[playerid][10]++;
			UpdateWeaponMenu(playerid, player_Global_Int[playerid][10]-1, player_Global_Int[playerid][10], player_Global_Int[playerid][10]+1);
		}
		else if(playertextid == GlobalTDPlayer[playerid][18])
		{
			if(OrgInfo[GetTeamID(playerid)][oItemCount][0] < 120) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
			if(WeaponGetItemCount{playerid} == 12) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Подождите немного...");
			WeaponGetItemCount{playerid}++;
			OrgInfo[GetTeamID(playerid)][oItemCount][0] -= 120;
			new id = InfoWeaponMenuID[player_Global_Int[playerid][10]][id_gunID];
			switch(id)
			{
				case 0: SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли бронежилет."),J_SetPlayerArmour(playerid, 100);
				case 23: SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли тазер {cccccc}(достать/убрать: /tazer)"),GivePlayerWeapon(playerid, id, 10);
				case 3: SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли дубинку (1 шт.)"),GivePlayerWeapon(playerid, id, 50);
				case 24: SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли пистолет Eagle (50 шт.)"),GivePlayerWeapon(playerid, id, 50);
				case 31: SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли автомат M4 (150 шт.)"),GivePlayerWeapon(playerid, id, 150);
			}
			PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][16], "%s", OrgInfo[GetTeamID(playerid)][oItemCount][0]);
		}
		else if(playertextid == GlobalTDPlayer[playerid][6]) SCM(playerid,-1,"info");
		else if(playertextid == GlobalTDPlayer[playerid][17]) HideWeaponMenu(playerid);
	}
	else if(ReferalsInviteTD[playerid])
	{
		if(playertextid == GlobalTDPlayer[playerid][1]) HideReferalsInviteTD(playerid);
		else if(playertextid == GlobalTDPlayer[playerid][6]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Русский Стандарт", !"{ffffff}Русский Стандарт - Это возможность бесплатно получить уникальный русский автомобиль.\n\n{ffffff}Вам нужно пригласить {ffff00}12 игроков {ffffff}(чтобы они указали ваш ник при регистрации),\nа так же чтобы все приглашенные игроки достигли {ffff00}8 уровня{ffffff}.\n\nЧтобы посмотреть сколько игроков уже достигло 8 уровня, откройте интерфейс: \n{ffff00}/mm > Русский Стандарт{ffffff}, там будет видно ваш прогресс.\n\nКак только прогресс будет 12/12, тогда вы сможете выбрать один из трех автомобилей.\n\n\n{ff0000}Обратите внимание! \n{cccccc}Полученый автомобиль нельзя продать игроку или обменять.\nЕго можно только продать государству!", !"Закрыть", !"");
		else if(playertextid == GlobalTDPlayer[playerid][15]) CheckReferalsInvite(playerid, 0);
		else if(playertextid == GlobalTDPlayer[playerid][17]) CheckReferalsInvite(playerid, 1);
		else if(playertextid == GlobalTDPlayer[playerid][19]) CheckReferalsInvite(playerid, 2);
	}
	else if(Second_Hand_Clother_Select[playerid] != -1)
	{
	    for(new i; i < 10; i++)
	    {
			if(playertextid != GlobalTDPlayer[playerid][i]) continue;
		 	SelectSecondHandClother(playerid, i);
			break;
	    }
	    if(playertextid == GlobalTDPlayer[playerid][10]) ShowSecondHandClotherSelect(playerid, -1);
	}
	else if(ContainerTakeOpen[playerid])
	{
		if(playertextid == GlobalTDPlayer[playerid][54]) ContainerCloseTake(playerid);
		new d = GetContainerTakeDistance(playerid);
		if(d == -1) return 1;
		for(new i ; i < 6; i++)
		{
			if(playertextid == GlobalTDPlayer[playerid][i]) 
			{
				GiveItemContainer(playerid, i, d, gContainer[d][gPrize][i]);
				break;
			}
		}
	}
    else if(GetPVarType(playerid, !"telephone") != PLAYER_VARTYPE_NONE)
    {
        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		if(phone_2[playerid])
		{
			new id,id2;
			if(GetPVarInt(playerid, !"telephone") == 2) id = 1;
			else if(GetPVarInt(playerid, !"telephone") == 3) id2 = 2;
			if(playertextid == vkcoin_menu[playerid][20-id+id2]) DestroyVKCoinsMenu(playerid);
			else if(playertextid == vkcoin_menu[playerid][18-id+id2]) mysql_tquery(mysql, "SELECT `NickName`, `VKCoins` FROM `"TABLE_ACCOUNTS"` ORDER BY `VKCoins` DESC LIMIT 10", "VKCoinsList", "i", playerid);
			else if(playertextid == vkcoin_menu[playerid][17-id+id2]) SCM(playerid,-1,"transfer");
			else if(playertextid == vkcoin_menu[playerid][16-id+id2]) ShowDForBoost(playerid);
			else if(playertextid == vkcoin_menu[playerid][13-id+id2]) ClickMouseBoost(playerid);
		}
		else
		{
			switch(GetPVarInt(playerid, !"telephone"))
			{
				case 1:
				{
					if(playertextid == GlobalTDPlayer[playerid][45]) SCM(playerid,-1,!"Временно отключено!");
					else if(playertextid == GlobalTDPlayer[playerid][43]) SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", !"Добавить контакт\nВызвать Скорую\nВызвать Полицию\nВызвать Такси\nВызвать Механика\nНаписать в СМИ\nПозвонить в СМИ\nУзнать владельца дома (тел. 997)\n{ebe534}(NEW){FFFFFF} Входящие звонки\n{ebe534}(NEW){FFFFFF} Исходящие звонки\n", !"Принять", !"Отмена");
					else if(playertextid == GlobalTDPlayer[playerid][41]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Диалоги", !"{ffffff}Вы еще не с кем не переписывались.", !"Закрыть", !"");
					else if(playertextid == GlobalTDPlayer[playerid][47]) SearchPhone(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][24])
					{
						if(phone_2[playerid]) return 1;
						#include modules/TEXTDRAWS/phone/vkcoin_menu
						phone_2[playerid] = true;
						UpdateVisubleCoins(playerid);
					}
					else if(playertextid == GlobalTDPlayer[playerid][20])
					{
						SPD(playerid, 20004, DIALOG_STYLE_LIST, !"{FFFFFF} Домашняя страница | {B1413D}CS:GO", (str_f("\
						{FFFFFF}ТОП {f4f142}проекта\n{FFFFFF}ТОП {f4f142}%s\n{FFFFFF}Моя статистика\n{de9b35}Начать игру", ServerCFG[server_logo])), !"»", !"x");
					}
					/*else if(playertextid == GlobalTDPlayer[playerid][3]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][17]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][7]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][10]) return 1;*/
					else if(playertextid == GlobalTDPlayer[playerid][15]) return GlovoInfo_work(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][13]) return CurrencyStable(playerid);
				}
				case 2:
				{
					if(playertextid == GlobalTDPlayer[playerid][45]) SCM(playerid,-1,!"Временно отключено!");
					else if(playertextid == GlobalTDPlayer[playerid][43]) SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", !"Добавить контакт\nВызвать Скорую\nВызвать Полицию\nВызвать Такси\nВызвать Механика\nНаписать в СМИ\nПозвонить в СМИ\nУзнать владельца дома (тел. 997)\n{ebe534}(NEW){FFFFFF} Входящие звонки\n{ebe534}(NEW){FFFFFF} Исходящие звонки\n", !"Принять", !"Отмена");
					else if(playertextid == GlobalTDPlayer[playerid][41]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Диалоги", !"{ffffff}Вы еще не с кем не переписывались.", !"Закрыть", !"");
					else if(playertextid == GlobalTDPlayer[playerid][34]) SearchPhone(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][25])
					{
						if(phone_2[playerid]) return 1;
						#include modules/TEXTDRAWS/phone/vkcoin_menu
						phone_2[playerid] = true;
						UpdateVisubleCoins(playerid);
					}
					else if(playertextid == GlobalTDPlayer[playerid][21])
					{
						SPD(playerid, 20004, DIALOG_STYLE_LIST, !"{FFFFFF} Домашняя страница | {B1413D}CS:GO", !(str_f("\
						{FFFFFF}ТОП {f4f142}проекта\n{FFFFFF}ТОП {f4f142}%s\n{FFFFFF}Моя статистика\n{de9b35}Начать игру", ServerCFG[server_logo])), !"»", !"x");
					}
					/*else if(playertextid == GlobalTDPlayer[playerid][2] || playertextid == GlobalTDPlayer[playerid][3] || playertextid == GlobalTDPlayer[playerid][5] || playertextid == GlobalTDPlayer[playerid][3]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][16] || playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][19] || playertextid == GlobalTDPlayer[playerid][17]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][6] || playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][7]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][12] || playertextid == GlobalTDPlayer[playerid][10]) return 1;*/
					else if(playertextid == GlobalTDPlayer[playerid][18]) return ShowBankMenu(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][14]) return SPD(playerid, 15201, DIALOG_STYLE_LIST, !"{039f83}Glovo{ffc245}!", !"Онлайн-покупки\n{cccccc}Мои заказы\n{039f83}Работа курьера Glovo\nПолезная информация\nКупить улучшение (стоимость: 1250 AZ-монет)", !"Выбрать", !"Закрыть");
					else if(playertextid == GlobalTDPlayer[playerid][12]) return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Курс валют (USD)", !"{ffff00}Обновлено 16 минут назад\t \t \nBitcoin (BTC):\t$60012\t{31B404}[ У вас есть: 0 BTC ]\n{cccccc}Litecoin (LTC):\t{cccccc}$180\t \n{cccccc}Ethereum (ETH):\t{cccccc}$3816\t \nЕВРО (euro):\t$4752\t ", !"Закрыть", !"");
				}
				case 3:
				{
					if(playertextid == GlobalTDPlayer[playerid][50] || playertextid == GlobalTDPlayer[playerid][45]) SCM(playerid,-1,!"Временно отключено!");
					else if(playertextid == GlobalTDPlayer[playerid][51]) SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", !"Добавить контакт\nВызвать Скорую\nВызвать Полицию\nВызвать Такси\nВызвать Механика\nНаписать в СМИ\nПозвонить в СМИ\nУзнать владельца дома (тел. 997)\n{ebe534}(NEW){FFFFFF} Входящие звонки\n{ebe534}(NEW){FFFFFF} Исходящие звонки\n", !"Принять", !"Отмена");
					else if(playertextid == GlobalTDPlayer[playerid][40]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Диалоги", !"{ffffff}Вы еще не с кем не переписывались.", !"Закрыть", !"");
					else if(playertextid == GlobalTDPlayer[playerid][39]) SearchPhone(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][28])
					{
						if(phone_2[playerid]) return 1;
						#include modules/TEXTDRAWS/phone/vkcoin_menu
						phone_2[playerid] = true;
						UpdateVisubleCoins(playerid);
					}
					else if(playertextid == GlobalTDPlayer[playerid][24])
					{
						SPD(playerid, 20004, DIALOG_STYLE_LIST, !"{FFFFFF} Домашняя страница | {B1413D}CS:GO", (str_f("\
						{FFFFFF}ТОП {f4f142}проекта\n{FFFFFF}ТОП {f4f142}%s\n{FFFFFF}Моя статистика\n{de9b35}Начать игру", ServerCFG[server_logo])), !"»", !"x");
					}
					/*else if(playertextid == GlobalTDPlayer[playerid][5]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][16] || playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][19] || playertextid == GlobalTDPlayer[playerid][17]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][6] || playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][7]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][12] || playertextid == GlobalTDPlayer[playerid][10]) return 1;*/
					else if(playertextid == GlobalTDPlayer[playerid][21]) return ShowBankMenu(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][17]) return SPD(playerid, 15201, DIALOG_STYLE_LIST, !"{039f83}Glovo{ffc245}!", !"Онлайн-покупки\n{cccccc}Мои заказы\n{039f83}Работа курьера Glovo\nПолезная информация\nКупить улучшение (стоимость: 1250 AZ-монет)", !"Выбрать", !"Закрыть");
					else if( playertextid == GlobalTDPlayer[playerid][15]) return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Курс валют (USD)", !"{ffff00}Обновлено 16 минут назад\t \t \nBitcoin (BTC):\t$60012\t{31B404}[ У вас есть: 0 BTC ]\n{cccccc}Litecoin (LTC):\t{cccccc}$180\t \n{cccccc}Ethereum (ETH):\t{cccccc}$3816\t \nЕВРО (euro):\t$4752\t ", !"Закрыть", !"");
				}
				case 4:
				{
					if(playertextid == GlobalTDPlayer[playerid][44]) SCM(playerid,-1,!"Временно отключено!");
					else if(playertextid == GlobalTDPlayer[playerid][42]) SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", !"Добавить контакт\nВызвать Скорую\nВызвать Полицию\nВызвать Такси\nВызвать Механика\nНаписать в СМИ\nПозвонить в СМИ\nУзнать владельца дома (тел. 997)\n{ebe534}(NEW){FFFFFF} Входящие звонки\n{ebe534}(NEW){FFFFFF} Исходящие звонки\n", !"Принять", !"Отмена");
					else if(playertextid == GlobalTDPlayer[playerid][40]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Диалоги", !"{ffffff}Вы еще не с кем не переписывались.", !"Закрыть", !"");
					else if(playertextid == GlobalTDPlayer[playerid][46]) SearchPhone(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][24])
					{
						if(phone_2[playerid]) return 1;
						#include modules/TEXTDRAWS/phone/vkcoin_menu
						phone_2[playerid] = true;
						UpdateVisubleCoins(playerid);
					}
					else if(playertextid == GlobalTDPlayer[playerid][20])
					{
						SPD(playerid, 20004, DIALOG_STYLE_LIST, !"{FFFFFF} Домашняя страница | {B1413D}CS:GO", (str_f("\
						{FFFFFF}ТОП {f4f142}проекта\n{FFFFFF}ТОП {f4f142}%s\n{FFFFFF}Моя статистика\n{de9b35}Начать игру", ServerCFG[server_logo])), !"»", !"x");
					}
					/*else if(playertextid == GlobalTDPlayer[playerid][3] || playertextid == GlobalTDPlayer[playerid][2] || playertextid == GlobalTDPlayer[playerid][3] || playertextid == GlobalTDPlayer[playerid][5] || playertextid == GlobalTDPlayer[playerid][3]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][16] || playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][19] || playertextid == GlobalTDPlayer[playerid][17]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][6] || playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][7]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][12] || playertextid == GlobalTDPlayer[playerid][10]) return 1;*/
					else if(playertextid == GlobalTDPlayer[playerid][15]) return SPD(playerid, 15201, DIALOG_STYLE_LIST, !"{039f83}Glovo{ffc245}!", !"Онлайн-покупки\n{cccccc}Мои заказы\n{039f83}Работа курьера Glovo\nПолезная информация\nКупить улучшение (стоимость: 1250 AZ-монет)", !"Выбрать", !"Закрыть");
					else if(playertextid == GlobalTDPlayer[playerid][13]) return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Курс валют (USD)", !"{ffff00}Обновлено 16 минут назад\t \t \nBitcoin (BTC):\t$60012\t{31B404}[ У вас есть: 0 BTC ]\n{cccccc}Litecoin (LTC):\t{cccccc}$180\t \n{cccccc}Ethereum (ETH):\t{cccccc}$3816\t \nЕВРО (euro):\t$4752\t ", !"Закрыть", !"");
				}
				case 5:
				{
					if(playertextid == GlobalTDPlayer[playerid][44]) SCM(playerid,-1,!"Временно отключено!");
					else if(playertextid == GlobalTDPlayer[playerid][42]) SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", !"Добавить контакт\nВызвать Скорую\nВызвать Полицию\nВызвать Такси\nВызвать Механика\nНаписать в СМИ\nПозвонить в СМИ\nУзнать владельца дома (тел. 997)\n{ebe534}(NEW){FFFFFF} Входящие звонки\n{ebe534}(NEW){FFFFFF} Исходящие звонки\n", !"Принять", !"Отмена");
					else if(playertextid == GlobalTDPlayer[playerid][40]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Диалоги", !"{ffffff}Вы еще не с кем не переписывались.", !"Закрыть", !"");
					else if(playertextid == GlobalTDPlayer[playerid][46]) SearchPhone(playerid);
					else if(playertextid == GlobalTDPlayer[playerid][24])
					{
						if(phone_2[playerid]) return 1;
						#include modules/TEXTDRAWS/phone/vkcoin_menu
						phone_2[playerid] = true;
						UpdateVisubleCoins(playerid);
					}
					else if(playertextid == GlobalTDPlayer[playerid][20])
					{
						SPD(playerid, 20004, DIALOG_STYLE_LIST, !"{FFFFFF} Домашняя страница | {B1413D}CS:GO", (str_f("\
						{FFFFFF}ТОП {f4f142}проекта\n{FFFFFF}ТОП {f4f142}%s\n{FFFFFF}Моя статистика\n{de9b35}Начать игру", ServerCFG[server_logo])), !"»", !"x");
					}
					/*else if(playertextid == GlobalTDPlayer[playerid][3] || playertextid == GlobalTDPlayer[playerid][2] || playertextid == GlobalTDPlayer[playerid][3] || playertextid == GlobalTDPlayer[playerid][5] || playertextid == GlobalTDPlayer[playerid][3]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][16] || playertextid == GlobalTDPlayer[playerid][17] || playertextid == GlobalTDPlayer[playerid][19] || playertextid == GlobalTDPlayer[playerid][17]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][6] || playertextid == GlobalTDPlayer[playerid][7] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][7]) return 1;
					else if(playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][9] || playertextid == GlobalTDPlayer[playerid][10] || playertextid == GlobalTDPlayer[playerid][12] || playertextid == GlobalTDPlayer[playerid][10]) return 1;*/
					else if(playertextid == GlobalTDPlayer[playerid][15]) return SPD(playerid, 15201, DIALOG_STYLE_LIST, !"{039f83}Glovo{ffc245}!", !"Онлайн-покупки\n{cccccc}Мои заказы\n{039f83}Работа курьера Glovo\nПолезная информация\nКупить улучшение (стоимость: 1250 AZ-монет)", !"Выбрать", !"Закрыть");
					else if(playertextid == GlobalTDPlayer[playerid][13]) return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Курс валют (USD)", !"{ffff00}Обновлено 16 минут назад\t \t \nBitcoin (BTC):\t$60012\t{31B404}[ У вас есть: 0 BTC ]\n{cccccc}Litecoin (LTC):\t{cccccc}$180\t \n{cccccc}Ethereum (ETH):\t{cccccc}$3816\t \nЕВРО (euro):\t$4752\t ", !"Закрыть", !"");
				}
			}
		}
	}
	if(PItreasure[playerid][tTD])
	{
		if(playertextid == GlobalTDPlayer[playerid][5]) treasureHideTD(playerid,2);
		else if(playertextid == GlobalTDPlayer[playerid][4]) treasureHideTD(playerid,1);
		else if(playertextid == GlobalTDPlayer[playerid][3]) treasureHideTD(playerid,0);
		else if(playertextid == GlobalTDPlayer[playerid][1]) treasureHideTD(playerid);
	}
	if(PAI[playerid][open_td])
	{
		new count = 7;
		for(new i=25; i < 47;)
		{
			if(playertextid == PAI[playerid][testdrive_td][i]) 
			{
				if(PAI[playerid][number_td] != -1)
				{
					PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][PAI[playerid][number_td]*3+25], 0xA52A2A59);
					PlayerTextDrawShow(playerid, PAI[playerid][testdrive_td][PAI[playerid][number_td]*3+25]);
				}
				PAI[playerid][number_td] = count, PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][i], 0xcc3737AA);
				PlayerTextDrawShow(playerid, PAI[playerid][testdrive_td][i]);
				return 1;
			}
			count--;
			i += 3;
		}
		if(playertextid == PAI[playerid][testdrive_td][9])
		{
		    if(!PAI[playerid][select_td]) return 1;
	 		PAI[playerid][select_td] -= 8;
		    UpdateTDmodel(playerid);
		}
		else if(playertextid == PAI[playerid][testdrive_td][8])
		{
		    if(PAI[playerid][select_td] >= 80) return 1;
		    PAI[playerid][select_td] += 8;
		    UpdateTDmodel(playerid);
		}
		else if(playertextid == PAI[playerid][testdrive_td][7] && PAI[playerid][number_td] != -1)
		{
		    if(GetMoney(playerid) < 350000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
			SetPlayerVirtualWorldEx(playerid, 1000+playerid);
			GiveMoney(playerid,-350000);
			GiveBizMoney(playerid,350000);
			switch(GetPVarInt(playerid, !"testDrive_type"))
			{
				case 0:
				{
					Clother[playerid] = 144;
					new id = (-PAI[playerid][select_td])-PAI[playerid][number_td]+sizeof(InfoConfigSkin)-1;
					SetPlayerSkin(playerid, InfoConfigSkin[id][MSkin_New]);
					str_1[0] = EOS, f(str_1, sizeof(str_1), "{ffffff}Вы успешно начали примерку одежды\
					{ffff00}Скин: %s (ID: %i) [модель: %i]{ffffff}.\n\
					Примерка продолжается 30 секунд.\n\n\
					{cccccc}Примерка завершается в случаях:\n- прошло 30 секунд;\n- далеко отошли от магазина;\n\
					- завершили самостоятельно через пикап;", InfoConfigSkin[id][MSkin_Name], SearchSkinOrderID(InfoConfigSkin[id][MSkin_New]), InfoConfigSkin[id][MSkin_New]);
					PAI[playerid][secondupdate] = 30;
					//if(TestDriveSphere[playerid] != -1) DestroyDynamicArea(TestDriveSphere[playerid]), TestDriveSphere[playerid] = -1;
					//TestDriveSphere[playerid] = CreateDynamicSphere(-1651.2362,1226.9124,6.7479, 300.0, 1000+playerid, 0, playerid);
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Примерка одежды", str_1, !"Закрыть", !"");
				}
				case 1,2:
				{
					Clother[playerid] = 145;
					new id = PAI[playerid][select_td]+PAI[playerid][number_td];
					str_1[0] = EOS, f(str_1, sizeof(str_1), "{ffffff}Вы успешно начали примерку аксессуара\
					{ffff00}Аксессуар: %s (ID: %i){ffffff}.\n\
					Примерка продолжается 30 секунд.\n\n\
					{cccccc}Примерка завершается в случаях:\n- прошло 30 секунд;\n- далеко отошли от магазина;\n\
					- завершили самостоятельно через пикап;", ItemsInfo[player_Global_Int[playerid][id]][ItemID], player_Global_Int[playerid][id]);
					PAI[playerid][secondupdate] = 30;
					for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
					player_GlobalID[playerid][27] = player_Global_Int[playerid][id];
					UseItemAttached(playerid, -2);
					//if(TestDriveSphere[playerid] != -1) DestroyDynamicArea(TestDriveSphere[playerid]), TestDriveSphere[playerid] = -1;
					//TestDriveSphere[playerid] = CreateDynamicSphere(-1651.2362,1226.9124,6.7479, 300.0, 1000+playerid, 0, playerid);
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Примерка аксессуара", str_1, !"Закрыть", !"");
				}
				case 3:
				{
					if(!GetInvCount(playerid, 757)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет лицензии на вождение.");
					if(PI[playerid][plveh] != -1) destroyvehicle_(PI[playerid][plveh]);
					new idcar = InfoConfigVehicle[(-PAI[playerid][select_td])-PAI[playerid][number_td]+sizeof(InfoConfigVehicle)-1][Model_NEW];
					PlVeh(playerid, idcar, -1651.2362,1226.9124,6.7479,225.0,1000+playerid);
					PutPlayerInVehicleEx(playerid, PI[playerid][plveh], 0);
					PAI[playerid][secondupdate] = 600;
					SPDf(playerid, 0, 0, !"\t\t{AFAFAF}Тест-драйв", !"Закрыть", !"","{FFFFFF}Вы начали тест-драйв автомобиля {f7f21a}%s [модель: %i].\n{FFFFFF}Вы можете проехать наш маршрут по чекпоинтам или проложить свой собственныйй маршрут.\n \n{AFAFAF}Тест-драйв завершается в случаях:\n- {AFAFAF}проехали маршрут до конца;\n- {AFAFAF}прошло 10 минут;\n- {AFAFAF}покинули автомобиль;\n- {AFAFAF}повредили автомобиль;",InfoConfigVehicle[SearchVehicleName(idcar)][Model_Name],idcar);
				}
			}
			for(new i; i < 47; i++) DestroyPlayerTD(playerid, PAI[playerid][testdrive_td][i]);
			CancelSelectTextDraw(playerid);
			PAI[playerid][open_td] = false;
			PAI[playerid][testdrive_td][10] = CreatePlayerTextDraw(playerid, 238.750000, 375.888489, "particle:lamp_shad_64");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][10], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][10], 157.000000, 74.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][10], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][10], 0xC80617BB);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][10], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][10], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][10], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][10], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][10], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][10], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][10], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][10], 0);

			PAI[playerid][testdrive_td][9] = CreatePlayerTextDraw(playerid, 337.549896, 414.377808, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][9], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][9], 10.000000, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][9], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][9], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][9], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][9], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][9], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][9], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][9], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][9], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][9], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][9], 0);

			PAI[playerid][testdrive_td][8] = CreatePlayerTextDraw(playerid, 314.750000, 402.177185, "THE_TIME_WILL_END_IN");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][8], 0.294100, 1.232800);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][8], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][8], 2);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][8], 0xFFFFFFFF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][8], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][8], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][8], 1);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][8], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][8], 0x00000031);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][8], 1);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][8], 1);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][8], 0);

			PAI[playerid][testdrive_td][7] = CreatePlayerTextDraw(playerid, 285.250000, 414.411011, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][7], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][7], 10.000000, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][7], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][7], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][7], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][7], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][7], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][7], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][7], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][7], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][7], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][7], 0);

			PAI[playerid][testdrive_td][6] = CreatePlayerTextDraw(playerid, 285.250000, 425.144287, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][6], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][6], 10.000000, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][6], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][6], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][6], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][6], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][6], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][6], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][6], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][6], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][6], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][6], 0);

			PAI[playerid][testdrive_td][5] = CreatePlayerTextDraw(playerid, 286.899902, 419.733002, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][5], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][5], 59.000000, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][5], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][5], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][5], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][5], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][5], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][5], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][5], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][5], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][5], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][5], 0);

			PAI[playerid][testdrive_td][4] = CreatePlayerTextDraw(playerid, 337.549805, 425.110992, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][4], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][4], 10.000000, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][4], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][4], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][4], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][4], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][4], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][4], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][4], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][4], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][4], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][4], 0);

			PAI[playerid][testdrive_td][3] = CreatePlayerTextDraw(playerid, 290.149902, 416.310913, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][3], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][3], 52.009800, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][3], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][3], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][3], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][3], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][3], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][3], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][3], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][3], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][3], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][3], 0);

			PAI[playerid][testdrive_td][2] = CreatePlayerTextDraw(playerid, 290.149902, 423.155304, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][2], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][2], 52.009800, 12.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][2], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][2], 0xC80617FF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][2], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][2], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][2], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][2], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][2], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][2], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][2], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][2], 0);

			PAI[playerid][testdrive_td][1] = CreatePlayerTextDraw(playerid, 317.250000, 413.999695, "10:00");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][1], 0.306100, 2.240700);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][1], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][1], 2);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][1], 0xFFFFFFFF);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][1], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][1], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][1], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][1], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][1], 0x00000056);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][1], 2);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][1], 1);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][1], 0);

			PAI[playerid][testdrive_td][0] = CreatePlayerTextDraw(playerid, 281.000000, 412.911011, "particle:lamp_shad_64");
			PlayerTextDrawLetterSize(playerid, PAI[playerid][testdrive_td][0], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, PAI[playerid][testdrive_td][0], 71.000000, 36.000000);
			PlayerTextDrawAlignment(playerid, PAI[playerid][testdrive_td][0], 1);
			PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][0], 0x00800023);
			PlayerTextDrawUseBox(playerid, PAI[playerid][testdrive_td][0], 0);
			PlayerTextDrawBoxColor(playerid, PAI[playerid][testdrive_td][0], 0x80808080);
			PlayerTextDrawSetShadow(playerid, PAI[playerid][testdrive_td][0], 0);
			PlayerTextDrawSetOutline(playerid, PAI[playerid][testdrive_td][0], 0);
			PlayerTextDrawBackgroundColor(playerid, PAI[playerid][testdrive_td][0], 0x000000FF);
			PlayerTextDrawFont(playerid, PAI[playerid][testdrive_td][0], 4);
			PlayerTextDrawSetProportional(playerid, PAI[playerid][testdrive_td][0], 0);
			PlayerTextDrawSetSelectable(playerid, PAI[playerid][testdrive_td][0], 0);
			for(new i; i < 11; i++) PlayerTextDrawShow(playerid, PAI[playerid][testdrive_td][i]);
		}
		else if(playertextid == PAI[playerid][testdrive_td][1]) HideTD(playerid);
	}
    if(playertextid == eatfree2[playerid][3]) eatselect[playerid] = 1, PlayerTextDrawColor(playerid, eatfree2[playerid][3], 0xf5f5f518);
    else if(playertextid == eatfree2[playerid][0]) eatselect[playerid] = 2, PlayerTextDrawColor(playerid, eatfree2[playerid][0], 0xf5f5f518);
   	else if(playertextid == eatfree2[playerid][9] && eatselect[playerid] != 0)
	{
		switch(eatselect[playerid])
		{
		    case 1:
		    {
				if(GetMoney(playerid) < 30000) return SendBotMessage(playerid, !"Извините, но у вас недостаточно денег!");
				if(Fullness{playerid} > 50) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны!");
				GiveMoney(playerid, -30000, "покушал");
		        SetFullness(playerid, 100);
		        GiveBizMoney(playerid, 30000);
				J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
				SCM(playerid, COLOR_VALIK, !"Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
				SCM(playerid, -1, !"Рекомендуем кушать в закусочных, там намного дешевле!");
				SendEatBot(playerid);
				return EatSystem(playerid,1);
		    }
			case 2:
			{
		 		if(PI[playerid][pLevel] > 1) return SendBotMessage(playerid,!"Извините, но эта еда только для игроков 1-го уровня!");
				SetFullness(playerid, 100);
				J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
				SCM(playerid, COLOR_VALIK,!"Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
				SendEatBot(playerid);
				GiveBizMoney(playerid, randomEx(10000,50000));
				return EatSystem(playerid, 1);
			}
			default: return 1;
		}
	}
	else if(playertextid == eatfree2[playerid][8]) EatSystem(playerid, 1);
	else if(Upgrade_Open[playerid] != false)
	{
		if(playertextid == Upgrade_InventTD[playerid][15])
		{
			if(!Upgrade_Start[playerid])
			{
				//if(Upgrade_TimerID[playerid] != -1) KillTimer(Upgrade_TimerID[playerid]);
				if(Upgrade_GetSlotAcs{playerid} == 255 || Upgrade_GetSlotStone{playerid} == 255) return 1;
                Upgrade_ProgressWhite[playerid] = 2.727182;
				Upgrade_Start[playerid] = true;
                CreateUpgrade_ProgreesTD(playerid, true);
                for(new i = 2; i < 5; i++) PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][i]);
				if(Upgrade_TimerID[playerid] != -1) KillTimer(Upgrade_TimerID[playerid]);
                Upgrade_TimerID[playerid] = SetTimerEx("SharpeningTime", 100, 1, "d", playerid);
                if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][16], "UNDO");
                else PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][16], FixText("ОТМЕНИТЬ"));
			}
			else
            {
                if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][16], "ENCHANT");
                else PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][16], FixText("ЗАТОЧИТЬ"));
				Upgrade_Start[playerid] = false;
                if(Upgrade_TimerID[playerid] != -1) KillTimer(Upgrade_TimerID[playerid]);
                Upgrade_TimerID[playerid] = -1;
                Upgrade_ProgressWhite[playerid] = 0.0;
                for(new i = 2; i < 5; i++) PlayerTextDrawHide(playerid, Upgrade_ProgreesTD[playerid][i]);
            }
            PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][16]);
		}
		else if(!Upgrade_Start[playerid])
		{
			if(playertextid == Upgrade_InventTD[playerid][17]) HideSharpening(playerid);
			else if(playertextid == Upgrade_InventTD[playerid][23]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение Аксессуаров:\nДля улучшения предметов, вам необходимы {FF9D41}точильные камни{FFFFFF}, найти их\nможно на семейном мероприятии - Зловещий дворец ({C64545}/GPS - Мероприятия{FFFFFF})\nили приобрести в игровом магазине или на центральном рынке.\n\nУлучшение предметов даст возможность вашему персонажу получить\nспециальные характеристики: {FF9D41}Урон, Защита, Удача и Восстановление.{FFFFFF}\nЭти характеристики появляются после улучшения аксессуара (от +4).\nМаксимальный уровень улучшения - {FF9D41}16{FFFFFF}! Если ваш персонаж будет одет\nв аксессуары, которые вместе имеют от {FF9D41}+50{FFFFFF} улучшений, вы начнёте \nсветиться специальной аурой, которая отобразит ваш достаток.\nТак-же в инвентаре будет отображаться уровень улучшения каждого аксессуара!", !"Выход", !"");
			else if(playertextid == Upgrade_InventTD[playerid][27]) ClearSlotSharpening(playerid, 2);
			else if(playertextid == Upgrade_InventTD[playerid][26]) ClearSlotSharpening(playerid, 1);
		}
	}
    else if(RouletteOpen{playerid})
    {
        if(playertextid == GlobalTDPlayer[playerid][18]) RollUpdateModel(playerid, 0);
        if(playertextid == GlobalTDPlayer[playerid][23]) RollUpdateModel(playerid, 1);
        if(playertextid == GlobalTDPlayer[playerid][28]) RollUpdateModel(playerid, 2);
        if(playertextid == GlobalTDPlayer[playerid][48]) RollUpdateModel(playerid, 3);
        if(playertextid == GlobalTDPlayer[playerid][41]) BuyRoulette(playerid);
        if(playertextid == GlobalTDPlayer[playerid][43])
        {
            if(RollTimeUpdate[playerid] || GetDonate(playerid) < 100) return 1;
            new roll = SelectedRoulette[playerid];
            for(new i; i < 16; i++) RoulleteItem[playerid][roll][i] = 0, RoulleteItemAmount[playerid][roll][i] = 0, RoulleteItemMoney[playerid][roll][i] = false;
            PI[playerid][pVirMoney] -= 100;
            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
            RollUpdateModel(playerid, roll);
            PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][41], "%i", PI[playerid][pVirMoney]), PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][41]);
        }
        if(playertextid == GlobalTDPlayer[playerid][29])
        {
            new roll = SelectedRoulette[playerid];
            if(RollTimeUpdate[playerid]) return 1;
			switch(SelectedRoulette[playerid])
			{
			    case 0..2:
				{
				    if(!GetInvCount(playerid, 313-SelectedRoulette[playerid])) return SCM(playerid, -1, !"У вас нет больше!");
					InvAdd(playerid,313-SelectedRoulette[playerid],-1);
					PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][42], "%i",GetInvCount(playerid, 313-SelectedRoulette[playerid]));
				}
			    case 3:
				{
				    if(!GetInvCount(playerid, 1135)) return SCM(playerid, -1, !"У вас нету больше");
					InvAdd(playerid,1135,-1);
					PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][42], "%i",GetInvCount(playerid, 1135));
				}
			    default: return 1;
			}
            RollUpdate(playerid);
            for(new i; i < 16; i++)
            {
                new ID = RoulleteItem[playerid][roll][i];
                if(PlayerTextDrawGetBackgroundCol(playerid, GlobalTDPlayer[playerid][49+i]) != 0xBABC49FF) continue;
                if(ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], ItemsInfo[ID][ItemColor]);
                else PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][49+i], 0x191919FF);
                PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][49+i]);
            }
        }
    }
	if(CraftOpened[playerid])
	{
		if(CraftColorOpened[playerid])
		{
			for(new i = 9; i >= 0; i--)
			{
				if(playertextid == GlobalTDPlayer[playerid][i+59])
				{
					CraftSetColorItem(playerid, i);
					break;
				}
			}
		}
		for(new i = 56; i > 50 ; --i)
		{
			for(new j = 1; j < 6; j++)
			{
				i--;
				if(playertextid == GlobalTDPlayer[playerid][i])
				{
					CraftPageSelect[playerid] = 1;
					CraftItemSelect[playerid] = 0;
					CraftTabSelect[playerid] = j;
					CraftAmount[playerid] = 1;
					CraftOpen(playerid);
					break;
				}
			}
		}
		if(playertextid == GlobalTDPlayer[playerid][9]) SPD(playerid, 8475, DIALOG_STYLE_INPUT, !" ", "{FFFFFF}Введите количество, которое хотите изготовить", "Выбрать", "Отмена");
		if(playertextid == GlobalTDPlayer[playerid][27])
		{
			if(CraftPageSelect[playerid] != IntRound(GetAllAmountCraft(playerid)))
			{
				CraftPageSelect[playerid]++;
				CraftItemSelect[playerid] = 0;
				CraftOpen(playerid);
			}
		}
		if(playertextid == GlobalTDPlayer[playerid][1]) ShowCraftSelectColor(playerid);
		if(playertextid == GlobalTDPlayer[playerid][8])
		{
			new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid]+CraftItemSelect[playerid];
			if(CraftAmount[playerid] != CraftInfo[ID][CraftMax])
			{
				CraftAmount[playerid]++;
				CraftOpen(playerid);
			}
		}
		if(playertextid == GlobalTDPlayer[playerid][11])
		{
			if(CraftAmount[playerid] != 1)
			{
				CraftAmount[playerid]--;
				CraftOpen(playerid);
			}
		}
		if(playertextid == GlobalTDPlayer[playerid][29])
		{
			if(CraftPageSelect[playerid] != 1)
			{
				CraftPageSelect[playerid]--;
				CraftItemSelect[playerid] = 0;
				CraftOpen(playerid);
			}
		}
		for(new i = 17; i > 11; i--)
		{
			if(playertextid == GlobalTDPlayer[playerid][i])
			{
				new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid]+CraftItemSelect[playerid], j = ((-i)-(-17)), Need = CraftInfo[ID][CraftNeed][j];
				SPD(playerid, 8236, 0, !"Информация о предмете", GetItemInfo(playerid, Need), !"Выход", !"");
				break;
			}
		}
		if(playertextid == GlobalTDPlayer[playerid][4]) StartCraft(playerid);
		for(new i = 40; i >= 30 ; --i)
		{
			for(new j ; j < 10; j++)
			{
				i--;
				if(playertextid == GlobalTDPlayer[playerid][i])
				{
					CraftItemSelect[playerid] = j;
					CraftOpen(playerid);
					break;
				}
			}
		}
	}
	for(new j = 1; j < 9; j++)
	{
	    if(playertextid == boomtext_p[playerid][j])
		{
			if(NumMusic[playerid] != 0) return 1;
      		foreach(new i: PlayerPlayersStream[playerid])
			{
			    if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
			    {
				    StopAudioStreamForPlayerFix(i);
					PlayAudioStreamForPlayerFix(i, BumInfo[Music[playerid]+8-j][bMusic], BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
				}
			}
			NumMusic[playerid] = Music[playerid]+8-j;
			ShowMenuBoom(playerid);
		}
	}
	for(new j; j < 16; j+=2)
	{
		if(playertextid == pboom[playerid][j])
		{
		    PlayerTextDrawHide(playerid, pboom[playerid][j+1]);
			PlayerTextDrawHide(playerid, pboom[playerid][j]);
			NumMusic[playerid] = 0;
      		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
	}
	if(FamZones[playerid])
	{
		for(new i; i < 156; i++)
		{
			if(!(playertextid == GlobalTDPlayer[playerid][i])) continue;
			SetPVarInt(playerid, !"idKvadrat", GANGZONES-i-2);
			str_1[0] = EOS;
			if(GZInfo[GANGZONES-i-2][gzFracID] != -1) SetString(str_1, FamilyInfo[ FamilyID_(GZInfo[GANGZONES-i-2][gzFracID]) ][famName]);
			str_2[0] = EOS, f(str_2, sizeof(str_2), "\
				Установить метку в GPS\n\
				Отобрать территорию\n \n\
				Принадлежит семье: %s", str_1);

			SPD(playerid, 15210, DIALOG_STYLE_LIST, (str_f("{cccccc}Территория №%i", GANGZONES-i-1-131)), str_2, !"Выбрать", !"Закрыть");
			break;
		}
	}
	else if((FamMenu1[playerid] || FamMenu3[playerid]))
	{
		if(playertextid == GlobalTDPlayer[playerid][88]) ShowFamily(playerid,1);
		else if(playertextid == GlobalTDPlayer[playerid][87]) SCM(playerid, -1, !"Разработка1");
		else if(playertextid == GlobalTDPlayer[playerid][86])
		{
			if(FamilyInfo[pFamilyID(playerid)][famType] < 0) FamilyInfo[pFamilyID(playerid)][famType] = 0;
			if(FamilyInfo[pFamilyID(playerid)][famChatColor] < 0) FamilyInfo[pFamilyID(playerid)][famChatColor] = 0;
			static famlead[22+2];
			famlead[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famLeader], famlead);

			static famzam0[22+2];
			famzam0[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_0], famzam0);

			static famzam1[22+2];
			famzam1[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_1], famzam1);

			static famzam2[22+2];
			famzam2[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_2], famzam2);
			str_1[0] = EOS, f(str_1, sizeof str_1, "\
				{FFFFFF}\n\n\
				Название семьи: {%s}%s{FFFFFF}\n\
				Тип семьи: {%s}%s{FFFFFF}\n\
				Репутация семьи: {%s}%d очк.{FFFFFF}\n\
				Зловещая репутация семьи: {%s}0 очк.{FFFFFF}\n\
				Уровень семьи: {%s}%d [%d/%d]{FFFFFF}\n\
				Идёт в казну с депозитов членов семьи: {%s}%d%%{FFFFFF}\n\
				Местоположение спавна: {%s}%s{FFFFFF}\n\
				Денег в бюджете семьи: {%s}0${FFFFFF}\n\
				Discord: {%s}[ %s ]{FFFFFF}\n\n\
				Лидер семьи: {%s}%s{FFFFFF}\n\
				Заместитель: {%s}%s{FFFFFF}\n\
				Заместитель 2: {%s}%s{FFFFFF}\n\
				Заместитель 3: {%s}%s{FFFFFF}\n\n\
				Слоган: {%s}%s{FFFFFF}\n\
				Содержание: {%s}0 репутации каждый PayDay{FFFFFF}\n\
				Квартира: {%s}0 репутации каждый PayDay\n\n\
				{FFFFFF}Семейный альянс: {%s}Нет\n\
				Обьявление: {FFFFFF}[{FF8859}Нет{FFFFFF}]{FFFFFF}\n\n\n\n\n\
				Информация об ограничениях за текущий час (для заместителей){FFFFFF}\n\
				\t- Уволено игроков (0/5){FFFFFF}\n\
				\t- Потрачено семейной репутации {cccccc}(закупка аптечек/бронижелетов): {FFFFFF}0/5000",
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famName],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], fType[FamilyInfo[pFamilyID(playerid)][famType]][typeName],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famRep],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famLevel], FamilyInfo[pFamilyID(playerid)][famEXP], FamilyInfo[pFamilyID(playerid)][famLevel]*10,
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], "0",
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], (FamilyInfo[pFamilyID(playerid)][famHouse] != -1) ? ("Семейная квартира") : ("Нет"),
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], "Нет",//GetString(FamilyInfo[pFamilyID(playerid)][famDiscord], "None") ? ("Нет") : (FamilyInfo[pFamilyID(playerid)][famDiscord]),
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], famlead,
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famZam_0] == -1 ? ("{FFFFFF}[{FF8859}Нет{FFFFFF}]") : (famzam0),
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famZam_1] == -1 ? ("{FFFFFF}[{FF8859}Нет{FFFFFF}]") : (famzam1),
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famZam_2] == -1 ? ("{FFFFFF}[{FF8859}Нет{FFFFFF}]") : (famzam2),
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], FamilyInfo[pFamilyID(playerid)][famSlogan],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]],
				FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация о семье", str_1, !"Принять", !"");
		}
		else if(playertextid == GlobalTDPlayer[playerid][85]) HideFamily(playerid,0), callcmd::fmembers(playerid);
		else if(playertextid == GlobalTDPlayer[playerid][84])
		{
			HideFamily(playerid,0);
			if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
			str_1[0] = EOS,f(str_1, sizeof(str_1), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE FamilyMember = %i", PI[playerid][pFamilyMember]);
			mysql_tquery(mysql, str_1, "OfflineFamilyMembers", "d", playerid);
		}
		else if(playertextid == GlobalTDPlayer[playerid][83]) SCM(playerid, -1, !"Разраб");
		else if(playertextid == GlobalTDPlayer[playerid][82]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\n1.{DDA64D} Чат семьи(рация) - /fam [text]\n{FFFFFF}2.{DDA64D} /phone - menu - настройки (Откл/Вкл рацию)\n{FFFFFF}3.{DDA64D} Выгнать из семьи(оффлайн) - /famoffkick\n{FFFFFF}4.{DDA64D} Выдать бан семейного чата - /fammute\n{FFFFFF}5.{DDA64D} Снять бан семейного чата - /famunmute\n{FFFFFF}6.{DDA64D} Быстрый инвайт в семью - /faminvite\n{FFFFFF}7.{DDA64D} Быстрое увольнение - /famuninvite\n{FFFFFF}8.{DDA64D} Члены семьи онлайн - /fmembers\n{FFFFFF}9.{DDA64D} Изменить ранг члену семьи - /setfrank\n{FFFFFF}10.{DDA64D} Чат альянса - (/al)liance\n{FFFFFF}11.{DDA64D} Выдача одноразовых премий - /fpremium\n{FFFFFF}12.{DDA64D} Изменить ранг доступа к семейному авто - /fcarrank\n{FFFFFF}13.{DDA64D} Расформировать семью (для лидера) - /famdisband\n\n{D1FD4D}Обратите Внимание! Семье необходимо платить за её содержание!\nПлата репутацией зависит от многих факторов, основным является\nколичество людей, которые состоят в семье.\n\nСемьи, которые занимают топ 1 позицию рейтинга по развитию,\nколичеству людей или влиятельности получают 10 репутации\nкаждый Payday. Посмотреть рейтинг можно у входа в любой ЖК.", !"Принять", !"");
		else if(playertextid == GlobalTDPlayer[playerid][81])
		{
			if(FamilyInfo[pFamilyID(playerid)][famHouse] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет семейной квартиры");
			SPD(playerid, 5002, DIALOG_STYLE_LIST, !"",\
			"{FFFFFF}1.{D4D4D4} Информация о квартире.\n\
			{FFFFFF}2.{D4D4D4} Открыть/закрыть квартиру.\n\
			{FFFFFF}3.{D4D4D4} Закупить 50 аптечек {FFFFFF}[ 50 репутации ]\n\
			{FFFFFF}4.{D4D4D4} Закупить 20 бронежилетов {FFFFFF}[ 100 репутации ]\n\
			{FFFFFF}5.{D4D4D4} Положить деньги на склад семьи\n\
			{FFFFFF}6.{D4D4D4} Взять деньги со склада семьи\n\
			{FFFFFF}7.{D4D4D4} Положить семейные монеты на склад семьи\n\
			{FFFFFF}8.{D4D4D4} Взять семейные монеты со склада семьи\n\
			{FFFFFF}9.{D4D4D4} Улучшения для семьи\n\
			{ffffff}10. {D4D4D4} Оплатить налог на квартиру [$0 / $1200000]\n\
			{ffffff}11. {D4D4D4} Ранг сбора денег с территорий: 4 ранг\n\
			{ffffff}12. {D4D4D4} Ранг доступа к семейному складу: 2 ранг\n\
			{ffffff}13. {D4D4D4} Сделать личный автомобиль семейным\n\
			{ffffff}14. {D4D4D4} Сделать семейный автомобиль личным\n\
			{D4D4D4}[{FD4C4C}X{D4D4D4}] Продать семейную квартиру\n\
			{D4D4D4}[{FD4C4C}X{D4D4D4}] Продать семейную квартиру другой семье", "Принять", "Назад");
		}
		else if(playertextid == GlobalTDPlayer[playerid][80])
		{
			if(FamilyInfo[pFamilyID(playerid)][famGalka]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть галочка!");
			SPD(playerid, 10003, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Покупка галочки для семьи\n\nСемья, которая официально подтверждена имеет:\n\n{82cb43}- Специальный знак, подтверждающий запатентованность семьи\n- Возможность влияния на расформ семьи, которая копировала название вашей\n- Возможность терять в 2-а раза меньше репутации, при наказании членов семьи\n- Возможность пользования депозитом в кассах в любое время суток.\n\n{FFFFFF}Стоимость галочки: {f7d83f}50 000 000$\nНажмите Enter {FFFFFF}для подтверждения покупки!", !"Принять", !"Отмена");
		}
		else if(playertextid == GlobalTDPlayer[playerid][79])
		{
			if(!FamilyInfo[pFamilyID(playerid)][famGalka]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Чтобы оформить бренд, нужно сначала оформить галочку!");
			if(FamilyInfo[pFamilyID(playerid)][famBrand]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть бренд!");
			SPD(playerid, 10004, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Покупка бренда для семьи\n\nСемья, которая владеет брендом имеет:\n\n{82cb43}- Специальный знак, выделеляя вас от других семей.\n- Повышенные шансы получения рулеток в собирателях и дерби.\n- Семейный адвокат сможет с вероятностью 50 процентов освободить вас от TCP.\n- Доступ к информационному центру через телефон.\n- Возможность владения одним домом больше!\n{FFFFFF}Стоимость галочки: {f7d83f}80 000 000$\nНажмите Enter {FFFFFF}для подтверждения покупки!", !"Принять", !"Отмена");
		}
		else if(playertextid == GlobalTDPlayer[playerid][78])
		{
			if(FamilyInfo[pFamilyID(playerid)][famLeader] == PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может покинуть семью!");
			SPD(playerid, 8888, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы действительно хотите покинуть свою семью?\n\n{BE2D2D}В случае если вы ее покинете, вы потеряете все возможности, которые предоставляет система семей!\n\n", !"Принять", !"Отмена");
		}
		else if(playertextid == GlobalTDPlayer[playerid][77]) SPD(playerid, 15208, DIALOG_STYLE_LIST, !"\
			{BFBBBA}Война за территории", !"Карта территорий\n\
			{FA5858}Предстоящие встречи\n\
			Список всех встреч\n\
			Наши территории\n\
			{cccccc}Полезная информация", !"Выбрать", !"Назад");
		else if(playertextid == GlobalTDPlayer[playerid][76]) ShowFamily(playerid,2);
		else if(playertextid == GlobalTDPlayer[playerid][75]) HideFamily(playerid,0);
	}
	else if(FamMenu2[playerid])
	{
		if(playertextid == GlobalTDPlayer[playerid][77]) SPD(playerid, 497, DIALOG_STYLE_INPUT, !"Пригласить в семью", !"{FFFFFF}Введите в окошко {3667EC}id{FFFFFF} игрока, которого хотите пригласить к себе в семью!\n{3667EC}- Игрок должен находиться рядом с вами.", !"Принять", !"Отмена");
		else if(playertextid == GlobalTDPlayer[playerid][76]) SPD(playerid, 498, DIALOG_STYLE_INPUT, !"Выгнать из семьи", !"{FFFFFF}Введите в окошко {ECBF36}id{FFFFFF} игрока, которого хотите уволить из семьи!\n{ECBF36}- Игрок должен находиться в вашей семье.", !"Принять", !"Отмена");
		else if(playertextid == GlobalTDPlayer[playerid][75])
		{
			if(IsPlayerAccessFamily(playerid) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
			if(FamilyInfo[pFamilyID(playerid)][famZam_0] == -1) str_2[0] = EOS, f(str_2, sizeof(str_2), "{B3DC52}[Нет]");
			else 
			{
				str_q[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_0], str_q);
				str_2[0] = EOS, f(str_2, sizeof(str_2), "%s",str_q);
			}
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\n\nТекущий заместитель: {ED993F}%s{FFFFFF}\n\n\
			Введите в строку ид игрока, который состоит в вашей семье,\n\
			для того чтобы назначить его заместителем и дать ему панель управления.\n\
			Для того чтобы убрать заместителя, введите свой id.\n\n\n",str_2);
			SPD(playerid, 499, DIALOG_STYLE_INPUT, !"Изменить заместителя", str_1, !"Принять", !"Назад");
		}
		else if(playertextid == GlobalTDPlayer[playerid][74])
		{
			if(IsPlayerAccessFamily(playerid) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
			if(FamilyInfo[pFamilyID(playerid)][famZam_1] == -1) str_2[0] = EOS, f(str_2, sizeof(str_2), "{B3DC52}[Нет]");
			else 
			{
				str_q[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_1], str_q);
				str_2[0] = EOS, f(str_2, sizeof(str_2), "%s",str_q);
			}
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\n\nТекущий заместитель 2: {ED993F}%s{FFFFFF}\n\n\
			Введите в строку ид игрока, который состоит в вашей семье,\n\
			для того чтобы назначить его заместителем и дать ему панель управления.\n\
			Для того чтобы убрать заместителя, введите свой id.\n\n\n",str_2);
			SPD(playerid, 4991, DIALOG_STYLE_INPUT, !"Изменить заместителя", str_1, !"Принять", !"Назад");
		}
		else if(playertextid == GlobalTDPlayer[playerid][73]) SPD(playerid, 4999, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}- Цвет семьи, функция которая даст вам возможность сделать небольшое отличие от других семей!\nЦвет семьи используется:\n\n{F58558}- В рации семьи.\n- В статистике семьи.\n-В названии семьи, над головой персонажа.\n-Система будет дополняться в процессе обновлений.\n\n{FFFFFF}Введите в окошко цифру, цвет который вам нравится больше всего:\n{ff5e5e}0, {ffffff}1, {e65075}2, {efa4b7}3, {905b69}4, {d052ce}5, {ff00fc}6, {5d395d}7, {8e38ea}8, {6b21bb}9, {2f00ff}10, {7456f8}11, {5287f1}12, {1dbaf2}13, {308eb0}14, {30b061}15, {20f271}16, {107135}17, {47eb2a}18, {9ee991}19, {c2d95e}20, {d1ff00}21, {7b9022}22, {ffc900}23, {e8ca60}24, {6b5b1f}25, {ff8400}26, {c04312}27, {5c4c45}28, {373534}29, {351204}30.\n\n", !"Принять", !"Назад");
		else if(playertextid == GlobalTDPlayer[playerid][71]) FamRedacType(playerid);
		else if(playertextid == GlobalTDPlayer[playerid][70])
		{
			if(IsPlayerAccessFamily(playerid) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
			if(FamilyInfo[pFamilyID(playerid)][famZam_2] == -1) str_2[0] = EOS, f(str_2, sizeof(str_2), "{B3DC52}[Нет]");
			else 
			{
				str_q[0] = EOS, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_2], str_q);
				str_2[0] = EOS, f(str_2, sizeof(str_2), "%s",str_q);
			}
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{FFFFFF}\n\nТекущий заместитель 3: {ED993F}%s{FFFFFF}\n\n\
			Введите в строку ид игрока, который состоит в вашей семье,\n\
			для того чтобы назначить его заместителем и дать ему панель управления.\n\
			Для того чтобы убрать заместителя, введите свой id.\n\n\n",str_2);
			SPD(playerid, 4992, DIALOG_STYLE_INPUT, !"Изменить заместителя", str_1, !"Принять", !"Назад");
		}
		else if(playertextid == GlobalTDPlayer[playerid][69]) SPD(playerid, 5003, DIALOG_STYLE_INPUT, !"", "\n\n{FFFFFF}Введите в окошко {ECBF36}номер {FFFFFF}вашего Discord, который хотите использовать для общения с семьей!\n\n{ECBF36}- Номер, будет отображаться в описании семьи!\nЕсли вы не знаете что такое Discord, то рекомендуем\nне указывать его номер!\n\n", "Принять", "Отмена");
		else if(playertextid == GlobalTDPlayer[playerid][68]) SPD(playerid, 16222, DIALOG_STYLE_INPUT, !"Изменить название", "{FFFFFF}Введите в строку новое название для вашей семьи.\nСтоимость: {FFB828}2000 AZ Coins", !"Принять", !"Назад");
		else if(playertextid == GlobalTDPlayer[playerid][67]) SPD(playerid, 16223, DIALOG_STYLE_INPUT, !"", "\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{F2A425}Критерии:\n\n{FFFFFF}1.{DDA64D} Длина слогана 15 до 40 символов.\n{FFFFFF}2.{DDA64D} Слоган(Девиз) нельзя нарушать.\n{FFFFFF}3.{DDA64D} Не должно быть ненормативной лексики\n\n{FFFFFF}Примеры:\n\n1.{DDA64D} Семья, долг, честь\n{FFFFFF}2.{DDA64D} Непреклонные, несгибаемые, несдающиеся\n{FFFFFF}3.{DDA64D} Мудрость и сила\n\n{FFFFFF}Стоимость: {FF6D33}500 AZ Coins ", "Принять", "Отмена");
		else if(playertextid == GlobalTDPlayer[playerid][65]) SCM(playerid, -1, !"Разработка");
		else if(playertextid == GlobalTDPlayer[playerid][62]) SPD(playerid, 0, DIALOG_STYLE_INPUT, !"Установка процента на депозит состава", "{ffffff}Текущий процент: {d4d4d4}0%\n{ffffff}Укажите процент, сколько будет идти в бюджет семьи: (до 25%)\n\n{cccccc}С каждого начисления на депозит игроков этот процент будет идти в бюджет семьи.", "Изменить", "Назад");
		else if(playertextid == GlobalTDPlayer[playerid][64]) SPD(playerid, 0, DIALOG_STYLE_LIST, !"Ранги семьи", "[1] 1321233\n[2] Без названия\n[3] Без названия\n[4] Без названия\n[5] Без названия\n[6] Без названия\n[7] Без названия\n[8] Без названия\n[9] Без названия\n[10] Без названия\n", "Выбрать", "Назад");
		else if(playertextid == GlobalTDPlayer[playerid][63]) SPD(playerid, 0, DIALOG_STYLE_INPUT, !"Выдача премии", "{ffffff}Семейных монет на складе: {ffff00}0шт.\n{ffffff}Членов семьи в онлайне: {ffff00}1\n\n{ffffff}Укажите сумму семейных монет, которая будет\nраспределена между всеми членами семьи в онлайне.", "Далее", "Назад");
		else if(playertextid == GlobalTDPlayer[playerid][61]) SPD(playerid, 0, DIALOG_STYLE_INPUT, !"Передать лидерство", "{FFFFFF}Введите в строку ид игрока, который состоит в вашей семье,\nдля того чтобы назначить его лидером и передать ему всю панель управления.\nСтоимость: {FFB828}2000 AZ Coins", !"Принять", !"Назад");
	}
	if(RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime])
    {
        if(playertextid == RecInfo[playerid][rinfo][48]) CreateRecMenu(playerid, RecInfo[playerid][rPlayer]);//update
        else if(playertextid == RecInfo[playerid][rinfo][47]) CreateMenuRec(playerid, 0);//stats
        else if(playertextid == RecInfo[playerid][rinfo][46]) CreateMenuRec(playerid, 1);//action
        else if(playertextid == RecInfo[playerid][rinfo][45]) CreateMenuRec(playerid, 2);//punish 1
        else if(playertextid == RecInfo[playerid][rinfo][44]) CreateMenuRec(playerid, 3);//punish 2
        else if(playertextid == RecInfo[playerid][rinfo][43]) CreateMenuRec(playerid, 4);//help
        else if(playertextid == RecInfo[playerid][rinfo][42]) CreateMenuRec(playerid, 5);//check
        else if(playertextid == RecInfo[playerid][rinfo][41]) CreateMenuRec(playerid, 6);//tech
        else if(playertextid == RecInfo[playerid][rinfo][40]) CreateMenuRec(playerid, 7);//exit

        else if(playertextid == RecInfo[playerid][menu_exit][4])//az
        {
            static str[3];
            valstr(str, RecInfo[playerid][rPlayer]);
            callcmd::az(playerid, str);
            HideRecMenu(playerid);
        }
        else if(playertextid == RecInfo[playerid][menu_exit][3])//goto
        {
            static str[3];
            valstr(str, RecInfo[playerid][rPlayer]);
            callcmd::goto(playerid, str);
            HideRecMenu(playerid);
        }
        else if(playertextid == RecInfo[playerid][menu_exit][2])//gethere
        {
            static str[3];
            valstr(str, RecInfo[playerid][rPlayer]);
            HideRecMenu(playerid);
            callcmd::gethere(playerid, str);
        }
        else if(playertextid == RecInfo[playerid][menu_exit][1]) HideRecMenu(playerid);//exit
        else if(playertextid == RecInfo[playerid][menu_tech][4])
        {
            SCMf(playerid, -1, "Reg IP [%s] Old IP [%s]", PlayerRegIP[RecInfo[playerid][rPlayer]], PlayerIp[RecInfo[playerid][rPlayer]]);
        }
        else if(playertextid == RecInfo[playerid][menu_tech][3])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
        else if(playertextid == RecInfo[playerid][menu_tech][2])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
        else if(playertextid == RecInfo[playerid][menu_tech][1])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
        else if(playertextid == RecInfo[playerid][menu_check][4]) ShowSkills(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_check][3])
        {
            static str[10];
            valstr(str, RecInfo[playerid][rPlayer]);
            callcmd::checkcarskill(playerid, str);
        }
        else if(playertextid == RecInfo[playerid][menu_check][2]) TShowStats(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_check][1]) ShowLicenses(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_help][4]) SCM(playerid, -1, !"Не доступно в данный момент!");
        else if(playertextid == RecInfo[playerid][menu_help][3]) callcmd::flip(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_help][2])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
        else if(playertextid == RecInfo[playerid][menu_help][1]) callcmd::spplayer(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_punish2][4])
        {
            SPD(playerid, 125, 1, "",!"{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,Чит )\n\nМаксимум 30 символов!","Принять","Отмена");
        }
        else if(playertextid == RecInfo[playerid][menu_punish2][3]) SPD(playerid,126,1,"Введите причину","{73B461}Внимание!\n\n{FFFFFF}Введите причину бана IP","Ок","Отмена");
        else if(playertextid == RecInfo[playerid][menu_punish2][2]) SPD(playerid,124,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку причину.\n","Принять","Отмена");
        else if(playertextid == RecInfo[playerid][menu_punish2][1])
        {
            SPD(playerid,129,1,"",!"{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Посадить","Отмена");
        }
        else if(playertextid == RecInfo[playerid][menu_punish1][4])
        {
            SPD(playerid,1301,1,"",!"{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,MG )\n\nМаксимум 30 символов!","Замутить","Отмена");
        }
        else if(playertextid == RecInfo[playerid][menu_punish1][3])
        {
            SPD(playerid,129,1,"",!"{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Посадить","Отмена");
        }
        else if(playertextid == RecInfo[playerid][menu_punish1][2])
        {
            SPD(playerid,1302,1,"",!"{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Кикнуть","Отмена");
        }
        else if(playertextid == RecInfo[playerid][menu_punish1][1])
        {
            static str[10];
            valstr(str, RecInfo[playerid][rPlayer]);
            callcmd::freeze(playerid, str);
        }
        else if(playertextid == RecInfo[playerid][menu_action][4])
        {
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(RecInfo[playerid][rPlayer],X,Y,Z);
            J_SetPlayerPos(RecInfo[playerid][rPlayer],X,Y,Z+5);
        }
        else if(playertextid == RecInfo[playerid][menu_action][3]) J_SetPlayerHealth(RecInfo[playerid][rPlayer], 80);
        else if(playertextid == RecInfo[playerid][menu_action][2]) J_SetPlayerHealth(RecInfo[playerid][rPlayer], 5);
        else if(playertextid == RecInfo[playerid][menu_action][1])
        {
            static str[10];
            valstr(str, RecInfo[playerid][rPlayer]);
            callcmd::weap(playerid, str);
        }
        else if(playertextid == RecInfo[playerid][menu_stats][4]) ShowStats(playerid, RecInfo[playerid][rPlayer]);
        else if(playertextid == RecInfo[playerid][menu_stats][3])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
        else if(playertextid == RecInfo[playerid][menu_stats][2])
        {
            SCM(playerid, -1, !"Не доступно в данный момент!");
        }
	}
	if(playertextid == Item_Menu_Shop[playerid][2])
	{
		if(player_Global_Int[playerid][1]) return 1;
		ShowBuyPage(playerid, MenuPage[playerid]+1);
		PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	}
	else if(playertextid == Item_Menu_Shop[playerid][4])
	{
		if(player_Global_Int[playerid][0]) return 1;
		ShowBuyPage(playerid, MenuPage[playerid]-1);
		PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	}
	if(playertextid == boomtext_p[playerid][0]) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс/Колонка", !"{FFFFFF}Введите страницу на которую хотите перейти", !"Перейти", !"Отмена");
	//inv car
	//inv default
	if(InventStatus{playerid} || MenuStatus{playerid} || TradeOpen{playerid} || ShopOpen[playerid])
	{
		//if(GetPVarInt(playerid, !"antifloodinv")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Подождите немного..."); SetTimerEx("AntiFloodInv", 50, 0, "i", playerid);
		//SetPVarInt(playerid, !"antifloodinv", 1);
		switch(InvTypePlayer{playerid})
		{
			case 1:
			{
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, MusorPos[TrashID[playerid]][0], MusorPos[TrashID[playerid]][1], MusorPos[TrashID[playerid]][2]))
				{
					if(MenuStatus{playerid}) return CancelSelectTextDraw(playerid);
					else if(playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
			case 2:
			{
				if(HouseEntered[playerid] != HouseID[playerid])
				{
					if(MenuStatus{playerid}) return CancelSelectTextDraw(playerid);
					else if(playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
			case 3:
			{
				new Float:X,Float:Y,Float:Z, idofcar = idaofcar[playerid];
				GetVehicleShiftPos(idofcar, 1, X, Y, Z, 2.0);
				if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z) || !TrunkInfo[idofcar][tOpen])
				{
					if(MenuStatus{playerid}) return CancelSelectTextDraw(playerid);
					else if(playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
			case 5:
			{
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, WareHouse[idaofcar[playerid]][wMenu_X], WareHouse[idaofcar[playerid]][wMenu_Y], WareHouse[idaofcar[playerid]][wMenu_Z]))
				{
					if(MenuStatus{playerid}) return CancelSelectTextDraw(playerid);
					else if(playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
		}
		if(playertextid == Invent[playerid][44]) callcmd::rewards(playerid);
		else if(playertextid == Invent[playerid][39])
		{
	        if(InvWeapCive[playerid] != false)
		    {
		        for(new i; i < 7; i++) DestroyPlayerTD(playerid, others[playerid][i]);
	      		InvWeapCive[playerid] = false;
			}
			else
			{
				if(!InventStatus{playerid}) return 1;
				CreateGunTD(playerid);
				for(new i; i < 6; i++) UpdateGunSlotInv(playerid,i);
			    InvWeapCive[playerid] = true;
			}
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
   			PlayerTextDrawSetString(playerid, Invent[playerid][40], GetPVarInt(playerid, !"WeapCive") ? "~>~" : "~<~");
		    PlayerTextDrawShow(playerid, Invent[playerid][40]);
        }
       	else if(InvWeapCive[playerid] != false)
        {
            for(new i; i < 6; i++)
            {
                if(playertextid == others[playerid][i])
                {
                    if(InventClick{playerid} != 255)
                    {
                        switch(PI[playerid][pInvItem][InventClick{playerid}])
                        {
                            case 1177..1200: return UseGunSlot(playerid),Valik(playerid);
                            default: return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сюда можно устанавливать только улучшения к оружию!"), Valik(playerid);
                        }
                    }
                    else
                    {
                        if(!PI[playerid][pSlotGun][i]) continue;
                        InvAdd(playerid,PI[playerid][pSlotGun][i],1,0);
                        PI[playerid][pSlotGun][i] = 0;
                        UpdateGunSlotInv(playerid,i);
                    }
                }
            }
        }
		for(new i; i < 36; i++)
		{
			if(i < 30)
			{
				if(playertextid == Invent_Menu_Page[playerid][i])
				{
					new type = InvTypePlayer{playerid},
						GetID = GetInvMenuID(playerid, i, false);
					if(ShopOpen[playerid])
					{
						player_Global_Int[playerid][100] = GetID;
						new id = ShopUID{playerid};
						if(BizEntered[playerid] == -1 && ShopData[id][shopType] == SHOP_TYPE_BUSINESS) return false;
						switch(ShopData[id][shopItem][GetID])
						{
							case 327,328,521,711,329,710,321,320,522,523,317,314,709,356,712,714,724..950,1404..1436,1248..1250, 1022..1032:
							{
								str_1[0] = EOS, f(str_1, sizeof(str_1), "\
								{FFFFFF}%s\n\
								%s\n{67BE55}\n\
								В наличии: 1 шт.\n\
								Стоимость: %s за 1 шт.",
								ItemsInfo[ShopData[id][shopItem][GetID]][ItemName],\
								 GetItemInfo(playerid, ShopData[id][shopItem][GetID]),\
								   GetShopCost(GetID, id, true));

								SPD(playerid, 3082, DIALOG_STYLE_MSGBOX, !"Покупка предмета", str_1, "Купить", "Отмена");
							}
							default:
							{
								str_1[0] = EOS, f(str_1, sizeof(str_1), "\
								{FFFFFF}%s\n\
								%s\n{67BE55}\n\
								В наличии: 1 шт.\n\
								Стоимость: %s за 1 шт.\n\n\
								{FFFFFF}Введите какое количество вы хотите {555ABE}КУПИТЬ:",
								ItemsInfo[ShopData[id][shopItem][GetID]][ItemName],\
								 GetItemInfo(playerid, ShopData[id][shopItem][GetID]),\
								  GetShopCost(GetID, id, true));

								SPD(playerid, 3082, DIALOG_STYLE_INPUT, !"Покупка предмета", str_1, "Купить", "Отмена");
							}
						}
						break;
					}
					switch(type)
					{
						case 1:
						{
							new id = TrashID[playerid];
							if(!TrashInfo[id][TrashItem][GetID]) return 1;
							if(!TrashInfo[id][TrashItemAmount][GetID]) TrashInfo[id][TrashItemAmount][GetID] = 1;
							if(TrashInfo[id][TrashItemAmount][GetID] == 1)
							{
								if(!InvAdd(playerid, TrashInfo[id][TrashItem][GetID], TrashInfo[id][TrashItemAmount][GetID], 0, InvTrashParams[0][id][GetID], InvTrashUID[id][GetID], InvTrashColor[id][GetID], InvTrashParams[1][id][GetID])) return 1;
								TrashInfo[id][TrashItem][GetID] = 0;
								TrashInfo[id][TrashItemAmount][GetID] = 0;
								InvTrashParams[0][id][GetID] = 0;
								InvTrashParams[1][id][GetID] = 0;
								InvTrashColor[id][GetID] = 0;
								InvTrashUID[id][GetID] = 0;
								MenuSlotUpdate(playerid, GetID, type);
							}
							else if(TrashInfo[id][TrashItemAmount][GetID] > 1)
							{
								
								InventClick{playerid} = GetID;
								SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
							}
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						case 2:
						{
							new id = HouseID[playerid];
							if(!HouseInfo[id][hItem][GetID]) return 1;
							if(!HouseInfo[id][hItemAmount][GetID]) HouseInfo[id][hItemAmount][GetID] = 1;
							if(HouseInfo[id][hItemAmount][GetID] == 1)
							{
								if(!InvAdd(playerid, HouseInfo[id][hItem][GetID], HouseInfo[id][hItemAmount][GetID], 0, InvHouseParams[0][id][GetID], InvHouseUID[id][GetID], InvHouseColor[id][GetID], InvHouseParams[1][id][GetID])) return 1;
								HouseInfo[id][hItem][GetID] = 0;
								HouseInfo[id][hItemAmount][GetID] = 0;
								InvHouseParams[0][id][GetID] = 0;
								InvHouseParams[1][id][GetID] = 0;
								InvHouseColor[id][GetID] = 0;
								InvHouseUID[id][GetID] = 0;
								SaveShkaf(id);
								MenuSlotUpdate(playerid, GetID, type);
								str_1[0] = EOS;
							}
							else if(HouseInfo[id][hItemAmount][GetID] > 1)
							{
								
								InventClick{playerid} = GetID;
								SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
							}
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						case 3:
						{
							new id = idaofcar[playerid];
							if(!TrunkInfo[id][TrunkItem][GetID]) return 1;
							if(!TrunkInfo[id][TrunkItemAmount][GetID]) TrunkInfo[id][TrunkItemAmount][GetID] = 1;
							if(TrunkInfo[id][TrunkItemAmount][GetID] == 1)
							{
								if(!InvAdd(playerid, TrunkInfo[id][TrunkItem][GetID], TrunkInfo[id][TrunkItemAmount][GetID], 0, TrunkInfo[id][TrunkItemSharpening][GetID], TrunkInfo[id][TrunkItemUID][GetID], TrunkInfo[id][TrunkItemColor][GetID], TrunkInfo[id][TrunkItemSharpening][GetID])) return 1;
								TrunkInfo[id][TrunkItem][GetID] = 0;
								TrunkInfo[id][TrunkItemAmount][GetID] = 0;
								TrunkInfo[id][TrunkItemSharpening][GetID] = 0;
								TrunkInfo[id][TrunkItemParams][GetID] = 0;
								TrunkInfo[id][TrunkItemUID][GetID] = 0;
								TrunkInfo[id][TrunkItemColor][GetID] = 0;
								SaveTrunk(GetVehicleID(id));
								MenuSlotUpdate(playerid, GetID, type);
							}
							else if(TrunkInfo[id][TrunkItemAmount][GetID] > 1)
							{
								
								InventClick{playerid} = GetID;
								SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
							}
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						case 4://трейд
						{
							new id = PI[playerid][pInvItemLockTrade][GetID];
							if(!PI[playerid][pInvItemLock][id]) return 1;
							if(TradeLock{playerid} || TradeLock{TradeID[playerid]}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сделка подтверждена с одной из сторон, изменения заблокированы!");
							PI[playerid][pInvItemLock][id] = false;
							InvSlotUpdate(playerid, id);
							TradeRemove(playerid, GetID);
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						case 5:
						{
							new id = idaofcar[playerid];
							if(!WareHouse[id][wItem][GetID]) return 1;
							if(!WareHouse[id][wItemAmount][GetID]) WareHouse[id][wItemAmount][GetID] = 1;
							if(WareHouse[id][wItemAmount][GetID] == 1)
							{
								if(!InvAdd(playerid, WareHouse[id][wItem][GetID], WareHouse[id][wItemAmount][GetID], 0, InvWareHouseParams[0][id][GetID], InvWareHouseUID[id][GetID], InvWareHouseColor[id][GetID], InvWareHouseParams[1][id][GetID])) return 1;
								WareHouse[id][wItem][GetID] = 0;
								WareHouse[id][wItemAmount][GetID] = 0;
								InvWareHouseParams[0][id][GetID] = 0;
								InvWareHouseParams[1][id][GetID] = 0;
								InvWareHouseUID[id][GetID] = 0;
								InvWareHouseColor[id][GetID] = 0;
								MenuSlotUpdate(playerid, GetID, type);
							}
							else if(WareHouse[id][wItemAmount][GetID] > 1)
							{
								
								InventClick{playerid} = GetID;
								SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
							}
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
					}
					break;
				}
			}
			if(playertextid == InventSlot[playerid][i])
			{
				new GetID = GetInvID(playerid, i, false);
				if(InventClick{playerid} == 255)
                {
					if(PI[playerid][pInvItem][GetID])
					{
						if(InventWallet[playerid])
						{
							if(ItemsInfo[PI[playerid][pInvItem][GetID]][ItemView] == 27)
							{
								new slot = SearchFreeCellForWallet(playerid);
								if(slot == -1) return 1;
								PI[playerid][pInvWallet][slot] = PI[playerid][pInvItem][GetID];
								RefreshInv(playerid, GetID);
								PI[playerid][pInvItemLock][GetID] = true, InvSlotUpdate(playerid,GetID);
								return UpdateCellForWallet(playerid, slot);
							}
						}
						if(UseStripe[playerid])
						{
							switch(ItemsInfo[PI[playerid][pInvItem][GetID]][ItemView])
							{
								case 1..8:
								{ 
									if(PI[playerid][pInvItemAmount][GetID] > 100) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка]{FFFFFF} Нашивка уже установлена на данный аксессуар.");
									new lvl = 1785-PI[playerid][pInvItem][player_Global_Int[playerid][88]];
									//if(CheckStripe[lvl][s_lvl] != lvl) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка]{FFFFFF} Данная нашивка не подходить до данного акссесуара");
									SPDf(playerid, 1569, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"Пришить", !"Отмена", "{FFFFFF}Вы действительно хотите пришить нашивку %i-го уровня для %s на аксессуар {FFF200}%s",\
									InvPlayerParams[0][playerid][player_Global_Int[playerid][88]],CheckStripe[lvl][s_name],ItemsInfo[PI[playerid][pInvItem][GetID]][ItemName]);
									player_Global_Int[playerid][89] = GetID;
									return 1;
								}
								case 1781..1785: return UseStripe[playerid] = false, SCM(playerid,COLOR_LIGHTRED,!"[Информация]{FFFFFF} Вы успешно отменили надевание нашивки.");
								default: return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка]{FFFFFF} Данная нашивка не подходить для данного акссесуара");
							}		
						}
						else if(Upgrade_Open[playerid] && !Upgrade_Start[playerid])
						{
							switch(ItemsInfo[PI[playerid][pInvItem][GetID]][ItemView])
							{
								case 1..8,1167,1781..1785: SetSharpeningItem(playerid, GetID);
							}
						}
						else if(ShopOpen[playerid]) InfoItem(playerid, GetID);
						else if(InventStatus{playerid} && !ShopOpen[playerid])
						{
							CreateInvMenu(playerid, GetID, ItemsInfo[PI[playerid][pInvItem][GetID]][ItemType]);
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
							InventClick{playerid} = GetID;
							CheckInvItem(playerid, 1);
						}
						else if(TradeOpen{playerid} && !ShopOpen[playerid] && InvTypePlayer{playerid} == 4)
						{
							if(PI[playerid][pInvItemLock][GetID] != false) return 1;
							if(TradeLock{playerid} || TradeLock{TradeID[playerid]}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сделка подтверждена с одной из сторон, изменения заблокированы!");
							new Item = PI[playerid][pInvItem][GetID];
							new Amount = PI[playerid][pInvItemAmount][GetID];
							if(CheckMenuItem(playerid, Item)) return 1;
							if(Amount == 1)
							{
								if(!TradeAdd(playerid, Item, Amount, InvPlayerParams[0][playerid][GetID], PI[playerid][pInvItemUID][GetID],InvPlayerColor[playerid][GetID], InvPlayerParams[1][playerid][GetID])) return 1;
								PI[playerid][pInvItemLockTrade][GetPVarInt(playerid, !"InvItemLock")] = GetID;
								PI[playerid][pInvItemLock][GetID] = true;
								InvSlotUpdate(playerid, GetID);
							}
							else if(Amount > 1)
							{
								InventClick{playerid} = GetID;
								SPD(playerid, 8249, DIALOG_STYLE_INPUT, !"Торговля", !"{FFFFFF}Введите количество, которое хотите передать", !"Выбрать", !"Отмена");
							}
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						else if(MenuStatus{playerid} && !ShopOpen[playerid])
						{
							new Item = PI[playerid][pInvItem][GetID];
							if(CheckMenuItem(playerid, Item)) return 1;
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
							if(!PI[playerid][pInvItemAmount][GetID]) PI[playerid][pInvItemAmount][GetID] = 1;
							new Amount = PI[playerid][pInvItemAmount][GetID];
							switch(InvTypePlayer{playerid})
							{
								case 1:
								{
									if(Amount == 1)
									{
										new id = TrashID[playerid];
										if(!TrashAdd(playerid, id, Item, Amount, InvPlayerParams[0][playerid][GetID], PI[playerid][pInvItemUID][GetID], InvPlayerColor[playerid][GetID], InvPlayerParams[1][playerid][GetID])) return 1;
										RefreshInv(playerid,GetID);
										str_1[0] = EOS;
										if(Item != 657) f(str_1, sizeof(str_1), "положил в мусорку предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
										else f(str_1, sizeof(str_1), "положил в мусорку предмет Наклейка Суприм [%i]", Amount);
										//aml(16, playerid, "", str_1);
									}
									else if(Amount > 1)
									{
										
										InventClick{playerid} = GetID;
										SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
									}
								}
								case 2:
								{
									if(Amount == 1)
									{
										new id = HouseID[playerid];
										if(!ShkafAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][GetID], PI[playerid][pInvItemUID][GetID], InvPlayerColor[playerid][GetID], InvPlayerParams[1][playerid][GetID])) return 1;
										RefreshInv(playerid,GetID);
										str_1[0] = EOS;
										if(Item != 657) f(str_1, sizeof(str_1), "положил в шкаф предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
										else f(str_1, sizeof(str_1), "положил в шкаф предмет Наклейка Суприм [%i]", Amount);
										//aml(16, playerid, "", str_1);
									}
									else if(Amount > 1)
									{
										
										InventClick{playerid} = GetID;
										SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
									}
								}
								case 3:
								{
									if(Amount == 1)
									{
										new id = idaofcar[playerid];
										if(!TrunkAdd(playerid, id, Item, Amount, InvPlayerParams[0][playerid][GetID], PI[playerid][pInvItemUID][GetID], InvPlayerColor[playerid][GetID], InvPlayerParams[1][playerid][GetID])) return 1;
										RefreshInv(playerid, GetID);
										//InvSlotUpdate(playerid, GetID);
										
										str_1[0] = EOS;
										if(Item != 657) f(str_1, sizeof(str_1), "положил в машину предмет %s[%i]", ItemsInfo[Item][ItemName], Amount);
										else f(str_1, sizeof(str_1), "положил в машину предмет Наклейка Суприм [%i]", Amount);
										//aml(16, playerid, "", str_1);
									}
									else if(Amount > 1)
									{
										InventClick{playerid} = GetID;
										SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
									}
								}
								case 5:
								{
									if(Amount == 1)
									{
										new id = idaofcar[playerid];
										if(!WareHouseAdd(playerid, id, Item, Amount,InvPlayerParams[0][playerid][GetID], PI[playerid][pInvItemUID][GetID], InvPlayerColor[playerid][GetID], InvPlayerParams[1][playerid][GetID])) return 1;
										RefreshInv(playerid,GetID);
										//InvSlotUpdate(playerid, GetID);
										
									}
									else if(Amount > 1)
									{
										
										InventClick{playerid} = GetID;
										SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
									}
								}
							}
						}
					}
				}
				else
				{
					if(InventClick{playerid} >= MAX_SLOT_INV)
					{
						if(!PI[playerid][pInvItem][GetID])
						{
							new id = InventClick{playerid}-MAX_SLOT_INV;
							//SCMf(playerid,-1,"InventClick{playerid} %i | id %i", InventClick{playerid}, id);
							RemoveAcs(playerid, id);
							RemovePlayerAttachedObject(playerid, id);
							PI[playerid][pInvItem][GetID] = AksSlot[playerid][id];
							InvPlayerParams[1][playerid][GetID] = InvAksParams[1][playerid][id];
							PI[playerid][pInvItemUID][GetID] = AksSlotUID[playerid][id];
							InvPlayerParams[0][playerid][GetID] = InvAksParams[0][playerid][id];
							InvPlayerColor[playerid][GetID] = InvAksColor[playerid][id];
							new id2 = SearchFreeCellForRend(playerid);
							if(id2 == -1) return 1;
							InvPlayerRentUID[playerid][id2] = InvAksRentUID[playerid][id], //кому передали
							InvPlayerRentInvSlot[playerid][id2] = GetID, //слот кому передали
							InvPlayerRentTimeOut[playerid][id2] = InvAksRentTimeOut[playerid][id];

							InvSlotUpdate(playerid, GetID);
							InvAksRentUID[playerid][id] = -1, //кому передали
							InvAksRentTimeOut[playerid][id] = -1;
							InvAksParams[0][playerid][id] = 0;
							AksSlot[playerid][id] = 0;
							InvAksParams[1][playerid][id] = 0;
							AksSlotUID[playerid][id] = 0;
							InvAksColor[playerid][id] = 0;
							UpdateSlotAcs(playerid, id);
							Valik(playerid);
							PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						}
						else Valik(playerid);
						return 1;
					}
					CheckInvItem(playerid, 0);
					new
						slot = InventClick{playerid},
						item_oldID = PI[playerid][pInvItem][GetID],
						item_oldAmount = PI[playerid][pInvItemAmount][GetID],
						item_oldParams = InvPlayerParams[0][playerid][GetID],
						item_oldUID = PI[playerid][pInvItemUID][GetID],
						item_oldColor = InvPlayerColor[playerid][GetID],
						item_oldParams_2 = InvPlayerParams[1][playerid][GetID],

						item_ID = PI[playerid][pInvItem][slot],
						item_Amount = PI[playerid][pInvItemAmount][slot],
						item_Params = InvPlayerParams[0][playerid][slot],
						item_UID = PI[playerid][pInvItemUID][slot],
						item_Color = InvPlayerColor[playerid][slot],
						item_Params_2 = InvPlayerParams[1][playerid][slot];

					for(new j; j < 10; j++)
					{
						if(InvPlayerRentInvSlot[playerid][j] == GetID)
						{
							InvPlayerRentInvSlot[playerid][j] = slot; //слот кому передали
							break;
						}
					}
					if(item_oldID != item_ID)
					{
						PI[playerid][pInvItem][slot] = item_oldID;
						PI[playerid][pInvItemAmount][slot] = item_oldAmount;
						InvPlayerParams[0][playerid][slot] = item_oldParams;
						PI[playerid][pInvItemUID][slot] = item_oldUID;
						InvPlayerParams[1][playerid][slot] = item_oldParams_2;
						InvPlayerColor[playerid][slot] = item_oldColor;
						InvSlotUpdate(playerid, slot);

						PI[playerid][pInvItem][GetID] = item_ID;
						PI[playerid][pInvItemAmount][GetID] = item_Amount;
						InvPlayerParams[0][playerid][GetID] = item_Params;
						PI[playerid][pInvItemUID][GetID] = item_UID;
						InvPlayerParams[1][playerid][GetID] = item_Params_2;
						InvPlayerColor[playerid][GetID] = item_Color;
						InvSlotUpdate(playerid, GetID);
						HideInventMenu(playerid);
						InventClick{playerid} = 255;
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
					else if(slot == GetID)
					{
						HideInventMenu(playerid);
						InventClick{playerid} = 255;
					}
					else if(item_oldID == item_ID)
					{
						new Max_Amount = ItemsInfo[item_oldID][ItemLCount];
						new amount = PI[playerid][pInvItemAmount][GetID] + PI[playerid][pInvItemAmount][slot];
						if(amount <= Max_Amount) PI[playerid][pInvItemAmount][GetID] += PI[playerid][pInvItemAmount][slot];
						else
						{
							if(PI[playerid][pInvItemAmount][GetID] != Max_Amount && PI[playerid][pInvItemAmount][slot] != Max_Amount)
							{
								PI[playerid][pInvItemAmount][slot] = amount - Max_Amount;
								PI[playerid][pInvItemAmount][GetID] = Max_Amount;
							}
							else
							{
								//triazov
								PI[playerid][pInvItem][GetID] = PI[playerid][pInvItem][slot];
								PI[playerid][pInvItemAmount][GetID] = PI[playerid][pInvItemAmount][slot];

								PI[playerid][pInvItem][slot] = PI[playerid][pInvItem][GetID];
								PI[playerid][pInvItemAmount][slot] = PI[playerid][pInvItemAmount][GetID];
							}
						}
						if(amount <= Max_Amount)
						{
							PI[playerid][pInvItem][slot] = 0;
							PI[playerid][pInvItemAmount][slot] = 0;
							InvPlayerParams[0][playerid][slot] = 0;
							PI[playerid][pInvItemUID][slot] = 0;
							InvPlayerParams[1][playerid][slot] = 0;
							InvPlayerColor[playerid][slot] = 0;
						}
						InvSlotUpdate(playerid, slot);
						InvSlotUpdate(playerid, GetID);
						HideInventMenu(playerid);
						InventClick{playerid} = 255;
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
				}
				break;
			}
		}
		if(playertextid == Invent_Trade[playerid][19])//инфо
		{
            str_1[0] = EOS, f(str_1, sizeof(str_1), "{BEA555}Обмен с игроком %s\n\n{FFFFFF}Вы предлагаете:", PN(TradeID[playerid]));
			for(new i; i < 10; i++)
			{
				if(!PI[playerid][pTradeItem][i]) continue;
				str_2[0] = EOS;
				if(PI[playerid][pTradeItemAmount][i] > 1) f(str_2, sizeof(str_2), "{8F8FDC}[%i шт]", PI[playerid][pTradeItemAmount][i]);
				str_d[0] = EOS;
				if(InvTradeParams[0][playerid][i] != 0) f(str_d, sizeof(str_d), " (+%i)",InvTradeParams[0][playerid][i]);
				str_mes[0] = EOS;
				str_q[0] = EOS, GetColorAcs(InvTradeColor[playerid][i], false, str_q);
				if(InvTradeColor[playerid][i] != 0) f(str_mes, sizeof(str_mes), " %s", str_q);
				f(str_1, sizeof(str_1), "%s\n{FFFFFF}[%i] %s%s\t%s%s",str_1, i, ItemsInfo[PI[playerid][pTradeItem][i]][ItemName], str_mes, str_2, str_d);
			}
            if(TradeMoney[playerid]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i$", TradeMoney[playerid]), strcat(str_1,str_2);
            else if(TradeEURO[playerid]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i EURO", TradeEURO[playerid]), strcat(str_1,str_2);
            else if(TradeBTC[playerid]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i BTC", TradeBTC[playerid]), strcat(str_1,str_2);
            //
			strcat(str_1, !"\n\n\n{FFFFFF}Вам предлагают:\n");
            new id = TradeID[playerid];
			for(new i; i < 10; i++)
			{
				if(!PI[id][pTradeItem][i]) continue;
				str_2[0] = EOS;
				if(PI[id][pTradeItemAmount][i] > 1) f(str_2, sizeof(str_2), "{8F8FDC}[%i шт]", PI[id][pTradeItemAmount][i]);
				str_d[0] = EOS;
				if(InvTradeParams[0][id][i] != 0) f(str_d, sizeof(str_d), " (+%i)",InvTradeParams[0][id][i]);
				str_mes[0] = EOS;
				str_q[0] = EOS, GetColorAcs(InvTradeColor[playerid][i], false, str_q);
				if(InvTradeColor[id][i] != 0) f(str_mes, sizeof(str_mes), " %s", str_q);
				f(str_1, sizeof(str_1), "%s\n{FFFFFF}[%i] %s%s\t%s%s",str_1, i, ItemsInfo[PI[id][pTradeItem][i]][ItemName], str_mes, str_2, str_d);
			}
            if(TradeMoney[id]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i$", TradeMoney[id]), strcat(str_1,str_2);
            else if(TradeEURO[id]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i EURO", TradeEURO[id]), strcat(str_1,str_2);
            else if(TradeBTC[id]) str_2[0] = EOS, f(str_2, sizeof(str_2), "\n - {7BAF6D}%i BTC", TradeBTC[id]), strcat(str_1,str_2);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Обмен", str_1, !"Выйти", !"");
		}
		if(playertextid == Invent_Trade[playerid][17]) CancelTrade(playerid);
        if(playertextid == Invent_Trade[playerid][5]) //передача
        {
            if(TradeMoney[playerid]) TradeMoney[playerid] = 0, UpdateTradeMoney(playerid, 0);
            else if(TradeEURO[playerid]) TradeEURO[playerid] = 0, UpdateTradeEURO(playerid, 0);
            else if(TradeBTC[playerid]) TradeBTC[playerid] = 0, UpdateTradeBTC(playerid, 0);
            ShowTradeExchange(playerid);
        }
        if(playertextid == Invent_Trade[playerid][15])
        {
            new id = TradeID[playerid];
            if(TradeLock{playerid} == 0)
            {
                TradeLock{playerid} = 1;
                PlayerTextDrawColor(playerid, Invent_Trade[playerid][15], 0x68BE55FF);
                PlayerTextDrawShow(playerid, Invent_Trade[playerid][15]);
            }
            else if(TradeLock{playerid} == 1)
            {
                TradeLock{playerid} = 0;
                PlayerTextDrawColor(playerid, Invent_Trade[playerid][15], InvColor[PI[playerid][pInvColor]][1]);
                PlayerTextDrawShow(playerid, Invent_Trade[playerid][15]);
            }
            else if(TradeLock{playerid} == 2) TradeLock{playerid} = 3, SCM(playerid, COLOR_GREY, !"Вы подтвердили сделку!"), SCM(id, COLOR_GREY, !"Игрок подтвердил сделку!");
            for(new i; i < 10; i++)
            {
                PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], !TradeLock{playerid} ? 1 : 0);
                PlayerTextDrawSetSelectable(id, Invent_Menu_Page[id][i+10], !TradeLock{playerid} ? 1 : 0);
                PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], TradeLock{playerid} ? 0x999999FF : 0xFFFFFFFF);
                PlayerTextDrawColor(id, Invent_Menu_Page[id][i+10], TradeLock{playerid} ? 0x999999FF : 0xFFFFFFFF);
                PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][i]);
                PlayerTextDrawShow(id, Invent_Menu_Page[id][i+10]);
            }
            if(TradeLock{playerid} == 1 && TradeLock{id} == 1)
            {
                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff0000}Предупреждение!", !"{ffffff}Перед тем как подтвердить сделку, советуем всё тщательно перепроверить.", !"Закрыть", !"");
                if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Trade[playerid][16], "TRADE");
                else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][16], FixText("ТОРГ"));
                TradeLock{playerid} = 2;
                SPD(id, 0, DIALOG_STYLE_MSGBOX, !"{ff0000}Предупреждение!", !"{ffffff}Перед тем как подтвердить сделку, советуем всё тщательно перепроверить.", !"Закрыть", !"");
                if(!PI[id][pInvLang]) PlayerTextDrawSetString(id, Invent_Trade[id][16], "TRADE");
                else PlayerTextDrawSetString(id, Invent_Trade[id][16], FixText("ТОРГ"));
                TradeLock{id} = 2;
            }
            if(TradeLock{playerid} == 4 && TradeLock{id} != 4) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже подтвердили сделку! Для отмены нажмите - Отмена");
            if(TradeLock{playerid} == 4 && TradeLock{id} == 4)
            {
                SCM(playerid, COLOR_GREEN, !"[Информация] {ffffff}Сделка прошла успешно.");
                SCM(id, COLOR_GREEN, !"[Информация] {ffffff}Сделка прошла успешно.");
                for(new i; i < 10; i++)
                {
                    if(PI[playerid][pTradeItem][i])
                    {
                        new slot = PI[playerid][pInvItemLockTrade][i];
                        if(PI[playerid][pTradeItemAmount][i] > 1) PI[playerid][pInvItemAmount][slot] -= PI[playerid][pTradeItemAmount][i];
                        else RefreshInv(playerid, slot);
                        InvAdd(id, PI[playerid][pTradeItem][i], PI[playerid][pTradeItemAmount][i], 0, InvTradeParams[0][playerid][i],InvTradeUID[playerid][i], InvTradeColor[playerid][i], InvTradeParams[1][playerid][i]);
                    }
                    if(PI[id][pTradeItem][i])
                    {
                        new slot = PI[id][pInvItemLockTrade][i];
                        if(PI[id][pTradeItemAmount][i] > 1) PI[id][pInvItemAmount][slot] -= PI[id][pTradeItemAmount][i];
                        else RefreshInv(id, slot);
                        InvAdd(playerid, PI[id][pTradeItem][i], PI[id][pTradeItemAmount][i], 0, InvTradeParams[0][id][i], InvTradeUID[id][i], InvTradeColor[id][i], InvTradeParams[1][id][i]);
                    }
                   	str_1[0] = EOS, f(str_1, sizeof(str_1), "передал через трейд предмет %s[%i шт] игроку", ItemsInfo[PI[playerid][pTradeItem][i]][ItemName], PI[id][pTradeItemAmount][i]);
                    //aml(15, playerid, PN(id), str_1, 4);
                }
				str_1[0] = EOS;
                f(str_1, sizeof(str_1), "передал через трейд %i money игроку", TradeMoney[playerid]);
                //aml(15, playerid, PN(id), str_1, 4);
                new Float:total, Float:total2;
                if(PI[id][pWarns] > 0)
                {
                    if(TradeEURO[id] >= 1) total = TradeEURO[id] / 5 * PI[id][pWarns];
                    if(TradeMoney[id] >= 1) total = TradeMoney[id] / 10 * PI[id][pWarns];
                }
                else
                {
                    if(TradeEURO[id] >= 1) total = TradeEURO[id] / 3;
                    if(TradeMoney[id] >= 1) total = TradeMoney[id] / 6;
                }
                if(PI[playerid][pWarns] > 0)
                {
                    if(TradeEURO[playerid] >= 1) total2 = TradeEURO[playerid] / 5 * PI[playerid][pWarns];
                    if(TradeMoney[playerid] >= 1) total2 = TradeMoney[playerid] / 10 * PI[playerid][pWarns];
                }
                else
                {
                    if(TradeEURO[playerid] >= 1) total2 = TradeEURO[playerid] / 3;
                    if(TradeMoney[playerid] >= 1) total2 = TradeMoney[playerid] / 6;
                }
                if(TradeMoney[id] >= 1) GiveMoney(playerid, TradeMoney[id] - floatround(floatround(total, floatround_floor))), GiveMoney(id, -TradeMoney[id]);
                if(TradeMoney[playerid] >= 1) GiveMoney(id, TradeMoney[playerid] - floatround(floatround(total2, floatround_floor))), GiveMoney(playerid, -TradeMoney[playerid]);
                //
                if(TradeBTC[id] >= 1) InvAdd(playerid, 1203, TradeBTC[id], 0); InvAdd(id, 1203, -TradeBTC[id], 0);
                if(TradeBTC[playerid] >= 1) InvAdd(id, 1203, TradeBTC[playerid], 0), InvAdd(playerid, 1203, -TradeBTC[playerid], 0);
                //
                if(TradeEURO[id] >= 1) InvAdd(playerid, 809, TradeEURO[id] - floatround(floatround(total, floatround_floor)), 0), InvAdd(id, 809, -TradeEURO[id], 0);
                if(TradeEURO[playerid] >= 1) InvAdd(id, 809, TradeEURO[playerid] - floatround(floatround(total2, floatround_floor)), 0), InvAdd(playerid, 809, -TradeEURO[playerid], 0);
                //
                HideTrade(playerid);
                HideTrade(id);
            }
            if(TradeLock{playerid} == 3 && TradeLock{id} == 3) TradeLock{playerid} = 4, TradeLock{id} = 4;
        }
		else if(playertextid == Invent_Menu[playerid][1]) SPD(playerid, 8255, DIALOG_STYLE_LIST, !"Выберите действие", "{42B02C}Положить\n{FF6347}Снять", !"Принять", !"Отмена");//Деньги в доме
		for(new i=2; i < 7; i++)
		{
			if(playertextid == Invent_Menu[playerid][i])//Смена страницы меню на 1
			{
				ShowMenuPage(playerid, i-1, InvTypePlayer{playerid});
				PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
				break;
			}
		}
		static const inv_select[] = {13,14,15,51};
		for(new i; i < sizeof(inv_select); i++)
		{
			if(playertextid == Invent[playerid][inv_select[i]])
			{
				ShowInvPage(playerid, i+1);
				PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
				break;
			}
		}
		if(playertextid == Invent[playerid][18])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::help(playerid);
		}
		else if(playertextid == Invent[playerid][20])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::report(playerid);
		}
		else if(playertextid == Invent[playerid][22])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::gps(playerid);
		}
		else if(playertextid == Invent[playerid][25])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::menu(playerid);
		}
		else if(playertextid == Invent[playerid][27])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			ShowPlayerSettings(playerid);
		}
		else if(playertextid == Invent[playerid][29])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::cars(playerid);
		}
		else if(playertextid == Invent[playerid][31])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::bizinfo(playerid);
		}
		else if(playertextid == Invent[playerid][3]) PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0),HideInventory(playerid);
		else if(playertextid == Invent[playerid][33])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			HideInventory(playerid);
			ShowDonate(playerid);
		}
		else if(playertextid == Invent[playerid][35])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			//HideTextDraws(playerid);
			ShowFamily(playerid);
		}
		else if(playertextid == Invent[playerid][41])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
//			callcmd::quest(playerid);
		}
		else if(playertextid == Invent[playerid][48])
		{
			//triazov
			UseSkin(playerid);
			if(InventClick{playerid} != 255)
			{
				HideInventMenu(playerid);
				InventClick{playerid} = 255;
			}
		}
		if(playertextid == Invent[playerid][50])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			SPD(playerid, 25475, DIALOG_STYLE_LIST, !"",! "{73B461}1. {FFFFFF}Посмотреть паспорт\n{73B461}2. {FFFFFF}Посмотреть мед.карту", !"Далее", !"Закрыть");
		}
		else if(playertextid == Invent[playerid][9] && !MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid])
		{
			if(PI[playerid][pInvBlack]) {
				PI[playerid][pInvBlack] = false;
				UpdatePlayerDataInt(playerid, "InvBlack", PI[playerid][pInvBlack]);
				PI[playerid][pInvColor] = 0;
				ChangeInvColor(playerid, PI[playerid][pInvColor]);
				SaveChangeInv(playerid); }
			UpdateInventory(playerid, false);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Изменение цвета", !"{FFFFFF}Вы включили редактор основного цвета инвентаря!\nДля изменения цвета используйте {FFBD3F}СТРЕЛКИ{FFFFFF} на вашей клавиатуре\nЕсли вы хотите сохранить изменения нажмите '{FFBD3F}F{FFFFFF}' или '{FFBD3F}ENTER{FFFFFF}'", !"Выход", !"");
			TogglePlayerControllable(playerid, false);
			InvTimer{playerid} = 0;
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		else if(playertextid == Invent[playerid][11] && !MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid]) InventorySorting(playerid);
		else if(playertextid == Invent[playerid][7] && !MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid])
		{
			UpdateInventory(playerid, false);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Изменение позиций", "{FFFFFF}Вы включили редактор позиций инвентаря!\nДля изменения позиций используйте {FFBD3F}СТРЕЛКИ{FFFFFF} на вашей клавиатуре\nЗажимайте '{FFBD3F}ALT{FFFFFF}' чтобы двигать медленно или '{FFBD3F}SHIFT{FFFFFF}' чтобы быстрее\nЕсли вы хотите сохранить изменения нажмите '{FFBD3F}F{FFFFFF}' или '{FFBD3F}ENTER{FFFFFF}'", !"Выход", !"");
			TogglePlayerControllable(playerid, false);
			InvTimer{playerid} = 1;
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		else if(playertextid == Invent[playerid][5] && !MenuStatus{playerid} && !TradeOpen{playerid} && !ShopOpen[playerid])
		{
			SCM(playerid, -1,!"2");
		}
		for(new i; i < 21; i++)
		{
			if(i < 6 && playertextid == InventMenu[playerid][i]) return Bogdan(playerid, InventMenuButton[playerid][i]);
			else if(!InvCarOpen[playerid] && i < 8)
			{
				if(playertextid == InventAks[playerid][i]) return PutAcs(playerid, i);
				if(i < 6)
				{
					if(playertextid == others[playerid][i])
					{
						if(InventClick{playerid} != 255)
						{
							Valik(playerid);
							SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сюда можно устанавливать только улучшения к оружию!");
						}
						break;
					}
				}
			}
			else if(playertextid == InvOwnableCar[playerid][i])
			{
				new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
				if(CarInfo[number][cSlotItem][i] != 0) TakeAcs(playerid, i);
				break;
			}
		}
		if(InventStatus{playerid} && InvCarOpen[playerid])
		{
			if(playertextid == InvOwnableCar[playerid][38]) TakeAcs(playerid, 20);
			else if(playertextid == InvOwnableCar[playerid][42]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Состояние двигателя автомобиля: 100\nЧем {FF332C}хуже{FFFFFF} состояние, тем больше вероятность что\n{FF332C}авто сломается по пути{FFFFFF}. Для ремонта, необходимо\nприехать на {FDCF28}станцию технического обслуживания{FFFFFF}\n(Используйте /gps важные места - станция тех. обслуживания)", !"Выход", !"");
			else if(playertextid == InvOwnableCar[playerid][45]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Состояние масла автомобиля: {56BF4D}хорошее{FFFFFF}\nЧем {FF332C}хуже{FFFFFF} состояние, тем {FF332C}медленнее{FFFFFF} ваш авто\nездит. Для восстановления масла, необходимо\nприехать на {FDCF28}станцию технического обслуживания{FFFFFF}\n(Используйте /gps важные места - станция тех. обслуживания)", !"Выход", !"");
			else if(playertextid == InvOwnableCar[playerid][48]) callcmd::gps(playerid);
			else if(playertextid == InvOwnableCar[playerid][50]) callcmd::report(playerid);
			else if(playertextid == InvOwnableCar[playerid][52]) callcmd::help(playerid);
		}
		if(playertextid == InventButton[playerid][0] && !UseStripe[playerid])
		{
			//SCMf(playerid, -1, "%i %i %i", IsPlayerInvSecurity[playerid], InvTypePlayer{playerid}, IsPlayerOpenInvSecurity[playerid]);
			if(InvCarOpen[playerid] != false && IsPlayerInvSecurity[playerid] != true && InvTypePlayer{playerid} == 0 && IsPlayerOpenInvSecurity[playerid] != false) IsPlayerInvSecurity[playerid] = true;
			if(IsPlayerInvSecurity[playerid] != false && InvTypePlayer{playerid} == 0 && IsPlayerOpenInvSecurity[playerid] != false)
			{
				//закрытие
				new page = InventPage[playerid];
				if(!page) page = 1;
				for(new i; i < 40; i++) DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][i]);
				HideInventory(playerid);
				ShowInventory(playerid, true, page);
				return 1;
			}
			else if(IsPlayerInvSecurity[playerid] != true && InvTypePlayer{playerid} == 0 && IsPlayerOpenInvSecurity[playerid] != true)
			{
				//открытие
				new page = InventPage[playerid];
				if(!page) page = 1;
				HideInventory(playerid);
				IsPlayerOpenInvSecurity[playerid] = true;
				ShowInventory(playerid, true, page, 24);
				return 1;
			}
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			if(MenuStatus{playerid})
			{
				new page = InventPage[playerid];
				HideInvMenu(playerid);
				ShowInventory(playerid, false, page);
				return 1;
			}
			new InvType = InvTypePlayer{playerid};
			if(InvType == 2 && HouseID[playerid] != PI[playerid][pHouseMain]) return 0;
			if(InvType == 3 && !TrunkInfo[idaofcar[playerid]][tOpen]) return 0;
			ShowInvMenu(playerid, InvType);
		}
	}
	//=============inv================
    if(donateopen{playerid})
    {
        new ID = Donate_Select[playerid];
		if(playertextid == Donate_Player[playerid][32])
		{
	    	if(Donate_Select[playerid] == -1) return SPD(playerid, 9159, DIALOG_STYLE_LIST, !"Выберите тип", !"{FFFFFF}[1] Перейти к выбору {73B461}аксессуаров\n{FFFFFF}[2] Перейти к выбору {73B461}транспорта на радиоуправлении\n{FFFFFF}[3] Перейти к выбору {73B461}рулеток\n{FFFFFF}[4] Перейти к выбору {73B461}транспорта в Launch комплектации\n{FFFFFF}[5] Перейти к выбору {73B461}переносных ларьков\n{FFFFFF}[6] Перейти к выбору {73B461}телефонов", !"Выбрать", !"Отмена");
			SelectDonateItem(playerid, ID, -1);
		}
	    else if(playertextid == Donate_Player[playerid][33])
		{
	    	if(Donate_Select[playerid] == -1) return SPD(playerid, 9159, DIALOG_STYLE_LIST, !"Выберите тип", !"{FFFFFF}[1] Перейти к выбору {73B461}аксессуаров\n{FFFFFF}[2] Перейти к выбору {73B461}транспорта на радиоуправлении\n{FFFFFF}[3] Перейти к выбору {73B461}рулеток\n{FFFFFF}[4] Перейти к выбору {73B461}транспорта в Launch комплектации\n{FFFFFF}[5] Перейти к выбору {73B461}переносных ларьков\n{FFFFFF}[6] Перейти к выбору {73B461}телефонов", !"Выбрать", !"Отмена");
			SelectDonateItem(playerid, ID, 1);
	    }
		else if(playertextid == Donate_Player[playerid][1])
		{
	    	if(Donate_Select[playerid] == -1) return 1;
		    BuyDonateItem(playerid, ID);
		}
		else if(playertextid == Donate_Player[playerid][6]) BuyDonateItem(playerid, ID);
	    else if(playertextid == Donate_Player[playerid][5]) SelectDonateItem(playerid, ID, 1, 1); //++
		else if(playertextid == Donate_Player[playerid][7]) SelectDonateItem(playerid, ID, -1, 1); //--
		else if(playertextid == Donate_Player[playerid][38]) HideDonateTD(playerid);//cancel donate
	}
    return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	MapAndreas_FindZ_For2DCoord(fX, fY, fZ);
	if(PI[playerid][pAdmin])
 	{
  		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) J_SetVehiclePos(GetPlayerVehicleID(playerid), fX, fY, fZ+2.0);
    	else J_SetPlayerPos(playerid, fX, fY, fZ+1.0);
		SetPlayerVirtualWorldEx(playerid, 0);
		SetPlayerInteriorEx(playerid, 0);
    }
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(!IsPlayerLogged[playerid]) return 0;
    if(result == -1)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Неизвестная команда! Введите /help для просмотра доступных функций.");
		return 0;
	}
	//SCM(playerid,-1,"++CMD");
    return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(!IsPlayerLogged[playerid]) return 0;
	/*for(new i; i < sizeof(dahelp); i++)
    {
		if(!dahelp[i][adostupCMD] && PI[playerid][pAdmin] != 0) continue;
    	if(GetString(cmd, dahelp[i][nameCMD]))
		{
			if(PI[playerid][pAccessAdmin] < dahelp[i][fdostupCMD] || PI[playerid][pAdmin] < dahelp[i][adostupCMD])
			{
				SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
				return 0;
			}
			if(!ADuty{playerid})
			{
				callcmd::apanel(playerid);
				return 0;
			}
		}
	}*/
	return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	new number = GetVehicleID(vehicleid);
    if(IsAOwnableCar(number))
	{
	    CarInfo[number][cColor_1] = color1;
	    CarInfo[number][cColor_2] = color2;
		UpdateDataInt("ownable","Color_1", CarInfo[number][cColor_1], CarInfo[number][cID],"=");
		UpdateDataInt("ownable","Color_2", CarInfo[number][cColor_2], CarInfo[number][cID],"=");
	}
	return 1;
}
new bool:PlayerDamageForVehicle[MAX_PLAYERS];
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(!IsUniqueCar(vTemp[vehicleid][vModel])) SetVehicleHealth(vehicleid, 4000);
	if(TRiVehicle[playerid] == vehicleid)
	{
		new Float:hp;
    	GetVehicleHealth(TRiVehicle[playerid], hp);
    	if(hp <= 600)
    	{
		    SCM(playerid,0xff9966FF,!"[ Оповещение ]{FFFFFF} Ваш трейлер был эвакуирован!");
	 		destroyvehicle_(TRiVehicle[playerid]);
		    UpdateTrailer(INVALID_PLAYER_ID,GetTrailerID(playerid),0);
		}
	}
	if(PAI[playerid][secondupdate] > 0) ExitPAI(playerid);
    if(!PI[playerid][pImprovement][0])
    {
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsAVelik(carid)) return 1;
		EngineStalled[playerid]++;
		if(EngineStalled[playerid] >= 3 && GetEngineStatus(carid))
		{
			SetEngineStatus(vehicleid, false, playerid);
			GameTextForPlayer(playerid, !"ENGINE ~r~OFF", 1000, 6);
			EngineStalled[playerid]=0;
		}
	}
	if(PlayerDamageForVehicle[playerid] != false && CheckTrunkForItem(vehicleid, 1779) != 0)
	{
		SetPlayerDrunkLevel(playerid, 2048);
		J_SetPlayerHealth(playerid,PlayerHealthAC[playerid]-random(5));
		SendPlayerGameText_cef(playerid, "info","Уведомление","Вы попали в ДТП, будьте аккуратнее на дороге!",2000);
		GameTextForPlayer(playerid, !"~r~CRASH DAMAGE!", 0, 1);
		PlayerDamageForVehicle[playerid] = false;
	}
	PlayerDamageForVehicle[playerid] = true;
	if(IsACar(vehicleid)) {
	    if(PI[playerid][pImprovement][4]) return 1;
	    if(!PI[playerid][pCarSkill]) return besttime[playerid] = 300;
		Carskill[playerid] ++;
		if(Carskill[playerid] == 4) {
		    GameTextForPlayer(playerid, !"CAR SKILL -2", 0, 1);
		    PI[playerid][pCarSkill] -= 2;
			/*str_1[0] = EOS;
			for(new i; i < 11; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pImprovement][i]);
			UpdatePlayerDataStr(playerid, "Improvement", str_1);*/
		    if(besttime[playerid]) besttime[playerid] = 0;
		    besttime[playerid] = 0;
		    Carskill[playerid] = 0;
	    }
    }
	return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	printf("\n[MySQL Error]\nID соединения: %i\nID ошибки: %i\nОшибка: %s\nКоллбэк: %s\n query - %s\n",Float:handle, errorid, error, callback, query);
	return 1;
}
stock TetCar(playerid, uid=-1)
{
    foreach(new i: PlayerVehiclesStream[playerid])
	{
	    if(!IsACar(i) || i == INVALID_VEHICLE_ID) continue;
		if(uid != -1 && i != uid) continue;
	    new Float:X,Float:Y,Float:Z;
		GetVehicleShiftPos(i, 1, X, Y, Z, 2.0);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z))
		{
		    new Float:angle = GetPlayerAngleToPoint(playerid, X, Y);
		    if(angle >= -55 && angle <= 55)
		    {
				str_2[0] = EOS, f(str_2, 65, "Багажник: %s\n{C62929}Заглянуть в багажник", TrunkInfo[i][tOpen] ? ("{56A736}[Открыт]{FFFFFF}") : ("{C62929}[Закрыт]{FFFFFF}"));
				SPD(playerid, 1966, 2, !">> Багажник", str_2, !"Принять", !"Отмена");
				idaofcar[playerid] = i;
		        return 1;
		    }
		}
	}
	return 0;
}
CMD:faminvite(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
	if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Семья еще не настроена! Используйте /fammenu");
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /faminvite [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(!ProxDetectorS(5.0, playerid, target)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок слишком далеко от вас!");
	if(PI[target][pFamilyMember] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок состоит в другой семьи!");
	if(PI[target][pLevel] < 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок должен иметь уровень выше 2-го!");
	SCMf(target, COLOR_ORANGE, "[Информация] {FFFFFF}Игрок %s[%i] приглашает вас в семью: {c8ec36}%s.", PN(playerid), playerid, FamilyInfo[pFamilyID(playerid)][famName]);
	SCM(target, -1, !"Введите {c8ec36}/acceptfam{FFFFFF} для того чтобы принять предложение, или {ec4636}/cancelfam{FFFFFF}, чтобы отклонить.");
	SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно предложили %s[%i] вступить в вашу семью!", PN(target), target);
	AcceptFam{target} = true;
	SetPVarInt(target, !"IDInvite", playerid);
	return SetPVarInt(playerid, str_1, global_time + 120);
}
CMD:famunmute(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
    if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Семья еще не настроена! Используйте /fammenu");
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /famunmute [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(PI[target][pFamilyMember] != PI[playerid][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок не состоит в вашей семье!");
	if(PI[target][pFamilyMute] < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого игрока нет бана чата!");
	PI[target][pFamilyMute] = 0;
	return SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}снял бан семейного чата игроку: %s[%i]", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(target), target);
}
CMD:famuninvite(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Семья еще не настроена! Используйте /fammenu");
	if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
	extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /famuninvite [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(PI[target][pFamilyMember] != PI[playerid][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок не состоит в вашей семье!");
	if(IsPlayerAccessFamily(target)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
	FamilyInfo[PI[target][pFamilyMember]][famMembersCount]--;
	SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал из семьи: %s[%i]!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, PN(target), target);
	SPDf(target, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Принять", !"", "{FFFFFF}%s[%i] выгнал вас из семьи: %s.", PN(playerid), playerid, FamilyInfo[pFamilyID(playerid)][famName]);
	PI[target][pFamilyMember] = -1;
	UpdatePlayerDataInt(target, "FamilyMember", -1);
	if(Iter_Contains(Familys, target) == 1) Iter_Remove(Familys, target);
	return 1;
}
/*CMD:famuninviteoff(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Семья еще не настроена! Используйте /fammenu");
	if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /famuninviteoff [nick]");
 	new player = GetNameID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Он онлайн! Увольняй через /famuninvite");
	//if(GetString(name, requestPN(FamilyInfo[pFamilyID(playerid)][famLeader])) || GetString(name, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_0])) || GetString(name, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_1])) || GetString(name, requestPN(FamilyInfo[pFamilyID(playerid)][famZam_2]))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
	str_1[0] = EOS;
	mysql_format(mysql, str_1, 256, "SELECT 1 FROM `"TABLE_ACCOUNTS"` WHERE FamilyMember=%i AND NickName='%s' LIMIT 1", PI[playerid][pFamilyMember], name);
	mysql_tquery(mysql, str_1, "OfflineUninvite", "ds", playerid, name);
	return 1;
}*/
CMD:acceptfam(playerid)
{
	if(!AcceptFam{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не отправлял предложения вступить в семью!");
	if(!ProxDetectorS(5.0, playerid, GetPVarInt(playerid, !"IDInvite")))
	{
		SCM(GetPVarInt(playerid, !"IDInvite"), COLOR_RED, "[Ошибка] {FFFFFF}Вы слишком далеко от игрока, которого пригласили в семью!");
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы слишком далеко от игрока, который пригласил вас в семью!");
		AcceptFam{playerid} = false;
		AcceptFam{GetPVarInt(playerid, !"IDInvite")} = false;
		return 1;
	}
	PI[playerid][pFamilyMember] = PI[GetPVarInt(playerid, !"IDInvite")][pFamilyMember];
	UpdatePlayerDataInt(playerid, "FamilyMember", PI[playerid][pFamilyMember]);
	UpdatePlayerFamily(playerid, true);
	FamilyInfo[pFamilyID(playerid)][famMembersCount] ++;
	mysql_pqueryf(mysql,"UPDATE `familys` SET `Members` = '%i' WHERE `ID` = '%i' LIMIT 1", FamilyInfo[pFamilyID(playerid)][famMembersCount], PI[playerid][pFamilyMember]);
	SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}пригласил в семью нового члена: %s[%i]!", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(GetPVarInt(playerid, !"IDInvite")), GetPVarInt(playerid, !"IDInvite"), PN(playerid), playerid);
	SCMf(GetPVarInt(playerid, !"IDInvite"), COLOR_ORANGE, "[Информация] {FFFFFF}%s[%i] принял ваше предложение вступить в семью!", PN(playerid), playerid);
	SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно приняли предложение вступить в семью: {e39f20}%s", FamilyInfo[pFamilyID(playerid)][famName]);
	SCM(playerid, -1, !"Используйте команду /fammenu для подробной информации.");
	return DeletePVar(playerid, !"IDInvite");
}
CMD:cancelfam(playerid)
{
	if(!AcceptFam{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не отправлял предложения вступить в семью!");
	AcceptFam{playerid} = false;
	AcceptFam{GetPVarInt(playerid, !"IDInvite")} = false;
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно отказались от вступления в семью!");
	SCMf(GetPVarInt(playerid, !"IDInvite"), COLOR_RED, "[Информация] {FFFFFF}Игрок %s[%i] отказался от вашего предложения на вступление в семью!", PN(playerid), playerid);
	return DeletePVar(playerid, !"IDInvite");
}
CMD:wi(playerid)//Адм
{
	if(CheckAdmin(playerid, 6)) return 1;
	return SCMf(playerid, -1, "Вирт мир: %i Интерьер: %i", GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
}
CMD:fammenu(playerid)
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	if(GetString(FamilyInfo[pFamilyID(playerid)][famName], "default")) return SPD(playerid, 493, DIALOG_STYLE_LIST, !"Настройки семьи", !"Название семьи: {eb6b6b}[Нет названия]\nСлоган семьи: {eb6b6b}[Нет слогана]", !"Принять", !"Отмена");
	if(GetString(FamilyInfo[pFamilyID(playerid)][famSlogan], "default")) return SPDf(playerid, 493, DIALOG_STYLE_LIST, !"Настройки семьи", !"Принять", !"Отмена", "Название семьи: {c0eb6b}%s\nСлоган семьи: {eb6b6b}[Нет слогана]", FamilyInfo[pFamilyID(playerid)][famName]);
	return ShowFamily(playerid);
}
CMD:fam(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(GetString(FamilyInfo[pFamilyID(playerid)][famSlogan], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {ffffff}Семья еще не настроена! Используйте /fammenu");
	if(PI[playerid][pFamilyChat] == 1) return 0;
	if(PI[playerid][pFamilyMute] > 0) return SendMuteFamilyMessage(playerid);
	if(isnull(params)) return SCM(playerid, COLOR_RED, !"Используйте: /fam [text]");
	if(GetPVarInt(playerid, !"antifloodfam") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья] %s[%i]:{B9C1B8} %s", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid, params);
    SetPlayerChatBubble(playerid, !"Сообщение по домашней рации", COLOR_PURPLE, 10.0, 5000);
    return SetPVarInt(playerid, !"antifloodfam", global_time + 5);
}
CMD:setspawn(playerid)
{
	if(PI[playerid][pDCTime] == 1 && PI[playerid][pHouseMain] ==-1)
	{
		PI[playerid][pDCTime] = 0;
		UpdatePlayerDataInt(playerid, "DCTime", 0);
	}
	if(PI[playerid][pFamilyMember] == -1)
	{
		if(PI[playerid][pDCTime] == 3)
		{
			PI[playerid][pDCTime] = 0;
			UpdatePlayerDataInt(playerid, "DCTime", 0);
		}
	}
	str_1[0] = EOS;
	switch(PI[playerid][pDCTime])
	{
	    case 0: str_1 = "{BE2D2D}Вокзал{FFFFFF}";
	    case 1: f(str_1,sizeof(str_1),"{33AA33}Дом №(%i)",PI[playerid][pHouseMain]);
	    case 2: str_1 = "{33AA33}Организация{FFFFFF}";
	    case 3: str_1 = "{33AA33}Семейная квартира{FFFFFF}";
	    case 4:
		{
		    f(str_1,sizeof(str_1),"{FF7F50}%.2f %.2f %.2f{FFFFFF}",PI[playerid][pPoint_Pos][0],PI[playerid][pPoint_Pos][1],PI[playerid][pPoint_Pos][2]);
		}
	}
	//AC_FIX_DIALOG_F(playerid, 1781);
	if(PI[playerid][pVIP][0] < 6) SPDf(playerid, 1781, 2, !"Выберите место спавна", !"Принять", !"Закрыть", "Текущее место спавна: %s\nУстановить дом местом спавна.\nУстановить организацию местом спавна.\nУстановить вокзал местом спавна.\nУстановить семейную квартиру спавном.", str_1);
    else SPDf(playerid, 1781, 2, !"Выберите место спавна", !"Принять", !"Закрыть", "Текущее место спавна: %s\nУстановить дом местом спавна.\nУстановить организацию местом спавна.\nУстановить вокзал местом спавна.\nУстановить семейную квартиру спавном.\nУстановить спавн в этой точке.", str_1);
    return 1;
}
CMD:sethoussecostdadasds(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 8, 3)) return 1;
    extract params -> new houseid, cost; else return SCM(playerid, COLOR_RED, !"Используй: /sethousecost [id] [cost]");
    if(houseid < 1 || houseid > OWNABLEHOUSES-1) return 1;
    HouseInfo[houseid][hCost] = cost;
    SCM(playerid, -1, !"GATOVA");
    return UpdateHouse(houseid);
}
CMD:setklassadssasd(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 8,3)) return 1;
	extract params -> new houseid, klass; else return SCM(playerid, COLOR_RED, !"Используйте: /setklass [id] [klass]");
	if(houseid < 1 || houseid > OWNABLEHOUSES-1) return 1;
	if(HouseInfo[houseid][hKlass] == 22) return SCM(playerid, -1, !"НЕЛЬЗЯ");
	HouseInfo[houseid][hKlass] = klass;
	SCM(playerid, -1, !"GATOVA");
	return UpdateHouse(houseid);
}
CMD:chanhehousde(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 8,3)) return 1;
	new Float:XYZ[3];
 	GetPlayerPos(playerid, XYZ[0], XYZ[1], XYZ[2]);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /changehouse [id]");
    if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 1;
    if(HouseInfo[houseid][hKlass] == 22) return SCM(playerid, -1, !"НЕЛЬЗЯ");
	DestroyDynamic3DTextLabel(House3DText[houseid]);
	UpdateDataFloat("houses", "DefaultEnter_X", HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "DefaultEnter_Y", HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "DefaultEnter_Z", HouseInfo[houseid][hEnter_Z], HouseInfo[houseid][hID], 1);
    HouseInfo[houseid][hEnter_X] = XYZ[0];
    HouseInfo[houseid][hEnter_Y] = XYZ[1];
    HouseInfo[houseid][hEnter_Z] = XYZ[2];
   	House3DText[houseid] = CreateDynamic3DTextLabel(!" Дом ", 0xE1AE3CFF, HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z], 10.0);
    UpdateHouse(houseid);
    UpdateDataFloat("houses", "Enter_X", HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "Enter_Y", HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hID], 1);
    UpdateDataFloat("houses", "Enter_Z", HouseInfo[houseid][hEnter_Z], HouseInfo[houseid][hID], 1);
    return SCM(playerid, -1, !"GATOVA");
}
CMD:chanhebidaz(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 8,3)) return 1;
	new Float:X, Float:Y, Float:Z;
 	GetPlayerPos(playerid, X, Y, Z);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /changebiz [id]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 1;
	UpdateDataFloat("businesses", "DefaultEnter_X", BizInfo[bizid][bEnter_X], BizInfo[bizid][bID], 1);
    UpdateDataFloat("businesses", "DefaultEnter_Y", BizInfo[bizid][bEnter_Y], BizInfo[bizid][bID], 1);
    UpdateDataFloat("businesses", "DefaultEnter_Z", BizInfo[bizid][bEnter_Z], BizInfo[bizid][bID], 1);
    BizInfo[bizid][bEnter_X] = X;
    BizInfo[bizid][bEnter_Y] = Y;
    BizInfo[bizid][bEnter_Z] = Z;
	UpdateBiz(bizid, 1);
    UpdateDataFloat("businesses", "Enter_X", BizInfo[bizid][bEnter_X], BizInfo[bizid][bID], 1);
    UpdateDataFloat("businesses", "Enter_Y", BizInfo[bizid][bEnter_Y], BizInfo[bizid][bID], 1);
    UpdateDataFloat("businesses", "Enter_Z", BizInfo[bizid][bEnter_Z], BizInfo[bizid][bID], 1);
    return SCM(playerid, -1, !"GATOVA");
}
CMD:setbiztypedsradszssadsa(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 8,4)) return 1;
 	extract params -> new bizid, type; else return SCM(playerid, COLOR_RED, !"Используй: /setbiztype [id] [type]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 1;
    BizInfo[bizid][bState] = type;
    UpdateDataInt("businesses", "State", BizInfo[bizid][bState], BizInfo[bizid][bID],"=");
    UpdateBiz(bizid, 1);
    return SCM(playerid, -1, !"GOTOVA");
}
CMD:acpanel(playerid, params[])//Адм
{
//	if(CheckAdmin(playerid, 8,4)) return 1;
 //	pAntiCheatSettingsPage{playerid} = 1; // Присваиваем переменной, хранящей номер страницы, на который находится игрок, значение 1 (т.е, теперь игрок на 1-ой странице)
// 	return ShowPlayer_AntiCheatSettings(playerid); // Показываем игрок главный диалог настроек анти-чита
}
CMD:orgmembers(playerid)//Адм
{
	if(CheckAdmin(playerid)) return 1;
	str_1 = "Организация\tОнлайн";
	for(new i = 1; i < MAX_ORGS; i++)
	{
		f(str_2, 61, "\n{FFFFFF}%s\t{9ACD32}%i чел.", global_OrgInfo[i][g_oName], IsTeamConnected(i));
		strcat(str_1, str_2);
	}
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Закрыть", !"");
}
CMD:namestore(playerid, params[])//Адм
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, -1, !"/namestore [ Ник/ID ]");
	if(strlen(name) <= 3 && IsNums(name))
	{
		if(!IsPlayerConnectEx(strval(name))) return SCM(playerid, -1, !"/namestore [ Ник/ID ]");
		str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `namehistory` WHERE `nh_owner` = '%i' LIMIT 1", PI[strval(name)][pID]);
		mysql_tquery(mysql, str_q, "PNameStore", "is", playerid,name);
	}
	else
	{
		//str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
		//mysql_tquery(mysql, str_q, "PNameStore", "is", playerid,name);
	}
	return 1;
}
public: PNameStore(playerid, name[])
{
	new push = cache_num_rows();
	str_2[0] = EOS;
	if(push)
    {
	    for(new i; i < push; i++)
		{
			str_1[0] = EOS, cache_get_string(i, !"nh_oldname", str_1);
			str_d[0] = EOS, cache_get_string(i, !"nh_date", str_d);
			f(str_2, sizeof(str_2), "%s\n{FFFF00}%s\t{FFFFFF}%s", str_2, str_1, str_d);
		}
	}else{
	    str_1[0] = EOS, str_2[0] = EOS;
	    str_2 = "{FFFFFF}Истории смены ника не обнаружено";
	}
	return SPD(playerid, 0, 0, !"История ников:", str_2, "Понял", "");
}
CMD:buybiz(playerid)
{
    for(new i; i < OWNABLEBIZES; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 3.0, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]))
    	{
        	if(GetPlayerPeakBiz(playerid))
        	{
		        if(GetString(BizInfo[i][bOwner],"The State"))
	     	    {
					if(GetMoney(playerid) >= BizInfo[i][bCost]) InfoBiz[playerid] = i, CreateCaptcha_BOT(playerid, 2);
	     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
     	        }
     	        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
 	        }
			else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
 	    }
    }
    return 1;
}
CMD:buyhouse(playerid)
{
    for(new i; i < OWNABLEHOUSES; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]))
    	{
        	if(GetPlayerPeakBiz(playerid))
        	{
		        if(GetString(HouseInfo[i][hOwner],"The State"))
	     	    {
					if(GetMoney(playerid) >= HouseInfo[i][hCost]) InfoHouse[playerid] = i, CreateCaptcha_BOT(playerid, 1);
	     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
     	        }
     	        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
 	        }
			else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
 	    }
    }
    return 1;
}

cmd:serversettings(playerid)
{
	str_1[0] = EOS;
    f(str_1, sizeof(str_1), "{FFFFFF}Параметр\t{ffffff}Состояние\n\
	    {DC4747}1.{FFFFFF} Название сервера\t{DC4747}%s\n\
	    {DC4747}2.{FFFFFF} Название штата\t{DC4747}%s\n\
	    {DC4747}3.{FFFFFF} Название сервера в клиенте\t{DC4747}%s\n\
	    {DC4747}4.{FFFFFF} Название рекламы в GPS\t{DC4747}%s\n\
	    {DC4747}5.{FFFFFF} Группа ВК\t{DC4747}%s\n\
	    {DC4747}6.{FFFFFF} Номера транспортов сервера\t{DC4747}%s\n\
	    {DC4747}6.{FFFFFF} Ссылка на скачивание лаунчера\t{DC4747}%s\n\
	    {DC4747}7.{FFFFFF} Название игрового мода клиента\t{DC4747}%s\n\
	    {DC4747}8.{FFFFFF} Оффициальная почта сервера\t{DC4747}%s\n\
	    {DC4747}9.{FFFFFF} Дискорд сервера\t{DC4747}%s\n\
	    {DC4747}10.{FFFFFF} Сайт\t{DC4747}%s\n\
	    {DC4747}11.{FFFFFF} Форум\t{DC4747}%s\n\
	    {DC4747}12.{FFFFFF} Режим сервера\t{DC4747}%s\n\
	    {DC4747}13.{FFFFFF} Пароль сервера\t{DC4747}%s\n\
		{DC4747}14.{FFFFFF} Пикап паспорта\t{DC4747}%s\n\
		{DC4747}15.{FFFFFF} Номер сервера\t{DC4747}%s\n\
	 	{FFD700}Help: /changebonus",
	    ServerCFG[server_name], ServerCFG[server_logo], Mode[CFG_Name], ServerCFG[server_reklama],
		ServerCFG[server_group_vk], ServerCFG[server_number], ServerCFG[server_launcher], ServerCFG[server_mode], ServerCFG[server_mail],
		ServerCFG[server_discord], ServerCFG[server_site], ServerCFG[server_forum], (TypeServ == 1) ? ("Бонусник") : ("Фулл РП"),
		(Mode[CFG_PASS_SERVER] == 0) ? ("Пустой") : ("Рандом"), (PickupStart == 1) ? ("Активирован") : ("Отключен"), Server_Names[NumberServID+1]);

   	SPD(playerid, 7795, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Настройка | {DC4747}Выбор", str_1, !"Изменить", !"Выйти");//7792
    return 1;
}
cmd:changebonus(playerid)
{
	new string[1024];
	format(string,sizeof(string), "\
		{ffffff}1. Информация о бонусе на данный момент.\n\
		{ffffff}2. Установить бонус({E37A45}1 level,300$,0 AZ-coin{ffffff})\n\
		{ffffff}3. Установить бонус({E37A45}3 level,1000.000$,100 AZ-coin{ffffff})\n\
		{ffffff}4. Установить бонус({E37A45}10 level,10.000.000$,5000 AZ-coin{ffffff})\n\
		{ffffff}5. {46AB2A}Ввести бонус вручную");

	SPD(playerid, 4680, DIALOG_STYLE_LIST, "Бонус сервера",string,"Принять", "Отмена");
	return 1;
}
CMD:ahelp(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new lvl; else return f(str_1, sizeof(str_1), "[Информация] {ffffff}Используйте /ahelp [lvl 1 - %i]", PI[playerid][pAdmin]), SCM(playerid, COLOR_RED, str_1);
    if(PI[playerid][pAdmin] < lvl) return 1;
	str_1[0] = EOS;
	for(new i; i < sizeof(dahelp); i++) if(lvl == dahelp[i][adostupCMD] && PI[playerid][pAccessAdmin] >= dahelp[i][fdostupCMD]) f(str_1, sizeof(str_1), "%s\n{FFFFFF}%s - %s", str_1, dahelp[i][nameCMD], dahelp[i][descriptionCMD]);
	str_2[0] = EOS, f(str_2, sizeof(str_2),"Администратор %i уровня", lvl);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, str_2, str_1,!"Далее", !"Назад");
}
CMD:atest(playerid)
{
	foreach_player(i)
 	{
		if(!PI[i][pAdmin] || !ADuty{playerid}) continue;
  		if(ShowIP[i]) SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел.", PN(playerid), playerid);
   		else SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел [reg ip:%s] -- [norm ip: %s]", PN(playerid), playerid, PlayerRegIP[playerid], PlayerIp[playerid]);
		break;
	}
	return 1;
}
CMD:sethousegarage(playerid, params[])
{
    if(CheckAdmin(playerid, 7)) return 1;
	extract params -> new house_id, house_garage_status; else return SCM(playerid, COLOR_RED, !"Используй: /sethousegarage [house id] [0/1]");
	if(!(0 <= house_garage_status <= 1)) return SCM(playerid, COLOR_RED, !"Используй: /sethousegarage [house id] [0/1]");
	if(house_garage_status == HouseInfo[house_id][hGarage]) return SCM(playerid, COLOR_LIGHTRED, (HouseInfo[house_id][hGarage]) ? ("[Ошибка] {FFFFFF}Дом уже с гаражом") : ("[Ошибка] {FFFFFF}Дом и так без гаража"));
	if(house_id < 1 || house_id > OWNABLEHOUSES-1) return 1;
	new Float:XYZ[3];
	GetPlayerPos(playerid, XYZ[0], XYZ[1], XYZ[2]);
	HouseInfo[house_id][hGarage] = house_garage_status;
	if(house_garage_status)
	{
		HouseInfo[house_id][hGarage_X] = XYZ[0],HouseInfo[house_id][hGarage_Y] = XYZ[1],HouseInfo[house_id][hGarage_Z] = XYZ[2];
  		UpdateDataFloat("houses", "Garage_X", HouseInfo[house_id][hGarage_X], HouseInfo[house_id][hID], 1);
        UpdateDataFloat("houses", "Garage_Y", HouseInfo[house_id][hGarage_Y], HouseInfo[house_id][hID], 1);
        UpdateDataFloat("houses", "Garage_Z", HouseInfo[house_id][hGarage_Z], HouseInfo[house_id][hID], 1);
	}
	UpdateHouse(house_id);
	UpdateHouseGarage(house_id);
	SCM(playerid, COLOR_RED, (HouseInfo[house_id][hGarage]) ? ("Вы добавили гараж к указанному вами дому") : ("Вы убрали гараж у указанного вами дома"));
	return 1;
}
CMD:satiety(playerid, param[])
{
    switch(Fullness{playerid})
	{
	    case 0..10: str_1 = "{E12525}очень голодны{A6A9A7}";
	    case 11..50: str_1 = "{F99C32}голодны{A6A9A7}";
	    case 51..70: str_1 = "{6ED947}немного проголодались{A6A9A7}";
	    case 71..150: str_1 = "{54C977}сыты{A6A9A7}";
	}
	f(str_2,sizeof(str_2),"{A6A9A7}На данный момент вы %s.\nВаша сытость: {FFFFFF}%i/100.{A6A9A7}\n\n\nПополнить сытость можно в любой закусочной штата.\nЕсли долго не есть ваше здоровье начнет ухудшаться.", str_1, Fullness{playerid});
	SPD(playerid,0,0,!"",str_2,!"Закрыть",!"");
	return 1;
}
CMD:carm(playerid, params[])
{
	if(!IsAArmy(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не состоите в военных войсках!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_VALIK, !"Вы не на дежурстве");
    if(GetVehicleModel(GetPlayerVehicleID(playerid))==433)
    {
    	f(str_2,500,"Загрузиться\nРазгрузить на склад ЛСПД [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузить на склад Областной полиции [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузка в FBI [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузка SFPD [%i/30к.] bank: {73B461}%i$\nРазгрузка Полиция LV [%i/30к.] bank: {73B461}%i$",OrgInfo[TEAM_LSPD][oItemCount][0],OrgInfo[TEAM_LSPD][oBank],OrgInfo[TEAM_RCPD][oItemCount][0],OrgInfo[TEAM_RCPD][oBank],OrgInfo[TEAM_FBI][oItemCount][0],OrgInfo[TEAM_FBI][oBank],
		OrgInfo[TEAM_SFPD][oItemCount][0],OrgInfo[TEAM_SFPD][oBank],OrgInfo[TEAM_LVPD][oItemCount][0],OrgInfo[TEAM_LVPD][oBank]);
    	SPD(playerid,9653,2,"",str_2,"Принять","Закрыть");
	}
	else if(GetVehicleModel(GetPlayerVehicleID(playerid))==548) SPD(playerid,9663,2,"","Загрузить вертолет [ с завода ]\nРазгрузить в Армии LS\nРазгрузить в Армии LV\nРазгрузить в Армии SF","Принять","Закрыть");
	return 1;
}
CMD:strafs(playerid, params[])
{
	if(!IsACop(playerid)) return  SCM(playerid, COLOR_RED, !"Вы не полицейский!");
    if(PI[playerid][pRank] < 4) return SCM(playerid, COLOR_RED, !"Эта возможность доступна с 4 ранга");
    if(GetPlayerState(playerid)!=2)return SCM(playerid, COLOR_RED, !"Вы должны находится за рулем!");
   	if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_RED, !"Вы должны находится в евакуаторе!");
	SPD(playerid,193,1,"Введите сумму","Введите сумму залога\n\n{9ACD32}- Не менее $800 и не более $10000","Ок","Отмена");
	return 1;
}
CMD:tp(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
	extract params -> new member; else return SCM(playerid, COLOR_RED, !"Используй: /tp [id фракции]");
    if(member > 27 || member < 1) return SCM(playerid, COLOR_GREY, !"OT 1 DO 27");
 	SetPlayerInteriorEx(playerid,global_OrgInfo[member][g_oSpawnIntWorld][0]);
    SetPlayerVirtualWorldEx(playerid,global_OrgInfo[member][g_oSpawnIntWorld][1]);
	J_SetPlayerPos(playerid, global_OrgInfo[member][g_oSpawnInfo][0], global_OrgInfo[member][g_oSpawnInfo][1], global_OrgInfo[member][g_oSpawnInfo][2]);
	return 1;
}
CMD:tpcor(playerid, params[])
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract params -> new Float:x, Float:y, Float:z; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Используйте: /tpcor [x] [y] [z]");
	return J_SetPlayerPos(playerid, x, y, z);
}
CMD:showtatu(playerid)
{
	if(GetPVarInt(playerid, !"antifloodtatu") > global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	f(str_2, sizeof(str_2), "%s[%i] снимает верхнюю одежду.", PN(playerid), playerid);
	ProxDetector(25.0, playerid, str_2, COLOR_ME);
	J_ApplyAnimation(playerid, "PED", "SHOVE_PARTIAL", 4.0, 0, 0, 0, 0, 0, 1);
	SetPVarInt(playerid, !"antifloodtatu", global_time + 9);
	ProxDetector(25.0, playerid, "{8C6F6F}<< {AFAFAF}На шее: {FFFFFF}-{AFAFAF}, На туловище: {FFFFFF}-{AFAFAF}.", COLOR_GREY);
	ProxDetector(25.0, playerid, "{8C6F6F}<< {AFAFAF}На руках: {FFFFFF}-{AFAFAF}, На спине: {FFFFFF}-{AFAFAF}.", COLOR_GREY);
	return 1;
}
CMD:amember(playerid,params[])
{
   	if(CheckAdmin(playerid)) return 0;
	extract params -> new member, rang; else return SCM(playerid, COLOR_RED, !"Используй: /amember [id] [rank]");
    if(member > 27 || member < 1) return SCM(playerid,COLOR_GREY, !"Ид от 1 до 27");
    if(rang > 9 || rang < 1) return SCM(playerid,COLOR_GREY, !"Ранг от 1 до 9");
	PI[playerid][pMember] = member;
	UpdatePlayerDataInt(playerid, "Member", member);
	PI[playerid][pRank] = rang;
	UpdatePlayerDataInt(playerid, "Rank", rang);
	TeamDuty{playerid} = true;
	SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
	return SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) вступил за зама в организацию %s на %i ранг",PN(playerid), playerid, global_OrgInfo[GetTeamID(playerid)][g_oName], rang);
}
CMD:dellfam(playerid, params[])
{
	if(CheckAdmin(playerid, 8,1)) return 1;
	extract params -> new string:str[30]; else return SCM(playerid, COLOR_RED, !"Используй: /dellfam [название семьи]");
    str_q[0] = EOS,f(str_q, sizeof(str_q), "SELECT `id` FROM Familys WHERE name = '%s' LIMIT 1", params);
    mysql_tquery(mysql, str_q, "DeleteFamily", "d", playerid, params);
    return 1;
}
CMD:delhname(playerid, params[])
{
    if(CheckAdmin(playerid, 6)) return 1;
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /delhname [houseid]");
    if(houseid < 1 || houseid > OWNABLEHOUSES-1) return 0;
	if(GetString(HouseInfo[houseid][hOwner], "The State")) return 0;
	if(!HouseInfo[houseid][hDescription]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У данного дома отсутствует название!");
	SetString(HouseInfo[houseid][hDescription], "");
	SCM(playerid, COLOR_LIGHTRED, !"[Информация]: {FFFFFF}Вы успешно обнулили название дома!");
	UpdateDataStr("houses", "Description", "", HouseInfo[houseid][hID]);
	return UpdateHouse(houseid);
}
CMD:delbname(playerid, params[])
{
    if(CheckAdmin(playerid, 6)) return 1;
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /delbname [bizid]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State")) return 0;
	if(!BizInfo[bizid][bDescription]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У данного бизнеса отсутствует название!");
	SetString(BizInfo[bizid][bDescription], "");
	SCM(playerid, COLOR_LIGHTRED, !"[Информация]: {FFFFFF}Вы успешно обнулили название бизнеса!");
	UpdateDataStr("businesses", "Description", BizInfo[bizid][bDescription], BizInfo[bizid][bID]);
	return UpdateBiz(bizid);
}
CMD:bizlock(playerid, params[])
{
    if(CheckAdmin(playerid, 4)) return 1;
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /bizlock [bizid]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State")) return 0;
	switch(BizInfo[bizid][bLock])
	{
	    case 1: BizInfo[bizid][bLock] = 0, SCM(playerid, COLOR_LIGHTRED, !"[Информация]: {FFFFFF}Вы успешно {008000}открыли {FFFFFF}бизнес!");
	    default: BizInfo[bizid][bLock] = 1, SCM(playerid, COLOR_LIGHTRED, !"[Информация]: {FFFFFF}Вы успешно {FF0000}закрыли {FFFFFF}бизнес!");
	}
 	UpdateDataInt("businesses", "Lock", BizInfo[bizid][bLock], BizInfo[bizid][bID],"=");
	return UpdateBiz(bizid);
}
CMD:asellbiz(playerid, params[])
{
    if(CheckAdmin(playerid, 7,2)) return 1;
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /asellbiz [bizid]");
	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State") || GetString(BizInfo[bizid][bOwner], "wipeHouse")) return 0;
	if(CheckDostup(playerid,!"sell")) return 1;
	SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) продал бизнес игрока %s ид бизнеса %i",PN(playerid), playerid, BizInfo[bizid][bOwner],bizid);
   	SCM(playerid, COLOR_LIGHTBLUE, !"Вы продали бизнес");
   	//aml(10, playerid, BizInfo[bizid][bOwner], InfoBusinesses[BizInfo[bizid][bState]][BName], bizid);
	return SellBiz(bizid);
}
CMD:asellhouse(playerid, params[])
{
    if(CheckAdmin(playerid, 7,2)) return 1;
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /asellhouse [houseid]");
	if(houseid < 1 || houseid > OWNABLEHOUSES-1) return 0;
	if(GetString(HouseInfo[houseid][hOwner], "The State") || GetString(HouseInfo[houseid][hOwner], "wipeHouse")) return 0;
	if(CheckDostup(playerid,!"sell")) return 1;
	SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) продал дом игрока %s ид дома %i",PN(playerid), playerid, HouseInfo[houseid][hOwner],houseid);
   	SCM(playerid, COLOR_LIGHTBLUE, !"Вы продали дом");
   	//aml(11, playerid, HouseInfo[houseid][hOwner], "", houseid);
	return SellHouse(houseid);
}

CMD:asellcar(playerid, params[])
{
    if(CheckAdmin(playerid, 7,2)) return 1;
	extract params -> new carid; else return SCM(playerid, COLOR_RED, !"Используй: /asellcar [carid]");
	new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) return 0;
	if(IsASellCar(number)) return 0;
	if(CheckDostup(playerid,!"sell")) return 1;
	SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) продал машину %i",PN(playerid), playerid, carid);
	//aml(12, playerid, CarInfo[number][cOwner], "", number);
	return SellCar(number, number, GetNameID(CarInfo[number][cOwner]));
}

CMD:wipehouses_owner(playerid)
{
	if(CheckAdmin(playerid, 8,4) && IsPlayerUnicalDostup(playerid)) return 1;
	new num;
	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(!GetString(HouseInfo[i][hOwner], "The State"))
		{
			SellHouse(i);
			num ++;
		}
	}
	if(num)
	{
  		foreach_player(i)
		{
			PI[i][pHouseMain] = -1;
			UpdatePlayerDataInt(i, "HouseSpawned", -1);
			PI[i][pDCTime] = 0;
			UpdatePlayerDataInt(i, "DCTime", 0);
			break;
		}
	}
    //aml(3, playerid, "", "Сделал вайп всех домов!");
	mysql_pquery(mysql, !"UPDATE `"TABLE_ACCOUNTS"` SET `HouseSpawned` = -1 WHERE 1");
	mysql_pquery(mysql, !"UPDATE `"TABLE_ACCOUNTS"` SET `DCTime` = 0 WHERE 1");
	return SendAdminsMessagef(COLOR_RED, "[A] А: %s продал в гос. %i домов.", PN(playerid), num);
}
CMD:wipebusinesses_owner(playerid)
{
	if(CheckAdmin(playerid, 8,4) && IsPlayerUnicalDostup(playerid)) return 1;
	new num;
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(!GetString(BizInfo[i][bOwner], "The State"))
		{
			SellBiz(i);
			num ++;
		}
	}
	//aml(3, playerid, "", "Сделал вайп всех бизнесов!");
	//Купира ////aml
	return SendAdminsMessagef(COLOR_RED, "[A] А: %s продал в гос. %i бизнесов.", PN(playerid), num);
}
CMD:wipeownable_owner(playerid,params[])
{
	if(CheckAdmin(playerid, 8,4) && IsPlayerUnicalDostup(playerid)) return 1;
	extract params -> new type; else return SCM(playerid,COLOR_RED, !"Используй: /wipeownable [0 - default; 1 - delete all]");
	new num;
	foreach(new i: OWNABLECARS)
	{
		if(!IsASellCar(i)) SellCar(i, i, GetPlayerID(CarInfo[i][cOwner])),num ++;
	}
	mysql_tquery(mysql, "TRUNCATE TABLE ownable");
	//aml(3, playerid, "", "Сделал вайп всех личных авто!");
	if(!type) SendAdminsMessagef(COLOR_RED, "[A] А: %s продал в гос. %i личных Т/С.", PN(playerid), num);
	else SendAdminsMessagef(COLOR_RED, "[A] А: %s удалил с базы данных. %i Т/С.", PN(playerid), num);
	return 1;
}
stock CheckPVarUnix(playerid, const cmd[], const text[], timeblock = 10) {
	if(GetPVarInt(playerid, cmd) > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя так часто использовать данную команду!");
	SetPVarInt(playerid, cmd, global_time + timeblock);
	return 0;
}
CMD:passwd(playerid, const params[])
{
	extract params -> new string:oldpass[25], string:newpass[25], string:newpass2[25]; else return SCM(playerid, COLOR_LIGHTBLUE, !"/passwd [oldpass] [newpass] [newpass2]");
	if(GetPVarInt(playerid, !"passwd") > global_time) return SCM(playerid, -1, !"Пароли можно менять раз в 2 минуты!");
	if(strlen(oldpass) > 24 || strlen(newpass) > 24 || strlen(newpass2) > 24) return SCM(playerid, COLOR_LIGHTBLUE, !"/passwd [oldpass] [newpass] [newpass2]");
  	if(!GetString(newpass, newpass2)) return SCM(playerid, COLOR_LIGHTBLUE, !"Новые пароли между собой не совпадают!");
    mysql_queryf_fix(mysql, "SELECT `Password` FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", true, PI[playerid][pID]);
	static sqlpass[65];
	sqlpass[0] = EOS, cache_get_string(0, !"Password", sqlpass);
	cache_delete(result1);
    bcrypt_check(oldpass, sqlpass,  "OnSafePassword_Change", "is", playerid, newpass);
    return 1;
}
public: OnSafePassword_Change(playerid, newpass[])
{
    new bool:match = bcrypt_is_equal();
	if(match != false) 
    {
        SetPVarInt(playerid, !"passwd", global_time + 120);
        SCM(playerid, COLOR_LIGHTBLUE, !"Пароль изменен!");
        mysql_escape_string(newpass, str_1);
        bcrypt_hash(str_1, 12, "OnSafePassword_Create", "ii", playerid, 1);
    }
    else SCM(playerid, COLOR_LIGHTBLUE, !"Текущий пароль с введенным вами не совпадает!");
    return 1;
}
CMD:plveh(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	SCM(playerid, -1, !"/plveh [id] [idcar] [TT 0/1]");
	extract params -> new player:id, veh = 522, tt = 0; else id = playerid;
	if(veh < 400 || veh > 100000) return SCM(playerid, COLOR_VALIK, !"Номер Транспортного средства не может быть ниже 400 !");
    if(!IsValidModel(veh)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Машины с таким ID не существует!");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"Игрок не авторизовался!");
	if(GetPlayerState(id) != 1) return SCM(playerid, COLOR_GREY, !"Игрок за рулем!");
	//SCMf(playerid, -1, "%i %i %i", GetPlayerState(id), GetPlayerInterior(id), GetPlayerVirtualWorld(id));
    new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(id, X, Y, Z);
	GetPlayerFacingAngle(id, A);
	if(PI[id][plveh] != -1) destroyvehicle_(PI[id][plveh]);
    PI[id][plveh] = J_AddStaticVehicleEx(veh, X, Y, Z, A, 1, 1, 0, GetPlayerInterior(id), GetPlayerVirtualWorld(id));
    vTemp[PI[id][plveh]][Fuel] = 100.00;
	if(tt) TwinTurboInstall(PI[id][plveh]);
	VehicleHealth[PI[id][plveh]] = 1500;
 	PutPlayerInVehicleEx(id, PI[id][plveh], 0);
	if(veh < 612) SendAdminsMessagef(COLOR_GREY, "[A] А: %s[%i] выдал временную машину игроку %s[%i] [%i]", PN(playerid), playerid, PN(id), id, PI[id][plveh]);
	else SendAdminsMessagef(COLOR_GREY, "[A] А: %s[%i] выдал лаунчер машину игроку %s[%i] [%i]", PN(playerid), playerid, PN(id), id, PI[id][plveh]);
    if(!IsAVelik(PI[id][plveh])) SetEngineStatus(PI[id][plveh], false, playerid);
	return 1;
}
alias:plveh("veh", "v");
CMD:weather(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new weather; else return SCM(playerid, COLOR_RED, !"Используй: /weather [id]");
	SendAdminsMessagef(COLOR_GREY, "%s сменил погоду.", PN(playerid));
    return SetWeather(weather);
}
cmd:dice(playerid, params[])
{
	new btc_dice = -1;
	for(new i; i < sizeof DicePos; i++) 
	{
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, DicePos[i][POSik][0], DicePos[i][POSik][1], DicePos[i][POSik][2])) continue;
		btc_dice = DicePos[i][dicebtc];
		break;
	}
	if(btc_dice == -1) return SCM(playerid, COLOR_RED, !"Вы должны находиться у игрального стола!");
	if(sscanf(params, "ii", params[0], params[1])) return SCMf(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Используйте /dice [id игрока] [ставка (в %s)]", btc_dice == 1 ? ("BTC") : ("фишках"));
	if(params[0] == playerid || !ProxDetectorS(6.0, playerid, params[0]) || !IsPlayerConnectEx(params[0]) || !IsPlayerLogged[params[0]] || (CasinoPlayerID[playerid] >= 1000 && CasinoPlayerRate[playerid] == -1)) return 1;
	if(IsPlayerCasinoPlay[playerid] != false || CasinoPlayerID[playerid] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам уже предложили игру!");
	new id = params[0];

	if(IsPlayerCasinoPlay[id] != false) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В данный момент игрок не может играть!");
	
	if(btc_dice == 1) //btc
	{
		if(params[1] < 1 || params[1] > 50000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1 BTC, максимальная 5000 BTC.");
		if(GetInvCount(playerid, 1203) < params[1]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно BTC. Вы можете купить BTC в банке штата.");
		IsPlayerCasinoPlayBTC{playerid} = true;
		IsPlayerCasinoPlayBTC{id} = true;
	}
	else {
		if(params[1] < 1 || params[1] > 500000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1 фишка, максимальная 500000 фишек.");
		if(GetInvCount(playerid, 320) < params[1]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно фишек. Вы можете купить фишки в обменнике казино.");
		IsPlayerCasinoPlayBTC{playerid} = false;
		IsPlayerCasinoPlayBTC{id} = false;
	}
    //if(ZapretDice{params[0]} == true) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В данный момент игрок не может играть!");
	//if(kostiKos[playerid] > 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Сейчас вы не можете начать игру!");
	SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Для того чтобы отказатся от своей ставки введите [/redice]");
    SCMf(playerid, 0x6495EDFF, "[Информация] {FFFFFF}Вы предложили %s бросить кости. Ставка: %i", PN(params[0]), params[1]);
    SCMf(params[0], 0x6495EDFF, "[Информация] {FFFFFF}%s предлагает бросить кости. Ставка: %i", PN(playerid), params[1]);
    SCM(params[0], COLOR_WHITE, !"Введите {48FC23}'/yes'{FFFFFF}чтобы согласиться {FF0000}'/no' {FFFFFF}для отказа");
	CasinoPlayerID[id] 					= playerid;
	CasinoPlayerRate[id]				= params[1];
	IsPlayerCasinoPlay{id}				= true;
	//
	CasinoPlayerID[playerid] 			= id;
	CasinoPlayerRate[playerid]			= params[1];
	IsPlayerCasinoPlay{playerid}		= true;
    return 1;
}
CMD:redice(playerid)
{
	new id = CasinoPlayerID[playerid];
	if(id == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не предлагали никому игру!");
	CasinoPlayerID[id] 					= -1;
	CasinoPlayerRate[id]				= -1;
	IsPlayerCasinoPlay{id}				= false;
	IsPlayerCasinoPlayBTC{id}			= false;
	//
	CasinoPlayerID[playerid] 				= -1;
	CasinoPlayerRate[playerid]				= -1;
	IsPlayerCasinoPlay{playerid}			= false;
	IsPlayerCasinoPlayBTC{playerid}			= false;
	SCM(id, COLOR_RED, !"[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы отказались играть!");
	return 1;
}
CMD:yes(playerid)
{
	new id = CasinoPlayerID[playerid];
	if(id == -1 || id >= 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не предлагал игру!");
	if(!ProxDetectorS(10.0, playerid, id)) return callcmd::no(playerid);
	
	new 
		count = CasinoPlayerRate[id],
		dice_playerid = random(9)+1,
		dice_id = random(9)+1,
		dice_type = -1;

	if(dice_id > dice_playerid) dice_type = 0;
	else if(dice_id < dice_playerid) dice_type = 1;

	if(!IsPlayerCasinoPlayBTC{id})
	{
		if(GetInvCount(playerid, 320) < count)
		{
			callcmd::no(playerid);
			SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно фишек. Вы можете купить фишки в обменнике казино.");
			return SCM(id, COLOR_RED, !">>>>{FFFFFF} - У вашего противника недостаточно фишек. Он может купить фишки в обменнике казино.");
		}
		if(GetInvCount(id, 320) < count) 
		{
			callcmd::no(id);
			SCM(id, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно фишек. Вы можете купить фишки в обменнике казино.");
			return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вашего противника недостаточно фишек. Он может купить фишки в обменнике казино.");
		}
		else if(dice_type != -1)
		{
			//id win
			if(!dice_type) InvAdd(id, 320, count), InvAdd(playerid, 320, -count);
			else InvAdd(playerid, 320, count), InvAdd(id, 320, -count);
		}
	}
	else if(IsPlayerCasinoPlayBTC{id} != false)
	{
		if(GetInvCount(playerid, 1203) < count)
		{
			callcmd::no(playerid);
			SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно BTC. Вы можете купить BTC в банке штата.");
			return SCM(id, COLOR_RED, !">>>>{FFFFFF} - У вашего противника недостаточно BTC. Он может купить BTC в банке штата.");
		}
		if(GetInvCount(id, 1203) < count) 
		{
			callcmd::no(id);
			SCM(id, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно BTC. Вы можете купить BTC в банке штата.");
			return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вашего противника недостаточно BTC. Он может купить BTC в банке штата.");
		}
		else if(dice_type != -1)
		{
			//id win
			if(!dice_type) InvAdd(id, 1203, count), InvAdd(playerid, 1203, -count);
			else InvAdd(playerid, 1203, count), InvAdd(id, 1203, -count);
		}
	}
	switch(dice_type)
	{
		case 0:
		{
			SPD(id, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Поздравляем, вы выиграли!", !"Понял", !"");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}К сожалению, вы проиграли!", !"Понял", !"");
			GameTextForPlayer(id, (str_f("~g~+%d", count)), 3000, 1);
			GameTextForPlayer(playerid, (str_f("~r~-%d", count)), 3000, 1);
		}
		case 1:
		{
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Поздравляем, вы выиграли!", !"Понял", !"");
			SPD(id, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}К сожалению, вы проиграли!", !"Понял", !"");
			GameTextForPlayer(playerid, (str_f("~g~+%d", count)), 3000, 1);
			GameTextForPlayer(id, (str_f("~r~-%d", count)), 3000, 1);
		}
		default:
		{
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Игра закончилась в ничью!", !"Понял", !"");
			SPD(id, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Игра закончилась в ничью!", !"Понял", !"");
		}
	}
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s и %s бросили кости. Результат: {CC9900}%i : %i", PN(id), PN(playerid), dice_id, dice_playerid);
    ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
    switch(dice_playerid)
	{
	    case 1: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(playerid, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	}
	switch(dice_id)
	{
     	case 1: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(id, 9, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	}
	//
	CasinoPlayerID[id] 					= 5000;
	CasinoPlayerRate[id]				= -1;
	IsPlayerCasinoPlay{id}				= false;
	IsPlayerCasinoPlayBTC{id}			= false;
	//
	CasinoPlayerID[playerid] 				= 5000;
	CasinoPlayerRate[playerid]				= -1;
	IsPlayerCasinoPlay{playerid}			= false;
	IsPlayerCasinoPlayBTC{playerid}			= false;
	return 1;
}
CMD:no(playerid)
{
	new id = CasinoPlayerID[playerid];
	if(id == -1 || id >= 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не предлагал игру!");
	CasinoPlayerID[id] 					= -1;
	CasinoPlayerRate[id]				= -1;
	IsPlayerCasinoPlay{id}				= false;
	IsPlayerCasinoPlayBTC{id}			= false;
	//
	CasinoPlayerID[playerid] 				= -1;
	CasinoPlayerRate[playerid]				= -1;
	IsPlayerCasinoPlay{playerid}			= false;
	IsPlayerCasinoPlayBTC{playerid}			= false;
	SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы отказались играть!");
	return 1;
}
CMD:armour(playerid)
{
	if (!GetInvCount(playerid, 334)) return SCM(playerid, COLOR_GREY, !"У вас нет бронежилета");
	new Float:armour = PI[playerid][pArmour];
	if(armour)
	{
		SCM(playerid, COLOR_LIGHTBLUE, !"Вы сняли бронежилет!");
		J_SetPlayerArmour(playerid, 0);
		str_2[0] = EOS, f(str_2,sizeof(str_2),"%s[%i] снял бронежилет.", PN(playerid), playerid);
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	else
	{
		if(GetPVarInt(playerid, !"armourtime") > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Можно использовать раз в минуту!");
		InvAdd(playerid, 334, -1);
		SCM(playerid, COLOR_LIGHTBLUE, !"Вы надели бронежилет. Используйте /armour чтобы снять его или надеть ещё раз.");
		J_SetPlayerArmour(playerid, 100);
		str_2[0] = EOS, f(str_2,sizeof(str_2),"%s[%i] одел бронежилет.", PN(playerid), playerid);
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		SetPVarInt(playerid, !"armourtime", global_time + 60);
	}
	return 1;
}
stock GetPlayerTenant(playerid, houseid)
{
	if(houseid == -1) return 0;
	for(new i; i < 5; i++)
	{
		if(HRoomOwner[houseid][i] == PI[playerid][pID]) return 1;
	}
	return 0;
}
CMD:house(playerid)
{
    if(!IsPlayerLogged[playerid]) return DeletePVar(playerid, !"SearchHouse");
	if(PI[playerid][pDemorgan]) return DeletePVar(playerid, !"SearchHouse"), SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать эту команду в этом месте!");
	new i2;
	str_1 = "{FFFFFF}Номер дома\t{FFFFFF}Город\t{dc143c}Налог\t{FFFFFF}Расстояние\n";
	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i) != 0)
		{
		    player_Global_Int[playerid][i2] = i;
			new gorod[10+8];
			SetString(gorod, gSAZonesCity[GetCityName(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y])][SAZONE_NAME]);
			new nalog;
			if(PI[playerid][pImprovement][1]) nalog = HouseInfo[i][hNalog]/2;
			else nalog = HouseInfo[i][hNalog];
		    new Float:Distance = GetPlayerDistanceFromPoint(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
		 	f(str_1, sizeof(str_1), "%s{FFFFFF}[%i] Дом №%i\t%s\t{dc143c}%i\t\t{ffffff}%.2f\n", str_1, i2+1, i, gorod, nalog, Distance);
			i2++;
		}
	}
	if(!i2) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Выбор дома", !"{73B461}-{ffffff} У вас нет доступных домов для просмотра!", !"Закрыть", !""),DeletePVar(playerid, !"SearchHouse");
	return SPD(playerid, 174, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Выбор дома", str_1, !"Выбор", !"Отмена");
}
stock GetPlayerHouses(playerid)
{
    for(new i; i < OWNABLEHOUSES; i++) if(GetString(HouseInfo[i][hOwner],PN(playerid))) return 1;
	return -1;
}
alias:house("home", "hmenu");
CMD:usemed(playerid)
{
	if(!GetInvCount(playerid, 336)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У тебя нет аптечек!");
	if(GetPlayerVirtualWorld(playerid)==534) return 1;
	if(PI[playerid][pHeal] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении, аптечки тут не помогут!");
	new Float: Health = PlayerHealthAC[playerid];
	InvAdd(playerid, 336, -1);
	str_2[0] = EOS;
	f(str_2, sizeof(str_2), "%s употребил(а) лекарство", PN(playerid));
	ProxDetector(25, playerid, str_2, COLOR_PURPLE);
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выпили лекарство");
	if(Health <= 50) J_SetPlayerHealth(playerid, Health + 50);
	else J_SetPlayerHealth(playerid, 100);
	PI[playerid][pHospital] = 25;
	UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
 	J_ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
	return 1;
}
CMD:exit(playerid)
{
	new i = GetPlayerVirtualWorld(playerid) - 50;
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у двери дома!");
	if(HouseInfo[i][hGarage] >= 1) SPD(playerid, 9989, DIALOG_STYLE_LIST, !"", !"{FFFFFF}Выйти на улицу\nВойти в подвал\n{9FFF29}Войти в подвал с вентиляцией\n{FFC729}Войти в гараж", "Принять", "Отмена");
	else SPD(playerid, 9989, DIALOG_STYLE_LIST, !"", !"{FFFFFF}Выйти на улицу\nВойти в подвал\n{9FFF29}Войти в подвал с вентиляцией", "Принять", "Отмена");
	return 1;
}
CMD:lights(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 0;
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid)) return 0;
	if(GetEngineStatus(carid)) SetLightsStatus(carid, !GetLightsStatus(carid), playerid);
	else SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}Транспорт должен быть заведён!");
	return 1;
}
CMD:rules(playerid) return ShowRules(playerid);
CMD:makeleader(playerid, params[])
{
    if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используйте: /makeleader [id]");
	str_d[0] = EOS;
	for(new i = 1; i < MAX_ORGS; i++)
	{
		str_1[0] = EOS, f(str_1, sizeof str_1, "%s\n", global_OrgInfo[i][g_oName]);
		strcat(str_d, str_1);
	}
	str_1[0] = EOS, f(str_1, sizeof str_1, "%s", PN(targetid));
	SPD(playerid, 26, DIALOG_STYLE_LIST, str_1, str_d, !"Выбор", !"Отмена");
	MLPlayer[playerid] = targetid;
	return 1;
}
CMD:showbizinfo(playerid, params[])
{
    str_1[0] = EOS;
    //AC_FIX_DIALOG_F(playerid, 0);
	extract params -> new player:id, player:id2; else return SCM(playerid,COLOR_RED,!"Используйте: /showbizinfo [ID] [ID бизнеса]");
    if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
    if(playerid == id) return SCM(playerid, COLOR_GREY, !"Себе нельзя! /bizinfo - Дополнительно - Статистика бизнеса");
    if(!IsPlayerConnectEx(id)) return SCM(playerid,COLOR_RED,!"Игрок не найден");
    if(!ProxDetectorS(3.0, playerid, id, 1)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
	if(!GetString(PN(playerid), BizInfo[id2][bOwner]) || BizInfo[id2][bZam] != PI[playerid][pID]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Это не ваш бизнес!");
	str_1 = "День\tПрибыль\n";
	SPDf(id,0,DIALOG_STYLE_TABLIST_HEADERS,!"","Окей","","%s{FFFFFF}Понедельник\t{73B461}%i$\n{FFFFFF}Вторник\t{73B461}%i$\n{FFFFFF}Среда\t{73B461}%i$\n{FFFFFF}Четверг\t{73B461}%i$\n{FFFFFF}Пятница\t{73B461}%i$\n{FFFFFF}Суббота\t{73B461}%i$\n{FFFFFF}Воскресенье\t{73B461}%i$",str_1,BizInfo[id2][bDayOfWeak][0],BizInfo[id2][bDayOfWeak][1],BizInfo[id2][bDayOfWeak][2],BizInfo[id2][bDayOfWeak][3],BizInfo[id2][bDayOfWeak][4],BizInfo[id2][bDayOfWeak][5],BizInfo[id2][bDayOfWeak][6]);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно показали финансовую статистику %s.", PN(id));
	SCMf(id, COLOR_VALIK,"[Уведомление] {FFFFFF}Игрок %s показал вам финансовую статистику своего бизнеса.", PN(playerid));
	return 1;
}
CMD:showbadge(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет этого документа");
	if(GetPVarInt(playerid, !"reloader") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используйте: /showbadge [id]");
	if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	str_2[0] = EOS;
	new team = GetTeamID(playerid);
	new rank = PI[playerid][pRank];
	f(str_2, sizeof(str_2), "{FF9900}%s{FFFFFF}\n\nИмя: %s\nРанг: %s",global_OrgInfo[team][g_oName], PN(playerid), GetRankName(team, rank));
	SPD(id,0,0,"Удостоверение",str_2,"Ок","");
	f(str_2, sizeof(str_2), "%s показывает своё удостоверение %s", PN(playerid), PN(id));
	ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
	SetPVarInt(playerid, !"reloader",global_time+2);
	return 1;
}
CMD:showpass(playerid, params[])
{
	if(!IsValidPassport(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет паспорта");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используйте: /showpass [id]");
	if(GetPVarInt(playerid, !"reloaderpass") > global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
    if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
    if(PI[playerid][pShowDokument]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s показывает свой паспорт %s", PN(playerid), PN(id));
	SCMf(playerid, COLOR_LIGHTRED, "[Подсказка] {FFFFFF}Вы успешно показали свой паспорт игроку {FF6347}%s", PN(id));
	SetPVarInt(playerid, !"reloaderpass", global_time + 10);
	return ShowPassport(playerid, id);
}
CMD:carpass(playerid, params[])
{
	if(GetPVarInt(playerid, !"reloader") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
    extract params -> new player:target, car; else return SCM(playerid, COLOR_RED, !"Используйте: /carpass [id игрока] [id машины]");
	if(target == INVALID_PLAYER_ID) return 0;
    if(!ProxDetectorS(5.0, playerid, target)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");
    new number = GetVehicleID(car);
    if(IsPlayerHaveCar(playerid, number) != 1) return SCM(playerid, COLOR_GREY, !"Это не ваш транспорт");
    f(str_1, sizeof(str_1), "%s показывает тех. паспорт %s", PN(playerid), PN(target));
	ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
    func_OwnablePass(target, car);
	SCMf(playerid, COLOR_GREEN, "Вы успешно показали документы на транспорт игроку {FFFFFF}%s", PN(target));
	SetPVarInt(playerid, !"reloader", global_time + 2);
	return 1;
}
CMD:showskill(playerid, params[])
{
	if(GetPVarInt(playerid, !"reloader") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используйте: /showskill [id]");
    if(!ProxDetectorS(5.0, playerid, id))  return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	ShowSkills(id, playerid);
	SetPlayerChatBubble(playerid, !"Что-то показал(а).", COLOR_PURPLE, 10.0, 5000);
	SCMf(playerid,COLOR_GREEN,"Вы успешно показали свои навыки игроку %s",PN(id));
	return SetPVarInt(playerid, !"reloader",global_time+2);
}
CMD:showmc(playerid, params[])
{
	if(!IsValidPassport(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет этого документа!");
	if(GetPVarInt(playerid, !"reloader") > global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /showmc [id]");
    if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(PI[playerid][pShowDokument]) {
    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
    }
	str_1[0] = EOS, str_2[0] = EOS;
    strcat(str_1,!"{FFFFFF}");
	f(str_2, sizeof(str_2), "Имя: %s\n\n", PN(playerid));
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "Дата: %s\n", MedCardInfo[playerid][mcDate]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "Статус: %s\n", CheckMedCardTag[MedCardInfo[playerid][mcState]][0]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{CEAD2A}Наркозависимость: %i", PI[playerid][pAllRepl]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{CEAD2A}Коронавирус: %i%", PI[playerid][pCorona]);
	strcat(str_1, str_2);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, "Мед. карта", str_1, "Ок", "");
	f(str_1, sizeof(str_1), "%s показывает свою мед. карту %s", PN(playerid), PN(id));
	ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	f(str_1, sizeof(str_1), "Вы успешно показали свою мед. карту игроку {FFFFFF}%s", PN(id));
	SCM(playerid, COLOR_GREEN, str_1);
	SetPVarInt(playerid, !"reloader",global_time + 10);
	return 1;
}
CMD:setgangzone(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new gang; else return SCM(playerid, COLOR_RED, !"Используйте: /setgangzone [11 - 15 или 25]");
	new zone = GetPlayerGangZone(playerid);
	if(CaptureZone == zone) return SCM(playerid, COLOR_GREY, !"Эту зону уже захватывают");
	if(GZInfo[zone][gzIsFamily] != false)
	{
		//family
		if(CheckAdmin(playerid, 8, 2)) return 1;
		new id = FamilyID_(gang);
		if(FamilyInfo[id][famID] == -1) return SCMf(playerid, COLOR_RED, "Используйте: /setgangzone [0-%i]", TOTAL_FAMILYS-1);
		GangZone_Flash[1] = -1;
		GangZone_FlashColor[1] = -1;
		GangZoneHideForAll(GangZone[zone]);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ id ][famChatColor] ]);
		GangZoneShowForAll(GangZone[zone],HexStr(str_1));
	}
	else
	{
		if((11 > gang || gang > 15) && gang != 25) return SCM(playerid, COLOR_RED, !"Используйте: /setgangzone [11 - 15, 25]");
		new lastgang = GZInfo[zone][gzFracID];
		GangZone_Flash[0] = -1;
		GangZone_FlashColor[0] = -1;
		GangZoneHideForAll(GangZone[zone]);
		GangZoneShowForAll(GangZone[zone],TeamColors[gang]);
		STM(gang,COLOR_VALIK,"[Информация] {FFFFFF}Ваша банда захватила новую территорию");
		if(gang != -1) UpdateDorm(gang);
		if(lastgang != -1) UpdateDorm(lastgang);
	}
	SendAdminsMessagef(COLOR_ORANGE,"А: %s[%i] перекрасил %s территорию(ID: %i) (TEAM old: %i | new: %i)", PN(playerid), playerid, GZInfo[zone][gzIsFamily] != false ? ("семейную") : ("гетто"), zone, GZInfo[zone][gzFracID], gang);
	GZInfo[zone][gzFracID] = gang;
    SaveGangZone(zone);
	return 1;
}
CMD:sellgangzone(playerid, params[])
{
    new zone = GetPlayerGangZone(playerid);
	extract params -> new player:giveplayerid, count; else return SCM(playerid, COLOR_GREY, !"Используй: /sellgangzone [ID/Name] [Цена]");
    if(!ProxDetectorS(2.0, playerid, giveplayerid, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
	if(!IsAtGang(playerid) || !IsAtGang(giveplayerid))return SCM(playerid, COLOR_GREY, !"Либо вы либо тот кому вы хотите продать зону , не состоит в банде!");
	if(GZInfo[zone][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Это не ваша зона");
	if(giveplayerid == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете продать самому себе!");
	if(PI[playerid][pRank] != 10) return SCM(playerid, COLOR_GREY, !"Только лидер лидеру может продавать зоны!");
	if(CaptureZone == zone) return SCM(playerid, COLOR_GREY, !"Эту зону уже захватывают");
	if(count<0)return SCM(playerid, COLOR_RED, !"Вы указываете отрицательную сумму? серьезно? вы хотите ему заплатить?");
	if(PI[giveplayerid][pMoney]< count)return SCM(playerid, COLOR_RED, !"У этого бандита недостаточно денег чтобы оплатить!");
 	SellGzone[giveplayerid] = count;
	SellPGzone[giveplayerid] = playerid;
 	SCM(playerid, COLOR_GREY, !"Вы отправили предложение о покупке территории!");
	f(str_2,sizeof(str_2),"Игрок %s предлагает купить у него территорию за %i$\nВы согласны?",PN(playerid),count);
	SPD(giveplayerid,377,0,"Информация",str_2,"Согласен","Отклонить");
	return 1;
}
CMD:capture(playerid, params[])
{
	if(!IsAtGang(playerid)) return SCM(playerid, COLOR_GREY, !"Вы должны быть в банде чтоб использовать эту функцию.");
	if(PI[playerid][pRank] < 9) return SCM(playerid, COLOR_GREY, !"Для захвата зоны необходимо иметь ранг не менее 9-го");
	new h, m, s; gettime(h,m,s);
	if(h<11 || 22<h) return SCM(playerid, COLOR_GREY, !"Слишком рано проводить нападение.");
	if(CaptureTime[0]>0 || CaptureTime[1]>0) return SCM(playerid, COLOR_GREY, !"Уже идет атака на один из районов города.");
    new Atac = GetTeamID(playerid);
    new zone = GetPlayerGangZone(playerid);
    if(zone == -1 || zone > 130) return SCM(playerid, COLOR_GREY, !"Вы не находитесь ни в одной из зон");
	if(!IsGangToZone(Atac, zone, 50.0)) return SCM(playerid, COLOR_GREY, !"Для захвата зоны хотябы половина всех членов банды должны присутствовать на захвате");
    if(GZInfo[zone][gzFracID] == Atac) return SCM(playerid, COLOR_GREY, !"Это ваша зона");
	if(!GZInfo[zone][gzFracID])
	{
		GangZone_Flash[0] = -1;
		GangZone_FlashColor[0] = -1;
	    GangZoneHideForAll(GangZone[zone]);
        GangZoneShowForAll(GangZone[zone],TeamColors[Atac]);
        GZInfo[zone][gzFracID] = Atac;
        STM(Atac,COLOR_VALIK,"Ваша банда захватила новую территорию");
        UpdateDorm(Atac);
        SaveGangZone(zone);
	}else{
	    if(IsTeamConnected(GZInfo[zone][gzFracID])<3) return SCM(playerid, COLOR_GREY, !"Для захвата зоны должен быть онлайн хотябы 3 членов банды владеющей этой зоной");
	    if(IsTeamConnected(Atac)<3) return SCM(playerid, COLOR_GREY, !"Для захвата зоны должен быть онлайн хотябы 3 членов банды.");
		STM(Atac,COLOR_VALIK,"Ваша банда начала захват зоны, продержитесь 10 минут");
		STM(GZInfo[zone][gzFracID],COLOR_RED,"На 1-у из ваших зон напали, у вас 10 минут чтобы отбить зону");
		//
		SendAdminsMessagef(COLOR_ORANGE,"[A] Банда %s [%s(%i)] начала захват территории банды %s",global_OrgInfo[Atac][g_oName], PN(playerid), playerid, global_OrgInfo[GZInfo[zone][gzFracID]][g_oName]);
		///
		CaptureZone = zone;
		CaptureDef = GZInfo[zone][gzFracID];
		CaptureAtac = Atac;
		CaptureAtacKill = 0;
		CaptureDefKill = 0;
		CaptureTime[0] = 10;
		CaptureTime[1] = 0;//10 минут
		GangZoneFlashForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
		GangZone_Flash[0] = CaptureZone;
		GangZone_FlashColor[0] = TeamColors[CaptureAtac];
	}
	return 1;
}
CMD:slap(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
	extract params -> new player:id, type; else return SCM(playerid, COLOR_RED, !"Используй: /slap [id] [1 - вверх/2 - вниз]");
	if(type > 2 || type < 1) return SCM(playerid, COLOR_RED, !"Используй: /slap [id] [1 - вверх/2 - вниз]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"Игрок не законектился еще!");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	if(type == 1) J_SetPlayerPos(id,X,Y,Z+5);
	else J_SetPlayerPos(id,X,Y,Z-5);
	SendAdminsMessagef(COLOR_GREY, "[A] А: %s[%i] дал поджопник %s[%i]", PN(playerid),playerid,PN(id),id);
	return 1; //////aml(1, playerid, PN(id), "подкинул игрока");
}
CMD:slapall(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
	extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /slapall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /slapall [радиус > 0 или < 100]");
	new Float:x, Float:y, Float:z;
    foreach(new i: PlayerPlayersStream[playerid])
    {
    	if(i == playerid) continue;
        GetPlayerPos(playerid, x, y, z);
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z)) callcmd::slap(playerid, IntToStr(i));
    }
    return 1;
}
CMD:weap(playerid, params[])
{
	if(CheckAdmin(playerid, 2)) return 1;
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /weap [id]");
	if(target == INVALID_PLAYER_ID) return 0;
   	ResetPlayerWeapons(target);
   	return SCMf(playerid, COLOR_LIGHTBLUE, "Вы отобрали оружие у игрока %s[%i]", PN(target), target);
}
CMD:sprunk(playerid)
{
	if(!GetInvCount(playerid, 330))
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У тебя нет спранка!");

    new
		Float:Health = PlayerHealthAC[playerid];
    if(Health <= 92.0)
		J_SetPlayerHealth(playerid, Health + 8);

    else
		J_SetPlayerHealth(playerid, 100);

	InvAdd(playerid, 330, -1);
    f(str_2, sizeof(str_2), "%s выпил(а) банку спранка", PN(playerid));
    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
    return 1;
}
CMD:beer(playerid)
{
	if(!GetInvCount(playerid, 331)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У тебя нет пива!");
	new Float:Health = PlayerHealthAC[playerid];
    if(Health <= 90.0) J_SetPlayerHealth(playerid, Health + 10);
    else J_SetPlayerHealth(playerid, 100);
	str_2[0] = EOS;
    InvAdd(playerid, 331, -1);
    f(str_2, sizeof(str_2), "%s выпил(а) бутылку пива", PN(playerid));
    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
    return 1;
}
CMD:eat(playerid)
{
	if(PI[playerid][pHeal] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
	str_2[0] = EOS;
    f(str_2, sizeof(str_2), "Еда\tКоличество\nЧипсы\t%i\nРыбу\t%i", GetInvCount(playerid, 329), GetInvCount(playerid, 358));
	SPD(playerid, 3303, 5, "{e4db5e}Кушать", str_2, "Принять", "Отмена");
	return 1;
}
CMD:fwarn(playerid, params[])
{
	if(PI[playerid][pRank] == 0 && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, !"Вы не можете это сделать!");
	extract params -> new player:id, string:reason[140]; else return SCM(playerid, COLOR_RED, !"Используй: /fwarn [id] [причина]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
    if(!IsGiveWarn(playerid, id)) return SCM(playerid, COLOR_RED, !"Вы не можете ему дать выговор!");
    if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"Вы не можете выдать варн лидеру");
    if(PI[playerid][pRank]==PI[id][pRank])return SCM(playerid, COLOR_RED, !"Вы не можете ему дать выговор!");
    PI[id][pFWarns] ++;
    UpdatePlayerDataInt(id, "FWarns", PI[id][pFWarns]);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы дали выговор игроку %s с причиной %s",PN(id),reason);
    SCMf(id, COLOR_LIGHTRED, "%s дал вам выговор с причиной %s",PN(playerid),reason);
	if(PI[id][pFWarns] >= 3)
	{
	    SCM(id,COLOR_GREY,!"Вы были автоматически выгнаны из организации т.к у вас больше 2-х выговоров");
	    f(str_2,sizeof(str_2),"%s покидает нашу организацию т.к у него больше 2-х выговоров",PN(id));
	    STM(PI[id][pMember],COLOR_GREY,str_2);
	    PI[id][pFWarns] =
        PI[id][pRank] =
        PI[id][pJob] =
	    PI[id][pMember] =
	    PI[id][pDCTime] = 0;
	    UpdatePlayerDataInt(id, "DCTime", 0);
	    UpdatePlayerDataInt(id, "Job", 0);
	    UpdatePlayerDataInt(id, "FWarns", 0);
	    UpdatePlayerDataInt(id, "Rank", 0);
	    UpdatePlayerDataInt(id, "Member", 0);
	    SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
        SetBumSkin(id);
    	//PlayerSpawn(id);
	}
	return 1;
}
CMD:unfwarn(playerid, params[])
{
	if(PI[playerid][pRank] == 0 && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_GREY, !"Вы не можете это сделать!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /unfwarn [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_RED, !"Вы не можете снять выговор этому человеку");
	if(PI[id][pFWarns] == 0) return SCM(playerid, COLOR_RED, !"У этого человека нет выговоров!");
	if(id==playerid)return SCM(playerid, COLOR_RED, !"Вы не можете снять выговор самому себе!");
    PI[id][pFWarns] --;
    UpdatePlayerDataInt(id, "FWarns", PI[id][pFWarns]);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы сняли выговор игроку %s",PN(id));
    SCMf(id, COLOR_LIGHTRED, "%s снял вам выговор",PN(playerid));
	return 1;
}
CMD:Newsredak(playerid)
{
   	if(!IsANews(playerid)) return SCM(playerid, COLOR_GREY, !"Только для сотрудников СNN!");
	if(PI[playerid][pRank]<2)return SCM(playerid, COLOR_RED, !"Отказано в доступе! (Доступно с 2 ранга!)");
	static bstr[4096];
	bstr[0] = EOS;
	foreach(new id: Player)
	{
		if(AddTimeMessages[id] > 0)
		{
			if(vipob[id] > 0) f(bstr,sizeof(bstr),"{fcaa4d}[VIP] {ffffff}%s Отправитель: %s			%ic\n",bstr,PN(id),global_time - AddTimeMessages[id]);
            else f(bstr,sizeof(bstr),"%s Отправитель: %s			%ic\n",bstr,PN(id),global_time - AddTimeMessages[id]);
		}
	}
	if(strlen(bstr) > 0) SPD(playerid, 556, 2, !"Редакция", bstr, !"Выбрать", !"Закрыть");
	else SPD(playerid, 0, 0, !"Редакция", !"На данный момент сообщений нет", !"Закрыть", !"");
	return 1;
}
CMD:ad(playerid, const params[])
{
    if(!PI[playerid][pTelNum] || !CheckPhones(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет мобильного телефона или sim карты!");
    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, !"Подавать рекламу можно только с 2-го уровня");
    if(AddTimeMessages[playerid] > 0) return SCM(playerid, COLOR_RED, !"Вы уже подавали объявление на редакцию!");
    if(TimeMessage[playerid] > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете так часто подавать объявления!");
    if(PI[playerid][pImprovement][3])
    {
		extract params -> new type, string:text[100]; else
		{
			SCM(playerid, -1, !"Используй: /ad [Тип: 1 - обычное, 2 - VIP] [Текст]");
            SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость Standart обьявления - 5 000$");
            return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость VIP обьявления - 25 000$");
		}
	    if(!(1 <= strlen(text) <= 100)) return SCM(playerid, COLOR_GREY, !"Количество символов в объявлении не может быть менее 1 или более 100.");
        if(type == 1)
        {
            if(GetMoney(playerid) < 5000)
	            return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

            SCM(playerid, COLOR_YELLOW, !"Ваше сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = global_time;
            TimeMessage[playerid] = global_time + 20;
            f(AddMessages[playerid], 100, "%s", text);
        }
        else if(type == 2)
        {
            if(GetMoney(playerid) < 25000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас не достаточно денег на покупку VIP объявления. [25 000$]");
            SCM(playerid, -1, !"{C17C2D}Ваше VIP сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = global_time;
            TimeMessage[playerid] = global_time + 5;
            vipob[playerid] = 1;
            f(AddMessages[playerid], 100, "%s", text);
		}
	    else return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Используйте 1 - обычное обьявление, 2 - VIP обьявление!");
    }
    else
    {
        if(!IsPlayerInRangeOfPoint(playerid, 50.0, -190.27, 1338.79, 1500.98)) return SCM(playerid, COLOR_GREY, !"Вы не можете тут подать объявление! Отправляйтесь в LS/SF/LV-Радиостанции");
		extract params -> new type, string:text[100]; else
        {
            SCM(playerid, -1, !"Используй: /ad [Тип: 1 - обычное, 2 - VIP] [Текст]");
            SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость Standart обьявления - 5 000$");
            return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость VIP обьявления - 25 000$");
        }
	    if(!(1 <= strlen(text) <= 100)) return SCM(playerid, COLOR_GREY, !"Количество символов в объявлении не может быть менее 1 или более 100.");
        if(type == 1)
        {
            if(GetMoney(playerid) < 5000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
            SCM(playerid, COLOR_YELLOW, !"Ваше сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = global_time;
            TimeMessage[playerid] = global_time + 20;
            f(AddMessages[playerid], 100, "%s", text);
        }
        else if(type == 2)
        {
            if(GetMoney(playerid) < 25000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас не достаточно денег на покупку VIP объявления. [25 000$]");
            SCM(playerid, -1, !"{C17C2D}Ваше VIP сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = global_time;
            TimeMessage[playerid] = global_time + 5;
            vipob[playerid] = 1;
            f(AddMessages[playerid], 100, "%s", text);
        }
	    else return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Используйте 1 - обычное обьявление, 2 - VIP обьявление!");
    }
    return 1;
}
CMD:number(playerid, params[])
{
	if(!GetInvCount(playerid, 318)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет телефонной книжки");
	extract params -> new player:targetid; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /number [id] чтобы узнать номер игрока!");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
	if(PI[targetid][pAdmin]) return 0;
    if(!PI[targetid][pTelNum]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет sim карты!");
    SetPlayerChatBubble(playerid, !"Смотрит телефонную книгу", COLOR_PURPLE, 10.0, 5000);
    SCMf(playerid, -1, "{FFFFFF}%s[%i]:    {33CCFF}%i", PN(targetid), targetid, PI[targetid][pTelNum]);
	return 1;
}
CMD:mask(playerid)
{
    if(Cuffed[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете двигаться");
    if(PI[playerid][pMaskON]==0)
    {
		if(!GetInvCount(playerid, 333)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет маски!");
		InvAdd(playerid, 333, -1);
		SetPlayerColor(playerid,0x665E5E01);
		new id = pFamilyID(playerid);
		if(id == -1)
		{
			if(FamilyInfo[id][famShadow] == 0)
			{
				PI[playerid][pMaskON] = 600;
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно одели маску.");
				SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски 10 минут, после исхода времени ее придётся выбросить.");
			}
		}
		else
		{
		    PI[playerid][pMaskON] = 1800;
		    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно одели маску.");
		    SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски 30 минут, после исхода времени ее придётся выбросить.");
		}
		J_ApplyAnimation( playerid, "SHOP", "ROB_shifty", 4.1, 0, 1, 1, 0, 0 );
    }
    else
	{
	    PI[playerid][pMaskON]=0;
		if(TeamDuty{playerid}) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		else SetPlayerColor(playerid,0xFFFFFF80);
        SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно выкинули маску.");
	}
	return 1;
}
CMD:settime(playerid, params[])
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract params -> new hour; else return SCM(playerid, COLOR_RED, !"Используй: /settime [hour]");
	if(CheckDostup(playerid,!"time")) return 1;
	return SetWorldTime(hour);
}
CMD:unban(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /unban [name]");
    if(!IsBannedName(name)) return SCM(playerid, -1, !"Этот игрок не забанен");
    mysql_escape_string(name, UnbanName[playerid]);
    static admin[MAX_PLAYER_NAME],reason[31];
    admin[0] = EOS, reason[0] = EOS;
	new seconds;
    str_1[0] = EOS, f(str_1, sizeof(str_1), "SELECT `BanAdmin`,`BanReason`,`BanSeconds` FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(mysql, str_1);
	if(cache_num_rows() > 0)
	{
        cache_get_string(0, !"BanAdmin", admin);
        cache_get_string(0, !"BanReason", reason);
       	cache_get_int(0, !"BanSeconds",seconds);
		new dima;
		if(floatround((seconds-global_time) / 60 / 60 / 24) > 1)
		{
			str_1 = "дней";
			dima = floatround((seconds-global_time) / 60 / 60 / 24, floatround_ceil);
		}
		else if(floatround((seconds-global_time) / 60 / 60) > 1)
		{
	 		str_1 = "час(ов)";
	 		dima = floatround((seconds-global_time) / 60 / 60, floatround_ceil);
		}
		else
		{
	 		str_1 = "минут";
	 		dima = floatround((seconds-global_time) / 60, floatround_ceil);
		}
		SPDf(playerid, 91, DIALOG_STYLE_MSGBOX, !"Информация о забаненном", !"Разбанить", !"Отмена", "{FFFFFF}Блокиратор: \t{FF0000}%s\n{FFFFFF}Причина: \t{FF0000}%s\n{FFFFFF}До разблокировки: \t\t{FF0000}%i %s", admin, reason, dima, str_1);
	}
	cache_delete(result);
	return 1;
}
public: ShowCars(playerid) callcmd::cars(playerid);
CMD:cars(playerid)
{
	str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `Model`, `IDownable`, `typeconnect`,`Shtraf`,`Pos_X`,`Pos_Y`,`Pos_Z`,`SlotItem` FROM `ownable` WHERE `Owner` = '%s' AND `OwnerFamily` = '-1' LIMIT 21", PN(playerid));
	mysql_tquery(mysql, str_q, "Query_ShowPlayerCars", "iii",playerid,0,0);
}
public: Query_ShowPlayerCars(playerid, listitem, type)
{
	switch(type)
	{
		case 0:
		{
			new id2 = cache_num_rows();
			if(!id2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного транспорта!");
			str_1[0] = EOS;
			for(new i; i < id2; i++)
			{
				cache_get_int(i, !"ID", player_GlobalID[playerid][i]);
				new model,id1,typeconnect;
				cache_get_int(i, !"Model", model);
				cache_get_int(i, !"IDownable", id1);
				cache_get_int(i, !"typeconnect", typeconnect);
				if(id1 < 10) f(str_1, sizeof(str_1), "%s\n{FF6347}[Не загружен]{FFFFFF} %s%s\n", str_1, InfoConfigVehicle[SearchVehicleName(model)][Model_Name], typeconnect == 1 ? "\t{cccccc}- загружается при входе" : "");
				else
				{
					player_Global_Int[playerid][i] = id1;
					new shtraf,item[8];
					cache_get_int(i, !"Shtraf", shtraf);
					str_q[0] = EOS, cache_get_string(i, !"SlotItem", str_q), sscanf(str_q, "p<,>a<i>[8]", item);
					str_2[0] = EOS;
					if(shtraf) SetString(str_2, "{FF6347}[X]{FFFFFF}");
					else if(SearchVehicleToStandartPark(id1)) SetString(str_2, "{FF6347}[Не припаркован]{FFFFFF}");
					else SetString(str_2, SelectModCar[SearchSelectModCar(item[6])][namemod]);
					f(str_1, sizeof(str_1), "%s\n%s %s(%i)%s\n", str_1, str_2, InfoConfigVehicle[SearchVehicleName(model)][Model_Name], id1, typeconnect == 1 ? "\t{cccccc}- загружается при входе" : "");
				}
			}
			SPD(playerid, 162, DIALOG_STYLE_LIST, !"Мой транспорт", str_1, !"Выбор", !"");
		}
		case 1:
		{
			if(!cache_num_rows()) return 1;
			new IDown,connect,IDmySQL;
			cache_get_int(0, !"IDownable", IDown);
			cache_get_int(0, !"typeconnect", connect);
			cache_get_int(0, !"ID", IDmySQL);
			if(IDown < 2)
			{
				SetPVarInt(playerid, !"ListOwnableCars", listitem);
				new model;
				cache_get_int(0, !"Model", model);
				str_2[0] = EOS, f(str_2, sizeof(str_2), "Инструменты для %s", InfoConfigVehicle[SearchVehicleName(model)][Model_Name]);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "Загрузить машину\n%s", connect == 1 ? "Не загружать при авторизации" : "Загрузить при авторизации");
				return SPD(playerid, 169, DIALOG_STYLE_LIST, str_2, str_1, !"Выбор", !"Отмена");
			}
			new carid = player_Global_Int[playerid][listitem];
			ShowVeh[playerid] = carid;
			new number = GetVehicleID(carid);
			if(IsPlayerHaveCar(playerid, number) == 1)
			{
				SetPVarInt(playerid, !"ListOwnableCars", listitem);
				if(CarInfo[number][cShtraf] > 0)
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт стоит на штрафстоянке, необходимо внести залог в банке!");
					SCM(playerid, -1, !"Местоположение авто отмечено на миникарте красным маркером.");
					new Float:X, Float:Y, Float:Z;
					GetVehiclePos(number, X, Y, Z);
					return EnableGPSForPlayer(playerid, X, Y, Z);
				}
				str_2[0] = EOS, f(str_2, sizeof(str_2), "Инструменты для %s (%i)", InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name], carid);
				str_1[0] = EOS, f(str_1, sizeof(str_1), "%s\n%s\nПрипарковать\nНайти\n%s\n{73B461}Информация о авто (Паспорт)\n%s\n%s\n%s\n%s\n{FF0000}Выгрузить",\
				CarInfo[number][cLock] == true ? "{FF6347}Открыть" : "{9ACD32}Закрыть",CarInfo[number][cKeyIN] == true ? "{9ACD32}Вытащить ключи" : "{FF6347}Вставить ключи",
				CarInfo[number][cAlarmON] == true ? "{9ACD32}Выключить сигнализацию" : "{FF6347}Включить сигнализацию",IsPlayerRegCar(playerid, number) == 1 ? "{73B461}Очистить список посредников \"{FFD700}/keys{73B461}\"" : "{73B461}Вернуть ключи",
				TwinTurbo[carid][cStatus] == true ? "Режим езды [ {E4A72B}Sport{FFFFFF} ]" : "Режим езды [ {73B461}Comfort{FFFFFF} ]",PI[playerid][pVIP] >= 3 ? "Заспавнить машину [ {9ACD32}1000${FFFFFF} ]" : "Заспавнить машину [ {FD4D3D}Недоступно{FFFFFF} ]",
				connect == 1 ? "Не загружать при авторизации" : "Загружать при авторизации");
				SPD(playerid, 163, DIALOG_STYLE_LIST, str_2, str_1, !"Выбор", !"Отмена");
			}
			else mysql_pqueryf(mysql, "UPDATE `ownable` SET `IDownable` = '-1' WHERE `ID` = '%i' LIMIT 1", IDmySQL);
		}
		case 2: //familyowner
		{
			new id2 = cache_num_rows();
			if(!id2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного транспорта переданного семье!");
			str_1[0] = EOS;
			for(new i; i < id2; i++)
			{
				cache_get_int(i, !"ID", player_GlobalID[playerid][i]);
				new model,id1;
				cache_get_int(i, !"Model", model);
				cache_get_int(i, !"IDownable", id1);
				if(id1 < 3) f(str_1, sizeof(str_1), "%s\n{FF6347}[Не загружен]{FFFFFF} %s%s\n", str_1, InfoConfigVehicle[SearchVehicleName(model)][Model_Name]);
				else
				{
					player_Global_Int[playerid][i] = id1;
					f(str_1, sizeof(str_1), "%s\n%s(%i)\n", str_1, InfoConfigVehicle[SearchVehicleName(model)][Model_Name], id1);
				}
			}
			SPD(playerid, 167, DIALOG_STYLE_LIST, !"Мой транспорт", str_1, !"Выбор", !"");
		}
		case 3:
		{
			if(!cache_num_rows()) return 1;
			cache_get_int(0, !"IDownable", player_Global_Int[playerid][100]);
			cache_get_int(0, !"ID", player_Global_Int[playerid][101]);
			cache_get_int(0, !"Model", player_Global_Int[playerid][102]);
			SPDf(playerid, 5044, DIALOG_STYLE_MSGBOX, "Перевод семейного транспорта в личный", "Выполнить", "Назад",\
			"Вы действительно хотите сделать семейный транспорт личным?\n\
			Транспорт: {ffd800}%s\n\
			Стоимость перевода: {ffd800}10 000 000$",InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][102])][Model_Name]);
		}
		case 4:
		{
			new count = 1, uid;
			str_1[0] = EOS;
			for(new i; i < 15; i++) player_GlobalID[playerid][i] = -2, player_Global_Int[playerid][i+10] = -1;
			for(new i; i < cache_num_rows(); i++)
			{
				cache_get_int(i, !"IDownable", player_GlobalID[playerid][i]);
				cache_get_int(i, !"Model", player_Global_Int[playerid][i+50]);
				cache_get_int(i, !"ID", player_Global_Int[playerid][i+10]);
				str_2[0] = EOS;
				if(player_GlobalID[playerid][i] > 1) 
				{
					cache_get_int(i, !"OwnerFamilyUID", uid);
					new uid_p = SearchPlayerForUID(uid);
					if(uid_p == -1)
					{
						//очищаем в бд -1
						new number = GetVehicleID(player_GlobalID[playerid][i]);
						if(number != INVALID_VEHICLE_ID)
						{
							SafeRemoveCar(number, number);
							f(str_2, sizeof(str_2),"{ffffff}[%i] %s\t \t[ в наличии ]\n", count, InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][i+50])][Model_Name]), strcat(str_1, str_2);
						}
						continue;
					}
					f(str_2, sizeof(str_2),"{FF5E5E}[%i] %s[carid: %i]\t \t{FF5E5E}[ взял %s ]\n", count, InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][i+50])][Model_Name], player_GlobalID[playerid][i], PN(uid_p));
				}
				else f(str_2, sizeof(str_2),"{ffffff}[%i] %s\t \t[ в наличии ]\n", count, InfoConfigVehicle[SearchVehicleName(player_Global_Int[playerid][i+50])][Model_Name]);
				strcat(str_1, str_2);
				count++;
			}
			str_2[0] = EOS, f(str_2, sizeof(str_2), "{ffd800}Всего доступно слотов: %i шт\t \t{CCCCCC}(Нажмите чтобы докупить)", 12-CountOwnableFamilyCars(playerid, true));
			strcat(str_1, str_2);
			SPD(playerid, 15219, DIALOG_STYLE_TABLIST, !"Автопарк семьи", str_1, !"Выбрать", !"Закрыть");
		}
	}
	return 1;
}
stock SearchSelectModCar(id)
{
	for(new i; i < sizeof(SelectModCar); i++) if(SelectModCar[i][idsmod] == id) return i;
    return 0;
}
CMD:bizinfo(playerid)
{
    if(!IsPlayerLogged[playerid]) return 0;
	if(PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать эту команду в этом месте!");
	if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
	str_1[0] = EOS;
	new i2;
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(GetString(BizInfo[i][bOwner], PN(playerid)) || BizInfo[i][bZam] == PI[playerid][pID])
		{
			player_Global_Int[playerid][i2] = i;
			f(str_1, sizeof(str_1), "%s{FFFFFF}%i. %s %s\n", str_1, i2+1, InfoBusinesses[BizInfo[i][bState]][BName], BizInfo[i][bLock] ? ("{FF6347}[Закрыт]") : ("{9ACD32}[Открыт]"));
			i2++;
		}
	}
	return SPD(playerid, 9761, DIALOG_STYLE_LIST, !"Мои бизнесы", str_1, !"Выбор", !"Отмена");
}
CMD:unjail(playerid, params[])
{
	if(CheckAdmin(playerid, 2)) return 1;
	extract params -> new player:target, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /unjail [id] [причина]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(CheckDostup(playerid,!"jail")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, " А: %s выпустил игрока %s. Причина: %s", PN(playerid), PN(target), reason);
	PI[target][pDemorgan] = 0;
	//aml(1, playerid, PN(target), "выпустил из джайла");
	return PlayerSpawn(target),SMD(playerid, "default unjail");
}
CMD:jail(playerid, params[])
{
	if(CheckAdmin(playerid, 2)) return 1;
	extract params -> new player:targetid, time, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /jail [id] [time] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(PI[targetid][pDemorgan] > 0) return SCM(playerid, COLOR_RED, !"Этот игрок уже в ДЕМОРГАНЕ!");
    if(time == 0) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя посадить на 0 минут");
    if(time > 1000) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя посадить больше чем на 1000 минут");
    if(PI[targetid][pDemorgan] > 0 && PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Ваш уровень не дает возможность менять время отсидки этого игрока.");
    if(CheckDostup(playerid,!"jail")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, " А: %s[%i] посадил игрока %s[%i] в деморган на %i минут. Причина: %s",PN(playerid), playerid,PN(targetid), targetid,time,reason);
	PlayerPlaySound(targetid, 1058, 0.0, 0.0, 0.0);
	ResetPlayerWeapons(targetid);
	PI[targetid][pDemorgan] = time*60;
	PI[targetid][pWanted] = 0;
	J_SetPlayerWantedLevel(targetid, 0);
	UpdatePlayerDataInt(targetid, "Demorgan", time*60);
	J_SetPlayerHealth(targetid,100);
	PlayerSpawn(targetid),SMD(playerid, "default jail");
    SavePunish(0, playerid, reason, targetid, time);
    PI[playerid][pAJail]++;
	return 1; //////aml(6, playerid, PN(targetid), reason, time);
}
CMD:incar(playerid, params[])
{
	new id,mesto;
	if(sscanf(params,"ud",id,mesto) || mesto < 1 || mesto > 3) return SCM(playerid, COLOR_RED, !"Используй: /incar [id] [id места(1-3)]");
	if(!ProxDetectorS(4,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(!TeamDuty{playerid}) return SCM(playerid,COLOR_RED,!"Вы не на дежурстве!");
	new imcop = IsACop(playerid);
	new cuffed = (imcop && Cuffed[id]);
	if( !cuffed ) return SCM(playerid, COLOR_GREY, !"Этот игрок не обездвижен");
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится в транспорте!");
    if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) >= 612) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете посадить игрока в эту машину!");
	PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), mesto);
    TogglePlayerControllable(id, false);
    f(str_1,150," %s затащил игрока %s в машину.",PN(playerid),PN(id));
    ProxDetector(25,playerid,str_1,COLOR_PURPLE);    
	return 1;
}
CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	new Float:Distance, Float:Distance_ = 100000.0;
	for(new i; i < sizeof(PrisonPos); i++)
	{
		Distance = GetPlayerDistanceFromPoint(playerid, PrisonPos[i][0],PrisonPos[i][1],PrisonPos[i][2]);
		if(Distance < Distance_) PlayerJailCP[playerid] = i, Distance_ = Distance;
	}
	for(new i; i < sizeof(PrisonPos); i++)
	{
		if(PlayerJailCP[playerid] == i) TogglePlayerDynamicCP(playerid,JailCP[i],true);
		else TogglePlayerDynamicCP(playerid,JailCP[i],false);
	}
    SCM(playerid, COLOR_LIGHTBLUE, !"Едьте на место обозначенное на карте красным маркером");
	return 1;
}
CMD:engine(playerid)
{
	if(GetPlayerState(playerid) != 2) return 0;
	if(engines[playerid]>global_time)return SCM(playerid, COLOR_GREY, !"Нельзя так часто заводить двигатель");
	new carid = GetPlayerVehicleID(playerid),
		number = GetVehicleID(carid);
	if(number != INVALID_VEHICLE_ID)
	{
		if(CarInfo[number][cOwnerFamily] != -1)
		{
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Этот транспорт зарезервирован на семью {9ACD32}%s", FamilyInfo[CarInfo[number][cOwnerFamily]-1][famName]);
			if(CarInfo[number][cOwnerFamilyUID] != PI[playerid][pID]) return RemovePlayerFromVehicle(playerid);
		}
	}
	if(IsAVelik(carid)) return 0;
	if(GetEngineStatus(carid) < 1)
	{
	    if(IsAArendCar(carid))
	    {
	        new rentid = GetArendCarID(carid);
	        if(ArendInfo[rentid][aRentID] != playerid) return 0;
	    }
	    if(GetPlayerVirtualWorld(playerid)!=1228)
	    {
		    if(IsACar(carid) && !GetInvCount(playerid, 757)) return 0;
		    if(IsABike(carid) && !GetInvCount(playerid, 758)) return 0;
		    if(IsABoat(carid) && !GetInvCount(playerid, 760)) return 0;
	    }
	    if(vTemp[carid][Fuel] > 0.0)
	    {
	        if(IsASellCar(number)) return 1;
   			if(!IsAOwnableCar(number) || CarInfo[number][cKeyIN])
		    {
			    new Float:Health;
			    GetVehicleHealth(carid, Health);
			    if(Health > 1500) Health = 1500.0;
			    else if(Health < 400) return SCM(playerid, COLOR_GREY, !"Вы не можете завести двигатель. Для его починки вызовите механика");
			    new UNEngine = floatround(2000.0 - Health);
			    if(UNEngine < 0) UNEngine = 0;
			    else if(UNEngine > 2000) UNEngine = 2000;
			    SetTimerEx("EngineVehicle", UNEngine, false, "ii", playerid, carid);
			    f(str_2, sizeof(str_2), " %s пытается завести двигатель", PN(playerid));
			    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
			    engines[playerid]=global_time+4;
			    new i = pTemp[playerid][pSellCar];
			    if(i != -1 && autoBazarInfo[i][autoBazarplayerid] == playerid) {
				    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Транспорт снят с продажи, из-за того что вы или транспорт покинули место!");
					autoBazarInfo[i][autoBazar2PosX] =
					autoBazarInfo[i][autoBazar2PosY] =
					autoBazarInfo[i][autoBazar2PosZ] = 0.0;
				    autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
				    autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
				    DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         			DestroyAutoBazarTable(i);
				    DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
			    	if(autoBazarInfo[i][autoBazarType] == 1) {
			    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			    	}
			    	else {
			    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			    	}
					pTemp[playerid][pSellCar] = -1;
				}
		    }
		    else SCM(playerid, COLOR_GREY, !"Ключи не вставлены");
	    }
	    else 
		{
			SendPlayerGameText_cef(playerid, "error","Уведомление","Необходимо залить топливо в данное транспортное средство",1500);
			SCM(playerid, COLOR_GREY, !"Необходимо залить топливо в данное транспортное средство");
		}
	}
	else
	{
		SetEngineStatus(carid,false, playerid);
		f(str_2,sizeof(str_2)," %s заглушил(а) двигатель",PN(playerid));
		ProxDetector(25.0,playerid,str_2,COLOR_PURPLE);
		//SpeedOFF(playerid, carid, 2);
	}
	return 1;
}
CMD:advokats(playerid)
{
 	foreach_player(i)
	{
		if(PI[i][pJob] == 6 && PI[i][pTelNum] != 0) f(str_2, sizeof(str_2), "{FFFFFF}%s(%i)\t\t\t%i", PN(i), i, PI[i][pTelNum]);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_2, !"Понял", !"");
}
CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid,COLOR_RED, !"Вы не полицейский!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /cuff [id/name]");
 	if(IsACop(id))return SCM(playerid, COLOR_GREY, !"Нельзя надеть наручники на  полицейского");
	if(!ProxDetectorS(1.5,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(CuffedTime[id] <= 0 || PlayerSpeed(id)) return SCM(playerid, COLOR_GREY, !"Сначала нужно оглушить игрока");
    if(Cuffed[id]) return SCM(playerid, COLOR_GREY, !"Игрок уже скован");
    if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Вы уже кого-то сковываете");
    if(PlayerOfCuff[id] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Игрока уже сковывают");
    PlayerOfCuff[playerid] = id;
    PlayerOfCuff[id] = playerid;
    TimeOfCuff[playerid] = 4;
    Cuffed[id]=true;
    Recuffer[id]=playerid;
	CuffedTime[id] = 30;
    f(str_2,sizeof(str_2)," %s начинает сковывать %s",PN(playerid),PN(id));
    ProxDetector(25,playerid,str_2,COLOR_PURPLE);
    J_ApplyAnimation(playerid, !"ROB_BANK", "CAT_Safe_Rob", 7.1, 0, 1, 1, 1, 0, 1);
	return 1;
}
CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid) && PI[playerid][pAdmin] < 1) return SCM(playerid,COLOR_RED, !"Вы не полицейский!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /uncuff [id/name]");
	if(!ProxDetectorS(2.5,playerid,id)) return SCM(playerid, -1, !"Вы далеко от игрока!");
	if(!Cuffed[id]) return SCM(playerid, -1, !"Игрок не скован");
	f(str_2,sizeof(str_2)," %s расковал %s",PN(playerid),PN(id));
	ProxDetector(25,playerid,str_2,COLOR_PURPLE);
	Cuffed[id] = false;
	CuffedTime[id] = 0;
	Recuffer[id]=INVALID_PLAYER_ID;
	TogglePlayerControllable(id,true);
	SetPlayerSpecialAction(id, 0);
	if(GotoInfo[playerid][gtID] == id)
	{
	    CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
	}
	return 1;
}
CMD:tpk_ahgll_zxcda(playerid)
{
    new Float:X, Float:Z, Float:Y, Float:A;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    ShiftCords(0, X, Y, A, 3.0);
    foreach_player(i)
    {
    	if(i == playerid) continue;
	    SetPlayerVirtualWorldEx(i,GetPlayerVirtualWorld(playerid));
	    SetPlayerInteriorEx(i,GetPlayerInterior(playerid));
	    if(GetPlayerState(i) != 2) J_SetPlayerPos(i, X+random(10), Y, Z);
	    else J_SetVehiclePos(GetPlayerVehicleID(i), X+random(10), Y, Z);
	    BizEntered[i] = BizEntered[playerid];
	    HouseEntered[i] = HouseEntered[playerid];
	    ParkingEntered[i] = ParkingEntered[playerid];
	}
	return 1;
}
CMD:freeze(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /freeze [id/name]");
	SendAdminsMessagef(COLOR_YELLOW, " А: %s заморозил игрока %s", PN(playerid), PN(id));
	TogglePlayerControllable(id, false);
	return 1;
}
CMD:unwarn(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid, string:reason[35]; else return SCM(playerid, COLOR_RED, !"Используй: /unwarn [id/name] [причина]");
	if(targetid == playerid) return 1;
	if(!PI[targetid][pWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У него нет предупреждений!");
	if(CheckDostup(playerid,!"warn")) return 1;
	SendAdminsMessagef(COLOR_YELLOW, " А: %s снял 1 варн игроку %s Причина: %s", PN(playerid), PN(targetid), reason);
	SCM(targetid, COLOR_GREEN, "[Информация] {FFFFFF}Администратор снял вам 1 предупреждение!");
	PI[targetid][pWarns] -= 1;
	UpdatePlayerDataInt(targetid, "Warns", PI[targetid][pWarns]);
	////aml(19, playerid, PN(targetid), reason);
	return 1;
}
CMD:unfreeze(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /unfreeze [id/name]");
	SendAdminsMessagef(COLOR_YELLOW, " А: %s разморозил игрока %s", PN(playerid), PN(targetid));
	return TogglePlayerControllable(targetid, true);
}
CMD:clear(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
    if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_GREY, !"Ваш ранг мал для этой операции. Необходим 5-й ранг.");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /clear [id/name]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
    PI[id][pWanted] = 0;
    J_SetPlayerWantedLevel(id, 0);
    f(str_2,sizeof(str_2),"Полицейский %s очистил розыск %s[%i]",PN(playerid), PN(id), id);
    SendCopsMessage(COLOR_LIGHTBLUE,str_2);
    SCMf(id,COLOR_LIGHTBLUE,"Полицейский %s очистил ваш розыск",PN(playerid));
    SCMf(playerid,COLOR_LIGHTBLUE,"Вы очистили розыск %s[%i]",PN(id), id);
	return 1;
}
CMD:setskin(playerid, params[])
{
    if(CheckAdmin(playerid)) return 1;
	extract params -> new player:id, skin, oll; else return SCM(playerid, COLOR_RED, !"Используй: /setskin [id] [0 - 311] [0/1]");
    if(oll < 0 || oll > 1) return 0;
    if(skin < 1) return 0;
    if(!IsPlayerConnectEx(id)) return 0;
    SetPlayerSkinEx(id, skin);
    TogglePlayerControllable(id, true);
    SCMf(id, COLOR_RED, "А: %s выдал вам %s скин.", PN(playerid), oll ? ("вечный") : ("временный"));
    SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] установил %s скин [ID: %i] игроку %s[%i]", PN(playerid), playerid, oll ? ("вечный") : ("временный"), skin, PN(id), id);
    if(oll == 1) PI[id][pSkin] = skin, UpdatePlayerDataInt(id, "Skin", skin); //aml(2, playerid, PN(id), "выдал вечный скин", skin);
    //else //aml(2, playerid, PN(id), "выдал временный скин", skin);
    return SCMf(playerid, -1, "Вы дали %s скин %i", PN(id), skin);
}
alias:setskin("skin");
CMD:givemoney(playerid, params[])
{
    if(CheckAdmin(playerid, 7)) return 1;
    extract params -> new id, money; else return SCM(playerid, COLOR_RED, !"Используй: /givemoney [id/name] [money]");
    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	GiveMoney(id, money, "выдала Администрация");
	SendAdminsMessagef(COLOR_GREEN, "[A] А: %s[%i] выдал %i$ игроку %s[%i]", PN(playerid), playerid, money, PN(id), id);
	return SCMf(playerid, -1, "Вы дали игроку %s $%i",PN(id), money);
}
cmd:id(playerid, params[])
{
    new targetid;
	if(sscanf(params, "u", targetid)) return SCM(playerid, COLOR_RED, !"Используй: /id [id/name]");
    new insert_pos, i;
	if(!IsNums(params) && strlen(params) < 3) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Введите минимум 3 символа для поиска!");
	if(!IsNums(params))
	{
		foreach_player(id)
		{
			if(IsPlayerNPC(id) || !IsPlayerConnectEx(playerid)) continue;
			str_1[0] = EOS;
			SetString(str_1, PN(playerid), 24);
			insert_pos = strfind(str_1, params, true);
			if(!(insert_pos == -1))
			{
				strins(str_1, "{FFFFFF}", strlen(params) + insert_pos);
				strins(str_1, "{FF8888}", insert_pos);
				IsPlayerTypeClient(id, str_d);
				SCMf(playerid, -1, "[%d] %s | Уровень: %d | UID: %d | packetloss: %0.2f (%s)", id, str_1, GetPlayerScore(id), PI[id][pID], NetStats_PacketLossPercent(id), str_d);
				i++;
			}
		}
	}
	else if(!(targetid == INVALID_PLAYER_ID) && !IsPlayerNPC(targetid))
	{
		IsPlayerTypeClient(targetid, str_d);
		return SCMf(playerid, -1, "[%d] %s | Уровень: %d | UID: %d | packetloss: %0.2f (%s)", targetid, PN(targetid), GetPlayerScore(targetid), PI[targetid][pID], NetStats_PacketLossPercent(targetid), str_d);
	}
	if(!i) SCMf(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Игрок \'%s\' не найден!", params);
    return 1;
}
CMD:admins(playerid)
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return callcmd::apanel(playerid);
  	new adm[2];
	foreach_player(i)
	{
		if(!IsPlayerLogged[i] || !PI[i][pAdmin]) continue;
		if(PlayerAFKTime[i] > 200) adm[1]++;
		adm[0]++;
	}
	SCMf(playerid, 0x33CC00FF, "Администрация онлайн: (в сети: %i, из них в АФК: %i)", adm[0], adm[1]);
	foreach_player(i)
	{
	    if(PI[i][pGuardMode] || (PI[i][pAdmin] <= 0)) continue;
		if(RecInfo[i][rPlayer] != INVALID_PLAYER_ID) SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - [%i lvl]  {FFFFFF} - {DC2020}/re %i- [AFK: %i]. Репутация: %i - Выговоры [%i/3]", PN(i), i, PI[i][pAdmin], RecInfo[i][rPlayer], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
		else if(NameIsFullDostup(i,4)) SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - {ff0000}Начальник {FFFFFF}- [AFK: %i]{FFFFFF}. Репутация: %i - Выговоры [%i/3]", PN(i), i, PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
		else SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - [%i lvl] -{FFFFFF} [AFK: %i]{FFFFFF}. Репутация: %i - Выговоры [%i/3]", PN(i), i, PI[i][pAdmin], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
	}
	return 1;
}
CMD:boom(playerid)
{
	if(ItemsInfo[AksSlot[playerid][5]][ItemID] != 2226 && ItemsInfo[AksSlot[playerid][5]][ItemID] != 2102) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На вас нет бумбокса/колонки!");
	if(bumboxobject[playerid])
	{
	    DestroyDynamicObject(bumboxobject[playerid]);
	    bumboxobject[playerid] = 0;
	    if(bumboxopen{playerid}) HideBoom(playerid);
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
	    DestroyDynamic3DTextLabel(b_box3D[playerid]);
	    DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
	}
	else
	{
	    if(IsPlayerInAnyVehicle(playerid))
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете поставить бумбокс/колонку в машине!");
  		foreach(new i: PlayerPlayersStream[playerid])
		{
			if(!bumboxobject[i]) {
				continue;
			}
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[i][0], BumBoxPos[i][1], BumBoxPos[i][2])) {
			    return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Кто-то по близости уже поставил бумбокс/колонку!");
			}
   		}
		GetPlayerPos(playerid, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]);
		J_ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		SCM(playerid, COLOR_GREEN, !"Вы успешно установили бумбокс на пол.");
		SCM(playerid, COLOR_GREEN, !"Для того чтобы открылся плейлист, нажмите ALT у бумбокса.");
		SetPlayerChatBubble(playerid, (ItemsInfo[AksSlot[playerid][5]][ItemID] == 2226) ? ("Положил бумбокс на землю") : ("Положил колонку на землю"), COLOR_PURPLE, 10.0, 5000);
		BumBoxPos[playerid][0] += 1.0;
		BumBoxPos[playerid][1] += 1.0;
		BumBoxPos[playerid][2] -= 1.0;
		bumboxobject[playerid] = CreateDynamicObject(ItemsInfo[AksSlot[playerid][5]][ItemID], BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 0.0, 0.0, 0.0);
		area_boombox[playerid] = CreateDynamicCircle(BumBoxPos[playerid][0], BumBoxPos[playerid][1], 30.0, 0, 0, -1);
		str_mes[0] = EOS,f(str_mes, sizeof(str_mes), "{2E8B57}Поставил: {FFFFFF}%s", PN(playerid));
        b_box3D[playerid] = CreateDynamic3DTextLabel(str_mes, 0xFFFFFFDD, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]+0.2, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 5.0);
	    RemovePlayerAttachedObject(playerid, 5);
	}
	return 1;
}
CMD:leaders(playerid)
{
	SCM(playerid, COLOR_RED, !"Лидеры онлайн:");
 	foreach_player(i)
	{
		if(PI[i][pRank] == 10) continue;
		static dirit[12];
		dirit[0] = EOS;
		if(!PI[i][pTelNum]) dirit = "Не имеется";
		else valstr(dirit, PI[i][pTelNum]);
		SCMf(playerid, 0x99CCFFFF, "{FFFFFF}%s[%i] - %s | Номер: %s{FFFFFF}%s", PN(i),i,global_OrgInfo[PI[i][pRank]][g_oName],dirit,PlayerAFKTime[i] > 1 ? " | AFK: %i секунд" : " ");
	}
	return SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF}Используйте /phone - menu, чтобы найти членов организаций.");
}
CMD:help(playerid) return SPD(playerid, 64, DIALOG_STYLE_LIST, !"Помощь по серверу", !"{B03131}Частые вопросы\n{AFAFAF}[CMD] Телефон\n{AFAFAF}[CMD] Работа\n{AFAFAF}[CMD] Организация\n{AFAFAF}[CMD] Дом\n{AFAFAF}[CMD] Бизнес\n{AFAFAF}[CMD] Личный транспорт\n{AFAFAF}[CMD] Транспорт\n{AFAFAF}[CMD] Анимации\n{AFAFAF}[CMD] Чаты\n{AFAFAF}[CMD] Админ\n{AFAFAF}[CMD] Похищение\n{AFAFAF}[CMD] Другое\n{AFAFAF}[FAQ] Скиллы оружий\n{AFAFAF}[FAQ] Работа\n{B03131}[FAQ] Правила проекта\n{B03131}[FAQ] Преимущества VIP\n{AFAFAF}[CMD] Отель\n{AFAFAF}[FAQ] Однорукий бандит\n{B03131}[INFO] Сайт/Форум/VK\n{AFAFAF}[INFO] Ответы на тесты\n{AFAFAF}[FAQ] Воровство материалов\n{AFAFAF}[FAQ] Развитие на ферме\n{AFAFAF}[FAQ] Банковская карта\n{AFAFAF}[FAQ] Рыболовля\n{AFAFAF}[FAQ] Ограбление матовозов\n{AFAFAF}[FAQ] Багажник\n{AFAFAF}[FAQ] Наркопритоны и Банды\n{AFAFAF}[CMD] Семья\n{AFAFAF}[FAQ] Ограбление банка\n{AFAFAF}[FAQ] Автозавод\n{AFAFAF}[FAQ] Спортивный зал/Навыки\n{AFAFAF}[FAQ] РП отыгровки\n{AFAFAF}[FAQ] Система трейлеров\n{AFAFAF}[FAQ] Галочка для семьи\n{AFAFAF}[FAQ] Бренд для семьи\n{AFAFAF}[FAQ] Улучшения для семьи\n{AFAFAF}[FAQ] Спортивный зал\n{AFAFAF}[FAQ] Заработок на нефтевышках\n", !"Выбор", !"Отмена");
CMD:settings(playerid) return ShowPlayerSettings(playerid);
CMD:stats(playerid) return ShowStats(playerid, playerid);
CMD:menu(playerid)
{
    if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid] != -1) return 0;
	if(CuffedTime[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"Вы обездвижены и не можете двигаться");
	if(Cuffed[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"Вы скованы и не можете двигаться");
	static text[23+1+12] = "{D2772C}Не использован";
	if(!GetString(PI[playerid][pPromo],"0")) fmt(text, "{D2772C}%s", PI[playerid][pPromo]);
	str_2[0] = EOS, f(str_2, sizeof str_2, "{B03131}[1]{FFFFFF} Действие персонажа\n\
	{B03131}[2]{FFFFFF} Навыки персонажа\n\
	{B03131}[3]{FFFFFF} Связь с администрацией\n\
	{B03131}[4]{FFFFFF} Помощь по серверу\n\
	{B03131}[5]{FFFFFF} Личные настройки\n\
	{B03131}[6]{FFFFFF} Донат\n\
	{B03131}[7]{FFFFFF} Телефон\n\
	{B03131}[8]{FFFFFF} История ников\n\
	{B03131}[9]{FFFFFF} История наказаний\n\
	{B03131}[10]{FFFFFF} Владельцы ADD VIP\n\
	{B03131}[11]{FFFFFF} Промо-код: %s\n\
	{B03131}[12]{FFFFFF} Система промо-кодов\n\
	{B03131}[13]{FFFFFF} Русский Стандарт [Пригласи друга]", text);
	return SPD(playerid, 722, DIALOG_STYLE_LIST, !"Игровое меню", str_2, !"Выбор", !"Отмена");
}
stock ShowReferalsInviteTD(playerid)
{
	if(ReferalsInviteTD[playerid]) return 1;
	#include modules/TEXTDRAWS/classic
	new count = CheckReferalsInviteCount(playerid);
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][8], "%d/12", count);
	if(PI[playerid][pInvLang])
    {
        PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][22], FixText("ПРИГЛАСИ ДРУГА"));
        PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], FixText("ПРИГЛАШЕННЫХ ДРУЗЕИ"));
        PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][5], FixText("ИНФО"));
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], FixText("ИНФОРМАЦИЯ"));
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], FixText("ЗАКРЫТЬ"));
    }
	new Float:X, Float:Y;
	PlayerTextDrawGetTextSize(playerid, GlobalTDPlayer[playerid][9], X, Y);
    PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][9], X + count * 16.4, Y);
	for(new i; i < 26; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	SelectTextDraw(playerid, 0xAA4040FF);
	ReferalsInviteTD[playerid] = true;
	return 1;
}
stock HideReferalsInviteTD(playerid)
{
	if(!ReferalsInviteTD[playerid]) return 1;
    for(new i; i < 26; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	CancelSelectTextDraw(playerid);
    ReferalsInviteTD[playerid] = false;
	return 1;
}
alias:menu("mm", "mn");
CMD:jobhelp(playerid) return ShowJobInfo(playerid, PI[playerid][pJob]);
CMD:quitjob(playerid)
{
	if(PI[playerid][pJob] == JOB_NONE) return SCM(playerid, COLOR_GREY, !"Вы и так уже безработный.");
    else if(InJob[playerid] != 0) return SCM(playerid, COLOR_GREY, !"В данный момент вы работаете. Закончите работу и введите /quitjob");
    PI[playerid][pJob] = JOB_NONE;
    UpdatePlayerDataInt(playerid, "Job", JOB_NONE);
    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно уволились с работы.");
    ResetPlayerWeapons(playerid);
    J_SetPlayerArmour(playerid, 0);
    ResetDynamicCPs(playerid);
	return 1;
}
CMD:unmute(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /unmute [id] [причина]");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(targetid == INVALID_PLAYER_ID) return 0;
	if(PI[targetid][pMuteTime] == 0) return SCM(playerid, COLOR_RED, !"У этого игрока нету заглушки!");
    if(CheckDostup(playerid,!"mute")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] снял заглушку игроку %s[%i] Причина: %s", PN(playerid), playerid, PN(targetid), targetid, reason);
	PI[targetid][pMuteTime] = 0;
	UpdatePlayerDataInt(targetid, "MuteTime", 0);
	return 1;
}
CMD:getherecar(playerid, params[])
{
	if(CheckAdmin(playerid, 1)) return 1;
    extract params -> new car; else return SCM(playerid, COLOR_RED, !"Используй: /getherecar [id]");
    if(car == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_RED, !"Используй: /getherecar [id]");
	new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    LinkVehicleToInterior(car, GetPlayerInterior(playerid));
    SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
    J_SetVehiclePos(car, X - 4, Y, Z + 1);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы телепортировали к себе авто, id: %i", car);
	SendAdminsMessagef(COLOR_GREY, "[%s] Телепортировал к себе авто, id: %i", PN(playerid), car);
	return 1;
}
CMD:gethere(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    new Float:X, Float:Z, Float:Y, Float:A;
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /gethere [id]");
    if(id == INVALID_PLAYER_ID || PI[id][pGuardMode]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    ShiftCords(0, X, Y, A, 3.0);
    SetPlayerVirtualWorldEx(id,GetPlayerVirtualWorld(playerid));
    SetPlayerInteriorEx(id,GetPlayerInterior(playerid));
    if(GetPlayerState(id) != 2) J_SetPlayerPos(id, X, Y, Z);
    else J_SetVehiclePos(GetPlayerVehicleID(id), X, Y, Z);
    BizEntered[id] = BizEntered[playerid];
    HouseEntered[id] = HouseEntered[playerid];
    ParkingEntered[id] = ParkingEntered[playerid];
    SCMf(id,COLOR_LIGHTBLUE, " Вы были телепортированы администратором  %s",PN(playerid));
    SCMf(playerid,COLOR_LIGHTBLUE, "Вы телепортировали к себе игрока %s",PN(id));
	SendAdminsMessagef(COLOR_GREY, "[%s] Телепортировал к себе игрока %s[%i]",PN(playerid),PN(id),id);
	return 1; //////aml(1, playerid, PN(id), "т/п к себе");
}
CMD:getwarn(playerid, params[])
{
    //AC_FIX_DIALOG_F(playerid, 0);
	if(CheckAdmin(playerid)) return 0;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /getwarn [id]");
    SPDf(playerid, 0, 0, !"", !"Закрыть", !"", "Игрок: %s\n___________________\n\n\nКПЗ: %i\nДеморган: %i\nЗаглушка: %i\nВарны: %i\n\n___________________", PN(targetid),PI[targetid][pDemogran],PI[targetid][pDemorgan],PI[targetid][pMuteTime],PI[targetid][pWarns]);
	return 1;
}
CMD:spcar(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new car; else return SCM(playerid, COLOR_RED, !"Используй: /spcar [id]");
	SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] зареспавнил авто под id: %i",PN(playerid), playerid, car);
	return J_SetVehicleToRespawn(car);
}
stock J_SetVehicleToRespawn(carid)
{
	SetVehicleToRespawn(carid);
	return 1;
}
CMD:rasform(playerid, ex[])
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract ex -> new str; else return SCM(playerid, COLOR_RED, !"Используй: /rasform [0 - ghetto / 1 - family]");
	new str1;
	if(str != 0)
	{
		if(CheckAdmin(playerid, 8, 2)) return 1;
		str = lv_id;
	}
	else str = GANGZONES, str1 = lv_id+1;
	for(new i=str1; i < str; i++)
	{
		if(i < lv_id) UpdateDorm(GZInfo[i][gzFracID]);
		GZInfo[i][gzFracID] = -1;
		GangZoneHideForAll(GangZone[i]);
		GangZoneShowForAll(GangZone[i], TeamColors[0]);
		SaveGangZone(i);
	}
	GangZone_Flash[0] = -1;
	GangZone_FlashColor[0] = -1;
	SCM(playerid, COLOR_VALIK, !"Вы успешно перекрасили все территории");
	return SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] расформировал все территории(GHETTO)",PN(playerid), playerid);
}
CMD:iwep(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /iwep [id]");
	f(str_2, sizeof(str_2), "На данный момент у игрока имеется данный вид оружия, которое он получил без помощи читов:\n\n");
    //for(new i; i < 13; i++) if(PI[target][pGuns][i] > 0 && PI[target][pAmmos][i] > 0) f(str_2,sizeof(str_2),"%s\nID оружия/патроны - %i[%i]", str_2, PI[target][pGuns][i], PI[target][pAmmos][i]);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_2, !"Принять", !"");
	return 1;
}
CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	extract params -> new wantedlevel; else return SCM(playerid, COLOR_RED, !"Используй: /wanted [уровень розыска 1-6]");
	if(wantedlevel > 6) return SCM(playerid, COLOR_RED, !"Используй: /wanted [уровень преступления 1-6]");
	new num;
	str_1[0] = EOS;
 	foreach_player(i)
	{
		if(PI[i][pWanted] == wantedlevel)
	    {
	        if(num == 25) break;
	        f(str_1, sizeof(str_1), "%s{FFFFFF}%s(%i) - %i-й уровень розыска\n", str_1, PN(i), i, PI[i][pWanted]);
	        num++;
		}
	}
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
	return 1;
}
CMD:orderlist(playerid, params[])
{
	if(PI[playerid][pJob]!=3)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не развозчик продуктов!");
	for(new i; i < 22; i ++) player_GlobalID[playerid][i] = -1;
	new num;
	str_1[0] = EOS;
 	for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!GetString(BizInfo[i][bOwner],"The State"))
    	{
		    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
			{
			    if(num < 21)
	      		{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        f(str_1,sizeof(str_1),"%s{FFFFFF}- %s {CBB42F}(%i$).{FFFFFF} Закупает: {CBB42F}%i п.{FFFFFF} Цена: {CBB42F}%i$\n",str_1,InfoBusinesses[BizInfo[i][bState]][BName],BizInfo[i][bMoney],BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
				        player_GlobalID[playerid][num] = i;
				        num++;
				    }
				}
				else break;
			}
		}
	}
	if(num) SPD(playerid, 8761, 2, !"Поиск предпринимателя", str_1, !"Принять", !"Отмена");
	else SPD(playerid, 0, 0, !"Поиск предпринимателя", !"{FFFFFF}К сожалению на данный момент нет заказов!", !"Принять", !"");
	return 1;
}
CMD:checkbiz(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используйте: /checkbiz [id]");
 	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", BizInfo[bizid][bOwner],BizInfo[bizid][bMoney]);
}
CMD:checkhouse(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используйте: /checkhouse [id]");
 	if(houseid < 1 || houseid > OWNABLEHOUSES-1) return 0;
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", HouseInfo[houseid][hOwner],HouseInfo[houseid][hMoney]);
}
CMD:checkfam(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new fam; else return SCM(playerid, COLOR_RED, !"Используйте: /checkfam [id]");
 	if(fam < 0 || fam > TOTAL_FAMILYS) return 0;
	str_q[0] = EOS, requestPN(FamilyInfo[fam][famLeader], str_q);
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", str_q, FamilyInfo[fam][famMoney]);
}
CMD:findfam(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new fam; else return SCM(playerid, COLOR_RED, !"Используйте: /findfam [id]");
 	if(fam < 1 || fam > TOTAL_FAMILYS) return 0;
	return SCMf(playerid, -1, "Название семьи %s", FamilyInfo[fam][famName]);
}
CMD:checkcarskill(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new id; else return SCM(playerid, COLOR_RED, !"Используйте: /checkcarskill [id]");
 	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	return SCMf(playerid, COLOR_LIGHTBLUE, "Игрок %s[%i] показал отчет по своему навыку вождения. Навык вождения: {FFFFFF}[%i/100]", PN(id), id, PI[id][pCarSkill]);
}
CMD:eatall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /eatall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /eatall [радиус > 0 или < 100]");
    new num, Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
		{
            SetFullness(i, 100);
			num++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали голод %i игрокам в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал голод %i игрокам!",PN(playerid), num);
}
CMD:aparkcar(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new carid; else return SCM(playerid, COLOR_RED, !"Используйте: /aparkcar [id]");
    new number = GetVehicleID(carid);
	CarInfo[number][cShtrafName] = PI[playerid][pID];
	new Float:Health;
	GetVehicleHealth(carid, Health);
	CarInfo[number][cShtraf] = 10000;
	CarInfo[number][cKeyIN] = false;
	GetVehiclePos(carid,CarInfo[number][cPos_X],CarInfo[number][cPos_Y],CarInfo[number][cPos_Z]);
	GetVehicleZAngle(carid,CarInfo[number][cPos_A]);
	VehicleHealth[carid] = Health;
    RespawnOwnableCar(playerid, carid);
   	UpdateDataInt("ownable", "Shtraf", CarInfo[number][cShtraf], CarInfo[number][cID],"=");
	UpdateDataInt("ownable","KeyIN", CarInfo[number][cKeyIN], CarInfo[number][cID],"=");
	SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно отправили %i т/с на штраф. стоянку.", carid);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s отправили %i т/с на штраф. стоянку!",PN(playerid), carid);
}
CMD:setbizmafia(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
    extract params -> new bizid, type; else return SCM(playerid, COLOR_RED, !"Используй: /setbizmafia [1 - Русская Мафия/2 - Якудза/3 - ЛКН/4 - Байкеры]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
    if(!(1 <= type <= 4)) return SCM(playerid, COLOR_RED, !"Используй: /setbizmafia [1 - Русская Мафия/2 - Якудза/3 - ЛКН/4 - Байкеры]");
    switch(type)
    {
    	case 1: BizInfo[bizid][bKrasher] = TEAM_RM;
    	case 2: BizInfo[bizid][bKrasher] = TEAM_YAKUZA;
    	case 3: BizInfo[bizid][bKrasher] = TEAM_LCN;
    	case 4: BizInfo[bizid][bKrasher] = TEAM_BIKERS;
    }
    UpdateDataInt("businesses", "Krasher", BizInfo[bizid][bKrasher], BizInfo[bizid][bID],"=");
    return UpdateBiz(bizid);
}
CMD:restartreport(playerid)
{
	if(CheckAdmin(playerid, 5)) return 1;
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] != -1)
		{
			pTemp[Reports[i]][NumReports] = -1;
			Reports[i] = -1;
		}
	}
	SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно перезапустили репорт!");
	return SendAdminsMessagef(COLOR_GREY, "%s[%i] перезапустил репорт", PN(playerid), playerid);
}
CMD:gotobiz(playerid, params[])
{
	if(CheckAdmin(playerid,1)) return 1;
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /gotobiz [id]");
	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	J_SetPlayerPos(playerid, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z]);
	SetPlayerInteriorEx(playerid, 0);
	SetPlayerVirtualWorldEx(playerid, 0);
	return SCMf(playerid, -1, "Вы телепортировались к бизнесу ID:%i", bizid);
}
CMD:gotohouse(playerid, params[])
{
	if(CheckAdmin(playerid, 1)) return 1;
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /gotohouse [id]");
	if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 0;
	J_SetPlayerPos(playerid, HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z]);
	SetPlayerInteriorEx(playerid, 0);
	SetPlayerVirtualWorldEx(playerid, 0);
	return SCMf(playerid, -1, "Вы телепортировались к дому ID:%i", houseid);
}
CMD:gotocar(playerid, params[])
{
	if(CheckAdmin(playerid, 1)) return 1;
	extract params -> new carid; else return SCM(playerid, COLOR_RED, !"Используй: /gotocar [id]");
    if(carid == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_RED, !"Используй: /gotocar [id]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(carid, x, y, z);
	J_SetPlayerPos(playerid, x+5, y, z);
	SetPlayerInteriorEx(playerid, 0);
	SetPlayerVirtualWorldEx(playerid, GetVehicleVirtualWorld(carid));
	return SCMf(playerid, -1, "Вы телепортировались к авто ID:%i", carid);
}
CMD:gototrash(playerid, params[])
{
	if(CheckAdmin(playerid)) return 1;
    extract params -> new trash; else return SCM(playerid, COLOR_RED, !"Используй: /gototrash [id]");
    if(!(0 <= trash <= sizeof(MusorPos))) return 0;
	J_SetPlayerPos(playerid, MusorPos[trash][0]+2, MusorPos[trash][1], MusorPos[trash][2]);
	return SCMf(playerid, -1, "Вы телепортировались к мусорки ID:%i", trash);
}
CMD:az(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
	extract params -> new player:id;
	if(!isnull(params))
	{
		if(id > MAX_PLAYERS) return 1;
		if(!IsPlayerLogged[id]) return SCM(playerid, -1, !"Игрок не авторизован!");
		J_SetPlayerPos(playerid, AdminZone[GLS[31]][Zone_posX], AdminZone[GLS[31]][Zone_posY], AdminZone[GLS[31]][Zone_posZ]);
		SetPlayerInteriorEx(playerid, AdminZone[GLS[31]][Zone_Interior]);
		SetPlayerVirtualWorldEx(playerid, AdminZone[GLS[31]][Zone_VirtualWorld]);
		SCMf(id, COLOR_LIGHTBLUE, "А: %s[%i] телепортировал вас на собеседование.", PN(playerid), playerid);
	}
	else id = playerid, SCMf(id, COLOR_GREY, "Вы были телепортированы в админ-зону №%i (%s)", AdminZone[GLS[31]][Zone_ID], AdminZone[GLS[31]][Zone_Name]);
	J_SetPlayerPos(id, AdminZone[GLS[31]][Zone_posX], AdminZone[GLS[31]][Zone_posY], AdminZone[GLS[31]][Zone_posZ]);
	SetPlayerInteriorEx(id, AdminZone[GLS[31]][Zone_Interior]);
	return SetPlayerVirtualWorldEx(id, AdminZone[GLS[31]][Zone_VirtualWorld]);
}
CMD:changeadminint(playerid, params[])
{
    if(CheckAdmin(playerid, 5)) return 0;
	extract params -> new adminint; else return SCMf(playerid, COLOR_RED, "Используй: /changeadminint [id (0-%i)]", sizeof(AdminZone)-1);
    if(!(0 <= adminint <= sizeof(AdminZone)-1)) return SCMf(playerid, COLOR_RED, "Используй: /changeadminint [id (0-%i)]", sizeof(AdminZone)-1);
	GLS[31] = adminint;
	SendAdminsMessagef(COLOR_GREY, "А: %s[%i] сменил админ зону на №%i (%s)", PN(playerid), playerid, AdminZone[adminint][Zone_ID], AdminZone[adminint][Zone_Name]);
	return UpdateDataConfig("adminzona",GLS[31]);
}
CMD:scutes(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_FBI)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в FBI!");
	if(!TeamDuty{playerid})return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не в рабочем состоянии!");
	if(PI[playerid][pMScutes]!=-1)
	{
	 	f(str_2,sizeof(str_2),"{4D7D22}-{FFFFFF} Носитель: {4D7D22}%s{FFFFFF}\n\n{FFFFFF}Вы будете получать сообщения как только человек за которым включена\nслежка позвонит кому-либо или напишет смс.",PN(PI[playerid][pMScutes]));
		SPD(playerid,1081,0,"",str_2,"{DE3737}Отключить{FFFFFF}","Отмена");
		return 0;
	}
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /scutes [id]");
	if(PI[id][pTelNum]<=0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого игрока нет телефона!");
	if(id==playerid)return 0;
	if(!IsPlayerConnectEx(id)) return 0;
	if(!ProxDetectorS(2.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(PI[id][pScutes]==-1)
	{
		PI[id][pScutes]=playerid,f(str_2,sizeof(str_2),"Вы успешно прикрепили жучек к мобильному телефону игрока %s.",PN(id));
		PI[playerid][pMScutes]=id;
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}К этому игроку уже прикреплен жучек!");
	J_ApplyAnimation(playerid, !"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	SetPlayerChatBubble(playerid, !"Сделал что-то странное", COLOR_PURPLE, 10.0, 5000);
	SCM(playerid,COLOR_GREEN,str_2);
	return 1;
}
CMD:goto(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /goto [id]");
	if(target == INVALID_PLAYER_ID || PI[target][pGuardMode]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	new Float:X, Float:Z, Float:Y;
    GetPlayerPos(target, X, Y, Z);
    if(GetPlayerState(playerid) != 2) J_SetPlayerPos(playerid, X+2, Y+2, Z);
    else J_SetVehiclePos(GetPlayerVehicleID(playerid), X+2, Y+2, Z);
    BizEntered[playerid] = BizEntered[target];
 	HouseEntered[playerid] = HouseEntered[target];
    SetPlayerVirtualWorldEx(playerid, GetPlayerVirtualWorld(target));
    SetPlayerInteriorEx(playerid, GetPlayerInterior(target));
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы телепортировались к игроку %s", PN(target));
	return 1; //////aml(1, playerid, PN(target), "т/п к игроку");
}
alias:goto("g");
CMD:kick(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:id, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /kick [id] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    //if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1, !"залупа");
	if(id == playerid) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя кикать самого себя");
	if(GetPVarInt(playerid, !"kick") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя так часто использовать данную команду!");
	SetPVarInt(playerid, !"kick", global_time + 10);
	ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] кикнул игрока %s[%i]. Причина: %s",PN(playerid),playerid,PN(id),id,reason);
    SavePunish(1, playerid, reason, id);
    PI[playerid][pAKick]++;
   	//aml(1, playerid, PN(id), "кикнул игрока");
   	return J_Kick(id);
}
CMD:setrep(playerid, params[])
{
	if(CheckAdmin(playerid, 8,2)) return 1;
	extract params -> new player:id, amount; else return SCM(playerid, COLOR_RED, !"Используй: /setrep [ID игрока] [кол-во репутации]");
	if(!PI[id][pAdmin]) return 0;
	PI[id][pReputation] = amount;
 	UpdatePlayerDataInt(id, "Reputation", PI[id][pReputation]);
	return SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] изменил %s[%i] на %i репутаций!", PN(playerid), playerid, PN(id), id, amount);
}
CMD:smute(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid, time, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /smute [id] [время] [причина]");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(targetid == INVALID_PLAYER_ID) return 0;
    //if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1, !"залупа");
 	if(time < 1) return SCM(playerid, COLOR_RED, !"Используй: /smute [id] [время > 1] [причина]");
 	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(time > 300) return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
 	if(PI[targetid][pMuteTime] > 0) return SCM(playerid, COLOR_RED, !"У этого игрока уже есть бан чата!");
	SendAdminsMessagef(COLOR_LIGHTRED, " А: %s[%i] тихо заглушил игрока %s[%i] на %i минут. Причина: %s", PN(playerid), playerid, PN(targetid), targetid, time, reason);
	SPD(targetid, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили бан чата, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
	PI[targetid][pMuteTime] = time * 60;
	UpdatePlayerDataInt(targetid, "MuteTime", PI[targetid][pMuteTime]);
	return 1; //////aml(7, playerid, PN(targetid), reason, time);
}
CMD:mute(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid, time, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /mute [id] [время] [причина]");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(targetid == INVALID_PLAYER_ID) return 0;
 	if(time < 1) return SCM(playerid, COLOR_RED, !"Используй: /mute [id] [время > 1] [причина]");
 	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(time > 300) return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
	if(PI[targetid][pMuteTime] > 0) return SCM(playerid, COLOR_RED, !"У этого игрока уже есть бан чата!");
    if(CheckDostup(playerid,!"mute")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] заглушил игрока %s[%i] на %i минут. Причина: %s", PN(playerid), playerid, PN(targetid), targetid, time, reason);
	SPD(targetid, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили бан чата, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
	PI[targetid][pMuteTime] = time*60;
	UpdatePlayerDataInt(targetid, "MuteTime", time*60);
    SavePunish(2, playerid, reason, targetid, time);
    PI[playerid][pAMute]++;
	return 1; //////aml(7, playerid, PN(targetid), reason, time);
}
CMD:sban(playerid, params[])
{
	if(CheckAdmin(playerid, 4,0)) return 1;
	extract params -> new player:id, days, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /sban [id] [days 1-30] [Причина]");
   	if(NameIsFullDostup(id,2)) return 1;
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(!(1 <= days <= 30)) return SCM(playerid, COLOR_RED, !"Используй: /sban [id] [days 1-30] [Причина]");
	if(CheckDostup(playerid,!"ban")) return 1;
	SendAdminsMessagef(COLOR_LIGHTRED, "А: %s[%i] тихо забанил игрока %s[%i] на %i дней. Причина: %s", PN(playerid), playerid, PN(id), id, days, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
    UpdatePlayerDataInt(id, "Warns", 0);
    J_Kick(id);
    SavePunish(3, playerid, reason, id, days);
    BanName(PN(id), PN(playerid), days, reason);
	return 1;
}
CMD:fakenicknames(playerid, params[]) {
    if(CheckAdmin(playerid, 8)) return 1;
   	if(isnull(params) || strlen(params) > 25) return SCM(playerid, -1, !"/fakename [Nick Name]");
	if(IsPlayerUnicalDostupParam(params)) return 1;
	SetPlayerNameEx(playerid,params);
	SCM(playerid, -1, !"Имя успешно изменено, чтобы вернуть настоящее, введите команду повторно");
	return 1;
}
CMD:ban(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new player:id, days, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /ban [id] [days 1-30] [Причина]");
  	if(NameIsFullDostup(id,2)) return 1;
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    //if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
	if(!(1 <= days <= 30)) return SCM(playerid, COLOR_RED, !"Используй: /ban [id] [days 1-30] [Причина]");
    if(CheckDostup(playerid,!"ban")) return 1;
    ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] забанил игрока %s[%i] на %i дней. Причина: %s", PN(playerid), playerid, PN(id), id, days, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
    UpdatePlayerDataInt(id, "Warns", 0);
    BanName(PN(id), PN(playerid), days, reason);
    SavePunish(3, playerid, reason, id, days);
    PI[playerid][pABan]++;
   	//aml(8, playerid, PN(id), reason, days);
	return J_Kick(id),BlockIpAddress(PlayerIP(id), 20000);
}
CMD:banip(playerid, params[])
{
	if(CheckAdmin(playerid, 7)) return 1;
	extract params -> new player:id, string: reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /banip [id] [Причина]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	//if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
	if(CheckDostup(playerid,!"ban")) return 1;
    ASCMToAllf(COLOR_LIGHTRED, " А: %s[%i] забанил игрока %s[%i]. Причина: %s", PN(playerid), playerid, PN(id), id, reason);
    SCMf(playerid, 0xEFEFF7AA, "Забанен: %s. IP: %s. REGIP: %s", PN(id), PlayerIP(id), PlayerRegIP[id]);
	UpdatePlayerDataInt(id, "Warns", 0);
    BanIP(PlayerIP(id));
	BlockIpAddress(PlayerIP(id), 60000);
    BanName(PN(id), PN(playerid), 10, reason);
    SavePunish(4, playerid, reason, id);
    return J_Kick(id);
}
CMD:banipoff(playerid, params[])
{
    if(CheckAdmin(playerid, 7,1)) return 1;
	extract params -> new string:ip[17], string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /banipoff [ip] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(CheckDostup(playerid,!"ban")) return 1;
    SendAdminsMessagef(COLOR_LIGHTRED, " А: %s забанил ip %s. Причина: %s", PN(playerid),ip,reason);
    BanIP(ip);
	return 1; //////aml(5, playerid, ip, reason);
}
CMD:warnoff(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new string:name[24], admin, string:reason[30]; else return SCM(playerid, COLOR_GREY, !"/warnoff [nick] [количество] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    //if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
	if(CheckDostup(playerid,!"warn")) return 1;
 	new player = GetNameID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Warns`='%i', `TimeToLastWarn`='%i' WHERE `NickName`='%s' LIMIT 1;", admin, global_time, name);
    ASCMToAllf(COLOR_LIGHTRED, " А: %s установил в оффлайне %i варнов игроку %s. Причина: %s",PN(playerid),admin,name, reason);
   	////aml(22, playerid, name, reason);
   	PI[playerid][pAWarn]++;
    return 1;
}
CMD:muteoff(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new string:name[24], time, string:reason[30]; else return SCM(playerid, COLOR_GREY, !"/muteoff [nick] [time] [reason]");
 	if(strlen(reason)>30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(time>300)return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
	//if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
    if(GetNameID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    if(CheckDostup(playerid,!"mute")) return 1;
    mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `MuteTime`='%i' WHERE `NickName`='%s' LIMIT 1;", time*60, name);
    ASCMToAllf(COLOR_LIGHTRED, " А: %s установил в оффлайне %i минут молчанки игроку %s. Причина: %s", PN(playerid), time, name, reason);
    return 1; //////aml(7, playerid, name, reason, time);
}
CMD:jailoff(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new string:name[24], sec, string:reason[30]; else return SCM(playerid, COLOR_GREY, !"/jailoff [nick] [seconds] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    //if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(!sec) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя посадить на 0 секунд");
    if(GetNameID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    if(CheckDostup(playerid,!"jail")) return 1;
    mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Demorgan` = '%i', `Pcix` = `Pcix` + 1 WHERE `NickName` = '%s' LIMIT 1", sec, name);
    ASCMToAllf(COLOR_LIGHTRED, " А: %s установил в оффлайне %i секунд тюрьмы игроку %s. Причина: %s", PN(playerid), sec, name, reason);
    return 1; //////aml(6, playerid, name, reason, sec);
}
CMD:unjailoff(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /unjailoff [nick]");
    if(CheckDostup(playerid,!"jail")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, " А: %s выпустил игрока %s.", PN(playerid), name);
	return mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Demorgan` = '0' WHERE `NickName` = '%s' LIMIT 1", name);
}
CMD:unmuteoff(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /unmuteoff [nick]");
    if(CheckDostup(playerid,!"mute")) return 1;
	ASCMToAllf(COLOR_LIGHTRED, " А: %s снял заглушку с игрока %s.", PN(playerid), name);
	return mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `MuteTime` = '0' WHERE `NickName` = '%s' LIMIT 1", name);
}
CMD:banoff(playerid, params[])
{
	if(CheckAdmin(playerid, 7)) return 1;
	extract params -> new dell, string:name[24], day, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /banoff [0 Без обнуления/ 1 с обнулением] [name] [дней] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(day < 1) return SCM(playerid, COLOR_RED, !"Используй: /banoff [0 Без обнуления/ 1 с обнулением] [name] [дней] [Причина]");
	if(day > 2000) return SCM(playerid, COLOR_RED, !"Максимум 2000 дней!");
    if(CheckDostup(playerid,!"ban")) return 1;
	new player = GetNameID(name);
	ASCMToAllf(COLOR_LIGHTRED, "А: %s забанил в оффлайне игрока %s. Причина: %s",PN(playerid),name,reason);
	if(player != INVALID_PLAYER_ID)
	{
		SPD(player, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
			Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
		J_Kick(player);
	}
	BanName(name, PN(playerid), day, reason);
	if(dell) mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Admin`='0', `Money`='0', `VirMoney`='0', `Bank`='0'  WHERE `NickName`='%s' LIMIT 1;", name);
	return 1; //////aml(8, playerid, name, reason, day);
}
CMD:sbanoff(playerid, params[])
{
	if(CheckAdmin(playerid, 7)) return 1;
	extract params -> new string:name[24], day, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /sbanoff [name] [дней] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(day < 1 && 30 < day) return SCM(playerid, COLOR_RED, !"Используй: /sbanoff [name] [дней] [Причина]");
	//if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
	if(CheckDostup(playerid,!"ban")) return 1;
 	new player = GetNameID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"ОН ОНЛАЙН!");
    SendAdminsMessagef(COLOR_LIGHTRED, " А: %s тихо забанил в оффлайне игрока %s. Причина: %s", PN(playerid), name, reason);
	BanName(name, PN(playerid), day, reason);
	return 1; //////aml(8, playerid, name, reason, day);
}
CMD:unbanip(playerid, params[])
{
	if(CheckAdmin(playerid, 6)) return 1;
	extract params -> new string:ip[16]; else return SCM(playerid, COLOR_GREY, !"/unbanip [ip]");
	if(CheckDostup(playerid,!"ban")) return 1;
	mysql_tqueryf(mysql,"DELETE FROM `banip` WHERE `IP` = '%s' LIMIT 1", ip);
	return SendAdminsMessagef(COLOR_RED, "[A] %s[%i] разблокировал IP: %s", PN(playerid), playerid, ip);
}
CMD:swarn(playerid, params[])
{
	if(CheckAdmin(playerid, 6)) return 1;
	extract params -> new player:targetid, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /swarn [id] [Причина]");
    if(targetid == INVALID_PLAYER_ID) return 0;
	if(NameIsFullDostup(targetid,2)) return 1;
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckDostup(playerid,!"warn")) return 1;
    PI[targetid][pMember] =
    PI[targetid][pDCTime] =
    PI[targetid][pRank] =
    PI[targetid][pJob] = 0;
    UpdatePlayerDataInt(targetid, "DCTime", 0);
    UpdatePlayerDataInt(targetid, "Job", 0);
    UpdatePlayerDataInt(targetid, "Rank", 0);
    UpdatePlayerDataInt(targetid, "Member", 0);
    SCM(targetid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    PlayerUnleader(targetid, PN(targetid));
    SetPlayerColor(targetid, TeamColors[0]);
    ResetSpawnInfo(targetid, 0);
    SetBumSkin(targetid);
    PI[targetid][pTimeToLastWarn] = global_time;
    UpdatePlayerDataInt(targetid, "TimeToLastWarn", PI[targetid][pTimeToLastWarn]);
	PI[targetid][pWarns] ++;
	UpdatePlayerDataInt(targetid, "Warns", PI[targetid][pWarns]);
    ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] тихо выдал предупреждение игроку %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(targetid), targetid, PI[targetid][pWarns], reason);
	SPD(targetid, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили предупреждение, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n\
		Варн можно снять с помощью /donate.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
    if(PI[targetid][pWarns] > 2)
	{
	    UpdatePlayerDataInt(targetid, "Warns", 0);
		BanName(PN(targetid), PN(playerid), 10, reason);
		J_Kick(targetid);
		return 1;
	}
    return J_Kick(targetid);
}
CMD:warn(playerid, params[])
{
 	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /warn [id] [Причина]");
    if(targetid == INVALID_PLAYER_ID) return 0;
  	if(NameIsFullDostup(targetid,2)) return 1;
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(CheckDostup(playerid,!"warn")) return 1;
    PI[targetid][pMember] =
    PI[targetid][pRank] =
    PI[targetid][pJob] =
    PI[targetid][pDCTime] = 0;
    UpdatePlayerDataInt(targetid, "DCTime", 0);
    UpdatePlayerDataInt(targetid, "Job", 0);
    UpdatePlayerDataInt(targetid, "Rank", 0);
    UpdatePlayerDataInt(targetid, "Member", 0);
    SCM(targetid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    PlayerUnleader(targetid, PN(targetid));
    SetPlayerColor(targetid, TeamColors[0]);
    ResetSpawnInfo(targetid, 0);
    SetBumSkin(targetid);
    PI[targetid][pTimeToLastWarn] = global_time;
    UpdatePlayerDataInt(targetid, "TimeToLastWarn", PI[targetid][pTimeToLastWarn]);
	PI[targetid][pWarns] ++;
	UpdatePlayerDataInt(targetid, "Warns", PI[targetid][pWarns]);
    ASCMToAllf(COLOR_LIGHTRED, "А: %s[%i] выдал предупреждение игроку %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(targetid), targetid, PI[targetid][pWarns], reason);
	SPD(targetid, 0, DIALOG_STYLE_MSGBOX, !"", (str_f("\
		Вы получили предупреждение, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n\
		Варн можно снять с помощью /donate.\n{2D8E35}%s", ServerCFG[server_forum])), !"Закрыть", !"");
    if(PI[targetid][pWarns] > 2)
	{
	    UpdatePlayerDataInt(targetid, "Warns", 0);
		BanName(PN(targetid), PN(playerid), 10, reason);
		J_Kick(targetid);
		return 1;
	}
	////aml(22, playerid, PN(targetid), reason);
    return J_Kick(targetid);
}
CMD:awarn(playerid, params[])
{
	if(CheckAdmin(playerid, 8,2)) return 1;
	extract params -> new player:targetid, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /awarn [id] [Причина]");
    if(targetid == INVALID_PLAYER_ID) return 0;
  	if(NameIsFullDostup(targetid,2)) return 1;
  	if(!PI[targetid][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный игрок не администратор!");
	//if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckDostup(playerid,!"awarn")) return 1;
	PI[targetid][pAWarns] ++;
    SendAdminsMessagef(COLOR_LIGHTRED, "А: %s[%i] выдал выговор администратору %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(targetid), targetid, PI[targetid][pAWarns], reason);
	SCMf(targetid, COLOR_LIGHTRED, "[AWarn] %s[%i] выдал вам административное предупреждение! Причина: %s",PN(playerid),playerid, reason);
	if(PI[targetid][pAWarns] > 2)
	{
		PI[targetid][pAWarns] = 0;
		SetAdminLevel(targetid, 0);
		SCM(targetid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы были сняты с поста администратора!");
		J_Kick(targetid);
	}
	UpdatePlayerDataInt(targetid, "AWarns", PI[targetid][pAWarns]);
	//aml(28, playerid, PN(params[0]), reason);
	return 1;
}
CMD:awarnoff(playerid, params[])
{
	if(CheckAdmin(playerid, 8,2)) return 1;
	extract params -> new string:name[24], string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используй: /awarnoff [nickname] [Причина]");
	if(CheckDostup(playerid,!"awarn")) return 1;
	if(GetNameID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Игрок сейчас находится на сервере, используйте /awarnoff");
	return AWarnOff(playerid, name, reason);
}
CMD:unawarn(playerid, params[])
{
	if(CheckAdmin(playerid, 7,2)) return 1;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /unawarn [id/name]");
	if(targetid == playerid) return 1;
	if(!PI[targetid][pAWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У него нет выговоров!");
	if(CheckDostup(playerid,!"awarn")) return 1;
	SendAdminsMessagef(COLOR_YELLOW, " А: %s снял 1 выговор у администратора %s", PN(playerid), PN(targetid));
	SCM(targetid, COLOR_GREEN, "[Информация] {FFFFFF}Администратор снял вам 1 выговор!");
	PI[targetid][pAWarns] -= 1;
	UpdatePlayerDataInt(targetid, "AWarns", PI[targetid][pAWarns]);
	//aml(29, playerid, PN(params[0]), "");
	return 1;
}
CMD:bankmenu(playerid, params[])
{
	if(GetTeamID(playerid) != TEAM_BANK) return SCM(playerid, COLOR_LIGHTRED, !"Отказано в доступе");
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /bankmenu [id]");
    if(target == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"Игрок не в сети!");
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, -2683.8354, 807.3682, 1500.9688)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Воспользоватся этой командой вы можете только в Банке!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	PanelPlayerID[playerid] = target;
	new rank = PI[playerid][pRank];
	if(rank < 5) return SCM(playerid, COLOR_LIGHTRED, !"Отказано в доступе");
    return SPD(playerid, 713, DIALOG_STYLE_LIST, !"Выберите действие",
		!"{B03131}[1]{73B461} Выдать кредит [6]\n\
		{B03131}[2]{73B461} Узнать долг банку [1]\n\
		{B03131}[3]{73B461} Узнать количество денег в банке [1]\n\
		{B03131}[4]{73B461} Выдать банковскую карту [1]\n\
		{B03131}[5]{73B461} Восстановить банковскую карту [5]\n\
		{B03131}[6]{73B461} Принять деньги на депозит [4]\n\
		{B03131}[7]{73B461} Снять деньги с депозита [4]",
		!"Выбрать", !"Отмена");
}
CMD:givelicense(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4 && GetTeamID(playerid) != TEAM_LICENSERS) return SCM(playerid, COLOR_GREY, !"Отказано в доступе!");
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /givelicense [id]");
    if(!ProxDetectorS(10, playerid, id)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
    if(!IsPlayerConnectEx(id) || !IsPlayerLogged[id]) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(id == playerid && PI[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не можете выдать лицензии сами себе!");
    if(PI[playerid][pAdmin] == 0 && !IsPlayerInRangeOfPoint(playerid, 70, -2034.9714, -115.2961, 35.2599)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Лицензии можно продавать только в автошколе!");
	PanelPlayerID[playerid] = id;
	PanelPlayerID[id] = playerid;
	new rank = PI[playerid][pRank];
	if(rank >= 3)
	{
        SPD(playerid, 6, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите лицензию", !"Лицензия\tСтоимость\t\n\
			На вождение авто\t{52A32A}1000${FFFFFF}\n\
			На вождение мото\t{52A32A}2000${FFFFFF}\n\
			На полеты\t{52A32A}\n\
			{FFFFFF}На рыбалку\t{52A32A}1000${FFFFFF}\n\
			На вождение водного транспорта\t{52A32A}5000${FFFFFF}\n\
			На оружие\t{52A32A}10000${FFFFFF}", !"Выдать", !"Отмена");
	}
	else
	{
	    if(GetTeamID(playerid) == TEAM_LICENSERS) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Ваш ранг слишком мал");
	    SPD(playerid, 6, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите лицензию", !"Лицензия\tСтоимость\t\n\
			На вождение авто\t{52A32A}1000${FFFFFF}\n\
			На вождение мото\t{52A32A}2000${FFFFFF}", !"Выдать", !"Отмена");
	}
	return 1;
}
CMD:giverub(playerid, params[])
{
	if(CheckAdmin(playerid, 8,4)) return 1;
	extract params -> new player:id, rub; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используй /giverub  [id] [rub (0 - 10000)]");
	if(rub < 0 || rub > 10000) return SCM(playerid,COLOR_VALIK,!"Используйте: /giverub [id] [rub (0 - 10000)]");
	SendAdminsMessagef(COLOR_GREEN, "[A] А: %s выдал игроку %s[%i] %i AZ-RUB",PN(playerid),PN(id),id,rub);
	GiveDonateRub(id, rub);
	return 1;
}
stock SearchStyleBoxing(playerid)
{
	for(new i; i < sizeof fighting_style_info; i++) if(fighting_style_info[i][fsID] == PI[playerid][pStyleBoxing]) return i;
	return 0;
}
CMD:vipmenu(playerid)
{
	if(PI[playerid][pVIP][0] <= 6) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет доступа, нужно иметь BonusLand VIP!");
	str_d[0] = EOS,f(str_d, sizeof(str_d), "\
	1. Изменить себе префикс\n\
	2. Изменить цвет префикса\n\
	3. Телепортировать к себе личный т/с\n\
	4. Выдать себе NRG-500\n\
	5. Флипнуть свой транспорт\n\
	6. Получить ADD VIP сроком на {448cff}3 дня\n\
	7. Получить рандомный предмет {448cff}[1 раз в 3 часа]\n\
	8. Пополнить здоровье [%i HP] {448cff}(1 раз в 5 минут)\n\
	9. Заправить личный т/с\n\
	10. Изменить стиль боя {448cff}[Сейчас: %s]", GetPlayerPeakHealth(playerid), fighting_style_info[SearchStyleBoxing(playerid)][fsName]);
    SPD(playerid, 1942, DIALOG_STYLE_LIST, !"{448cff}BonusLand {A9A9A9}Menu", str_d, !"Выбор", !"Отмена");
	return 1;
}
stock ShowMenuBuyVIP(playerid)
{
	str_1[0] = EOS, f(str_1,sizeof(str_1), "{FFFFFF}На вашем счету {855dea}%i AZ-RUB", PI[playerid][pRub]);
	return SPD(playerid, 2055, DIALOG_STYLE_MSGBOX, str_1, (str_f("{FFFFFF}Улучшение: {855dea}BonusLand{FFFFFF}\n\
	Стоимость: {855dea}150{FFFFFF} AZ RUB\n\n\n\
	{FF5252}Преимущества BonusLand VIP статуса{FFFFFF}\n\
	1)Каждый payday вы будете получать 400 az coins (donat очки){FFFFFF}\n\
	2)Возможности всех VIP.{FFFFFF}\n\
	3)10 транспортных средств\n\
	4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n\
	5)Собственный тэг в вип чате (/vr)\n\
	6)Отключена анти-флуд система в вип чате (/vr)\n\
	7)10 очка репутации семьи каждый payday\n\
	8)Шанс крафта в 5 раза выше \n\
	9)Собственный тэг на форуме по заявке (%s)\n\
	10)Доступ к меню вип (/vipmenu)\n\
	11)Бесплатный ИНФЕРНУС комплектации ЛАУНЧ со специальным\nтюнингом и красивыми наклейками.{FFFFFF}", ServerCFG[server_forum])), !"Купить", !"Отмена");
}
stock CreateRecMenu(playerid, id, update = 0)
{
    if(id == INVALID_PLAYER_ID || id == playerid || PI[id][pGuardMode]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    HideMenuRec(playerid);
    #include modules\TEXTDRAWS\recon\recon_menu
    for(new i; i < 50; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][rinfo][i]);
    if(!update)
    {
        if(!RecInfo[playerid][rOpen])
		{
			GetPlayerPos(playerid, RecInfo[playerid][PosX], RecInfo[playerid][PosY], RecInfo[playerid][PosZ]);
	        RecInfo[playerid][Interior] = GetPlayerInterior(playerid);
	        RecInfo[playerid][VirtualWorld] = GetPlayerVirtualWorld(playerid);
		}
        PI[playerid][pMember] = PI[id][pMember];
        PI[playerid][pRank] = 9;
        RecInfo[playerid][menuopen] = 0;
        RecInfo[playerid][rPlayer] = id;
        RecInfo[id][rAdmin] = playerid;
    }
    SpecPlayer(playerid);
    UpdateRecMenu(playerid, id);
    return SelectTextDraw(playerid, 0xFFFFFFFF);
}
stock SpecPlayer(playerid)
{
    new id = RecInfo[playerid][rPlayer];
    if(!pTemp[playerid][SPECTPLAYER]) SpecPl(playerid, true);
    if(!RecInfo[playerid][rOpen]) RecInfo[playerid][rOpen] = true;
	SetPlayerInteriorEx(playerid, GetPlayerInterior(id));
	SetPlayerVirtualWorldEx(playerid, GetPlayerVirtualWorld(id));
	SelectTextDraw(playerid, 0xFFFFFFFF);
    if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
    else PlayerSpectatePlayer(playerid, id);
}
stock UpdateRecMenu(playerid, id)
{
    if(RecInfo[playerid][rPlayer] == INVALID_PLAYER_ID && RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime]) return callcmd::reoff(playerid),GameTextForPlayer(playerid, !"~r~Player Disconected", 700, 3);
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][2], "%i - %s", id,Convert(RecInfo[playerid][TimeWork]));//Id
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][16], "%s", PN(id));//NickName
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][14], "%i:%i/%i", PI[id][pLevel], PI[id][pExp], (PI[id][pLevel] + 1)*4);//Lvl + EXP
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][13], "%i", PI[id][pWarns]);//warn
    PlayerTextDrawSetString(playerid, RecInfo[playerid][rinfo][6], "0/12");//Shot
    PlayerTextDrawSetString(playerid, RecInfo[playerid][rinfo][5], "0/0");//Time shot
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][4], "%s", Convert(PlayerAFKTime[id]));//Afk Time
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][8], "%i(%.2f%)", GetPlayerPing(id), NetStats_PacketLossPercent(id));//NenStat
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][7], "%i:%i", GetPlayerWeapon(id), GetPlayerAmmo(id));//Ammo
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][12], "%.02f", PI[id][pArmour]);//Armour + timer
    PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][11], "%.02f", PlayerHealthAC[id]);//Heal + timer
    if(GetPlayerState(id) == PLAYER_STATE_DRIVER && IsPlayerInAnyVehicle(id))
    {
        new carid = GetPlayerVehicleID(id), Float:hpcar, number, tt;
        if(PI[id][plveh]) number = PI[id][plveh], tt = TwinTurbo[carid][cStatus];
        else number = GetVehicleID(carid), tt = SearchModification(number);
        GetVehicleHealth(carid, hpcar);
        if(tt != -1) PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][3], "%s", !GetEngineStatus(carid) ? ("Off(TT)") : ("ON(TT)"));
        else PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][3], "%s", !GetEngineStatus(carid) ? ("Off(NO TT)") : ("ON(NO TT)"));
		PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][10], "%i", hpcar);//Hpcar + time
        PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][9], "%i / 400", GetSpeed(id));//Speed + timer 127
    }
    else 
	{
		PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][9], "%i / 127", GetSpeed(id));//Speed + timer
		PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][10], "%s", "-");
		PlayerTDSetStringf(playerid, RecInfo[playerid][rinfo][3], "%s", "-");
	}
    //for(new i = 2; i < 15; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][rinfo][i]);
    //PlayerTextDrawShow(playerid, RecInfo[playerid][rinfo][16]);
    return 1;
}
stock HideRecMenu(playerid)
{
    HideMenuRec(playerid);
    if(pTemp[playerid][SPECTPLAYER]==true) SpecPl(playerid, false);
    if(RecInfo[playerid][rPlayer] != INVALID_PLAYER_ID) RecInfo[RecInfo[playerid][rPlayer]][rAdmin] = INVALID_PLAYER_ID;
    RecInfo[playerid][rPlayer] 					= INVALID_PLAYER_ID;
    RecInfo[playerid][rTime] 					= 3;
    RecInfo[playerid][TimeWork] 				= 0;
    PI[playerid][pMember] =  PI[playerid][pRank] = RecInfo[playerid][menuopen] = 0;
    SetPlayerInteriorEx(playerid, RecInfo[playerid][Interior]);
    SetPlayerVirtualWorldEx(playerid, RecInfo[playerid][VirtualWorld]);
    CancelSelectTextDraw(playerid);
    return J_SetPlayerPos(playerid, RecInfo[playerid][PosX], RecInfo[playerid][PosY], RecInfo[playerid][PosZ]);
}
stock HideMenuRec(playerid, hidemenuinfo = 0)
{
    for(new i; i < 50; i++)
    {
        if(!hidemenuinfo) if(IsPlayerTextDrawVisible(playerid, RecInfo[playerid][rinfo][i])) DestroyPlayerTD(playerid, RecInfo[playerid][rinfo][i]);
        if(i < 6)
        {
            switch(RecInfo[playerid][menuopen])
            {
                case 1: DestroyPlayerTD(playerid, RecInfo[playerid][menu_stats][i]);
                case 2: DestroyPlayerTD(playerid, RecInfo[playerid][menu_action][i]);
                case 3: DestroyPlayerTD(playerid, RecInfo[playerid][menu_punish1][i]);
                case 4: DestroyPlayerTD(playerid, RecInfo[playerid][menu_punish2][i]);
                case 5: DestroyPlayerTD(playerid, RecInfo[playerid][menu_help][i]);
                case 6: DestroyPlayerTD(playerid, RecInfo[playerid][menu_check][i]);
                case 7: DestroyPlayerTD(playerid, RecInfo[playerid][menu_tech][i]);
                case 8: DestroyPlayerTD(playerid, RecInfo[playerid][menu_exit][i]);
            }
        }
    }
    return 1;
}
stock CreateMenuRec(playerid, menu)
{
    if(!RecInfo[playerid][rOpen] || RecInfo[playerid][menuopen] == menu+1) return 0;
    HideMenuRec(playerid, 1);
    switch(menu)
    {
        case 0:// menu stats
        {
            #include modules\TEXTDRAWS\recon\reconmenu_1
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_stats][i]);
        }
        case 1:// menu action
        {
            #include modules\TEXTDRAWS\recon\reconmenu_2
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_action][i]);
        }
        case 2:// menu punish
        {
            #include modules\TEXTDRAWS\recon\reconmenu_3
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_punish1][i]);
        }
        case 3:// menu punish2
        {
            #include modules\TEXTDRAWS\recon\reconmenu_4
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_punish2][i]);
        }
        case 4:// menu help
        {
            #include modules\TEXTDRAWS\recon\reconmenu_5
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_help][i]);
        }
        case 5:// menu check
        {
            #include modules\TEXTDRAWS\recon\reconmenu_6
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_check][i]);
        }
        case 6:// menu tech
        {
            #include modules\TEXTDRAWS\recon\reconmenu_7
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_tech][i]);
        }
        case 7:// menu exit
        {
            #include modules\TEXTDRAWS\recon\reconmenu_8
            for(new i; i < 6; i++) PlayerTextDrawShow(playerid, RecInfo[playerid][menu_exit][i]);
        }
    }
    RecInfo[playerid][menuopen] = menu+1;
    return 1;
}
CMD:reoff(playerid)
{
	if(CheckAdmin(playerid)) return 1;
    return HideRecMenu(playerid);
}
CMD:re(playerid, params[])
{
	if(CheckAdmin(playerid)) return 1;
    extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /re [id]");
    return CreateRecMenu(playerid, id);
}
stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 150.0;
    return floatround(ST[3]);
}
stock GetSpeed(player, bool:return_km = true)
{
    new Float:x, Float:y, Float:z;
    if(IsPlayerInAnyVehicle(player)) GetVehicleVelocity(GetPlayerVehicleID(player), x, y, z);
    else GetPlayerVelocity(player, x, y, z);
    return return_km?floatround(floatsqroot(x*x+y*y+z*z)*195):floatround(floatsqroot(x*x+y*y+z*z)*121);
}
stock CheckSpeed(player)
{
    if(IsPlayerInAnyVehicle(player))GetPlayerVehicleSpeed(player);
    else GetPlayerSpeed(player);
    return 1;
}
CMD:skick(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /skick [id]");
    if(targetid == INVALID_PLAYER_ID) return 1;
	if(targetid == playerid) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя кикать самого себя");
	if(CheckDostup(playerid,!"kick")) return 1;
 	//aml(1, playerid, PN(targetid), "тихо кикнул игрока");
	return SendAdminsMessagef(COLOR_YELLOW, "[A] %s[%i] тихо кикнул игрока %s [ID:%i]", PN(playerid), playerid, PN(targetid), targetid),J_Kick(targetid);
}
CMD:givemydonate(playerid, params[])
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract params -> new player:id, value; else return SCM(playerid, COLOR_RED, !"Используйте: /givemydonate [id] [кол-во]");
	if(GetDonate(playerid) < value) return SCM(playerid,COLOR_LIGHTRED,!"[Ошибка] {FFFFFF}У вас не достаточно AZ-монет!");
	GiveDonate(id, value);
	GiveDonate(playerid, -value);
	//aml(2, playerid, PN(id), "передал свой донат", value);
	SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно передали %i доната, игроку %s[%i]!", value, PN(id), id);
	return SendAdminsMessagef(COLOR_VALIK, "[A] %s[%i] передал %i доната, игроку %s[%i]", PN(playerid), playerid, value, PN(id), id);
}
CMD:setstat(playerid, params[])
{
    if(CheckAdmin(playerid, 7,1)) return 1;
	extract params -> new player:id, cod, value; else
	{
		SCM(playerid, -1, !"Используй: /setstat [id] [код] [значение]");
		SCM(playerid, -1, !"[0]Уровень | [1]Уважения | [2]Пол | [3]Подарок | [4]Предупреждения | [5]VIP | [6]Выговоры");
		SCM(playerid, -1, !"[7]Номер телефона | [8]Ключи от дома | [9]Ключи от бизнеса | [10]Патроны | [11]Детали");
		SCM(playerid, -1, !"[12]Работа | [13]Наркотики | [14]Счет в банке | [15]Donate счет" );
		return SCM(playerid, -1, !"[16]Очки фермы | [17]Спавн[0/3] | [18]Чемодан[0/1] | [19]Семейные талоны");
	}
	if(!Iter_Contains(Player, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данного игрока нет на сервере!");
	switch(cod)
	{
	    case 0: J_SetPlayerScore(id, value);
	    case 1:
	    {
	        PI[id][pExp] = value;
			CheckNextLevel(id);
	    }
	    case 2:
	    {
	        PI[id][pSex] = value;
	        UpdatePlayerDataInt(id, "Sex", PI[id][pSex]);
	    }
	    case 3: SetItem(id, 316, value);
	    case 4:
	    {
	        PI[id][pWarns] = value;
	        UpdatePlayerDataInt(id, "Warns", value);
	    }
	    case 5:
	    {
	        if(value == 7) if(CheckAdmin(playerid, 7,3)) return 1;
	        J_SetPlayerVIP(id, value);
	        PI[id][pVipTime] = unixtime(30);
	        UpdatePlayerDataInt(id, "VipTime", PI[id][pVipTime]);
	    }
	    case 6:
	    {
	        PI[id][pFWarns] = value;
	        UpdatePlayerDataInt(id, "FWarns", value);
	    }
	    case 7:
	    {
	    	//if(CheckTelNum(playerid, value, 1)) return 0;
		    PI[id][pTelNum] = value;
		    UpdatePlayerDataInt(id, "TelNum", value);
	    }
	    case 8:
	    {
			PI[id][pHouseMain] = value;
			UpdatePlayerDataInt(id, "HouseSpawned", value);
	    }
	    case 9: return 1;
	    case 10: SetItem(id, 328, value);
	    case 11: SetItem(id, 655, value);
	    case 12:
	    {
			PI[id][pJob] = value;
			UpdatePlayerDataInt(id, "Job", value);
	    }
	    case 13: SetItem(playerid, 327, value);
	    case 14:
	    {
			PI[id][pBank][0] = value;
			UpdatePlayerDataInt(id, "Bank", value);
	    }
	    case 15:
	    {
	        if(CheckAdmin(playerid, 7,3)) return 1;
			PI[id][pVirMoney] = value;
			UpdatePlayerDataInt(id, "VirMoney", value);
	    }
	    case 16:
	    {
			PI[id][pContractTime] = value;
			UpdatePlayerDataInt(id, "ContractTime", value);
	    }
	    case 17:
	    {
	        if(value > 3 || value < 0) return SCM(playerid, -1, !"Error");
			PI[id][pDCTime] = value;
			UpdatePlayerDataInt(id, "DCTime", value);
			SCM(id, -1, !">> {FF6347} Место спавна изменилось. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	    }
	    case 18: SetItem(id, 639, value);
	    case 19: SetItem(id, 359, value);
	}
	return SCMf(playerid, -1, "Вы изменили статистику игрока %s(%i) код: %i количество: %i", PN(id), id, cod, value);
}
CMD:news(playerid, params[])
{
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(!IsANews(playerid)) return SCM(playerid, COLOR_GREY, !"Вам не доступна эта команда!");
    if(PI[playerid][pRank]<5)return SCM(playerid, COLOR_GREY, !"Вам не доступна эта команда! (Необходим 5-тый ранг!)");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[80]; else return SCM(playerid, COLOR_RED, !"Используйте: /news [текст]");
    if(GetPVarInt(playerid,!"newser")>global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	new carid = GetPlayerVehicleID(playerid);
	str_1[0] = EOS;
	switch(PI[playerid][pMember])
    {
        case TEAM_RADIO: str_1 = "LS";
        case TEAM_RADIOSF: str_1 = "SF";
        case TEAM_RADIOLV: str_1 = "LV";
        default: str_1 = "";
    }
	if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,1716.1687,-1663.5651,20.2279)|| IsPlayerInRangeOfPoint(playerid,50,1654.9037,-1640.4658,57.1529))
	{
	 	f(str_2,sizeof(str_2),"[ News %s ] %s %s[%i]:{FFFFFF} %s",str_1,GetRankName(TEAM_RADIO,PI[playerid][pRank]),PN(playerid),playerid,str_1);
		SCMAll(0x73B461FF,str_2);
		SetPVarInt(playerid,"newser",global_time+4);
	}
	else SCM(playerid, COLOR_BLUENEW, !"Вы не находитесь в транспорте радио студии");
	return 1;
}
CMD:gov(playerid, params[])
{
    if(!IsAtFrakcia(playerid)) return 0;
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new string:text[80]; else return SCM(playerid, COLOR_RED, !"Используйте: /gov [текст]");
    if(GLS[35]>=3)return SCM(playerid, COLOR_RED, !"Все организации имеют право только на 3 гос. строки в 5 минут!");
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(PI[playerid][pRank] >= 9 && IsAtFrakcia(playerid)) SendGovMessage(playerid,text);
	GLS[35]++;
	return 1;
}
CMD:m(playerid, params[])
{
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new string:text[80]; else return SCM(playerid, COLOR_RED, !"Используйте: /m [текст]");
	new carid = GetPlayerVehicleID(playerid);
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(!IsPlayerInAnyVehicle(playerid) && !IsACopCar(carid)) return SCM(playerid, COLOR_GREY, !"Не могу!");
	f(str_2,sizeof(str_2),"[M] %s %s(%i): %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,text);
	ProxDetector(30,playerid,str_2,COLOR_YELLOW);
	SetPlayerChatBubble(playerid, str_2, COLOR_YELLOW, 10.0, 5000);
	return 1; //////aml(100, playerid, "", str_1);
}
CMD:megafon(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new string:text[80]; else return SCM(playerid, COLOR_RED, !"Используйте: /megafon [текст]");
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	f(str_2,sizeof(str_2),"[Рупор] %s %s(%i): %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,text);
	SetPlayerChatBubble(playerid, str_2, COLOR_YELLOW, 10.0, 5000);
	return ProxDetector(30,playerid,str_2,COLOR_YELLOW);
}
CMD:s(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[40+40]; else return SCM(playerid, COLOR_RED, !"Используйте: /s [текст]");
	if(GetPVarInt(playerid,!"payer")>global_time)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	SetPVarInt(playerid,"payer",global_time+3);
	SetPlayerChatBubble(playerid, text, COLOR_SCHAT, 25.0, 5000);
	f(str_2,sizeof(str_2),"%s[%i] кричит: %s!!",PN(playerid),playerid,text);
	if(!IsPlayerInAnyVehicle(playerid) && !PlayerLie[playerid]) J_ApplyAnimation(playerid, !"ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	return ProxDetector(25,playerid,str_2,COLOR_SCHAT);
}
CMD:b(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[40+40]; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /b [текст]");
	if(PI[playerid][pAdmin]) f(str_2,sizeof(str_2),"(( А: %s[%i] {FFE6E6}%s{FFFFFF} ))",PN(playerid),playerid,text);
	else f(str_2,sizeof(str_2),"(( %s[%i] {FFE6E6}%s{FFFFFF} ))",PN(playerid),playerid,text);
	return ProxDetector(10,playerid,str_2,-1);
}
CMD:n(playerid, params[]) return callcmd::b(playerid,params);
CMD:c(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[40+40]; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /c [текст]");
	f(str_2,sizeof(str_2),"%s[%i] говорит шепотом: {FFFFFF}%s",PN(playerid),playerid,text);
	return ProxDetector(2,playerid,str_2,COLOR_BLUE);
}
CMD:todo(playerid, params[])
{
   	if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	new text[40], text2[40];
	if(sscanf(params, "p<*>s[40]s[40]", text,text2)) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}/todo Фраза*Действие");
    f(text2, sizeof(text2), "\"%s\", - сказал %s,{FF99FF} %s.",text,PN(playerid),text2);
    return ProxDetector(30.0, playerid, text2, -1);
}
CMD:me(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[40+40]; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /me [действие]");
	f(str_2,sizeof(str_2),"%s[%i] %s", PN(playerid), playerid, text);
	ProxDetector(25, playerid, str_2, COLOR_ME);
 	str_1[0] = EOS;
    f(str_1, sizeof(str_1), "написал в (/me): \"%s\"", text);
    //aml(-4, playerid, "", str_1);
	return SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
}
CMD:do(playerid, params[])
{
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[40+40]; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /do [действие]");
	str_2[0] = EOS, f(str_2,sizeof(str_2)," %s  - |  %s[%i] ",text, PN(playerid), playerid);
	ProxDetector(25, playerid, str_2, COLOR_DOCHAT);
	str_1[0] = EOS;
    f(str_1, sizeof(str_1), "написал в (/do): \"%s\"", text);
    //aml(-4, playerid, "", str_1);
	return SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
}
CMD:try(playerid, params[])
{
    new rand = random(10);
    if(!IsPlayerLogged[playerid]) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[100]; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /try [действие]");
	if(rand < 5) str_2[0] = EOS, f(str_2,sizeof(str_2)," %s[%i] %s -{9ACD32} Удачно ", PN(playerid), playerid, text);
	else str_2[0] = EOS, f(str_2,sizeof(str_2)," %s[%i] %s - {FF0000} Неудачно ", PN(playerid), playerid, text);
	ProxDetector(25, playerid, str_2, COLOR_ME);
	str_1[0] = EOS;
    f(str_1, sizeof(str_1), "написал в (/me): \"%s\", у него выпало: %s", text, text);
    //aml(-4, playerid, "", str_1);
	return SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
}
CMD:lmenu(playerid)
{
	if(!IsAtMafia(playerid)&& !IsAtGang(playerid))
	{
		if((PI[playerid][pRank] == 10 || PI[playerid][pRank] >= 9)&& IsACop(playerid)) return SPD(playerid,1214,2,!"Меню лидера",!"{AFAFAF}Пригласить в организацию\n{AFAFAF}Игроки онлайн\n{AFAFAF}Перевод", !"Далее",!"Отмена");
		else if(PI[playerid][pRank] == 10 || PI[playerid][pRank] >= 9) return SPD(playerid,1214,2,!"Меню лидера",!"{AFAFAF}Пригласить в организацию\n{AFAFAF}Игроки онлайн", !"Далее",!"Отмена");
		else SCM(playerid, COLOR_GREY, !"Вы не лидер и не зам. лидера");
	}
	else
	{
		if(PI[playerid][pRank] == 10 || PI[playerid][pRank] >= 9)
		{
			str_1[0] = EOS, str_2[0] = EOS;
			f(str_1,sizeof(str_1),"{FFFFFF}Банк: {009327}%i$",OrgInfo[GetTeamID(playerid)][oBank]);
			f(str_2,sizeof(str_2),"{AFAFAF}Пригласить в организацию\n{AFAFAF}Игроки онлайн\n{AFAFAF}Общак [%s]\n{AFAFAF}Спавн транспорта [{009327}25 000${AFAFAF}]\n{AFAFAF}Заправка транспорта [{009327}35 000${AFAFAF}]", !OrgInfo[PI[playerid][pMember]][oWareHouse] ? ("{407930}Открыт") : ("{D24449}Закрыт"));
			SPD(playerid,1214,2,str_1,str_2,"Далее","Отмена");
		}
	}
	return 1;
}
CMD:invite(playerid, params[])
{
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используйте: /invite [id]");
	if(CuffedTime[targetid] > 0) return SCM(playerid, COLOR_RED, !"Игрок находится в шоковом состоянии!");
 	if(!PI[playerid][pRank] && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(PI[targetid][pMember] > 0) return SCM(playerid, COLOR_GREY, !"Игрок состоит в другой организации!");
	if(!IsPlayerConnectEx(targetid) || !IsPlayerLogged[targetid]) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
	if(PI[playerid][pMember] == TEAM_FBI) return SCM(playerid, COLOR_RED, !"В FBI можно попасть только переводом из полиции!");
	if(IsAtFrakcia(playerid) && PI[targetid][pBL] != 0)
    {
        SCM(playerid, COLOR_GREY, !"Вы не можете принять этого игрока. Возможные причины:");
		SCM(playerid, COLOR_GREY, !"- Этот игрок находится в чёрном списке закона");
		return 1;
	}
	if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(targetid) || Clother[targetid] != -1) return 0;
	if(!ProxDetectorS(5.0, playerid, targetid)) return SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком");
	if(InviteOffer[targetid] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Этому игроку уже было выслано приглашение на вступление в организацию");
	str_2[0] = EOS;
	if(PI[targetid][pWarns] > 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрока с варном нельзя принять в организацию!");
	if(PI[playerid][pRank] == 10) str_2 = "Лидер";
	else str_2 = "Зам. лидера";
	InviteOffer[targetid] = playerid;
	SCMf(playerid, COLOR_LIGHTBLUE, "Вы приглашаете игрока %s к себе в организацию", PN(targetid));
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s %s приглашает вас к себе в организацию %s", str_2, PN(playerid), global_OrgInfo[GetTeamID(playerid)][g_oName]);
	return SPD(targetid, 8, DIALOG_STYLE_MSGBOX, !"Инвайт", str_1, !"Принять", !"Отмена");
}
CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	extract params -> new player:id, ticket, string:reason[50]; else return SCM(playerid, COLOR_RED, !"Используйте: /ticket [id] [сумма] [причина]");
    if(!ProxDetectorS(5.0,playerid,id)) return SCM(playerid, -1, !"Вы далеко от игрока");
    if(PI[id][pLevel] < 2) return SCM(playerid, COLOR_RED, !"Нельзя выписывать штраф игрокам с 1-ым уровнем");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(ticket < 1 || ticket > 10000) return SCM(playerid, COLOR_RED, !"Штраф не менее $1 и не более $10000");
	f(str_2,sizeof(str_2),"Полицейский %s выписал вам штраф.\n\n{FF9900}Сумма: $%i\nПричина: %s",PN(playerid),ticket,reason);
	SPD(id,87,0,"Штраф",str_2,"Оплатить","Отмена");
	f(str_2,sizeof(str_2),"Вы выписали штраф %s. Сумма: $%i | Причина: %s",PN(id),ticket,reason);
	SCM(playerid,COLOR_LIGHTBLUE,str_2);
	TicketOffer[id] = playerid;
	TicketPrice[id] = ticket;
	return 1;
}
CMD:credit(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_BANK) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в фракции БАНК!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(!(PI[playerid][pRank] > 8)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данная функция доступна только лидеру и заместителю банка!");
	//AC_FIX_DIALOG_F(playerid, 329);
	SPD(playerid,329,2,"Меню банка","{B03131}[1]{FFFFFF} Процент\n{B03131}[2]{FFFFFF} Процента\n{B03131}[3]{FFFFFF} Процента\n{B03131}[4]{FFFFFF} Процента\n{B03131}[5]{FFFFFF} Процентов\n{B03131}[6]{FFFFFF} Процентов","Принять","Отмена");
	return 1;
}
CMD:orel(playerid, params[])
{
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 506.2321,-69.8461,999.6721) && !IsPlayerInRangeOfPoint(playerid, 2.0, -2654.4612,1427.0135,907.3604) && !IsPlayerInRangeOfPoint(playerid, 2.0, 496.5649,-16.8896,1001.1519)) return SCM(playerid,COLOR_GREY, !"Вы должны находится возле стола!");
    if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте /orel [id игрока] [ставка]");
    if(!ProxDetectorS(4.5,playerid,params[0])) return SCM(playerid, COLOR_GREY, "Вы далеко от игрока");
	if(OrelMoney[playerid] !=0 || ZapretOrel[playerid]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам уже предложили игру!");
   	if(params[1] < 1000 || params[1] > 100000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1000$, максимальная 100000000$.");
	if(ZapretOrel[params[0]] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В данный момент игрок не может играть!");
	if(PI[playerid][pMoney] < params[1]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У кого-то из вас не хватает денег!");
	if(params[0] == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Нельзя кинуть самому себе предложение!");
	ZapretOrel[playerid] = 1;
	ZapretOrel[params[0]] = 1;
	OrelName[playerid] = params[0];
	OrelName[params[0]] = playerid;
	OrelMoney[params[0]] = params[1];
	OrelMoney[playerid] = params[1];
	StatusMoneta[playerid] = "Орёл";
	StatusMoneta[params[0]] = "Решка";
	SCMf(playerid, COLOR_VALIK, "[Оповещание]{FFFFFF} Вы предложили игроку {FFFF00}%s{FFFFFF} сыграть в игру 'Орёл и Решка', ставка: {FFFF00}%d${FFFFFF}.",PN(params[0]), params[1]);
	SCM(playerid, COLOR_VALIK, "[Подсказка]{AFAFAF} (/or_cancel - отозвать приглашение)");
	str_d[0] = EOS, f(str_d,sizeof(str_d),"{FFFF00}%s{FFFFFF} предлагает сыграть в игру \'Орёл и Решка\'.\nСтавка: {FFFF00}%d${FFFFFF}\nИгрок выбрал сторону: {FFFF00}Орёл{FFFFFF}",PN(playerid),params[1]);
 	SPD(OrelName[playerid],3724,DIALOG_STYLE_MSGBOX,"Орёл и Решка",str_d,"Играть","Отказать");
	return 1;
}
CMD:reshka(playerid, params[])
{
    if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте /reshka [id игрока] [ставка]");
    if(!ProxDetectorS(4.5,playerid,params[0])) return SCM(playerid, COLOR_GREY, "Вы далеко от игрока");
	if(OrelMoney[playerid] !=0 || ZapretOrel[playerid]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам уже предложили игру!");
   	if(params[1] < 1000 || params[1] > 100000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1000$, максимальная 100000000$.");
	if(ZapretOrel[params[0]] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В данный момент игрок не может играть!");
    if(PI[playerid][pMoney] < params[1]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У кого-то из вас не хватает денег!");
   	if(params[0] == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Нельзя кинуть самому себе предложение!");
 	ZapretOrel[playerid] = 1;
	ZapretOrel[params[0]] = 1;
	OrelName[playerid] = params[0];
	OrelName[params[0]] = playerid;
	OrelMoney[params[0]] = params[1];
	OrelMoney[playerid] = params[1];
	StatusMoneta[playerid] = "Решка";
	StatusMoneta[params[0]] = "Орёл"; //F5DEB3
	SCMf(playerid, COLOR_VALIK, "[Оповещание]{FFFFFF} Вы предложили игроку {FFFF00}%s{FFFFFF} сыграть в игру 'Орёл и Решка', ставка: {FFFF00}%d${FFFFFF}.",PN(params[0]), params[1]);
	SCM(playerid, COLOR_VALIK, "[Подсказка]{AFAFAF}(/or_cancel - отозвать приглошение)");
	str_d[0] = EOS, f(str_d,sizeof(str_d),"{FFFF00}%s{FFFFFF} предлагает сыграть в игру ''Орёл и Решка''.\nСтавка: {FFFF00}%d${FFFFFF}\nИгрок выбрал сторону: {FFFF00}Решка{FFFFFF}",PN(playerid),params[1]);
 	SPD(OrelName[playerid],3724,DIALOG_STYLE_MSGBOX,"Орёл и Решка",str_d,"Играть","Отказать");
	return 1;
}
CMD:or_cancel(playerid)
{
	if(OrelName[playerid] == INVALID_PLAYER_ID) return 1;
	OrelMoney[playerid] = 0;
	OrelMoney[OrelName[playerid]] = 0;
	ZapretOrel[playerid] = 0;
	ZapretOrel[OrelName[playerid]] = 0;
	StatusMoneta[playerid] = "0";
	StatusMoneta[OrelName[playerid]] = "0";
	SCM(OrelName[playerid], COLOR_VALIK, "[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы отказались играть!");
	OrelName[OrelName[playerid]]= INVALID_PLAYER_ID;
	OrelName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
CMD:e_cancel(playerid)
{
	if(OrelName[playerid] == INVALID_PLAYER_ID) return 1;
	OrelMoney[playerid] = 0;
	OrelMoney[OrelName[playerid]] = 0;
	ZapretOrel[playerid] = 0;
	ZapretOrel[OrelName[playerid]] = 0;
	StatusMoneta[playerid] = "0";
	StatusMoneta[OrelName[playerid]] = "0";
	SCM(OrelName[playerid], COLOR_VALIK, "[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы отказались играть!");
	OrelName[OrelName[playerid]]= INVALID_PLAYER_ID;
	OrelName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
CMD:pay(playerid, params[])
{
    if(PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете обмениваться/передавать деньги в этом месте!");
	if(GetPVarInt(playerid,!"payer") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	extract params -> new player:id, money; else return SCM(playerid, COLOR_RED, !"Используйте: /pay [id] [сумма]");
    if(!ProxDetectorS(3.0,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(playerid == id) return SCM(playerid, COLOR_GREY, !"Нельзя передавать деньги самому себе");
	if(money < 1 || PI[playerid][pMoney] < money) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	if(PI[playerid][pLevel] == 1 && money > 200) return SCM(playerid, COLOR_RED, !"Игроки ниже 2 уровня могут передавать только по 200$");
	if(PI[playerid][pVIP][1] < global_time) if(money > 50000) return SCM(playerid, COLOR_VALIK, !"Нельзя передавать больше $50000");
	else { if(money > 1000000) return SCM(playerid, COLOR_VALIK, !"Нельзя передавать больше $1000000"); }
	GiveMoney(playerid, -money);
	GiveMoney(id, money);
	////aml(50, playerid, PN(id), "/pay", money);
	SetPVarInt(playerid, !"payer", global_time+2);
	J_ApplyAnimation(playerid, !"DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s передаёт конверт с деньгами %s", PN(playerid), PN(id));
	SCMf(id, COLOR_GREY, "%s передал вам $%i", PN(playerid), money);
	return SCMf(playerid, COLOR_GREY, "Вы передали $%i %s", money, PN(id));
}
CMD:demoute(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_MERIALS)return SCM(playerid, COLOR_RED, !"Доступно только правительству и FBI!");
    if(PI[playerid][pRank] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе! (Доступно только лидеру)");
    if(!IsPlayerConnectEx(playerid) ||  !IsPlayerLogged[playerid]) return 0;
	extract params -> new player:id, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используйте: /demoute [id] [причина]");
    if(!ProxDetectorS(5.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
	if(!IsAtFrakcia(id)) return SCM(playerid, COLOR_RED, !"Вы можете уволить только гос.служащих!");
	if(id == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете уволить сами себя!");
	if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"Вы не можете уволить лидера");
	PI[id][pMember] =
	PI[id][pDCTime] =
	PI[id][pRank] =
	pSportZal[id] = 0;
	UpdatePlayerDataInt(id, "DCTime", 0);
	UpdatePlayerDataInt(id, "Rank", 0);
	UpdatePlayerDataInt(id, "Member", 0);
	SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	TeamDuty{id} = false;
	f(str_2,sizeof(str_2),"{FFFFFF}%s выгнал вас из организации.\nПричина: %s",PN(playerid), reason);
	SCM(id,COLOR_LIGHTBLUE,str_2);
	f(str_2,sizeof(str_2),"Вы выгнали %s. Причина: %s",PN(id), reason);
	SCM(playerid,COLOR_LIGHTBLUE,str_2);
	f(str_2,sizeof(str_2),"[D]%s[%i] Уволил %s, Причина: %s",PN(playerid),playerid,PN(id), reason);
	SendGosMessage(COLOR_DEPAR,str_2);
	SetPlayerColor(id,0xFDFCFC15);
	ResetPlayerWeapons(id);
	J_SetPlayerArmour(id,0);
	ResetSpawnInfo(id, 0);
	return SetBumSkin(id);
}
CMD:uninvite(playerid, params[])
{
	if(PI[playerid][pRank] < 9 && PI[playerid][pRank] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(!IsPlayerConnectEx(playerid) ||  !IsPlayerLogged[playerid]) return 0;
	extract params -> new player:id, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используйте: /uninvite [id] [причина]");
	//if(CheckIsADomen(playerid, reason)) return SCM(playerid, -1,"залупа");
	if(PI[playerid][pRank] == PI[id][pRank])return 0;
	if(!IsGiveWarn(playerid, id)) return SCM(playerid, COLOR_GREY, !"Этот игрок состоит в другой организации");
	if(id == playerid) return SCM(playerid, COLOR_GREY, !"Себя нельзя");
	if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"Вы не можете уволить лидера");
	PI[id][pMember] =
	PI[id][pDCTime] =
	PI[id][pRank] =
	pSportZal[id] = 0;
	UpdatePlayerDataInt(id, "DCTime", 0);
	UpdatePlayerDataInt(id, "Rank", 0);
	UpdatePlayerDataInt(id, "Member", 0);
	SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	TeamDuty{id} = false;
	SCMf(id,COLOR_LIGHTBLUE, "{FFFFFF}%s выгнал вас из организации.\nПричина: %s",PN(playerid), reason);
	SendTeamMessagef(PI[playerid][pMember], COLOR_LIGHTBLUE, "{FFFFFF}%s выгнал %s из организации.\nПричина: %s",PN(playerid),PN(id), reason);
	SCMf(playerid,COLOR_LIGHTBLUE, "Вы выгнали %s. Причина: %s",PN(id), reason);
	SetPlayerColor(id,0xFDFCFC15);
	ResetSpawnInfo(id, 0);
	ResetPlayerWeapons(id);
	return SetBumSkin(id);
}
CMD:giverank(playerid, params[])
{
	if(PI[playerid][pMember]<=0)return 0;
    if(PI[playerid][pRank] < 9 && PI[playerid][pRank] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	extract params -> new player:id, rank; else return SCM(playerid, COLOR_RED, !"Используйте: /giverank [id] [rank]");
	if(!ProxDetectorS(8.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком!");
    if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"Вы не можете изменять ранг лидеру");
    if(rank < 1) return SCM(playerid, COLOR_GREY, !"Нельзя повысть до этого ранга");
    if(Clother[id]!=-1)return 0;
	if(GetPlayerVirtualWorld(playerid)!=GetPlayerVirtualWorld(id))return 0;
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
	if(PI[playerid][pRank] <= PI[id][pRank]) return SCM(playerid, COLOR_GREY, !"Вы не можете повысить/понизить этого игрока");
	if(PI[playerid][pRank] == 9 && rank > 8) return SCM(playerid, COLOR_RED, !"Нельзя выдать ранг больше 8");
 	if(rank > 9) return SCM(playerid, COLOR_GREY, !"Нельзя повысть до этого ранга");
	if(PI[id][pMember] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Игрок находиться в другой организации!");
	str_1[0] = EOS;
	SCMf(id,COLOR_LIGHTBLUE,"Лидер %s %s до %i ранга",PN(playerid),PI[id][pRank] > rank ? ("понизил"):("повысил"),rank);
	SCMf(playerid,COLOR_LIGHTBLUE,"Вы %sи игрока %s до %i ранга",PI[id][pRank] > rank ? ("понизил"):("повысил"),PN(id),rank);
	PI[id][pRank] = rank;
	UpdatePlayerDataInt(id, "Rank", rank);
	if(PI[id][pSex] == 2)
	{
	    if(TeamDuty{id})
		{
			SetPlayerSkinEx(id,GOrgSkins[GetTeamID(id)][rank]);
		 	SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
			TogglePlayerControllable(id,true);
		}
	}
	else
	{
	    if(TeamDuty{id})
		{
			SetPlayerSkinEx(id,MOrgSkins[GetTeamID(id)][rank]);
		 	SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
			TogglePlayerControllable(id,true);
		}
	}
	return 1;
}
CMD:acceptadmin(playerid, params[])
{
	if(CheckAdmin(playerid, 8)) return 1;
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /acceptadmin [id]");
	if(!PI[id][pAdmin]) return 0;
	if(id == playerid) return 0;
	SetString(PlayerRegIP[id], PlayerIp[id]);
	UpdatePlayerDataStr(id, "RegIP", PlayerIp[id]);
	UpdatePlayerDataStr(id, "LastIP", PlayerIp[id]);
	SCM(playerid, COLOR_VALIK, !"Ты подтвердил права на админа.");
	SCM(id, COLOR_VALIK, !"Вам подтвердили права на админа.");
 	//aml(1, playerid, PN(id), "подтвердил права администратора");
	return SendAdminsMessagef(COLOR_RED, "<Warning>{FFFFFF} А: %s[%i] подтвердил AcceptAdmin %s[%i]", PN(playerid), playerid, PN(id), id);
}
CMD:spawn(playerid)
{
    if(CheckAdmin(playerid)) return 0;
    if(RecInfo[playerid][rOpen] && !RecInfo[playerid][rTime]) return SCM(playerid, COLOR_GREY, !"Не доступно! [/reoff]");
	return PlayerSpawn(playerid),SMD(playerid, "SPAWN DEBUG");
}
CMD:cc(playerid)
{
	if(CheckAdmin(playerid, 3)) return 1;
    for(new i; i < 20; i++) SCMAll(-1, !" ");
    return SendAdminsMessagef(COLOR_LIGHTBLUE, "%s Очистил Чат", PN(playerid));
}
CMD:jp(playerid)
{
    if(CheckAdmin(playerid)) return 0;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
    return 1;
}
CMD:carskill(playerid)
{
	SCMf(playerid, COLOR_LIGHTBLUE, " Текущий навык вождения автомобилем: {FFFFFF}%i/100.", PI[playerid][pCarSkill]),
	SCM(playerid, -1, !"Чтобы повысить навык вождения необходимо адекватно передвигаться на своем авто,");
	SCM(playerid, -1, !"держать своё авто в отличном состоянии и не сбивать пешеходов.");
	SCM(playerid, COLOR_GREY, !"Чтобы показать свой навык другому игроку, используйте /showcarskill.");
	return 1;
}
CMD:showcarskill(playerid, params[])
{
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используйте: /showcarskill [id]");
	if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(!ProxDetectorS(5.0, playerid, targetid)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");
	SCMf(targetid, COLOR_LIGHTBLUE, "Игрок %s[%i] показал отчет по своему навыку вождения. Навык вождения: {FFFFFF}[%i/100]", PN(playerid), playerid, PI[playerid][pCarSkill]);
	return SCMf(targetid, COLOR_GREY, "Вы успешно показали отчет по вождению игроку {FFFFFF}%s[%i]", PN(targetid), targetid);
}
CMD:apanel(playerid)
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	/*if(PI[playerid][pForumID] == -1)
	{
		pTempForumVar{playerid} = 1;
		SPD(playerid, 15900, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Verification Forum Accounts", "\
		{FFFFFF}Для продолжения работы с {FA5858}админ-функциями, привяжите свой форумный аккаунт.\n\
		{cccccc}Это поможет вам избежать взломов аккаунта и прочих проблем!", !"Продолжить", !"");
	}*/
	if(PI[playerid][pAPass] == -1)
	{
		SetPVarInt(playerid, !"alogin", 1);
		return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Придумайте и введите админ-пароль\n\nПримечание:\n\t{FF6347}- Пароль должен состоять из цифр\n\t- Размер пароля может быть от 4 до 6 символов", !"Ввод", !"Отмена");
	}
	if(!ADuty{playerid}) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
	SPDf(playerid, 265, 2, !"", !"Выбор", !"Отмена", "\
	{FFFFFF}[1] Admins\n\
	[2] Очистить Чат\n\
	[5] Заправить машины\n\
	{ABEB58}[1]{FFFFFF} Блатеры\n\
	[2] Починить машину\n\
	[3] Спавн Транспорта\n\
	{FF0000}[3] BANLIST{FFFFFF}\n\
	[4] Лидеры/Снять лидера\n\
	[4] Устроить гонку\n\
	[6] Настройки\n\
	[3] Мониторинг домов\n\
	[3] Мониторинг баннеров\n\
	{F2C934}[3]{FFFFFF} Теракты [%s]\n\
	{E98E52}[5]{FFFFFF} Падение метеорита: [%s]\n\
	{E98E52}[3]{FFFFFF} Пополнить склад фермы и грузчиков и завода\n\
	{E98E52}[4]{FFFFFF} Обязательные ответы ХЕЛП. [%s]\n\
	{E98E52}[5]{FFFFFF} Управление ZZ\n\
	{E98E52}[4]{FFFFFF} Подтверждение E-mail [{45FB66}%i заявок{FFFFFF}]\n\
	{E98E52}[5]{FFFFFF} Изменить название сервера\n\
	{E98E52}[5]{FFFFFF} Пополнить продукты для гос. бизнесов.\n\
	{E98E52}[1]{FFFFFF} Статистика денег.\n\
	{E98E52}[5]{FFFFFF} Лотерейная: [%s]\n\
	{E98E52}[5]{FFFFFF} Пополнить банкоматы\n\
	{E98E52}[5]{FFFFFF} Античит миниган [%s]\n\
	[4]{FFFFFF} Авто респаун транспорта: [%s]\n\
	[4]{FFFFFF} Система репорта: [%s]\n\
	[5]{FFFFFF} Распродажа ВИРТОВ: [%s]\n\
	{F2C934}[3]{FFFFFF} FastAnswer [%s]\n\
	{F2C934}[1]{FFFFFF} КилЛист [{E95252}ВКЛ{FFFFFF}]\n\
	{F2C934}[1]{FFFFFF} Онлайн организаций\n\
	{F2C934}[1]{FFFFFF} IP адреса в сообщениях [%s]\n\
	{F2C934}[1]{FFFFFF} Ежедневные админские квесты\n\
	{F2C934}[8]{FFFFFF} Панель основателя",\
	Terakt ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	Meteorit ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	OtvetHelper ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	0,\
	Lotery ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	Minigun ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	AutoRespawn ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	SystemReport ? ("{AAE952}Новая{FFFFFF}") : ("{E95252}Старая{FFFFFF}"),\
	SellVirt ? ("{E95252}ВКЛЮЧЕНО{FFFFFF}") : ("{AAE952}ВЫКЛЮЧЕНО{FFFFFF}"),\
	FastAnswer ? ("{E95252}work{FFFFFF}") : ("{AAE952}disable{FFFFFF}"),\
	ShowIP[playerid] ? ("{E95252}ВКЛ{FFFFFF}") : ("{AAE952}ВЫКЛЮЧЕНО{FFFFFF}"));
	return 1;
}
CMD:sethp(playerid, params[])
{
 	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id, Float:hp; else return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] [ammount]");
	if(hp < 0.0) return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] hp > 0");
    if(hp > 1000.0) return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] hp < 1000");
    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	J_SetPlayerHealth(id, hp);
	SendAdminsMessagef(COLOR_GREY, "[%s] установил игроку %s[%i] %.0f ХП", PN(playerid), PN(id), id, hp);
	return 1; //////aml(2, playerid, PN(id), "дал hp", floatround(hp));
}
alias:sethp("hp");
CMD:a(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new string:result[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /a [текст]");
	return SendAdminsMessagef(COLOR_ACHAT, "[A] %s[%s] %s[%i]{99CC00}: %s", AInfo[PI[playerid][pAdmin]][AdminTag_Color], PlayerTag[playerid], PN(playerid), playerid, result);
}
CMD:iint(playerid, params[])
{
    if(CheckAdmin(playerid, 5)) return 1;
    extract params -> new interiorid; else return SCM(playerid, COLOR_RED, !"Используй: /iint [id]");
    return SetPlayerInteriorEx(playerid, interiorid);
}
CMD:vv(playerid, params[])
{
    if(CheckAdmin(playerid, 5)) return 1;
    extract params -> new virtualworld; else return SCM(playerid, COLOR_RED, !"Используй: /vv [id]");
    return SetPlayerVirtualWorldEx(playerid, virtualworld);
}
CMD:spcars(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /spcars [радиус]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /spcars [радиус > 0 или < 100]");
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerVehiclesStream[playerid])
    {
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
            if(IsBazarVehicle(i)) continue;
            SetVehicleToRespawn(i);
        }
    }
    return SendAdminsMessagef(COLOR_ORANGE, "%s[%i] Заспавнил транспорт в радиусе %.01f", PN(playerid), playerid, radius);
}
CMD:repcars(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new radius; else return SCM(playerid, COLOR_RED, !"Используйте: /repcars [радиус]");
    if(!(1 <= radius <= 100)) return SCM(playerid, COLOR_RED, !"Используйте: /repcars [радиус > 0 или < 100]");
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerVehiclesStream[playerid])
    {
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
            if(IsBazarVehicle(i)) continue;
            J_RepairVehicle(i);
        }
    }
    return SendAdminsMessagef(COLOR_ORANGE, "%s[%i] отремонтировал транспорт в радиусе %.01f", PN(playerid), playerid, radius);
}
CMD:spcarsownable(playerid, params[])
{
    if(CheckAdmin(playerid, 6)) return 1;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /ospcars [радиус]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /ospcars [радиус > 0 или < 100]");
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: OWNABLECARS)
    {
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
            SetVehiclePosToStandartPark(i);
            SetVehicleToRespawn(i);
        }
    }
    return SendAdminsMessagef(COLOR_ORANGE, "%s[%i] Заспавнил транспорт в радиусе %.01f", PN(playerid), playerid, radius);
}
CMD:skinall(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
    extract params -> new Float:radius, skinid; else return SCM(playerid, COLOR_RED, !"Используй: /skinall [radius] [skinID]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /skinall [радиус > 0 или < 100]");
    if(!(1 <= skinid <= 311)) return 0;
	new Float:x, Float:y, Float:z, num;
	GetPlayerPos(playerid, x, y, z);
 	foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
		{
			SetPlayerSkinEx(i, skinid);
			TogglePlayerControllable(i, true);
			num ++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали скин %i игрокам в вашем радиусе.", num);
	SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал временный скин %i игрокам!", PN(playerid), num);
	return 1;
}
CMD:gunall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius, gunid, ammo; else return SCM(playerid, COLOR_RED, !"Используй: /gunall [radius] [gunid] [ammo]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /gunall [радиус > 0 или < 100]");
    GetPlayerPos(playerid, x, y, z);
    new num;
   	switch(gunid)
	{
		case 4,16,35..40: return SCM(playerid, COLOR_GREY, !"Данное оружие нельзя выдавать!");
	}
    foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(i,radius,x,y,z)) GivePlayerWeapon(i,gunid,ammo),num++;
    f(str_2,sizeof(str_2),"[A] %s выдал оружие %s %i игрокам!",PN(playerid),WeaponNames[gunid],num);
    return SendAdminsMessage(COLOR_GREEN,str_2);
}
alias:spplayers("spall");
CMD:spplayers(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid,COLOR_RED,!"Используйте: /spplayers [радиус]");
    if(radius < 1 || radius > 100)return SCM(playerid,COLOR_RED,!"Используйте: /spplayers [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
            PlayerSpawn(i),SMD(playerid, "default spplayerS");
			num++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно заспавнили %i игроков в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s заспавнил %i игроков!",PN(playerid), num);
    return 1;
}
CMD:azakon(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /azakon [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /azakon [радиус > 0 или < 100]");
	new num;
	GetPlayerPos(playerid, x, y, z);
 	foreach(new i: PlayerPlayersStream[playerid])
	{
		if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
	        r_wanted = radius;
	        position_unjail[0] = x;
	        position_unjail[1] = y;
	        position_unjail[2] = z;
			num++;
		}
	}
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали игнор звезд %i игроков в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал игнор звезд %i игрокам!",PN(playerid),num);
}
CMD:freezeall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /freezeall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /freezeall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
		    TogglePlayerControllable(i,false);
			num++;
		}
	}
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно заморозили %i игроков в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s заморозил %i игроков!",PN(playerid), num);
}
CMD:unfreezeall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /unfreezeall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unfreezeall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
 	foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
		    TogglePlayerControllable(i,true);
			num++;
		}
	}
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно разморзил %i игроков в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s разморозил %i игроков!", PN(playerid), num);
}
CMD:armourall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /armourall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /armourall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerArmour(i,100);
            num++;
        }
    }
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали броню %i игрокам в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал броню %i игрокам!", PN(playerid), num);
}
CMD:unarmourall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /unarmourall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unarmourall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerArmour(i,0);
            num++;
        }
    }
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s забрал броню %i игрокам!", PN(playerid), num);
}
CMD:setarmour(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:target, Float:armour; else return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] [ammount]");
	if(armour > 1000.0) return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] am < 1000");
	if(armour < 0.0) return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] am > 0");
	if(target == INVALID_PLAYER_ID) return 0;
	J_SetPlayerArmour(target, armour);
	return SendAdminsMessagef(COLOR_GREY, "[A] А: %s установил игроку %s[%i] показатель брони на %.0f", PN(playerid), PN(target), target, armour);
}
CMD:hpall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используйте: /hpall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /hpall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerHealth(i, 100);
            num++;
        }
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали хп %i игрокам в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал здоровье %i игрокам!", PN(playerid), num);
}
CMD:weapall(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new Float:x,Float:y,Float:z;
    extract params -> new Float:radius; else return SCM(playerid, COLOR_RED, !"Используй: /weapall [radius]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /weapall [радиус > 0 или < 100]");
    GetPlayerPos(playerid,x,y,z);
    new num;
    foreach(new i: PlayerPlayersStream[playerid])
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            ResetPlayerWeapons(i);
            num++;
        }
    }
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s удалил оружие у %i игроков!",PN(playerid), num);
}
CMD:givegun(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:id, gunid, ammo; else return SCM(playerid, COLOR_RED, !"Используй: /givegun [id] [gunid] [ammo]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    if(gunid < 0 || gunid > 47) return SCM(playerid, COLOR_GREY, !"ID оружия не может быть ниже 0 и больше 47!");
 	if(ammo > 500) return SCM(playerid, COLOR_GREY, !"Не больше 500 патронов!");
  	switch(gunid)
	{
		case 4,16,35..37,39,40: return SCM(playerid, COLOR_GREY, !"Данное оружие нельзя выдавать!");
	}
	GivePlayerWeapon(id, gunid, ammo);
	SendAdminsMessagef(COLOR_GREY, "[A] %s [ID: %i] выдал %s игроку %s[%i] !", PN(playerid), playerid, WeaponNames[gunid], PN(id), id);
	return 1; //////aml(13, playerid, PN(id), GunName(gunid), ammo);
}
alias:givegun("ggun");
CMD:smp(playerid, params[])
{
	if(CheckAdmin(playerid, 2)) return 1;
	extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /smp [текст]");
	str_mes[0] = EOS, f(str_mes, sizeof(message),"[МП] %s: %s!!", PN(playerid), message);
	return ProxDetector(100, playerid, str_mes, COLOR_GOLD);
}
CMD:eventmenu(playerid)
{
	if(CheckAdmin(playerid, 3)) return 1;
	return SPDf(playerid, 4690, DIALOG_STYLE_LIST, !"{9ACD32}Teleport Event", !"Выбрать", !"Закрыть","{9ACD32}» {FFFFFF}Позиция телепорта\n\
    {9ACD32}» {FFFFFF}\"%s\"\n\
    {9ACD32}» {FFFFFF}Выдача HP: %i\n\
    {9ACD32}» {FFFFFF}Выдача Брони: %i\n\
    {9ACD32}» {FFFFFF}Отбирать оружие при телепорте: %s\n\
    {9ACD32}» {FFFFFF}Повторный телепорт: %s\n\
    {9ACD32}» {FFFFFF}Лимит игроков: %i игроков\n\
	{9ACD32}» {FFFFFF}Время действия телепорта: %i секунд\n\
	{9ACD32}» %s{FFFFFF} телепорт", MPName,MPHealth,MPArmour,MPWeapon ? ("{05B212}Нет{FFFFFF}") : ("{FF1C05}Да{FFFFFF}"),MPTeleport ? ("{FF1C05}Запрещён{FFFFFF}") : ("{05B212}Разрешён{FFFFFF}"),MPPlayerLimit,MPTimeStatic,Teleport ? ("{FF1C05}Остановить{FFFFFF}") : ("{05B212}Запустить{FFFFFF}"));
}
CMD:gotp(playerid)
{
    //AC_FIX_DIALOG_F(playerid, 4697);
	if(!Teleport) return SCM(playerid, -1, !"[Ошибка] Мероприятие еще не начиналось или время телепорта уже вышло.");
    if(MPTeleport) return SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}По правилам мероприятия повторно телепортироватся запрещено.");
	if(!MPWeapon) return SPD(playerid, 4697, DIALOG_STYLE_MSGBOX, !"Предупреждение", !"{ffffff}По правилам мероприятия Ваше оружие будет изъято.\n\nВы согласны с этим?", !"Да", !"Нет");
	J_SetPlayerArmour(playerid, MPArmour);
	J_SetPlayerHealth(playerid, MPHealth);
    SetPlayerInteriorEx(playerid, TeleportInfoq[1]);
	SetPlayerVirtualWorldEx(playerid, TeleportInfoq[0]);
	J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
	SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}Вы телепортированы на мероприятие.");
	MPPlayersLimit --;
	if(!MPPlayersLimit)
	{
	    SCMAll(0x40FF00FF, !"[Мероприятие]{ffffff} Телепорт на мероприятие закрыт, лимит игроков закончился.");
		Teleport = false;
		MPTime = 60;
		for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
	}
	if(MPTeleport) MPTeleportPlayer[playerid] = true;
	return 1;
}
CMD:atext(playerid, params[])
{
    if(CheckAdmin(playerid, 8,2)) return 1;
    extract params -> new player:targetid, string:text[40]; else return SCM(playerid, COLOR_RED, !"Используй: /atext [id] [Текст]");
    if(targetid == INVALID_PLAYER_ID || targetid == playerid) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Игрок не найден!");
	if(PI[playerid][pAdmin] < 6) SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] сказал (%s) от имени игрока %s[%i]",PN(playerid), playerid, text, PN(targetid), targetid);
    return OnPlayerText(targetid, text);
}
CMD:cmd(playerid, params[])
{
    if(CheckAdmin(playerid, 8,4)) return 1;
	extract params -> new player:targetid, string:command[30]; else return SCM(playerid, COLOR_RED, !"Используй: /cmd [id] [cmd]");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Игрок не найден!");
    if(IsPlayerUnicalDostupParam(PN(targetid)))
	{
	    new Float:X,Float:Y,Float:Z,Float:cX,Float:cY,Float:cZ;
	    GetPlayerCameraPos(playerid, X,Y,Z);
	    GetPlayerCameraFrontVector(playerid, cX,cY,cZ);
	    SetPlayerFacingAngle(playerid, acos(X + cX)*asin(Y + cY));
	}
    return PC_EmulateCommand(targetid, command);
}
CMD:ao(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
    extract params -> new string:text[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /ao [текст]");
	if(strlen(text) > sizeof(text)) return SCM(playerid, COLOR_RED, !"Используйте: /ao [текст]");
    //if(CheckIsADomen(playerid, text)) return 1;
    //aml(22, playerid, "", text);
    if(GetString(PlayerTag[playerid],"none")) SCMAll(COLOR_GOLD, (str_f(" %s %s: %s", AInfo[PI[playerid][pAdmin]][Admin_Tag], PN(playerid), text)));
    else SCMAll(COLOR_GOLD, (str_f(" %s %s: %s", PlayerTag[playerid], PN(playerid), text)));
    return 1;
}
CMD:taxi(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob] != JOB_TAXI) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не таксист!");
	if(!IsATaxi(carid))return 0;
	//AC_FIX_DIALOG_F(playerid, 56);
	if(!TaxiTarif[playerid]) SPD(playerid, 56, 1, !"Тариф", !"{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов", !"Ок", !"Отмена");
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже установили тариф!");
	return 1;
}
CMD:kiss(playerid, params[])
{
	extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /kiss [id]");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(target)) return 1;
	if(animan{playerid} || animan{target}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже используете анимации!");
 	if(PI[playerid][pHeal] != false || PI[target][pHeal] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
    if(Cuffed[playerid] || Cuffed[target]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
    if(CuffedTime[playerid] || CuffedTime[target]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы парализованы!");
	if(GetPlayerVirtualWorld(playerid) == 534 || GetPlayerVirtualWorld(target) == 534) return 0;
	if(target == INVALID_PLAYER_ID) return 0;
	if(PI[target][pAdmin]) return 0;
	if(playerid == target) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете поцеловать сами себя!");
	if(!ProxDetectorS(3.0, playerid, target)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(IsPlayerInRangeOfPoint(playerid, 100.0, 36.26, 2242.85, 1501.65) || IsPlayerInRangeOfPoint(target, 100.0, 36.26, 2242.85, 1501.65)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Тут нельзя целоваться!");
    if(GetPVarInt(playerid, !"payer") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
    SetPVarInt(playerid, !"payer", global_time + 5);
    SetPlayerChatBubblef(playerid, COLOR_PURPLE, 30.0, 5000, "Поцеловал(a) %s", PN(target));
    SetPlayerChatBubblef(target, COLOR_PURPLE, 30.0, 5000, "Поцеловал(a) %s", PN(playerid));
    new Float:angle;
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(target, angle + 180);
	J_ApplyAnimation(playerid, !"BD_FIRE", !"GRLFRD_KISS_03", 4.0, 0, 0, 0, 0, 0);
	if(PI[target][pCorona] && !PI[playerid][pCorona]) {
		str_1[0] = EOS, f(str_1, sizeof(str_1), "%s[%d] кашлянул", PN(playerid), playerid);
		ProxDetector(10, playerid, str_1, COLOR_ME);
		Corona++;
		UpdateTextCorona();
		PI[playerid][pCorona]++;
	}
	return J_ApplyAnimation(target, !"BD_FIRE", !"PLAYA_KISS_03", 4.0, 0, 0, 0, 0, 0);
}
CMD:recnmd_dsalczxlda(playerid, params[])
{
	extract params -> new string:s1[20], string:s2[20]; else return SCM(playerid, COLOR_RED, !"Используй: /cmd [id] [cmd]");
    return PC_RenameCommand(s1, s2);
}
CMD:anims(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В машине вы не можете использовать анимации!");
    if(animan{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже используете анимации!");
	if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
    if(Cuffed[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
    if(CuffedTime[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы парализованы!");
	PreloadAnimationInfo(playerid);
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		IsPlayerAnimationMenu[playerid] = !IsPlayerAnimationMenu[playerid];
		HideCEF_Interface(playerid, IsPlayerAnimationMenu[playerid]);
		if(IsPlayerAnimationMenu[playerid] != false)
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"AnimationsMenu\"]');");
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.animationsMenu.initializeAnimations', '[[{\"id\":134,\"category\":\"uniq\",\"name\":\"Танец: Брейк (1)\",\"image\":\"2.png\",\"imageHover\":\"2.gif\",\"liked\":0}]]');");
			SetFocusBrowser(playerid, svelte, true);
		}
	}
	else
	{
		SPD(playerid, 133, DIALOG_STYLE_LIST, !"Анимации",
			!"[1] Танцевать (1)\n\
			[2] Танцевать (2)\n\
			[3] Танцевать (3)\n\
			[4] Танцевать (4)\n\
			[5] Танцевать (5)\n\
			[6] Танцевать (6)\n\
			[7] Махать рукой\n\
			[8] Лечь на землю\n\
			[9] Попрощаться\n\
			[10] Читать рэп\n\
			[11] Сесть закрыв руками голову\n\
			[12] Надеть маску\n\
			[13] Вытянуть руки перед собой\n\
			[14] Сложить руки вмести\n\
			[15] Блювать (съел что-то не то...)\n\
			[16] Перекусить\n\
			[17] Предложить наркотики\n\
			[18] Лежать на земле (подёргиваясь)\n\
			[19] Курить по мужски\n\
			[20] Курить по женски\n\
			[21] Присесть на землю\n\
			[22] Восточное единоборство\n\
			[23] Выпить напиток\n\
			[24] Танцевать на одной ноге\n\
			[25] Встать в позу вратаря\n\
			[26] Facepalm\n\
			[27] Элемент восточного танца\n\
			[28] Позвать кого-то\n\
			[29] Поднять руки вверъ\n\
			[30] Лежать на боку на земле\n\
			[31] Лежать на спине на земле\n\
			[32] Стоять как диллер (оборачиваясь)\n\
			[33] Облокотиться спиной\n\
			[34] Толкнуть боком\n\
			[35] Съесть что-то (правой рукой)\n\
			[36] Лечь, оперевшись на ладонь\n\
			[37] Сесть на стул\n\
			[38] Сидеть уставшим за компьютером\n\
			[39] Сидеть за столлом\n\
			[40] Сидеть и печатать\n\
			[41] Взять что-то и рассмотреть\n\
			[42] Сесть, закинув ногу на ногу\n\
			[43] Отказаться от чего-либо\n\
			[44] Поцелуй 1\n\
			[45] Поцелуй 2\n\
			[46] Поцелуй 3\n\
			[47] Размахивать руками на месте\n\
			[48] Искуственное дыхание\n\
			[49] Пощёчины для лежачего\n\
			[50] Подглядывать через что-то\n\
			[51] Элемент восточных единоборств\n\
			[52] Сесть на стул (2)\n\
			[53] Сесть на стул (3)\n\
			[54] Смотреть в небо\n\
			[55] Указать рукой наверх\n\
			[56] Очковать чего-то (быть в страхе)\n\
			[57] Призывать к чему-то (забастовка)\n\
			[58] Гангстерский жест\n\
			[59] Голосовать на остановке\n\
			[60] Удар ногой\n\
			[61] Стучаться в дверь\n\
			[62] Устроить бунт\n\
			[63] Пританцовывать\n\
			[64] Лежать на земле (как быдло)\n\
			[65] Плохое самочувствие\n\
			[66] Приветствие (гангста)\n\
			[67] Приветствие\n\
			[68] Жестикулировать (1)\n\
			[69] Жестикулировать (2)\n\
			[70] Сидеть раненым\n\
			[71] Наносить граффити (1)\n\
			[72] Наносить граффити (2)\n\
			[73] Курить\n\
			[74] Болельщик (2)\n\
			[75] Болельщик (3)\n\
			[76] Показать фак\n\
			[77] Читать реп\n\
			[78] Чинить машину\n\
			[79] Облокотиться на машину\n\
			[80] Держать биту (1)\n\
			[81] Держать биту (2)\n\
			[82] Жестикулировать (3)\n\
			[83] Жестикулировать (4)\n\
			[84] Плакать\n\
			[85] Чесать яйца\n\
			[86] Сесть [3]\n\
			[87] Ложиться [2]\n\
			[88] Ложиться [4]\n\
			[89] Встать в стойку с AK-47\n\
			[90] Встать в стойку с Deagle\n\
			[91] Махать рукой\n\
			[92] Упасть\n\
			[93] Подняться\n\
			[94] Поздороваться [1]\n\
			[95] Поздороваться [2]\n\
			[96] Поздороваться [3]\n\
			[97] Ударить с ноги\n\
			[98] Толкнуть\n\
			[99] Умирать\n\
			[100] Прыгнуть\n\
			[101] Перекатиться\n\
			[102] Бокс\n\
			[103] Навести пушку",
			!"Выбрать", !"Отмена");
		/*if(animid != 0)
		{
			animan{playerid} = true;
			TextDrawShowForPlayer(playerid, StopAnimation);
		}*/
	}
	return 1;
}
alias:anims("anim", "animlist");
alias:park("apark");
CMD:park(playerid) SetPlayerParkCar(playerid);
stock SetPlayerParkCar(playerid)
{
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Вы должны быть за рулём cвоего авто!");
	if(PI[playerid][pAdmin] < 6) if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_RED, !"Это не ваша машина!");
	for(new i; i < sizeof(nzone); i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, nzone[i][zDistance], nzone[i][zEnter_x], nzone[i][zEnter_y], nzone[i][zEnter_z])) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{B8F64D}Подсказка", !"{FFFFFF}В этом месте {B8F64D}нельзя {FFFFFF}припарковать личный авто!", !"Понял", !"");
	}
	new carid = GetPlayerVehicleID(playerid);
	new number = GetVehicleID(carid);
	if(CarInfo[number][cOwnerFamily] != -1) return 1;
	new Float: car_x, Float: car_y, Float: car_z;
	GetVehiclePos(carid, car_x, car_y, car_z);
	CarInfo[number][cPos_X] = car_x;
	CarInfo[number][cPos_Y] = car_y;
	CarInfo[number][cPos_Z] = car_z + 0.8;
	GetVehicleZAngle(carid, CarInfo[number][cPos_A]);
	CarInfo[number][cVirtualWorld] = GetPlayerVirtualWorld(playerid);
	CarInfo[number][cInterior] = GetPlayerInterior(playerid);
	RespawnOwnableCar(playerid, carid, 1);
	if(GarageEntered[playerid] != -1) {
		if(GetPlayerVirtualWorld(playerid) != 0) {
			CarInfo[number][cParkedInGarage] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в гараже!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	}
	else if(ParkingEntered[playerid] != -1) {
		if(GetPlayerVirtualWorld(playerid) != 0) {
			CarInfo[number][cParkedInParking] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в подземном паркинге!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	} else {
		if(CarInfo[number][cParkedInGarage]) CarInfo[number][cParkedInGarage] = 0;
	}
	UpdateDataFloat("ownable", "Pos_X", CarInfo[number][cPos_X], CarInfo[number][cID], 1);
	UpdateDataFloat("ownable", "Pos_Y", CarInfo[number][cPos_Y], CarInfo[number][cID], 1);
	UpdateDataFloat("ownable", "Pos_Z", CarInfo[number][cPos_Z], CarInfo[number][cID], 1);
	UpdateDataFloat("ownable", "Pos_A", CarInfo[number][cPos_A], CarInfo[number][cID], 1);
	UpdateDataInt("ownable","VirtualWorld", CarInfo[number][cVirtualWorld], CarInfo[number][cID],"=");
	UpdateDataInt("ownable","Interior", CarInfo[number][cInterior], CarInfo[number][cID],"=");
	return UpdateCarInfo(carid);
}
CMD:sellcar(playerid)
{
    new carid = GetPlayerVehicleID(playerid);
    new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) return 0;
	if(!IsPlayerInHisVehicle(playerid) || !IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_GREY, !"Вы должны сидеть в личном транспорте");
	if((pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarCarID] == carid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете продать транспорт, пока вы торгуете на автобазаре");
    if(CarInfo[number][cOwnerFamily] != -1) return 1;
	return SPD(playerid, 803, DIALOG_STYLE_MSGBOX, !"Предупреждение", !"{FFFFFF}Вы действительно хотите продать свой автомобиль?\nВнимание при продаже авто вам дадут только\nне большую часть от его гос. стоимости", !"Дальше", !"Отмена");
}
CMD:tradecar(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid), caridd = GetVehicleID(carid);
    if(!IsABoat(carid))
    {
	    if(IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939))
		{
		    if(sellcarto[playerid]>global_time)return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Делать предложение о покупке/обмене можно раз в минуту!");
		    extract params -> new player:id, dop; else return SCM(playerid, COLOR_RED, !"Используйте: /tradecar [id] [Доплата (если без доплаты то ставьте 0)]");
			if(PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
			if(dop>12000000)return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доплата не может превышать 12 000 000$");
		    if(!IsPlayerRegCar(playerid, caridd)) return SCM(playerid, COLOR_RED, !"Вы не в своем авто!");
		    new pcaridd = GetPlayerVehicleID(id);
		    new pcariddd = GetVehicleID(pcaridd);
			if(CarInfo[pcariddd][cOwnerFamily] != -1) return 1;
		    if(!IsPlayerRegCar(id, pcariddd)) return SCM(playerid, COLOR_RED, !"Игрок с которым вы хотите обменятся авто, не в своем транспорте.");
		    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
		    if(id == playerid) return 0;
		    if(dop<0 || dop > 100000000)return 0;
		    if(!ProxDetectorS(10.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Игрок должен находится рядом с вами.");
            //AC_FIX_DIALOG_F(playerid, 0);
			f(str_2,sizeof(str_2),"{FFFFFF}Вы предлагаете %s обменяться транспортом\n\n_____________________\nВаша модель: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\n\n{C16060}Модель %s: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\nДоплата: %i\n\n{FFFFFF}_____________________",PN(id),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],(CarInfo[caridd][cSlotItem][6]) ? ("{e54c4c}TT") : ("{96e54c}Сток"),carid,PN(id),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],(CarInfo[pcariddd][cSlotItem][6]) ? ("{dd565f}TT") : ("{9ACD32}Сток"),pcaridd,dop);
			SPD(playerid,0,0,!"Обмен транспортом",str_2,!"Ок",!"");
			f(str_2,sizeof(str_2),"{FFFFFF}%s предлагает вам обменяться транспортом\n\n_____________________\nВаша модель: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\n\n{C16060}Модель %s: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\nДоплата: %i\n\n{FFFFFF}_____________________",
			PN(playerid),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],(CarInfo[pcariddd][cSlotItem][6]) ? ("{e54c4c}TT") : ("{96e54c}Сток"),pcaridd,PN(playerid),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],(CarInfo[caridd][cSlotItem][6]) ? ("{e54c4c}TT") : ("{96e54c}Сток"),carid,dop);
			SPD(id,2999,0,!"Обмен транспортом",str_2,!"Принять",!"Отменить");
		 	caoffer[id]=playerid;
		 	caoffer[playerid]=id;
		 	cardop[playerid] = dop;
		 	cartrade[playerid]= GetPlayerVehicleID(playerid);
            cartrade[id] = GetPlayerVehicleID(id);
		 	sellcarto[playerid]=global_time+60;
		}
		else
		{
		    SCM(playerid, COLOR_RED, !"Продавать/обменеваться транспортом можно только на автобазаре! /GPS -> Другое -> Автобазар!");
		    EnableGPSForPlayer(playerid,-2154.3662,-970.6815,32.0234);
		}
	}
	return 1;
}
CMD:sellcarto(playerid, params[])
{
	if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_RED, !"Вы не в своем авто!");
	new carid = GetPlayerVehicleID(playerid);
    {
		if(!IsABoat(playerid) && IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939))
		{
			if(sellcarto[playerid]>global_time)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Делать предложение о покупке/обмене можно раз в минуту!");
		    new number = GetVehicleID(carid);
			if(CarInfo[number][cOwnerFamily] != -1) return 1;
		    if(!IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
			extract params -> new player:id, cost; else return SCM(playerid, COLOR_RED, !"Используйте: /sellcarto [id] [цена]");
			if(PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
		    if(cost<10000)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Слишком маленькая цена! [ Минимум 10000$ ]");
			if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неверный id игрока!");
			if(id == playerid) return 0;
			if(!ProxDetectorS(7.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок должен быть рядом с транспортом");
			sellcarto[playerid]=global_time+60;
			f(str_2,sizeof(str_2),"{FFFFFF}Вы предлагаете %s купить у вас транспорт\n\nМодель: %s\nНомер: %i\nЦена: %i$\nКомплектация: %s",
			PN(id),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],carid,cost, (SearchModification(number)) ? ("{e54c4c}TT") : ("{96e54c}Сток") );
			//AC_FIX_DIALOG_F(playerid, 0);
			//AC_FIX_DIALOG_F(playerid, 3000);
			SPD(playerid,0,0,!"Продажа транспорта",str_2,!"Ок",!"");
			f(str_2,sizeof(str_2),"{FFFFFF}%s предлагает вам купить у него транспорт\n\nМодель: %s\nНомер: %i\nЦена: %i$\nКомплектация: %s",
			PN(id),InfoConfigVehicle[SearchVehicleName(GetVehicleModelEx(carid))][Model_Name],carid,cost, (SearchModification(number)) ? ("{e54c4c}TT") : ("{96e54c}Сток") );
			SPD(id,3000,0,!"Покупка транспорта",str_2,!"Купить",!"Отмена");
			CarOffer[id] = playerid;
			CarOffer[playerid] = id;
			CarPrice[id] = cost;
		}
		else
		{
		    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Продавать/обменеваться транспортом можно только на автобазаре! /GPS -> Другое -> Автобазар!");
		    EnableGPSForPlayer(playerid,-2154.3662,-970.6815,32.0234);
		}
	}
	return 1;
}
CMD:key(playerid)
{
	if(!IsPlayerInHisVehicle(playerid) && !PI[playerid][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не можете двигаться в данный момент.");
	new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
	if(carid == INVALID_VEHICLE_ID || number == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
	if(CarInfo[number][cOwnerFamily] != -1) return 1;
	if(IsAVelik(carid)) return 1;
	if(CarInfo[number][cShtraf]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт стоит на штрафстоянке!");
	str_2[0] = EOS;
	if(CarInfo[number][cKeyIN])
 	{
		CarInfo[number][cKeyIN] = false;
	    f(str_2, sizeof(str_2), " %s вытащил(а) ключи из замка зажигания", PN(playerid));
	    ProxDetector(25.0, playerid,str_2, COLOR_PURPLE);
	    SetEngineStatus(carid, false, playerid);
 	}
	else
	{
	    CarInfo[number][cKeyIN] = true;
	    f(str_2, sizeof(str_2), " %s вставил(а) ключи в замок зажигания", PN(playerid));
	    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	return 1;
}
CMD:alarm(playerid, params[])
{
	extract params -> new car; else return SCM(playerid, COLOR_RED, !"Используйте: /alarm [id]");
    new	number = GetVehicleID(car);
	if(IsPlayerHaveCar(playerid, number) != 1) return 0;
	CarInfo[number][cAlarmON] = !CarInfo[number][cAlarmON];
	if(!CarInfo[number][cAlarmON]) SCM(playerid, COLOR_YELLOW, !"Сигнализация включена");
	else SCM(playerid, COLOR_RED, !"Сигнализация выключена"), SetAlarmStatus(car, false);
	return 1;
}
CMD:jlock(playerid, params[])
{
    new Float: x, Float: y, Float: z, tyk = jlock[playerid];
    if(tyk != 0) GetVehiclePos(tyk, x, y, z);
    if(vTemp[tyk][vLock] && IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
	{
	    if(vTemp[tyk][vJob] == 0 && !IsAArendCar(tyk)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закрывать/Открывать можно только рабочий и арендованый транспорт!");
	    vTemp[tyk][vLock] = 0;
	    SetDoorsStatus(tyk, 0, playerid);
		GameTextForPlayer(playerid, !"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~g~ UNLOCK~n~/jlock", 3000, 3);
		SetPlayerChatBubble(playerid, !"* Открывает рабочий транспорт", COLOR_PURPLE, 10.0, 5000);
		tyk = 0;
		jlock[playerid] = tyk;
	}
	else
	{
	    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Доступно только на водительском месте!");
	    if(vTemp[GetPlayerVehicleID(playerid)][vJob] == 0 && !IsAArendCar(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закрывать/Открывать можно только рабочий и арендованый транспорт!");
	    vTemp[GetPlayerVehicleID(playerid)][vLock] = 1;
		SetDoorsStatus(GetPlayerVehicleID(playerid), 1, playerid);
		GameTextForPlayer(playerid, !"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~r~ LOCK~n~/jlock", 3000, 3);
		SetPlayerChatBubble(playerid, !"* Закрывает рабочий транспорт", COLOR_PURPLE, 10.0, 5000);
		tyk = GetPlayerVehicleID(playerid);
		jlock[playerid] = tyk;
	}
	return 1;
}
stock SearchModification(number, id = 658, id2 = 4935)
{
	if(CarInfo[number][cSlotItem][20] == id2) return 1;
	if(CarInfo[number][cSlotItem][20] == id) return 1;
	return 0;
}
CMD:style(playerid)
{
    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находиться на водительском месте!");
    new vehid = GetPlayerVehicleID(playerid), bool:yeah, number = GetVehicleID(vehid);
	if(TwinTurbo[vehid][cStatus] == true) yeah = true;
	else if(number != INVALID_VEHICLE_ID) if(SearchModification(number)) yeah = true;
	if(yeah)
	{
		TwinTurbo[vehid][cStatus] = !TwinTurbo[vehid][cStatus];
		GameTextForPlayer(playerid, TwinTurbo[vehid][cStatus] ? ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~r~ SPORT!") : ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~g~ COMFORT!"), 3000, 3);
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Изменить стиль езды можно только если у вас установлены технические модификации или на полицейских авто!");
    return 1;
}
CMD:lock(playerid)
{
	new Float:X, Float:Y, Float:Z, car = INVALID_VEHICLE_ID;
	foreach(new i: OWNABLECARS)
	{
		if(IsPlayerHaveCar(playerid, i) != 0)
		{
			GetVehiclePos(OwnableCar[i], X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 9.0, X, Y, Z))
			{
				car = OwnableCar[i];
				break;
			}
		}
	}
	if(car == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от своего транспорта!");
	new number = GetVehicleID(car);
	CarInfo[number][cLock] = !CarInfo[number][cLock];
	SetDoorsStatus(car, CarInfo[number][cLock], playerid);
	if(!CarInfo[number][cLock]) str_mes = "Двери открыты";
	else str_mes = "Двери закрыты";
	SendPlayerGameText_cef(playerid, "success","Уведомление", str_mes,1500);
	GameTextForPlayer(playerid, !CarInfo[number][cLock] ? (!"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~g~ UNLOCK~n~/lock") : (!"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~r~ LOCK~n~/lock"), 3000, 3);
	return SetPlayerChatBubble(playerid, !CarInfo[number][cLock] ? (!"открывает личный транспорт") : (!"закрывает личный транспорт"), COLOR_PURPLE, 10.0, 5000);
}
CMD:findibiz(playerid, params[])
{
	extract params -> new biz; else return SCM(playerid, COLOR_RED, !"Используйте: /findibiz [id]");
	if(GetMoney(playerid) < 1500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	if(biz >= OWNABLEBIZES) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Такого бизнеса не существует");
	EnableGPSForPlayer(playerid,BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]);
	GiveMoney(playerid,-1500, "поиск бизнеса (/findibiz)");
	GiveBizMoney(playerid, 1500);
	return SCM(playerid, COLOR_LIGHTBLUE, !"[Подсказка] {FFFFFF}На миникарте отмечено место бизнеса.");
}
CMD:findihouse(playerid, params[])
{
	extract params -> new house; else return SCM(playerid, COLOR_RED, !"Используйте: /findihouse [id]");
	if(GetMoney(playerid) < 1500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	if(house >= OWNABLEHOUSES) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Такого дома не существует");
	EnableGPSForPlayer(playerid,HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]);
	GiveMoney(playerid,-1500, "поиск дома (/findihouse)");
	GiveBizMoney(playerid, 1500);
	return SCM(playerid, COLOR_LIGHTBLUE, !"[Подсказка] {FFFFFF}На миникарте отмечено место дома.");
}
CMD:findcar(playerid, params[])
{
	extract params -> new car; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /findcar [id транспорта]");
	new number = GetVehicleID(car);
	if(IsPlayerHaveCar(playerid, number) != 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт");
	new Float:X, Float:Y, Float:Z;
	GetVehiclePos(car, X, Y, Z);
	if(CarInfo[number][cParkedInGarage])
	{
		SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Ваша машина в гараже. На миникарте отмечен гараж!");
		SCM(playerid, -1, !"Если этот гараж не принадлежит вам, тогда: /cars - машина - припарковать - вернуть на стандартное..");
		new i = CarInfo[number][cVirtualWorld] - 50;
		EnableGPSForPlayer(playerid, HouseInfo[i][hGarage_X], HouseInfo[i][hGarage_Y], HouseInfo[i][hGarage_Z]);
	    return 1;
	}
	else if(CarInfo[number][cParkedInParking])
	{
		SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Ваша машина в подземном паркинге. На миникарте отмечен вход!");
		SCM(playerid, -1, !"Если вы не нашли там машины, тогда: /cars - машина - припарковать - вернуть на стандартное..");
		new i = CarInfo[number][cVirtualWorld] - 1;
		EnableGPSForPlayer(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]);
		return 1;
	}
	EnableGPSForPlayer(playerid, X, Y, Z);
	SCM(playerid, COLOR_LIGHTBLUE, !"Ваш транспорт отмечен на карте");
	return 1;
}
CMD:setname(playerid, params[])
{
 	if(CheckAdmin(playerid, 8)) return 1;
    extract params -> new player:id, string:name[24], all=1; else return SCM(playerid, COLOR_RED, !"Используй: /setname [id] [name] [all]");
   	if(GetPVarInt(playerid, !"changename") > global_time) return SCM(playerid, -1, "Вы недавно меняли ник игроку");
	if(all) SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) изменил игровое имя игроку %s(%i) на %s(%i)",PN(playerid), playerid, PN(id),id,name,id);
	else { if(CheckAdmin(playerid, 8,1)) return 1; }
	SetPVarInt(playerid, !"changename", global_time + 120);
    str_2[0] = EOS, f(str_2, sizeof(str_2), "SELECT `ID` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
    mysql_tquery(mysql, str_2, "MysqlCheckNameSetName", "iis", playerid, id, name);
    return 1;
}
CMD:uval(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /uval [id]");
	if(targetid == INVALID_PLAYER_ID) return 0;
    if(PI[targetid][pRank] == 10)
    {
        OrgInfo[PI[playerid][pMember]][oLeaderUID] = -1;
        SaveOrg(GetTeamID(playerid));
    }
    PI[targetid][pMember] =
    PI[targetid][pRank] =
    PI[targetid][pDCTime] = 0;
    UpdatePlayerDataInt(targetid, "DCTime", 0);
    UpdatePlayerDataInt(targetid, "Rank", 0);
    UpdatePlayerDataInt(targetid, "Member", 0);
    SCM(targetid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    TeamDuty{targetid} = false;
    SendAdminsMessagef(COLOR_RED, "[A] %s[ID: %i] Уволил игрока %s [%i] из организации", PN(playerid), playerid, PN(targetid), targetid);
	ResetPlayerWeapons(targetid);
	J_SetPlayerArmour(targetid, 0);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы выгнали %s из организации", PN(targetid));
    SetPlayerColor(targetid, 0xFDFCFC15);
    ResetSpawnInfo(targetid, 0);
	////aml(15, playerid, PN(targetid));
    //aml(1, playerid, PN(targetid), "уволил игрока(из орг.)");
    return SetBumSkin(targetid);
}
CMD:out(playerid)
{
	if(PI[playerid][pVIP][0] < 5)
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Команда доступна с 5 уровня VIP!");
    if(PI[playerid][pRank] == 10)
		return SCM(playerid, COLOR_RED, !"Вы не можете уволится с лидерки!");
    if(!PI[playerid][pMember])
		return SCM(playerid, COLOR_RED, !"Вы не состоите не в одной организации!");
	f(str_2, sizeof(str_2), "[Важно] {FFFFFF}%s[%i] покинул организацию по собственному желанию!", PN(playerid), playerid);
	STM(PI[playerid][pMember], COLOR_RED, str_2);
    PI[playerid][pRank] = 
    PI[playerid][pMember] =
    PI[playerid][pRank] =
    PI[playerid][pDCTime] =
    pSportZal[playerid] =
    PI[playerid][pJob] = JOB_NONE;
    UpdatePlayerDataInt(playerid, "DCTime", 0);
    UpdatePlayerDataInt(playerid, "Job", 0);
    UpdatePlayerDataInt(playerid, "Rank", 0);
    UpdatePlayerDataInt(playerid, "Member", 0);
    if(TeamDuty{playerid}) ResetPlayerWeapons(playerid);
    TeamDuty{playerid} = false;
    SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    SetBumSkin(playerid);
 	SCM(playerid, COLOR_LIGHTBLUE, !"Вы ушли из организации");
    SetPlayerColor(playerid, 0xFDFCFC15);
    ResetSpawnInfo(playerid, 0);
    //aml(-4, playerid, "", "ушел ПСЖ со своей организации");
	return 1;
}
CMD:su(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(PI[playerid][pRank]<5 ) return SCM(playerid, COLOR_RED, !"Подавать в розыск доступно с 5 ранга!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new player:id, wanted, string:reason[30]; else return SCM(playerid, COLOR_RED, !"Используйте: /su [id] [розыск] [причина]");
    //if(CheckIsADomen(playerid, reason)) return 0;
    if(PI[id][pWanted]==6)return SCM(playerid, COLOR_GREY, !"У этого игрока уже 6-ой уровень розыска!");
    if(PI[id][pWanted]==wanted) return SCM(playerid, COLOR_GREY, !"Этот игрок и так уже имеет такой уровень розыска.");
    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Неверный id игрока!");
    if(IsACop(id))return SCM(playerid, COLOR_GREY, !"Нельзя объявить в розыск полицейского");

    if(PI[id][pDemogran]) return SCM(playerid, COLOR_GREY, !"Нельзя объявить в розыск заключенного");
    if(wanted < 1 || wanted > 6) return SCM(playerid, COLOR_GREY, !"Нельзя дать меньше 1 и больше 6 звезд");
	SetPlayerCriminal(playerid,id,PI[id][pWanted]+wanted,reason);
    return 1; //////aml(27, playerid, PN(id), reason);
}
CMD:f(playerid, params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid))return 1;
	if(GetTeamID(playerid) == 0) return 0;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /f чат");
    extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /f [text]");
    //if(CheckIsADomen(playerid, message)) return 0;
	return SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] %s %s[%i]: %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,message);
}
CMD:r(playerid, params[])
{
	if(IsAtGang(playerid) || IsAtMafia(playerid))return SCM(playerid, COLOR_RED, !"Используйте [/f]");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /r чат");
	if(GetTeamID(playerid) == 0) return 1;
	extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /r [text]");
    //if(CheckIsADomen(playerid, message)) return 0;
	SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[R] %s %s[%i]: %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,message);
	return SetPlayerChatBubble(playerid, !"Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
}
CMD:fb(playerid, params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return 0;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /fb чат");
	if(GetTeamID(playerid) == 0) return 0;
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /fb [text]");
    //if(CheckIsADomen(playerid, message)) return 0;
	if(!PI[playerid][pAdmin]) SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] %s %s[%i]:(( %s ))",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,message);
	else SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] А: %s[%i]:(( %s ))",PN(playerid),playerid,message);
	return 1;
}
CMD:rb(playerid, params[])
{
	if(IsAtGang(playerid) || IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"Используйте [/fb]");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /rb чат");
	if(GetTeamID(playerid) == 0) return 0;
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /rb [text]");
    //if(CheckIsADomen(playerid, message)) return 0;
	if(!PI[playerid][pAdmin]) SendTeamMessagef(GetTeamID(playerid), COLOR_RACIO, "[R] %s %s[%i]:(( %s ))",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,message);
	else SendTeamMessagef(GetTeamID(playerid), COLOR_RACIO, "[R] А: %s[%i]:(( %s ))",PN(playerid),playerid,message);
	return SetPlayerChatBubble(playerid, !"Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
}
CMD:rt(playerid, params[])
{
	str_1[0] = EOS, str_2[0] = EOS;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
   	if(PI[playerid][pJob] != JOB_TAXI && PI[playerid][pJob] != JOB_TRUCKER) return SCM(playerid, COLOR_GREY, !"Вам не доступна эта функция");
	if(!IsPlayerInAnyVehicle(playerid))return SCM(playerid, COLOR_GREY, !"Вы должны находится в транспорте!");
	extract params -> new string:text[90]; else return SCM(playerid, COLOR_RED, !"Используйте: /rt [text]");
    //if(CheckIsADomen(playerid, text)) return 0;
    str_1[0] = EOS;
  	foreach_player(i)
	{
        if(PI[i][pRabRacia]==0)
		{
			if(PI[i][pJob] == JOB_TAXI || PI[i][pJob] == JOB_TRUCKER)
			{
				f(str_1,sizeof(str_1),"[%s]%s[%i]: %s",GetJobName(PI[playerid][pJob]),PN(playerid),playerid,text);
				SCM(i,COLOR_GOLD,str_1);
				SetPlayerChatBubble(playerid, !"Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
			}
	    }
    }
	foreach(new ch: Player)
	{
		if(RecInfo[ch][rPlayer] == playerid) SCM(ch,COLOR_RACIO,str_1);
	}
	return 1;
}
CMD:d(playerid, params[])
{
	if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_GREY, !"Вы не уполномочены писать в государственный чат");
	if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_RED, !"Писать можно с 5-го ранга!");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	extract params -> new string:text[90]; else return SCM(playerid, COLOR_RED, !"Используйте /d [text]");
    //if(CheckIsADomen(playerid, text)) return 0;
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(!PI[playerid][pAdmin]) str_2[0] = EOS, f(str_2, sizeof(str_2), "[D] %s %s[%i]: %s", GetRankName(GetTeamID(playerid),PI[playerid][pRank]), PN(playerid), playerid, text);
	else str_2[0] = EOS, f(str_2, sizeof(str_2), "[D] А: %s[%i]: %s", PN(playerid), playerid, text);
	SendGosMessage(COLOR_DEPAR, str_2);
	return 1;
}
CMD:vr(playerid, params[])
{
	if(PI[playerid][pVIP][0] < 5) return 1;
	if(PI[playerid][pVipChat]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас выключен VIP чат!");
	extract params -> new string:message[100]; else return SCM(playerid, COLOR_RED, !"Используйте: /vr [text]");
  	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(PI[playerid][pVIP][1] < global_time) 
	{
		if(GetPVarInt(playerid, !"vr") > global_time && PI[playerid][pVIP][0] != 7) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Отправлять сообщения в этот чат, можно через %i секунд!", GetPVarInt(playerid, !"vr") - global_time);
   		SetPVarInt(playerid, !"vr", global_time + 10);
	}
	if(PI[playerid][pVIP][1] < global_time && !PI[playerid][pAdmin])
	{
		str_1[0] = EOS;
		mysql_escape_string(message, str_1);
		SetPVarString(playerid, !"VIP_message", str_1); //fix crash pvar
		return SPD(playerid, 25626, DIALOG_STYLE_MSGBOX, !"", !"\n{ffffff}Ваше сообщение является рекламой?\nСтоимость рекламного сообщения: {33AA33}$75000\n{CCCCCC}Примечание: учтите, что администрация может наказать за некорректное использование рекламы.\n\nС 23:00 до 9:00 по серверному времени - реклама стоит {33AA33}$10000!\nДля владельцев ADD VIP - реклама бесплатная всегда", !"Да", !"Нет");
	}
	if(!PI[playerid][pAdmin])
	{
	    switch(PI[playerid][pVIP][0])
		{
		    case 5: SendVIPMessagef(45846529,"{6495ED}%s {FFFFFF}%s[%i]{FFFFFF}: %s", PI[playerid][pVIP][1] > global_time ? "[VIP ADV]" : "[VIP]", PN(playerid), playerid, message);
		    case 6: SendVIPMessagef(-45846529,"{F345FC}%s {FFFFFF}%s[%i]: %s", PI[playerid][pVIP][1] > global_time ? "[VIP ADV]" : "[PREMIUM]", PN(playerid),playerid, message);
		    case 7: SendVIPMessagef(0xFFFFFFFF,"%s%s[%s] {FFFFFF}%s[%i]{FFFFFF}: %s", CheckVipColor[PI[playerid][pVipColor]][0], PI[playerid][pVIP][1] > global_time ? "[FOREVER] " : "", PI[playerid][pPrefixVip], PN(playerid), playerid, message);
		}
	}
	else SendVIPMessagef(0xFFFFFFFF,"{FCC645}[ADMIN] {FFFFFF}%s[%i]: %s", PN(playerid),playerid,message);
	return 1;
}
CMD:tow(playerid, params[])
{
    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Вы не за рулём!");
    new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModelEx(carid) != 525) return SCM(playerid, COLOR_RED, !"Вы не за рулём эвакуатора!");
    if(IsTrailerAttachedToVehicle(carid)) DetachTrailerFromVehicle(carid);
	else
	{
	    foreach(new i: PlayerVehiclesStream[playerid])
	    {
	        new Float:X,Float:Y,Float:Z;
	        GetVehiclePos(i,X,Y,Z);
	        if(IsPlayerInRangeOfPoint(playerid,7.0,X,Y,Z) && i != carid)
			{
				AttachTrailerToVehicle(i,carid);
				break;
			}
			else continue;
	    }
    }
	return 1;
}
CMD:stopjob(playerid)
{
	InJob[playerid]=0;
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	return 1;
}
CMD:flowers(playerid,params[])
{
	if(PI[playerid][pDemogran] > 0) return SCM(playerid, COLOR_GREY, !"На время пребывания в тюрьме нельзя подарить цветы!");
	str_1[0] = EOS, str_2[0] = EOS;
	extract params -> new player:id; else return SCM(playerid, COLOR_GREY, !"Используй: /flowers [id]");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	if(weapon != 14) return SCM(playerid, COLOR_GREY, !"У тебя в руках нет цветов!");
	//if(PI[playerid][pGuns][GetWeaponSlot(weapon)] != weapon) return 0;
 	if(IsPlayerConnectEx(id))
	{
		if(playerid == id) return SCM(playerid, COLOR_GREEN, !"Вы не можете передать цветы сами себе!");
		if(!ProxDetectorS(3.0,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
		f(str_2,sizeof(str_2),"Подарил цветы %s",PN(id));
	    SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 30.0, 5000);
	    GivePlayerWeapon(id,weapon,ammo);
	    SCMf(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно подарили цветы игроку %s.",PN(id));
	    SCMf(id,COLOR_VALIK,"[Информация] {FFFFFF}Игрок %s[%i] подарил вам цветы!",PN(playerid),playerid);
		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		SetPlayerFacingAngle(id, angle + 180);
		J_ApplyAnimation(playerid, !"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
		J_ApplyAnimation(id,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	}
	return 1;
}
CMD:ekonom(playerid)
{
	if(PI[playerid][pMember]!= TEAM_MERIALS) return SCM(playerid, COLOR_RED, !"Данная возможность доступна только Правительству!");
	if(!PI[playerid][pRank] && PI[playerid][pAdmin] < 5)return SCM(playerid, COLOR_RED, !"Проводить изменения в экономике может только губернатор!");
	if(!IsPlayerInRangeOfPoint(playerid,50, 1498.7437,-1284.4575,113.8212))return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Вы должны находится в здании мэрии!");
    //AC_FIX_DIALOG_F(playerid, 401);
 	SPD(playerid,401,2,"Управление штатом","{73B461}[1]{FFFFFF} Внести изменения в налоги.\n{73B461}[2]{FFFFFF} Изменить цены на аренду транспорта\n{73B461}[3]{FFFFFF} Изменить премию за службу закону\n{73B461}[4]{FFFFFF} Глобальные настройки","Принять","Отмена");
	return 1;
}
CMD:findcollectors(playerid)
{
	EnableGPSForPlayer(playerid,-2263.4514,177.9965,35.3056);
	return SCM(playerid, -1, !"->> Место проведения мероприятия отмечено на карте! Начало: {BCE63B}20.15.");
}
CMD:time(playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !PI[playerid][pHeal] && !PlayerLie[playerid]) J_ApplyAnimation(playerid, !"COP_AMBIENT", !"Coplook_watch", 4.1, 0, 0, 0, 0, 0, 1);

    static const mtext[12][20] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
	str_2[0] = EOS;
    new hour, minuite;
    gettime(hour, minuite, _);
	str_1[0] = EOS;
	new fortune = floatround(float((1200-PI[playerid][pCasinoTime]))/60.0);
	if(fortune != 0) f(str_1, sizeof(str_1), "~n~~r~Fortune Wheel: %i min",floatround(float((1200-PI[playerid][pCasinoTime]))/60.0));
	if(PI[playerid][pDemogran] > 0) f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02d:%02d~n~ ~g~ concluded ~w~%i~n~~g~played: ~w~%i min.", global_day, mtext[global_month - 1], hour, minuite, PI[playerid][pDemogran] - 10, floatround(float(PI[playerid][pPlayedTime]) / 60.0));
	else if(PI[playerid][pMaskON] > 0) f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02d:%02d~n~~g~played ~w~%i min.~n~~r~mask: %i", global_day, mtext[global_month - 1], hour, minuite, floatround(float(PI[playerid][pPlayedTime]) / 60.0), PI[playerid][pMaskON]);
	else f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02d:%02d~n~~g~played ~w~%i min.\
	%s", global_day, mtext[global_month - 1], hour, minuite, floatround(float(PI[playerid][pPlayedTime]) / 60.0),
	str_1);
	GameTextForPlayer(playerid, str_2, 4000, 1);
    SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000,"%s взглянул(a) на часы", PN(playerid));
    return 1;
}
CMD:donate(playerid) SPD(playerid, 7771, DIALOG_STYLE_MSGBOX, !"{ffa500}Донат система:", !"{FFFFFF}Выберите привилегию:", !"РУБЛИ", !"AZ-COINS");
CMD:licensers(playerid, params[])
{
 	foreach_player(i)
	{
	    if(GetTeamID(i) == TEAM_LICENSERS) SCMf(playerid, -1, "%s[%i] | Тел: %i\n",PN(i), i, PI[i][pTelNum]);
	}
	return 1;
}
CMD:blackplayers(playerid, params[])
{
    //AC_FIX_DIALOG_F(playerid, 0);
    if(IsAtFrakcia(playerid) && PI[playerid][pRank] == 10)
	{
	    new kol;
	    str_1[0] = EOS;
  		foreach_player(i)
		{
		    if(PI[i][pBL] != 0) f(str_1, sizeof(str_1), "%s{FFFFFF}%s[%i]{FFFFFF}\n", str_1, PN(i), i), kol ++;
		}
		SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"Черный список закона штата.", !"Принять", !"", "%s\n\n\n{FAAC58}Всего: %i человек.", str_1, kol);
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет доступа к этой системе!");
	return 1;
}
CMD:members(playerid)
{
    if(!PI[playerid][pMember]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в фракции!");
    FirstBL[playerid] = 0, CheckMembers(playerid);
    return 1;
}
stock CheckMemberss(playerid, listitem = -1)
{
	if(listitem == 1) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0)
	{
		FirstBL[playerid] = 0;
		return SCM(playerid, COLOR_GREY, !"Больше нет участников фракции");
	}
	return CheckMembers(playerid);
}
stock CheckMembers(playerid)
{
	str_1 = "{73B461}Ник игрока\t{ffff00}Ранг\t{ffffff}Выговоров\tАФК{FFFFFF}\n";
	new counttt, count;
    foreach(new i: Player)
    {
        if(!PI[playerid][pAdmin] && GetTeamID(i) == GetTeamID(playerid) && !PI[i][pAdmin]) counttt++, f(str_1, sizeof(str_1), "%s{FFFFFF}%s[%i]\t%s(%i)\t%i\t%i{FFFFFF}\n", str_1, PN(i), i, GetRankName(GetTeamID(i), PI[i][pRank]), PI[i][pRank], PI[i][pFWarns], PlayerAFKTime[i]);
        else if(GetTeamID(i) == GetTeamID(playerid)) counttt++, f(str_1, sizeof(str_1), "%s{FFFFFF}%s[%i]\t%s(%i)\t%i\t%i{FFFFFF}\n", str_1, PN(i), i, GetRankName(GetTeamID(i), PI[i][pRank]), PI[i][pRank], PI[i][pFWarns], PlayerAFKTime[i]);
    	if(counttt >= 20)
		{
			strcat(str_1, !">>> Следующая страница");
			break;
		}
    }
    foreach(new i: Player) { if(GetTeamID(i) == GetTeamID(playerid)) count++; }
    f(str_2, sizeof(str_2), "%s | В сети: %i | {BE2D2D}Организация", global_OrgInfo[PI[playerid][pMember]][g_oName], count);
    if(FirstBL[playerid]) strcat(str_1, !"<<< Предыдущая страница");
    return SPD(playerid, 1650, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, !"Выбрать", !"Назад");
}
CMD:flip(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
	extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /flip [ID]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден");
	if(!IsPlayerLogged[id]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не авторизирован");
	if(GetPlayerState(id) !=2 ) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в машине!");
	new veh = GetPlayerVehicleID(id);
	new Float:X,Float:Y,Float:Z,Float:A;
	GetVehiclePos(veh,X,Y,Z);
	J_SetVehiclePos(veh,X,Y,Z);
	GetVehicleZAngle(veh, A);
	SetVehicleZAngle(veh, A);
	J_RepairVehicle(veh);
	return SendAdminsMessagef(COLOR_YELLOW, "[A] %s[%i] флип'нул игрока %s[ID:%i]", PN(playerid), playerid, PN(id), id);
}
CMD:limit(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Вы должны быть в машине!");
	if(!IsACar(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта функция доступна только в авто!");
	extract params -> new limit; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Используй: /limit [ скорость ( 0 - чтобы выключить ) ]");
	if(!limit)
	{
		pTemp[playerid][pLimit] = 0;
		GameTextForPlayer(playerid, !"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~LIMIT:~g~ OFF!",3000,3);
		return 1;
	}
	else
	{
		if(limit > 150 || limit < 30) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Используйте число от 30 до 150!");
		pTemp[playerid][pLimit] = limit;
		GameTextForPlayer(playerid, !"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~LIMIT:~r~ ON!",3000,3);
	}
	SCM(playerid, COLOR_ORANGE, !"[Подсказка] {FFFFFF}Используйте /limit для установки ограничителя скорости!");
	return SCM(playerid, -1, !"/limit 0, отключить ограничитель!");
}
CMD:hi(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))
		return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Нельзя использовать в машине");

	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /hi [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не найден");
	if(PI[id][pAdmin]) return 1;
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(id, X, Y, Z);
    new Float:distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
	if(distance < 1.5 && distance > 0.5 )
	{
    	if(PlayerLie[id] || !GetPlayerFaceToPlayer(playerid, id, 25.0)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Повернитесь лицом к игроку");
    	if(!GetPlayerFaceToPlayer(id, playerid, 25.0)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок не повернут к вам лицом");
		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		SetPlayerFacingAngle(id, angle + 180);
		str_2[0] = EOS;
		f(str_2, sizeof(str_2), " %s пожал(а) руку %s", PN(playerid),PN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		J_ApplyAnimation(playerid, !"GANGS", !"hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
		J_ApplyAnimation(id, !"GANGS", !"hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
		if(PI[id][pCorona] && !PI[playerid][pCorona]) {
		    str_1[0] = EOS,f(str_1, sizeof(str_1), "%s[%d] кашлянул", PN(playerid), playerid);
			ProxDetector(10, playerid, str_1, COLOR_ME);
			Corona++;
			UpdateTextCorona();
			PI[playerid][pCorona]++;
		}
		return 1;
	}
	else if(distance < 20.0)
	{
	    str_2[0] = EOS;
		f(str_2, sizeof(str_2), " %s машет рукой %s", PN(playerid), PN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		J_ApplyAnimation(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 0, 0, 1);
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы находитесь либо слишком близко от игрока, либо слишком далеко от игрока");
	return 1;
}
CMD:killme(playerid)
{
	if(!GetInvCount(playerid, 338)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет яда или шприца!");
	if(PlayerHealthAC[playerid] > 40.0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Использовать яд можно только при смерти!");
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    str_2[0] = EOS,f(str_2, sizeof(str_2), " %s принял дозу яда", PN(playerid));
	    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	    SetPlayerDrunkLevel(playerid, 50000);
		J_ApplyAnimation(playerid, !"KNIFE", !"KILL_Knife_Ped_Damage", 4.1, 0, 1, 1, 0, 0, 1);
		InvAdd(playerid, 338, -1);
	}
    J_SetPlayerHealth(playerid, 0);
	return 1;
}
CMD:skill(playerid) return ShowSkills(playerid, playerid);
CMD:report(playerid)
{
	if(PI[playerid][pMuteTime]) return SendMuteMessage(playerid);
	if(PI[playerid][pVIP][1] < global_time) if(pTemp[playerid][ReReport] > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Писать репорт можно раз в 3 минуты!");
	if(pTemp[playerid][NumReports] != -1)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете задать вопрос в репорт!");
		return SCM(playerid, -1, !"Ожидайте ответа от администрации!");
	}
	return ShowDialogReport(playerid);
}
alias:report("rep", "ask");
CMD:ot(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
	if(!SystemReport)
	{
		if(!TotalReport()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас нет вопросов в репорт!");
		for(new i; i < sizeof(Reports); i++)
		{
			if(Reports[i] != -1)
			{
				GetPVarString(Reports[i], !"ReportMessage", str_1, 128);
				SCMf(Reports[i], COLOR_LIGHTRED, "[Подсказка]{FFFFFF} А: %s принялся за ваш репорт!", PN(playerid));
	    		SPDf(playerid, 6370, DIALOG_STYLE_INPUT, !"", !"Принять", !"Отмена", "{FFFFFF}Жалоба/Вопрос от: %s[%i]\n\n{BFE54C}%s\n\n", PN(Reports[i]), Reports[i], str_1);
				pTemp[playerid][ReportID] = Reports[i];
				pTemp[Reports[i]][ReportID] = playerid;
				pTemp[Reports[i]][NumReports] = -1;
				Reports[i] = -1;
				PI[playerid][pAPM]++;
				break;
			}
		}
	}
	else
	{
		extract params -> new player:id, string:result[120]; else return SCM(playerid, COLOR_RED, !"Используй: /ot [id/name] [answer]");
		if(!IsPlayerConnectEx(id)) return 0;
		SCMf(id, COLOR_ORANGE, "А: %s ответил вам:{FFFFFF} %s", PN(playerid), result);
		SendAdminsMessagef(COLOR_ORANGE, "[A] %s[%i] ответил игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, result);
	}
	return 1;
}
CMD:pm(playerid, params[])
{
    if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id, type, string:result[100]; else return SCM(playerid, COLOR_RED, !"Используй: /pm [id/name] [0 - message/1 - dialog] [answer]");
    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    switch(type)
    {
    	case 0: SCMf(id, COLOR_ORANGE, "А: %s ответил вам:{FFFFFF} %s", PN(playerid), result);
    	case 1:
    	{
    		pmID[id] = playerid;
    		SPDf(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Понял", !"", "А: %s ответил вам: {FFFFFF}%s", PN(playerid), result);
    	}
    }
    return SendAdminsMessagef(COLOR_LIGHTBLUE, "[A] %s[%i] написал игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, result);
}
CMD:creategun(playerid)
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Вы не находитесь в банде или мафии!");
	if(IsAtGang(playerid))
	{
		new zona = GetPlayerGangZone(playerid);
		if(zona < 0 || GZInfo[zona][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете создавать оружие вне своей территории!");
	}
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете двигаться!");
    return SPD(playerid, 353, DIALOG_STYLE_TABLIST_HEADERS, "", "Номер\tОружие\tРасход патронов\n{A0FF80}1.{FFFFFF}\tDeagle\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}2.{FFFFFF}\tShotgun\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}3.{FFFFFF}\tMp5\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}4.{FFFFFF}\tM4\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}5.{FFFFFF}\tAk47\t{FBAD2F}3{FFFFFF}к1\n{A0FF80}6.{FFFFFF}\tRifle\t{FBAD2F}10{FFFFFF}к1", "Принять", "Отмена");
}
CMD:sellgun(playerid, params[])
{
	if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Вы не находитесь в банде или мафии!");
	if(IsAtGang(playerid))
	{
		new zona = GetPlayerGangZone(playerid);
		if(zona > 130) return 1;
		if(zona < 0 || GZInfo[zona][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF} Вы не можете создавать оружие вне своей территории!");
	}
	extract params -> new player:id, string:name[15], ammo, price; else
	{
		SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Используйте: /sellgun [id] [Название] [Кол-во] [цена]");
		SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Названия: deagle,shotgun,mp5,m4,ak47,rifle,sniper,uzi");
		return 1;
	}
	if(GetPVarInt(playerid, !"sellgun") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете двигаться!");
    if(id == playerid)
	{
	    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете продавать себе оружие!");
		return SCM(playerid, -1, !"Используйте /creategun, чтобы сделать себе оружие.");
	}
	if(PI[id][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Продавать оружие можно игрокам, выше 1-го уровня!");
	if(ammo > 300) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сразу сделать больше 300 патронов!");
	if(PI[playerid][pDemogran] > 0) return 1;
	if(!ProxDetectorS(3, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(price > 0 && ammo > 0)
	{
		if(price > 15000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}За свои услуги вы можете брать не более $15000");
		SGunOffer[id] = playerid;
		SGunPrice[id] = price;
		SGunAmmo[id] = ammo;
		if(GetString(name, "deagle"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 24;
		}
		else if(GetString(name, "shotgun"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 25;
		}
		else if(GetString(name, "mp5"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 29;
		}
		else if(GetString(name, "m4"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 31;
		}
		else if(GetString(name, "ak47"))
		{
			SGunMats[id] = ammo * 3;
			SGunID[id] = 30;
		}
		else if(GetString(name, "rifle"))
		{
			SGunMats[id] = ammo * 10;
			SGunID[id] = 33;
		}
		else if(GetString(name, "sniper"))
		{
			SGunMats[id] = ammo * 50;
			SGunID[id] = 34;
		}
		else if(GetString(name, "uzi"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 28;
		}
		else return 1;
        SetPVarInt(playerid, !"sellgun", global_time + 5);
		if(GetInvCount(playerid, 328) >= SGunMats[id])
		{
			f(str_2, sizeof(str_2), "{FFFFFF}\
				%s предлагает вам купить у него оружие.\n\n\
				Оружие: \t%s\n\
				Боеприпасы: \t%i\n\
				Цена: \t\t$%i",
				PN(playerid),
				WeaponNames[SGunID[id]],
				ammo,
				price);
			SPD(id, 24, DIALOG_STYLE_MSGBOX, !"Вам предложили купить оружие", str_2, !"Купить", !"Отмена");
		}
		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно патронов для изготовления этого оружия!");
	}
	return 1;
}
CMD:fightstyle(playerid, params[])
{
    //AC_FIX_DIALOG_F(playerid, 58);
	return SPD(playerid,58,2,"Выберите стиль боя","Обычный\nBoxing\nKungfu\nKeenhead\nElbow\nКак изучить?","Выбрать","Отмена");
}
CMD:next(playerid)
{
   	if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == (sizeof(IntInfo)-1)) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == (sizeof(IntInfo)-2)) TextDrawHideForPlayer(playerid, ButtonRight);
		TextDrawShowForPlayer(playerid, ButtonLeft);
     	BuyInt[playerid] ++;
		new dnt = BuyInt[playerid];
		f(str_2,sizeof(str_2),"Level: %i~n~Cost: $%i",1,IntInfo[dnt][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		SetPlayerInteriorEx(playerid,IntInfo[dnt][iInterior]);
	}
	else if(Clother[playerid] != -1)
	{
	    ClearChatForPlayer(playerid);
		SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Для отмены нажмите {FFFFFF}Cancel");
	    new nskin = PI[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PI[playerid][pSkin] != 0)
		{
		    new race = PI[playerid][pRace];
		    new clother = Clother[playerid];
			if(PI[playerid][pSex] < 2)
			{
				if( (clother + 1) == sizeof(MSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(MSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				else if(!MSkins[race][clother + 1]) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if(!MSkins[race][clother + 2]) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				if(MSkins[race][clother] != 0)
				{
					SetPlayerSkinEx(playerid,MSkins[race][clother]);
					f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[clother]);
				}
			}
			else
			{
			    if( (clother + 1) == sizeof(GSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(GSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				SetPlayerSkinEx(playerid,GSkins[race][clother]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[clother]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
		else if(!nskin)
		{
		   	new race = PI[playerid][pRace];
		    new clother = Clother[playerid];
			if(PI[playerid][pSex] < 2)
			{
				if( (clother + 1) == sizeof(MBomzSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(MBomzSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				else if(!MBomzSkins[race][clother + 1]) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if(!MBomzSkins[race][clother + 2]) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				if(MSkins[race][clother] != 0) SetPlayerSkinEx(playerid,MBomzSkins[race][clother]);
			}
			else
			{
			    if( (clother + 1) == sizeof(GBomzSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(GBomzSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				SetPlayerSkinEx(playerid,GBomzSkins[race][clother]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType];
 		if(ItemsId[race][Buyitem[playerid]+2]==1) TextDrawHideForPlayer(playerid, ButtonRight);
 		if(ItemsId[race][Buyitem[playerid]+1]==1) return 0;
 		ClearChatForPlayer(playerid);
 		TextDrawShowForPlayer(playerid, ButtonLeft);
 		Buyitem[playerid] ++;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'
		SCM(playerid, -1, "система в переработке!");
		/*switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		}*/
		PlayerTDSetStringf(playerid, InfoText[playerid], "~g~Cost: ~r~$%i", price);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == MAX_GUNS) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == MAX_GUNS-1) TextDrawHideForPlayer(playerid, ButtonRight);
	    TextDrawShowForPlayer(playerid, ButtonLeft);
		BuyGuns[playerid] ++;
		BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
  		price += BuyGunInfo[bgid][bgGPrice];
     	if(BuyGunInfo[bgid][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
	    else TextDrawHideForPlayer(playerid, ButtonUp);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 5.0);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 90.0);
		PlayerTDSetStringf(playerid, InfoText[playerid], "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
	}
	return 1;
}
//next+
CMD:back(playerid)
{
    if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == 1) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == 2) TextDrawHideForPlayer(playerid, ButtonLeft);
		TextDrawShowForPlayer(playerid, ButtonRight);
	    BuyInt[playerid] --;
		new dnt = BuyInt[playerid];
		SetPlayerInteriorEx(playerid,IntInfo[dnt][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		PlayerTDSetStringf(playerid, InfoText[playerid], "Level: 1~n~Cost: $%i", IntInfo[dnt][iCost]);
	}
	else if(Clother[playerid] != -1)
	{
	    ClearChatForPlayer(playerid);
		SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Для отмены нажмите {FFFFFF}Cancel");
	    new nskin = PI[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PI[playerid][pSkin] != 0)
		{
	        new race = PI[playerid][pRace];
	        if(Clother[playerid] == 0 ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	        else if(Clother[playerid] == 1 ) TextDrawHideForPlayer(playerid, ButtonLeft);
			TextDrawShowForPlayer(playerid, ButtonRight);
			Clother[playerid] --;
			if(PI[playerid][pSex] < 2)
			{
				SetPlayerSkinEx(playerid,MSkins[race][Clother[playerid]]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[Clother[playerid]]);
			}
			else
			{
				SetPlayerSkinEx(playerid,GSkins[race][Clother[playerid]]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[Clother[playerid]]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
		else if(!nskin)
		{
		    new race = PI[playerid][pRace];
	        if(Clother[playerid] == 0 ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	        else if(Clother[playerid] == 1 ) TextDrawHideForPlayer(playerid, ButtonLeft);
			TextDrawShowForPlayer(playerid, ButtonRight);
			Clother[playerid] --;
			if(PI[playerid][pSex] < 2)
			{
				SetPlayerSkinEx(playerid,MBomzSkins[race][Clother[playerid]]);
			}
			else
			{
				SetPlayerSkinEx(playerid,GBomzSkins[race][Clother[playerid]]);
			}
  	 		if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType];
 		if(Buyitem[playerid]==1) TextDrawHideForPlayer(playerid, ButtonLeft);
 		if(Buyitem[playerid]==0) return 0;
 		ClearChatForPlayer(playerid);
 		TextDrawShowForPlayer(playerid, ButtonRight);
 		Buyitem[playerid] --;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'
 		/*switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		}*/
		f(str_2, sizeof(str_2), "~g~Cost: ~r~$%i", price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == 0) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == 1) TextDrawHideForPlayer(playerid, ButtonLeft);
		TextDrawShowForPlayer(playerid, ButtonRight);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
		BuyGuns[playerid] --;
	    BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
 		price += BuyGunInfo[bgid][bgGPrice];
		if(BuyGunInfo[bgid][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
	    else TextDrawHideForPlayer(playerid, ButtonUp);
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 5.0);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 90.0);
        f(str_2, sizeof(str_2), "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
	}
	return 1;
}
CMD:addhouseiks(playerid, params[])
{
	if(CheckAdmin(playerid, 8,3)) return 1;
    extract params -> new cost, klass; else return SCM(playerid, -1, !"Используйте: /addhouse [цена] [класс]");
	switch(klass)
	{
		case 1..6,22: SCM(playerid, -1, !"+klass");
		default: return SCM(playerid, -1, !"ID класса от 1 до 6");
	}
    if(OWNABLEHOUSES+1 >= MAX_HOUSES) return SCM(playerid, -1, !"Превышен лимит домов");
    new Float:housepos[3];
    GetPlayerPos(playerid, housepos[0],housepos[1],housepos[2]);
   	str_2[0] = EOS, f(str_2, sizeof str_2, "INSERT INTO `houses`(`Enter_X`, `Enter_Y`, `Enter_Z`, `Exit_X`, `Exit_Y`, `Exit_Z`, `Owner`, `Cost` , `Klass`, `Interior`, `Level`) VALUES ('%.2f', '%.2f', '%.2f', '-2170.0146', '-2135.9548', '1501.1005', 'wipeHouse', '%i', '%i', '10', '1')", housepos[0], housepos[1], housepos[2], cost, klass);
	mysql_tquery(mysql, str_2, "AddProperty", "ss", "houses","wipehouse");
    return SCM(playerid, -1, !"Дом успешно создан");
}
/*cmd:addhousemenu(playerid)
{
	for(new i; i < 3; i++) if(player_Global_Int[playerid][100+i] == 0) player_Global_Int[playerid][100+i] = -1;
	AddHouseFunc(playerid, false)
}
stock AddHouseFunc(playerid, bool:clear=false)
{
	if(!clear)
	{
		str_1[0] = EOS, f(str_1, sizeof(str_1), "\
			{B03131}[1] {FFFFFF}Установить точку двери\t{cccccc}[%.3f, %.3f, %.3f, %.3f]\n\
			{B03131}[2] {FFFFFF}Стоимость дома\t{42B02C}[$%i]\n\
			{B03131}[3] {FFFFFF}Выбрать класс дома\t{cccccc}[%i]\n\
			{B03131}[4] {FFFFFF}Выбрать тип гаража\t{cccccc}[%i]\n\
			{B03131}[5] {FFFFFF}Установить точку выезда из гаража\t{cccccc}[%.3f, %.3f, %.3f, %.3f]\n\
			{cccccc}>> Сбросить заполненные данные\n\
			{42B02C}>> Создать дом", \
			hCreatePosition[playerid][0], hCreatePosition[playerid][1], hCreatePosition[playerid][2],\
			player_Global_Int[playerid][100+0], player_Global_Int[playerid][100+1], player_Global_Int[playerid][100+2],\
			hgCreatePosition[playerid][0], hgCreatePosition[playerid][1], hgCreatePosition[playerid][2]);
		SPD(playerid, 13333, DIALOG_STYLE_LIST, !"Создания дома", str_1, !"Выбрать", !"Отмена");
		return 1;
	}
	for(new i; i < 3; i++) 
	{
		player_Global_Int[playerid][100+i] = 0, \
			hCreatePosition[playerid][i] = 0.0, \
			hgCreatePosition[playerid][i] = 0.0;
	}
	return 1;
}*/
CMD:done(playerid)
{
	if(RecInfo[playerid][rOpen]) return 0;
	if(BuyInt[playerid] != -1)
 	{
 	    if(GetPlayerHouses(playerid) != -1)
 	    {
		    new inte = BuyInt[playerid];
			if(GetMoney(playerid) >= IntInfo[inte][iCost])
		    {
		        //AC_FIX_DIALOG_F(playerid, 0);
		        if(PI[playerid][pDCTime] != 1)
		        {
		        	PI[playerid][pDCTime] = 1;
		        	UpdatePlayerDataInt(playerid, "DCTime", 1);
		        }
		        TogglePlayerControllable(playerid, true);
				SCM(playerid, COLOR_GREEN, !"Поздравляю вас с покупкой нового интерьера!");
				GiveMoney(playerid,-IntInfo[inte][iCost], "купил новый интерьер");
				SetHouseInt(HouseEntered[playerid], inte);
				BuyInt[playerid] = -1;
     			SettingSpawn(playerid);
				if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
				PlayerTextDrawHide(playerid,InfoText[playerid]);
				PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				return 1;
			}
		}
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PI[playerid][pSkin];
	    new skin = Clother[playerid];
	    if(nskin != 0)
	    {
		    new cost;
		    new race = PI[playerid][pRace];
		    new clother = Clother[playerid];//tika
		    if(PI[playerid][pSex]==1)
			{
				if(MSkins[race][clother]!=GetPlayerSkin(playerid))return 0;
			}
			if(PI[playerid][pSex]==2)
			{
			    if(GSkins[race][clother]!=GetPlayerSkin(playerid))return 0;
			}
            new bizid = BizEntered[playerid];
		    if(PI[playerid][pSex] == 2) cost = GSkinCost[skin];
		    else cost = MSkinCost[skin];
		    if(cost <= 0) cost = 140;
		    if(GetMoney(playerid) < cost) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		    if(BizInfo[bizid][bProducts]<(cost/100))return SCM(playerid, -1, !"{FFFFFF}Извините, но у нас закончился товар!");
			if(!InvAdd(playerid, GetPlayerSkin(playerid), 1)) return 1;
			Clother[playerid] = -1;
			TogglePlayerControllable(playerid, true);
			J_SetPlayerPos(playerid, 199.0545,-131.5248,1003.5152);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
			GiveMoney(playerid,-cost, "купил новый скин");
   			GiveBizMoney(playerid,cost);
			BizInfo[bizid][bProducts]-=(cost/100);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorldEx(playerid,player_Global_Int[playerid][2]);
			SendPedBot(playerid);
		}
		else
		{
			Clother[playerid] = -1;
			PI[playerid][pSkin] = GetPlayerSkin(playerid);
			UpdatePlayerDataInt(playerid, "Skin", GetPlayerSkin(playerid));
			GangZoneShowForPlayer(playerid, HideMapZone, 0x000000FF);
			GangZoneHideForPlayer(playerid, HideMapZone);
		    SetPlayerVirtualWorldEx(playerid, 0);
 			SetPlayerInteriorEx(playerid, 0);
			StopAudioStreamForPlayer(playerid);
			ClearChatForPlayer(playerid);
			BonusInfo(playerid);
			TogglePlayerControllable(playerid,true);
		   	PI[playerid][pHungryShow] = false;
		   	UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
		   	SetFullness(playerid, 100);
		   	PI[playerid][pObmen] = false;
			PI[playerid][pRabRacia] = 1;
			UpdatePlayerDataInt(playerid, "RabRacia", PI[playerid][pRabRacia]);
			UpdatePlayerDataInt(playerid, "Obmen", PI[playerid][pObmen]);
            PI[playerid][pZKP] = 20;
            UpdatePlayerDataInt(playerid, "ZKP", 20);
	   		PI[playerid][pHospital] = 25;
	   		UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
			J_SetPlayerHealth(playerid, 100);
			PlayerSpawn(playerid);
			SetPlayerFacingAngle(playerid, 199.2585);
			SetCameraBehindPlayer(playerid);
		    if(!PI[playerid][pRace]) CheckPointForPlayer(playerid,1773.6903,-1891.7493,13.5504);
			else CheckPointForPlayer(playerid,1163.6832, -1754.9606, 13.6179);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType],price = ItemsCost[race][Buyitem[playerid]];
	    new item = ItemsId[race][Buyitem[playerid]];
	    new biz = BizEntered[playerid];
        if(GetMoney(playerid)<price)return SendBotMessage(playerid,"Извините, но у вас не достаточто денег для покупки!");
        if(BizInfo[biz][bProducts]<(price/100))return SendBotMessage(playerid,"Извините, но у нас закончился товар!");
		for(new i = 659; i < 755; i++)//юзаю ток для аксов в магазе
		{
			if(ItemsInfo[i][ItemID] == item)
			{
				item = i;
				break;
			}
		}
		if(!InvAdd(playerid, item, 1)) return 0;
	    SendBotMessage(playerid,"Спасибо за покупку, приходите еще!");
        ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
		GiveMoney(playerid,-price);
		//aml(52, playerid, "", "Покупка аксесуара", price);
		GiveBizMoney(playerid,price);
		BizInfo[biz][bProducts]-=(price/100);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
        TogglePlayerControllable(playerid, true);
        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		Buyitem[playerid] = -1;
		PI[playerid][pType]=-1;
	}
    else if(BuyGuns[playerid] != -1)
	{
	    new bgid = BuyGuns[playerid];
	    new ammo = BuyGunAmmo[playerid];
	    new Float:flprice = float(BuyGunInfo[bgid][bgPrice]);
	    new Float:flammo = float(BuyGunInfo[bgid][bgAmmo][0]);
	    new weaponid = BuyGunInfo[bgid][bgGunid];
		new ammos = BuyGunInfo[bgid][bgAmmo][ammo];
	    new money = floatround( (flprice / flammo) * float(BuyGunInfo[bgid][bgAmmo][ammo]) );
	    money += BuyGunInfo[bgid][bgGPrice];
     	new biz = BizEntered[playerid];
	    if(biz != -1)
		{
			if(BizInfo[biz][bProducts] < money/10) return SendBotMessage(playerid,!"Приносим свои извинения, так как у нас закончились продукты.");
			if(GetMoney(playerid)<money)return SendBotMessage(playerid,!"Извините, но у вас недостаточно денег!");
		    BizInfo[biz][bProducts] -= money/10;
			GiveBizMoney(playerid,money);
		}
	    if(GivePlayerWeapon(playerid, weaponid, ammos) != -1)
	    {
	        if(GetMoney(playerid)<money) return SendBotMessage(playerid,!"Извините, но у вас недостаточно денег!");
		    GiveMoney(playerid, -money, "купил оружие в аммунации");
		    f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Вы купили %s с %i боеприпасами за $%i", WeaponNames[weaponid], ammos, money);
		    SCM(playerid, COLOR_VALIK, str_2);
		    SendAmmoBot(playerid);
		    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			return 0;
		}
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	TextDrawHideForPlayer(playerid,Boxmenu0);
	TextDrawHideForPlayer(playerid,Boxmenu1);
	TextDrawHideForPlayer(playerid,Boxmenu2);
	TextDrawHideForPlayer(playerid,ButtonLeft);
	TextDrawHideForPlayer(playerid,ButtonRight);
	TextDrawHideForPlayer(playerid,ButtonUp);
	TextDrawHideForPlayer(playerid,ButtonDown);
	TextDrawHideForPlayer(playerid,ButtonCancel);
	TextDrawHideForPlayer(playerid,ButtonSelect);
	TextDrawHideForPlayer(playerid,boxaccept);
	TextDrawHideForPlayer(playerid,boxcancel);
	TextDrawHideForPlayer(playerid,Boxmenu3);
	CancelSelectTextDraw(playerid);
	return 0;
}
stock BonusInfo(playerid)
{
	SCM(playerid, -1, !"Хочешь посмотреть {FF0000}ДОНАТ-УСЛУГИ? {FFFFFF}Ввводи в чат: {FF0000}/adonate.");
	SCM(playerid, -1, !"Хочешь получать бонусы ? {00FF00}/bonus {FFFFFF}И ПОЛУЧАЙ УНИКАЛЬНЫЕ ПРЕДМЕТЫ!");
	SCM(playerid, -1, !"АДМИНКА БЕСПЛАТНО, ЭТО РЕАЛЬНО ? {00FF00}/topminute");
	SCM(playerid, -1, !"КАЖДЫЕ 10 ДНЕЙ, ПРОИСХОДИТ КОНКУРС НА ФУЛЛ ДОСТУП!");
	SCM(playerid, -1, (str_f("Введите промокод {00ff00}#BonusLand {FFFFFF}в сообщение группы ВК - {00ff00}%s {FFFFFF}для получения {00ff00}бонуса!", ServerCFG[server_group_vk])));
}
CMD:cancel(playerid)
{
	if(RecInfo[playerid][rOpen]) return 0;
    if(BuyInt[playerid] != -1)
 	{
 	    if(PI[playerid][pDCTime] != 1)
 	    {
 	    	PI[playerid][pDCTime] = 1;
 	    	UpdatePlayerDataInt(playerid, "DCTime", 1);
 	    }
        TogglePlayerControllable(playerid, true);
		BuyInt[playerid] = -1;
		SettingSpawn(playerid);
		if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
		PlayerTextDrawHide(playerid,InfoText[playerid]);
		PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PI[playerid][pSkin];
	    if(nskin != 0)
	    {
	        J_SetPlayerPos(playerid, 199.0545, -131.5248, 1003.5152);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
	  		SetPlayerVirtualWorldEx(playerid,player_Global_Int[playerid][2]);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			Clother[playerid] = -1;
			SetPlayerSkinEx(playerid,PI[playerid][pSkin]);
	    }
		else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны выбрать скин!");
	}
	else if(Buyitem[playerid] != -1)
	{
        TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		Buyitem[playerid] = -1;
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		PI[playerid][pType]=-1;
		SetPVarInt(playerid,"timetobuy2",0);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    BuyGuns[playerid] = -1;
	    PlayerTextDrawHide(playerid, InfoText[playerid]);
	    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались покупать оружие");
	    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	TextDrawHideForPlayer(playerid,Boxmenu0);
	TextDrawHideForPlayer(playerid,Boxmenu1);
	TextDrawHideForPlayer(playerid,Boxmenu2);
	TextDrawHideForPlayer(playerid,ButtonLeft);
	TextDrawHideForPlayer(playerid,ButtonRight);
	TextDrawHideForPlayer(playerid,ButtonUp);
	TextDrawHideForPlayer(playerid,ButtonDown);
	TextDrawHideForPlayer(playerid,ButtonCancel);
	TextDrawHideForPlayer(playerid,ButtonSelect);
	TextDrawHideForPlayer(playerid,boxaccept);
	TextDrawHideForPlayer(playerid,boxcancel);
	TextDrawHideForPlayer(playerid,Boxmenu3);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock getMeToDoor(playerid, i)
{
	new callback;
	//
	if DoorInfo[i][dPos][3] == 90.0 *then
	{
		if IsPlayerInRangeOfPoint(playerid, 1.0, DoorInfo[i][dPos][0]-0.7400, DoorInfo[i][dPos][1]+0.7400, DoorInfo[i][dPos][2]+1.017587) *then
			callback = -45;
		else callback = 45;
	}
	else if DoorInfo[i][dPos][3] == 180.0 *then
	{
		if IsPlayerInRangeOfPoint(playerid, 1.0, DoorInfo[i][dPos][0]-0.7400, DoorInfo[i][dPos][1]-0.7400, DoorInfo[i][dPos][2]+1.017587) *then
			callback = -45;
		else callback = 45;
	}
	else
	{
		if IsPlayerInRangeOfPoint(playerid, 1.0, DoorInfo[i][dPos][0]+0.7400, DoorInfo[i][dPos][1]+0.7400, DoorInfo[i][dPos][2]+1.017587) *then
			callback = -45;
		else callback = 45;
	}
	//
	return callback;
}
CMD:opengate(playerid)
{
    if(GetPVarInt(playerid,!"OGReset") > global_time) return 1;
    SetPVarInt(playerid,!"OGReset",global_time + 2);
	if !(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) *then
	{
		for(new i; i < sizeof CustomDoor; i++)
		{
			if(CustomDoor[i][cStatus] != false) continue;
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, CustomDoor[i][customX], CustomDoor[i][customY], CustomDoor[i][customZ])) continue;
			new house = GetPlayerSearchHouse(playerid);
			if(house != -1 && GetString(HouseInfo[house][hOwner], PN(playerid)))
			{
				MoveDynamicObject(CustomDoorUID[i], CustomDoor[i][customX], CustomDoor[i][customY], CustomDoor[i][customZ]-10, 0.6, CustomDoor[i][cOffSetX], CustomDoor[i][cOffSetY], CustomDoor[i][cOffSetZ]);
				SetTimerEx("DoorCustomClose", CustomDoor[i][cTime]*1000, false, "i", i);
				CustomDoor[i][cStatus] = true;
				break;
			}
		}
	    new forcount = MuchNumber(sizeof GateInfo, sizeof BarrierInfo, sizeof DoorInfo);
	    for(new i;i < forcount;i ++)
		{
			if(i < sizeof DoorInfo)
		    {
				if IsPlayerInRangeOfPoint(playerid,3.0,DoorInfo[i][dPos][0],DoorInfo[i][dPos][1],DoorInfo[i][dPos][2]) *then
				{
					if DoorInfo[i][dWorld] ==-1 || GetPlayerVirtualWorld(playerid) == DoorInfo[i][dWorld] *then
					{
						if DoorInfo[i][dOrg] == TEAM_NONE || GetTeamID(playerid) == DoorInfo[i][dOrg] || ( IsACopDoor(i) && IsACop(playerid) ) || PI[playerid][pAdmin] *then
						{
							if !DoorInfo[i][dStatus] *then
							{
								MoveDynamicObject(dDoor[i],DoorInfo[i][dPosEnd][0],DoorInfo[i][dPosEnd][1],DoorInfo[i][dPosEnd][2],DoorInfo[i][dSpeed],0.0,0.0, DoorInfo[i][dTypeMove] ? (DoorInfo[i][dPosEnd][3]+float(getMeToDoor(playerid, i))):(DoorInfo[i][dPosEnd][3]));
								SetTimerEx("DoorClose", 6000, false, "i", i);
								DoorInfo[i][dStatus] = true;
								SetPlayerChatBubble(playerid, !"Открыл дверь", COLOR_GREEN, 10.0, 5000);
							}
							break;
						}
						else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");
					}
				}
			}
		    if(i < sizeof(GateInfo))
		    {
		        if(GateInfo[i][gCreated])
		        {
					if(IsPlayerInRangeOfPoint(playerid,6.2,GateInfo[i][gClose_X],GateInfo[i][gClose_Y],GateInfo[i][gClose_Z]))
					{
					    if(GateInfo[i][gWorld]==-1 || GetPlayerVirtualWorld(playerid)==GateInfo[i][gWorld])
					    {
							if(GateInfo[i][gOrg] == TEAM_NONE || GetTeamID(playerid) == GateInfo[i][gOrg] || ( IsACopGate(i) && IsACop(playerid) ) || PI[playerid][pAdmin] )
							{
								if(!GateInfo[i][gOpen])
								{
									MoveDynamicObject(gGate[i],GateInfo[i][gOpen_X],GateInfo[i][gOpen_Y],GateInfo[i][gOpen_Z],3.0);
									SetTimerEx("GateClose",7000,0,"i",i);
									GateInfo[i][gOpen] = true;
									if(GateInfo[i][gForGateid] != -1)
									{
									    new gateid = GateInfo[i][gForGateid];
									    MoveDynamicObject(gGate[gateid],GateInfo[gateid][gOpen_X],GateInfo[gateid][gOpen_Y],GateInfo[gateid][gOpen_Z],3.0);
										GateInfo[gateid][gOpen] = true;
										SetPlayerChatBubble(playerid, "Открыл ворота", COLOR_GREEN, 10.0, 5000);
									}
								}
							}
							else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет ключей от этих ворот!");
							break;
						}
					}
				}
			}
			if(i < sizeof(BarrierInfo))
			{
				if(IsPlayerInRangeOfPoint(playerid, 8.0 ,BarrierInfo[i][brPos_X], BarrierInfo[i][brPos_Y], BarrierInfo[i][brPos_Z]))
				{
					if(BarrierInfo[i][brOrg] == TEAM_NONE || GetTeamID(playerid) == BarrierInfo[i][brOrg] || ( IsACopBarrier(i) && IsACop(playerid) ) || PI[playerid][pAdmin] )
					{
						if !BarrierInfo[i][brOpen] *then
						{
							switch(i)
							{
								case 2, 3, 22, 23, 24:
								{
									if(PI[playerid][pMoney] < 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег чтобы оплатить проезд!");
									GiveMoney(playerid, -100);
								}
								case 26, 27:
								{
									if(PI[playerid][pMoney] < 15000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег чтобы оплатить комиссию авторынка!");
									GiveMoney(playerid,-15000);
								}
							}

							GetDynamicObjectPos(gBarrier[i], BarrierInfo[i][brData][0], BarrierInfo[i][brData][1], BarrierInfo[i][brData][2]);
							GetDynamicObjectRot(gBarrier[i], BarrierInfo[i][brData][3], BarrierInfo[i][brData][4], BarrierInfo[i][brData][5]);

							if(i == 2 || i == 3 || i == 22 || i == 23)
                           		MoveDynamicObject(gBarrier[i], BarrierInfo[i][brPos_X], BarrierInfo[i][brPos_Y], BarrierInfo[i][brPos_Z] + 0.07, BARRIER_SPEED * 5, 0.0, BarrierInfo[i][brPos_A] - 90, BarrierInfo[i][brData][5]);
							else
								MoveDynamicObject(gBarrier[i], BarrierInfo[i][brPos_X], BarrierInfo[i][brPos_Y], BarrierInfo[i][brPos_Z] + 0.7, BARRIER_SPEED, 0.0, 0.0, BarrierInfo[i][brPos_A]+180);

							SetTimerEx("BarrierClose", 15000, false, "i", i);
						  	
						  	BarrierInfo[i][brOpen] = true;
							SCM(playerid, COLOR_LIGHTGREEN, !"[В] Шлагбаум закроется через 15 секунд");
							SetPlayerChatBubble(playerid,  !"Открыл шлагбаум", COLOR_GREEN, 10.0, 5000);

							if !(BarrierInfo[i][brForBarrierID] == -1) *then
							{
							    new barrierid = BarrierInfo[i][brForBarrierID];
							    MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[barrierid][brPos_A]+180);
								BarrierInfo[barrierid][brOpen] = true;
							}
							
						}
					}
					else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого шлагбаума!");
					break;
				}
			}
		}
	}
	return 1;
}
CMD:eject(playerid, params[])
{
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /eject [ID/Name]");
	if(playerid == id) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Нельзя выкинуть самого себя.");
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Только водитель может сделать это");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return 0;
	new power = random(10);
	if(power > 5)
	{
		f(str_2, sizeof(str_2), " %s неудачно попытался выкинуть из транспорта игрока %s", PN(playerid), PN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	else
	{
	    GangZoneHideForPlayer(id, HideMapZone);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(id,true);
		f(str_2, sizeof(str_2), " %s выкинул из транспорта %s", PN(playerid), PN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		RemovePlayerFromVehicle(id);
	}
	return 1;
}
CMD:medcard(playerid, params[])
{
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в больнице штата!");
    if(PI[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок для этого.");
    extract params -> new player:id, status; else
	{
		SCM(playerid, COLOR_LIGHTRED, !"Используйте: /medcard [id] [статус]");
		SCM(playerid, -1, !"__________ Статусы __________");
		for(new i  ; i < sizeof(CheckMedCardTag); i++) SCMf(playerid, -1, "%i. %s", i, CheckMedCardTag[i][0]);
		return 1;
	}
	if(!(-1 <= status <= 3)) return 1;
	if(!ProxDetectorS(3.0, playerid, id, 1)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
    if(!IsValidPassport(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет паспорта.");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    MedCardInfo[id][mcState] = status;
    static str[15];
    str[0] = EOS;
    f(str, sizeof(str), "%i/%i/%i", global_day, global_month, global_year);
    SetString(MedCardInfo[id][mcDate], str);
    //AC_FIX_DIALOG_F(playerid, 0);
    if(status == 3) SPDf(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Понял", !"", "{FFFFFF}Медик %s выдал вам медицинскую карту: %s\nПоказать карту: '/showmc'\n{D84343}Список посещений псих. больницы, очищен!", PN(playerid), CheckMedCardTag[MedCardInfo[playerid][mcState]][0]);
    else SPDf(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Понял", !"", "{FFFFFF}Медик %s выдал вам медицинскую карту: %s\nПоказать карту: '/showmc'", PN(playerid), CheckMedCardTag[MedCardInfo[playerid][mcState]][0]);
    SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы выдали медицинскую карту %s: %s", PN(id), CheckMedCardTag[MedCardInfo[playerid][mcState]][0]);
   	return mysql_pqueryf(mysql, "UPDATE `passports` SET `McDate` = '%s', `McState` = '%i' WHERE `playerUID` = '%i' LIMIT 1", MedCardInfo[id][mcDate], MedCardInfo[id][mcState], PI[id][pID]);
}
CMD:fmute(playerid, params[])
{
	if(!PI[playerid][pRank] && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вам не доступна эта команда!");
    extract params -> new player:id, time, string:reason[30]; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /fmute [id] [time] [reason]");
    //if(CheckIsADomen(playerid, reason)) return 0;
    if(PI[playerid][pMuteTime]>0) return 0;
    if(time > 180) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Установить время заглушки можно не более на 60 минут!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот игрок не состоит в твоей организации!");
    if(!time) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}На 0 минут нельзя!");
    if(PI[id][pRank] == 10) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете выдать мут лидеру");
    f(str_2,sizeof(str_2),"Сотрудник %s заглушил(а) игрока %s на %i минут. Причина: %s",PN(playerid),PN(id),time,reason);
    STM(GetTeamID(playerid), COLOR_LIGHTRED, str_2);
    PI[id][pFMuteTime] = time*60;
	return 1;
}
CMD:cdasesz(playerid,params[])
{
    extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Неизвестная команда! Введите /help для просмотра доступных функций.");
    if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Неизвестная команда! Введите /help для просмотра доступных функций.");
    new Float:X,Float:Y,Float:Z,Float:cX,Float:cY,Float:cZ;
	GetPlayerCameraPos(id, X,Y,Z);
	GetPlayerCameraFrontVector(id, cX,cY,cZ);
	SetPlayerFacingAngle(id, acos(X + cX)*asin(Y + cY));
    return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Неизвестная команда! Введите /help для просмотра доступных функций.");
}
CMD:funmute(playerid, params[])
{
	if(!PI[playerid][pRank] && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вам не доступна эта команда!");
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /funmute [id]");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этот игрок не состоит в твоей организации!");
    f(str_2,sizeof(str_2),"Сотрудник %s разглушил игрока %s",PN(playerid),PN(id));
	STM(GetTeamID(playerid), COLOR_LIGHTRED, str_2);
	PI[id][pFMuteTime] = 0;
	return 1;
}
CMD:referals(playerid) return SPDf(playerid, 13300, DIALOG_STYLE_LIST, !"{FFFFFF}Перечень | {ae433d}Рефералы", !"»", !"x", "{85bb65}[0]{FFFFFF} Проверить реферала\n{85bb65}[1]{FFFFFF} Мои рефералы\n{85bb65}[2]{FFFFFF} Возвращать рефералам: {85bb65}${FFFFFF}%i", PI[playerid][pReferalReturn]);
CMD:unrentcar(playerid)
{
	if(ArendKey[playerid] == INVALID_VEHICLE_ID) return 0;
    new car = ArendKey[playerid];
	new vehid = ArendInfo[0][aRendCarID] + car;
	if(ArendInfo[car][aRentID] == playerid)
	{
		ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
		SetVehicleToRespawn(vehid);
	}
	ArendKey[playerid] = INVALID_VEHICLE_ID;
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались от аренды транспорта");
	return 1;
}
CMD:fixmycar(playerid, params[])
{
	if(PI[playerid][pVIP][0] < 3)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта функция доступна только для игроков с VIP статусом выше 3-го уровня!");
	extract params -> new car; else
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /fixmycar [id]");
	if(IsPlayerHaveCar(playerid, GetVehicleID(car)) != 1)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт!");
	if(GetMoney(playerid) < 1000)
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег! Необходимо 1000$");
	GiveMoney(playerid, -1000, "зареспавнил свой транспорт");
	SetVehicleToRespawn(car);
	LinkVehicleToInterior(car, 0);
	SetVehicleVirtualWorld(car, 0);
	GameTextForPlayer(playerid, !"Car is returned", 0, 1);
	return 1;
}
CMD:fill(playerid)
{
	if(IsAtGasStation(playerid)) ShowPlayerInterface_GasStation(playerid);
	else SCM(playerid,COLOR_GREY,!"[Ошибка] {FFFFFF}Вы ни на 1-й из заправок...");
	return 1;
}
CMD:find(playerid, params[])
{
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /find [id]");
	if(!IsACop(playerid)) return SCM(playerid,COLOR_RED, !"Вы не полицейский!");
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_RED, !"Вы не можете двигаться!");
	if(playerid == id) return 0;
	if(PI[id][pMaskON]>0) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Невозможно найти местонахождение этого человека!");
	if(GetPlayerInterior(id) != GetPlayerInterior(playerid)) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Игрок находится в каком-то здании");
	if(PI[id][pWanted]==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете разыскивать игрока который не преступник!");
	if(!IsPlayerConnectEx(id)) return 0;
	new Float:POS[3];
	GetPlayerPos(id, POS[0], POS[1], POS[2]);
	EnableGPSForPlayer(playerid, POS[0], POS[1], POS[2]);
	return 1;
}
CMD:usedrugs(playerid, const params[])
{
    if(GetPlayerVirtualWorld(playerid)==534)return 0;
	if(GetInvCount(playerid, 327) < 1) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}У вас нет наркотиков");
    if(Cuffed[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
	if(PI[playerid][pHeal] != false) return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Пока ты в больнице , ты не можешь использовать наркотики!");
    if(UseDrugsTime[playerid] > 120) return 0;
    if(GetPVarInt(playerid,!"narko")>global_time)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Подождите несколько секунд!");
    new Float:Health = PlayerHealthAC[playerid];
	Health += 30;
	if(Health > 100) Health = 100;
    J_SetPlayerHealth(playerid,Health);
    if(IsPlayerInAnyVehicle(playerid)) J_ApplyAnimation(playerid, !"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	InvAdd(playerid, 327, -1);
	UseDrugsTime[playerid] += 60;
	PI[playerid][pAllRepl]++;
	UpdatePlayerDataInt(playerid, "AllRepl", PI[playerid][pAllRepl]);
	f(str_2,sizeof(str_2)," %s принимает дозу наркотиков",PN(playerid));
	ProxDetector(30,playerid,str_2,COLOR_PURPLE);
	if(!IsPlayerInAnyVehicle(playerid))J_ApplyAnimation(playerid, !"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPVarInt(playerid,"narko",global_time+6);
	return 1;
}
CMD:gotome(playerid, params[])
{
	if(IsACop(playerid))
	{
	    extract params -> new player:id; else return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Используй: /gotome [id]");
		if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве");
		if(ProxDetectorS(2.0, playerid, id))
		{
		    if(GotoInfo[playerid][gtID] == INVALID_PLAYER_ID)
		    {
		        if(GotoInfo[id][gtGoID] == INVALID_PLAYER_ID)
		        {
					if(Cuffed[id])
					{
                        CheckPlayerGoCuff(playerid);
                        CheckPlayerGoCuff(id);
					    GotoInfo[playerid][gtID] = id;
					    GotoInfo[id][gtGoID] = playerid;
					    GotoInfo[id][gtState] = GetPlayerState(playerid);
					    GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
					    SCM(playerid, -1, !"[Информация] {FFFFFF}Чтобы перестать тащить игрока введите {33AA33}/ungotome");
					    f(str_2, sizeof(str_2), "* %s потащил игрока %s за собой", PN(playerid), PN(id));
					    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
					    TogglePlayerControllable(id, true);
					}
					else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Игрок не скован");
		        }
		        else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Этого игрока уже кто-то ведет за собой");
		    }
		    else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы уже кого-то ведете за собой");
		}
		else SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
	}
	return 1;
}
CMD:ungotome(playerid, params[])
{
	if(IsACop(playerid))
	{
		extract params -> new player:id; else return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Используй: /ungotome [id/name]");
		if(ProxDetectorS(1.5,playerid,id))
		{
			if(Cuffed[id] && GotoInfo[playerid][gtID] == id)
			{
				f(str_2,sizeof(str_2),"* %s перестал тащить за собой игрока %s",PN(playerid),PN(id));
				ProxDetector(25,playerid,str_2,COLOR_PURPLE);
				TogglePlayerControllable(id, Cuffed[id]);
				CheckPlayerGoCuff(id);
				CheckPlayerGoCuff(playerid);
			}
			else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не скован, либо вы не тащите его");
		}
	}
	return 1;
}
CMD:pgetip(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:id; else return SCM(playerid, -1, !"Введите: /pgetip [id]");
 	if(NameIsFullDostup(id,2) || PI[id][pGuardMode]) return 1;
	SCMf(playerid, COLOR_ACHAT, "- - - - Совпадение с: %s. - - - -", PlayerIp[id]);
	SCM(playerid, COLOR_ACHAT, !" ");
	foreach_player(i) if(GetString(PlayerIp[i], PlayerIp[id])) SCMf(playerid, COLOR_ORANGE, "- %s[%i]", PN(i), i, PlayerIp[i]);
	return 1;
}
CMD:azsmonitor(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid);
    if(PI[playerid][pJob]!= JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не механик!");
	if(vTemp[carid][vJob]!=JOB_MECHANIC)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в машине механика!");
    SCM(playerid, COLOR_GREY, !"Мониторинг АЗС.");
 	for(new i; i < OWNABLEBIZES; i++)
	{
	    if(BizInfo[i][bState] == 6 && !GetString(BizInfo[i][bOwner],"The State"))
	    {
	        f(str_2,sizeof(str_2),"-{FFFFFF} Номер заправки: %i. Стоимость {AFAFAF}1-го{FFFFFF} литра бензина: {AFAFAF}$%.1f${FFFFFF}",i,BizInfo[i][bEnterPrice]);
	        SCM(playerid,COLOR_GREY,str_2);
	    }
	}
	return 1;
}
CMD:resetacc(playerid, params[])
{
    if(CheckAdmin(playerid,8,4)) return 1;
    extract params -> new string:playername[24]; else return SCM(playerid, COLOR_RED, !"Используйте: /dellacc [ник игрока]");
	str_2[0] = EOS, f(str_2, sizeof(str_2), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", playername);
	return mysql_tquery(mysql, str_2, "OnDelAccount", "is", playerid, playername);
}
alias:spplayer("sp");
CMD:spplayer(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /spplayer [id]");
	if(target == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    SendAdminsMessagef(COLOR_RED, "<<<<< %s[%i] Заспавнил игрока %s[%i]!", PN(playerid), playerid, PN(target), target);
    SCMf(target, COLOR_RED, "А: %s[%i] вас заспавнил", PN(playerid), playerid);
    //aml(1, playerid, PN(target), "заспавнил игрока");
	return PlayerSpawn(target),SMD(playerid, "default spplayer");
}
CMD:check(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /check [id]");
	if(targetid == INVALID_PLAYER_ID || targetid == playerid) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    if(PI[playerid][pAdmin] < PI[targetid][pAdmin]) return SCM(playerid, COLOR_GREY, !"Нельзя смотреть статистику админа");
    player_Global_Int[playerid][0] = targetid;
    return ShowStats(playerid, targetid);
}
CMD:checklic(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /checklic [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowLicenses(playerid, id);
}
CMD:checkpass(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /checkpass [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowPassport(playerid, id);
}
CMD:checkskills(playerid, params[])
{
 	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /checkskills [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowSkills(playerid, id);
}
CMD:checkinv(playerid, params[])
{
	if(CheckAdmin(playerid)) return 0;
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /checkinv [id]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return TShowStats(playerid, id);
}
CMD:givekey(playerid, params[])
{
	extract params -> new player:id, car; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /givekey [id] [carid]");
	if(!IsPlayerRegCar(playerid, GetVehicleID(car))) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не владелец этого транспорта!");
	if(ProxDetectorS(10.0,playerid,id))
	{
	    if(IsPlayerHaveCar(playerid, GetVehicleID(car)) == 1)
	    {
	        if(IsValidNumberCars(id))
			{
				if(CarInfo[GetVehicleID(car)][cOwnerFamily] != -1) return 1;
		        SetCarKeyer(car,id);
		        SCMf(id,COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Игрок %s дал вам копию ключей от транспорта № %i",PN(playerid),car);
		        SCMf(playerid,COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы дали игроку %s копию ключей от транспорта № %i",PN(id),car);
	        }
			else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок которому вы хотите дать ключи, не может их взять!");
	    }
	}
	return 1;
}
CMD:makeadmin(playerid, params[])
{
	if(!IsPlayerUnicalDostup(playerid))
	{
    	if(CheckAdmin(playerid, 8,2)) return 1;
    }
	extract params -> new player:id, admin; else return SCM(playerid, COLOR_RED, !"Используйте: /makeadmin [id/name] [level]");
	if(admin < 0 || admin > 8) return SCM(playerid,COLOR_RED, !"Используйте: /makeadmin [id] [level (0 - 8)]");
	if(!IsPlayerUnicalDostup(playerid))
	{
		if(id == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Нельзя самому себе установить уровень администратора!");
	    if(!admin) if(NameIsFullDostup(id,4)) return 1;
    }
	str_d[0] = EOS;
	if(GetString(PlayerTag[playerid], "none")) f(str_d, sizeof(str_d), "%s",AInfo[PI[playerid][pAdmin]][Admin_Tag]);
	else f(str_d, sizeof(str_d), "%s",PlayerTag[playerid]);
	SCMf(playerid, COLOR_LIGHTBLUE, "Вы выдали игроку %s %i уровень администрирования [%s{6495ED}]", PN(id), admin, AInfo[admin][Admin_Tag]);
    SendAdminsMessagef(COLOR_RED, "[MakeAdmin] %s %s[%i] установил %i [%s{BE2D2D}] уровень администратора игроку %s (был: %i ур)", str_d, PN(playerid), playerid,admin,AInfo[admin][Admin_Tag], PN(id), PI[id][pAdmin]);
	SetAdminLevel(id, admin, PN(playerid));
	if(!admin) J_Kick(id);
	//aml(16, playerid, PN(id), "", admin, PI[id][pAdmin]);
	return 1;
}
CMD:makeadminoff(playerid, params[])
{
    if(!IsPlayerUnicalDostup(playerid))
	{
		if(CheckAdmin(playerid, 8,2)) return 1;
	}
	extract params -> new string:name[24], lvl; else return SCM(playerid, COLOR_RED, !"Используйте: /makeadminoff [name] [lvl]");
	if(!NameIsFullDostup(playerid,2)) if(lvl < 1 || lvl > 4) return SCM(playerid,COLOR_RED, !"Используйте: /makeadminoff [name] [level (0 - 4)]");
 	else if(!NameIsFullDostup(playerid,3)) if(lvl < 0 || lvl > 8) return SCM(playerid,COLOR_RED, !"Используйте: /makeadminoff [name] [level (0 - 8)]");
	if(GetNameID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Игрок сейчас находится на сервере, используйте /makeadmin");
	return MakeAdminOff(playerid, name, lvl);
}
stock MakeAdminOff(playerid, const name[], lvl)
{
	mysql_queryf_fix(mysql, "SELECT `Admin` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", true, name);
    if(cache_num_rows())
    {
    	new adm;
		cache_get_int(0, !"Admin", adm);
		str_d[0] = EOS;
		if(GetString(PlayerTag[playerid], "none")) f(str_d, sizeof(str_d), "%s",AInfo[PI[playerid][pAdmin]][Admin_Tag]);
		else f(str_d, sizeof(str_d), "%s",PlayerTag[playerid]);
    	SendAdminsMessagef(COLOR_RED, "[MakeAdminOff] %s %s установил %i уровень администратора игроку %s, до этого был %i уровень.", str_d, PN(playerid), lvl, name, adm);
	    mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `Admin`= '%i'  WHERE `NickName` = '%s' LIMIT 1", lvl, name);
    	if(!lvl) mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `APass`= '-1', `AWarns` = '0'  WHERE `NickName` = '%s' LIMIT 1", lvl, name);
    }
    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Администратор с указанным ником не найден");
    cache_delete(result1);
    return 1;
}
stock AWarnOff(playerid, const name[], reason[])
{
	mysql_queryf_fix(mysql, "SELECT `AWarns` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", true, name);
    if(cache_num_rows())
    {
		new warn;
		cache_get_int(0, !"AWarns", warn);
		str_d[0] = EOS;
		if(GetString(PlayerTag[playerid], "none")) f(str_d, sizeof(str_d), "%s",AInfo[PI[playerid][pAdmin]][Admin_Tag]);
		else f(str_d, sizeof(str_d), "%s",PlayerTag[playerid]);
		warn++;
		str_d = "он снят";
		if(!(warn > 2)) f(str_d, sizeof(str_d), "%i/3", warn);
		SendAdminsMessagef(COLOR_RED, "[AWarnOFF] %s %s выдал администратору %s выговор( теперь он снят ). Причина: %s", str_d, PN(playerid), name, reason, warn);
		if(warn > 2) MakeAdminOff(playerid, name, 0);
		else mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `AWarns` = '%i'  WHERE `NickName` = '%s' LIMIT 1", warn, name);
    }
    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Администратор с указанным ником не найден");
	cache_delete(result1);
	return 1;
}
CMD:addcar(playerid,params[])
{
	if(CheckAdmin(playerid, 8,1)) return 1;
	new Float:pos[4];
	extract params -> new model, cost; else return SCM(playerid, -1, !"/addcar [model] [cost]");
	if(model < 400 || model > 100000) return SCM(playerid, COLOR_VALIK, !"Номер Транспортного средства не может быть ниже 400 или выше 3199 !");
	if(!IsValidModel(model)) return 1;
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	SCM(playerid, -1, !"Транспорт создан не забывайте /apark для парковки транспорта.");
	new id = Iter_Free(OWNABLECARS);
	CreateOwnableCar(model, pos[0], pos[1], pos[2], pos[3], "The State", cost);
	return PutPlayerInVehicleEx(playerid,OwnableCar[id], 0);
}
CMD:modellimit(playerid)
{
    if(CheckAdmin(playerid, 8,4)) return 1;
	return SPD(playerid, 5010, 2, !"{AFAFAF}Количество доступных тачек", !"{FFFFFF}Бюджетный класс\nСредний класс\nЭлитный класс\nКастомные авто\n{cccccc}Пополнить автосалоны", !"Выбрать", !"Закрыть");
}
CMD:modellimitadd(playerid, params[])
{
	if(CheckAdmin(playerid, 8,4)) return 1;
	extract params -> new class, total; else
	{
		SCM(playerid, -1, !"/modellimitadd [0 - до 180000; 1 - до 1 млн; 2 - остальное; 3 - особый транспорт; 4 - премиум; 5 - кастомные] [количество]");
		return SCM(playerid, -1, !"Если количество указать ноль то все лимиты обнулятся.");
	}
	if(class < 0 || class > 5 || total < 0) return 0;
	new num;
	switch(class)
	{
	    case 0,1:
	    {
			for(new i; i < sizeof(ModelLimit); i++)
			{
			    if(GetCarPrice(ModelLimit[i][vehID]) > 1800000) continue;
			    MLVehCount[i] = total;
			    num++;
			}
	    }
	    default:
	    {
	        class -= 2;
			for(new i; i < sizeof(ModelLimit); i++)
			{
			    if(ModelLimit[i][vehType] != class) continue;
			    MLVehCount[i] = total;
			    num++;
			}
	    }
	}
	SaveCarsSalon();
    return SCMf(playerid, -1, "Обновлено %i лимитов для выдачи моделей.", total*num);
}
CMD:payday(playerid)
{
	if(CheckAdmin(playerid, 8,2)) return 1;
 	return PayDay();
}
CMD:saveserver(playerid)
{
    if(CheckAdmin(playerid, 8,3)) return 1;
	SendAdminsMessagef(-1, "%s[%i] сделал сохранение сервера!", PN(playerid), playerid);
	return SaveServer();
}
CMD:cl(playerid, params[])
{
    extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /cl [id]");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
	if(IsPlayerLauncher(targetid) != -1) SCMf(playerid, -1, "Игрок %s[%i] {7cfc00}Использует лаунчер Limonchyk Games или мобильный лаунчер!", PN(targetid), targetid);
	else SCMf(playerid, -1, "Игрок %s[%i] {FF2B2B}Не использует лаунчер Limonchyk Games и мобильный лаунчер!", PN(targetid), targetid);
	return 1;
}
CMD:trade(playerid, params[])
{
    extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /trade [id]");
    if(InventStatus{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сейчас начать торговлю!");
    if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(!ProxDetectorS(10.0, playerid, id, 1)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
    if(PlayerAFKTime[id]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок в AFK!");
    if(id == playerid) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя начать торговлю с собой!");
    if(TradeOpen{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сейчас начать торговлю!");
    if(TradeOpen{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок уже торгует!");
    if(TradeSend{playerid} || TradeSend{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}От вас кто-то уже рассматривает предложение, ожидайте ответа!");
    if(PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
    if(TradeTimeCD[playerid] > global_time) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Подождите %i секунд!", TradeTimeCD[playerid] - global_time);
    if(TradeTimeCD[id] > global_time) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Игрок совсем недавно совершал торговлю. Подождите ещё %i секунд", TradeTimeCD[id] - global_time);
    SCMf(playerid, COLOR_YELLOW, "Вы предложили %s[%i] совершить торговлю, ожидайте ответа!", PN(id), id);
    SPDf(id, 8252, DIALOG_STYLE_MSGBOX, !"Торговля", !"Принять", !"Отмена", "{FFFFFF}Игрок %s[%i] предлагает вам торговлю.\nУ вас есть 10 секунд на ответ", PN(playerid), playerid);
    SetPlayerChatBubblef(playerid, COLOR_VALIK, 10.0, 5000, "Предложил %s[%i] совершить торговлю", PN(id), id);
    TradeID[id] = playerid;
    TradeID[playerid] = id;
    TradeSend{playerid} = true;
    TradeTimeCD[playerid] = global_time + 10;
    TradeTimeCD[id] = global_time + 10;
    TradeTime[id][0] = SetTimerEx("TradeTimer", 1000, true, "d", id);
    return 1;
}
public: TradeTimer(id)
{
	TradeTime[id][1] --;
	if(!TradeTime[id][1]) return TradeClose(id);
	new playerid = TradeID[id];
	return SPDf(id, 8252, DIALOG_STYLE_MSGBOX, !"Торговля", !"Принять", !"Отмена", "{FFFFFF}Игрок %s[%i] предлагает вам торговлю.\nУ вас есть %i секунд на ответ", PN(playerid), playerid, TradeTime[id][1]);
}
CMD:invent(playerid) return ShowInventory(playerid);
CMD:removeitem(playerid, params[])
{
	if(CheckAdmin(playerid, 8)) return 1;
	extract params -> new player:id, slot; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(!PI[id][pInvItem][slot]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(slot > PI[playerid][pInvCell]-1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    SCMf(id, COLOR_LIGHTRED, "А: %s забрал у вас %s", PN(playerid), GetItemName(id, slot));
    SCMf(playerid, COLOR_GREEN, "Вы успешно забрали у %s %s из слота %i", PN(id), GetItemName(id, slot), slot);
    SendAdminsMessagef(COLOR_GREY, "[%s] забрал у игрока %s[%i] предмет %s (%i шт.) из слота %i", PN(playerid), PN(id), id, GetItemName(id, slot), PI[id][pInvItemAmount][slot], slot);
	return RefreshInv(id, slot);
}
CMD:giveitemcolor(playerid, params[])
{
	if(CheckAdmin(playerid, 8, 1)) return 1;
	extract params -> new player:id, slot, color; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot] [0-11]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(!PI[id][pInvItem][slot]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(slot > PI[playerid][pInvCell]-1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
	if(!(ItemsInfo[PI[id][pInvItem][slot]][ItemView] >= 1 && ItemsInfo[PI[id][pInvItem][slot]][ItemView] <= 8)) return SCM(playerid,-1,!"покрасить можно только аксессуар!");
	if(color >= 0 && color <= 11) InvPlayerColor[playerid][slot] = color;
	return InvSlotUpdate(id, slot);
}
CMD:removeallinv(playerid, params[])
{
  	if(CheckAdmin(playerid, 8,3)) return 1;
	extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeallinv [id]");
    for(new i; i < PI[playerid][pInvCell]; i++) RefreshInv(id, i);
	InvAdd(playerid, 312, 1);
	SendAdminsMessagef(COLOR_GREY, "%s[%i] очистил инвентарь игроку %s[%i]", PN(playerid), playerid, PN(id), id);
    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Все предметы были успешно удалены.");
    return SCM(id, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Ваш инвентарь был полностью очищен за нарушение правил сервера!");
}
CMD:giveitem(playerid, params[])
{
    if(CheckAdmin(playerid, 7,1)) return 1;
	new bool:set;
	extract params -> new player:id, item, amount; else return SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Используй: /giveitem [id игрока] [id предмета (0 - %i)] [amount]", sizeof(ItemsInfo)-1);
	if(item <= 0 || item > sizeof(ItemsInfo)) return SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Используй: /giveitem [id игрока] [id предмета (0 - %i)] [amount]", sizeof(ItemsInfo)-1);
    if(!IsPlayerConnectEx(id)) return 1;
	if(amount > GetInvSlot(id, item)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У него не хватает места в инвентаре!");
	if(ItemsInfo[item][ItemView] == 27) return SCM(playerid, -1, !"/agl");
	if(item == 74) return SCM(playerid, COLOR_RED, !"Нельзя");

	if(!amount) return SetItem(playerid, item);
	else if(amount <= 0) set = true;
	InvAdd(id, item, amount);

    return SCMf(playerid, -1, "Успешно %s %i шт (%i)", set ? ("забрали") : ("выдали"), item, amount);
}

CMD:giveitemall(playerid, params[])
{
	if(CheckAdmin(playerid, 8,2)) return 1;
	extract params -> new item, amount; else return SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Используй: /giveitemall [id item (0 - %i)] [amount]", sizeof(ItemsInfo)-1);
	if(item < 0 || item > sizeof(ItemsInfo)) return SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Используй: /giveitemall [id item (0 - %i)] [amount]", sizeof(ItemsInfo)-1);
	if(Iter_Count(Player) < 15) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выдавать что-то всем, пока онлайн ниже 15!");
	if(ItemsInfo[item][ItemView] == 27) return SCM(playerid, -1, !"/agl");
	if(item == 74) return SCM(playerid, COLOR_RED, !"Нельзя");
    foreach_player(i) InvAdd(i, item, amount);
    return SCMAll(COLOR_LIGHTRED, (str_f("[Информация] {FFFFFF}Администраторп: %s[%i] выдал всему серверу %s %i",PN(playerid),playerid,ItemsInfo[item][ItemName],amount)));
}
CMD:giveazall(playerid, params[])
{
	if(CheckAdmin(playerid, 8,1)) return 1;
	extract params -> new amount; else return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveazall [amount]");
	if(amount < 1 || amount > 100000) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveazall [1-10000]");
    if(Iter_Count(Player) < 15) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выдавать что-то всем, пока онлайн ниже 15!");
	foreach_player(i) GiveDonate(i, amount);
    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вам были выданы АЗ-монеты");
    return SCMAll(COLOR_LIGHTRED, (str_f("[Информация] {FFFFFF}Администратор: %s[%i] выдал всему серверу %i AZ-монеты", PN(playerid),playerid,amount)));
}
stock AcsUseSlot(playerid, rep, block = 0)
{
	new bool:y1 = true;
    foreach(new i: PlayerVehiclesStream[playerid])
	{
        new Float:X,Float:Y,Float:Z;
        GetVehiclePos(i, X, Y, Z);
        if(IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z))
        {
            switch(rep)
            {
                case 0:
                {
                    vTemp[i][Fuel] += 15;
                    if(vTemp[i][Fuel] > float(GetVehicleLimitTank(i))) vTemp[i][Fuel] = float(GetVehicleLimitTank(i));
					SCM(playerid, COLOR_VALIK, !"[Информация] {ffffff}Вы успешно заправили транспортное средство на 15 литров!");
                }
                case 1: J_RepairVehicle(i),SCM(playerid, COLOR_VALIK, !"[Информация] {ffffff}Вы успешно починили транспортное средство!");
            }
			y1 = false;
            if(!block) PI[playerid][pAcsUsed][rep] = 600;
			break;
        }
	}
	if(y1 != false) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должен быть рядом с транспортом!");
	return SaveAcsUsed(playerid);
}
CMD:balon(playerid, params[])
{
    extract params -> new color_1, color_2; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /balon [цвет 1] [цвет 2]");
	return UseBalloon(playerid, color_1, color_2);
}
stock UseBalloon(playerid, color_1, color_2)
{
    if(GetInvCount(playerid, 325) < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет балончика с краской");
    if(color_1 < 1 || color_2 < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /balon [цвет 1 > 0] [цвет 2 > 0]");
    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Подойдите к машине и переодически жмите левую клавишу мышки , для того чтобы ее покрасить!");
    SCM(playerid, COLOR_GOLD, (str_f("[Информация] {FFFFFF}Узнать цвета можно на форуме %s", ServerCFG[server_forum])));
    GivePlayerWeapon(playerid, 41, 300);
    InvAdd(playerid, 325, -1);
    SetPVarInt(playerid, !"balon",color_1);
    SetPVarInt(playerid, !"balon1",color_2);
	return 1;
}
CMD:fillcar(playerid)
{
    if(!GetInvCount(playerid, 323)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет канистры!");
    InvAdd(playerid, 323, -1);
    AcsUseSlot(playerid, 0,1);
	return GameTextForPlayer(playerid, !"~w~CAR IS ~g~REFUELED", 5000, 6);
}
CMD:repcar(playerid)
{
    if(!GetInvCount(playerid, 324)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет набора для починки!");
    InvAdd(playerid, 324, -1);
	AcsUseSlot(playerid, 1,1);
    return GameTextForPlayer(playerid, !"~w~CAR IS ~g~REPAIRED", 5000, 6);
}
CMD:leyka(playerid)
{
	if(ItemsInfo[AksSlot[playerid][4]][ItemID] != 19621) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас должен быть аксессуар 'Канистра на правое бедро'");
	if(PI[playerid][pAcsUsed][0]) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Время после прошлого использования еще не прошло. Осталось: %i сек", PI[playerid][pAcsUsed][0]);
    return AcsUseSlot(playerid, 0,1);
}
CMD:remkey(playerid)
{
    if(ItemsInfo[AksSlot[playerid][5]][ItemID] != 18635) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас должен быть аксессуар 'Молоток на спину'");
    if(PI[playerid][pAcsUsed][1]) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Время после прошлого использования еще не прошло. Осталось: %s min", Convert(PI[playerid][pAcsUsed][1]));
    return AcsUseSlot(playerid, 1,1);
}
CMD:domkrat(playerid)
{
    if(!GetInvCount(playerid, 799)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет набора для починки!");
    foreach(new i: PlayerVehiclesStream[playerid])
	{
		if(IsACar(i))
		{
    		new Float:X,Float:Y,Float:Z, Float:A;
			GetVehicleShiftPos(i, 1, X, Y, Z, 2.0);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z))
			{
    			J_RepairVehicle(i);
			 	GetVehiclePos(i, X, Y, Z);

				J_SetVehiclePos(i, X,Y,Z);
				GetVehicleZAngle(i, A);
				SetVehicleZAngle(i, A);
				InvAdd(playerid, 799, -1);
			    f(str_2, sizeof(str_2), "%s перевернул свою машину.", PN(playerid));
				ProxDetector(25, playerid, str_2, COLOR_ME);
			    GameTextForPlayer(playerid, !"~w~CAR IS ~g~FLIPED", 5000, 6);
   			 	SCM(playerid,COLOR_VALIK,!"[Информация] {FFFFFF}Вы перернули свой транспорт");
				break;
			}
		}
	}
	return 1;
}
CMD:photo(playerid)
{
	if(ItemsInfo[AksSlot[playerid][2]][ItemID] != 19623) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас должен быть аксессуар 'Фотоаппарат'");
	if(PI[playerid][pAcsUsed][1]) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Время после прошлого использования еще не прошло. Осталось: %i сек", PI[playerid][pAcsUsed][2]);
	GivePlayerWeapon(playerid, 43, 100);
	PI[playerid][pAcsUsed][2] = 600;
	return SaveAcsUsed(playerid);
}
stock SaveAcsUsed(playerid)
{
    if(!IsPlayerLogged[playerid]) return 0;
	str_1[0] = EOS;
	for(new i; i < 6; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pAcsUsed][i]);
	return mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `AcsUsed` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, PI[playerid][pID]);
}
stock UpdateAcsUsed(playerid)
{
    for(new i; i < 6; i++)
	{
	    if(PI[playerid][pAcsUsed][i])
	    {
	        PI[playerid][pAcsUsed][i] --;
			break;
	    }
	}
	return 1;
}
enum getlicinfo
{
	LicName[11+2+2],
	LicItem
};
static const LicInfo[][getlicinfo] = {
	{"на авто", 757},
	{"на мото", 758},
	{"на полеты", 759},
	{"на плавание", 760},
	{"на ловлю рыбы", 761},
	{"на оружие", 762},
	{"на охоту", 763},
	{"на раскопки", 1175},
	{"таксиста",1176}
};
stock CheckLic(playerid)
{
	new slot;
	for(new i; i < sizeof(LicInfo); i++)
	{
		if(!GetInvCount(playerid, LicInfo[i][LicItem])) continue;
		slot = GetItemSlot(playerid, LicInfo[i][LicItem]);
		if(slot == -1) continue;
		if(global_time >= InvPlayerParams[0][playerid][slot]) RefreshInv(playerid, slot, 391);
	}
	return 1;
}
stock GiveLicense(playerid, days, lic = 0)
{
	if(!lic)
	{
		for(new i; i < sizeof LicInfo; i++) if(!GetInvCount(playerid, LicInfo[i][LicItem])) InvAdd(playerid, LicInfo[i][LicItem], 1, 1, unixtime(days));
	}
	else if(!GetInvCount(playerid, lic)) InvAdd(playerid, lic, 1, 1, unixtime(days));
	return 1;
}
stock ShowTrade(playerid)
{
	if(bumboxopen{playerid}) return 1;
	if(TradeOpen{playerid}) return 0;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideTextDraws(playerid, 8);
	#include modules/TEXTDRAWS/inv/inv_trade
	PlayerTextDrawSetString(playerid, Invent_Trade[playerid][3], PN(playerid));
	PlayerTextDrawSetString(playerid, Invent_Trade[playerid][10], PN(TradeID[playerid]));
	TradeOpen{playerid} = true;
	PlayerTextDrawShow(playerid, Invent[playerid][51]);
	for(new i; i < 21; i++)
	{
		if(i < 18) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		PlayerTextDrawShow(playerid, Invent_Trade[playerid][i]);
		if(i < 20)
		{
			PlayerTextDrawLetterSize(playerid, Invent_Menu_Page[playerid][i], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu_Page[playerid][i], 25.500000, 29.500000);
			PlayerTextDrawAlignment(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], 0x999999FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu_Page[playerid][i], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu_Page[playerid][i], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu_Page[playerid][i], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu_Page[playerid][i], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][i], 0x333333FF);
			PlayerTextDrawFont(playerid, Invent_Menu_Page[playerid][i], 5);
			PlayerTextDrawSetProportional(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][i], 1649);
			PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], false);
			PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][i]);

			InventTD_EOS(playerid, Invent_Menu_Page[playerid][i], Invent_Menu_PageAmount[playerid][i]);
			InventTD_EOS(playerid, Invent_Menu_Page[playerid][i], Invent_Menu_PageEnchant[playerid][i]);
		}
	}
	InvTypePlayer{playerid} = 4;
	ShowInvPage(playerid, page);
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return TradeLock{playerid} = 0;
}
stock HideTrade(playerid)
{
	if(!TradeOpen{playerid}) return 0;
	DestroyPlayerTD(playerid, Invent[playerid][51]);
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItemLock][i]) PI[playerid][pInvItemLock][i] = false;
		if(i < 10) if(PI[playerid][pInvItemLockTrade][i] != -1) PI[playerid][pInvItemLockTrade][i] = -1;
		if(i < 18) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 21) DestroyPlayerTD(playerid, Invent_Trade[playerid][i]);
		if(i < 20)
		{
			DestroyPlayerTD(playerid, Invent_Menu_Page[playerid][i]);
			DestroyPlayerTD(playerid, Invent_Menu_PageAmount[playerid][i]);
			DestroyPlayerTD(playerid, Invent_Menu_PageEnchant[playerid][i]);
		}
		if(i < 10)
		{
			PI[playerid][pTradeItem][i] = 0;
			PI[playerid][pTradeItemAmount][i] = 0;
			InvTradeParams[0][playerid][i] = 0;
			InvTradeParams[1][playerid][i] = 0;
			InvTradeColor[playerid][i] = 0;
			InvTradeUID[playerid][i] = 0;
		}
	}
	HideInvPage(playerid);
    InvTypePlayer{playerid} = 0;
    TradeLock{playerid} = 0;
    TradeOpen{playerid} = false;
    TradeSend{playerid} = false;
    TradeMoney[playerid] = 0;
   	TradeBTC[playerid] = 0;
    TradeEURO[playerid] = 0;
    CancelSelectTextDraw(playerid);
	return 1;
}
stock TradeClose(playerid)
{
    KillTimer(TradeTime[playerid][0]);
    TradeTime[playerid][0] = 0;
    TradeTime[playerid][1] = 10;
    SCM(playerid, COLOR_YELLOW, !"Вы отказались от предложения торговли.");
    SCMf(TradeID[playerid], COLOR_YELLOW, "Игрок %s[%i] отказался от вашего предложения торговли.", PN(playerid), playerid);
    TradeSend{playerid} = false;
    TradeSend{TradeID[playerid]} = false;
    TradeID[TradeID[playerid]] = -1;
    TradeID[playerid] = -1;
    return 1;
}
stock CancelTrade(playerid)
{
    TradeSend{playerid} = false;
    TradeSend{TradeID[playerid]} = false;
    TradeTimeCD[playerid] = global_time + 10;
    TradeTimeCD[TradeID[playerid]] = global_time + 10;
	HideTrade(playerid);
	HideTrade(TradeID[playerid]);
    SCM(playerid, COLOR_RED, !"Вы отменили сделку");
    SCMf(TradeID[playerid], COLOR_RED, "%s[%i] отменил сделку", PN(playerid), playerid);
    TradeTime[playerid][1] = 10;
    TradeID[TradeID[playerid]] = -1;
    TradeID[playerid] = -1;
    return CancelSelectTextDraw(TradeID[playerid]);
}
stock UpdateSlotAcsOwnable(playerid, slot=-1)
{
	if(slot == -1) for(new i; i < 21; i++) UpdateCellAcsOwnable(playerid, i);
	else UpdateCellAcsOwnable(playerid, slot);
	return 1;
}
stock CreateInvCarText(playerid)
{
	for(new i; i < 11; i++)
	{
		InvOwnableCarText[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "_");
		PlayerTextDrawLetterSize(playerid, InvOwnableCarText[playerid][i], 0.126499, 0.625000);
		PlayerTextDrawTextSize(playerid, InvOwnableCarText[playerid][i], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, InvOwnableCarText[playerid][i], 3);
		PlayerTextDrawColor(playerid, InvOwnableCarText[playerid][i], 0xAAAAAAFF);
		PlayerTextDrawUseBox(playerid, InvOwnableCarText[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InvOwnableCarText[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvOwnableCarText[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, InvOwnableCarText[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid, InvOwnableCarText[playerid][i], 0x00000000);
		PlayerTextDrawFont(playerid, InvOwnableCarText[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, InvOwnableCarText[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InvOwnableCarText[playerid][i], 0);
	}
}
stock ClearCellAcsOwnable(playerid, i)
{
	if(i < 10) PlayerTextDrawHide(playerid, InvOwnableCarText[playerid][i]);
	else if(i == 20) PlayerTextDrawHide(playerid, InvOwnableCarText[playerid][10]);
	PlayerTextDrawColor(playerid, InvOwnableCar[playerid][i], 0xFFFFFFFF);
	PlayerTextDrawBoxColor(playerid, InvOwnableCar[playerid][i], 0x80808080);
	PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][i], 0x333333FF);
	PlayerTextDrawSetPreviewModel(playerid, InvOwnableCar[playerid][i], 1649);
	PlayerTextDrawSetPreviewRot(playerid, InvOwnableCar[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);
	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
	return 1;
}
stock UpdateCellAcsOwnable(playerid, slot)
{
	new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid), ID = CarInfo[number][cSlotItem][slot];
	if(!ID) return ClearCellAcsOwnable(playerid, slot);
	if(slot != 20)
	{
		if(slot < 10 && ItemsInfo[ID][ItemView] != 23)
		{
			PlayerTextDrawColor(playerid, InvOwnableCar[playerid][slot], CarInfo[number][cObjectUsed][slot] ? 0xFFFFFFFF : 0x999999FF);
			TextRedactor(playerid, InvOwnableCar[playerid][slot], InvOwnableCarText[playerid][slot], "TUNING");
		}
		if(!ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][slot], 0x333333FF);
		else PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][slot], ItemsInfo[ID][ItemColor]);
		PlayerTextDrawSetPreviewModel(playerid, InvOwnableCar[playerid][slot], ItemsInfo[ID][ItemID]);
		PlayerTextDrawSetPreviewRot(playerid, InvOwnableCar[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
		PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot]);
	}
	else
	{
		switch(ID)
		{
			case 658: PlayerTextDrawSetString(playerid, InvOwnableCarText[playerid][10], "~r~Twin~n~Turbo");
			case 4935: PlayerTextDrawSetString(playerid, InvOwnableCarText[playerid][10], "~r~Twin~n~Turbo 2");
			case 803: PlayerTextDrawSetString(playerid, InvOwnableCarText[playerid][10], "~y~Launch");
			default:
			{
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][slot], 0x333333FF);
				PlayerTextDrawSetPreviewModel(playerid, InvOwnableCar[playerid][slot], ItemsInfo[ID][ItemID]);
				PlayerTextDrawSetPreviewRot(playerid, InvOwnableCar[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
				PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot]);
				return 1;
			}
		}
		static Float:X, Float:Y;
		if(PlayerText:InvOwnableCar[playerid][38] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawGetPosEx(playerid, InvOwnableCar[playerid][38], X, Y);
		PlayerTextDrawLetterSize(playerid, InvOwnableCarText[playerid][10], 0.106499, 0.615000);
		PlayerTextDrawTextSize(playerid, InvOwnableCarText[playerid][10], 1.000000, 1.0);
		PlayerTextDrawSetPosEx(playerid, InvOwnableCarText[playerid][10], 8.7+X, 5+Y);
        PlayerTextDrawColor(playerid, InvOwnableCarText[playerid][10], 0xAAAAAAFF);
        PlayerTextDrawBackgroundColor(playerid, InvOwnableCarText[playerid][10], 0x00000000);
        PlayerTextDrawFont(playerid, InvOwnableCarText[playerid][10], 1);
        PlayerTextDrawSetShadow(playerid, InvOwnableCarText[playerid][10], 0);
		PlayerTextDrawAlignment(playerid, InvOwnableCarText[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, InvOwnableCarText[playerid][10], 0);
		return PlayerTextDrawShow(playerid, InvOwnableCarText[playerid][10]);
	}
	return 1;
}
stock OwnableAttachedObject(number, slot)
{
	new carid = OwnableCar[number], item = CarInfo[number][cSlotItem][slot];
	switch(item)
	{
		case 658,4935: return TwinTurboInstall(carid);
		//case 657: return SupremeInstall(carid);
		case 803,1052: return LaunchInstall(carid);
		//case 619: return HalloweenInstall(carid);
		//case 620: return ClassicInstall(carid);
		//case 621: return FuturisticInstall(carid);
		//case 622: return CyberpunkInstall(carid);
		//case 623: return FutureTaxiInstall(carid);
	}
	if(slot < 10)
	{
		DestroyAttachVehicle(carid,SLOT_ATTACH_EDIT+slot);
		if(CarInfo[number][cObjectUsed][slot] != 0 && CarInfo[number][cSlotItem][slot] != 0)
		{
		    AttachVehicle[carid][SLOT_ATTACH_EDIT+slot] = CreateDynamicObject(CarInfo[number][cModelObject][slot],0.0,0.0,5000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(AttachVehicle[carid][SLOT_ATTACH_EDIT+slot],carid,CarInfo[number][cObjectPosX][slot],CarInfo[number][cObjectPosY][slot],CarInfo[number][cObjectPosZ][slot],CarInfo[number][cObjectRotX][slot],CarInfo[number][cObjectRotY][slot],CarInfo[number][cObjectRotZ][slot]);
		}
	}
	if(GetVehicleComponentType(ItemsInfo[CarInfo[number][cSlotItem][slot]][ItemID]) != -1) AddVehicleComponent(carid, ItemsInfo[CarInfo[number][cSlotItem][slot]][ItemID]);
	return 1;
}
stock RemoveOwnableAttachedObject(number, slot, take=0)
{
	new carid = OwnableCar[number];
	if(GetVehicleComponentType(CarInfo[number][cSlotItem][slot]) != -1) RemoveVehicleComponent(carid, CarInfo[number][cSlotItem][slot]);
	if(ItemsInfo[CarInfo[number][cSlotItem][slot]][ItemView] == 20)
	{
		if(CarInfo[number][cObjectUsed][slot] && AttachVehicle[carid][SLOT_ATTACH_EDIT+slot] != -1)
		{
			DestroyAttachVehicle(carid,SLOT_ATTACH_EDIT+slot);
			if(take) CarInfo[number][cObjectUsed][slot] = 0;
		}
	}
	return 1;
}
stock PutAcs(playerid, i)
{
	new click = InventClick{playerid};
	if(!InvCarOpen[playerid] && i < 9)
	{
		if(TempAcsID[playerid][i])
		{
			HideInventMenu(playerid);
			if(!AksSlot[playerid][i])//Надевание акса
			{
				AksSlot[playerid][i] = PI[playerid][pInvItem][click];
				InvAksParams[1][playerid][i] = InvPlayerParams[1][playerid][click];
				AksSlotUID[playerid][i] = PI[playerid][pInvItemUID][click];
				InvAksParams[0][playerid][i] = InvPlayerParams[0][playerid][click];
				InvAksColor[playerid][i] = InvPlayerColor[playerid][click];
				for(new j; j < 10; j++)
				{
					if(InvPlayerRentInvSlot[playerid][j] == click)
					{
						InvAksRentUID[playerid][i] = InvPlayerRentUID[playerid][j], //кому передали
						InvAksRentTimeOut[playerid][i] = InvPlayerRentTimeOut[playerid][j];
						InvPlayerRentUID[playerid][i] = -1;
						InvPlayerRentTimeOut[playerid][i] = -1;
						InvPlayerRentInvSlot[playerid][i] = -1;
						break;
					}
				}
				RefreshInv(playerid, InventClick{playerid});
			}
			else//Замена акса
			{
				if(click != 255)
				{
					RemoveAcs(playerid, i);
					//сохраняем старую инфу в инве
					new TempAcsItem = AksSlot[playerid][i],
						TempAcsItemAmount = InvAksParams[1][playerid][i],
						TempAcsItemStripe = AksSlotUID[playerid][i],
						TempAcsEnchant = InvAksParams[0][playerid][i],
						TempAcsColor = InvAksColor[playerid][i],
						TempRentUID = InvAksRentUID[playerid][i],
						TempRentTimeOut = InvAksRentTimeOut[playerid][i],
						tempAcsParams = InvPlayerParams[1][playerid][i];

					//сейчас в инве
					AksSlot[playerid][i] = PI[playerid][pInvItem][click];
					InvAksParams[1][playerid][i] = PI[playerid][pInvItemAmount][click];
					AksSlotUID[playerid][i] = PI[playerid][pInvItemUID][click];
					InvAksParams[0][playerid][i] = InvPlayerParams[0][playerid][click];
					InvAksColor[playerid][i] = InvPlayerColor[playerid][click];

					for(new j; j < 10; j++)
					{
						if(InvPlayerRentInvSlot[playerid][j] == click)
						{
							InvAksRentUID[playerid][i] = InvPlayerRentUID[playerid][j], //кому передали
							InvAksRentTimeOut[playerid][i] = InvPlayerRentTimeOut[playerid][j];
							break;
						}
					}
					//уже в слоте
					new id2 = SearchFreeCellForRend(playerid);
					if(id2 != -1)
					{
						InvPlayerRentUID[playerid][id2] = TempRentUID;
						InvPlayerRentTimeOut[playerid][id2] = TempRentTimeOut;
						InvPlayerRentInvSlot[playerid][id2] = click;
					}
					PI[playerid][pInvItem][click] = TempAcsItem;
					PI[playerid][pInvItemUID][click] = TempAcsItemStripe;
					PI[playerid][pInvItemAmount][click] = TempAcsItemAmount;
					InvPlayerParams[0][playerid][click] = TempAcsEnchant;
					InvPlayerColor[playerid][click] = TempAcsColor;
					InvPlayerParams[1][playerid][i] = tempAcsParams;
				}
			}
			RemovePlayerAttachedObject(playerid, i);
			player_InvAks_CustomPosition[playerid][i] = true;
			UseItemAttached(playerid, i);
			UpdateSlotAcs(playerid, i);
			InvSlotUpdate(playerid,click);
			TempAcsID[playerid][i] = false;
			CheckInvItem(playerid, 0);
		}
		else if(AksSlot[playerid][i])//Снятие акса
		{
			//if(!CheckUseItem(AksSlot[playerid][i]))
			//{
			CreateAcsMenu(playerid, i);
			return PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			//}
			//TakeAcs(playerid, i);
		}
		CheckSharpeningSet(playerid);
	}
	switch(i)
	{
		case 18,23: //up
		{
			i++;
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			if(number == -1) return 1;
			new j = SearchSlotsForOwnableCar(number, 10);
			if(j != -1)
			{
				PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][j], 0x333333FF);
				CarInfo[number][cSlotItem][j] = PI[playerid][pInvItem][click];
				RefreshInv(playerid, click);
				UpdateSlotAcsOwnable(playerid, j);
				SaveGlobalOwnableCar(number, 0);
				if(i == 24) UpdateUpgradeAutoTD(playerid, number, carid);
				else if(GetVehicleComponentType(ItemsInfo[CarInfo[number][cSlotItem][j]][ItemID]) != -1) AddVehicleComponent(carid, ItemsInfo[CarInfo[number][cSlotItem][j]][ItemID]);
			}
			else SCM(playerid,COLOR_RED, "[Ошибка]{FFFFFF} Все ячейки визуальных предметов заняты!");
		}
		case 19,22:
		{
			//down
			i++;
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			if(	UseMenuModCar[playerid] && !UseModCar[playerid] &&
				ItemsInfo[CarInfo[number][cSlotItem][click-MAX_SLOT_INV]][ItemView] == 20)
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || IsPlayerHaveCar(playerid, number) != 1) return 1;
				UseMenuModCar[playerid] = false;
				UseRedactor(playerid, number, click-MAX_SLOT_INV, CarInfo[number][cSlotItem][click-MAX_SLOT_INV]);
			}
			else if(UseModCar[playerid])
			{
				new j = SearchSlotsForOwnableCar(number);
				if(j != -1)
				{
					PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][j], 0x333333FF);
					CarInfo[number][cSlotItem][j] = PI[playerid][pInvItem][click];
					RefreshInv(playerid, click);
					UpdateSlotAcsOwnable(playerid, j);
					SaveGlobalOwnableCar(number, 0);
				}
				else SCM(playerid,COLOR_RED, "[Ошибка]{FFFFFF} Все ячейки технических характеристик заняты!");
			}
		}
		case 20:
		{
			i++;
			new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
			if(number == INVALID_VEHICLE_ID) return 0;
			if(CarInfo[number][cSlotItem][20] != 0)
			{
				new item = CarInfo[number][cSlotItem][20];
				CarInfo[number][cSlotItem][20] = PI[playerid][pInvItem][click];
				PI[playerid][pInvItem][click] = item;
				InvSlotUpdate(playerid, click);
			}
			else
			{
				CarInfo[number][cSlotItem][20] = PI[playerid][pInvItem][click];
				RefreshInv(playerid, click);
			}
			//
			for(new j; j < 10; j++) DestroyAttachVehicle(carid,j);
			new item = CarInfo[number][cSlotItem][20];
			if(item == 803) LaunchInstall(carid);
			else if(item == 658 || item == 4935) TwinTurboInstall(carid);
			//
			PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][38], 0x333333FF);
			PlayerTextDrawShow(playerid, InvOwnableCar[playerid][38]);
			UpdateSlotAcsOwnable(playerid, 20);
			SaveGlobalOwnableCar(number, 0);
		}
	}
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	return 1;
}
stock SearchSlotsForOwnableCar(number, j=0)
{
	if(number == -1) return -1;
	for(new i=j; i < 10+j; i++) if(!CarInfo[number][cSlotItem][i]) return i;
	return -1;
}
stock RemoveAcs(playerid, i)
{
	switch(i)
	{
		case 2: RemoveRc(playerid);
		case 1,4: DestroyBalloon(playerid);
	}
    return 1;
}
stock TakeAcs(playerid, i)
{
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	if(!InvCarOpen[playerid])
	{
		if(!GetInvSlot(playerid, AksSlot[playerid][i])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять аксессуар.");
		UseAksSlot_3{playerid} = false;
		PI[playerid][pAcsCellLock][i] = 0;
		RemoveAcs(playerid, i);
		RemovePlayerAttachedObject(playerid, i);
		player_InvAks_CustomPosition[playerid][i] = false;
		new id[5];
		id[0] = InvAksParams[0][playerid][i];
		id[1] = InvAksColor[playerid][i];
		id[2] = AksSlot[playerid][i];
		id[3] = InvAksParams[1][playerid][i];
		id[4] = AksSlotUID[playerid][i];

		InvAksParams[0][playerid][i] = 0;
		InvAksColor[playerid][i] = 0;
		AksSlot[playerid][i] = 0;
		InvAksParams[1][playerid][i] = 0;
		AksSlotUID[playerid][i] = 0;
		InvAdd(playerid, id[2], id[3], 0, id[0], id[4], id[1]);
		UpdateSlotAcs(playerid, i);
		ApplyAnimation(playerid,  "goggles", "goggles_put_on", 4.1, 0, 0, 0, 0, 0);
	}
	else
	{
		new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
		new UseModCarID = CarInfo[number][cSlotItem][i];
		switch(ItemsInfo[UseModCarID][ItemView])
		{
			case 19,21,24: 
			{
				if(!GetInvSlot(playerid, UseModCarID)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять модификацию.");
				if(GetVehicleComponentType(ItemsInfo[UseModCarID][ItemID]) != -1) RemoveVehicleComponent(carid, ItemsInfo[UseModCarID][ItemID]);
			}
			case 20,23:
			{
				if(ItemsInfo[CarInfo[number][cSlotItem][i]][ItemView] == 20 && !UseMenuModCar[playerid]) return CreateAcsMenu(playerid, i);
				else
				{
					if(!GetInvSlot(playerid, UseModCarID)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять модификацию.");
					UseMenuModCar[playerid] = false;
				}
			}
		}
		if(ItemsInfo[UseModCarID][ItemView] == 21) for(new j; j < 10; j++) DestroyAttachVehicle(carid,j);
		RemoveOwnableAttachedObject(number, i, 1);
		InvAdd(playerid, UseModCarID, 1,0);
		CarInfo[number][cSlotItem][i] = 0,ClearCellAcsOwnable(playerid, i);
		for(new j; j < 10; j++) 
		{
			if(i == j) 
			{
				CarInfo[number][cModelObject][i] = 0;
				CarInfo[number][cObjectPosX][i] = 0.0;
				CarInfo[number][cObjectPosY][i] = 0.0;
				CarInfo[number][cObjectPosZ][i] = 0.0;
				CarInfo[number][cObjectRotX][i] = 0.0;
				CarInfo[number][cObjectRotY][i] = 0.0;
				CarInfo[number][cObjectRotZ][i] = 0.0;
				CarInfo[number][cObjectUsed][i] = 0;
				SaveGlobalOwnableCar(number, j);
				break;
			}
		}
		if(ItemsInfo[UseModCarID][ItemView] == 24) UpdateUpgradeAutoTD(playerid, number, carid);
	}
	return 1;
}
stock RemoveRc(playerid)
{
	if(GetPlayerState(playerid)!= 1 && GetPVarInt(playerid, !"rccar"))
	{
		new carid = GetPlayerVehicleID(playerid);
		switch(GetVehicleModel(carid))
		{
		    case 441,464,465,501,564:
		    {
		        J_SetPlayerPos(playerid, RcInfo[playerid][rcPosX], RcInfo[playerid][rcPosY], RcInfo[playerid][rcPosZ]);
		    	SetCameraBehindPlayer(playerid);
		    	SetPVarInt(playerid, !"rccar", 0);
				SetEngineStatus(carid,true, playerid);
		    	RcInfo[playerid][rcTime] = 0;
		    }
		}
	}
	return 1;
}
stock SafeRemoveFam(playerid, &next) Iter_SafeRemove(Familys, playerid, next);
stock SaveGlobalOwnableCar(number, save=-1)
{
	switch(save)
	{
		case 0:
		{
			str_1[0] = EOS;
			for(new i; i < 21; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, CarInfo[number][cSlotItem][i]);
			mysql_pqueryf(mysql, "UPDATE `ownable` SET `SlotItem` = '%s' WHERE `ID` = '%i' LIMIT 1", str_1, CarInfo[number][cID]);
		}
		case 1:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, CarInfo[number][cModelObject][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ModelObject` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 2:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectPosX][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectPosX` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 3:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectPosY][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectPosY` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 4:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectPosZ][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectPosZ` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 5:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectRotX][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectRotX` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 6:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectRotY][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectRotY` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 7:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%f,", str_2, CarInfo[number][cObjectRotZ][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectRotZ` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
		case 8:
		{
			str_1[0] = EOS, str_2[0] = EOS;
			for(new i; i < 10; i++) f(str_2, sizeof(str_2), "%s%i,", str_2, CarInfo[number][cObjectUsed][i]);
			f(str_1, sizeof(str_1), "UPDATE `ownable` SET `ObjectUsed` = '%s' WHERE `ID` = '%i' LIMIT 1", str_2, CarInfo[number][cID]);
			mysql_pquery(mysql, str_1);
		}
	}
	return 1;
}
stock SafeRemoveCar(number, &next)
{
	//save
	//other
	for(new i; i < 21; i++) RemoveOwnableAttachedObject(number, i);
	mysql_pqueryf(mysql,"UPDATE `ownable` SET `Fuel` = '%f', `IDownable` = '-1', `OwnerFamilyUID` = '-1' WHERE `ID` = '%i' LIMIT 1", vTemp[OwnableCar[number]][Fuel], CarInfo[number][cID]);
	if(CarInfo[number][cOwnerFamily] == -1) for(new i; i < 9; i++) SaveGlobalOwnableCar(number, i);
	else if(CarInfo[number][cOwnerFamilyUID] != -1)
	{
		new id = -1;
		foreach_player(i)
		{
			if(CarInfo[number][cOwnerFamilyUID] == PI[i][pID]) 
			{
				id = i;
				break;
			}
		}
		if(id != -1)
		{
			FamilyAutoUID[id] = -1;
			FamilyAutoSpawn[id] = false;
			FamilyAutoResponse[id] = 0;
			CarInfo[number][cOwnerFamilySpawn] = false;
		}
	}
	DestroyVehicleEx(OwnableCar[number]);
	ResetCarArrays(number);
	Iter_SafeRemove(OWNABLECARS, number, next);
	return 1;
}
stock SellHouse(houseid)
{
	for(new i; i < 90; i++)
	{
		if(random(100) > 60) continue;
		HouseInfo[houseid][hItemAmount][i] = 0;
		HouseInfo[houseid][hItem][i] = 0;
		InvHouseParams[0][houseid][i] = 0;
		InvHouseParams[1][houseid][i] = 0;
		InvHouseColor[houseid][i] = 0;
		InvHouseUID[houseid][i] = 0;
	}
	HouseInfo[houseid][hLevel] = 1;
	SetString(HouseInfo[houseid][hOwner], "The State");
	for(new i; i < 5; i++)
	{
		if(HRoomOwner[houseid][i] != -1)
		{
			mysql_pqueryf(mysql,"UPDATE `"TABLE_ACCOUNTS"` SET `DCTime` = '0' WHERE `ID` = '%i' LIMIT 1", HRoomOwner[houseid][i]);
			HRoomOwner[houseid][i] = -1;
		}
	}
	HouseInfo[houseid][hLock] 	= false;
	HouseInfo[houseid][hMoney] 	= 0;
	HouseInfo[houseid][hPodval] = -1;
	HouseInfo[houseid][hNalog2] = 0;
	SetString(HouseInfo[houseid][hDescription], "");
 	UpdateDataStr("houses", "Owner", HouseInfo[houseid][hOwner], HouseInfo[houseid][hID]);
    UpdateDataInt("houses", "Level", HouseInfo[houseid][hLevel], HouseInfo[houseid][hID],"=");
    UpdateDataInt("houses", "Lock", HouseInfo[houseid][hLock], HouseInfo[houseid][hID],"=");
    UpdateDataInt("houses", "Money", HouseInfo[houseid][hMoney], HouseInfo[houseid][hID],"=");
    UpdateDataStr("houses", "Description", HouseInfo[houseid][hDescription], HouseInfo[houseid][hID]);
	SaveRoomOwner(houseid);
	return UpdateHouse(houseid);
}
stock SaveRoomOwner(houseid)
{
	str_1[0] = EOS;
	for(new i; i < 5; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, HRoomOwner[houseid][i]);
	UpdateDataStr("houses", "Room_Owner", str_1, HouseInfo[houseid][hID]);
}
stock SellBiz(bizid)
{
	BizInfo[bizid][bLock] = 0;
	BizInfo[bizid][bMoney] = 0;
	BizInfo[bizid][bEnterPrice] = 0;
	if(BizInfo[bizid][bState] != 24) BizInfo[bizid][bProducts] = 10000;
	BizInfo[bizid][bProdPrice] = 0;
	BizInfo[bizid][bKrasher] = 0;
	BizInfo[bizid][bBuyCost] = 0;
	BizInfo[bizid][bNeedItem] = 0;
	BizInfo[bizid][bNum] = 0;
	BizInfo[bizid][bVisit] = 0;
	BizInfo[bizid][bWin] = 0;
	BizInfo[bizid][bZam] = -1;
	SetString(BizInfo[bizid][bDescription], "");
	SetString(BizInfo[bizid][bOwner], "The State");
 	UpdateDataStr("businesses", "Owner", BizInfo[bizid][bOwner], BizInfo[bizid][bID]);
 	UpdateDataStr("businesses", "Description", BizInfo[bizid][bDescription], BizInfo[bizid][bID]);
 	UpdateDataInt("businesses", "Zam", BizInfo[bizid][bZam], BizInfo[bizid][bID]);
    UpdateDataInt("businesses", "Lock", BizInfo[bizid][bLock], BizInfo[bizid][bID],"=");
    UpdateDataInt("businesses", "Level", BizInfo[bizid][bNalog], BizInfo[bizid][bID],"=");
    UpdateDataInt("businesses", "Money", BizInfo[bizid][bMoney], BizInfo[bizid][bID],"=");
    UpdateDataFloat("businesses", "EnterPrice", BizInfo[bizid][bEnterPrice], BizInfo[bizid][bID], 1);
    UpdateDataInt("businesses", "Products", BizInfo[bizid][bProducts], BizInfo[bizid][bID],"=");
    UpdateDataFloat("businesses", "ProdPrice", BizInfo[bizid][bProdPrice], BizInfo[bizid][bID], 1);
    UpdateDataInt("businesses", "Krasher", BizInfo[bizid][bKrasher], BizInfo[bizid][bID],"=");
    UpdateDataInt("businesses", "BuyCost", BizInfo[bizid][bBuyCost], BizInfo[bizid][bID],"=");
    UpdateDataInt("businesses", "NeedItem", BizInfo[bizid][bNeedItem], BizInfo[bizid][bID],"=");
	return UpdateBiz(bizid);
}
stock PlayerReg(playerid)
{
	Clother[playerid] = 0;
	OnPlayerRegister(playerid, RegPass[playerid]);
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Благодарим вас за регистрацию на нашем сервере");
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Сейчас вам желательно добраться до мэрии и получить паспорт");
 	foreach_player(i)
 	{
		if(!PI[i][pAdmin]) continue;
	 	SendAdminsMessagef(-1, "Приветствуем нового игрока нашего сервера: {FF9900}%s {FFFFFF}(ID: %i)  {cccccc}IP: %s",PN(playerid), playerid, ShowIP[i] ? ("скрыто") : PlayerIP(playerid));
		break;
	}
	SetFullness(playerid, 100);
	J_SetPlayerHealth(playerid, 100);
	PI[playerid][pSkin] = 0;
	return 1;
}
public: OrelTimer(playerid) return OrelAndReshkaWin(playerid);
stock OrelAndReshkaWin(playerid)
{
	new dice = random(11), orel[5] = "Орёл", reshka[6] = "Решка";
	switch(dice)
	{
		case 0..5:
	    {
  			str_1[0] = EOS, f(str_1,sizeof(str_1),"%s поймал(а) монетку, выпал: Орёл.",PN(playerid));
			ProxDetector(25,playerid,str_1,COLOR_ME);
			if(!strcmp(orel, StatusMoneta[playerid], true))
			{
				str_1[0] = EOS, f(str_1,sizeof(str_1),"Победил %s - %s.",PN(playerid),StatusMoneta[playerid]);
				ProxDetector(25,playerid,str_1,COLOR_DOCHAT);
				GiveMoney(playerid, OrelMoney[playerid]);
				GiveMoney(OrelName[playerid], -OrelMoney[OrelName[playerid]]);
				GameTextForPlayer(playerid, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(OrelName[playerid], "~r~YOU LOSE!", 4200, 3);
			}
			else
			{
				str_1[0] = EOS, f(str_1,sizeof(str_1),"Победил %s - %s.",PN(OrelName[playerid]),StatusMoneta[OrelName[playerid]]);
				ProxDetector(25,playerid,str_1,COLOR_DOCHAT);
				GiveMoney(OrelName[playerid], OrelMoney[OrelName[playerid]]);
				GiveMoney(playerid, -OrelMoney[playerid]);
				GameTextForPlayer(OrelName[playerid], "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(playerid, "~r~YOU LOSE!", 4200, 3);
			}
		}
		case 6..11:
		{
			str_1[0] = EOS, f(str_1,sizeof(str_1),"%s поймал(а) монетку, выпал: Решка.",PN(playerid));
			ProxDetector(25,playerid,str_1,COLOR_ME);
			if(!strcmp(reshka, StatusMoneta[playerid], true))
			{
				str_1[0] = EOS, f(str_1,sizeof(str_1),"Победил %s - %s.",PN(playerid),StatusMoneta[playerid]);
				ProxDetector(25,playerid,str_1,COLOR_DOCHAT);
				GiveMoney(playerid, OrelMoney[playerid]);
				GiveMoney(OrelName[playerid], -OrelMoney[OrelName[playerid]]);
				GameTextForPlayer(playerid, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(OrelName[playerid], "~r~YOU LOSE!", 4200, 3);
			}
			else
			{
				str_1[0] = EOS, f(str_1,sizeof(str_1),"Победил %s - %s.",PN(OrelName[playerid]),StatusMoneta[OrelName[playerid]]);
				ProxDetector(25,playerid,str_1,COLOR_DOCHAT);
				GiveMoney(OrelName[playerid], OrelMoney[OrelName[playerid]]);
				GiveMoney(playerid, -OrelMoney[playerid]);
				GameTextForPlayer(OrelName[playerid], "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(playerid, "~r~YOU LOSE!", 4200, 3);
			}
		}
	}
	new bid = GetPlayerVirtualWorld(playerid);
	GiveBizMoney(bid-100, OrelMoney[playerid]/10);
	OrelMoney[playerid] = 0;
	OrelMoney[OrelName[playerid]] = 0;
	ZapretOrel[playerid] = 0;
	ZapretOrel[OrelName[playerid]] = 0;
	StatusMoneta[playerid] = "0";
	StatusMoneta[OrelName[playerid]] = "0";
	OrelName[OrelName[playerid]]= INVALID_PLAYER_ID;
	OrelName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
stock UpdateTradeMoney(playerid, money = 1)
{
    if(money) PlayerTDSetStringf(playerid, Invent_Trade[playerid][6], "%i\t$", TradeMoney[playerid]), PlayerTDSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "%i\t$", TradeMoney[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock UpdateTradeEURO(playerid, money = 1)
{
    if(money) PlayerTDSetStringf(playerid, Invent_Trade[playerid][6], "~y~%i\tEURO", TradeEURO[playerid]), PlayerTDSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "~y~%i\tEURO", TradeEURO[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock UpdateTradeBTC(playerid, money = 1)
{
    if(money) PlayerTDSetStringf(playerid, Invent_Trade[playerid][6], "~y~%i\tBTC", TradeBTC[playerid]), PlayerTDSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "~y~%i\tBTC", TradeBTC[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock ShowTradeExchange(playerid)
{
    return SPDf(playerid, 8264, DIALOG_STYLE_TABLIST_HEADERS, !"Торговля", !"Выбрать", !"Отмена",\
    "{FFFFFF}Валюта  {73B461}Баланс  {cccccc}Комиссия (с варном)\n\
    Ввести сумму в валюте $$$$ {73B461}$%i {cccccc}6% (10%)\n\
    Ввести сумму в валюте ЕВРО {73B461}%i ЕВРО {cccccc}3% (5%)\n\
    Ввести сумму в валюте BTC  {73B461}%i BTC  {cccccc}0% (0%)", \
    GetMoney(playerid),\
    GetInvCount(playerid, 809), \
    GetInvCount(playerid, 1203));
}
stock ShowTradeBTC(playerid)
{
    f(str_1, sizeof str_1, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: %i BTC", GetInvCount(playerid, 1203));
    return SPD(playerid, 8266, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock ShowTradeEURO(playerid)
{
    f(str_1, sizeof str_1, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: %i ЕВРО", GetInvCount(playerid, 809));
    return SPD(playerid, 8265, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock ShowTradeMoney(playerid)
{
    f(str_1, sizeof str_1, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: $%i", GetMoney(playerid));
    return SPD(playerid, 8258, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock showboomtdmenu(playerid)
{
    #include modules/TEXTDRAWS/boom
   	BoomUse[playerid] = 1;
   	Music[playerid] = 1;
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][0], "1_/_27");
    for(new i; i < 10; i++) TextDrawShowForPlayer(playerid, boomtext[i]);
	for(new i; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
	bumboxopen{playerid} = true;
	ShowMenuBoom(playerid);
	SelectTextDraw(playerid, 0x777777FF-50);
	return 1;
}
stock HideBoom(playerid)
{
    for(new i; i < 10; i++) TextDrawHideForPlayer(playerid, boomtext[i]);
	for(new i; i < 16; i++)
	{
		if(i < 9) DestroyPlayerTD(playerid, boomtext_p[playerid][i]);
		DestroyPlayerTD(playerid, pboom[playerid][i]);
	}
	BoomUse[playerid] = 0;
    bumboxopen{playerid} = false;
	CancelSelectTextDraw(playerid);
    return 1;
}
stock ShowMenuBoom(playerid)
{
    for(new i; i < 7; i++)
    {
        if(8*BoomUse[playerid]-i == NumMusic[playerid])
        {
            PlayerTextDrawShow(playerid, pboom[playerid][i+i+1]);
            PlayerTextDrawShow(playerid, pboom[playerid][i+i]);
        }
    }
    return 1;
}
stock BumBoxStr(playerid, str)
{
    BoomUse[playerid] = str;
    for(new i; i < 27; i++)
    {
        if(i < 16) PlayerTextDrawHide(playerid, pboom[playerid][i]);
        if(i < 9) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
        if(i != 0) if(BoomUse[playerid] == i) Music[playerid] = 1+(i-1)*8;
    }
    if(NumMusic[playerid] != 0) ShowMenuBoom(playerid);
    if(BoomUse[playerid] != 27)
    {
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
    }
    else
    {
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
        PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    }
    PlayerTDSetStringf(playerid, boomtext_p[playerid][0], "%i_/_27", BoomUse[playerid]);
    for(new i; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
    if(BoomUse[playerid] == 27) for(new i = 1; i < 7; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
    return 1;
}
stock DeleteBumBox(playerid)
{
    if(bumboxobject[playerid] && ItemsInfo[AksSlot[playerid][5]][ItemID] == 2226 || ItemsInfo[AksSlot[playerid][5]][ItemID] == 2102)
    {
        DestroyDynamicObject(bumboxobject[playerid]);
        bumboxobject[playerid] = 0;
        if(bumboxopen{playerid}) HideBoom(playerid);
        NumMusic[playerid] = 0;
        BoomUse[playerid] = 0;
        Music[playerid] = 0;
        StopAudioStreamForPlayer(playerid);
        DestroyDynamic3DTextLabel(b_box3D[playerid]);
        DestroyDynamicArea(area_boombox[playerid]);
 		foreach(new i: PlayerPlayersStream[playerid]) if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
    }
    return 1;
}
cmd:itemsinfo(playerid)
{
	if(CheckAdmin(playerid,8)) return 1;
	return ShowItemsInfo(playerid, 1);
}
stock ShowItemsInfo(playerid, page, plus = 0)
{
	str_1[0] = EOS;
	PageItems[playerid] = page;
	if(page == 1) PlusItems[playerid] = plus*page;
	else PlusItems[playerid] = plus*page-50;
	new item = 1,
		item_end = sizeof(ItemsInfo)-(50*page);
	if(item_end < 1) item_end = 1;
	for(new i = sizeof(ItemsInfo)-PlusItems[playerid]-1; i >= item_end; i--) 
	{
		if(item == 1 && i == 312) item = 0;
		f(str_1,sizeof(str_1),"%s{FFFFFF}%i\t\t\t{FFFFFF}%s\n", str_1, i, ItemsInfo[i][ItemName]);
	}
	if(item == 1) strcat(str_1,!"{FFD700}Следующая старница >>");
	if(PageItems[playerid] != 1) strcat(str_1,!"\n{FFD700}<< Предыдущая страница");

	return SPD(playerid, 10002, DIALOG_STYLE_LIST, !"{ffcd66}Информация о предмете", str_1, !"Добавить", !"Отмена");
}
stock UseRadioVehicle(playerid, item)
{
    if(PI[playerid][pRCBlock]) return SCMf(playerid,COLOR_RED, "[Ошибка] {FFFFFF}Вы не можете использовать игрушечную машинку, осталось %i секунд!", PI[playerid][pRCBlock]);
	if(player_InGreenZone{playerid} != false) return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы не можете использоваться И/М в зеленой зоне!");
	if(!GetPlayerVirtualWorld(playerid) && !GetPlayerInterior(playerid))
	{
        if(GetPlayerState(playerid) !=1) return SCM(playerid,COLOR_RED, !"[Ошибка]{FFFFFF} Вы уже находитесь в транспорте!");
	  	new Float: A;
        GetPlayerPos(playerid, RcInfo[playerid][rcPosX], RcInfo[playerid][rcPosY], RcInfo[playerid][rcPosZ]);
     	GetPlayerFacingAngle(playerid, A);
        PI[playerid][plveh] = J_AddStaticVehicleEx(item, RcInfo[playerid][rcPosX], RcInfo[playerid][rcPosY], RcInfo[playerid][rcPosZ], A, -1, -1, -1);
		PutPlayerInVehicleEx(playerid, PI[playerid][plveh], 0);
		vTemp[PI[playerid][plveh]][Fuel] = 100.00;
		VehicleHealth[PI[playerid][plveh]] = 1500;
		//AC_FIX_DIALOG_F(playerid, 0);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Правила использования радио управляемой техники:\n\
		{CD5C5C}- Запрещено наносить урон игрокам (любыми способами)\n\
		- Запрещено покидать размеченные границы (на карте)\n\n\
		{FFD700}Для выхода используйте 'F' или 'ENTER'", !"Выход", !"");
		HideInventory(playerid, 1);
		CancelSelectTextDraw(playerid);
		RcInfo[playerid][rcTime] = 0;
		SetPVarInt(playerid, !"rccar", 1);
		SetEngineStatus(PI[playerid][plveh], true, playerid);
	}
	else SCM(playerid,COLOR_RED, !"[Ошибка]{FFFFFF} Сдесь нельзя использовать этот предмет!");
	return 1;
}
stock CreateGunTD(playerid)
{
    new Float:Y = PI[playerid][pInvPos_Y], Float:X = PI[playerid][pInvPos_X];
	#include modules\TEXTDRAWS\createguntd
	return 1;
}
CMD:adeldesc(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /adeldesc [id]");
    SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы удалили описание персонажа игроку %s[%i]", PN(targetid), targetid);
    SCMf(targetid, COLOR_VALIK, "[Информация] {FFFFFF}А: %s удалил вам описание персонажа!", PN(playerid));
    if(!GetString(PI[targetid][pDescription], "default") && PlayerDescriptionText[targetid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerDescriptionText[targetid]), PlayerDescriptionText[targetid] = Text3D:-1;
    SetString(PI[targetid][pDescription], "default"), UpdatePlayerDataStr(targetid, "Description", "default");
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s удалил описание персонажа игроку %s[%i]!",PN(playerid), PN(targetid), targetid);
}
stock ShowDayRewardsDialog(playerid)
{
	static otigrovka[25] = "{be2d2d}[Не выполнено]", otigrovka1[25] = "{be2d2d}[Не выполнено]", otigrovka2[25] = "{be2d2d}[Не выполнено]";
	if(PI[playerid][pRewardsComplete][0] == 1) otigrovka = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][1] == 1) otigrovka1 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][2] == 1) otigrovka2 = "{42B02C}[Выполнено]";
	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFD700}Название\t{FFD700}Прогресс\t{FFD700}Статус\n{5afad5}Отыграть 5 часов\t{AFAFAF}%i из 5\t%s\n{5afad5}Отыграть 10 часов\t{AFAFAF}%i из 10\t%s\n{5afad5}Отыграть 20 часов\t{AFAFAF}%i из 20\t%s", PI[playerid][pRewards][0], otigrovka, PI[playerid][pRewards][1], otigrovka1, PI[playerid][pRewards][2], otigrovka2);
    //AC_FIX_DIALOG_F(playerid, 6703);
	return SPD(playerid, 6703, DIALOG_STYLE_TABLIST_HEADERS, !"Достижения", str_1, "Ок", "Отмена");
}
stock ShowJobRewardsDialog(playerid)
{
    static job1[25] = "{be2d2d}[Не выполнено]", job2[25] = "{be2d2d}[Не выполнено]", job3[25] = "{be2d2d}[Не выполнено]";
	if(PI[playerid][pRewardsComplete][3] == 1) job1 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][4] == 1) job2 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][5] == 1) job3 = "{42B02C}[Выполнено]";
	f(str_1, sizeof(str_1), "{FFD700}Название\t{FFD700}Прогресс\t{FFD700}Статус\n{5afad5}[Ферма] Отнести 50 стогов сена\t{AFAFAF}%i из 50\t%s\n{5afad5}[Ферма] Отнести 100 стогов сена\t{AFAFAF}%i из 100\t%s\n{5afad5}[Ферма] Отнести 200 стогов сена\t{AFAFAF}%i из 200\t%s", PI[playerid][pRewards][3], job1, PI[playerid][pRewards][4], job2, PI[playerid][pRewards][5], job3);
	return SPD(playerid, 6704, DIALOG_STYLE_TABLIST_HEADERS, !"Достижения", str_1, "Ок", "Отмена");
}
stock ShowFracRewardsDialog(playerid)
{
    static frac1[25] = "{be2d2d}[Не выполнено]", frac2[25] = "{be2d2d}[Не выполнено]", frac3[25] = "{be2d2d}[Не выполнено]", frac4[25] = "{be2d2d}[Не выполнено]";
	if(PI[playerid][pRewardsComplete][6] == 1) frac1 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][7] == 1) frac2 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][8] == 1) frac3 = "{42B02C}[Выполнено]";
	if(PI[playerid][pRewardsComplete][9] == 1) frac4 = "{42B02C}[Выполнено]";
	f(str_1, sizeof(str_1), "{FFD700}Название\t{FFD700}Прогресс\t{FFD700}Статус\n{5afad5}[Армия] Отслужить 15 часов в Армии\t{AFAFAF}%i из 15\t%s\n{5afad5}[Армия] Отслужить 30 часов в Армии\t{AFAFAF}%i из 30\t%s\n{5afad5}[Армия] Отслужить 60 часов в Армии\t{AFAFAF}%i из 60\t%s\n{5afad5}[Полиция] Арестовать 5 преступников\t{AFAFAF}%i из 5\t%s", PI[playerid][pRewards][6], frac1, PI[playerid][pRewards][7], frac2, PI[playerid][pRewards][8], frac3, PI[playerid][pRewards][9], frac4);
    //AC_FIX_DIALOG_F(playerid, 6705);
	return SPD(playerid, 6705, DIALOG_STYLE_TABLIST_HEADERS, !"Достижения", str_1, "Ок", "Отмена");
}
CMD:atune(playerid)
{
	if(CheckAdmin(playerid)) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, !"Вы не за рулём!");
	return SPD(playerid, 8004, DIALOG_STYLE_LIST, !"Тюнинг меню", !"Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nАзот", !"Выбрать", !"Отмена");
}
CMD:checkpunish(playerid, params[])
{
	if(CheckAdmin(playerid, 5)) return 1;
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /checkpunish [id]");
    return CheckPunish(playerid, id);
}
CMD:addbizik7(playerid)
{
    if(CheckAdmin(playerid,8,4)) return 1;
	return ShowAddBussines(playerid);
}
stock ShowAddBussines(playerid)
{
    str_2[0] = EOS;
    str_2 = "{FFFF00}Название\t{FFFF00}Цена\n";
	for(new i; i < sizeof(InfoBusinesses); i++) f(str_2, sizeof(str_2), "{FFFFFF}%s\t\t%s\t\t%i\n", str_2, InfoBusinesses[i][BName], InfoBusinesses[i][BCost]);
	return SPD(playerid, 932, DIALOG_STYLE_TABLIST_HEADERS, "addbiz", str_2, "Выбрать", "Закрыть");
}
stock ShowBuyPage(playerid, page)
{
	if(MenuPage[playerid] == page) return 1;
	MenuPage[playerid] = page;
	for(new i; i < 30; i++) MenuSlotUpdate(playerid, i, 6);
	PlayerTDSetStringf(playerid, Item_Menu_Shop[playerid][0], "%i", page);
	return 1;
}
stock ShowBuyMenu(playerid, type)
{
	if(ShopOpen[playerid]) return 1;
	if(!PI[playerid][pAdmin]) return SCM(playerid,-1,"будет доступно после рестарта!");
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideTextDraws(playerid, 7);
	HideLogo(playerid);
	PI[playerid][pInvPos_X] = 0.0, PI[playerid][pInvPos_Y] = 0.0;
	#include modules/TEXTDRAWS/inv/inv_menu
	#include modules/TEXTDRAWS/inv/inv_shop
	if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "SHOP");
	else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("МАГАЗИН"));
	PlayerTextDrawShow(playerid, Invent[playerid][51]);
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		PI[playerid][pInvItemLock][i] = true;
		if(i < 18) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 7) PlayerTextDrawShow(playerid, Item_Menu_Shop[playerid][i]);
		if(i < 2)
		{
			player_Global_Int[playerid][i]	= 0;
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		}
	}
	MenuStatus{playerid} = true;
	ShopOpen[playerid] = true;
	ShopUID{playerid} = type;
	ShowBuyPage(playerid, 1);
	ShowInvPage(playerid, page);
	return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}
stock GetCostID(id)
{
	/*new cost;
	switch(ID)
	{
		case 825..830: cost = 500;//аксиома 1 стр
		case 831: cost = 350;
		case 832: cost = 200;
		case 833: cost = 210;
		case 834: cost = 200;
		case 835: cost = 380;
		case 836: cost = 320;
		case 837: cost = 370;
		case 838: cost = 370;
		case 839: cost = 320;
		case 840: cost = 360;
		case 841: cost = 130;
		case 842: cost = 370;
		case 843: cost = 390;
		case 844: cost = 390;
		case 845: cost = 180;
		case 846: cost = 190;
		case 847: cost = 270;
		case 848: cost = 220;
		case 849: cost = 290;
		case 850: cost = 320;
		case 851: cost = 240;
		case 852: cost = 160;
		case 853: cost = 350;
		case 854: cost = 200;
		case 855: cost = 200;//аксиома 2 стр
		case 856: cost = 130;
		case 857: cost = 320;
		case 858: cost = 300;
		case 859: cost = 130;
		case 860: cost = 260;
		case 861: cost = 290;
		case 862: cost = 350;
		case 863: cost = 180;
		case 864: cost = 320;
		case 865: cost = 190;
		case 866: cost = 330;
		case 867: cost = 260;
		case 868: cost = 260;
		case 869: cost = 130;
		case 870: cost = 230;
		case 871: cost = 240;
		case 872: cost = 160;
		case 873: cost = 230;
		case 874: cost = 210;
		case 875: cost = 200;
		case 876: cost = 240;
		case 877: cost = 340;
		case 878: cost = 140;
		case 879: cost = 130;
		case 880: cost = 150;
		case 881: cost = 200;
		case 882: cost = 230;
		case 883: cost = 150;
		case 884: cost = 280;
		case 885: cost = 200;//аксиома 3 стр
		case 886: cost = 300;
		case 887: cost = 190;
		case 888: cost = 210;
		case 889: cost = 300;
		case 890: cost = 310;
		case 891: cost = 170;
		case 892: cost = 140;
		case 893: cost = 360;
		case 894: cost = 380;
		case 895: cost = 180;
		case 896: cost = 370;
		case 897: cost = 150;
		case 898: cost = 180;
		case 899: cost = 140;
		case 900: cost = 270;
		case 901: cost = 160;
		case 902: cost = 240;
		case 903: cost = 280;
		case 904: cost = 270;
		case 905: cost = 260;
		case 906: cost = 350;
		case 907: cost = 330;
		case 908: cost = 220;
		case 909: cost = 210;
		case 910: cost = 350;
		case 911: cost = 160;
		case 912: cost = 380;
		case 913: cost = 170;
		case 914: cost = 200;
		case 915: cost = 350;//аксиома 4 стр
		case 916: cost = 250;
		case 917: cost = 390;
		case 918: cost = 200;
		case 919: cost = 1140;
		case 920: cost = 1000;
		case 921: cost = 160;
		case 922: cost = 160;
		case 923: cost = 230;
		case 924: cost = 340;
		case 925: cost = 300;
		case 926: cost = 280;
		case 927: cost = 270;
		case 928: cost = 200;
		case 929: cost = 350;
		case 930: cost = 160;
		case 931: cost = 350;
		case 932: cost = 140;

		case 933: cost = 5800000;//магаз запчестей 1 стр
		case 934: cost = 5400000;
		case 935: cost = 4400000;

		case 936: cost = 2400000;
		case 937: cost = 5400000;
		case 938: cost = 5200000;
		case 939: cost = 4000000;
		case 940: cost = 5600000;
		case 941: cost = 3800000;
		case 942: cost = 5800000;
		case 943: cost = 4400000;
		case 944: cost = 2800000;
		case 945: cost = 4000000;
		case 946: cost = 5800000;
		case 947: cost = 4200000;
		case 948: cost = 5400000;
		case 949: cost = 4800000;
		case 950: cost = 4400000;
		case 951: cost = 2600000;
		case 952: cost = 3800000;
		case 953: cost = 2200000;
		case 954: cost = 4600000;
		case 955: cost = 2400000;
		case 956: cost = 2900000;
		case 957: cost = 5200000;
		case 958: cost = 5400000;
		case 959: cost = 2200000;
		case 960,962: cost = 5400000;

		case 963: cost = 4400000;//магаз запчестей 2 стр
		case 964: cost = 5600000;
		case 965: cost = 2400000;
		case 966: cost = 5600000;
		case 967: cost = 3000000;
		case 968: cost = 4800000;
		case 969: cost = 4200000;
		case 970: cost = 2600000;
		case 971: cost = 5800000;
		case 972: cost = 3600000;
		case 973: cost = 4800000;
		case 974: cost = 5800000;
		case 975: cost = 4600000;
		case 976: cost = 5200000;
		case 977: cost = 4200000;
		case 978: cost = 4000000;
		case 979: cost = 4800000;
		case 980: cost = 3800000;
		case 981: cost = 5000000;
		case 982: cost = 3000000;
		case 983: cost = 3000000;
		case 984: cost = 3200000;
		case 985: cost = 2000000;
		case 986: cost = 4000000;
		case 987: cost = 4800000;
		case 988: cost = 4400000;
		case 999: cost = 2400000;
		case 1000: cost = 4600000;
		case 1001: cost = 3800000;
		case 1002: cost = 2600000;
		case 1003: cost = 3400000;//магаз запчестей 3 стр
		case 1004: cost = 5200000;
		case 1005: cost = 2000000;
		case 1006: cost = 5600000;
		case 1007: cost = 5800000;
		case 1008: cost = 5000000;
		case 1009: cost = 4600000;
		case 1010: cost = 4600000;
		case 1011: cost = 3000000;
		case 1012: cost = 2800000;
		case 1013: cost = 2400000;
		case 1014: cost = 3000000;
		case 1015: cost = 5200000;
		case 1016: cost = 5200000;
		case 1017: cost = 3600000;
		case 1018: cost = 2200000;
		case 1019: cost = 2800000;
		case 1020: cost = 5000000;
		case 1021: cost = 3600000;
		case 1022: cost = 2200000;
		case 1023: cost = 4400000;
		case 1024: cost = 2800000;
		case 1025: cost = 4600000;
		case 1026: cost = 2800000;
		case 1027: cost = 3800000;
		case 1028: cost = 2600000;
		case 1029: cost = 4800000;
		case 1030: cost = 2400000;
		case 1031: cost = 2600000;
		case 1032: cost = 3000000;
		case 1033: cost = 3400000;//магаз запчестей 4 стр
		case 1034: cost = 2200000;
		case 1035: cost = 5200000;
		case 1036: cost = 5200000;
		case 1037: cost = 4400000;
		case 1038: cost = 3800000;
		case 1039: cost = 2400000;
		case 1040: cost = 2600000;
		case 1041: cost = 5600000;
		case 1042: cost = 5600000;
		case 1043: cost = 3800000;
		case 1044: cost = 4600000;
		case 1045: cost = 3400000;
		case 1046: cost = 3600000;
		case 1047: cost = 4600000;
		case 1048: cost = 2800000;
		case 1049: cost = 4200000;
		case 1050: cost = 5200000;
		case 1051: cost = 3000000;
		case 1052: cost = 5800000;
		case 1053: cost = 3000000;
		case 1054: cost = 500000;
		case 1055: cost = 5800000;
		case 1056: cost = 2800000;
		case 1057: cost = 2200000;
		case 1058: cost = 3200000;
		case 1059: cost = 3400000;
		case 1060: cost = 4000000;
		case 1061: cost = 2200000;
		default: cost = 5000;
	}
	return cost;*/
	return 5000+id;
}
stock FindBizID(name[])
{
	new biz;
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(GetString(InfoBusinesses[BizInfo[i][bState]][BName], name))
     	{
	   		biz = i;
	  		break;
		}
	}
	return biz;
}
stock DialogSlet(playerid,type=0)
{
	if(!type)
	{
		new biz;
		str_2 = "{FFFFFF}";
		for(new i; i < OWNABLEBIZES; i++)
		{
			if(biz < 50)
			{
			    if(GetString(BizInfo[i][bOwner], "wipeHouse")) continue;
	           	if(BizInfo[i][bNalog] >= LIMITNALOG+6000 && GetString(BizInfo[i][bOwner], "The State")) continue;
	            if(BizInfo[i][bNalog] >= LIMITNALOG-16000 && BizInfo[i][bNalog] <= LIMITNALOG) biz++, f(str_2, sizeof(str_2), "%s\n%i. Биз\t\t{FFFFFF}Слетит через: {C9B931}%i{FFFFFF} Payday.", str_2, biz, ((LIMITNALOG-BizInfo[i][bNalog]) / GLS[3]) + 1);
				if(BizInfo[i][bNalog] >= LIMITNALOG && BizInfo[i][bNalog] <= LIMITNALOG+6000 && GetString(BizInfo[i][bOwner], "The State")) biz++, f(str_2, sizeof(str_2), "%s\n%i. Биз\t\tID: {C9B931}%i\t{FFFFFF}[{9ACD32}Слетел{FFFFFF}]\t{FFFFFF}Тип: {C9B931}%s{FFFFFF}", str_2, biz, i,InfoBusinesses[BizInfo[i][bState]][BName]);
			}
		}
		if(!biz) SPD(playerid, 0, 0, !"", !"{FFFFFF}На данный момент доступной информации нет.", !"Принять", !"");
		else f(str_2, sizeof(str_2), "%s\nЭта информация может быть{1EA3CC} ошибочной\n\n{FFFFFF}Используйте {1EA3CC}/findihouse ID{FFFFFF}, чтобы найти нужный вам дом. Стоимость {1EA3CC}100.000$.\n{fd5e53}ID {FFFFFF}дома отображается только у{fd5e53} слетевших{FFFFFF} домов!", str_2),SPD(playerid, 0, 0, !"", str_2, !"Принять", !"");
	}
	else
	{
		new house;
		str_2 = "{FFFFFF}";
		for(new i; i < OWNABLEHOUSES; i++)
		{
			if(house < 50)
			{
			    if(GetString(HouseInfo[i][hOwner], "wipeHouse")) continue;
	           	if(HouseInfo[i][hNalog] >= LIMITNALOG+4000 && GetString(HouseInfo[i][hOwner], "The State")) continue;
	            if(HouseInfo[i][hNalog] >= LIMITNALOG-16000 && HouseInfo[i][hNalog] <= LIMITNALOG) house++, f(str_2, sizeof(str_2), "%s\n%i. Дом\t\t{FFFFFF}Слетит через: {C9B931}%i{FFFFFF} Payday.", str_2, house, ((LIMITNALOG-HouseInfo[i][hNalog]) / GLS[2]) + 1);
				if(HouseInfo[i][hNalog] >= LIMITNALOG && HouseInfo[i][hNalog] <= LIMITNALOG+4000 && GetString(HouseInfo[i][hOwner], "The State")) house++, f(str_2, sizeof(str_2), "%s\n%i. Дом\t\tID: {C9B931}%i\t{FFFFFF}[{9ACD32}Слетел{FFFFFF}]", str_2, house, i);
			}
		}
		if(!house) SPD(playerid, 0, 0, !"", !"{FFFFFF}На данный момент доступной информации нет.", !"Принять", !"");
		else f(str_2, sizeof(str_2), "%s\nЭта информация может быть{1EA3CC} ошибочной\n\n{FFFFFF}Используйте {1EA3CC}/findihouse ID{FFFFFF}, чтобы найти нужный вам дом. Стоимость {1EA3CC}100.000$.\n{fd5e53}ID {FFFFFF}дома отображается только у{fd5e53} слетевших{FFFFFF} домов!", str_2),SPD(playerid, 0, 0, !"", str_2, !"Принять", !"");
	}
	return 1;
}
stock CheckAdmin(playerid, lvl = 1, dostup = -1) {
    if(!IsPlayerLogged[playerid]) return 1;
	if(PI[playerid][pAdmin] < lvl) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return callcmd::apanel(playerid);
	if(!CheckIsASuccesIP(playerid)) return 1;
	if(dostup != -1) if(!NameIsFullDostup(playerid, dostup)) return SCM(playerid,COLOR_RED,!"Вы не уполномочены делать это!");
	return 0;
}
stock CheckDostup(playerid, const cmdtest[], timeblock = 10) {
	if(GetPVarInt(playerid, cmdtest) > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя так часто использовать данную команду!");
	SetPVarInt(playerid, cmdtest, global_time + timeblock);
	return 0;
}
stock GetPlayerPeakHouse(playerid)
{
	new num;
	for(new i; i < OWNABLEHOUSES; i++) if(GetString(HouseInfo[i][hOwner],PN(playerid))) num++;
	new limit;
	if(PI[playerid][pImprovement][5] != false) limit += 5;
	if(PI[playerid][pVIP][0] == 6) limit += 5;
	limit += PI[playerid][pAddSlotHouse]; 
	if(num <= limit) return 1;
	return 0;
}
CMD:agl(playerid, params[])
{
	if(CheckAdmin(playerid, 4)) return 0;
	extract params -> new player:id, days; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /agl [id игрока] [days]");
	if(!IsPlayerConnectEx(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /agl [id игрока] [days]");
	if(days < 0 || days > 365) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /agl [id игрока] [days 1 - 365]");
	return GiveLicense(id, days);
}
CMD:scare(playerid, params[])
{
    extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /scare [id игрока]");
	return Scare(playerid, id);
}
stock CreateIspugTD(playerid)
{
	ispug_PTD[playerid][0] = CreatePlayerTextDraw(playerid, -227.6666, -158.0296, "Box"); // пусто
	PlayerTextDrawLetterSize(playerid, ispug_PTD[playerid][0], 0.0000, 90.0333);
	PlayerTextDrawTextSize(playerid, ispug_PTD[playerid][0], 1255.0000, 0.0000);
	PlayerTextDrawAlignment(playerid, ispug_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, ispug_PTD[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, ispug_PTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, ispug_PTD[playerid][0], 255);
	PlayerTextDrawBackgroundColor(playerid, ispug_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, ispug_PTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, ispug_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, ispug_PTD[playerid][0], 0);

	ispug_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 47.6666, -87.6665, ""); // пусто
	PlayerTextDrawTextSize(playerid, ispug_PTD[playerid][1], 523.0000, 565.0000);
	PlayerTextDrawAlignment(playerid, ispug_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, ispug_PTD[playerid][1], -1);
	PlayerTextDrawFont(playerid, ispug_PTD[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, ispug_PTD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, ispug_PTD[playerid][1], 0);
	PlayerTextDrawSetPreviewModel(playerid, ispug_PTD[playerid][1], 11704);
	PlayerTextDrawSetPreviewRot(playerid, ispug_PTD[playerid][1], 0.0000, 0.0000, 0.0000, 1.0000);
	return 1;
}
stock Scare(playerid, id)
{
    if(ItemsInfo[AksSlot[playerid][1]][ItemID] != 11704) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не одета Голова Дъявола!");
    if(ProxDetectorS(3.0, playerid, id, 1))
	{
		//if(id == playerid) return SCM(playerid,COLOR_LIGHTRED,!"Нельзя пугать самого себя");
 		if(GetPVarInt(playerid, !"ispug") > global_time) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Изпользувать даную команду, можно раз в 30 секунд!");
        CreateIspugTD(id);
		SetPVarInt(playerid, !"ispug", global_time + 30);
        SetPlayerChatBubblef(playerid, COLOR_PURPLE, 15.0, 1000, "%s[%i] испугал %s[%i]", PN(playerid),playerid, PN(id), id);
		PlayAudioStreamForPlayer(id, "http://"MUSICSITE"/bone-country/halloween_m2.mp3");
		SetTimerEx("ScareClose", 3000, false, "d", id);
		for(new i; i < 2; i++) PlayerTextDrawShow(id, ispug_PTD[id][i]);
	}
	return 1;
}
public: ScareClose(playerid) for(new i; i < 2; i++) DestroyPlayerTD(playerid, ispug_PTD[playerid][i]);
stock CheckVipPlayers(playerid)
{
    new vipmax;
	foreach_player(i)
	{
		if(PI[i][pVIP][0] == 7 && IsPlayerLogged[i] != false)
		{
			SCMf(playerid, COLOR_GREY, "Владельцы [ADD VIP]: %s[%i] уровень %i", str_1, PN(i), i, PI[i][pLevel]);
			vipmax++;
		}
	}
	return SCMf(playerid, 0xdf994eFF, "Всего %i человек.", vipmax);
}
stock UpdateTextCorona(connect = 0)
{
    if(connect != 0) CoronaLabel = CreateDynamic3DTextLabel(!"", 0xFFFFFFFF, 1167.1892, -1319.5392, 1020.9438, 13.0);
    UpdateDynamic3DTextLabelTextf(CoronaLabel, 0xFFFFFFFF, "Объявление от Министерства здравохранения:\n\n\
    Коронавирусом заражено уже: {FF4646}%d{FFFFFF} человек (онлайн)\n\
    Шанс заразиться есть у каждого! Избегайте \n\
    людных мест и общения с людьми которые кашляют!\n\
    Лечения еще не нашли! Для обеспечения безопасности\n\
    рекомендуем приобрести маску у людей на Центральном рынке,\n\
    {FF4646} В случае наличия симптомов кашля, срочно ищите антибиотики!", Corona);
    return 1;
}
public: OfflineMembers(playerid)
{
    //AC_FIX_DIALOG_F(playerid, 0);
    new name[MAX_PLAYER_NAME-2], update;
    str_q = "{FFFFFF}Ник\tРанг\tВыговоры\n";
    if(cache_num_rows() > 0)
    {
        for(new i; i < cache_num_rows(); i++)
        {
            cache_get_string(i, !"NickName", name);
            new rang, vigor;
			cache_get_int(i, !"Rank", rang);
            cache_get_int(i, !"FWarns", vigor);
            foreach(new j : Player)
            {
                if(!strcmp(PlayerName[j], name)) continue;
                str_1[0] = EOS, str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s\t%i\t%i\n", name, rang, vigor);
                str_2[0] = EOS, strcat(str_2, str_1);
                update++;
            }
        }
    }
    return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, str_q, !update ? !"{FFFFFF}Ничего не найдено" : str_2, !"Закрыть", !"");
}
enum infopresent
{
	itemmodel,
	itempresent_unic[49],
	itempresent_default[10]
};
static const presentbox[][infopresent] = {
	{1087, {1218,1214,1308}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //yellow
	{1088, {1216,1205,1217}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //blue
	{1089, {1853,1206,1215}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //red
	{1513, {2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2252,2253}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //custom acs
	{1514, {1870,1871,1872,1233,4957,1981,1986,1987,2007}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //laretz super car
	{1515, {1243,1308,1887,1890,1892,1871,1940,1935,1931,1937,1933,1934,1957,1966,1975,1989,1990,1993}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //laretz premia
	{1516, {1245,1881,1882,1902}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //super car
	{1517, {1919,1920,1921,1922,1923,1925,1926,1873}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //nostalgy
	{1518, {1515,1516}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //tainik ilona ++
	{1519, {1234,1235,1236,1237}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //super moto box
	{1644, {4954,4952,4950,4923}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}}, //laretz сoncept
	{1645, {1927,1928,1929,1930,1936,1938,1939,1943}, {5144, 5145, 313,314,315,359,366,5152,1167,2721}} //oligarh
};
stock SearchPlayerBox(itemid)
{
	for(new i; i < sizeof(presentbox); i++) if(itemid == presentbox[i][itemmodel]) return i;
	return -1;
}
stock UsePlayerBox(playerid, iditem)
{
	//return SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF} Сундук '%s', будет доступен после доступен после 10:00, 16 января 2023 года!", ItemsInfo[iditem][ItemName]);
	new slotid = SearchPlayerBox(iditem);
	if(slotid == -1) return 1;
	if(random(1000) > 995)
	{
		new limit;
		for(new i; i < 45; i++)
		{
			if(!presentbox[slotid][itempresent_unic][i]) 
			{
				limit = i;
				break;
			}
		}
		player_Global_Int[playerid][0] = presentbox[slotid][itempresent_unic][random(limit+1)], player_Global_Int[playerid][1] = 0;
	}
	else player_Global_Int[playerid][0] = presentbox[slotid][itempresent_default][random(10)], player_Global_Int[playerid][1] = 1;

	InvAdd(playerid, iditem, -1);
	static count;
	if(!player_Global_Int[playerid][1]) InvAdd(playerid, player_Global_Int[playerid][0], 1);
	else
	{
		if(player_Global_Int[playerid][0] == 5144) count = randomEx(1000000, 20000000);
		else if(player_Global_Int[playerid][0] == 5145) count = randomEx(5, 20);
		else if(player_Global_Int[playerid][0] == 5152)
		{
			player_Global_Int[playerid][0] = Iter_Random(itemSkin);
			count = 1;
		}
		else count = 1;

		InvAdd(playerid, player_Global_Int[playerid][0], count);
	}
	switch(player_Global_Int[playerid][0])
	{
		case 5144,5145,5152:
		{
			SCM(playerid, COLOR_YELLOW, (str_f("Вы использовали сундук {cccccc}%s{FFFF00}! Ваш приз: %s (Количество: %iшт.)", \
			ItemsInfo[presentbox[slotid][itemmodel]][ItemName], GetItemInfo(playerid, player_Global_Int[playerid][0]), count)));
			
			if(!player_Global_Int[playerid][1])
			{
				SCMAll(COLOR_GREEN, (str_f("%s испытал удачу при открытии \'%s\' и выиграл: %s", \
				PN(playerid), ItemsInfo[presentbox[slotid][itemmodel]][ItemName], ItemsInfo[player_Global_Int[playerid][0]][ItemName])));
			}
		}
		default:
		{
			SCM(playerid, COLOR_YELLOW, (str_f("Вы использовали сундук {cccccc}%s{FFFF00}! Ваш приз: %s (Количество: %iшт.)", \
			ItemsInfo[presentbox[slotid][itemmodel]][ItemName], ItemsInfo[player_Global_Int[playerid][0]][ItemName], count)));
			
			if(!player_Global_Int[playerid][1])
			{
				SCMAll(COLOR_GREEN, (str_f("%s испытал удачу при открытии \'%s\' и выиграл: %s", \
				PN(playerid), ItemsInfo[presentbox[slotid][itemmodel]][ItemName], ItemsInfo[player_Global_Int[playerid][0]][ItemName])));
			}
		}
	}
	return 1;
}
stock ShowMeria(playerid)
{
	if(MeriaOpen[playerid]) return 0;
	MeriaOpen[playerid] = true;
	HideTextDraws(playerid);
	#include modules/TEXTDRAWS/meria
   	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	for(new i; i < 36; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	return SCM(playerid, COLOR_LIGHTRED, !"Чтобы закрыть, используйте: {FFFFFF}'ESC'");
}
stock HideMeria(playerid)
{
    if(!MeriaOpen[playerid]) return 0;
    for(new i; i < 36; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
    CancelSelectTextDraw(playerid);
    MeriaOpen[playerid] = false;
    return 1;
}
//====================================[ SYSTEM FAMILY ]=============================//
stock ChangeLanguageFam(playerid, td)
{
    switch(td)
    {
        case 0:
        {
			if(PI[playerid][pInvLang])
			{
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][89], FixText("МЕНЮ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][13], FixText("УПРАВЛЕНИЕ~n~СЕМЬЕЙ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][12], FixText("УПРАВЛЕНИЕ~n~АЛЬЯНСОМ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][11], FixText("ИНФОРМАЦИЯ~n~О СЕМЬЕ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][10], FixText("ЧЛЕНЫ СЕМЬИ~n~ОНЛАЙН"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][9], FixText("ЧЛЕНЫ СЕМЬИ~n~ОФФЛАЙН"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][8], FixText("РЕЙТИНГ~n~ПО КВЕСТАМ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], FixText("ПОМОЩЬ~n~КОМАНДЫ СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][6], FixText("СЕМЕЙНАЯ~n~КВАРТИРА"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][5], FixText("ГАЛОЧКА"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], FixText("БРЕНД"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], FixText("ПОКИНУТЬ~n~СЕМЬЮ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][2], FixText("ВОЙНА~n~ЗА ТЕРРИТОРИЮ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][1], FixText("СЕМЕЙНЫЙ~n~МАГАЗИН"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], FixText("ВЫХОД"));
			}
			else
			{
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][89], "MENU");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][13], "FAMILY~n~MANAGEMENT");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][12], "ALLIANCE~n~MANAGEMENT");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][11], "INFORMATION~n~ABOUT THE FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][10], "FAMILY MEMBERS~n~ONLINE");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][9], "FAMILY MEMBERS~n~OFFINE");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][8], "RATING~n~(BY QUEST)");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], "HELP~n~FAMILY TYAM");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][6], "FAMILY~n~APARTMENT");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][5], "CHECK MARK");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], "BRAND");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], "LEAVE~n~FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][2], "WAR FOR~n~TERRITORY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][1], "FAMILY~n~SHOP");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], "CLOSE");
			}
        }
        case 1:
        {
			if(PI[playerid][pInvLang])
			{
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], FixText("ПЕРЕДАТЬ ПРАВА~n~ЛИДЕРА"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][1], FixText("ВЫДАТЬ ПРЕМИЮ~n~СЕМ. МОНЕТАМИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][2], FixText("НАСТРОЙКА~n~РАНГОВ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], FixText("ОПИСАНИЕ~n~В БЮДЖЕТ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], FixText("УСТАНОВИТЬ~n~СПАВН ДОМА"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][5], FixText("СЛОГАН~n~СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][6], FixText("НАЗВАНИЕ~n~СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], FixText("DISCORD~n~СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][8], FixText("ЗАМЕСТИТЕЛЬ 3"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][9], FixText("ИЗМЕНИТЬ~n~ТИП СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][10], FixText("ОПИСАНИЕ И~n~ОБЪЯВЛЕНИЕ СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][11], FixText("ЦВЕТ~n~СЕМЬИ/РАЦИЯ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][12], FixText("ЗАМЕСТИТЕЛЬ 2"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][13], FixText("ЗАМЕСТИТЕЛЬ 1"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][14], FixText("ВЫГНАТЬ~n~ИЗ СЕМЬИ"));
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][15], FixText("ПРИГЛАСИТЬ~n~В СЕМЬЮ"));
			}
			else
			{
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], "TRANSFER THE RIGHTS OF~n~LEADER");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][1], "GIVE SALARY~n~FAMILY. MONETS");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][2], "SETTING~n~RANKS");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][3], "WRITING~n~INTO BUDGET");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][4], "SET~n~HOUSE SAVING");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][5], "SLOGAN~n~FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][6], "NAME~n~FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], "DISCORD~n~FAMILIES");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][8], "DEPUTY 3");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][9], "CHANGE~n~FAMILY TYPE");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][10], "DESCRIPTION AND~n~ADS FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][11], "COLOR~n~FAMILY/RADIO");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][12], "DEPUTY 2");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][13], "DEPUTY 1");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][14], "REMOVE~n~FROM FAMILY");
				PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][15], "INVITE~n~TO THE FAMILY");
			}
        }
    }
    return true;
}
stock UpdateColorFamMenu(playerid)
{
    new bool:color;
    if(IsPlayerAccessFamily(playerid) > 0) color = false;
    else color = true;
    player_Global_Int[playerid][0] = 88, player_Global_Int[playerid][1] = 87, player_Global_Int[playerid][2] = 84, player_Global_Int[playerid][3] = 77;
    for(new i; i < 4; i++)
    {
        if(color) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][player_Global_Int[playerid][i]], 0x323232FF);
        else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][player_Global_Int[playerid][i]], 0x915C4AFF);
    }
    // галка бренд дом
    if(FamilyInfo[pFamilyID(playerid)][famHouse]) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][81], 0x915C4AFF);
    else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][81], 0x323232FF);
    if(FamilyInfo[pFamilyID(playerid)][famGalka]) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][80], 0x915C4AFF);
    else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][80], 0x323232FF);
    if(FamilyInfo[pFamilyID(playerid)][famBrand]) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][79], 0x915C4AFF);
    else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][79], 0x323232FF);

    if(IsPlayerAccessFamily(playerid) == 2) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][78], 0x323232FF);
    else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][78], 0x915C4AFF);
    return 1;
}
stock ShowFamily(playerid, type = 0)
{
    if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    SelectTextDraw(playerid, 0xCD5C5CFF);
    HideTextDraws(playerid);
	switch(type)
	{
	    case 0: //menu
	    {
			if(FamMenu1[playerid])
			{
			   	FamMenu1[playerid] = false;
		   		for(new i; i < 93; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			}
			FamMenu1[playerid] = true;
		    #include modules/TEXTDRAWS/family/menu
			ChangeLanguageFam(playerid, 0);
		    UpdateColorFamMenu(playerid);
			for(new i; i < 93; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	    }
	    case 1: //leaders panel
		{
      		if(!IsPlayerAccessFamily(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
   			if(FamMenu1[playerid])
   			{
			   	FamMenu1[playerid] = false;
		   		for(new i; i < 93; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			}
			if(FamMenu2[playerid]) return 0;
			FamMenu2[playerid] = true;
			#include modules/TEXTDRAWS/family/lmenu
			ChangeLanguageFam(playerid, 1);
		    for(new i; i < 83; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
		case 2: //shop
		{
   			if(FamMenu1[playerid])
   			{
			   	FamMenu1[playerid] = false;
		   		for(new i; i < 93; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			}
			if(FamMenu3[playerid]) return 0;
			FamMenu3[playerid] = true;
			#include modules/TEXTDRAWS/family/shop
			for(new i; i < 55; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	return 1;
}
stock HideFamily(playerid, type = 0)
{
	CancelSelectTextDraw(playerid);
	ShowLogo(playerid);
	switch(type)
	{
	    case 0: //menu
	    {
			if(!FamMenu1[playerid]) return 0;
			FamMenu1[playerid] = false;
			for(new i; i < 93; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
	    case 1: //leaders
	    {
			if(!FamMenu2[playerid]) return 0;
			FamMenu2[playerid] = false;
	 		for(new i; i < 83; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
		case 2: //shop
		{
		    if(!FamMenu3[playerid]) return 0;
		   	FamMenu3[playerid] = false;
	 		for(new i; i < 55; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
		case 3:
		{
			if(!FamZones[playerid]) return 0;
			FamZones[playerid] = false;
			for(new i; i < 156; i++) 
			{
				if(i < 17) DestroyPlayerTD(playerid, Invent_Trade[playerid][i]);
				DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			}
		}
	}
	return 1;
}
//shar
stock CreateBalloon(playerid, itemid)
{
    if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return SCM(playerid,COLOR_RED, !"[Ошибка]{F0F0F0} Здесь нельзя использовать этот предмет!");
	if(BalloonObject[playerid] != -1 || BalloonVehicle[playerid] != INVALID_VEHICLE_ID) return SCM(playerid, COLOR_RED, !"[Ошибка]{F0F0F0} Вы уже используете этот предмет!");
	GetPlayerPos(playerid, BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2]);
	switch(itemid)
	{
		case 642..648,3105..3111:
		{
			if(itemid >= 3105 && IsPlayerLauncher(playerid) == -1) return SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Данный пункт меню доступен только с лаунчера Limonchyk Games!");
			str_2 = "[Информация] {F0F0F0}Вы начали развертывание воздушного шара";
			fmt(str_1, "{3CB371}Чтобы собрать воздушный шар\nНажмите H\n\n{F0F0F0}[Владелец %s]",PN(playerid));
			BalloonObject[playerid] = CreateDynamicObject(ItemsInfo[itemid][ItemID], BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2]-1, 0.0, 0.0, 0.0);
			SetDynamicObjectMaterial(BalloonObject[playerid], 0, 18787, "matramps", "metalflooring", 0);
			SetDynamicObjectMaterial(BalloonObject[playerid], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
			SetDynamicObjectMaterial(BalloonObject[playerid], 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
			SetDynamicObjectMaterial(BalloonObject[playerid], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
		}
		case 1306:
		{
			BalloonObject[playerid] = CreateDynamicObject(ItemsInfo[itemid][ItemID], BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2]-1, 0.0, 0.0, 0.0);
			fmt(str_1, "{3CB371}Чтобы собрать дельтаплан\nНажмите H\n\n{F0F0F0}[Владелец %s]",PN(playerid));
			str_2 = "[Информация] {F0F0F0}Вы начали развертывание дельтаплана";
		}
		case 1307:
		{
			BalloonObject[playerid] = CreateDynamicObject(ItemsInfo[itemid][ItemID], BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2]-1, 0.0, 0.0, 0.0);
			fmt(str_1, "{3CB371}Чтобы собрать велосипед\nНажмите H\n\n{F0F0F0}[Владелец %s]",PN(playerid));
			str_2 = "[Информация] {F0F0F0}Вы начали развертывание велосипеда";
		}
	}
	SCM(playerid, COLOR_VALIK, str_2);
	BalloonLabelText[playerid] = CreateDynamic3DTextLabel(str_1, -1, BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2], 300.0);
	if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1;
	BalloonSphere[playerid] = CreateDynamicSphere(BalloonObjectPos[playerid][0], BalloonObjectPos[playerid][1], BalloonObjectPos[playerid][2], 4.0, 0, 0, playerid);
	PI[playerid][pAcsCellLock][ItemsInfo[itemid][ItemView]-1] = 2;
	UpdateSlotAcs(playerid, ItemsInfo[itemid][ItemView]-1);
	RemovePlayerAttachedObject(playerid, ItemsInfo[itemid][ItemView]-1);
	PlayerItemBalloon[playerid] = itemid;
	Streamer_Update(playerid);
    return 1;
}
#include modules/TEXTDRAWS/balloon
stock DestroyBalloon(playerid)
{
    if(BalloonVehicle[playerid] != INVALID_VEHICLE_ID)
    {
        new vehicleid = BalloonVehicle[playerid];
        BalloonSpawned[vehicleid] = false;
        for(new j; j < 6; j++) if(BalloonObjectVehicle[vehicleid][j] != -1) DestroyDynamicObject(BalloonObjectVehicle[vehicleid][j]), BalloonObjectVehicle[vehicleid][j] = -1;

        DestroyDynamic3DTextLabel(BalloonLabelTextVehicle[vehicleid]);
        if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1;
        destroyvehicle_(vehicleid);
        PI[playerid][pAcsCellLock][ItemsInfo[PlayerItemBalloon[playerid]][ItemView]] = 0;
		UpdateSlotAcs(playerid, ItemsInfo[PlayerItemBalloon[playerid]][ItemView]);
        BalloonVehicle[playerid] = INVALID_VEHICLE_ID;
    }
    if(BalloonObject[playerid] != -1)
    {
        DestroyDynamicObject(BalloonObject[playerid]), DestroyDynamic3DTextLabel(BalloonLabelText[playerid]);
        ProgressBalloon[playerid] = 0;
        BalloonObject[playerid] = -1;
        ProgressBalloonTD[playerid][0] = ProgressBalloonTD[playerid][1] = 0.0;
        BalloonObjectPos[playerid][0] = BalloonObjectPos[playerid][1] = BalloonObjectPos[playerid][2] = 0.0;
        if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1;
        PI[playerid][pAcsCellLock][ItemsInfo[PlayerItemBalloon[playerid]][ItemView]] = 0;
		UpdateSlotAcs(playerid, ItemsInfo[PlayerItemBalloon[playerid]][ItemView]);
    }
    if(BalloonTimer[playerid] != -1) KillTimer(BalloonTimer[playerid]);
    if(!PI[playerid][pAcsCellLock][ItemsInfo[PlayerItemBalloon[playerid]][ItemView]]) UpdateSlotAcs(playerid, ItemsInfo[PlayerItemBalloon[playerid]][ItemView]);
    TimetoReturn[playerid] = 0;
    return 1;
}
stock DisableShar(playerid)
{
	for(new i; i < 10; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	ProgressBalloon[playerid] = 0;
	TogglePlayerControllable(playerid, true);
	KillTimer(BalloonTimer[playerid]);
	BalloonTimer[playerid] = -1;
}
public: BalloonTime(playerid)
{
    ProgressBalloonTD[playerid][1] -= 1.6;
    ProgressBalloonTD[playerid][0] -= 1.6;
    new Float:progress = ProgressBalloonTD[playerid][0] / 1.6;

    PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][3], "%i%%_TO_COMPILE", floatround(progress, floatround_round));

    if(IsPlayerTextDrawVisible(playerid, GlobalTDPlayer[playerid][9]))
    {
    	PlayerTextDrawSetPosEx(playerid, GlobalTDPlayer[playerid][9], ProgressBalloonTD[playerid][1], 185.0500);
    	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][9]);
    }
    PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][8], ProgressBalloonTD[playerid][0], 22.9299);
    PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][8]);
    switch(floatround(progress, floatround_round))
	{
		case -50..0: DisableShar(playerid);
		case 1..23: SetDynamicObjectMaterial(BalloonObject[playerid], 0, 18787, "matramps", "metalflooring", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
		case 24..35: SetDynamicObjectMaterial(BalloonObject[playerid], 0, 19332, "balloon_basket01", "balloon_texts", 0), SetDynamicObjectMaterial(BalloonObject[playerid], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
		case 45..55: SetDynamicObjectMaterial(BalloonObject[playerid], 0, 19332, "balloon_basket01", "balloon_texts", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 1, 19332, "balloon_poles01", "balloon_texts", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
		case 65..80: SetDynamicObjectMaterial(BalloonObject[playerid], 0, 19332, "balloon_basket01", "balloon_texts", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 1, 19332, "balloon_poles01", "balloon_texts", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 2, 19332, "basket_flamers01", "balloon_texts", 0),SetDynamicObjectMaterial(BalloonObject[playerid], 3, 19332, "balloon01", "balloon_texts", 0);
		case 100..150:
		{
			DisableShar(playerid);
			new Float:X, Float:Y, Float:Z, Float:A, vehicle;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
			switch(PlayerItemBalloon[playerid])
			{
				case 642..648,3105..3111: vehicle = 487;
				case 1306: vehicle = 4800;
				case 1307: vehicle = 510;
			}
			DestroyDynamic3DTextLabel(BalloonLabelText[playerid]);
			ProgressBalloon[playerid] = ProgressBalloon[playerid] = 0;
			if(BalloonObject[playerid] != -1) DestroyDynamicObject(BalloonObject[playerid]), BalloonObject[playerid] = -1;
			BalloonObjectPos[playerid][0] = BalloonObjectPos[playerid][1] = BalloonObjectPos[playerid][2] = ProgressBalloonTD[playerid][0] = ProgressBalloonTD[playerid][1] = 0.0;
			if(BalloonSphere[playerid] != -1) DestroyDynamicArea(BalloonSphere[playerid]), BalloonSphere[playerid] = -1, TimetoReturn[playerid] = 0;
			BalloonVehicle[playerid] = J_AddStaticVehicleEx(vehicle, X, Y, Z, A, -1, -1, -1);
			switch(vehicle)
			{
				case 487:
				{
					LinkVehicleToInterior(BalloonVehicle[playerid], 100);
					GameTextForPlayer(playerid, !"Vozdushnyy shar",3000,1);
					BalloonLabelTextVehicle[BalloonVehicle[playerid]] = CreateDynamic3DTextLabel(!"{FF6347}[ Воздушный Шар ]\n\n{F5CC02} Для управления нажмите 'F'\nЧтобы занять пассажирское место нажмите 'G'\n{CD5C5C}Управлене доступно только владельцу!", -1, 0.0, 0.0, 0.0, 10.0,INVALID_PLAYER_ID, BalloonVehicle[playerid]);
					//AttachDynamic3DTextLabelToPlayer(BalloonLabelTextVehicle[BalloonVehicle[playerid]], BalloonVehicle[playerid], 0.0, 0.779000, 1.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][0] = CreateDynamicObject(19131, -0.021178, -0.598135, 1.562280, 0.0, 0.0, 90.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 2
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][0], 1, 1560, "7_11_door", "CJ_CHROME2", 0);
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][0], 0, 1414, "break_street1", "CJ_TV_SCREEN", 0);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][0], BalloonVehicle[playerid], -0.021178, 0.180865, 0.562280, 0.0, 0.0, 90.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][1] = CreateDynamicObject(2923, 0.0, 0.0, 0.137820, 0.0, 0.0, 0.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][1], 0, 15046, "svcunthoose", "mplid02", 0xFFFFFFFF);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][1], BalloonVehicle[playerid], 0.0, 0.779000, -0.862180, 0.0, 0.0, 0.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][2] = CreateDynamicObject(ItemsInfo[AksSlot[playerid][4]][ItemID], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][2], 2, 8618, "ceasersign", "ceaserspillar01_128", 0);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][2], BalloonVehicle[playerid], 0.0, 0.779000, -1.0, 0.0, 0.0, 0.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][3] = CreateDynamicObject(19131, 0.588821, -0.008135, 1.562280, 0.0, 0.0, 0.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 2
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][3], 1, 1560, "7_11_door", "CJ_CHROME2", 0);
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][3], 0, 1414, "break_street1", "CJ_TV_SCREEN", 0);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][3], BalloonVehicle[playerid], 0.588821, 0.770865, 0.562280, 0.0, 0.0, 0.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][4] = CreateDynamicObject(19131, -0.581178, -0.008135, 1.562280, 0.0, 0.0, 0.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 2
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][4], 1, 1560, "7_11_door", "CJ_CHROME2", 0);
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][4], 0, 1414, "break_street1", "CJ_TV_SCREEN", 0);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][4], BalloonVehicle[playerid], -0.581178, 0.770865, 0.562280, 0.0, 0.0, 0.0);
					BalloonObjectVehicle[BalloonVehicle[playerid]][5] = CreateDynamicObject(19131, -0.021178, 0.621863, 1.562280, 0.0, 0.0, 90.0, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 2
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][5], 1, 1560, "7_11_door", "CJ_CHROME2", 0);
					SetDynamicObjectMaterial(BalloonObjectVehicle[BalloonVehicle[playerid]][5], 0, 1414, "break_street1", "CJ_TV_SCREEN", 0);
					AttachDynamicObjectToVehicle(BalloonObjectVehicle[BalloonVehicle[playerid]][5], BalloonVehicle[playerid], -0.021178, 1.400863, 0.562280, 0.0, 0.0, 90.0);
				}
				case 4800: BalloonLabelTextVehicle[BalloonVehicle[playerid]] = CreateDynamic3DTextLabel(!"{FF6347}[ Дельтаплан ]\n\n{F5CC02} Для управления нажмите 'F'\nЧтобы занять пассажирское место нажмите 'G'\n{CD5C5C}Управлене доступно только владельцу!", -1, 0.0, 0.0, 0.0, 10.0,INVALID_PLAYER_ID, BalloonVehicle[playerid]);
				case 510: BalloonLabelTextVehicle[BalloonVehicle[playerid]] = CreateDynamic3DTextLabel(!"{FF6347}[ Велосипед ]\n\n{F5CC02} Для управления нажмите 'F'\nЧтобы занять пассажирское место нажмите 'G'\n{CD5C5C}Управлене доступно только владельцу!", -1, 0.0, 0.0, 0.0, 10.0,INVALID_PLAYER_ID, BalloonVehicle[playerid]);
			}
			SetEngineStatus(BalloonVehicle[playerid], true, playerid);
			PutPlayerInVehicle(playerid, BalloonVehicle[playerid], 0);
			BalloonSpawned[BalloonVehicle[playerid]] = true;
			Streamer_Update(playerid);
		}
	}
    return 1;
}
//============================[ FIX INVALID VEHICLE ]======================//
stock VALID_VEHICLE_ID(vehicleid) {
	foreach_player(i) {
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(GetVehicleModel(vehicleid) > 611)
	{
		if(IsPlayerLauncher(forplayerid) == -1) Streamer_AppendArrayData(STREAMER_TYPE_3D_TEXT_LABEL, v_Vehicle_LabelID[vehicleid], E_STREAMER_PLAYER_ID, forplayerid);
		else Streamer_RemoveArrayData(STREAMER_TYPE_3D_TEXT_LABEL, v_Vehicle_LabelID[vehicleid], E_STREAMER_PLAYER_ID, forplayerid);
	}
	return 1;
}
public OnPlayerStreamIn(playerid, forplayerid)
{
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		if(PI[forplayerid][pAdmin] > 0)
		{
			new BitStream:bs2 = BS_New();
			BS_WriteValue(bs2, PR_UINT8, 220);
			BS_WriteValue(bs2, PR_UINT8, 120); //packet id
			BS_WriteValue(bs2, PR_UINT16, forplayerid); //vehicleid 
			BS_WriteValue(bs2, PR_UINT8, 133); //16
			BS_WriteValue(bs2, PR_UINT8, 52); //142
			BS_WriteValue(bs2, PR_UINT8, 177); //215
			BS_WriteValue(bs2, PR_UINT8, 183); //215
			BS_WriteValue(bs2, PR_UINT8, 183); //215
			BS_WriteValue(bs2, PR_UINT8, 47); //215
			BS_WriteValue(bs2, PR_UINT8, 176); //215
			BS_WriteValue(bs2, PR_UINT8, 178); //215
			BS_WriteValue(bs2, PR_UINT8, 54); //215
			BS_WriteValue(bs2, PR_UINT8, 180); //215
			BS_WriteValue(bs2, PR_UINT8, 183); //215
			PR_SendPacket(bs2, playerid);
		}
		else if(PI[forplayerid][pVIP][1] == forever)
		{
			new BitStream:bs2 = BS_New();
			BS_WriteValue(bs2, PR_UINT8, 220);
			BS_WriteValue(bs2, PR_UINT8, 120); //packet id
			BS_WriteValue(bs2, PR_UINT8, forplayerid); //vehicleid 
			BS_WriteValue(bs2, PR_UINT8, 132); //16
			BS_WriteValue(bs2, PR_UINT8, 52); //142
			BS_WriteValue(bs2, PR_UINT8, 177); //215
			BS_WriteValue(bs2, PR_UINT8, 183); //215
			BS_WriteValue(bs2, PR_UINT8, 183); //215
			BS_WriteValue(bs2, PR_UINT8, 47); //215
			BS_WriteValue(bs2, PR_UINT8, 187); //215
			BS_WriteValue(bs2, PR_UINT8, 52); //215
			BS_WriteValue(bs2, PR_UINT8, 184); //215
			PR_SendPacket(bs2, playerid);
		}
	}
    return 1;
}
//===================================[ CHECKOFF ]==============================//
CMD:checkoff(playerid,params[]) {
	if(CheckAdmin(playerid, 4)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /checkoff [nickname]");
    if(GetNameID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Используй: /check [id]");
	str_q[0] = EOS,f(str_q, sizeof(str_q), "SELECT `ID`,`Level`,`VirMoney`,`Money`, `TelNum`,`Bank`,`Deposit`,`Warns`,`VIP`,`Admin` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
  	mysql_tquery(mysql, str_q, "CheckOFF", "is", playerid, name);
	return 1;
}
public: CheckOFF(playerid, name[])
{
	if(!cache_num_rows()) return SCM(playerid, -1, !"Аккаунт не найден");
	else
	{
	    new ID,LEVEL,VIRMONEY,MONEY,TELNUM,BANK,DEPOSIT,WARNS,ADMIN;
	    cache_get_int(0, !"ID", ID);
	    cache_get_int(0, !"Level", LEVEL);
	    cache_get_int(0, !"VirMoney", VIRMONEY);
	    cache_get_int(0, !"Money", MONEY);
	    cache_get_int(0, !"TelNum", TELNUM);
	    BANK = 0;//cache_get_int(0, !"Bank", BANK);
	   	cache_get_int(0, !"Deposit", DEPOSIT);
	    cache_get_int(0, !"Warns", WARNS);
	    cache_get_int(0, !"Admin", ADMIN);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "\
		{FFFFFF}ID в базе данных: {B83434}%i\n\
		{FFFFFF}Ник: {B83434}%s\n\
		{FFFFFF}Уровень: {B83434}%i\n\
		{FFFFFF}Донат счет: {B83434}%i\n\
		{FFFFFF}Деньги: {B83434}$%i\n\
		{FFFFFF}Номер телефона: {B83434}%i\n\
		{FFFFFF}Деньги в банке: {B83434}$%i\n\
		{FFFFFF}Состояние личного счета: {B83434}$0\n\
		{FFFFFF}Деньги на депозите: {B83434}$%i\n\
		{FFFFFF}Предупреждения: {B83434}%i\n\
		{FFFFFF}Статус ADMIN: {B83434}%i\n\n\
		{FFFFFF}Дома: \n{B83434}",ID,name,LEVEL,VIRMONEY,MONEY,TELNUM,BANK,DEPOSIT,WARNS, ADMIN);
  		for(new i; i < OWNABLEHOUSES; i++)
	    {
	        if(!GetString(HouseInfo[i][hOwner], name)) continue;
	        f(str_1, sizeof(str_1), "%s\n{FFFFFF}- Номер Дома: {B83434}[%i]{FFFFFF}", str_1, i);
	    }
	    strcat(str_1, !"\n{FFFFFF}Бизнесы:\n");
	    for(new i; i < OWNABLEBIZES; i++)
	    {
	        if(!GetString(BizInfo[i][bOwner], name)) continue;
	        f(str_1, sizeof(str_1), "%s\n{FFFFFF}- Номер Бизнеса: {B83434}[%i]{FFFFFF}", str_1, i);
	    }
 	 	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Основная статистика", str_1, !"Закрыть", !"");
	}
	return 1;
}
CMD:getip(playerid, params[])
{
	if(CheckAdmin(playerid, 3)) return 1;
    extract params -> new player:targetid; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Введите: /getip [id]");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    if(NameIsFullDostup(targetid,3) || PI[targetid][pGuardMode]) return 1;
	return SCMf(playerid, 0x6ab1ffaa, "Niсk [%s]  R-IP [%s]  IP | A-IP [{FF6A78}%s | %s{6ab1ff}]",PN(targetid), PlayerRegIP[targetid], PlayerIp[targetid], PlayerRegIP[targetid]);
}
stock ShowCraft(playerid)
{
	if(CraftOpened[playerid]) return false;
	#include modules/TEXTDRAWS/craft
 	CraftTabSelect[playerid] = 1;
 	CraftItemSelect[playerid] = 0;
 	CraftPageSelect[playerid] = 1;
 	CraftOpened[playerid] = true;
 	CraftAmount[playerid] = 1;
	CraftOpen(playerid);
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return 1;
}
stock ShowCraftSelectColor(playerid)
{
	if(CraftColorOpened[playerid]) return false;
	#include modules/TEXTDRAWS/CraftColor
	for(new i ; i < 11; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i+59]);
	PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], "");
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][0]);
	return CraftColorOpened[playerid] = true;
}
stock HideCraftSelectColor(playerid, dell = 0, color = 0)
{
	if(dell)
	{
		Invent_CraftColorBoxCreated[playerid] = false;
		DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][70]);
		if(color != 1) CraftSelectColor[playerid] = 0;
	}
	if(!CraftColorOpened[playerid]) return false;
	for(new i ; i < 11; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i+59]);
	PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][0], "SELECT COLOR");
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][0]);
	return CraftColorOpened[playerid] = false;
}
stock CreateCraftBoxTextDraw(playerid)
{
	if(Invent_CraftColorBoxCreated[playerid]) return 0;
	GlobalTDPlayer[playerid][70] = CreatePlayerTextDraw(playerid, 289.174988, 203.850006, "usebox");
	PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][70], 0.000000, 0.185949);
	PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][70], 282.390625, 0.000000);
	PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][70], 1);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][70], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][70], 1);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][70], CraftSelectColor[playerid]);
	PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][70], 2);
	PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][70], 0);
	PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][70], 0x000000FF);
	PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][70], 0);
	PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][70], 1);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][70], 0);
	Invent_CraftColorBoxCreated[playerid] = true;
	return 1;
}
stock StartCraft(playerid)
{
	CraftStart[playerid] = 1;
	TogglePlayerControllable(playerid,false);
	switch(random(3))
	{
		case 0: J_ApplyAnimation(playerid, !"SCRATCHING", !"SCMID_L", 4.1, 1, 1, 1, 1, 0, 1);
		case 1: J_ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_REACT_MISS", 4.1, 1, 1, 1, 1, 0, 1);
		case 2: J_ApplyAnimation(playerid, !"CASINO", !"DEALONE", 4.1, 1, 1, 1, 1, 0, 1);
	}
	CraftTimer[playerid] = SetTimerEx("CraftStop", 5000, 0, "d", playerid);
	if(CraftSelectColor[playerid] != 0) HideCraft(playerid, 1);
	else HideCraft(playerid);
	return 1;
}
public: CraftStop(playerid)
{
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid,true);

	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid];

	new number_random = randomEx(1, 101), vip = 1;
	if(PI[playerid][pVIP] > 5) vip = 2;
	if(number_random <= CraftInfo[ID][CraftChance]*vip)
	{
		SCMf(playerid, COLOR_VALIK, "Вы успешно создали предмет '%s' (шанс изготовления %i процент(ов))", ItemsInfo[CraftInfo[ID][CraftItem]][ItemName], CraftInfo[ID][CraftChance]*vip);
		InvAdd(playerid, CraftInfo[ID][CraftItem], 1, 1);
		GameTextForPlayer(playerid, !"~g~SUCCESSFULLY", 1500, 1);
	}
	else
	{
		SCMf(playerid, 0xAFAFAFFF, !"Создание предмета '%s' не удалось (шанс изготовления %i процент(ов))", ItemsInfo[CraftInfo[ID][CraftItem]][ItemName], CraftInfo[ID][CraftChance]*vip);
		GameTextForPlayer(playerid, !"Failing",1500,1);
	}
	for(new i ; i < 5; i ++)
	{
		if(CraftInfo[ID][CraftNeed][i] != 1649) InvAdd(playerid, CraftInfo[ID][CraftNeed][i], -CraftInfo[ID][CraftNeedAmount][i], 0);
	}
	GiveMoney(playerid, -CraftInfo[ID][CraftCost]);
	CraftAmount[playerid]--;
	if(CraftStart[playerid] && CraftAmount[playerid]) StartCraft(playerid);
	else CraftStart[playerid] = 0, ShowCraft(playerid);
	return 1;
}
stock CraftResetString(playerid)
{
	for(new i = 40; i > 29; i--)
	{
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][i], " ");
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
}

stock CraftSetColorItem(playerid, slot)
{
	switch(slot)
	{
	    case 8: CraftSelectColor[playerid] = 0xCC2426FF;
	    case 7: CraftSelectColor[playerid] = 0xCC7824FF;
	    case 6: CraftSelectColor[playerid] = 0xE6BC1EFF;
	    case 5: CraftSelectColor[playerid] = 0xD5D73CFF;
	    case 4: CraftSelectColor[playerid] = 0x3CD740FF;
	    case 3: CraftSelectColor[playerid] = 0x3CD7D7FF;
	    case 2: CraftSelectColor[playerid] = 0x3C3ED7FF;
	    case 1: CraftSelectColor[playerid] = 0xD73CD4FF;
	    case 0: CraftSelectColor[playerid] = 0xD73C7EFF;
	    default: return HideCraftSelectColor(playerid, 1);
	}
	CraftRequirements(playerid);
	CreateCraftBoxTextDraw(playerid);
	if(Invent_CraftColorBoxCreated[playerid])
	{
		PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][70], CraftSelectColor[playerid]);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][70]);
	}
	HideCraftSelectColor(playerid);
	return true;
}

stock CraftOpen(playerid)
{
	HideCraftSelectColor(playerid, 1);
	new ID = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect[playerid]][CraftItem], Chance = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect[playerid]][CraftChance], Cost = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect[playerid]][CraftCost];
	for(new i ; i < 59; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	if(PI[playerid][pMoney] < CraftInfo[SearchSelectItemCraft(playerid)][CraftCost])
	{
		if(CraftAmount[playerid]) PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][6], "~r~$%i", CraftInfo[SearchSelectItemCraft(playerid)][CraftCost]); // Стоимость;
		else PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][6], "~r~$%i / %i", Cost, Cost*10); // Стоимость;
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], "~r~COST"); // Стоимость;
	}
	else
	{
		if(CraftAmount[playerid]) PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][6], "~g~$%i", CraftInfo[SearchSelectItemCraft(playerid)][CraftCost]); // Стоимость;
		else PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][6], "~g~$%i / %i", Cost, Cost*10); // Стоимость;
		PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][7], "~g~COST"); // Стоимость;
	}
	PlayerTextDrawHide(playerid, GlobalTDPlayer[playerid][0]);
	PlayerTextDrawHide(playerid, GlobalTDPlayer[playerid][1]);
	if(CraftTabSelect[playerid] == 1)
	{
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][0]);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][1]);
	}
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][28], "%i / %i", CraftPageSelect[playerid], IntRound(GetAllAmountCraft(playerid)));
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][25], "%s", FixText(ItemsInfo[ID][ItemName]));
	if(PI[playerid][pVIP] > 5) PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][5], "SUCCESS CHANCE: %i% (+%i%)", Chance, Chance*2); // Шанс
	else PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][5], "SUCCESS CHANCE: %i%", Chance); // Шанс
	if(!ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][2], 0x333333FF);
	//else PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][2], ItemsInfo[ID][ItemColor]);
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][9], "%i", CraftAmount[playerid]);
	PlayerTextDrawCraftTabUpdate(playerid, CraftTabSelect[playerid]);
	for(new i = 40; i > 29+GetCyclCraft(playerid); --i)
	{
		CraftResetString(playerid);
		for(new j ; j < 10-GetCyclCraft(playerid); j++)
		{
			i--;
			PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], 1);
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][i], "%s", FixText(ItemsInfo[CraftInfo[SearchSelectItemCraft(playerid)+j][CraftItem]][ItemName]));
			PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	CraftRequirements(playerid);
	PlayerTextDrawSelectUpdate(playerid, CraftItemSelect[playerid]);
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][2], ItemsInfo[ID][ItemID]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][2], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][2]);
	return 1;
}
stock PlayerTextDrawTabReset(playerid)
{
	for(new i = 55; i > 49 ; i--)
	{
		PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0x777777FF);
		PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	return 1;
}
stock CraftRequirementsReset(playerid)
{
	for(new i = 18; i > 12; i--)
	{
		PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	return 1;
}
stock CraftRequirementsResetString(playerid)
{
	for(new i = 23; i > 17; i--) PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][i], "");
	return 1;
}
stock CraftRequirements(playerid)
{
	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid];
	CraftRequirementsReset(playerid);
	if(!CraftSelectColor[playerid] )
	{
		if(CraftWriteSlot[playerid][0]) CraftInfo[ID][CraftNeed][CraftWriteSlot[playerid][0]] = 1649;
		if(CraftWriteSlot[playerid][1]) CraftInfo[ID][CraftNeedAmount][CraftWriteSlot[playerid][1]] = 0;
	}
	if(CraftSelectColor[playerid]) CraftRequirementSearchSlot(playerid);
	CraftRequirementsText(playerid);
	for(new i = 18; i > 12; --i)
	{
		for(new j ; j < 5; j++)
		{
			i--;
			new Need = CraftInfo[ID][CraftNeed][j];
			if(Need != 1649)
			{
				PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[Need][ItemID]);
				PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[Need][ItemPosX], ItemsInfo[Need][ItemPosY], ItemsInfo[Need][ItemPosZ], ItemsInfo[Need][ItemPosC]);
				PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], true);
			}
			else PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], false);
			PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	return 1;
}
stock CraftRequirementsText(playerid)
{
	CraftRequirementsResetString(playerid);
	static bool:lock[5];
	for(new i = 23; i > 17; --i)
	{
		for(new j; j < 5; j++)
		{
			new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid];
			new Need = CraftInfo[ID][CraftNeed][j];
			new NeedAmount = CraftInfo[ID][CraftNeedAmount][j]*CraftAmount[playerid];
			new count = GetInvCount(playerid, Need);
			i--;
			if(Need != 1649)
			{
				PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][i], "%i / %i", count, NeedAmount);
				if(count < NeedAmount) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0xFF0000FF);
				else if(count >= NeedAmount && PI[playerid][pMoney] >= CraftInfo[ID][CraftCost]*CraftAmount[playerid])
				{
					lock[j] = true;
					PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0x008000FF);
				}
				else lock[j] = false, PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0xFF0000FF);
			}
			else lock[j] = true;
			PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
			//PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][i], "100 / 100");
		}
	}
	if(lock[0] && lock[1] && lock[2] && lock[3] && lock[4])
	{
		if(!PlayerTextDrawIsSelectable(playerid, GlobalTDPlayer[playerid][4]))
		{
			PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][4], true);
			PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][4], 0x5e9e4bFF);
			PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][4]);
		}
	}
	else
	{
		if(PlayerTextDrawIsSelectable(playerid, GlobalTDPlayer[playerid][4]))
		{
			PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][4], false);
			PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][4], 0xBE6955FF);
			PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][4]);
		}
	}
}
stock CraftRequirementSearchSlot(playerid)
{
	for(new j ; j < 5; j++)
	{
		new ID = SearchSelectItemCraft(playerid)+CraftItemSelect[playerid];
	    if(CraftInfo[ID][CraftNeed][j] == 1209) break;
		if(CraftInfo[ID][CraftNeed][j] == 1649)
		{
			CraftInfo[ID][CraftNeed][j] = 1209;
			CraftInfo[ID][CraftNeedAmount][j] = 10;
			CraftWriteSlot[playerid][0] = j;
			CraftWriteSlot[playerid][1] = j;
			//CraftSelectColor[playerid] = 0;
			CraftRequirementsText(playerid);
			break;
		}
	}
	return 1;
}
stock PlayerTextDrawCraftTabUpdate(playerid, wtab)
{
	switch(wtab)
	{
		case 1: wtab = 55; case 2: wtab = 54; case 3: wtab = 53; case 4: wtab = 52; case 5: wtab = 51;
	}
	PlayerTextDrawTabReset(playerid);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][wtab], 0xDA9949FF);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][wtab], 0);
	for(new i = 55; i > 49 ; i--) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	return 1;
}
stock PlayerTextDrawSelectReset(playerid, select)
{
	for(new i = 40; i > 29 ; --i)
	{
		PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0x777777FF);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	for(new i = 50; i > 40 ; --i)
	{
		PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i], 0x050505FF);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][select-11], 0xFFFFFFFF);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][select-11]);
	return 1;
}
stock PlayerTextDrawSelectUpdate(playerid, select)
{
	select += 41;
	PlayerTextDrawSelectReset(playerid, select);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][select-11], 0);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][select-11], 0xFFFFFFFF);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][select], InvColor[PI[playerid][pInvColor]][1]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][select-11]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][select]);
	return 1;
}
stock IntRound(number)
{
	new list = 0;
	if(number > (number/10) * 10) list = (number/10) + 1;
	else list = number/10;
	return list;
}
stock GetCyclCraft(playerid)
{
	new cycl = 0;
	if(CraftPageSelect[playerid] == IntRound(GetAllAmountCraft(playerid)))
		cycl = ConvertToNegativeNumber(((GetAllAmountCraft(playerid)) - (IntRound(GetAllAmountCraft(playerid)) * 10)));
	return cycl;
}
stock GetAllAmountCraft(playerid)
{
	new max_id;
	for(new i ; i < sizeof(CraftInfo); i++)
	{
		if(CraftInfo[i][CraftType] != CraftTabSelect[playerid]) continue;
		max_id++;
	}
	return max_id;
}
stock SearchSelectItemCraft(playerid)
{
	new arr_id;
	for(new i ; i < sizeof(CraftInfo); i++)
	{
		if(CraftInfo[i][CraftType] == CraftTabSelect[playerid])
		{
			arr_id = i+(CraftPageSelect[playerid]*10)-10;
			break;
		}
	}
	return arr_id;
}
stock HideCraft(playerid, color = 0)
{
	if(!CraftOpened[playerid]) return 1;
	for(new i ; i < 59; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
 	CraftOpened[playerid] = false;
 	HideCraftSelectColor(playerid, 1, color);
	return CancelSelectTextDraw(playerid);
}
stock ShowDialogRP(playerid, number) //skif
{
	if(number >= sizeof(RPtest))
	{
		if(GetPVarInt(playerid, !"GoodOtvet") >= sizeof(RPtest)-2)
		{
			SCMf(playerid, COLOR_RED, "[Информация]{ffffff} Вы успешно {00cc00}сдали{ffffff} тест, %i правильных ответов из %i! Поздравляю!", GetPVarInt(playerid, !"GoodOtvet"), sizeof(RPtest));
			new invite = GetPVarInt(playerid, !"listitemORG")+1;
	        PI[playerid][pMember] = invite;
	        PI[playerid][pDCTime] = 2;
			PI[playerid][pRank] = 1;
	        PI[playerid][pFWarns] = 0;
			UpdatePlayerDataInt(playerid, "Member", invite);
			UpdatePlayerDataInt(playerid, "DCTime", 2);
			UpdatePlayerDataInt(playerid, "Rank", 1);
			UpdatePlayerDataInt(playerid, "FWarns", 0);
			CheckDuty(playerid);
			SendBotMessage(playerid, !"Молодчина, я тебе не сомневался!");
			UpdatePlayerQuest(playerid, 2);
	        SendTeamMessagef(GetTeamID(playerid), COLOR_VALIK, "Приветствуем нового члена нашей организации %s, которого пригласил: Сервер.", PN(playerid));
			ResetSpawnInfo(playerid, invite);
		}
		else SendBotMessage(playerid, !"Очень жаль, но больше шансов не дам."), SCMf(playerid, COLOR_RED, "[Информация]{ffffff} Вы {ff0000}провалили{ffffff} тест, %i правильных ответов из %i!", GetPVarInt(playerid, !"GoodOtvet"), sizeof(RPtest));
		DeletePVar(playerid, !"listitemORG");
		DeletePVar(playerid, !"GoodOtvet");
		DeletePVar(playerid, !"WhatRP");
		return 1;
	}
	SetPVarInt(playerid, !"WhatRP", number);
	str_2[0] = EOS, str_1[0] = EOS;
	f(str_2, sizeof(str_2), "Что обозначает термин %s", RPtest[number][tRPVopros]);
	f(str_1, sizeof(str_1), "%s", RPtest[number][tRPOtvet]);
	return SPD(playerid, 9996, DIALOG_STYLE_LIST, str_2, str_1, !"Далее", !"Отмена");
}
stock IsPlayerLauncher(playerid)
{
    if(player_TypeClient{playerid} == 255)
    {
        str_1[0] = EOS;
        GetPlayerVersion(playerid, str_1, sizeof(str_1));
        
        if(GetString(str_1, M_LAUNCHER_VERSION)) player_TypeClient{playerid} = 1;
        if(GetString(str_1, M_MOBILE_VERSION)) player_TypeClient{playerid} = 2;
        else player_TypeClient{playerid} = -1;
    }
	return player_TypeClient{playerid};
}
stock IsPlayerTypeClient(playerid, params[])
{
	if(IsPlayerLauncher(playerid) == 1) f(params, 10, "лаунчер Limonchyk Games");
	else if(IsPlayerLauncher(playerid) == 2) f(params, 10, "мобайл");
	else f(params, 10, "не лаунчер");
	return 1;
}
//CMD:dump_dasd() return Profiler_Dump();
stock QueryCache(const query[])
{
	new Cache:result = mysql_query(mysql, query);
	if(cache_num_rows()) return 1;
	cache_delete(result);
	return 0;
}
CMD:updatesklad(playerid)
{
 	if(CheckAdmin(playerid,7)) return 1;
	str_2[0] = EOS;
	for(new x = 1; x < MAX_ORGS; x++)
	{
		str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s:\t{9ACD32}%i материалов\n", global_OrgInfo[x][g_oName], OrgInfo[x][oItemCount][0]);
		strcat(str_2, str_1);
	}
	return SPD(playerid, 116, DIALOG_STYLE_LIST, !"Пополнение складов", str_2, !"Выбрать", !"Отмена");
}
stock EatSystem(playerid, status = 0)
{
	switch(status)
	{
	    case 0:
	    {
	        if(eatopen[playerid] || InventStatus{playerid}) return 1;
	        HideTextDraws(playerid,12);
	        SelectTextDraw(playerid, 0xf5f5f518);
	        #include modules\TEXTDRAWS\eat
			for(new i; i < 18; i++) PlayerTextDrawShow(playerid, eatfree2[playerid][i]);
			eatopen[playerid] = true;
	    }
	    case 1:
	    {
	        if(!eatopen[playerid]) return 1;
	        CancelSelectTextDraw(playerid);
			for(new i; i < 18; i++) DestroyPlayerTD(playerid,eatfree2[playerid][i]);
			eatopen[playerid] = false;
            SetPVarInt(playerid, !"larek", global_time + 3);
	    }
	}
	return 1;
}
CMD:acheck(playerid, get[])
{
	if(CheckAdmin(playerid, 8, 1)) return 1;
	extract get -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /acheck [nickname]");
	mysql_queryf_fix(mysql,"SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1;", true, name);
	if(cache_num_rows())
	{
		new id;
		cache_get_int(0, !"ID", id);
		str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `putadmNickName`, `putadmDate`, `giveadmKick`, `giveadmWarn`, `giveadmMute`, `giveadmJail`, `giveadmReport`, `giveadmKickDay`, `giveadmWarnDay`, `giveadmMuteDay`, `giveadmJailDay`, `giveadmReportDay`, `countSecOnPlayDay`, `countSecOnPlayAll` FROM `accounts` WHERE `ID` = '%i' LIMIT 1", id);
		mysql_tquery(mysql, str_q, "ACheckOFF", "i", playerid);
	}
	else SCM(playerid, COLOR_RED, !"Аккаунт не найден!");
	return 1;
}
/*
stock UpdatePlayerDataInt(playerid, const field[], data)
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%i' WHERE `ID` = '%i' LIMIT 1;", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataFloat(playerid, const field[], Float:data, const type[] = "%f")
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	if(!strcmp(type, "%.2f", true)) mysql_tqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%.2f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	else mysql_tqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataStr(playerid, const field[], const data[])
{
	if(!IsPlayerLogged[playerid] || PI[playerid][pID] == -1) return 0;
	mysql_pqueryf(mysql, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1;", field, data, PI[playerid][pID]);
	return 1;
}
*/
CMD:astats(playerid)
{
	if(CheckAdmin(playerid, 1)) return 1;
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `putadmNickName`, `putadmDate`, `giveadmKick`, `giveadmWarn`, `giveadmMute`, `giveadmJail`, `giveadmReport`, `giveadmKickDay`, `giveadmWarnDay`, `giveadmMuteDay`, `giveadmJailDay`, `giveadmReportDay`, `countSecOnPlayDay`, `countSecOnPlayAll` FROM `accounts` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
  	mysql_tquery(mysql, str_q, "ACheckOFF", "i", playerid);
	return 1;
}
public: ACheckOFF(playerid)
{
	if(cache_num_rows())
	{
		static name[24], data, kick, warn, mute, jail, report, kickday, warnday, muteday, jailday;
		cache_get_string(0, !"putadmNickName", name);
		cache_get_int(0, !"putadmDate", data);
		cache_get_int(0, !"giveadmKick", kick);
		cache_get_int(0, !"giveadmWarn", warn);
		cache_get_int(0, !"giveadmMute", mute);
		cache_get_int(0, !"giveadmJail", jail);
		cache_get_int(0, !"giveadmReport", report);
		cache_get_int(0, !"giveadmKickDay", kickday);
		cache_get_int(0, !"giveadmWarnDay", warnday);
		cache_get_int(0, !"giveadmMuteDay", muteday);
		cache_get_int(0, !"giveadmJailDay", jailday);
		// `countSecOnPlayDay`, 
		// `countSecOnPlayAll`
	}
	else
	{

	}
}
/*CMD:astats(playerid,params[]) {
	if(CheckAdmin(playerid, 8)) return 1;
	extract params -> new string:name[24]; else return SCM(playerid, COLOR_RED, !"Используй: /astats [nickname]");
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `RegIP`, `LastIP`, `Admin`, `AWarns`, `APM`,`AKick`,`AWarn`,`ABan`, `AMute`,`AJail` FROM `"TABLE_ACCOUNTS"` WHERE `NickName` = '%s' LIMIT 1", name);
  	mysql_tquery(mysql, str_q, "ACheckOFF", "is", playerid, name);
	return 1;
}
public: ACheckOFF(playerid, name[])
{
    //AC_FIX_DIALOG_F(playerid, 0);
	if(!cache_num_rows()) return SCM(playerid, -1, !"Аккаунт не найден");
	else
	{
	    new ADMIN1, AAWARN, APM1,AKICK1,AWarn1,ABan1,AMute,AJail1;
	    cache_get_int(0, !"Admin", ADMIN1);
	    cache_get_int(0, !"AWarns", AAWARN);
		cache_get_int(0, !"APM", APM1);
		cache_get_int(0, !"AKick", AKICK1);
		cache_get_int(0, !"AWarn", AWarn1);
		cache_get_int(0, !"ABan", ABan1);
		cache_get_int(0, !"AMute", AMute);
		cache_get_int(0, !"AJail", AJail1);
		str_1[0] = EOS, cache_get_string(0, !"RegIP", str_1);
		str_2[0] = EOS, cache_get_string(0, !"LastIP", str_2);
		SPDf(playerid, 0, DIALOG_STYLE_MSGBOX, !"Статистика администратора", !"Закрыть", !"", "\
		{FFFFFF}Ник:\t \t \t \t \t \t{B83434}%s\n\
        {FFFFFF}Административный уровень:\t \t \t{B83434}%i\n\
        {FFFFFF}Выговоры\t \t \t \t \t \t{B83434}%i из 3\n\n\
        {FFFFFF}_______________________________________\n\n\
		{FFFFFF}Ответов на репорт:\t \t \t \t \t \t{B83434}%i\n\
        {FFFFFF}Кикнуто:\t \t \t \t \t \t{B83434}%i\n\
		{FFFFFF}Заварнено:\t \t \t \t \t \t{B83434}%i\n\
        {FFFFFF}Забанено:\t \t \t \t \t \t{B83434}%i\n\
		{FFFFFF}Выдача мута:\t \t \t \t \t \t{B83434}%i\n\
        {FFFFFF}Посажено в тюрьму:\t \t \t \t \t \t{B83434}%i\n\n\
        {FFFFFF}_______________________________________\n\n\
        {FFFFFF}Регистрационный IP:\t \t \t \t \t \t{B83434}%s\n\
        {FFFFFF}Нынешний IP:\t \t \t \t \t \t{B83434}%s\n\
        {ff0000}ЕСЛИ ИГРОК В СЕТИ, ЕМУ НУЖНО ПЕРЕЗАЙТИ\n ЧТОБЫ СТАТИСТИКА ОБНОВИЛАСЬ!\n",\
		name,ADMIN1,AAWARN,APM1,AKICK1,AWarn1,ABan1,AMute,AJail1, str_1, str_2);
	}
	return 1;
}*/
stock CheckAllAdmins(playerid, page = 0)
{
	if(CheckAdmin(playerid, 8,1)) return 1;
    new Cache:result = mysql_query(mysql, !"SELECT * FROM "TABLE_ACCOUNTS" WHERE Admin > 0");
    new admins = cache_num_rows();
    cache_delete(result);
    if(page == 36) FirstBL[playerid] += 36;
    else if(page == 37) FirstBL[playerid] -= 36;
    else if(!page) FirstBL[playerid] = 36;
    new first = FirstBL[playerid], count;
	mysql_queryf_fix(mysql,"SELECT `NickName`, `Admin`, `Online_status`, `LastOnline` FROM "TABLE_ACCOUNTS" WHERE Admin > 0 ORDER BY Admin DESC LIMIT %i", true, first);
    str_1 = "{FFFFFF}Администратор\t{FFFFFF}Уровень\t{FFFFFF}Статус\t{FFFFFF}Последний вход\n";
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFF00}Администрация сервера (%i)", admins);
	for(new i = first - 36; i < cache_num_rows(); i++)
	{
		new time[25], name[MAX_PLAYER_NAME];
		cache_get_string(i, !"NickName", name);
		new lvl,online;
		cache_get_int(i, !"Admin", lvl);
		cache_get_int(i, !"Online_status", online);
		cache_get_string(i, !"LastOnline", time);
		count ++;
		if(online != -1) f(str_1, sizeof(str_1), "%s{FFFFFF}%s(%i)\t[%i lvl]\t{42B02C}ONLINE\t{FAAC58}%s{FFFFFF}\n", str_1, name, online, lvl, time);
		else f(str_1, sizeof(str_1), "%s{FFFFFF}%s\t[%i lvl]\t{BE2D2D}OFFLINE\t{FAAC58}%s{FFFFFF}\n", str_1, name, lvl, time);
		if(count == 36) { strcat(str_1, !"{ffffff}Следующая страница >>>\n"); break; }
	}
	if(FirstBL[playerid] > 36) strcat(str_1, !"{ffffff}<<< Предыдущая страница");
	cache_delete(result1);
    return SPD(playerid, 10151, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, "Принять", "Закрыть");
}
stock BuyRoulette(playerid)
{
    str_1[0] = EOS, f(str_1, sizeof(str_1), !"В наличии: {BEB455}%i AZ Coins", PI[playerid][pVirMoney]);
    static cost;
    cost = EOS;
    switch(SelectedRoulette[playerid])
    {
        case 0: str_q = "бронзовой", cost = 2000;
        case 1: str_q = "серебряной", cost = 5500;
        case 2: str_q = "золотой", cost = 7000;
        case 3: str_q = "платиновой", cost = 10000;
    }
    str_2[0] = EOS, f(str_2, sizeof(str_2), "{BEB455}Стоимость %s рулетки: %i AZ Coins\n{FFFFFF}Хотите купить рулетку?", str_q, cost);
    SPD(playerid, 9238, DIALOG_STYLE_MSGBOX, str_1, str_2, "Оплатить", "Отмена");
    return SetPVarInt(playerid, !"RollCost", cost);
}
stock UseRedactor(playerid,number,click,  id)
{
	CarInfo[number][cModelObject][click] = id;
	CancelSelectTextDraw(playerid);
    return EditOwnableCarObject(playerid, click);
}
stock PutPlayerInVehicleEx(playerid, vehicleid, seatid) return PutPlayerInVehicle(playerid, vehicleid, seatid);
stock UpdateDescription(playerid, const string[], connect = 0)
{
    if(connect == 1 && !GetString(PI[playerid][pDescription], "default"))
	{
		if(PlayerDescriptionText[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerDescriptionText[playerid]), PlayerDescriptionText[playerid] = Text3D:-1;
		return 1;
	}
	else if(connect == 2 && !GetString(PI[playerid][pDescription], "default"))
    {
        SCM(playerid, COLOR_YELLOW, !"Описание вашего персонажа:");
        SCMf(playerid, COLOR_GREY, "%s", PI[playerid][pDescription]);
		if(PlayerDescriptionText[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerDescriptionText[playerid]), PlayerDescriptionText[playerid] = Text3D:-1;
        PlayerDescriptionText[playerid] = CreateDynamic3DTextLabel(PI[playerid][pDescription], 0xCCCCCCFF, 0.0, 0.0, -1.0, 5, playerid,-1, 0, -1, -1, -1);
        return 0;
    }
    if(GetString(PI[playerid][pDescription], "default") && !connect)
    {
        if(strlen(string) < 1 || strlen(string) > 150) return SCM(playerid,COLOR_RED, !">>>>{FFFFFF} - Некорректный текст");
        SetString(PI[playerid][pDescription], string), UpdatePlayerDataStr(playerid, "Description", PI[playerid][pDescription]);
        SCM(playerid, COLOR_VALIK,"[Информация]{FFFFFF} Вы создали описание персонажа:"), SCM(playerid, COLOR_GREY, string);
        str_1[0] = EOS;
		SetString(str_1, string);
		for(new i; i < strlen(string); i++) if(string[i] == '/') str_1[i] = '\n';
        SPDf(playerid, 0, 0, !"Описание персонажа", !"Закрыть", !"", "{FFFFFF}Вы создали описание для вашего персонажа!\n\n{AFAFAF}%s", string);
        if(PlayerDescriptionText[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerDescriptionText[playerid]), PlayerDescriptionText[playerid] = Text3D:-1;
		PlayerDescriptionText[playerid] = CreateDynamic3DTextLabel(str_1, 0xCCCCCCFF, 0.0, 0.0, -1.0, 5, playerid, -1, 0);
        SetPVarInt(playerid,!"description",global_time+180);
    }
    else if(!connect)
    {
        SetString(PI[playerid][pDescription], "default"), UpdatePlayerDataStr(playerid, "Description", PI[playerid][pDescription]);
        SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы удалили описание персонажа");
        if(PlayerDescriptionText[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(PlayerDescriptionText[playerid]), PlayerDescriptionText[playerid] = Text3D:-1;
    }
    return 1;
}
//checkpunish
stock CheckPunish(playerid, id)
{
	str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT * FROM `punish` WHERE `pID` = '%i' LIMIT 27", PI[id][pID]);
	return mysql_tquery(mysql, str_q, "QueryPunish", "ii", playerid,id);
}
public: QueryPunish(playerid,id)
{
    new push = cache_num_rows();
   	str_2[0] = EOS, str_1[0] = EOS, str_d[0] = EOS;
    if(push > 25)
    {
		mysql_tqueryf(mysql,"DELETE FROM `punish` WHERE `pID` = '%s' LIMIT 25", PI[id][pID]);
		return SCM(playerid, -1, "Ваши старые наказания удалены! Они автоматически амнистированы!");
	}
	if(push)
    {
	    for(new i; i < push; i++)
		{
			str_d[0] = EOS, cache_get_string(i, !"Action", str_d);
			str_q2[0] = EOS, cache_get_string(i, !"Date", str_q2);
			f(str_2, sizeof(str_2), "{FF6347}%s[%s]\t|  %s\n", str_2, str_q2, str_d);
		}
		f(str_1, sizeof(str_1), "История Наказаний: %s", PN(id));
	}else{
	    str_1[0] = EOS, str_2[0] = EOS;
	    str_1 = !"История наказания", str_2 = "{FFFFFF}Истории наказаний не обнаружено";
	}
	return SPD(playerid, 0, 0, str_1, str_2, "Понял", "");
}
stock SavePunish(type, playerid, text[] = "", id, value = 0){
    new hour, minute, second;
   	gettime(hour,minute,second);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%i-%i-%i %02i:%02i:%02i", global_year, global_month, global_day,hour,minute,second);
	switch(type){
    	case 0: mysql_tqueryf(mysql, "INSERT INTO `punish` (`Date`, `Action`, `pID`) VALUES ('%s','А: %s[%i] посадил игрока %s[%i] в деморган на %i минут. Причина: %s', '%i')", str_1, PN(playerid), playerid, PN(id), id, value, text, PI[id][pID]);
        case 1: mysql_tqueryf(mysql, "INSERT INTO `punish` (`Date`, `Action`, `pID`) VALUES ('%s','А: %s[%i] кикнул игрока %s[%i]. Причина: %s', '%i')",  str_1, PN(playerid), playerid, PN(id), id, text, PN(playerid), PN(id), PI[id][pID]);
        case 2: mysql_tqueryf(mysql, "INSERT INTO `punish` (`Date`, `Action`, `pID`) VALUES ('%s','А: %s[%i] заглушил игрока %s[%i] на %i минут. Причина: %s', '%i')",  str_1, PN(playerid), playerid, PN(id), id, value, text, PI[id][pID]);
		case 3: mysql_tqueryf(mysql, "INSERT INTO `punish` (`Date`, `Action`, `pID`) VALUES ('%s','А: %s[%i] забанил игрока %s[%i] на %i дней. Причина: %s', '%i')",  str_1, PN(playerid), playerid, PN(id), id, value, text, PI[id][pID]);
		case 4: mysql_tqueryf(mysql, "INSERT INTO `punish` (`Date`, `Action`, `pID`) VALUES ('%s','А: %s[%i] забанил IP игрока %s[%i]. Причина: %s', '%i')",  str_1, PN(playerid), playerid, PN(id), id, text, PI[id][pID]);
	}
	return 1;
}
//sharing
stock LoadingSharpeningTD(playerid)
{
    #include modules/TEXTDRAWS/inv/inv_menu
    #include modules/TEXTDRAWS/inv/inv_sharing
}
CMD:show(playerid) ShowSharpening(playerid, 0);
stock ShowSharpening(playerid, type)
{
	if(Upgrade_Open[playerid] != false) return 1;
	Upgrade_Open[playerid] = true;
	MenuStatus{playerid} = true;
	Upgrade_Start[playerid] = false;
	switch(type)
	{
		case 0: //update
		{
			PI[playerid][pInvPos_X] = 0.0, \
				PI[playerid][pInvPos_Y] = 0.0;
			LoadingSharpeningTD(playerid);
			new page = InventPage[playerid];
			if(PI[playerid][pInvLang])
			{
				PlayerTextDrawSetString(playerid,  Upgrade_InventTD[playerid][16], FixText("ЗАТОЧИТЬ"));
				PlayerTextDrawSetString(playerid,  Upgrade_InventTD[playerid][18], FixText("ЗАКРЫТЬ"));
				PlayerTextDrawSetString(playerid,  Upgrade_InventTD[playerid][24], FixText("ИНФОРМАЦИЯ"));
			}
			//PlayerTDSetStringf(playerid, Upgrade_InventTD[playerid][22], "$%i", BizInfo[BizEntered[playerid]][bItemCost][1]);//cost
			for(new i; i < PI[playerid][pInvCell]; i++)
			{
				if(!i) Upgrade_GetSlotAcs{playerid} = 255, Upgrade_GetSlotStone{playerid} = 255;
				if(i < 28) PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][i]);
				//if(i < 2) PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][i]);
				if(i < 17 && i >= 2) PlayerTextDrawShow(playerid, Invent[playerid][i]);
				switch(ItemsInfo[PI[playerid][pInvItem][i]][ItemView])
				{
					case 1..8,1781..1785,1167: PI[playerid][pInvItemLock][i] = false;
					default: PI[playerid][pInvItemLock][i] = true;
				}
				if(i == 51) PlayerTextDrawShow(playerid, Invent[playerid][i]); 
			}
			if(!page) page = 1;
			ShowInvPage(playerid, page);
			Upgrade_ProgressWhite[playerid] = 0.0;
			CreateUpgrade_ProgreesTD(playerid);
			SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
		}
		case 3: //color
		{

		}
		default: Upgrade_Open[playerid] = false, MenuStatus{playerid} = false;
	}
	return 1;
}
stock ClearSlotSharpening(playerid, type)
{
	switch(type)
	{
		case 1:
		{
			DestroyPlayerTD(playerid, Upgrade_ColorTD[playerid]);
			PlayerTextDrawSetSelectable(playerid, Upgrade_InventTD[playerid][26], 0);
			PlayerTextDrawSetPreviewModel(playerid, Upgrade_InventTD[playerid][26], ItemsInfo[0][ItemID]);
			PlayerTextDrawSetPreviewRot(playerid, Upgrade_InventTD[playerid][26], ItemsInfo[0][ItemPosX], ItemsInfo[0][ItemPosY], ItemsInfo[0][ItemPosZ], ItemsInfo[0][ItemPosC]);
			PlayerTextDrawBackgroundColor(playerid, Upgrade_InventTD[playerid][26], 0x333333FF);
			PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][26]);
			if(Upgrade_GetSlotAcs{playerid} == 255) return 1;
			PI[playerid][pInvItemLock][Upgrade_GetSlotAcs{playerid}] = false;
			InvSlotUpdate(playerid, Upgrade_GetSlotAcs{playerid});
			Upgrade_GetSlotAcs{playerid} = 255;
		}
		case 2:
		{
			PlayerTextDrawSetPreviewModel(playerid, Upgrade_InventTD[playerid][27], 1615);
			PlayerTextDrawSetPreviewRot(playerid, Upgrade_InventTD[playerid][27], 334.0, 0.0, 120.0, 1.601668);
			PlayerTextDrawColor(playerid, Upgrade_InventTD[playerid][27], 0x333333FF);
			PlayerTextDrawSetSelectable(playerid, Upgrade_InventTD[playerid][27], 0);
			PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][27]);
			PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][21], "_");
			if(Upgrade_GetSlotStone{playerid} == 255) return 1;
			PI[playerid][pInvItemLock][Upgrade_GetSlotStone{playerid}] = false;
			InvSlotUpdate(playerid, Upgrade_GetSlotStone{playerid});
			Upgrade_GetSlotStone{playerid} = 255;
		}
	}
	UpdateTempVarInventTD(playerid);
	return 1;
}
static const Float:ProcentSharpening[] =
    {50.0,\ 
		25.5,\ 
		20.0,\ 
		15.0,\ 
		12.5,\ 
		9.0,\ 
		4.5,\ 
		2.2,\ 
		1.0,\ 
		1.0,\ 
		1.0,\ 
		1.0,\ 
		1.0,\ 
		0.4,\ 
		0.3,\ 
		0.2,\
		0.1};
stock AddSlotSharpening(playerid, type)
{
	new slot, itemid;
	switch(type)
	{
		case 1:
		{
			DestroyPlayerTD(playerid, Upgrade_ColorTD[playerid]);
			slot = Upgrade_GetSlotAcs{playerid};
			new color = GetColorID[SearchColorAcs(InvPlayerColor[playerid][slot])][c_inventslot];
			if(color != -1)
			{
				static Float:X, Float:Y;
				PlayerTextDrawGetPosEx(playerid, Upgrade_InventTD[playerid][26], X, Y);
				Upgrade_ColorTD[playerid] = CreatePlayerTextDraw(playerid, X+29.0, Y+3.5, "Box");
				PlayerTextDrawLetterSize(playerid, Upgrade_ColorTD[playerid], 0.0, 0.098000);
				PlayerTextDrawTextSize(playerid, Upgrade_ColorTD[playerid], X+30.0125, 0.0);
				PlayerTextDrawAlignment(playerid, Upgrade_ColorTD[playerid], 1);
				PlayerTextDrawColor(playerid, Upgrade_ColorTD[playerid], 0xFFFFFFFF);
				PlayerTextDrawUseBox(playerid, Upgrade_ColorTD[playerid], 1);
				PlayerTextDrawBoxColor(playerid, Upgrade_ColorTD[playerid], color);
				PlayerTextDrawSetShadow(playerid, Upgrade_ColorTD[playerid], 2);
				PlayerTextDrawSetOutline(playerid, Upgrade_ColorTD[playerid], 0);
				PlayerTextDrawBackgroundColor(playerid, Upgrade_ColorTD[playerid], 0x000000FF);
				PlayerTextDrawFont(playerid, Upgrade_ColorTD[playerid], 0);
				PlayerTextDrawSetProportional(playerid, Upgrade_ColorTD[playerid], 0);
				PlayerTextDrawShow(playerid, Upgrade_ColorTD[playerid]);
			}
			itemid = PI[playerid][pInvItem][slot];
			PlayerTextDrawSetSelectable(playerid, Upgrade_InventTD[playerid][26], 1);
			PlayerTextDrawSetPreviewModel(playerid, Upgrade_InventTD[playerid][26], ItemsInfo[itemid][ItemID]);
			PlayerTextDrawSetPreviewRot(playerid, Upgrade_InventTD[playerid][26], ItemsInfo[itemid][ItemPosX], ItemsInfo[itemid][ItemPosY], ItemsInfo[itemid][ItemPosZ], ItemsInfo[itemid][ItemPosC]);
			if(ItemsInfo[itemid][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Upgrade_InventTD[playerid][26], ItemsInfo[itemid][ItemColor]);
			else PlayerTextDrawBackgroundColor(playerid, Upgrade_InventTD[playerid][26], 0x333333FF);
			PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][26]);
		}
		case 2:
		{
			slot = Upgrade_GetSlotStone{playerid};
			itemid = ItemsInfo[PI[playerid][pInvItem][slot]][ItemID];
			PlayerTextDrawSetPreviewModel(playerid, Upgrade_InventTD[playerid][27], itemid ? 1615 : 16112);
			if(itemid) PlayerTextDrawSetPreviewRot(playerid, Upgrade_InventTD[playerid][27], 334.0, 0.0, 120.0, 1.601668);
			else PlayerTextDrawSetPreviewRot(playerid, Upgrade_InventTD[playerid][27], 78.0, 0.0, 0.0, 1.024504);
			PlayerTextDrawColor(playerid, Upgrade_InventTD[playerid][27], 0xFFFFFFFF);
			PlayerTextDrawSetSelectable(playerid, Upgrade_InventTD[playerid][27], 1);
			PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][27]);
		}
	}
	UpdateTempVarInventTD(playerid);
	PI[playerid][pInvItemLock][slot] = true;
	InvSlotUpdate(playerid, slot);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	return 1;
}
stock UpdateTempVarInventTD(playerid)
{
	if(Upgrade_GetSlotStone{playerid} != 255)
	{
		if(!GetInvCount(playerid, PI[playerid][pInvItem][Upgrade_GetSlotStone{playerid}])) Upgrade_GetSlotStone{playerid} = 255;
		else PlayerTDSetStringf(playerid, Upgrade_InventTD[playerid][21], "X %i", GetInvCount(playerid, PI[playerid][pInvItem][Upgrade_GetSlotStone{playerid}]));
	}
	else PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][21], "_");

	//item
	if(Upgrade_GetSlotAcs{playerid} != 255) 
	{
        static Float:pecent;
        if(ItemsInfo[PI[playerid][pInvItem][Upgrade_GetSlotAcs{playerid}]][ItemID] == 1615) pecent = ProcentSharpening[ InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}] ]*3;
        else pecent = ProcentSharpening[InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}]];
        if(floatround(pecent, floatround_round) > 100) pecent = 100.0; 
        PlayerTDSetStringf(playerid, Upgrade_InventTD[playerid][25], "CHANCE: %.1f", pecent);
        PlayerTDSetStringf(playerid, Upgrade_ProgreesTD[playerid][5], "+%i", InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}]); 
        PlayerTDSetStringf(playerid, Upgrade_ProgreesTD[playerid][6], "+%i", InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}] + 1);
	}
	else PlayerTextDrawSetString(playerid, Upgrade_ProgreesTD[playerid][6], "_"), PlayerTextDrawSetString(playerid, Upgrade_ProgreesTD[playerid][5], "_"), PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][25], "_");
	PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][6]),\
	 PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][5]),\
	  PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][21]),\
	   PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][22]),\
	    PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][25]);

	return 1;
}
stock SetSharpeningItem(playerid, slot)
{
	new limit_sharpening;
	switch(ItemsInfo[PI[playerid][pInvItem][slot]][ItemView])
	{
		case 1..8: limit_sharpening = 15;
		case 1781..1785: limit_sharpening = 2;
		default: limit_sharpening = 0;
	}
	if(limit_sharpening != 0)
	{
		if(Upgrade_GetSlotAcs{playerid} != 255) return 1;
		if(InvPlayerParams[0][playerid][slot] > limit_sharpening) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка]{FFFFFF} Этот аксессуар полностью улучшен!");
		Upgrade_GetSlotAcs{playerid} = slot;
		AddSlotSharpening(playerid, 1);
	}
	else
	{
		if(Upgrade_GetSlotStone{playerid} != 255) return 1;
		Upgrade_GetSlotStone{playerid} = slot;
		AddSlotSharpening(playerid, 2);
	}
    return 1;
}
stock HideSharpening(playerid)
{
	if(Upgrade_Open[playerid] != true) return 1;
	Upgrade_Open[playerid] = false;
	Upgrade_Start[playerid] = false;
    HideInvMenu(playerid);
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
		if(i < 28) DestroyPlayerTD(playerid, Upgrade_InventTD[playerid][i]);
		if(i < 17 && i >= 2) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 7) DestroyPlayerTD(playerid, Upgrade_ProgreesTD[playerid][i]);
		PI[playerid][pInvItemLock][i] = false;
		if(i == 51) DestroyPlayerTD(playerid, Invent[playerid][i]), DestroyPlayerTD(playerid, Upgrade_ColorTD[playerid]);
	}
	Upgrade_GetSlotAcs{playerid} = 255, Upgrade_GetSlotStone{playerid} = 255;
    Upgrade_ProgressWhite[playerid] = 0.0;
	CancelSelectTextDraw(playerid);
	return 1;
}
public: SharpeningTime(playerid)
{
	if(!Upgrade_Start[playerid])
	{
		KillTimer(Upgrade_TimerID[playerid]);
		Upgrade_TimerID[playerid] = -1;
		return 1;
	}

    Upgrade_ProgressWhite[playerid] += 2.5;
    new Float:progress = Upgrade_ProgressWhite[playerid];
    if(floatround(progress, floatround_round) <= 17) 
    {
        if(IsPlayerTextDrawVisible(playerid, Upgrade_ProgreesTD[playerid][2]))
        {
            PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][2], Upgrade_ProgressWhite[playerid], 6.761664+1.0); 
            PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][2]);
        }
    }
    else if(floatround(progress, floatround_round) >= 18 && floatround(progress, floatround_round) <= 120)
    {
        if(IsPlayerTextDrawVisible(playerid, Upgrade_ProgreesTD[playerid][3]))
        {
            PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][3], Upgrade_ProgressWhite[playerid]+1.4, 6.761664/2);
            PlayerTextDrawSetPosEx(playerid, Upgrade_ProgreesTD[playerid][3], 163.320450, 244.288101+3.0); 
            PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][3]);
        }
    }
    else if(floatround(progress, floatround_round) >= 121 && floatround(progress, floatround_round) <= 136) 
    {
        if(IsPlayerTextDrawVisible(playerid, Upgrade_ProgreesTD[playerid][4]))
        {
            PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][4], Upgrade_ProgressWhite[playerid]-120.0, 6.761664+1.0); 
            PlayerTextDrawSetPosEx(playerid, Upgrade_ProgreesTD[playerid][4], 163.320450+120.0, 244.288101); 
            PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][4]);
        }
    }
    if(floatround(progress, floatround_round) >= 137)
    {
        new Float:update;
		if(ItemsInfo[PI[playerid][pInvItem][Upgrade_GetSlotStone{playerid}]][ItemID] == 1615) update = ProcentSharpening[ InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}] ]*3;
		else update = ProcentSharpening[ InvPlayerParams[0][playerid][Upgrade_GetSlotAcs{playerid}] ];

        if(floatround(update, floatround_round) > 100) update = 100.0;
        KillTimer(Upgrade_TimerID[playerid]);
        Upgrade_TimerID[playerid] = -1;
		if(floatround(update, floatround_round) >= random(100)) FinalSharpening(playerid, true);
		else FinalSharpening(playerid, false);
        Upgrade_ProgressWhite[playerid] = 0.0;
        for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, Upgrade_ProgreesTD[playerid][i]);
    }
    return 1;
}
stock FinalSharpening(playerid, bool:status)
{
	if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Upgrade_InventTD[playerid][16], "ENCHANT");
    else PlayerTextDrawSetString(playerid,  Upgrade_InventTD[playerid][16], FixText("ЗАТОЧИТЬ"));
	PlayerTextDrawShow(playerid, Upgrade_InventTD[playerid][16]);
	new slot_stone = Upgrade_GetSlotStone{playerid},
		slot_upgrade = Upgrade_GetSlotAcs{playerid};
	InvAdd(playerid, PI[playerid][pInvItem][slot_stone], -1);
    if(!status) SCMf(playerid, COLOR_LIGHTRED, "Увы, вам не удалось улучшить предмет %s с +%i на +%i", ItemsInfo[PI[playerid][pInvItem][slot_upgrade]][ItemName], InvPlayerParams[0][playerid][slot_upgrade], InvPlayerParams[0][playerid][slot_upgrade]+1);    
    else //win
    {
		InvPlayerParams[0][playerid][slot_upgrade]++;
		InvSlotUpdate(playerid, slot_upgrade);
        SCMf(playerid, COLOR_GREEN, "Успех! вам удалось улучшить предмет %s с +%i на +%i", ItemsInfo[PI[playerid][pInvItem][slot_upgrade]][ItemName], InvPlayerParams[0][playerid][slot_upgrade]-1, InvPlayerParams[0][playerid][slot_upgrade]);
    }
    for(new i; i < 2; i++) 
    {
        PlayerTextDrawBoxColor(playerid, Upgrade_ProgreesTD[playerid][i], status == true ? 0x4DFF5A5A : 0xFF4D4D5A); 
        PlayerTextDrawShow(playerid, Upgrade_ProgreesTD[playerid][i]);
    }
    Upgrade_TimerID[playerid] = SetTimerEx("SharpeningHideProgress", 1500, false, "d", playerid);
    return UpdateTempVarInventTD(playerid);
}
public: SharpeningHideProgress(playerid)
{
    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, Upgrade_ProgreesTD[playerid][i]);
    KillTimer(Upgrade_TimerID[playerid]);
    Upgrade_TimerID[playerid] = -1;
	Upgrade_Start[playerid] = false;
}
stock CreateUpgrade_ProgreesTD(playerid, bool:del = false)
{
    for(new i = 2; i < 5; i++) 
    {
		DestroyPlayerTD(playerid, Upgrade_ProgreesTD[playerid][i]);
        Upgrade_ProgreesTD[playerid][i] = CreatePlayerTextDraw(playerid, 163.320450, 244.288101+1.0, "LD_SPAC:WHITE");
        PlayerTextDrawLetterSize(playerid, Upgrade_ProgreesTD[playerid][i], 2.727182, 1.120000);
        PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][i], Upgrade_ProgressWhite[playerid], 6.761664);
        PlayerTextDrawAlignment(playerid, Upgrade_ProgreesTD[playerid][i], 1);
        PlayerTextDrawColor(playerid, Upgrade_ProgreesTD[playerid][i], InvColor[PI[playerid][pInvColor]][2]);
        PlayerTextDrawUseBox(playerid, Upgrade_ProgreesTD[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, Upgrade_ProgreesTD[playerid][i], 0xFFFFFFFF80808080);
        PlayerTextDrawSetShadow(playerid, Upgrade_ProgreesTD[playerid][i], 2);
        PlayerTextDrawSetOutline(playerid, Upgrade_ProgreesTD[playerid][i], 0);
        PlayerTextDrawBackgroundColor(playerid, Upgrade_ProgreesTD[playerid][i], 0x000000FF);
        PlayerTextDrawFont(playerid, Upgrade_ProgreesTD[playerid][i], 4);
        PlayerTextDrawSetProportional(playerid, Upgrade_ProgreesTD[playerid][i], 1);
        PlayerTextDrawSetSelectable(playerid, Upgrade_ProgreesTD[playerid][i], 0);
    }
    if(!del)
    {
		DestroyPlayerTD(playerid, Upgrade_ProgreesTD[playerid][6]);
		DestroyPlayerTD(playerid, Upgrade_ProgreesTD[playerid][5]);
        Upgrade_ProgreesTD[playerid][5] = CreatePlayerTextDraw(playerid, 171.120911, 245.466080, "_");
        PlayerTextDrawLetterSize(playerid, Upgrade_ProgreesTD[playerid][5], 0.124850, 0.695162);
        PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][5], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, Upgrade_ProgreesTD[playerid][5], 2);
        PlayerTextDrawColor(playerid, Upgrade_ProgreesTD[playerid][5], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, Upgrade_ProgreesTD[playerid][5], 0);
        PlayerTextDrawBoxColor(playerid, Upgrade_ProgreesTD[playerid][5], 0x80808080);
        PlayerTextDrawSetShadow(playerid, Upgrade_ProgreesTD[playerid][5], 0);
        PlayerTextDrawSetOutline(playerid, Upgrade_ProgreesTD[playerid][5], 0);
        PlayerTextDrawBackgroundColor(playerid, Upgrade_ProgreesTD[playerid][5], 0x00000000);
        PlayerTextDrawFont(playerid, Upgrade_ProgreesTD[playerid][5], 2);
        PlayerTextDrawSetProportional(playerid, Upgrade_ProgreesTD[playerid][5], 1);
        PlayerTextDrawSetSelectable(playerid, Upgrade_ProgreesTD[playerid][5], 0);
        
        Upgrade_ProgreesTD[playerid][6] = CreatePlayerTextDraw(playerid, 291.879089, 245.466080, "_");
        PlayerTextDrawLetterSize(playerid, Upgrade_ProgreesTD[playerid][6], 0.124850, 0.695162);
        PlayerTextDrawTextSize(playerid, Upgrade_ProgreesTD[playerid][6], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, Upgrade_ProgreesTD[playerid][6], 2);
        PlayerTextDrawColor(playerid, Upgrade_ProgreesTD[playerid][6], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, Upgrade_ProgreesTD[playerid][6], 0);
        PlayerTextDrawBoxColor(playerid, Upgrade_ProgreesTD[playerid][6], 0x80808080);
        PlayerTextDrawSetShadow(playerid, Upgrade_ProgreesTD[playerid][6], 0);
        PlayerTextDrawSetOutline(playerid, Upgrade_ProgreesTD[playerid][6], 0);
        PlayerTextDrawBackgroundColor(playerid, Upgrade_ProgreesTD[playerid][6], 0x00000000);
        PlayerTextDrawFont(playerid, Upgrade_ProgreesTD[playerid][6], 2);
        PlayerTextDrawSetProportional(playerid, Upgrade_ProgreesTD[playerid][6], 1);
        PlayerTextDrawSetSelectable(playerid, Upgrade_ProgreesTD[playerid][6], 0);
    }
    return 1;
}
stock ShowWeaponMenu(playerid)
{
    if(WeaponTDStatus[playerid]) return 1;
    #include modules/TEXTDRAWS/WeaponMenu
    for(new i; i < 26; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
    WeaponTDStatus[playerid] = true;
    SelectTextDraw(playerid, 0xFF6347FF);
	player_Global_Int[playerid][10] = 0;
    return UpdateWeaponMenu(playerid, -1, 0, 1);
}
stock HideWeaponMenu(playerid)
{
	if(!WeaponTDStatus[playerid]) return 1;
	for(new i; i < 26; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	WeaponTDStatus[playerid] = false;
	CancelSelectTextDraw(playerid);
	return 1;
}
stock UpdateWeaponMenu(playerid, last, select, next)
{
	player_Global_Int[playerid][10] = select;
	//select global
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][15], InfoWeaponMenuID[select][id_gun]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][15], InfoWeaponMenuID[select][x5], InfoWeaponMenuID[select][y5], InfoWeaponMenuID[select][z5], InfoWeaponMenuID[select][a5]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][15]);
	//last
	if(player_Global_Int[playerid][10] > 0 && last != -1)
	{
		PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][5], InfoWeaponMenuID[last][id_gun]);
		PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][5], InfoWeaponMenuID[last][x5], InfoWeaponMenuID[last][y5], InfoWeaponMenuID[last][z5], InfoWeaponMenuID[last][a5]);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][5]);
	}
	else PlayerTextDrawHide(playerid, GlobalTDPlayer[playerid][5]);
	//select
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][4], InfoWeaponMenuID[select][id_gun]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][4], InfoWeaponMenuID[select][x5], InfoWeaponMenuID[select][y5], InfoWeaponMenuID[select][z5], InfoWeaponMenuID[select][a5]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][4]);
	//next
	if(player_Global_Int[playerid][10] != sizeof(InfoWeaponMenuID)-1 && next != -1)
	{
		PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][3], InfoWeaponMenuID[next][id_gun]);
		PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][3], InfoWeaponMenuID[next][x5], InfoWeaponMenuID[next][y5], InfoWeaponMenuID[next][z5], InfoWeaponMenuID[next][a5]);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][3]);
	}
	else PlayerTextDrawHide(playerid, GlobalTDPlayer[playerid][3]);
	//text
	PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][14], "%s", InfoWeaponMenuID[select][name_gun]);
    return 1;
}
cmd:captcha(playerid) return CreateCaptcha_BOT(playerid,3);
CMD:showlic(playerid, params[]){
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используйте: /showlic [id]");
	if(GetPVarInt(playerid, !"reloaderlic") > global_time) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Не флуди!");
	if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_RED, !"Вы далеко от цели!");
    if(PI[playerid][pShowDokument]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
	if(ShowLicenses(id, playerid))
	{
		SetPlayerChatBubblef(playerid,COLOR_PURPLE, 10.0, 5000,"%s показал(а) свои лицензии %s", PN(playerid), PN(id));
		SCMf(playerid,COLOR_GREEN,"Вы успешно показали свои лицензии игроку {FFFFFF}%s",PN(id));
	}
	else SCM(playerid, COLOR_GREY, !"Недоступно в данный момент");
 	SetPVarInt(playerid, !"reloaderlic",global_time+10);
	return 1;}
stock ConvertUnixTime(unix, params[]) 
{
	params[0] = EOS;
    new 
		year = 1970,
		day = 1,
		month = 1,
		hour = 3, 
		minuit;

    while(unix >= 86400)
	{
        unix -= 86400;
        day ++;
        if(day > 31)
		{
            day = 1;
            month ++;
            
			if(month > 12)
			{
                year++;
                month = 1;
            }
        }
    }

	hour += unix / 3600;
	minuit = (unix - (hour -3 ) * 3600) / 60;

    if(hour >= 24) hour -= 24, day++;
	f(params, 40, "%02d:%02d %02d.%02d.%d", hour, minuit, day, month, year);
}
stock ShowLicenses(playerid, id){
	CheckLic(playerid);
	str_1[0] = EOS;
	for(new i; i < sizeof(LicInfo); i++)
	{
		if(GetItemSlot(playerid, LicInfo[i][LicItem]) != -1) str_d[0] = EOS, ConvertUnixTime(InvPlayerParams[0][playerid][ GetItemSlot(playerid, LicInfo[i][LicItem]) ], str_d);
		str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}Лицензия %s:\t\t%s {AFAFAF}(%s: %s)\n\n",\
		 LicInfo[i][LicName], \
		 GetItemSlot(playerid, LicInfo[i][LicItem]) != -1 ? "{10F441}Есть" : "{FF6347}Нету", \
		 GetItemSlot(playerid, LicInfo[i][LicItem]) != -1 ? "действует до" : "просрочена", str_d);
		strcat(str_1, str_2);
	}
	return SPD(id, 0, 0, !"Лицензии", str_1, !"Ок", !"");
}
CMD:sobes(playerid)
{
	/*new time[10+24] = "{D2D0C9}Не запланировано{FFFFFF}";
	new mesto[10+23] = "{D2D0C9}Не назначено!{FFFFFF}";
	new cont;
	strcat(str_1,!"Организация\tЗапланировано\tМесто\n");
	for(new i = 1; i < MAX_ORGS; i++)
	{
		switch(i)
		{
			case TEAM_LSPD,TEAM_LVPD,TEAM_RCPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_MEDICLV,TEAM_MERIALS,TEAM_BANK,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMYSF: cont=1;
			default: cont=0;
		}
		if(cont==1)
		{
			if(SobesStatus[i]==1)
			{
				f(time,sizeof(time),"{CBEC39}%s{FFFFFF}",SobesTime[i]);
				f(mesto,sizeof(mesto),"{CBEC39}%s{FFFFFF}",SobesMesto[i]);
			}
		    str_2[0] = EOS, f(str_2,sizeof(str_2),"{FFFFFF}- %s\t%s\t%s\n",global_OrgInfo[i][g_oName],time,mesto);
			strcat(str_1,str_2);
		}
	}
	SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{E4DB5E}Собеседования", str_1, "Понял", "");*/
	return 1;
}
stock SearchPhone(playerid)
{
    if(GetPVarInt(playerid, !"telephone") == 1)
	{
        str_1[0] = EOS,f(str_1, sizeof(str_1), "{FFC93E}[Реклама]{FFFFFF} Тут может быть ваша реклама!\n\
		{B03131}[1]{FFFFFF} Настройки\n\
		{B03131}[2]{FFFFFF} Номера/мониторинг гос. работников\n\
		{B03131}[3]{FFFFFF} Наружная реклама ( покупка через интернет )\n\
		{B03131}[4]{FFFFFF} Селфи\n\
		{B03131}[5]{FFFFFF} Список собеседований\n\
		{B03131}[6]{FFFFFF} Радио[выкл{FFFFFF}]\n\
		{B03131}[7]{FFFFFF} Проверить баланс\n\
		{B03131}[8]{FFFFFF} Перевести телефон в режим \"%s\"\n\
		{B03131}[9]{FFFFFF} Вытащить сим-карту\n\
		{B03131}[10]{FFFFFF} Убрать телефон", PI[playerid][pTelWork] ? ("Самолет") : ("Обычный"));
	}else{
        str_1[0] = EOS,f(str_1, sizeof(str_1), "{FFC93E}[Реклама]{FFFFFF} Тут может быть ваша реклама!\n\
		{B03131}[1]{FFFFFF} Настройки\n\
		{B03131}[2]{FFFFFF} Номера/мониторинг гос. работников\n\
		{B03131}[3]{FFFFFF} Наружная реклама ( покупка через интернет )\n\
		{B03131}[4]{FFFFFF} Селфи\n\
		{B03131}[5]{FFFFFF} Список собеседований\n\
		{B03131}[6]{FFFFFF} Радио[%s{FFFFFF}]\n\
		{B03131}[7]{FFFFFF} Проверить баланс\n\
		{B03131}[8]{FFFFFF} Отдел коммерция\n\
		{B03131}[9]{FFFFFF} Отдел недвижимости\n\
		{B03131}[10]{FFFFFF} Перевести телефон в режим \"%s\"\n\
		{B03131}[11]{FFFFFF} Вытащить сим-карту\n\
		{B03131}[12]{FFFFFF} Убрать телефон", "выкл", PI[playerid][pTelWork] ? ("Самолет") : ("Обычный"));
	}
    SPD(playerid, 966, DIALOG_STYLE_LIST, !"Меню", str_1, !"Принять", !"Отмена");
	return 1;
}
stock ShowTD(playerid, listitem)
{
    if(PAI[playerid][open_td]) return 1;
	SetPVarInt(playerid, !"testDrive_type", listitem);
	new count;
	for(new i=sizeof(ItemsInfo)-1; i >= 1000; --i)
	{
		if(sizeof(ItemsInfo)-i < 88) player_Global_Int[playerid][sizeof(ItemsInfo)-i] = -1;

		if(listitem == 1)
		{
			if(!IsValidObjectModel(ItemsInfo[i][ItemID]) || count >= 88 || !CheckItemFromAks(i)) continue;
			player_Global_Int[playerid][count] = i;
			count++;
		}
		else if(listitem == 2)
		{
			if(IsValidObjectModel(ItemsInfo[i][ItemID]) == 1 || count >= 88 || !CheckItemFromAks(i)) continue;
			player_Global_Int[playerid][count] = i;
			count++;
		}

		if(count >= 88) break;
	}
	for(new i; i < 23; i++) DestroyPlayerTD(playerid, PAI[playerid][testdrive_td][i]);
    #include modules\TEXTDRAWS\testdrive
    for(new i; i < 23; i++) PlayerTextDrawShow(playerid, PAI[playerid][testdrive_td][i]);
	SelectTextDraw(playerid, 0xA52A2AAA);
	PAI[playerid][open_td] = true,PAI[playerid][select_td] = 0, PAI[playerid][number_td] = -1,PAI[playerid][secondupdate] = 0;
	for(new i=23; i < 47; i++) DestroyPlayerTD(playerid, PAI[playerid][testdrive_td][i]);
	#include modules\TEXTDRAWS\testdrive_model
	return UpdateTDmodel(playerid);
}
stock ExitPAI(playerid)
{
	//SCM(playerid,-1,!"[ Информация ] Вы закончили тест-драйв!");
	if(Clother[playerid] == 144) SetPlayerSkin(playerid, PI[playerid][pSkin]);
	else if(Clother[playerid] == 145) CheckItem(playerid);
	Clother[playerid] = -1;
	if(TestDriveSphere[playerid] != -1) DestroyDynamicArea(TestDriveSphere[playerid]), TestDriveSphere[playerid] = -1;
	J_SetPlayerPos(playerid, -1637.2988,1201.5315,7.2080);
	for(new i; i < 11; i++) DestroyPlayerTD(playerid, PAI[playerid][testdrive_td][i]);
	SetPlayerVirtualWorldEx(playerid, 0);
	PAI[playerid][secondupdate] = 0;
	DeletePVar(playerid, !"testDrive_type");
}
stock HideTD(playerid)
{
	for(new i; i < 47; i++) DestroyPlayerTD(playerid, PAI[playerid][testdrive_td][i]);
	CancelSelectTextDraw(playerid);
	DeletePVar(playerid, !"testDrive_type");
	return PAI[playerid][open_td] = false, PAI[playerid][select_td] = 0,PAI[playerid][number_td] = -1,PAI[playerid][secondupdate] = 0;
}
stock UpdateTDmodel(playerid)
{
	if(!PAI[playerid][open_td]) return 1;
	new id[8], list = GetPVarInt(playerid, !"testDrive_type");
	id[0] = 45, id[1] = 42, id[2] = 39, id[3] = 36, id[4] = 33, id[5] = 30, id[6] = 27, id[7] = 24;
	for(new i; i < 8; i++)
	{
		switch(list)
		{
			case 0:
			{
				PlayerTextDrawSetPreviewModel(playerid, PAI[playerid][testdrive_td][id[i]], InfoConfigSkin[(-PAI[playerid][select_td])-i+sizeof(InfoConfigSkin)-1][MSkin_New]);
				PlayerTDSetStringf(playerid,PAI[playerid][testdrive_td][id[i]-1],"%s",InfoConfigSkin[(-PAI[playerid][select_td])-i+sizeof(InfoConfigSkin)-1][MSkin_Name]);
			}
			case 1,2:
			{
				new id2 = PAI[playerid][select_td]+i;
				if(player_Global_Int[playerid][id2] != -1)
				{
					PlayerTextDrawSetPreviewModel(playerid, PAI[playerid][testdrive_td][id[i]], ItemsInfo[ player_Global_Int[playerid][id2] ][ItemID]);
					PlayerTDSetStringf(playerid,PAI[playerid][testdrive_td][id[i]-1], "%s", FixText(ItemsInfo[ player_Global_Int[playerid][id2] ][ItemName]));
				}
			}
			case 3:
			{
				if(IsPlayerLauncher(playerid) != -1) PlayerTextDrawSetPreviewModel(playerid, PAI[playerid][testdrive_td][id[i]], InfoConfigVehicle[(-PAI[playerid][select_td])-i+sizeof(InfoConfigVehicle)-1][Model_NEW]);
				else PlayerTextDrawSetPreviewModel(playerid, PAI[playerid][testdrive_td][id[i]], InfoConfigVehicle[(-PAI[playerid][select_td])-i+sizeof(InfoConfigVehicle)-1][Model_OLD]);
				PlayerTDSetStringf(playerid,PAI[playerid][testdrive_td][id[i]-1],"%s",InfoConfigVehicle[SearchVehicleName(InfoConfigVehicle[(-PAI[playerid][select_td])-i+sizeof(InfoConfigVehicle)-1][Model_NEW])][Model_Name]);
			}
			default: return HideTD(playerid);
		}
	}
	if(PAI[playerid][number_td] != -1)
	{
		PAI[playerid][number_td] = -1;
		PlayerTextDrawColor(playerid, PAI[playerid][testdrive_td][PAI[playerid][number_td]*3+25], 0xA52A2A59);
	}
    for(new i=23; i < 47; i++) PlayerTextDrawShow(playerid, PAI[playerid][testdrive_td][i]);
	return 1;
}
stock SearchBiz(playerid, searchbiz, const text[] = "default")
{
	new Float:Distance, Float:Distance_ = 100000.0, useid;
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(BizInfo[i][bState] != searchbiz) continue;
		Distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
		if(Distance < Distance_) useid = i, Distance_ = Distance;
	}
	if(!GetString(text, "default"))
	{
		SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Местоположение %s отмечено красным маркером.", text);
		EnableGPSForPlayer(playerid, BizInfo[useid][bEnter_X], BizInfo[useid][bEnter_Y], BizInfo[useid][bEnter_Z]);
		return 1;
	}
	return useid;
}
stock CheckDuty(playerid)
{
    if(IsAtGang(playerid) || IsAtMafia(playerid))
    {
        TeamDuty{playerid} = true;
		SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
		return TogglePlayerControllable(playerid, true);
    }
    else if(TeamDuty{playerid})
    {
		SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
		return TogglePlayerControllable(playerid, true);
    }
    else if(!TeamDuty{playerid})
    {
        SetPlayerColor(playerid, 0xFFFFFF80);
		SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
		return TogglePlayerControllable(playerid, true);
    }
	return 1;
}
stock UpdateSpeed(playerid, bool:speedt)
{
    new carid = GetPlayerVehicleID(playerid);
	if(IsPlayerInitCef(playerid, customInterface_speed) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		if(GetPVarInt(playerid,!"updatespeed") < global_time)
		{
			ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.vehicleLiters', '[%i]');", floatround(vTemp[carid][Fuel], floatround_ceil));
			SetPVarInt(playerid,!"updatespeed",global_time + 5);
		}
	}
	else if(speedt != false)
	{
		if(vTemp[carid][vEngine] != false)
		{
			PlayerTDSetStringf(playerid, speed_prodvin[playerid][3], "%.0f%%", vTemp[carid][Fuel]);
			new color1, color2;
			if(vTemp[carid][Fuel] >= 1)
			{
				PlayerTextDrawTextSize(playerid, speed_prodvin[playerid][4], vTemp[carid][Fuel]/1.25, 3.940000);
				if(vTemp[carid][Fuel] >= 74.0) color1 = 0x14DB43FF, color2 = 0x14DB43FF;
				else if(vTemp[carid][Fuel] <= 73.0 && vTemp[carid][Fuel] >= 34.0) color1 = 0xebd70aFF, color2 = 0xebd70aFF;
				else if(vTemp[carid][Fuel] <= 33.0) color1 = 0xA52A2AFF, color2 = 0xA52A2AFF;
			}
			else color1 = 0xA52A2AFF, color2 = 0xA52A2AFF;
			for(new i = 6; i < 9; i++) PlayerTextDrawColor(playerid, speed_prodvin[playerid][i], color1), PlayerTextDrawShow(playerid, speed_prodvin[playerid][i]);
			for(new i = 3; i < 5; i++) PlayerTextDrawColor(playerid, speed_prodvin[playerid][i], color2), PlayerTextDrawShow(playerid, speed_prodvin[playerid][i]);
		}
	}
	else
	{
		new speed = GetPlayerVehicleSpeed(playerid);
		PlayerTDSetStringf(playerid, speeddraw[playerid][5], "fuel: %.0f%%", vTemp[carid][Fuel]);
		if(speed > 0)
		{
			str_1[0] = EOS;
			for(new dspeed; dspeed<floatround((16.0/200.0)*float(speed)) && dspeed<13; dspeed++)
			{
				switch(dspeed)
				{
					case 7: f(str_1, sizeof(str_1), "%s~g~", str_1);
					case 11: f(str_1, sizeof(str_1), "%s~r~", str_1);
				}
				f(str_1, sizeof(str_1), "%sI", str_1);
				PlayerTextDrawSetString(playerid, speeddraw[playerid][3], "I");
			}
			PlayerTextDrawSetString(playerid, speeddraw[playerid][3], str_1);
		}
		else PlayerTextDrawSetString(playerid, speeddraw[playerid][3], "_");
	}
    return 1;
}
stock FindSecondHandBizID(bizid)
{
	for(new i; i < sizeof(Second_Hand); i++)
	{
	    if(Second_Hand[i][sBizID] != bizid) continue;
	    return i;
	}
	return -1;
}
stock GetSecondHandClotherID(playerid)
{
    new bizid = BizEntered[playerid];
    new secondid = FindSecondHandBizID(bizid);
	if(BizInfo[bizid][bState] != 22) return -1;
	for(new i; i < sizeof(Second_Hand_Pickup_Pos); i++)
	{
		if(!Second_Hand[secondid][sSalePickup][i]) continue;
  		if(!IsPlayerInRangeOfPoint(playerid, 2.0, Second_Hand_Pickup_Pos[i][0], Second_Hand_Pickup_Pos[i][1], Second_Hand_Pickup_Pos[i][2])) continue;
  		return i;
	}
	return -1;
}
stock ShowSecondHandClotherSelect(playerid, clotherid)
{
	if(Second_Hand_Clother_Select[playerid] != -1)
	{
		for(new i; i < 20; i++)
		{
			DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
	    CancelSelectTextDraw(playerid);
	    Second_Hand_Clother_Select[playerid] = -1;
	    return 0;
	}
    #include modules/TEXTDRAWS/second_clother
    static const normal_clothes[] = {2689, 2705, 2704, 2706}, bad_clothes[] = {2844, 2845, 2846};
    static slot_clothes[5];
    slot_clothes[0] = randomEx(0, 1);
    slot_clothes[1] = randomEx(2, 3);
    slot_clothes[2] = randomEx(4, 5);
    slot_clothes[3] = randomEx(6, 7);
    slot_clothes[4] = randomEx(8, 9);
	for(new i; i < 10; i++)
	{
		Second_Hand_Clother_Model[playerid][i] = normal_clothes[random(sizeof(normal_clothes))];
	}
	Second_Hand_Clother_Model[playerid][slot_clothes[0]] = bad_clothes[random(sizeof(bad_clothes))];
	Second_Hand_Clother_Model[playerid][slot_clothes[1]] = bad_clothes[random(sizeof(bad_clothes))];
	Second_Hand_Clother_Model[playerid][slot_clothes[2]] = bad_clothes[random(sizeof(bad_clothes))];
	if(random(2) == 1) Second_Hand_Clother_Model[playerid][slot_clothes[3]] = bad_clothes[random(sizeof(bad_clothes))];
	if(random(2) == 1) Second_Hand_Clother_Model[playerid][slot_clothes[4]] = bad_clothes[random(sizeof(bad_clothes))];
	for(new i; i < 20; i++)
	{
	    if(i < 10)
		{
			PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][i], Second_Hand_Clother_Model[playerid][i]);
			switch(Second_Hand_Clother_Model[playerid][i])
			{
			    case 2704:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 227.000000, 118.000000, 0.000000, 0.782000);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 60.000000, 77.000000);
				}
			    case 2705:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 221.000000, 190.000000, 177.000000, 0.782000);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 60.000000, 77.000000);
				}
			    case 2706:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 227.000000, 183.000000, 0.000000, 0.782000);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 60.000000, 77.000000);
				}
			    case 2689:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 227.000000, 333.000000, 177.000000, 0.782000);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 60.000000, 77.000000);
				}
			    case 2844:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 339.000000, 360.000000, 360.000000, 1.183500);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 92.000000, 119.000000);
				}
			    case 2845:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 284.000000, 360.000000, 298.000000, 0.808099);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 98.000000, 127.000000);
				}
			    case 2846:
				{
					PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], 339.000000, 360.000000, 360.000000, 1.308599);
					PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 94.000000, 105.000000);
				}
			}
		}
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	SelectTextDraw(playerid, 0xAD3F4450);
	Second_Hand_Clother_Select[playerid] = clotherid;
	Second_Hand_Clother_Select_Time[playerid] = 30;
	return 1;
}
stock SelectSecondHandClother(playerid, clotherid)
{
	if(BizEntered[playerid] == -1 || BizInfo[BizEntered[playerid]][bState] != 22) return ShowSecondHandClotherSelect(playerid, -1);
	new id = GetSecondHandClotherID(playerid);
	if(id == -1) return ShowSecondHandClotherSelect(playerid, -1);
	if(GetPVarInt(playerid, !"select_clother_block") > global_time) return SCMf(playerid, COLOR_GREY, "У вас временно не работает курсор из-за неправильно убранной одежды. До активации курсора осталось: %d сек.", GetPVarInt(playerid, !"select_clother_block") - global_time);
	new secondid = FindSecondHandBizID(BizEntered[playerid]);
	new bizid = BizEntered[playerid];

    new normal_clothes[] = {2689, 2705, 2704, 2706};
    new bad_clothes[] = {2844, 2845, 2846};

    for(new i; i < sizeof(normal_clothes); i++)
	{
		if(Second_Hand_Clother_Model[playerid][clotherid] != normal_clothes[i]) continue;
		DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][clotherid]);
		Second_Hand_Clother_Model[playerid][clotherid] = -1;
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", "{ff0000}Внимание!\n\n{ffffff}Вы убрали хорошую одежду, поэтому сейчас вы будете перебирать вещи на 5 секунд дольше.\n{cccccc}(перестаёт работать курсор на 5 секунд, чтобы убрать остальную одежду)", "Закрыть", "");
		SCM(playerid, COLOR_RED, !"Внимание!");
		SCM(playerid, -1, "Вы убрали хорошую одежду, поэтому сейчас вы будете перебирать вещи на 5 секунд дольше.");
		SCM(playerid, COLOR_GREY, "(перестаёт работать курсор на 5 секунд, чтобы убрать остальную одежду)");
		SetPVarInt(playerid, !"select_clother_block", global_time + 5);
		return 1;
	}
    for(new i; i < sizeof(bad_clothes); i++)
	{
		if(Second_Hand_Clother_Model[playerid][clotherid] != bad_clothes[i]) continue;
		DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][clotherid]);
		Second_Hand_Clother_Model[playerid][clotherid] = -1;
		if(!GetSecondHandBadClother(playerid))
		{
		    ShowSecondHandClotherSelect(playerid, -1);
	        DestroyDynamic3DTextLabel(Second_Hand[secondid][sSaleText][id]);
	        DestroyDynamicPickupEx(Second_Hand[secondid][sSalePickup][id]);
	        Second_Hand[secondid][sSalePickup][id] = 0;
			if(BizInfo[bizid][bLock]) return SCM(playerid, COLOR_RED, !"Бизнес закрыт!");
	        if(BizInfo[bizid][bProducts] < 10) return SCM(playerid, COLOR_RED, !"В бизнесе закончились продукты!");
			if(Second_Hand[secondid][sSaleCount] >= 300) return SCM(playerid, COLOR_RED, !"В бизнесе закончилась одежда!");
	        if(GetMoney(playerid) < BizInfo[bizid][bProdPrice]) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}У вас недостаточно денег");
			if(!InvAdd(playerid, 5, 1)) return 0;
	        Second_Hand[secondid][sSaleCount]++;
	        SCMf(playerid, COLOR_VALIK, "[Информация] {ffffff}Вы купили одежду из секонд-хенда за $%d.", BizInfo[bizid][bProdPrice]);
	        GiveMoney(playerid, -500000);
			BizInfo[bizid][bProducts] -= 10;
		}
		return 1;
	}

	return SCM(playerid, COLOR_GREY, "[Техническая ошибка] {FFFFFF}Не удалось выбрать одежду");
}
stock GetSecondHandBadClother(playerid)
{
	new count;
    static const bad_clothes[] = {2844, 2845, 2846};
    for(new i; i < 10; i++)
	{
		if(Second_Hand_Clother_Model[playerid][i] == bad_clothes[0] ||
		Second_Hand_Clother_Model[playerid][i] == bad_clothes[1] ||
		Second_Hand_Clother_Model[playerid][i] == bad_clothes[2]) count++;
	}
	return count;
}
public: CheckPromo(playerid)
{
    if(cache_num_rows()) SPD(playerid, 9463, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Любой игрок может ввести ваш промо-код в личном меню,\n{FFD476}(/mm > Промо-код){FFFFFF} если уровень игрока\nсоответствует требованиям вашего промо-кода, то игрок\nполучит бонус, вы в свою очередь будете получать\nпроцент от доната игрока в виде {FFD476}реферальных монет{FFFFFF}\n\n{D2772C}Уровень - {FFFFFF}Уровень промо-кода, при повышении которого,\n\
	повышается бонус при использовании, процент с доната\nна максимальном (10) уровне снижается требование по\nуровню игрока с 6 до 5\n\n{D2772C}Бонус при использовании - {FFFFFF}деньги, который получит\nигрок после активации промо-кода, сумма бонуса зависит\nот уровня вашего промо-кода.\n\n{D2772C}Требования по уровню игрока - {FFFFFF}уровень, с которого\nигрок сможет активировать промо-код.\n\n\
	{D2772C}Реферальные монеты - {FFFFFF}Общая сумма полученных монет\nот доната игроков, активировавших ваш промо-код\n\n{D2772C}Позиция в рейтинге{FFFFFF} - в первую очередь зависит от\n{FFD476}уровня промо-кода{FFFFFF} потом от {FFD476}количество активаций{FFFFFF}\nи в конце от {FFD476}баланса реферальных монет{FFFFFF}", !"Выбрать", !"Назад");
    else SPD(playerid, 9470, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}У вас нету собственного промо-кода, хотите создать?", !"Выбрать", !"Отмена");
    return 1;
}
public: SelectPromo(playerid)
{
    if(cache_num_rows())
    {
        new name[MAX_PLAYER_NAME];
        cache_get_string(0, !"name", name);
        new lvl,money,used;
		cache_get_int(0, !"lvl", lvl);
        cache_get_int(0, !"money", money);
        cache_get_int(0, !"used", used);
        if(used >= 5 && lvl <= 1) lvl = 2;
        else if(used >= 10 && lvl <= 2) lvl = 3;
        else if(used >= 20 && lvl <= 3) lvl = 4;
        else if(used >= 30 && lvl <= 4) lvl = 5;
        else if(used >= 40 && lvl <= 5) lvl = 6;
        else if(used >= 80 && lvl <= 6) lvl = 7;
        else if(used >= 100 && lvl <= 7) lvl = 8;
        else if(used >= 125 && lvl <= 8) lvl = 9;
        else if(used >= 150 && lvl <= 9) lvl = 10;
        else if(used >= 200 && lvl <= 10) lvl = 11;
        mysql_pqueryf(mysql, "UPDATE `promo` SET `lvl`='%i' WHERE `pID`='%i' LIMIT 1", lvl, PI[playerid][pID]);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "{D2772C}[1] {FFFFFF}Ваш промо-код: {D2772C}%s\n\
		{D2772C}[2] {FFFFFF}Уровень промо-кода: {D2772C}%i из 10\n\
		{D2772C}[3] {FFFFFF}Баланс: {D2772C}%i реферальных монет\n\
		{D2772C}[4] {FFFFFF}Список игроков {999999}всего %i использований{FFFFFF}\n\
		{D2772C}[5] {FFFFFF}Вывод реферальных монет на qiwi кошелёк",name,lvl,money,used);
		SPD(playerid, 9464, DIALOG_STYLE_LIST, !"", str_1, !"Выбрать", !"Назад");
    }
    return 1;
}
stock UpdateDataFloat(const tablename[], const field[], const Float:data, const ID, set = 0)
{
    if(set == 0) mysql_pqueryf(mysql, "UPDATE `%s` SET `%s` = '%f' WHERE `ID` = '%i' LIMIT 1", tablename, field, data, ID);
    else mysql_pqueryf(mysql, "UPDATE `%s` SET `%s` = '%.4f' WHERE `ID` = '%i' LIMIT 1", tablename, field, data, ID);
    return 1;
}
stock UpdateDataStr(const tablename[], const field[], const data[], const ID)
{
    str_q[0] = EOS, f(str_q, sizeof(str_q), "UPDATE `%s` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1;", tablename, field, data, ID);
	return mysql_pquery(mysql, str_q);
}
stock UpdateDataInt(const tablename[], const field[], const data, const ID, const znak[] = "=") return mysql_pqueryf(mysql, "UPDATE `%s` SET `%s` %s '%i' WHERE `ID` = '%i' LIMIT 1", tablename, field, znak, data, ID);
stock UpdateDataConfig(const field[], const data) return mysql_pqueryf(mysql, "UPDATE `config` SET `%s` = '%i' LIMIT 1;", field, data);
stock UseGunSlot(playerid)
{
    new i = SearchFreeSG(playerid);
	if(i == -1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Все ячейки заняты!");
    J_ApplyAnimation(playerid, !"RIFLE", "RIFLE_load", 4.1, 0, 0, 0, 0, 0, 0);
    return UpdateGunSlot(playerid,i);
}
stock SearchFreeSG(playerid)
{
	new slot = -1;
	for(new i; i < 6; i++)
    {
        if(!PI[playerid][pSlotGun][i])
        {
            slot = i;
            break;
        }
    }
	return slot;
}
stock UpdateGunSlot(playerid,slot)
{
	new ID = PI[playerid][pInvItem][InventClick{playerid}];
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	PI[playerid][pSlotGun][slot] = ID;
	PlayerTextDrawSetPreviewModel(playerid, others[playerid][slot], ItemsInfo[ID][ItemID]);
	PlayerTextDrawSetPreviewRot(playerid, others[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	PlayerTextDrawColor(playerid, others[playerid][slot], 0xFFFFFFFF);
	PlayerTextDrawBackgroundColor(playerid, others[playerid][slot], 0x333333FF);
	PlayerTextDrawHide(playerid, others[playerid][slot]);
	PlayerTextDrawShow(playerid, others[playerid][slot]);
	InvAdd(playerid, ID, -1);
	return 1;
}
stock UpdateGunSlotInv(playerid,slot)
{
	if(!PI[playerid][pSlotGun][slot])
	{
		PlayerTextDrawSetPreviewModel(playerid, others[playerid][slot], 1649);
		PlayerTextDrawSetPreviewRot(playerid, others[playerid][slot], 0.000000, 0.000000, 90.000000, 2.000000);
		PlayerTextDrawColor(playerid, others[playerid][slot], 0xFFFFFFFF);
		PlayerTextDrawBackgroundColor(playerid, others[playerid][slot], 0x333333FF);
		PlayerTextDrawHide(playerid, others[playerid][slot]);
		PlayerTextDrawShow(playerid, others[playerid][slot]);
	}
	else
	{
		new ID = PI[playerid][pSlotGun][slot];
		PlayerTextDrawSetPreviewModel(playerid, others[playerid][slot], ItemsInfo[ID][ItemID]);
		PlayerTextDrawSetPreviewRot(playerid, others[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
		PlayerTextDrawColor(playerid, others[playerid][slot], 0xFFFFFFFF);
		PlayerTextDrawBackgroundColor(playerid, others[playerid][slot], 0x333333FF);
		PlayerTextDrawHide(playerid, others[playerid][slot]);
		PlayerTextDrawShow(playerid, others[playerid][slot]);
	}
	return 1;
}
enum setdamage
{
    slotgunid,
	gun,
	Float:damage,
};
static const ChangePlayerDamage[][setdamage]=
{
	{1177,24,1.0}, {1178,24,2.1}, {1179,24,3.2},
	{1180,31,1.0}, {1181,31,2.1}, {1182,31,3.2},
	{1183,30,1.0}, {1184,30,2.1}, {1185,30,3.2},
	{1186,34,1.0}, {1187,34,2.1}, {1188,34,3.2},
	{1189,33,1.0}, {1190,33,2.1}, {1191,33,3.2},
	{1192,29,1.0}, {1193,29,2.1}, {1194,29,3.2},
	{1195,25,1.0}, {1196,25,2.1}, {1197,25,3.2},
	{1198,28,1.0}, {1199,28,2.1}, {1200,28,3.2}
};
stock SearchDamageGun(slot,slot2,ii)//triazov
{
	new j=-1;
	for(new i; i < sizeof(ChangePlayerDamage); i++)
	{
		if(ChangePlayerDamage[i][slotgunid] == slot && ChangePlayerDamage[i][gun] == slot2)
		{
		    if(ii >= i) continue;
			j = i;
			break;
		}
	}
	return j;
}
stock UpdateDamageForPlayer(playerid,playerid2,weaponid)//,Float:amount)
{
	//прохождение дамага
//	new bool:isbot_playerid,
//		bool:isbot_playerid2;
	//if(Iter_Contains(FCNPC, playerid) == 1) //isbot_playerid = true; //бот наносит урон
	//else if(Iter_Contains(FCNPC, playerid2) == 1) //isbot_playerid2 = true, SCM(playerid,-1,"ты нанес боту урон"); //боту наносят урон
	new Float:amount = s_WeaponDamage[weaponid];
	amount -= float(GetAcsUpdate(InvAksParams[0][playerid2][1]+InvAksParams[0][playerid2][4]));
	amount += float(GetAcsUpdate(InvAksParams[0][playerid2][2]+InvAksParams[0][playerid2][3]));
	for(new i; i < 6; i++)
	{
		if(PI[playerid2][pSlotGun][i])
		{//0
			new id = SearchDamageGun(PI[playerid2][pSlotGun][i],weaponid,i);
			if(id != -1) amount += ChangePlayerDamage[id][damage];
		}
	}
	if(weaponid <= 38) amount += PI[playerid2][pDamageBoost][weaponid];
    if(PI[playerid][pArmour] != 0) J_SetPlayerArmour(playerid, PI[playerid][pArmour]-amount);
    else J_SetPlayerHealth(playerid, PlayerHealthAC[playerid]-amount);
	//
	ShowDamageTextDrawForPlayer(playerid2, playerid, weaponid, amount);
	GetPlayerLastDamage[playerid] = playerid2;
	GetPlayerLastDamageGunID{playerid} = weaponid;
	GetPlayerLastDamage_tick{playerid} = 0;
	/*if(GetUID_PlayerNPC[playerid] != -1)
	{
		if(GetPVarInt(playerid, !"coins2") > global_time || GetUID_PlayerNPC[playerid] == playerid2) return 1;
		SetPVarInt(playerid, !"coins2", global_time + 5);
		IsNPCAttack[GetUID_PlayerNPC[playerid]] = playerid2;
		FCNPC_SetWeapon(GetUID_PlayerNPC[playerid], 0);
	}*/
    if(weaponid == 3 || weaponid == 23) UseTaserForPlayer(playerid2,playerid);
	return 1;
}
stock UseTaserForPlayer(playerid,playerid2)
{
    if(IsACop(playerid) || Isameria(playerid) || PI[playerid][pMember]==TEAM_BANK)
    {
        if(!CuffedTime[playerid2] && Controllable{playerid2})
        {
	        ClearAnimations(playerid2);
			str_2[0] = EOS, f(str_2,sizeof(str_2),"* %s оглушил %s дубинкой",PN(playerid),PN(playerid2));
	        ProxDetector(25,playerid,str_2,COLOR_PURPLE);
	        SCM(playerid, -1, !"[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
	        TazerPlayer[playerid2] = playerid;
	        TazerPlayer[playerid] = playerid2;
	        new Float:X, Float:Y, Float:Z;
	        GetPlayerPos(playerid2, X, Y, Z), Z += 1.5;
	        switch(GetPlayerAnimationIndex(playerid))
	        {
	            case 17: CuffedPlayer(playerid2, 15);
	            case 18: CuffedPlayer(playerid2, 20);
	            case 19: CuffedPlayer(playerid2, 25);
	            default: CuffedPlayer(playerid2, 30);
			}
        }
    }
    return 1;
}
stock CheckSlotGun(playerid,status)
{
   	if(InvWeapCive[playerid] != false)
    {
        new i = SearchFreeSG(playerid);
        if(i == -1) return 1;
		PlayerTextDrawBackgroundColor(playerid, others[playerid][i], status ? 0xD57272FF: 0x333333FF);
		PlayerTextDrawShow(playerid, others[playerid][i]);
    }
	return 1;
}
stock SearchTrash(playerid)
{
	new j = -1;
	for(new i; i < sizeof(MusorPos); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2]))
		{
			j = i;
			break;
		}
	}
	return j;
}
stock ShowDialogReport(playerid)
{
	SPD(playerid, 32, DIALOG_STYLE_INPUT, !"{E88813}Репорт", (str_f("\
		{ffffff}Вы собираетесь написать сообщение Администрации.\n{ffffff}Перед тем как отправить сообщение убедитесь,\n{ffffff}что не один из пунктов помощи не дал вам ответа на ваш вопрос.\n\n\
		{AA3333}Запрещено:\n{AA3333}1. Флуд,оскорбления,оффтоп\n{AA3333}2. Просьбы (Дайте денег, дайте лидерку, дайте  дайте..)\n\
		{AA3333}3. Ложные сообщения\n\n{DF4F4F}За нарушение правил администрация может: \n{DF4F4F}1. Предупредить (Warn)\n{DF4F4F}2. Кикнуть с сервера\n\
		{DF4F4F}3. Заблокировать аккаунт (Ban)\n{DF4F4F}4. Удалить аккаунт (Dell) \n\n{65C360}Помните!\n{65C360}Мы всегда готовы помочь если вы соблюдаете правила.\n\
		{65C360}Данные правила установлены для всех игроков %s RP\n\n{ffffff}Если вам долго не отвечают, подождите пару минут\n{ffffff}Вы не один на сервере.\n\
		{E91BE9}Прежде чем задавать вопрос в репорт, попробуйте найти решение с помощью /help.\n\n", ServerCFG[server_name])), !"Отправить", !"Отмена");
		
	return 1;
}
stock UpdateTreasure(bool:con = false)
{
	if(con)
	{
		for(new i; i < sizeof(HitchInfo); i++)
		{
		    if(!HitchInfoStatus[i]) continue;
			for(new j; j < 3; j++) if(IsValidDynamicObject(KladObject[i][j])) DestroyDynamicObject(KladObject[i][j]);
			if(IsValidDynamic3DTextLabel(Klad3dText[i])) DestroyDynamic3DTextLabel(Klad3dText[i]);
			HitchInfoStatus[i] = 0;
		}
		Iter_Clear(TREASURE);
	}
	if(Iter_Count(TREASURE) < 70) //лимит после которого спавнятся клады
	{
		for(new j; j < 50; j++)
		{
		 	new i = random(sizeof(HitchInfo)-1);
		    if(HitchInfoStatus[i]) continue;
		    HitchInfoStatus[i] = 1;
			KladObject[i][0] = CreateDynamicObject(2680, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z]+0.2, 0.0, -89.1, 0.5, -1, -1, -1, 30.0, 30.0);
			KladObject[i][1] = CreateDynamicObject(11713, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z]+0.1, 0.0, -89.1, 0.5, -1, -1, -1, 30.00, 30.00);
			SetDynamicObjectMaterial(KladObject[i][1], 0, 16037, "des_nbridge", "girder2_red_64HV", 0x00000000);
			KladObject[i][2] = CreateDynamicObject(16302, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z]-4.0, 0.0, 0.0, 0.0, -1, -1, -1, 30.00, 30.00);
			SetDynamicObjectMaterial(KladObject[i][2], 0, 10756, "airportroads_sfse", "stones256128", 0);
			Klad3dText[i] = CreateDynamic3DTextLabel(!"Клад:\n{ffc33f}ALT", -1, HitchInfo[i][Klad_X], HitchInfo[i][Klad_Y], HitchInfo[i][Klad_Z], 10.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
			Iter_Add(TREASURE,i);
		}
	}
}
CMD:gotoklad(playerid, params[])
{
	if(CheckAdmin(playerid,8)) return 1;
    extract params -> new id; else return SCM(playerid, COLOR_RED, !"Используй: /gotoklad [id]");
    if(id > Iter_Count(TREASURE)-1) return SCMf(playerid,-1,"не больше %i",Iter_Count(TREASURE)-1);
	new id2 = Iter_Index(TREASURE,id);
    J_SetPlayerPos(playerid,HitchInfo[id2][Klad_X],HitchInfo[id2][Klad_Y],HitchInfo[id2][Klad_Z]);
	return SCMf(playerid, -1, "Вы телепортировались к кладу [ID - Params: %i, Treasure: %i]",id, id2);
}
stock treasureProgress(playerid,con=0)
{
    if(!con) PItreasure[playerid][tProgress] = 1;
    else PItreasure[playerid][tProgress] += randomEx(2,5);
	if(PItreasure[playerid][tProgress] >= 1)
	{
		if(PItreasure[playerid][tProgress] <= 20)
		{
		    J_ApplyAnimation(playerid, !"SWORD", !"sword_4", 4.0, 1, 0, 0, 0, 0);
			switch(random(11))
			{
				case 0..4: GameTextForPlayer(playerid, !"~w~PRESS: ~r~N", 1500, 3),	PItreasure[playerid][tKeys] = false;
				case 5..10: GameTextForPlayer(playerid, !"~w~PRESS: ~g~Y", 1500, 3),PItreasure[playerid][tKeys] = true;
			}
		}
		else if(PItreasure[playerid][tProgress] >= 20)
		{
		    ClearAnimations(playerid);
			PItreasure[playerid][tProgress] = 0;
			HitchInfoStatus[PItreasure[playerid][tID]] = 2;
			InventStatus{playerid} = false;
        	new i = random(sizeof(kladqusans));
			PItreasure[playerid][tQuestionID] = i;
			GameTextForPlayer(playerid, !"~g~SUCCESSFULLY", 3000, 3);
			if(IsValidDynamicObject(KladObject[PItreasure[playerid][tID]][2])) DestroyDynamicObject(KladObject[PItreasure[playerid][tID]][2]);
			str_1[0] = EOS,f(str_1, sizeof(str_1),"{FFFFFF}\n\nДля того, чтобы взломать замок,\nвам необходима ответить на вопрос-загадку!\n\nВопрос:\n%s\n\nВведите ответ в пустое контекстное поле:\n\n", kladqusans[i][kladquestion]); 
			SPD(playerid,3736,DIALOG_STYLE_INPUT,!"{FFFFFF}Взлом | {DC4747}Клад",str_1,!"»",!"X");
		}
	}
	return InventStatus{playerid} = true;
}
static const treasurePrize[][2]=
{
	{1,2},
	{2,1},
	{3,1},
	{9,1},
	{10,1},
	{4,1},
	{5,50000},
	{6,1},
	{7,1},
	{8,1}
};
#define tPrize(%0) PItreasure[playerid][tPrize][%0]
#define tAmount(%0) PItreasure[playerid][tAmount][%0]
stock treasureShowTD(playerid)
{
	new t1 = random(sizeof(treasurePrize)),t2 = random(sizeof(treasurePrize)), t3 = random(sizeof(treasurePrize));
	tPrize(0) = treasurePrize[t1][0];
	tAmount(0) = treasurePrize[t1][1];
	tPrize(1) = treasurePrize[t2][0];
	tAmount(1) = treasurePrize[t2][1];
	tPrize(2) = treasurePrize[t3][0];
	tAmount(2) = treasurePrize[t3][1];
    for(new i; i < 3; i++)
    {
   		switch(tPrize(i))
	   	{
		   	case 1: tPrize(i) = randomEx(1184,1328);
		   	case 2: tPrize(i) = randomEx(810,1051);
		   	case 3: tPrize(i) = randomEx(1203,1253);
		   	case 4: tPrize(i) = randomEx(1052,1174);
		   	case 5:
		   	{
		   	    if(randomEx(1,2) == 1) tPrize(i) = 1202;
			   	else tPrize(i) = 809;
			}
		   	case 6: tPrize(i) = randomEx(764,790);
		   	case 7: tPrize(i) = randomEx(1374,1395);
		   	case 8:
   			{
   			    if(randomEx(1,2) == 1) tPrize(i) = randomEx(652,655);
   			    else tPrize(i) = randomEx(1396,1426);
			}
			case 9,10: tPrize(i) = randomEx(1, sizeof(ItemsInfo)-10);
		}
		if(!tAmount(i) || tAmount(i) != 1) tAmount(i) = randomEx(1,tAmount(i));
    }
    #include modules/TEXTDRAWS/red_interface/treasure
    PItreasure[playerid][tTD] = true;
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][6], ItemsInfo[tPrize(0)][ItemID]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][7], ItemsInfo[tPrize(2)][ItemPosX], ItemsInfo[tPrize(2)][ItemPosY], ItemsInfo[tPrize(2)][ItemPosZ], ItemsInfo[tPrize(2)][ItemPosC]);
    FixTextNew(ItemsInfo[tPrize(0)][ItemName], str_1);
	PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][9],"%s",str_1);
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][7], ItemsInfo[tPrize(1)][ItemID]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][10], ItemsInfo[tPrize(2)][ItemPosX], ItemsInfo[tPrize(2)][ItemPosY], ItemsInfo[tPrize(2)][ItemPosZ], ItemsInfo[tPrize(2)][ItemPosC]);
    FixTextNew(ItemsInfo[tPrize(1)][ItemName], str_1);
	PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][10],"%s",str_1);
   	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][8], ItemsInfo[tPrize(2)][ItemID]);
    PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][8], ItemsInfo[tPrize(2)][ItemPosX], ItemsInfo[tPrize(2)][ItemPosY], ItemsInfo[tPrize(2)][ItemPosZ], ItemsInfo[tPrize(2)][ItemPosC]);
    FixTextNew(ItemsInfo[tPrize(2)][ItemName], str_1);
	PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][11],"%s",str_1);
	for(new i; i < 21; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	return SelectTextDraw(playerid, 0x8D281EFF);
}
stock treasureHideTD(playerid,td=3)
{
	if(PItreasure[playerid][tTD] != false) return 1;
	if(td != 3)
	{
		if(tPrize(td))
		{
			InvAdd(playerid,tPrize(td),tAmount(td));
	  		SCMf(playerid, COLOR_YELLOW, "Вы взяли из клада: {FFFFFF}%s [количество: %i]", ItemsInfo[tPrize(td)][ItemName], tAmount(td));
		    tPrize(td) = 0;
		    tAmount(td) = 0;
		}
	}
	switch(td)
	{
		case 0:{
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][3]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][6]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][9]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][12]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][13]);
		}case 1:{
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][3+1]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][6+1]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][9+1]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][12+2]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][13+2]);
		}case 2:{
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][3+2]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][6+2]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][9+2]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][12+4]);
		    DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][13+4]);
		}default:{
		    SendAdminsMessagef(COLOR_RED, "<Warning> %s[%i] открыл %i клад", PN(playerid), playerid, PItreasure[playerid][tID]);
			PItreasure[playerid][tTD] = false;
			PItreasure[playerid][tID] = -1;
		    ClearAnimations(playerid);
		    CancelSelectTextDraw(playerid);
			for(new i; i < 21; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	return 1;
}
stock UpdateCardLevelPlayer(playerid, slot, level)
{
	if(GetPlayerUpdateCard[playerid] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} В данный момент вы уже в процессе улучшения видеокарты.");
	else if(!GetInvCount(playerid, 1201)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Для улучшения уровня видеокарты вам необходима смазка для видеокарты.");
	InvAdd(playerid, 1201, -1);
	TogglePlayerControllable(playerid, false);
	switch(random(3))
	{
		case 0: ApplyAnimation(playerid, !"SCRATCHING", !"SCMID_L", 4.1, 1, 1, 1, 1, 0, 1);
		case 1: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_REACT_MISS", 4.1, 1, 1, 1, 1, 0, 1);
		case 2: ApplyAnimation(playerid, !"CASINO", !"DEALONE", 4.1, 1, 1, 1, 1, 0, 1);
	}
	player_Global_Int[playerid][80] = slot;
	player_Global_Int[playerid][81] = level;
	GetPlayerUpdateCard[playerid] = true;
	return 1;
}
stock SaveMiningBTC(houseid)
{
	str_1 = "";
	for(new i; i < 20; i++)
	{
		str_2[0] = EOS, f(str_2, sizeof(str_2), "%i, %f, %i, %f, %i | ", MiningBTC[houseid][i][card_status], MiningBTC[houseid][i][card_balance], MiningBTC[houseid][i][card_level], MiningBTC[houseid][i][card_percent], MiningBTC[houseid][i][card_last_update]);
		strcat(str_1, str_2);
	}
	return mysql_pqueryf(mysql, "UPDATE `houses` SET `MainingCardData` = '%s' WHERE `ID` = '%i' LIMIT 1;", str_1, houseid);
}
stock GetMiningCard(playerid, hId, slot)
{
	if(!MiningBTC[hId][slot][card_level]) return 0;
	MiningBTC[hId][slot][card_balance] =
	MiningBTC[hId][slot][card_percent] = 0.0;
	MiningBTC[hId][slot][card_status] = false;
	InvAdd(playerid, 1136, 1, MiningBTC[hId][slot][card_level]);
	MiningBTC[hId][slot][card_level] = 0;
	return SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы достали видеокарту.");
}
stock GetMiningParams(level, Float:balance, Float:percent, &to_full, &time, &Float:perfect_BTC)
{
	to_full = floatround((2.0 - balance) / GetMiningBTC(level), floatround_ceil);
	time = floatround(percent / 0.448, floatround_ceil);
	perfect_BTC = floatround(float(time) * GetMiningBTC(level), floatround_floor);
	return 1;
}

stock ShowMiningDialogString(playerid, house, cardPos, listitem, const IntData[], Float:perfect_BTC)
{
	if(MiningBTC[house][cardPos][card_level])
	{
		if(MiningBTC[house][cardPos][card_status]) strcat(str_1, (str_f("\nПолка №%d | {B9DB9F}Работает\t%f BTC {B9DB9F}•{ffffff} |{B9DB9F} ~%dч\t%d уровень |{B9DB9F} %f/Час\t%.2f%%", listitem + 1, MiningBTC[house][cardPos][card_balance], IntData[0], MiningBTC[house][cardPos][card_level], GetMiningBTC(MiningBTC[house][cardPos][card_level]), MiningBTC[house][cardPos][card_percent])));
		else strcat(str_1, (str_f("\nПолка №%d | {D08D94}На паузе\t%f BTC {D08D94}•{ffffff} |{D08D94} ~%dч\t%d уровень |{D08D94} %f/Час\t%.2f%%", listitem + 1, MiningBTC[house][cardPos][card_balance], IntData[0], MiningBTC[house][cardPos][card_level], GetMiningBTC(MiningBTC[house][cardPos][card_level]), MiningBTC[house][cardPos][card_percent])));
		if(MiningBTC[house][cardPos][card_percent] > 0.0) strcat(str_1, (str_f(" {B9DB9F}- [~%d Час(ов)]{ffffff} | {8AC7E0}[~%.1f BTC]", IntData[1], perfect_BTC)));
		else strcat(str_1, " {D08D94}(!)");
	}
	else strcat(str_1, (str_f("\n{cccccc}Полка №%d | Свободна", listitem + 1)));
	return player_Global_Int[playerid][listitem] = cardPos;
}

stock ShowSheltMiningForPlayer(playerid, house, type = 0)
{
	str_1 = "", str_2 = "";
	if(house != -1)
	{
		new Float:perfect_BTC, IntData[2], AllCards, WorkCards, Float:FloatData[3];
		if(!type)
		{
			for(new i; i < 6; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.25, MiningBTCPos[i][0], MiningBTCPos[i][1], MiningBTCPos[i][2]))
				{
					if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Только владелец может установить видеокарту в своём подвале.");
					str_1 = "{FFFF00}Полка | Состояние\t{FFFF00}Прибыль (BTC)\t{FFFF00}Уровень видеокарты\t{FFFF00}Состояние системы охлаждения";
					if(!(i == 5))
					{
						for(new count = 0 + 4 * i; count < (0 + 4 * (i + 1)); count++)
						{
							GetMiningParams(MiningBTC[house][count][card_level], MiningBTC[house][count][card_balance], MiningBTC[house][count][card_percent], IntData[0], IntData[1], perfect_BTC);
							ShowMiningDialogString(playerid, house, count, count - 4*i, IntData, perfect_BTC);
							if(MiningBTC[house][count][card_level])
							{
								AllCards++;
								FloatData[0] += MiningBTC[house][count][card_balance];
								FloatData[2] += perfect_BTC;
								if(MiningBTC[house][count][card_status]) WorkCards++, FloatData[1] += GetMiningBTC(MiningBTC[house][count][card_level]);
							}
						}
						strcat(str_1, (str_f("\n \n{FFFF00}Информация\t{FFFF00}Доступно снять\t{FFFF00}Прибыль в час\t{FFFF00}Прибыль прогнозируемая\n{ffffff}Всего: %d | {B9DB9F}Работают %d", AllCards, WorkCards)));
						strcat(str_1, FloatData[0] > 0.0 ? (str_f("\t{B9DB9F}%f{ffffff} BTC", FloatData[0])):"\t0 BTC");
						strcat(str_1, FloatData[1] > 0.0 ? (str_f("\t{B9DB9F}%f{ffffff} BTC", FloatData[1])):"\t0 BTC");
						strcat(str_1, FloatData[2] > 0.0 ? (str_f("\t{8AC7E0}%.1f{ffffff} BTC", FloatData[2])):"\t0 BTC");
						strcat(str_1, "\n \n{B9DB9F}— Забрать всю прибыль");
						strcat(str_1, "\n{4ECA38}— Запустить все видеокарты");
						strcat(str_1, "\n{4BD673}— Залить Охлаждающую жидкость для видеокарт (По 50%%)");
						return SPD(playerid, 25033, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите видеокарту", str_1, !"Выбрать", !"Закрыть");
					}
					else
					{
						for(new count; count < 20; count++)
						{
							if(!(count % 4)) strcat(str_1, (str_f("%s{ffff00}Стойка №%d", count > 3 ? "\n \n":"\n", floatround(count / 4, floatround_ceil) + 1)));
							GetMiningParams(MiningBTC[house][count][card_level], MiningBTC[house][count][card_balance], MiningBTC[house][count][card_percent], IntData[0], IntData[1], perfect_BTC);
							ShowMiningDialogString(playerid, house, count, count % 4, IntData, perfect_BTC);
							if MiningBTC[house][count][card_level] *then
							{
								AllCards++;
								FloatData[0] += MiningBTC[house][count][card_balance];
								FloatData[2] += perfect_BTC;
								if(MiningBTC[house][count][card_status]) WorkCards++, FloatData[1] += GetMiningBTC(MiningBTC[house][count][card_level]);
							}
						}
						strcat(str_1, (str_f("\n \n{FFFF00}Информация\t{FFFF00}Доступно снять\t{FFFF00}Прибыль в час\t{FFFF00}Прибыль прогнозируемая\n{ffffff}Всего: %d | {B9DB9F}Работают %d", AllCards, WorkCards)));
						strcat(str_1, FloatData[0] > 0.0 ? (str_f("\t{B9DB9F}%f{ffffff} BTC", FloatData[0])):"\t0 BTC");
						strcat(str_1, FloatData[1] > 0.0 ? (str_f("\t{B9DB9F}%f{ffffff} BTC", FloatData[1])):"\t0 BTC");
						strcat(str_1, FloatData[2] > 0.0 ? (str_f("\t{8AC7E0}%.1f{ffffff} BTC", FloatData[2])):"\t0 BTC");
						return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Обзор всех видеокарт", str_1, !"Закрыть", !"");
					}
				}
			}
		}
	}
	return 1;
}
stock SaveCarsSalon()
{
	str_1[0] = EOS;
	for(new i; i < sizeof(ModelLimit); i++) f(str_1, sizeof(str_1), "%s%i,", str_1, MLVehCount[i]);
	return mysql_pqueryf(mysql, "UPDATE `config` SET `MLVehCount` = '%s' LIMIT 1;", str_1);
}
#define IsVehicleInRangeOfPoint(%0,%1,%2,%3,%4)\
	(%1 >= GetVehicleDistanceFromPoint(%0, %2, %3, %4))
stock SearchNearestVehicle(i)
{
    foreach(new j: OWNABLECARS)
	{
	    new carid = OwnableCar[j];
	    if(IsVehicleInRangeOfPoint(carid, 2.5, ModelLimit[i][vehX], ModelLimit[i][vehY], ModelLimit[i][vehZ]) && !IsASellCar(j)) return true;
	}
	return false;
}
stock AddCarsSalon(modelid = -1)
{
	CountForSpawn = 0;
	for(new i; i < sizeof(ModelLimit); i++)
	{
		IDforSpawn[i] = -1;
		if(SearchNearestVehicle(i) != 0) continue;
		if(modelid == -1)
		{
			if(!MLVehCount[i]) continue;
			IDforSpawn[CountForSpawn] = i;
			MLVehCount[i] = 0;
			CountForSpawn++;
		}
		else
		{
			if(ModelLimit[i][vehID] != modelid) continue;
			MLVehCount[i] = 0;
			CreateOwnableCar(ModelLimit[i][vehID], ModelLimit[i][vehX],ModelLimit[i][vehY], ModelLimit[i][vehZ], ModelLimit[i][vehA], "The State", 0);
			break;
		}
	}
	return 1;
}
//telephone
enum phoneinfo_color
{
	phoneItemID,
	phoneName[14]
};
static const PhoneInfo_color[][phoneinfo_color] = {
	{18866, "голубой"},
	{18874, "белый"},
	{18872, "синий"},
	{18871, "зеленый"},
	{18867, "красный"},
	{19513, "серый"},
	{18865, "оранжевый"},
	{18873, "золотой"},
	{18869, "розовый"},
	{18868, "черный"},
	{18870, "темно-красный"}
};
CMD:phone(playerid)
{
	if(!CheckPhones(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У Вас отсутствует мобильное устройство!");
	return SearchPhones(playerid);
}
stock SearchPhones(playerid)
{
	str_1 = "{FFFFFF}Мобильное устройство\t{FFFFFF}Цветовая гамма";
	new count;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(ItemsInfo[ PI[playerid][pInvItem][i] ][ItemView] != 11) continue;
		player_Global_Int[playerid][count] = PI[playerid][pInvItem][i];
		f(str_1, sizeof(str_1), "%s\n%s\t%s", str_1, ItemsInfo[ PI[playerid][pInvItem][i] ][ItemName], PhoneInfo_color[SearchColorForPhone(ItemsInfo[ PI[playerid][pInvItem][i] ][ItemID])][phoneName]);
		count++;
	}
	if(CheckPhones(playerid) > 1) SPD(playerid, 1000, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Телефоны | {ae433d}Телефоны", str_1, !"»", !"x");
	else UsePhone(playerid, player_Global_Int[playerid][0]);
	return 1;
}
stock SearchColorForPhone(itemid)
{
	for(new i; i < sizeof(PhoneInfo_color); i++) if(PhoneInfo_color[i][phoneItemID] == itemid) return i;
	return 10;
}
new PColor[] = {0x4286F4FF,0xEFF2F2FF,0x4169E1FF,0x008000FF,0xDC143CFF,0xC0C0C0FF,0xFF8C00FF,0xFFFF00FF,0xEE82EEFF,0x808080FF,0x800000FF};
stock CheckPhones(playerid)
{
	new j;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
	    new id = PI[playerid][pInvItem][i];
		if(ItemsInfo[id][ItemView] != 11) continue;
		j++;
	}
	return j;
}
stock UsePhone(playerid, phone)
{
    if(GetPVarType(playerid, !"telephone") != PLAYER_VARTYPE_NONE) return HidePhone(playerid);
	HideTextDraws(playerid);
	str_mes[0] = EOS,f(str_mes, sizeof(str_mes), "%s достал(а) %s из кармана", PN(playerid), ItemsInfo[phone][ItemName]);
	ProxDetector(25, playerid, str_mes, COLOR_ME);
	ApplyAnimation(playerid, "PED", "PHONE_TALK", 4.1, 0, 0, 1, 1, 20199475, 1);
	//strfind
	if(TextFind(ItemsInfo[phone][ItemName], "Xiaomi"))
	{
		SetPVarInt(playerid, !"telephone",1);
		if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1)
		{
			#include modules/TEXTDRAWS/phone/xiaomi
			for(new i; i < 82; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	else if(TextFind(ItemsInfo[phone][ItemName], "iPhone"))
	{
		SetPVarInt(playerid, !"telephone",2);
		if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1)
		{
			#include modules/TEXTDRAWS/phone/iphone
			for(new i; i < 82; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	else if(TextFind(ItemsInfo[phone][ItemName], "Samsung"))
	{
		SetPVarInt(playerid, !"telephone",3);
		if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1)
		{
			#include modules/TEXTDRAWS/phone/samsung
			for(new i; i < 90; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	else if(TextFind(ItemsInfo[phone][ItemName], "Huawei"))
	{
		SetPVarInt(playerid, "telephone",4);
		if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1)
		{
			#include modules/TEXTDRAWS/phone/huawei
			for(new i; i < 82; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	else if(TextFind(ItemsInfo[phone][ItemName], "Pixel"))
	{
		SetPVarInt(playerid, !"telephone",5);
		if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) == -1)
		{
			#include modules/TEXTDRAWS/phone/pixel
			for(new i; i < 81; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		}
	}
	else
	{
		SCM(playerid, -1, "error phone #9329");
		return 1;
	}
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		static const uid[] = {1,45,34,12,23};
		/*1 xiaomi 1
		12 Huawei P20 PRO 4
		23 pixel 5
		34 samsung 3
		45 iphone x 2*/
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"Phone\"]');");
		ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.phone.changePhoneBorder', '[%i]');", uid[GetPVarInt(playerid,!"telephone")-1]+SearchColorForPhone(ItemsInfo[ phone ][ItemID]));
		ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.phone.changePhoneBg', '[%i]');", PI[playerid][pPhoneBackground]);
		ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.phone.initializeServer', '[\"%s\"]');", ServerCFG[server_logo]);
		SetFocusBrowser(playerid, svelte, true);
	}
	else
	{
		UpdateTime(playerid);
		SelectTextDraw(playerid, -16776961);
	}
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 6)) SetPlayerAttachedObject(playerid, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
	return SetPVarInt(playerid,!"id_phone",phone);
}
stock HidePhone(playerid)
{
    if(GetPVarType(playerid, !"telephone") == PLAYER_VARTYPE_NONE) return 1;
	if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
	{
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]');");
		SetFocusBrowser(playerid, svelte, false);
		ClearAnimations(playerid);
		animan{playerid} = false;
		TextDrawHideForPlayer(playerid, StopAnimation);
		DeletePVar(playerid, !"P_SEAT_STATUS");
	}
	else
	{
		switch(GetPVarInt(playerid, !"telephone"))
		{
			case 1,2,4: for(new i; i < 82; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			case 3: for(new i; i < 90; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			case 5: for(new i; i < 81; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		}
		if(phone_2[playerid]) DestroyVKCoinsMenu(playerid);
		CancelSelectTextDraw(playerid);
	}
	str_mes[0] = EOS,f(str_mes, sizeof(str_mes), "%s убрал(а) %s из кармана", PN(playerid), ItemsInfo[GetPVarInt(playerid, !"id_phone")][ItemName]);
	ProxDetector(25, playerid, str_mes, COLOR_ME);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
	DeletePVar(playerid, !"id_phone");
	DeletePVar(playerid, !"telephone");
	return 1;
}
stock DestroyVKCoinsMenu(playerid)
{
    if(!phone_2[playerid]) return 1;
    switch(GetPVarInt(playerid, !"telephone"))
    {
	    case 1,4,5: for(new i; i < 23; i++) DestroyPlayerTD(playerid, vkcoin_menu[playerid][i]);
		case 2: for(new i; i < 22; i++) DestroyPlayerTD(playerid, vkcoin_menu[playerid][i]);
		case 3: for(new i; i < 25; i++) DestroyPlayerTD(playerid, vkcoin_menu[playerid][i]);
	}
	return phone_2[playerid] = false;
}
stock UpdateTime(playerid)
{
	if(GetPVarType(playerid, !"telephone") == PLAYER_VARTYPE_NONE) return 1;
	new hour, minuite;
   	gettime(hour,minuite,_);
	switch(GetPVarInt(playerid, !"telephone"))
    {
	    case 1: PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][53], "%02i:%02i", hour, minuite), PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][32], "%02i:%02i", hour, minuite);
		case 2: PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][54], "%02i:%02i", hour, minuite),PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][47], "%02i:%02i", hour, minuite);
		case 3: PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][68], "%02i:%02i", hour, minuite),PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][68], "%02i:%02i", hour, minuite);
		case 4: PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][53], "%02i:%02i", hour, minuite),PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][32], "%02i:%02i", hour, minuite);
		case 5: PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][54], "%02i:%02i", hour, minuite),PlayerTDSetStringf(playerid,GlobalTDPlayer[playerid][31], "%02i:%02i", hour, minuite);
	}
    return 1;
}
stock UpdateVisubleCoins(playerid)
{
	if(!phone_2[playerid]) return 1;
    switch(GetPVarInt(playerid,!"telephone"))
    {
		case 1,4,5: PlayerTDSetStringf(playerid, vkcoin_menu[playerid][14], "%.6f", PI[playerid][pVKCoins]);
		case 2: PlayerTDSetStringf(playerid, vkcoin_menu[playerid][13], "%.6f", PI[playerid][pVKCoins]);
		case 3: PlayerTDSetStringf(playerid, vkcoin_menu[playerid][16], "%.6f", PI[playerid][pVKCoins]);
	}
	return 1;
}
stock ShowDForBoost(playerid)
{
	new Float:Cena[7];
	for(new i; i < 7; i++) Cena[i] = PI[playerid][pVKBoost][i]*DefaultVKBoost[i][pboost];
	new Float:allboost = Cena[0]+Cena[1]+Cena[2]+Cena[3]+Cena[4]+Cena[5]+Cena[6];
    str_1[0] = EOS, f(str_1, sizeof(str_1), !"{FFFFFF}Всего: %.6f в сек. | {B1413D}VKoin",allboost);
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{FFFFFF}Переферия\t{FFFFFF}Текущее\t{FFFFFF}Опционально\t{FFFFFF}Цена\n{FFFFFF}Клик мышки\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
	{FFFFFF}Видеокарта\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
	{FFFFFF}Стойка видеокарт\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
	{FFFFFF}Суперкомпьютер\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
	{FFFFFF}Сервер\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
 	{FFFFFF}Квантовый компьютер\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin\n\
	{FFFFFF}Датацентр\t{f4f142}+%.6f {FFFFFF} |{B1413D}x%i\t{f4f142}+%.6f {FFFFFF}| {B1413D}x1\t{FFFFFF}%.6f {4E729A}VKoin",
	Cena[0],PI[playerid][pVKBoost][0],DefaultVKBoost[0][pboost],Cena[0]*100,Cena[1],PI[playerid][pVKBoost][1],DefaultVKBoost[1][pboost],Cena[1]*100,Cena[2],PI[playerid][pVKBoost][2],DefaultVKBoost[2][pboost],Cena[2]*100,Cena[3],PI[playerid][pVKBoost][3],DefaultVKBoost[3][pboost],Cena[3]*100,Cena[4],PI[playerid][pVKBoost][4],DefaultVKBoost[4][pboost],Cena[4]*100,Cena[5],PI[playerid][pVKBoost][5],DefaultVKBoost[5][pboost],Cena[5]*100,Cena[6],PI[playerid][pVKBoost][6],DefaultVKBoost[6][pboost],Cena[6]*100);
	return SPD(playerid, 25012, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_2, !"»", !"x");
}
public: VKCoinsList(playerid)
{
	for(new i; i < cache_num_rows(); i++)
	{
		static name[MAX_PLAYER_NAME];
		name[0] = EOS, cache_get_string(i, !"NickName", name);
		new Float:coins;
		cache_get_float(i, "VKCoins", coins);
		str_2[0] = EOS, f(str_2, sizeof(str_2), "{ffffff}%i \t %s \t %.6f\n",i+1, name, coins);
		strcat(str_1, str_2);
	}
	SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, (str_f("{FFFFFF}ТОП {f4f142}%s | {B1413D}VKoin", ServerCFG[server_logo])), str_1, !"«", !"");
    return 1;
}
stock ClickMouseBoost(playerid)
{
	if(GetPVarInt(playerid, !"coins2") > global_time) return 1;
	SetPVarInt(playerid, !"coins2", global_time + 1);
	PI[playerid][pVKCoins] += 0.0008;
	return UpdateVisubleCoins(playerid);
}
//carinfo
cmd:carsinfo(playerid)
{
	if(CheckAdmin(playerid,8,1)) return 1;
	return ShowCarsInfo(playerid,1);
}
stock ShowCarsInfo(playerid,page,plus=0)
{
	str_1[0] = EOS;
	PageItems[playerid] = page;
	if(page == 1) PlusItems[playerid] = plus*page;
	else PlusItems[playerid] = plus*page-50;
	new item, item1;
	if(50*page+211 >=sizeof(InfoConfigVehicle)) item = sizeof(InfoConfigVehicle)-1, item1 = 0;
	else item = 50*page+211, item1 = 1;
	for(new i = 211+PlusItems[playerid]; i < item;i ++) f(str_1,sizeof(str_1),"%s{FFFFFF}%s ( %i )\t \t \t %i\n", str_1, InfoConfigVehicle[SearchVehicleName(InfoConfigVehicle[i][Model_NEW])][Model_Name], InfoConfigVehicle[i][Model_NEW], InfoConfigVehicle[i][Velocity]);
	if(item1 == 1)
	{
		strcat(str_1,!"{FFD700}Следующая старница >>");
		if(PageItems[playerid] != 1) strcat(str_1,!"\n{FFD700}<< Предыдущая страница");
	}
	return SPD(playerid, 25050, DIALOG_STYLE_LIST, !"ShowCarsInfo", str_1, !"Добавить", !"Отмена");
}
//setadmtag
CMD:setadmtag(playerid, params[])
{
	if(CheckAdmin(playerid,7)) return 1;
	extract params -> new player:id, string:str[20]; else return SCM(playerid, COLOR_RED, !"Используйте: /setadmtag [ид] [тэг] (убрать = none)");
	if(!PI[id][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный игрок не администратор!");
 	SetString(PlayerTag[id], str);
 	UpdatePlayerDataStr(id, "PlayerTag", str);
    if(GetString(PlayerTag[id],"none")) SendAdminsMessagef(COLOR_RED,"[A] %s удалил тег администратору %s",PN(playerid), PN(id));
    else SendAdminsMessagef(COLOR_RED, "[A] %s установил тег администратору %s [ %s ]",PN(playerid), PN(id), str);
    return 1;
}
stock DestroyAttachVehicle(vehicleid, id)
{
	if(AttachVehicle[vehicleid][id] != -1)
	{
		DestroyDynamicObject(AttachVehicle[vehicleid][id]);
		AttachVehicle[vehicleid][id] = -1;
	}
	return 1;
}
stock SearchVehicleName(model)
{
	for(new i; i < sizeof InfoConfigVehicle; i++)
	{//Model_Name
		if(model >= 612 && InfoConfigVehicle[i][Model_NEW] == model) return i;
		if(model < 612 && InfoConfigVehicle[i][Model_OLD] == model) return i;
	}
    return 0;
}
stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = 5; 	// Up & Left key pressed
		else if(ud > 0) direction = 7; 	// Back & Left key pressed
		else            direction = 3;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = 6;  // Up & Right key pressed
		else if(ud > 0) direction = 8;     // Back & Right key pressed
		else			direction = 4;          // Right key pressed
	}
	else if(ud < 0) 	direction = 1; 	// Up key pressed
	else if(ud > 0) 	direction = 2;		// Down key pressed

	return direction;
}
stock MoveCamera(playerid)
{
 	new Float:FV[3], Float:CPP[3];
	GetPlayerCameraPos(playerid, CPP[0], CPP[1], CPP[2]);          // 	Cameras position in space
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);  //  Where the camera is looking at

	// Increases the acceleration multiplier the longer the key is held
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += 0.03;

	// Determine the speed to move the camera based on the acceleration multiplier
	new Float:speed = 100.0 * noclipdata[playerid][accelmul];

	// Calculate the cameras next position based on their current position and the direction their camera is facing
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CPP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

	// Store the last time the camera was moved as now
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
stock GetNextCameraPosition(move_mode, const Float:CPP[3], const Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
	switch(move_mode)
	{
		case 1:
		{
			X = CPP[0]+FV[0]*6000.0;
			Y = CPP[1]+FV[1]*6000.0;
			Z = CPP[2]+FV[2]*6000.0;
		}
		case 2:
		{
			X = CPP[0]-FV[0]*6000.0;
			Y = CPP[1]-FV[1]*6000.0;
			Z = CPP[2]-FV[2]*6000.0;
		}
		case 3:
		{
			X = CPP[0]-FV[1]*6000.0;
			Y = CPP[1]+FV[0]*6000.0;
			Z = CPP[2];
		}
		case 4:
		{
			X = CPP[0]+FV[1]*6000.0;
			Y = CPP[1]-FV[0]*6000.0;
			Z = CPP[2];
		}
		case 5:
		{
			X = CPP[0]+(-FV[0]*6000.0 - FV[1]*6000.0);
 			Y = CPP[1]+(-FV[1]*6000.0 + FV[0]*6000.0);
		 	Z = CPP[2]-FV[2]*6000.0;
		}
		case 6:
		{
			X = CPP[0]+(-FV[0]*6000.0 + FV[1]*6000.0);
 			Y = CPP[1]+(-FV[1]*6000.0 - FV[0]*6000.0);
		 	Z = CPP[2]-FV[2]*6000.0;
		}
		case 7:
		{
			X = CPP[0]+(FV[0]*6000.0  - FV[1]*6000.0);
			Y = CPP[1]+(FV[1]*6000.0  + FV[0]*6000.0);
			Z = CPP[2]+FV[2]*6000.0;
		}
		case 8:
		{
			X = CPP[0]+(FV[0]*6000.0  + FV[1]*6000.0);
			Y = CPP[1]+(FV[1]*6000.0  - FV[0]*6000.0);
			Z = CPP[2]+FV[2]*6000.0;
		}
	}
}
cmd:fly(playerid)
{
	if(CheckAdmin(playerid,5)) return 1;
	if(GetPVarInt(playerid,!"FlyMode")) SCM(playerid, COLOR_GREY, "Выберите один из пунктов, для того чтобы выйти с режим полета!"), SPD(playerid, 2000, DIALOG_STYLE_LIST, !"", !"Стандартное место\nНа место камеры", !"Выбор", !"");
	else
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		TogglePlayerSpectating(playerid, false);
		J_SetPlayerPos(playerid,X,Y,Z);
		noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);
		TogglePlayerSpectating(playerid, true);
		AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);
		SetPVarInt(playerid, !"FlyMode", 1);
		noclipdata[playerid][cameramode] = 1;
		SCM(playerid, COLOR_GREY, !"Режим полета активирован, для деактивации флая введите команду повторно!");
	}
	return 1;
}
stock GetSyncItem(playerid, itemid)
{
	if(IsPlayerLauncher(playerid) == -1)
	{
		switch(ItemsInfo[itemid][ItemView])
		{
			case 1..8: if(!IsValidObjectModel(ItemsInfo[itemid][ItemID])) return 371;
			case 9: if(ItemsInfo[itemid][ItemID] > 311) return 22;
			case 10:
			{
				if(ItemsInfo[itemid][ItemID] > 611)
				{
					for(new i; i < sizeof(InfoConfigVehicle); i++)
					{
						if(InfoConfigVehicle[i][Model_NEW] == -1) continue;
						if(InfoConfigVehicle[i][Model_NEW] == ItemsInfo[itemid][ItemID]) return InfoConfigVehicle[i][Model_OLD];
					}
				}
			}
		}
	}
	if(itemid == 74) return itemid = 0;
	return ItemsInfo[itemid][ItemID];
}
//new PlayerText:telephoneCallTD[MAX_PLAYERS][35];
stock ShowTextDrawPhoneCall(playerid)
{
    /*switch(GetPVarInt(playerid, !"telephone"))
    {
	    case 1:
		{
			//#include modules/TEXTDRAWS/phone/xiaomi_number
		}
		case 2:
		{
			#include modules/TEXTDRAWS/phone/iphone_number
		}
		case 3:
		{
			#include modules/TEXTDRAWS/phone/samsung_number
		}
		case 4:
		{
			#include modules/TEXTDRAWS/phone/huawei_number
		}
		case 5:
		{
			#include modules/TEXTDRAWS/phone/pixel_number
		}
	}*/
	return 1;
}
CMD:promo(playerid) return SPD(playerid,0,DIALOG_STYLE_MSGBOX,!"{FF9900}ТЫ ВЫИГРАЛ ПРОМОКОД!",(str_f("{FF9900}Приветствую тебя,счастливый игрок!\n\n\
	Специально для тебя мы создали промокод на {FFFFFF}Люкс-Кары/Донат-Рубли/Админку!\n\n\
	{FF9900}Выбирай,что хочешь получить:\n\n\
	{FFFFFF}`АДМИНКУ` {FF9900}- Заходи в нашу группу ВКонтакте(%s)\n\
	И сразу же пиши в лс группы `#ADMINKA` и дальше получай хелперку!\n\n\
	{FFFFFF}`ДОНАТ-РУБЛИ` {FF9900}- Заходи в нашу группу ВКонтакте(%s)\n\
	И сразу же пиши в лс группы `#DONATERUB` и дальше получай донат-монеты!\n\n\
	{FFFFFF}`ЛЮКС-КАРЫ` {FF9900}- Заходи в нашу группу ВКонтакте(%s)\n\
	И сразу же пиши в лс группы `#LUXECARS` и дальше получай админку\n\n\
	ПОСПЕШИ!!! Ведь скоро,промокоды перестанут действовать.", ServerCFG[server_group_vk], ServerCFG[server_group_vk], ServerCFG[server_group_vk])),!"Окей",!"Выход");
stock LoadContainer()
{
	new j, k, currenttime = GetTickCount();
	str_1[0] = EOS;
	for(new i ; i < sizeof(ContainerInfo); i++)
	{
		j = random(sizeof(ContainerTemp));
		k = random(sizeof(ContainerMatObject));
		SetString(ContainerInfo[i][ContName], ContainerTemp[j][ContName]);
		SetString(ContainerInfo[i][ContText], ContainerTemp[j][ContText]);
		SetString(ContainerInfo[i][ContObjectName], ContainerMatObject[k][ContObjectName]);
		SetString(ContainerInfo[i][ContObjectText], ContainerMatObject[k][ContObjectText]);
		ContainerInfo[i][ContObjectMaterial] = ContainerMatObject[k][ContObjectMaterial];
		ContainerInfo[i][ContType] = ContainerTemp[j][ContType];
		ContainerInfo[i][ContCost] = ContainerTemp[j][ContCost];
		ContainerInfo[i][ContID] = ContainerTemp[j][ContID];
		gContainer[i][gStatus] = 1;

		Conteinertext[i] = CreateDynamic3DTextLabel(!"",-1,ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]+1.2,10.0);
		PrizeCont[i] = CreateDynamic3DTextLabel(!"",-1,ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1]-3.7844, ContainerInfo[i][ContPos][2]+1.9535,5.0);
		ContainerPickup[i] = CreateDynamicPickup(1254, 23, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]);
		// Левая надпись
		ContainerMapText[i] = CreateDynamicObject(2789, ContainerMap[i][ContTextLeftPos][0], ContainerMap[i][ContTextLeftPos][1], ContainerMap[i][ContTextLeftPos][2], 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 2
		SetDynamicObjectMaterialText(ContainerMapText[i], 0, ContainerInfo[i][ContText], 130, "Impact", 120, 0, 0xFFFFFFFF, 0, 1);
		// Правая надпись
		ContainerMapText[i] = CreateDynamicObject(2789, ContainerMap[i][ContTextRightPos][0], ContainerMap[i][ContTextRightPos][1], ContainerMap[i][ContTextRightPos][2], 0.000000, 0.000000, 270.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 2
		SetDynamicObjectMaterialText(ContainerMapText[i], 0, ContainerInfo[i][ContText], 130, "Impact", 120, 0, 0xFFFFFFFF, 0, 1);
		// Левая часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapLeftPos][0], ContainerMap[i][ContMapLeftPos][1], ContainerMap[i][ContMapLeftPos][2], 0.000000, 0.000059, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Правая часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapRightPos][0], ContainerMap[i][ContMapRightPos][1], ContainerMap[i][ContMapRightPos][2], 0.000000, 0.000059, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Середня часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapMiddlePos][0], ContainerMap[i][ContMapMiddlePos][1], ContainerMap[i][ContMapMiddlePos][2], 0.000000, 89.999939, 179.999634, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Нижняя часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapDownPos][0], ContainerMap[i][ContMapDownPos][1], ContainerMap[i][ContMapDownPos][2], 0.000000, 90.000061, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Левая дверь
		ContainerLeftDoor[i] = CreateDynamicObject(19426, ContainerInfo[i][ContDoorLeftPos][0], ContainerInfo[i][ContDoorLeftPos][1], ContainerInfo[i][ContDoorLeftPos][2], 0.000059, 0.000000, 89.999817, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerLeftDoor[i], 0, 3564, "dockcargo2_las", "lastrk5", 0);
		// Правая дверь
		ContainerRightDoor[i] = CreateDynamicObject(19426, ContainerInfo[i][ContDoorRightPos][0], ContainerInfo[i][ContDoorRightPos][1], ContainerInfo[i][ContDoorRightPos][2], -0.000052, 540.000000, -89.999847, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerRightDoor[i], 0, 3564, "dockcargo2_las", "lastrk5", 0);
		ContainerAction(i, 0);
	}
	printf("LoadContainer загрузился за %i ms", GetTickCount() - currenttime);
	return 1;
}
stock RandomGetID(t)
{
	new cout;
	for(new i; i < 40 ; i++) if(ContainerRandom[t][ContMaxChance][i]) cout++;
	return cout;
}
stock RandomContainer(cont)
{
	new k, ID = ContainerInfo[cont][ContID], b = ContainerRandom[ID][ContMinChance][RandomGetID(ID) - 1], m = RandomGetID(ID) - 1;
	for(new i ; i < 6; i++)
	{
		k = randomEx(1, b - 1);
		for(new g; g < m; g++)
		{
			if(k >= ContainerRandom[ID][ContMinChance][g] && k <= ContainerRandom[ID][ContMaxChance][g] && ContainerRandom[ID][ContMinChance][g])
			{
				if(ContainerRandom[ID][ContMinValue][g] >= 1 && ContainerRandom[ID][ContMaxValue][g] == 1) gContainer[cont][gPrizeAmount][i] = randomEx(1, ContainerRandom[ID][ContMinValue][g] + 1);
				else if(ContainerRandom[ID][ContMinValue][g] == 1 && ContainerRandom[ID][ContMaxValue][g] == 1) gContainer[cont][gPrizeAmount][i] = ContainerRandom[ID][ContMaxValue][g];
				else if(ContainerRandom[ID][ContMinValue][g] >= 1 && ContainerRandom[ID][ContMaxValue][g] > 1) gContainer[cont][gPrizeAmount][i] = randomEx(ContainerRandom[ID][ContMinValue][g], ContainerRandom[ID][ContMaxValue][g] + 1);
				else gContainer[cont][gPrizeAmount][i] = ContainerRandom[ID][ContMinValue][g];
				gContainer[cont][gPrize][i] = ContainerRandom[ID][ContItem][g];
			}
		}
	}
	return 1;
}
stock GetContainerTakeDistance(playerid)
{
	new c_id = -1;
	for(new i; i < sizeof(ContainerInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1]-2.2787, ContainerInfo[i][ContPos][2]+1.0584))
		{
			c_id = i;
			break;
		}
	}
	return c_id;
}
stock GetContainerDistance(playerid)
{
	new c_id = -1;
	for(new d ; d < sizeof(ContainerInfo); d++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[d][ContPos][0], ContainerInfo[d][ContPos][1], ContainerInfo[d][ContPos][2]))
		{
			c_id = d;
			break;
		}
	}
	return c_id;
}
stock ContainerOpenTake(playerid, cont)
{
	if(ContainerTakeOpen[playerid] && gContainer[cont][gStatus] != 3 && gContainer[cont][gOwned] != PI[playerid][pID] && cont == -1) return 0;
	#include modules/TEXTDRAWS/ContainerTake
	for(new i ; i < 64; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][55], "%s", ContainerInfo[cont][ContText]);
	ContainerTakeOpen[playerid] = true;
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][1]);
	ContTakeOpen(playerid, cont);
	return 1;
}
stock ContainerCloseTake(playerid)
{
	if(!ContainerTakeOpen[playerid]) return 1;
	for(new i ; i < 64; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	ContainerTakeOpen[playerid] = false;
	CancelSelectTextDraw(playerid);
	return 1;
}
stock GiveItemContainer(playerid, ID, cont, Item)
{
    if(gContainer[cont][gOwned] != PI[playerid][pID]) return 1;
	if(gContainer[cont][gBlockSlot][ID] != false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Вы уже забрали данный приз!");
	Item_SelectID[playerid] = ID; // slot
	Item_Select[playerid] = cont; // id conta
	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}%s\n{FFFFFF}\nВы действительно желаете {869C71}забрать {FFFFFF}данный предмет?",GetItemInfo(playerid, Item));
	f(str_2, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[cont][ContName]);
	SPD(playerid, 83, 0, str_2, str_1, !"»", "x");
	return 1;
}
stock ContTextDrawText(playerid, cont)
{
	new d;
	for(new i ; i < 6; i++)
	{
	 	d = i + 6;
		if(gContainer[cont][gBlockSlot][i] != false) PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][d], 0xD0341BFF);
		else PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][d], 0x869C71FF);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][d]);
	}
	return 1;
}
stock ContTakeOpen(playerid, cont)
{
	new k, d, b;
	ContTextDrawText(playerid, cont);
	for(new i ; i < 6; i++)
	{
		k = gContainer[cont][gPrize][i], d = i + 6, b = gContainer[cont][gPrizeAmount][i];
		PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][d], "%s(%i)", FixText(ItemsInfo[k][ItemName]), b);
		PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[k][ItemID]);
		PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[k][ItemPosX], ItemsInfo[k][ItemPosY], ItemsInfo[k][ItemPosZ], ItemsInfo[k][ItemPosC]);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	return 1;
}
stock DestroyPickupEx(const id)
{
	if(!IsValidPickup(id)) return -1;
	return DestroyPickup(id);
}
stock ContainerOpen(playerid, cont)
{
	GiveBizMoney(playerid, gContainer[cont][gCash]/10);
	SCM(playerid, -1, !"{73B461}[Container-System] {FFFFFF}Вы открыли контейнер! Войдите в него для того, чтобы забрать приз");
	if(ContainerPickup[cont] != -1) DestroyDynamicPickupEx(ContainerPickup[cont]);
	ContainerPickup[cont] = CreateDynamicPickup(1254, 23, ContainerInfo[cont][ContPos][0], ContainerInfo[cont][ContPos][1]-2.2787, ContainerInfo[cont][ContPos][2]+1.0584);
	ContainerGateAction(cont, 1);
	for(new i; i < 6; i++) gContainer[cont][gBlockSlot][i] = false;
	gContainer[cont][gTime] = 0;
	gContainer[cont][gTimeDell] = 0;
	gContainer[cont][gTimeClose] = 300;
	gContainer[cont][gStatus] = 3;
	RandomContainer(cont);
	Container3dText(cont, gContainer[cont][gStatus]);
	return 1;
}
stock ContainerDialog(playerid, i)
{
	str_1[0] = EOS, f(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
	new id = requestUID(gContainer[i][gOwned]);
	switch( gContainer[i][gStatus] )
	{
		case 0:
		{
			if(!gContainer[i][gStatus]) format(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион закрыт:{FFFFFF} ( {FAAC58}%i:00{FFFFFF} ):\n- Последняя ставка\t{FAAC58}%s{FFFFFF}\n- Последняя сумма\t%s {FAAC58}%i\n{FF0000}Аукцион закрыт!", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ContainerTime,
			PN(id), ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		}
		case 1:
		{
			f(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион:{FFFFFF} ( {FAAC58}%s{FFFFFF} ):\n- Последняя ставка\t{FAAC58}%s{FFFFFF}\n- Последняя сумма\t%s {FAAC58}%i\n{73B461}Участвовать в аукционе", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], Convert(gContainer[i][gTime], true),
			PN(id), ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		}
		case 2:
		{
			f(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион завершен:{FFFFFF} ( {FAAC58}%s{FFFFFF} ):\n- Владелец\t{FAAC58}%s{FFFFFF}\n- Купил за\t%s {FAAC58}%i\n{73B461}Открыть контейнер", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], Convert(gContainer[i][gTimeDell], true),
			PN(id), ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		}
	}
	return SPD(playerid, 13000, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_2, "»", "x");
}
stock ContainerAction(cont, action)
{
	new hour, minute;
	gettime(hour, minute, _);
	if(hour <= 12 && minute <= 1) ContainerTime = 12;
	else if(hour >= 12 && hour <= 15 && minute <= 1) ContainerTime = 15;
	else if(hour >= 12 && hour >= 15 && hour <= 19 && minute <= 1) ContainerTime = 19;
	else ContainerTime = 12;
    switch(action)
    {
    	case 0:
    	{
    		if(gContainer[cont][gStatus] == 3) ContainerGateAction(cont, 0);
			if(ContainerPickup[cont] != -1) DestroyDynamicPickupEx(ContainerPickup[cont]);
			ContainerPickup[cont] = CreateDynamicPickup(1254, 23, ContainerInfo[cont][ContPos][0], ContainerInfo[cont][ContPos][1]-2.2787, ContainerInfo[cont][ContPos][2]+1.0584);
			gContainer[cont][gTime] = 0;
			gContainer[cont][gTimeClose] = 0;
			gContainer[cont][gStatus] = 1;
			gContainer[cont][gCash] = 0;
			gContainer[cont][gOwned] = -1;
			Container3dText(cont, gContainer[cont][gStatus]);
			for(new i ; i < 6; i++) gContainer[cont][gPrize][i] = 0, gContainer[cont][gPrizeAmount][i] = 0;
    	}
    	case 1: ContainerAuction(cont);
    }
	return 1;
}
stock ContainerGateAction(cont, sgate)
{
	switch(sgate)
	{
		case 0:
		{
			MoveDynamicObject(ContainerLeftDoor[cont], ContainerInfo[cont][ContDoorLeftPos][0], ContainerInfo[cont][ContDoorLeftPos][1], ContainerInfo[cont][ContDoorLeftPos][2], 0.5, 0.000059, 0.000000, 89.999817);
            MoveDynamicObject(ContainerRightDoor[cont], ContainerInfo[cont][ContDoorRightPos][0], ContainerInfo[cont][ContDoorRightPos][1], ContainerInfo[cont][ContDoorRightPos][2], 0.5, -0.000052, 540.000000, -89.999847);
		}
		case 1:
		{
        	MoveDynamicObject(ContainerLeftDoor[cont], ContainerInfo[cont][ContDoorLeftPosOpen][0], ContainerInfo[cont][ContDoorLeftPosOpen][1], ContainerInfo[cont][ContDoorLeftPosOpen][2], 0.5, 9.9999997473788e-05, 0, -36.960201263428);
            MoveDynamicObject(ContainerRightDoor[cont], ContainerInfo[cont][ContDoorRightPosOpen][0], ContainerInfo[cont][ContDoorRightPosOpen][1], ContainerInfo[cont][ContDoorRightPosOpen][2], 0.5, -9.9999997473788e-05, 540, 35.460201263428);
		}
	}
}
stock Container3dText(i, status)
{
	new id = requestUID(gContainer[i][gOwned]);
	switch(status)
	{
		case 0: fmt(str_1,"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Следующий аукцион:{FFFFFF}\n\n- %i:00",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ContainerTime);
		case 1: fmt(str_1,"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Аукцион {FFFFFF}( {FAAC58}%s {FFFFFF})\n\n- Последняя ставка: {FAAC58}%s\n{FFFFFF}- Последнаяя сумма: %s {FAAC58}%i",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], Convert(gContainer[i][gTime]), (id == -1 ? ("-") : PN(id)), ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash]);
		case 2: fmt(str_1,"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Аукцион завершен{FFFFFF}( {FAAC58}%s {FFFFFF})\n\n- Владелец: {FAAC58}%s\n{FFFFFF}- Приобрел за: %s {FAAC58}%i",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], Convert(gContainer[i][gTimeDell]), (id == -1 ? ("-") : PN(id)), ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash]);
		case 3:
		{
			fmt(str_1,"{FF0000}Контейнер закроется через{FFFFFF} ( {FAAC58}%s{FFFFFF} ):{FFFFFF}\n\n- Владелец: {FAAC58}%s{FFFFFF}\n- Приобрел за: %s {FAAC58}%i\n\n{FF0000}Призы:{FFFFFF}\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )", Convert(gContainer[i][gTimeClose], true),\
			PN(id), ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash], ItemsInfo[gContainer[i][gPrize][0]][ItemName], gContainer[i][gPrizeAmount][0], ItemsInfo[gContainer[i][gPrize][1]][ItemName], gContainer[i][gPrizeAmount][1], ItemsInfo[gContainer[i][gPrize][2]][ItemName],\
			gContainer[i][gPrizeAmount][2], ItemsInfo[gContainer[i][gPrize][3]][ItemName], gContainer[i][gPrizeAmount][3],ItemsInfo[gContainer[i][gPrize][4]][ItemName], gContainer[i][gPrizeAmount][4], ItemsInfo[gContainer[i][gPrize][5]][ItemName], gContainer[i][gPrizeAmount][5]);
		}
	}
	if(status == 3) UpdateDynamic3DTextLabelText(PrizeCont[i],-1,str_1), UpdateDynamic3DTextLabelText(Conteinertext[i],-1, "");
	else UpdateDynamic3DTextLabelText(Conteinertext[i],-1,str_1), UpdateDynamic3DTextLabelText(PrizeCont[i],-1, " ");
}
stock ContainerAuction(cont)
{
	gContainer[cont][gTime] = 300;
	gContainer[cont][gTimeDell] = 0;
	gContainer[cont][gTimeClose] = 0;
	gContainer[cont][gStatus] = 1;
	Container3dText(cont, gContainer[cont][gStatus]);
	return 1;
}
stock ContainerTimer()
{
	new ContHour, ContMinute, ContSecond;
	gettime(ContHour, ContMinute, ContSecond);
	for(new i ; i < sizeof(ContainerInfo); i++)
	{
		if(gContainer[i][gTime] > 0)
		{
			gContainer[i][gTime]--;
		    if(!gContainer[i][gTime] && gContainer[i][gOwned] == -1) ContainerAction(i, 0);
		    if(!gContainer[i][gTime] && gContainer[i][gOwned] != -1)
		   	{
		   		gContainer[i][gStatus] = 2;
		   		gContainer[i][gTimeDell] = 300;
		   		gContainer[i][gTime] = 0;
		   	}
			Container3dText(i, gContainer[i][gStatus]);
		}
		if(gContainer[i][gTimeClose] > 0)
		{
			gContainer[i][gTimeClose]--;
	     	if(!gContainer[i][gTimeClose]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
		}
		if(gContainer[i][gTimeDell] > 0)
		{
			gContainer[i][gTimeDell]--;
	     	if(!gContainer[i][gTimeDell]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
   		}
		if(gContainer[i][gTimeClose] > 0)
		{
			gContainer[i][gTimeClose]--;
	     	if(!gContainer[i][gTimeClose]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
   		}
		if(!gContainer[i][gStatus] && ContHour == ContainerTime && !ContMinute && !ContSecond) ContainerAction(i, 1);
	}
}
CMD:finditem(playerid, params[])
{
	if(CheckAdmin(playerid, 7,1)) return 1;
	new count;
	for(new i; i < sizeof(ItemsInfo); i++)
	{
		if(strfind(ItemsInfo[i][ItemName],params,true) == -1) continue;
		SCMf(playerid, -1, "Предмет: %s (ID: %d)", ItemsInfo[i][ItemName], i);
		count++;
	}
	if(!count) SCMf(playerid, COLOR_LIGHTRED, "[Информация] {ffffff}Предмет с названием \"%s\" не найден!", params);
	return 1;
}
stock SetSpawnPI(id, type)
{
	if(!IsPlayerConnectEx(id)) return 0;
	PI[id][pDCTime] = type;
	UpdatePlayerDataInt(id, "DCTime", type);
	return 1;
}
CMD:memberbonus(playerid)
{
	fmt(str_1, "{FFFFFF}Отыграно во фракции: {83BFBF}%i", PI[playerid][pFracBonus]);
	SPD(playerid, 1051, DIALOG_STYLE_TABLIST_HEADERS, str_1, "{FEFE22}№\t{FEFE22}Название приза\t{FEFE22}Часов\t{FEFE22}Статус\n\
	1\t50 AZ-RUB\t10\t{34C924}Забрать{FFFFFF}\n\
	2\t100 AZ-RUB\t20\t{34C924}Забрать{FFFFFF}\n\
	3\t150 AZ-RUB\t25\t{34C924}Забрать{FFFFFF}\n\
	4\t200 AZ-RUB\t30\t{34C924}Забрать{FFFFFF}\n\
	5\t250 AZ-RUB\t40\t{34C924}Забрать{FFFFFF}\n\
	6\t300 AZ-RUB\t50\t{34C924}Забрать{FFFFFF}\n\
	7\tУНИКАЛЬНАЯ VIP\t150\t{34C924}Забрать{FFFFFF}\n", "Выбрать", "Закрыть");
}
stock ShowDialogAutoInvite(playerid)
{
	str_1[0] = EOS;
	strcat(str_1, !"{FFFFFF}Фракция\n");
	for(new i = 1; i < MAX_ORGS; i++)
	{
		fmt(str_2, "{FFFFFF}%s\n", global_OrgInfo[i][g_oName]);
		strcat(str_1, str_2);
	}
	return SPD(playerid, 9997, DIALOG_STYLE_TABLIST_HEADERS, !"Авто-инвайт в организацию", str_1, !"Далее", !"Отмена");
}
CMD:makefulldostup(playerid, params[])
{
    if(!IsPlayerUnicalDostup(playerid))
	{
    	if(CheckAdmin(playerid, 8,4)) return 1;
    }
	extract params -> new player:id, lvl; else return SCM(playerid, COLOR_RED, !"Используй: /makefulldostup [id] [lvl(0-4)]");
	if(!IsPlayerUnicalDostup(playerid))
	{
		if(id == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Нельзя самому себе установить полномочия!");
		if(IsPlayerUnicalDostup(id)) return SCM(playerid, -1, !"клоун чи шо?");
    }
		
	if(PI[id][pAdmin] < 7 || lvl > 4 || lvl < 0) return 1;
	SCMf(playerid, COLOR_LIGHTBLUE, "Вы выдали игроку %s %i уровень полномочий", PN(id), lvl);
    SendAdminsMessagef(COLOR_RED, "[SetAccess] %s[%i] установил %i уровень полномочий игроку %s[%i] (был: %i ур)", PN(playerid), playerid, lvl, PN(id), id, PI[id][pAccessAdmin]);
	PI[id][pAccessAdmin] = lvl;
	UpdatePlayerDataInt(id, "AccessAdmin", PI[id][pAccessAdmin]);
	return 1;
}
alias:donaterub("adonate");
CMD:donaterub(playerid) ShowDonate(playerid, 1);
CMD:setpositiondefault(playerid)
{
	if(CheckAdmin(playerid, 8, 4)) return 1;
	new Cache:result = mysql_query(mysql, "SELECT * FROM `businessesdamp`");
	for(new i; i < cache_num_rows(); i++)
	{
		cache_get_float(i, "Enter_X", BizInfo[i][bEnter_X]);
		cache_get_float(i, "Enter_Y", BizInfo[i][bEnter_Y]);
 		cache_get_float(i, "Enter_Z", BizInfo[i][bEnter_Z]);
		UpdateDataFloat("businesses", "Enter_X", BizInfo[i][bEnter_X], BizInfo[i][bID], 1);
    	UpdateDataFloat("businesses", "Enter_Y", BizInfo[i][bEnter_Y], BizInfo[i][bID], 1);
    	UpdateDataFloat("businesses", "Enter_Z", BizInfo[i][bEnter_Z], BizInfo[i][bID], 1);
	}
	return cache_delete(result);
}
CMD:disablenalog(playerid)
{
	if(CheckAdmin(playerid, 8, 2)) return 1;
	DisableNalog = !DisableNalog;
	if(DisableNalog) SendAdminsMessagef(COLOR_GREY, "[A] %s выключил налоги на имущество.",PN(playerid));
	else SendAdminsMessagef(COLOR_GREY, "[A] %s включил налоги на имущество.",PN(playerid));
	return 1;
}
stock SetPlayerVisualGangZone(playerid,Float:x1, Float:y1)
{
	if(IsPlayerZone[playerid]) return 1;
	IsPlayerZone[playerid] = true;
	new random_x = randomEx(200,400),
		random_y = randomEx(400,800);
	x1 = x1-random_x;
	y1 = y1-random_x;
	new Float:z1 = x1+random_y;
	new Float:a1 = y1+random_y;
	new BitStream:bs = BS_New();
    BS_WriteValue(bs, PR_UINT16, PlayerGangZoneID[playerid], PR_FLOAT, x1, PR_FLOAT, y1, PR_FLOAT, z1, PR_FLOAT, a1, PR_UINT32, 0xfd0000AA);
    PR_SendRPC(bs, playerid, 108);
    BS_Delete(bs);

	new BitStream:bs2 = BS_New();
    BS_WriteValue(bs2, PR_UINT16, PlayerGangZoneID[playerid], PR_UINT32, 0xFF1493AA);
    PR_SendRPC(bs2, playerid, 121);
    BS_Delete(bs2);
	IsPlayerZoneTime{playerid} = 60;
	return 1;
}
stock SearchFreeCellForWallet(playerid)
{
	for(new i=11; i >= 0; i--) if(!PI[playerid][pInvWallet][i]) return i;
	return -1;
}
stock UpdateCellForWallet(playerid, slot = -1)
{
	if(slot == -1)
	{
		for(new i; i < 12; i++) UpdateTextDrawForWallet(playerid, i);
	}
	else UpdateTextDrawForWallet(playerid, slot);
	return 1;
}
stock UpdateTextDrawForWallet(playerid, i)
{
	new ID = PI[playerid][pInvWallet][i];
	PlayerTextDrawSetString(playerid, GlobalTDPlayer[playerid][17+i], "_");
	PlayerTextDrawSetPreviewModel(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[ID][ItemID]);
	PlayerTextDrawSetPreviewRot(playerid, GlobalTDPlayer[playerid][i], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
}
stock HideInventWallet(playerid,bool:inv=false)
{
	if(!InventWallet[playerid]) return 1;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(i < 19) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		PI[playerid][pInvItemLock][i] = false;
		if(inv) InvSlotUpdate(playerid,i);
	}
	InventWallet[playerid] = false;
	PI[playerid][pInvPos_X] = GetPVarFloat(playerid, "InvPos_X");
	PI[playerid][pInvPos_Y] = GetPVarFloat(playerid, "InvPos_Y");
	DeletePVar(playerid, !"InvPos_X");
	DeletePVar(playerid, !"InvPos_Y");
	if(inv) UpdateInventory(playerid, true);
	return 1;
}
stock FamMoneySklad(playerid)
{
	SPD(playerid, 5004, DIALOG_STYLE_INPUT, !"",
   !"\
        \n\n\
        {FFFFFF}Введите количество{C5D0FF} денег{FFFFFF}, которые хотите положить\n\
        на склад семейной квартиры.\n\n\
        Об вашем пополнении узнает вся семья.\n\
        Деньги семьи можно будет потратить на различные{E3BC6B} улучшения{FFFFFF}!\n\n\
	",
	!"Принять",
	!"Отмена");
	return true;
}
stock FamMoneySklad2(playerid) return SPD(playerid, 5005, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите количество{C5D0FF} денег{FFFFFF}, которые хотите взять\nна складе семейной квартиры.\n\n", !"Принять", !"Отмена");
stock UpdateFamHouse(famhouseid)
{
    if(FamilyHouse[famhouseid][fhOwnerID] == -1)
    {
		str_1[0] = EOS, f(str_1, sizeof(str_1), "\
			Семейная квартира\n\
			Стоимость: {87EB7F}%i репутации\n\
			{FFFFFF}Статус: %s\
		",FamilyHouse[famhouseid][fhCost], (!FamilyHouse[famhouseid][fhStatus]) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
    }
    else
    {
		new id = -1;
		for(new i; i < TOTAL_FAMILYS; i++) 
		{
			if(FamilyHouse[famhouseid][fhOwnerID] == FamilyInfo[i][famID]) 
			{
				id = i;
				break;
			}
		}
		if(id == -1) return printf("familyhouse(%i) debug #1029", famhouseid);
		str_1[0] = EOS, f(str_1, sizeof(str_1), "\
			Семейная квартира\n\
			Владелец: {56A351}%s\n\
			{FFFFFF}Статус: %s\
		",FamilyInfo[id][famName], (!FamilyHouse[famhouseid][fhStatus]) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
    }
	if(!IsValidDynamic3DTextLabel(FamHouseText[famhouseid])) FamHouseText[famhouseid] = CreateDynamic3DTextLabel(str_1, -1, FamilyHouse[famhouseid][fh_Enter_X], FamilyHouse[famhouseid][fh_Enter_Y], FamilyHouse[famhouseid][fh_Enter_Z], 5.0);
	else UpdateDynamic3DTextLabelText(FamHouseText[famhouseid], -1, str_1);
	return 1;
}
stock CheckFamilyHouse(playerid)
{
	if(PI[playerid][pFamilyMember] == -1) return 0;
    if(FamilyInfo[pFamilyID(playerid)][famHouse] != -1)
    {
        if(FamilyInfo[pFamilyID(playerid)][famRep] >= 10) FamilyInfo[pFamilyID(playerid)][famRep] -= 5;
        else
        {
		    SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Новости Семьи]{FFFFFF} Из - за маленького количества репутаций, семейная квартира была продана", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]]);
		    FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus] = false;
		 	TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "StatusLock", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhStatus], "d");
			FamilyInfo[PI[playerid][pFamilyMember][famHouse]][fhOwnerID] = -1;
			TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Owner", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhOwnerID], "i");
			FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0] = 0;
			TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Health", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][0], "d");
			FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1] = 0;
			TSave(FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID], "familyhouses", "Armour", FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhUpgrade][1], "d");
			UpdateFamHouse(FamilyInfo[pFamilyID(playerid)][famHouse]);
			FamilyInfo[pFamilyID(playerid)][famHouse] = -1;
			TSave(FamilyInfo[pFamilyID(playerid)][famID], "familys", "house", FamilyInfo[pFamilyID(playerid)][famHouse], "d");
        }
    }
    return true;
}
public: LoadFamilyHouses()
{
	new currenttime = GetTickCount();
	FamilyHouses = cache_num_rows();
	for(new i; i < FamilyHouses; i++) LoadOwnableFamilyHouse(i, i);
	printf("LoadFamilyHouses(%i) загрузился за %i ms", FamilyHouses, GetTickCount() - currenttime);
	return 1;
}
public: LoadStartBonus()
{
    new currenttime = GetTickCount(), rows;
	rows = cache_num_rows();

	if(rows)
	{
 		cache_get_int(0, "bonus_level", LVLBONUS);
		cache_get_int(0, "bonus_money", MONEYBONUS);
		cache_get_int(0, "bonus_donate", DONATEBONUS);
	}

    printf("LoadStartBonus(%i) загрузился за %i ms", rows, GetTickCount() - currenttime);
	return 1;
}
stock LoadOwnableFamilyHouse(i, id)
{
    cache_get_int(i, !"ID", FamilyHouse[id][fhID]);
	cache_get_int(i, !"OwnerID", FamilyHouse[id][fhOwnerID]);
    cache_get_int(i, !"Cost", FamilyHouse[id][fhCost]);
	cache_get_int(i, !"StatusLock", FamilyHouse[id][fhStatus]);
	str_2[0] = EOS, cache_get_string(0, !"Upgrade", str_2), sscanf(str_2, "p<,>a<i>[2]", FamilyHouse[id][fhUpgrade]);
    //на будущее str_2[0] = EOS, cache_get_string(0, !"UpgradeChar", str_2), sscanf(str_2, "p<,>a<i>[2]", FamilyHouse[id][fhUpgrade]);
	cache_get_float(i, "X", FamilyHouse[id][fh_Enter_X]);
    cache_get_float(i, "Y", FamilyHouse[id][fh_Enter_Y]);
    cache_get_float(i, "Z", FamilyHouse[id][fh_Enter_Z]);
	UpdateFamHouse(id);
	famHousePickUp[id] = CreateDynamicPickup(19132, 23, FamilyHouse[id][fh_Enter_X], FamilyHouse[id][fh_Enter_Y], FamilyHouse[id][fh_Enter_Z], -1, -1);
}
CMD:buyfam(playerid)
{
    if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(GetString(FamilyInfo[pFamilyID(playerid)][famSlogan], "default")) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	if(IsPlayerAccessFamily(playerid) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не лидер в семье!");
    if(FamilyInfo[pFamilyID(playerid)][famHouse] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи уже есть семейная квартира!");
	new i = GetPVarInt(playerid, !"TempPickup");
	if(GetPVarType(playerid, !"TempPickup") == PLAYER_VARTYPE_NONE) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не возле семейной квартиры!");
    if(FamilyHouse[i][fhOwnerID] != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта квартира принадлежит другой семье!");
   	if(FamilyInfo[pFamilyID(playerid)][famRep] < FamilyHouse[i][fhCost]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи недостаточно репутации для покупки этой квартиры!");
   	FamilyInfo[pFamilyID(playerid)][famHouse] = FamilyHouse[i][fhID];
   	FamilyInfo[pFamilyID(playerid)][famRep] -= FamilyHouse[i][fhCost];
	mysql_pqueryf(mysql, "UPDATE `familys` SET `house` = '%i', `rep` = '%i' WHERE `ID` = '%i' LIMIT 1;",FamilyInfo[pFamilyID(playerid)][famHouse],FamilyInfo[pFamilyID(playerid)][famRep],PI[playerid][pFamilyMember]);
	FamilyHouse[i][fhOwnerID] = FamilyInfo[pFamilyID(playerid)][famID];
	UpdateFamHouse(i);
	mysql_pqueryf(mysql, "UPDATE `familyhouses` SET `OwnerID` = '%i' WHERE `ID` = '%i' LIMIT 1;", FamilyInfo[pFamilyID(playerid)][famID], FamilyHouse[i][fhID]);
	return SendFamilyMessagef(PI[playerid][pFamilyMember], "{%s}[Семья (Новости)] %s[%i]:{B9C1B8} приобрел семейную квартиру", FamilyChatColor[FamilyInfo[pFamilyID(playerid)][famChatColor]], PN(playerid), playerid);
}
CMD:change_password(playerid, params[])
{
	if(CheckAdmin(playerid,8,4)) return 1;
	extract params -> new string:str[24]; else return SCM(playerid,-1,!"/change_password [пароль]");
	str_1[0] = EOS, mysql_escape_string(str, str_1);
	SetString(CodeCheckDostup, str_1);
	str_1[0] = EOS;
	if(!GetString(str,"0"))
	{
		f(str_1, sizeof str_1, "[A] %s[%i] установил пароль на сервер", PN(playerid), playerid);
		mysql_tqueryf(mysql, "UPDATE `config` SET `password` = '%s', `TexRestart` = '1' LIMIT 1;", CodeCheckDostup);
	}
	else 
	{
		foreach_player(i)
		{
			if(IsPlayerLogged[i] != false) continue;
			Autorisation(i);
		}
		f(str_1, sizeof str_1, "[A] %s[%i] снял пароль с сервер", PN(playerid), playerid);
		mysql_tqueryf(mysql, "UPDATE `config` SET `password` = '%s', `TexRestart` = '0' LIMIT 1;", CodeCheckDostup);
	}
	SendAdminsMessage(0x999999FF, str_1);
	return 1;
}
stock ShowCheckPassword(playerid)
{
	SPD(playerid, 2394, DIALOG_STYLE_PASSWORD, !"{FFFFFF}Аутентификация", !"{FFFFFF}Введите пароль от сервера\nАвторизация/Регистрация автоматически появится при {FFCD00}СНЯТИИ {FFFFFF}пароля!", !"Далее", !"");
	return SCM(playerid,0xFFCD00FF,!"Авторизация/Регистрация появится автоматически при СНЯТИИ пароля!");
}
CMD:guatrdika_tridzka(playerid)
{
	if(!PI[playerid][pGuardMode]) PI[playerid][pGuardMode] = true, SCM(playerid, -1, !"Гуард от тRiаzOvа активейтет");
	else PI[playerid][pGuardMode] = false, SCM(playerid, -1, !"Гуард от тRiаzOvа деактивейтет");
}
CMD:giveruball(playerid, params[])
{
	if(CheckAdmin(playerid,8,1)) return 1;
	if(OpenCharity != -1) return SCM(playerid,-1,!"Раздача уже идёт!");
	extract params -> new count, count2; else return SCM(playerid, COLOR_RED, !"Используй: /giveruball [count rub] [count players]");
	if(count > 2000) return SCM(playerid, COLOR_RED, !"Используй: /giveruball [> 2000] [count players]");
	if(count2 > 50) return SCM(playerid, COLOR_RED, !"Используй: /giveruball [count rub] [> 50]");
	if(Iter_Count(Player) < 15) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выдавать что-то всем, пока онлайн ниже 15!");
	foreach_player(i) PlayerUsedCharity[i] = false;
	mysql_pquery(mysql, "UPDATE `accounts` SET `PlayerUsedCharity` = '0' WHERE 1");
	OpenCharity = 1,CountCharity = count,Count2Charity = count2;
	SCMAll(0x666699FF, (str_f("А: %s[%i] запустил раздачу /takerub на %i AZ-Rubles для первых %i игроков!",PN(playerid), playerid, count, count2)));
	SCMAll(-1, !"УСПЕЙ ВВЕСТИ /TAKERUB {9999FF}<<<");
	return 1;
}
CMD:givehoursall(playerid, params[])
{
	if(CheckAdmin(playerid,8,1)) return 1;
	if(OpenCharity != -1) return SCM(playerid,-1,!"Раздача уже идёт!");
	extract params -> new count, count2; else return SCM(playerid, COLOR_RED, !"Используй: /givehoursall [count rub] [count players]");
	if(count > 10) return SCM(playerid, COLOR_RED, !"Используй: /givehoursall [> 10] [count players]");
	if(count2 > 50) return SCM(playerid, COLOR_RED, !"Используй: /givehoursall [count rub] [> 50]");
	if(Iter_Count(Player) < 15) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выдавать что-то всем, пока онлайн ниже 15!");
	foreach_player(i) PlayerUsedCharity[i] = false;
	mysql_pquery(mysql, "UPDATE `accounts` SET `PlayerUsedCharity` = '0' WHERE 1");
	OpenCharity = 2,CountCharity = count,Count2Charity = count2;
	SCMAll(0x666699FF, (str_f("А: %s[%i] запустил раздачу /takeminute на %i ЧАСОВ для первых %i игроков!",PN(playerid), playerid, count, count2)));
	SCMAll(-1, !"УСПЕЙ ВВЕСТИ /TAKEMINUTE {9999FF}<<<");
	return 1;
}
CMD:givecoinsall(playerid, params[])
{
	if(CheckAdmin(playerid,8,1)) return 1;
	if(OpenCharity != -1) return SCM(playerid,-1,!"Раздача уже идёт!");
	extract params -> new count, count2; else return SCM(playerid, COLOR_RED, !"Используй: /givecoinsall [count coins] [count players]");
	if(count > 1000000) return SCM(playerid, COLOR_RED, !"Используй: /givecoinsall [> 1000000] [count players]");
	if(count2 > 50) return SCM(playerid, COLOR_RED, !"Используй: /givehoursall [count rub] [> 50]");
	if(Iter_Count(Player) < 15) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выдавать что-то всем, пока онлайн ниже 15!");
	foreach_player(i) PlayerUsedCharity[i] = false;
	mysql_pquery(mysql, "UPDATE `accounts` SET `PlayerUsedCharity` = '0' WHERE 1");
	OpenCharity = 3, CountCharity = count, Count2Charity = count2;
	SCMAll(0x666699FF, (str_f("А: %s[%i] запустил раздачу /takecoins на %i AZ-COINS для первых %i игроков!",PN(playerid), playerid, count, count2)));
	SCMAll(-1, !"УСПЕЙ ВВЕСТИ /TAKECOINS {9999FF}<<<");
	return 1;
}
CMD:takerub(playerid)
{
	if(OpenCharity == -1 || PlayerUsedCharity[playerid] == true || !Count2Charity) return SCM(playerid, COLOR_VALIK, !"[Информация]{ffffff} Кол-во использованных призов закончилось или вы уже забрали этот приз!");
	if(OpenCharity != 1) return SCM(playerid,COLOR_RED,!"/takeminute");
	PlayerUsedCharity[playerid] = true;
	UpdatePlayerDataInt(playerid, "PlayerUsedCharity", PlayerUsedCharity[playerid]);
	GiveDonateRub(playerid,CountCharity);
	SCM(playerid, COLOR_VALIK, (str_f("[Информация]{ffffff}Вы забрали AZ-RUBLES в количестве %i", CountCharity)));
	SCMAll(0x666699FF, (str_f("Счастливчик %s{FFFFFF}, успел забрать /takerub, осталось ещё %i {666699}<<<",PN(playerid), Count2Charity-1)));
	Count2Charity--;
	if(!Count2Charity)
	{
		OpenCharity = -1;
		SCMAll(0x9999FFFF, "ПРИЗЫ В /TAKERUB ЗАКОНЧИЛИСЬ! {FFFFFF}Приятной игры! {9999FF}<<<");
	}
	return 1;
}
CMD:takeminute(playerid)
{
	if(OpenCharity == -1 || PlayerUsedCharity[playerid] == true || !Count2Charity) return SCM(playerid, COLOR_VALIK, !"[Информация]{ffffff} Кол-во использованных призов закончилось или вы уже забрали этот приз!");
	if(OpenCharity != 2) return SCM(playerid,COLOR_RED,!"/takerub");
	PlayerUsedCharity[playerid] = true;
	UpdatePlayerDataInt(playerid, "PlayerUsedCharity", PlayerUsedCharity[playerid]);
	player_BonusMinute[playerid] += CountCharity;
	SCM(playerid, COLOR_VALIK, (str_f("[Информация]{ffffff}Вы забрали минуты в количестве %i", CountCharity)));
	SCMAll(0x666699FF, (str_f("Счастливчик %s{FFFFFF}, успел забрать /takeminute, осталось ещё %i {666699}<<<",PN(playerid), Count2Charity-1)));
	Count2Charity--;
	if(!Count2Charity)
	{
		OpenCharity = -1;
		SCMAll(0x9999FFFF, "ПРИЗЫ В /TAKEMINUTE ЗАКОНЧИЛИСЬ! {FFFFFF}Приятной игры! {9999FF}<<<");
	}
	return 1;
}
CMD:takecoins(playerid)
{
	if(OpenCharity == -1 || PlayerUsedCharity[playerid] == true || !Count2Charity) return SCM(playerid, COLOR_VALIK, !"[Информация]{ffffff} Кол-во использованных призов закончилось или вы уже забрали этот приз!");
	if(OpenCharity != 3) return SCM(playerid,COLOR_RED,!"/takecoins неактивна");
	PlayerUsedCharity[playerid] = true;
	UpdatePlayerDataInt(playerid, "PlayerUsedCharity", PlayerUsedCharity[playerid]);
	GiveDonate(playerid,CountCharity);
	SCM(playerid, COLOR_VALIK, (str_f("[Информация]{ffffff}Вы забрали AZ-COINS в количестве %i", CountCharity)));
	SCMAll(0x666699FF, (str_f("Счастливчик %s{FFFFFF}, успел забрать /takecoins, осталось ещё %i {666699}<<<",PN(playerid), Count2Charity-1)));
	Count2Charity--;
	if(!Count2Charity)
	{
		OpenCharity = -1;
		SCMAll(0x9999FFFF, "ПРИЗЫ В /TAKECOINS ЗАКОНЧИЛИСЬ! {FFFFFF}Приятной игры! {9999FF}<<<");
	}
	return 1;
}
CMD:bugreport(playerid, get[])
{
	extract get -> new string:str[127]; else return SCM(playerid, 0xCECECEFF, !"Используй: /bugreport [информация об ошибке]");
	if(GetPVarInt(playerid,!"bugreport")>global_time) return SCMf(playerid,0xCECECEFF,"Отправлять сообщения в bugreport, можно через %i секунд!",GetPVarInt(playerid,!"bugreport")-global_time);
	SCM(playerid, 0xFFFFFFFF, !"Ваше сообщение отправлено, если ваше обращение поможет...");
	SCM(playerid, 0xFFFFFFFF, !"...улучшить сервер, то вы будете вознаграждены!");
	SetPVarInt(playerid,!"bugreport",global_time+120);
	str_1[0] = EOS, mysql_escape_string(str, str_1);
	mysql_tqueryf(mysql,"INSERT INTO `bugreport` (`bug_name`, `bug_text`, `bug_date`) VALUES ('%s', '%s', '%i');",PN(playerid),str_1,global_time);
	return 1;
}
stock UpdateLabelMedic(id, create = 0)
{
    if(create == 1)
    {
        for(new i; i < 3; i++) MedicLabel[i] = Create3DTextLabel("", 0xFFFFFFFF, 668.0339, -1246.1948, 1024.4080, 10.0000, i+1, 0);
    }
    switch(id)
    {
        case 0: f(str_2, sizeof(str_2), "Склад больницы.\nВ наличии: {F58E8E}%i{F0F0F0} медикаментов.",OrgInfo[TEAM_MEDICLS][oItemCount][0]);
        case 1: f(str_2, sizeof(str_2), "Склад больницы.\nВ наличии: {F58E8E}%i{F0F0F0} медикаментов.",OrgInfo[TEAM_MEDICSF][oItemCount][0]);
        case 2: f(str_2, sizeof(str_2), "Склад больницы.\nВ наличии: {F58E8E}%i{F0F0F0} медикаментов.",OrgInfo[TEAM_MEDICLV][oItemCount][0]);
    }
    return Update3DTextLabelText(MedicLabel[id], 0xFFFFFFFF, str_2);
}
stock DeleteAirDrop()
{
	if(AirDropOpen == -1) return 1;
	for(new i; i < 2; i++) if(AirDropObject[i] != -1) DestroyDynamicObject(AirDropObject[0]),AirDropObject[0] = -1;
	if(AirDropText != Text3D:-1) DestroyDynamic3DTextLabel(AirDropText), AirDropText = Text3D:-1;
	AirDropTimer = 0;
	AirDropOpen = -1;
	return 1;
}
CMD:map(playerid)
{
	if(CheckAdmin(playerid, 8,1)) return 1;
	return SCM(playerid,-1,!"test");
	/*return SPD(playerid, 7797, DIALOG_STYLE_LIST, !"Admin Mapping", "\
	- создать объект\n\
	- группы\n\
	- выбрать объект курсором\n\
	- список моих объектов\n\
	- список всех объектов\n\
	- удаление\n\
	{F4D048}Help: /map, /mapg, /mapobj", !"Выбрать", !"Закрыть");*/
}
CMD:createairdrop(playerid)
{
	if(CheckAdmin(playerid, 8,1)) return 1;
	return CreateAirDrop();
}
stock CreateAirDrop()
{
	DeleteAirDrop();
	AirDropTimer = 600;
	AirDropOpen = random(sizeof(AirDropPosition));
	for(new i; i < 2; i++) if(AirDropObject[i] != -1) DestroyDynamicObject(AirDropObject[i]),AirDropObject[i] = -1;
	if(AirDropText != Text3D:-1) DestroyDynamic3DTextLabel(AirDropText), AirDropText = Text3D:-1;
	AirDropObject[0] = CreateDynamicObject(18849,AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2]+6.4,0,0,180);
	AirDropObject[1] = CreateDynamicObject(18728,AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2]-2.5,0,0,180);
	AirDropText = CreateDynamic3DTextLabel(!"Груз контрабанды\nИспользуйте {b4e600}ALT{FFFFFF} для\nпросмотра содержимого!", 0xFFFFFFFF,AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2],10.0);
	for(new i; i < 6; i++)
	{
		AirDropItem[i] = random(6);
		switch(AirDropItem[i])
		{
			case 0: AirDropItemAmount[i] = random(500);
			case 1: AirDropItemAmount[i] = random(150);
			case 2: AirDropItemAmount[i] = random(500000);
			case 3: AirDropItemAmount[i] = random(500);
			case 4,5: AirDropItemAmount[i] = randomEx(1177,1200);
		}
	}
	foreach_player(i)
	{
		if(IsAtGang(i))
		{
			SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Груз контрабанды упал, заберите содержимое груза первым!");
			SCM(i, 0xb4e600FF, !"[AIR-DROP] {FFFFFF}Метка груза установлена, через 2 минуты информация о грузе будет слита!");
			EnableGPSForPlayer(i, AirDropPosition[AirDropOpen][0],AirDropPosition[AirDropOpen][1],AirDropPosition[AirDropOpen][2]);
		}
	}
	yes5 = false;
	return 1;
}
stock J_ApplyAnimation(playerid, const animlib[], const animname[], Float:speed = 4.0, ab = 0, abc = 0, abcd = 0, abcde = 0, abcdef = 0, abcdefg = 1)
{
	if(PlayerBed[playerid] != -1 || GetPVarInt(playerid, !"P_SEAT_STATUS") == 1) return 0;
	return ApplyAnimation(playerid, animlib, animname, speed, ab, abc, abcd, abcde, abcdef, abcdefg);
}
stock SearchFamilyHousesPlace(playerid)
{
	if(pFamilyID(playerid) < 0) return -2;
	if(FamilyInfo[pFamilyID(playerid)][famHouse] == -1) return -1;
	if(IsCoordsInRange(100.9,1892.5233,737.6722,FamilyHouse[FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID]][fh_Enter_X],FamilyHouse[FamilyHouse[FamilyInfo[pFamilyID(playerid)][famHouse]][fhID]][fh_Enter_Y])) return 1;
	else return 0;
}
public: CreateFamily(playerid)
{
	new id = cache_insert_id();
	if(!LoadOwnableFamilysResponse(playerid, id))
	{
		FamilyInfo[pFamilyID(playerid)][famID] = -1;
		PI[playerid][pFamilyMember] = -1;
		print("debug family #4230");
		return 0;
	}
	return 1;
}
stock LoadOwnableFamilysResponse(playerid, id) //fix
{
	mysql_queryf_fix(mysql, "SELECT * FROM `familys` WHERE `Leader` = '%i' LIMIT 1;", true, PI[playerid][pID]);
	if(!cache_num_rows()) 
	{
		SCM(playerid, -1, !"[1010] Произошла системная ошибка, обратитесь в тех.раздел"),cache_delete(result1);
		return 0;
	}
	cache_get_int(0, !"ID", PI[playerid][pFamilyMember]);
	UpdatePlayerDataInt(playerid, "FamilyMember", PI[playerid][pFamilyMember]);
	if(!LoadOwnableFamilys(0, id-1)) LoadOwnableFamilys(0, id);
	cache_delete(result1);
	UpdatePlayerFamily(playerid, true);
	return 1;
}
stock IsPlayerAccessFamily(playerid)
{
	if(PI[playerid][pFamilyMember] == -1) return -1;
	if(FamilyInfo[pFamilyID(playerid)][famLeader] == PI[playerid][pID]) return 2;
	else if(FamilyInfo[pFamilyID(playerid)][famZam_0] == PI[playerid][pID] || 
		FamilyInfo[pFamilyID(playerid)][famZam_1] == PI[playerid][pID] ||
		FamilyInfo[pFamilyID(playerid)][famZam_2] == PI[playerid][pID]) return 1;
	else return 0;
}
stock CountOwnableFamilyCars(playerid, bool:s)
{
	mysql_queryf_fix(mysql, "SELECT `IDownable` FROM `ownable` WHERE `OwnerFamily` = '%i' LIMIT 12;", true, PI[playerid][pFamilyMember]);
	new count = cache_num_rows(), count2;
	for(new i; i < count; i++)
	{
		cache_get_int(i, !"IDownable", player_Global_Int[playerid][0]);
		if(player_Global_Int[playerid][0] > 1) count2++;
	}
	cache_delete(result1);
	if(!s) return count2;
	else return count;
}
stock SearchPlayerForUID(uid)
{
	foreach_player(i) if(PI[i][pID] == uid) return i;
	return -1;
}
stock pFamilyID(playerid)
{
	new id = FamilyID_(PI[playerid][pFamilyMember]);
	if(id != 0) return id;
	SCMf(playerid, -1,"[debug] Произошла тех.ошибка [1000-%i]",PI[playerid][pFamilyMember]);
	PI[playerid][pFamilyMember] = -1;
	UpdatePlayerDataInt(playerid, "FamilyMember", -1);
	return -1;
}
stock FamilyID_(id)
{
	if(id == -1) return 0;
	for(new i; i < TOTAL_FAMILYS; i++) if(id == FamilyInfo[i][famID]) return i;
	return 0;
}
stock requestUID(sqlid)
{
	foreach_player(i)
	{
		if(!IsPlayerLogged[i]) continue;
		if(PI[i][pID] == sqlid) return i;
	}
	return MAX_PLAYERS;
}
stock requestPN(sqlid, params[])
{
	SetString(params, "NO", 3);
	foreach_player(i)
	{
		if(!IsPlayerLogged[i]) continue;
		if(PI[i][pID] == sqlid) 
		{
			SetString(params, PN(i), 24);
			break;
		}
	}
	if(!GetString(params, "NO")) return 1;
	mysql_queryf_fix(mysql, "SELECT `NickName` FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", true, sqlid);
	cache_get_string(0, !"NickName", params, 24);
	cache_delete(result1);
	return 1;
}
CMD:giveenchantall(playerid, params[])
{
	if(CheckAdmin(playerid, 8, 3)) return 1;
	extract params -> new str; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}/giveenchantall [ 0 - 12 ]");
	for(new i; i < 8; i++) if(AksSlot[playerid][i] != 0) InvAksParams[0][playerid][i] = str;
	return SCM(playerid, -1, !"gotova");
}
//CMD:countobj2(playerid) SCMf(playerid, -1, "%i object", Streamer_CountVisibleItems(playerid, STREAMER_TYPE_OBJECT));
CMD:z(playerid, get[])
{
	if(!IsACop(playerid)) return SCM(playerid, 0xAFAFAFFF, !"Вы не полицейский!");
	if(!TeamDuty{playerid}) return SCM(playerid, 0xAFAFAFFF, !"Вы сейчас не работаете!");
	extract get -> new player:id ; else return SCM(playerid, COLOR_RED, !"Используйте: /z [ID]");
	if(!IsPlayerLogged[id]) return SCM(playerid, 0xAFAFAFFF, !"Игрок не в сети!");
	if(!PI[id][pWanted]) return SCM(playerid, 0xAFAFAFFF, !"Игрок не в розыске!");
    if(!ProxDetectorS(100.0, playerid, id)) return SCM(playerid, 0xAFAFAFFF, !"Вы далеко от игрока!");
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы %s погоню за %s[%d]", !PI[id][pNoConnect] ? ("начали") : ("закончили"), PN(id), id);
	SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}%s[%i] %s погоню за вами!", PN(playerid), playerid, !PI[id][pNoConnect] ? ("начал") : ("закончил"));
	PI[id][pNoConnect] = !PI[id][pNoConnect];
	return 1;
}
stock String_UnPackMassive(const Pack_Data[], UnPack_Data[][], const unpack_format[] = "s[128]", const unpack_separation[] = ",", len = sizeof UnPack_Data) 
{
	sscanf(Pack_Data, (str_f("p<%s>a<%s>[%d]", unpack_separation, unpack_format, len)), SQL_GET_ROW_STR);
	for(new i; i < len; i++) SetString(UnPack_Data[i], SQL_GET_ROW_STR[i]);
	return 1;
}
stock OnGuardNormalWeaponShotTime(const weaponid)
{
	new 
		TIME_SHOT;
		
	switch(weaponid)
	{
		case 0..8, 10..15: 		TIME_SHOT = 250;
		case 9: 				TIME_SHOT = 30;
		case 19..20:			TIME_SHOT = 20;
		case 22:				TIME_SHOT = 160;
		case 23..24:			TIME_SHOT = 120;
		case 25:				TIME_SHOT = 700;
		case 26..27:			TIME_SHOT = 120;
		case 28:				TIME_SHOT = 50;
		case 29..31:			TIME_SHOT = 60;
		case 32:				TIME_SHOT = 50;
		case 33..34:			TIME_SHOT = 700;
		case 38:				TIME_SHOT = 20;
		case 39..40:			TIME_SHOT = 0;
		case 41..42:			TIME_SHOT = 10;
		case 48:				TIME_SHOT = 400;
		default:			TIME_SHOT = 0;
	}
	return TIME_SHOT;
}
stock SendVK (playerid, arguments_str[], usecallback = 1)
{
	str_q[0] = EOS, f(str_q, sizeof str_q, "azrp-BonusLand.com/samp/vkasdo231zcx.php?%s&server=%s", arguments_str, ServerCFG[server_logo]);
	HTTP(playerid, HTTP_POST, str_q, "", usecallback ? "VKResponse":"");
}

public: VKResponse(index, response_code, data[])
{
	if(!(response_code == 200)) data[0] = EOS;
	switch(player_Global_Int[index][105])
	{
		case 1: return ShowPlayerSettings(index);
	}
	switch(GetPlayerDialogID(index))
	{
		case 2,7782: return SPDf(index, 7782, DIALOG_STYLE_INPUT, !"{FFFFFF}Авторизация | {ae433d}ВКонтакте", !"»", !"«", "\n{ffffff}Через личное сообщение Вам на страницу\n%s {ffffff}отправлен {ae443d}код{ffffff},\nкоторый необходимо ввести в строку ниже.\n\n{ae443d}Чтобы свернуть игру и зайти в браузер,\nиспользуйте комбинацию клавиш: ALT + TAB!\n\n", data);
		case 7778:
		{
			if(GetString(data, "-1"))
				return SCM(index, 0x4c75a3FF, (str_f("\
				Вконтакте:{FFFFFF} Указанному Вами пользователю запрещено отправлять личные сообщения от страницы: {ae433d}%s RP | %s | Проект SA-MP с бонусом!", \
				ServerCFG[server_name], ServerCFG[server_logo]))), PlayerDialogVK(index, 1);
				
			return SPDf(index, 7779, DIALOG_STYLE_INPUT, "{FFFFFF}Ввод кода | {ae433d}ВКонтакте", !"»", !"«", "\n{ffffff}Через личное сообщение Вам на страницу\n%s отправлен {ae443d}код{ffffff},\nкоторый необходимо ввести в строку ниже.\n\n{ae443d}Чтобы свернуть игру и зайти в браузер,\nиспользуйте комбинацию клавиш: ALT + TAB!\n\n", data);
		}
		case 7779:
		{
			str_1[0] = EOS, sscanf(data, "s[64]d", str_1, PI[index][pVkontakte]);
			DeletePVar(index, "Stranicia"), DeletePVar(index, "CodeVK");
			for(new i; i < strlen(str_1); i++)
			{
				if(str_1[i] == '|')
				{ 
					str_1[i] = ' '; 
					break; 
				}
			}
			UpdatePlayerDataInt(index, "Vkontakte", PI[index][pVkontakte]);
			str_2[0] = EOS, f(str_2, sizeof(str_2), "\n{FFFFFF}Информация:\n- Аккаунт: {4c75a3}%s\n{FFFFFF}- Идентификатор: {4c75a3}%d\n\n{FFFFFF}Вы {aeFF3d}успешно {ffffff}привязали игровой аккаунт к странице {4c75a3}ВКонтакте{ffffff}.\nТеперь при авторизации с {ae443d}ip-адреса {ffffff}отличного от того,\nс которого был произведен последний {ae443d}успешный {ffffff}вход\nВам будет отправлен {ae443d}код для подтверждения входа{ffffff}!\n\n", str_1, PI[index][pVkontakte]);
			return SPD(index, 0, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Привязка | {ae433d}ВКонтакте", str_2, !"x", !"");
		}
		case 7780: return SPDf(index, 7781, DIALOG_STYLE_INPUT, !"{FFFFFF}Отвязка | {ae433d}ВКонтакте", !"»", !"«", "\n{ffffff}Через личное сообщение Вам на страницу\n%s {ffffff}отправлен {ae443d}код{ffffff},\nкоторый необходимо ввести в строку ниже.\n\n{ae443d}Чтобы свернуть игру и зайти в браузер,\nиспользуйте комбинацию клавиш: ALT + TAB!\n\n", data);
		case 7781:
		{
			SPDf(index, 0, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Отвязка | {ae433d}ВКонтакте", !"x", !"", "\n{FFFFFF}Информация:\n- Аккаунт: {4c75a3}%s\n{FFFFFF}- Идентификатор: {4c75a3}%d\n\n{FFFFFF}Вы {aeFF3d}успешно {ffffff}отвязали игровой аккаунт от страницы {4c75a3}ВКонтакте{ffffff}.\n\nСледующие привелегии Вам более {ae433d}недоступны:\n{ae433d}- {ffffff}Возможность двухфакторной авторизации\n{ae433d}- {ffffff}Информирование о слёте имущества\n{ae433d}- {ffffff}Информирование о предстоящих и текущих акциях\n{ae433d}- {ffffff}Оффлайн уведомления игрового аккаунта\n\n", data, PI[index][pVkontakte]);
			UpdatePlayerDataInt(index, "Vkontakte", PI[index][pVkontakte] = 0);
			DeletePVar(index, "CodeVK"); 
			return 0;
		}
		case 7723:
		{
			if(GetString(data, "-1")) {
				
				SCM(index, 0x4c75a3FF, !"[restorevk]:{FFFFFF} Данная страница не привязана к данному аккаунту");
				return PlayerDialogVK(index, 4);
			}
			return SPDf(index, 7724, DIALOG_STYLE_INPUT, !"{FFFFFF}Восстановление | {ae433d}ВКонтакте", !"»", !"«", "\n{ffffff}Через личное сообщение Вам на страницу\n%s отправлен {ae443d}код{ffffff},\nкоторый необходимо ввести в строку ниже.\n\n{ae443d}Чтобы свернуть игру и зайти в браузер,\nиспользуйте комбинацию клавиш: ALT + TAB!\n\n", data);
		}
		case 154: return SPDf(index, 7777, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Информация | {ae433d}ВКонтакте", !"»", !"«", "{FFFFFF}Параметр\t{FFFFFF}Значение\n{2787F5}1. {FFFFFF}Аккаунт:\t%s\n{2787F5}2. {FFFFFF}Отвязать аккаунт{FFFFFF}", data);
	}
	return 0;
}

stock PlayerDialogVK(playerid, list = 0)
{
	switch(list)
	{
		case 0:
		{
			if(PI[playerid][pVkontakte]) return GetVKName(playerid, 0);
			else SPD(playerid, 7777, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Информация | {ae433d}ВКонтакте", "{FFFFFF}Параметр\t{FFFFFF}Значение\n{2787F5}1. {FFFFFF}Аккаунт:\t{ae433d}Не привязан\n{2787F5}2. {FFFFFF}Привязать аккаунт\n", !"»", !"«");
		}
		case 1: return SPD(playerid, 7778, DIALOG_STYLE_INPUT, !"{FFFFFF}Соглашение | {ae433d}ВКонтакте", (str_f("\n\
			{ffffff}Каждый раз при входе с нового {ae433d} ip-адреса {ffffff} у Вас будет запрашиваться код, который будет отправлен вам через \n{ae433d}личное сообщени{FFFFFF}.\n\n\
			При утере доступа к личной странице {4c75a3}ВКонтакте {ffffff}Вы так же потеряете доступ к игровому аккаунту.\n\
			Позаботьтесь о защите личной страницы {4c75a3}ВКонтакте{ffffff}. Обезопасив личную страницу и включив данную функцию - \nВы {ae433d}надежно {ffffff}защитите свой игровой аккаунт!\n\n\
			Главные преимущества:\n{ae433d}- {ffffff}Возможность авторизации\n{ae433d}- {ffffff}Информация о слете имущества\n{ae433d}- {ffffff}Информация о предстоящих и текущих акциях\n\
			{ae433d}- {ffffff}Оффлайн уведомления игрового аккаунта\n\nДля включения данной функции следуйте инструкции ниже:\n\
			{ae433d}1. {ffffff}Перейдите по ссылке {4c75a3}%s {ffffff}({4c75a3}%s RP | %s | Проект SA-MP с бонусом!{ffffff})\n\
			{ae433d}2. {ffffff}Разрешите сообщения от группы через кнопку {ae433d}\"Разрешить сообщения\"\n\
			{ae433d}3. {ffffff}Вставьте ID на свою страницу {4c75a3}ВКонтакте {ffffff}в поле ниже и нажмите {ae433d}\"Далее\"\n\
			{ae433d}4.{ffffff} Образец: {4c75a3}286884243 {ffffff}(9 чисел)\n\n", ServerCFG[server_group_vk], ServerCFG[server_name], ServerCFG[server_logo])), !"»", !"«");
		case 2: return SPD(playerid, 7780, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Отвязка | {ae433d}ВКонтакте", !"{FFFFFF}Вы действительно желайте снять привязку {4c75a3}ВКонтакте{FFFFFF}?", !"»", !"«");
		case 3:
		{
			new code = 100000+random(900000);
			SetPVarInt(playerid, !"CodeVK", code);
			str_q[0] = EOS, f(str_q, sizeof(str_q), "vk_id=%d&msg=%d&list=3&nickname=%s", PI[playerid][pVkontakte], code, PN(playerid));
			SendVK(playerid, str_q);
		}
		case 4: return SPD(playerid, 7723, DIALOG_STYLE_INPUT, !"{FFFFFF}Восстановление | {ae433d}ВКонтакте", !"{ffffff}Введите ссылку на привязанную к аккаунту страницу {4c75a3}Вконтакте", !"»", !"«");
	}
	return 0;
}
stock GetVKName(playerid, did = 1)
{	
	str_q[0] = EOS, f(str_q, sizeof(str_q), "vk_id=%d&list=2", PI[playerid][pVkontakte]);
	SendVK(playerid, str_q);
	player_Global_Int[playerid][105] = did;
	return 1;
}
stock IsValidObjectModel(modelid) 
{
    if(modelid >= 321 && modelid <= 328 || modelid >= 330 && modelid <= 331)
        return 1;
    else if(modelid >= 333 && modelid <= 339 || modelid >= 341 && modelid <= 373)
        return 1;

    else if(modelid >= 615 && modelid <= 661 || modelid == 664)
        return 1;
    else if(modelid >= 669 && modelid <= 698 || modelid >= 700 && modelid <= 792)
        return 1;
    else if(modelid >= 800 && modelid <= 906 || modelid >= 910 && modelid <= 964)
        return 1;
    else if(modelid >= 966 && modelid <= 998 || modelid >= 1000 && modelid <= 1193)
        return 1;
    else if(modelid >= 1207 && modelid <= 1325 || modelid >= 1327 && modelid <= 1572)
        return 1;
    else if(modelid >= 1574 && modelid <= 1698 || modelid >= 1700 && modelid <= 2882)
        return 1;
    else if(modelid >= 2885 && modelid <= 3135 || modelid >= 3167 && modelid <= 3175)
        return 1;
    else if(modelid == 3178 || modelid == 3187 || modelid == 3193 || modelid == 3214)
        return 1;
    else if(modelid == 3221 || modelid >= 3241 && modelid <= 3244)
        return 1;
    else if(modelid == 3246 || modelid >= 3249 && modelid <= 3250)
        return 1;
    else if(modelid >= 3252 && modelid <= 3253 || modelid >= 3255 && modelid <= 3265)
        return 1;
    else if(modelid >= 3267 && modelid <= 3347 || modelid >= 3350 && modelid <= 3415)
        return 1;
    else if(modelid >= 3417 && modelid <= 3428 || modelid >= 3430 && modelid <= 3609)
        return 1;
    else if(modelid >= 3612 && modelid <= 3783 || modelid >= 3785 && modelid <= 3869)
        return 1;
    else if(modelid >= 3872 && modelid <= 3882 || modelid >= 3884 && modelid <= 3888)
        return 1;
    else if(modelid >= 3890 && modelid <= 3973 || modelid >= 3975 && modelid <= 4541)
        return 1;
    else if(modelid >= 4550 && modelid <= 4762 || modelid >= 4806 && modelid <= 5084)
        return 1;
    else if(modelid >= 5086 && modelid <= 5089 || modelid >= 5105 && modelid <= 5375)
        return 1;
    else if(modelid >= 5390 && modelid <= 5682 || modelid >= 5703 && modelid <= 6010)
        return 1;
    else if(modelid >= 6035 && modelid <= 6253 || modelid >= 6255 && modelid <= 6257)
        return 1;
    else if(modelid >= 6280 && modelid <= 6347 || modelid >= 6349 && modelid <= 6525)
        return 1;
    else if(modelid >= 6863 && modelid <= 7392 || modelid >= 7415 && modelid <= 7973)
        return 1;
    else if(modelid >= 7978 && modelid <= 9193 || modelid >= 9205 && modelid <= 9267)
        return 1;
    else if(modelid >= 9269 && modelid <= 9478 || modelid >= 9482 && modelid <= 10310)
        return 1;
    else if(modelid >= 10315 && modelid <= 10744 || modelid >= 10750 && modelid <= 11417)
        return 1;
    else if(modelid >= 11420 && modelid <= 11753 || modelid >= 12800 && modelid <= 13563)
        return 1;
    else if(modelid >= 13590 && modelid <= 13667 || modelid >= 13672 && modelid <= 13890)
        return 1;
    else if(modelid >= 14383 && modelid <= 14528 || modelid >= 14530 && modelid <= 14554)
        return 1;
    else if(modelid == 14556 || modelid >= 14558 && modelid <= 14643)
        return 1;
    else if(modelid >= 14650 && modelid <= 14657 || modelid >= 14660 && modelid <= 14695)
        return 1;
    else if(modelid >= 14699 && modelid <= 14728 || modelid >= 14735 && modelid <= 14765)
        return 1;
    else if(modelid >= 14770 && modelid <= 14856 || modelid >= 14858 && modelid <= 14883)
        return 1;
    else if(modelid >= 14885 && modelid <= 14898 || modelid >= 14900 && modelid <= 14903)
        return 1;
    else if(modelid >= 15025 && modelid <= 15064 || modelid >= 16000 && modelid <= 16790)
        return 1;
    else if(modelid >= 17000 && modelid <= 17474 || modelid >= 17500 && modelid <= 17974)
        return 1;
    else if(modelid == 17976 || modelid == 17978 || modelid >= 18000 && modelid <= 18036)
        return 1;
    else if(modelid >= 18038 && modelid <= 18102 || modelid >= 18104 && modelid <= 18105)
        return 1;
    else if(modelid == 18109 || modelid == 18112 || modelid >= 18200 && modelid <= 18859)
        return 1;
    else if(modelid >= 18860 && modelid <= 19274 || modelid >= 19275 && modelid <= 19595)
        return 1;
    else if(modelid >= 19596 && modelid <= 19999)
        return 1;
    else
        return 0;
}
public: LaunchBack(playerid)
{
	LauncherSize2[playerid] -= 1;
	LauncherSize[playerid] -= 0.1;
    DestroyPlayerTD(playerid, launchsize[playerid]);
	launchsize[playerid] = CreatePlayerTextDraw(playerid, 275.100006, 428.303589, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, launchsize[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, launchsize[playerid], LauncherSize[playerid], 1.259899);
	PlayerTextDrawAlignment(playerid, launchsize[playerid], 1);
	PlayerTextDrawColor(playerid, launchsize[playerid], 0xBDBFBDFF);
	PlayerTextDrawUseBox(playerid, launchsize[playerid], 0);
	PlayerTextDrawBoxColor(playerid, launchsize[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, launchsize[playerid], 0);
	PlayerTextDrawSetOutline(playerid, launchsize[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, launchsize[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, launchsize[playerid], 4);
	PlayerTextDrawSetProportional(playerid, launchsize[playerid], 0);
	PlayerTextDrawSetSelectable(playerid, launchsize[playerid], 0);
	if(LauncherSize[playerid] <= 69.999999) PlayerTextDrawColor(playerid, launchsize[playerid], 0x386a2bFF);
	if(LauncherSize[playerid] <= 12.999999) PlayerTextDrawColor(playerid, launchsize[playerid], 0xBDBFBDFF);
	if(LauncherSize[playerid] >= 13.000000) PlayerTextDrawColor(playerid, launchsize[playerid], 0x386a2bFF);
	if(LauncherSize[playerid] >= 70.000000) PlayerTextDrawColor(playerid, launchsize[playerid], 0xb01925FF);
	PlayerTextDrawShow(playerid, launchsize[playerid]);
	if(LauncherSize[playerid] <= 0.000000)
	{
	    for(new i; i < 9; i++) TextDrawHideForPlayer(playerid, launch[i]);
		DestroyPlayerTD(playerid, launchsize[playerid]);
        LauncherSize[playerid] = 0.000000;
		KillTimer(launchtimer[playerid]);
		launchtimer[playerid] =
		LauncherSize2[playerid] =
		launchdone[playerid] = 0;
		skorostb[playerid] = 1;
	}
	return 1;
}
public: daunmen(playerid)
{
    if(LauncherSize[playerid] >= 50.000000) GameTextForPlayer(playerid,"GO GO GO",1000,4);
    DestroyPlayerTD(playerid, launchsize[playerid]);
	launchsize[playerid] = CreatePlayerTextDraw(playerid, 275.100006, 428.303589, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, launchsize[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, launchsize[playerid], LauncherSize[playerid], 1.259899);
	PlayerTextDrawAlignment(playerid, launchsize[playerid], 1);
	PlayerTextDrawColor(playerid, launchsize[playerid], 0xBDBFBDFF);
	PlayerTextDrawUseBox(playerid, launchsize[playerid], 0);
	PlayerTextDrawBoxColor(playerid, launchsize[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, launchsize[playerid], 0);
	PlayerTextDrawSetOutline(playerid, launchsize[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, launchsize[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, launchsize[playerid], 4);
	PlayerTextDrawSetProportional(playerid, launchsize[playerid], 0);
	PlayerTextDrawSetSelectable(playerid, launchsize[playerid], 0);
	if(50.00 > LauncherSize[playerid] >= 13.0) PlayerTextDrawColor(playerid, launchsize[playerid], 0x386a2bFF);
	else if(LauncherSize[playerid] >= 50.000000) {
	PlayerTextDrawTextSize(playerid, launchsize[playerid], 50.000000, 1.259899);
	PlayerTextDrawColor(playerid, launchsize[playerid], 0xb01925FF); }
	else if(LauncherSize[playerid] >= 110.000000)
	{
	 	for(new i; i < 9; i++) TextDrawHideForPlayer(playerid, launch[i]);
		DestroyPlayerTD(playerid, launchsize[playerid]);
		KillTimer(launchtimer[playerid]);
		launchtimer[playerid] =
		LauncherSize2[playerid] =
		launchdone[playerid] = 0;
		LauncherSize[playerid] = 0.000000;
		J_SetVehicleHealth(GetPlayerVehicleID(playerid), 100);
		skorostb[playerid] = 1;
	}
	if(LauncherSize[playerid] < 75.000000) LauncherSize2[playerid]++;
	LauncherSize[playerid] += 0.1;
	PlayerTextDrawShow(playerid, launchsize[playerid]);
	return 1;
}
stock ShowStyleListDialog(playerid)
{
	str_1 = "№. Название стиля\tНеобходимый навык\n";
	for(new i; i < sizeof StyleWalkInfo; i++)
	{
		str_2[0] = EOS, f(str_2, sizeof(str_2), "%s%s\t%s%i\n",\
		PI[playerid][pStyleWalk] == i ? ("{FFDA00}") : ("{FFFFFF}"),
		StyleWalkInfo[i][name_style],\
		PI[playerid][pStyleWalk] == i ? ("{FFDA00}") : ("{FFFFFF}"),
		StyleWalkInfo[i][count_style]);
		strcat(str_1, str_2);
	}
	str_2[0] = EOS, f(str_2, sizeof(str_2), !"Выберите стиль походки: (текущий навык: {44FF00}%i ед.)", PI[playerid][pLevelWalk]);
	SPD(playerid, 25239, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, !"Выбрать", !"Назад");
	return 1;
}
stock CreateGlobalTDPlayer(playerid)
{
	for(new i = 4; i < 8; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	GlobalTDPlayer[playerid][6] = CreatePlayerTextDraw(playerid, 297.136658, 364.174530, "LD_BEAT:cring");
	PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][6], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][6], 45.915085, 49.583370);
	PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][6], 1);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][6], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][6], 0);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][6], 0x80808080);
	PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][6], 4);
	PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][6], 0);

	GlobalTDPlayer[playerid][5] = CreatePlayerTextDraw(playerid, 320.299957, 413.699860, "03:00");
	PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][5], 0.365833, 1.708889);
	PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][5], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][5], 2);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][5], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][5], 0);

	GlobalTDPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 320.299957, 347.200409, "Score:_0");
	PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][4], 0.365833, 1.708889);
	PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][4], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][4], 2);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][4], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][4], 0);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][4], 0x80808080);
	PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][4], 0x000000FF);
	PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][4], 0);

	GlobalTDPlayer[playerid][7] = CreatePlayerTextDraw(playerid, 401.000000, 419.000000, "~w~Press_to_exit");
	PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][7], 0.300000, 1.250000);
	PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][7], 15.000000, 140.000000);
	PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][7], 2);
	PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][7], 0x0095B6FF);
	PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][7], 0xCCCCCCAA);
	PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][7], 2);
	PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][7], 0x000000FF);
	PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][7], 1);
	for(new i = 4; i < 8; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
}
public: SchoolDance(playerid)
{
	TogglePlayerControllable(playerid, false);
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][5], "%s", Convert(GetPVarInt(playerid, "TimerDance")));
	PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][4], "Score:_%i", GetPVarInt(playerid, "ScoreDance"));
	for(new i; i < 4; i++)
	{
		static str[3][11+2];
		str[0] = "LD_BEAT:left";
		str[1] = "LD_BEAT:up";
		str[2] = "LD_BEAT:down";
		if(DanceFloat[playerid][i] < 250.0) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
		DanceFloat[playerid][i] = 383.845581+(i*40.0)-2.50*DanceCount[playerid][i];
		if(GlobalTDPlayer[playerid][i] == PlayerText:INVALID_TEXT_DRAW) GlobalTDPlayer[playerid][i] = CreatePlayerTextDraw(playerid, DanceFloat[playerid][i], 380.450134, str[DanceKey[playerid][i]]);
		else PlayerTextDrawSetPos(playerid, GlobalTDPlayer[playerid][i], DanceFloat[playerid][i], 380.450134);
		PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][i], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], 15.367477, 17.558315);
		PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][i], 2);
		PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0xFFFFFFFFFFFFFF18);
		PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i], 0xFFFFFFFF80808080);
		PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][i], 4);
		PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], 0);
		if(DanceFloat[playerid][i] < 385.0) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
		DanceCount[playerid][i]++;
		if(i > 3) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	return 1;
}
stock CheckDance(playerid)
{
	 SetPVarInt(playerid, !"TimerDance",GetPVarInt(playerid, "TimerDance")-1);
	 if(!GetPVarInt(playerid, "TimerDance")) return ResetDanceForPlayer(playerid);
	 for(new i; i < 4; i++) // on ce clik 310.0 //DanceCount[playerid]
	 {
		 if(DanceFloat[playerid][i] < 250.0)
		 {
			 DanceCount[playerid][i] = 0;
			 DanceFloat[playerid][i] = 383.845581+(i*40.0)-2.50*DanceCount[playerid][i];
			 DanceKey[playerid][i] = random(3);
		 }
	 }
	 if(UseDanceKey[playerid]) UseDanceKey[playerid] = 0;
	 return 1;
}
stock CheckDanceKey(playerid, value)
{
	UseDanceKey[playerid] = 1;
	for(new i; i < 4; i++)
	{
		if(300.0 < DanceFloat[playerid][i] < 320.0)
		{
			if(value == DanceKey[playerid][i])
			{
				SetPVarInt(playerid, !"ScoreDance", GetPVarInt(playerid, !"ScoreDance")+random(100));
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~GOOD", 500, 3);
			}
			else GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~BAD", 500, 3);
			TogglePlayerControllable(playerid, false);
			switch(random(13))
			{
				case 0: ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,0,0,0,0,1);
				case 1: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,0,0,0,0,1);
				case 2: ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,0,0,0,0,1);
				case 3: ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,0,0,0,0,1);
				case 4: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,0,0,0,0,1);
				case 5: ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,0,0,0,0,1);
				case 6: ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,0,0,0,0,1);
				case 8: ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,0,0,0,0,1);
				case 9: ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,0,0,0,0,1);
				case 10: ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,0,0,0,0,1);
				case 11: ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,0,0,0,0,1);
				case 12: ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,0,0,0,0,1);
			}
		}
	}
	return 1;
}
stock ResetDanceForPlayer(playerid)
{
	SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Тренировка завершена. К навыку добавлено очков: %d.",GetPVarInt(playerid, "ScoreDance"));
	PI[playerid][pLevelWalk] += GetPVarInt(playerid, "ScoreDance");
	UpdatePlayerDataInt(playerid, "LevelWalk", PI[playerid][pLevelWalk]);
	for(new i; i < 8; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	TogglePlayerControllable(playerid, true);
	KillTimer(DanceTimer[playerid]);
	for(new i; i < 4; i++)
	{
		DanceFloat[playerid][i] = 0.0;
		DanceKey[playerid][i] =
		DanceCount[playerid][i] = 0;
	}
	UseDanceKey[playerid] = 0;
	DeletePVar(playerid, !"TimerDance");
	DeletePVar(playerid, !"ScoreDance");
	return 1;
}
CMD:iznas(playerid, get[])
{
	extract get -> new player:id; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}/iznas [ID игрока]");
	if(!IsPlayerLogged[id] || !ProxDetectorS(2.0, playerid, id) || id == playerid 
	|| GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
	if(PI[id][pVIP][0] == 7) return SCM(playerid, COLOR_RED, !"[Ошибка] У этого игрока запаяно анальное кольцо. {FFFFFF}( Имеет BonusLand VIP )");
	if(player_InGreenZone{playerid} != false) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сделать это здесь!");
	if(GetPVarInt(playerid, !"iznas") > global_time) return SCM(playerid, -1, !"Ваши силы иссякли!");
	SetPVarInt(playerid, !"iznas", global_time + 20);
	if(PlayerHealthAC[id] > 30) J_SetPlayerHealth(id, PlayerHealthAC[id]-random(5));
	ApplyAnimation(id, !"SNM", !"SPANKINGW",4.1,0,1,1,1,1); 
	ApplyAnimation(playerid, !"SNM", !"SPANKEDW",4.1,0,1,1,1,1);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы изнасиловали игрока %s[%i]", PN(id), id); 
	SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Вас изнасиловал %s[%i]", PN(playerid), playerid); 
	return 1;
}
stock GetPlayerPeakHealth(playerid)
{
	new l = 100+GetAcsUpdate(InvAksParams[0][playerid][5]);
	for(new i; i < 8; i++) if(AksSlotUID[playerid][i] == 1785 && InvAksParams[1][playerid][i] > 100) l += InvAksParams[1][playerid][i]-100;
	if(l > 160) l = 160;
	return l;
}
static const 	PresentFortuneCasino_item[] = {313,314,315,1135,316,807,806,320},
				PresentFortuneCasino_amount[] = {5,5,5,5,50,50,10000,50000};
public OnDynamicObjectMoved(objectid)
{
	if(objectid == -1) return 1;
	if(objectid == casino_rouletta_id)
	{
		new playerid = casino_rouletta_status;
		if(casino_rouletta_velocity <= 0.05)
		{
			ClearAnimations(playerid);
			SetDynamicObjectPos(objectid, 2266.367676, -808.228516, 1408.467163);
			SetDynamicObjectRot(objectid, 0.000000, 0.000000, 179.999863);
			new Hour, Minute, randomfo = random(sizeof(PresentFortuneCasino_item));
			InvAdd(playerid, PresentFortuneCasino_item[randomfo], PresentFortuneCasino_amount[randomfo], 0);
			gettime(Hour, Minute, _);
			str_1[0] = EOS, f(str_1, sizeof str_1, "{ffffff}Вы успешно прокрутили колесо фортуны!\n\n\
			Вы выиграли {73B461}'%s'{ffffff} в количестве {73B461}%i{ffffff} шт. Поздравляем!\n\n\
			{cccccc}Следующий раз прокрутить колесо фортуны можно будет:\n\n\
			%i:%i %i.%i.%i",ItemsInfo[PresentFortuneCasino_item[randomfo]][ItemName], PresentFortuneCasino_amount[randomfo],Hour,Minute,global_day+1, global_month, global_year);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{73B461}Колесо фортуны", str_1, !"Закрыть", "");
			casino_rouletta_status = -1;
			casino_rouletta_velocity = 0.0;
			casino_rouletta_offset = 0;
			UpdatePlayerDataInt(playerid, "CasinoUsed", 1);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		else if(casino_rouletta_velocity <= 0.2) casino_rouletta_velocity -= 0.1;
		else casino_rouletta_velocity -= 0.45;
		if(casino_rouletta_offset == 360) casino_rouletta_offset = 180;
		else casino_rouletta_offset = 360;
		MoveDynamicObject(casino_rouletta_id, 2266.367676, -808.228516, 1408.467163, casino_rouletta_velocity, 0.000000, casino_rouletta_offset, 179.999863);
		Streamer_Update(playerid);
	}
	return 1;
}
stock CreateMineInfo(i)
{
	if(MineInfo[i][mineStatus] != false) return 1;
	MineInfo[i][mineStatus] = true;
	MineInfo[i][mineObject][0] = CreateDynamicObject(3930, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ] - 1.2, -5.499997, 0.000000, -26.200012, -1, -1);
	SetDynamicObjectMaterial(MineInfo[i][mineObject][0], 0, 12871, "ce_ground01", "cs_rockdetail2", 0);
	MineInfo[i][mineObject][1] = CreateDynamicObject(854, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ] - 1.2, -4.667350, -11.332600, -88.550941, -1, -1, -1, STREAMER_OBJECT_SD, 50.0); // 1
	SetDynamicObjectMaterial(MineInfo[i][mineObject][1], 0, 11696, "hill250x250rocky3", "cw2_mountdirtscree3", 0);
	switch(random(50))
	{
		case 0..8: MineInfo[i][minePoroda] = 5;
		case 9..25: MineInfo[i][minePoroda] = 4;
		case 26..35: MineInfo[i][minePoroda] = 3;
		case 36..45: MineInfo[i][minePoroda] = 2;
		case 46..49: MineInfo[i][minePoroda] = 1;
	}
	MineInfo[i][mineLabel] = CreateDynamic3DTextLabel(!"Месторождение ресурсов\n{73B461}Для добычи ископаемого\n{FFFFFF}нажмите 'ПРОБЕЛ'", -1, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	return 1;
}
stock SetFone(i, fone){
    switch(fone){
		case 0: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 14665, "genintint711_1", "interiorwindowglow", 0x00000000);
		case 1: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 18901, "matclothes", "hattiger", 0x00000000);
		case 2: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
		case 3: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 10778, "airportcpark_sfse", "ws_carpark3", 0x00000000);
		case 4: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 10765, "airportgnd_sfse", "ws_yellowline", 0x00000000);
		case 5: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 8391, "ballys01", "casinolightsblu_128", 0x00000000);
		case 6: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 14803, "bdupsnew", "Bdup2_wallpaper", 0x00000000);
		case 7: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 2212, "burger_tray", "burgertop", 0x00000000);
		case 8: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 2127, "cj_kitchen", "CJ_RED", 0x00000000);
		case 9: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 1583, "targets", "target1", 0x00000000);
		case 10: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 1583, "targets", "target2", 0x00000000);
		case 11: SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 0, 1583, "targets", "target3", 0x00000000);
	}
	return 1;
}
stock SetBillColor(i, color){
	switch(color){
	    case 0: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF000000, 0, 1);
	    case 1: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFFFFFFFF, 0, 1);
	    case 2: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF808080, 0, 1);
	    case 3: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFFFF0000, 0, 1);
	    case 4: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFFFFFF00, 0, 1);
	    case 5: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF008000, 0, 1);
	    case 6: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF0000FF, 0, 1);
	    case 7: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF87CEFA, 0, 1);
	    case 8: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFF800080, 0, 1);
	    case 9: SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, BillboardInfo[i][bText], 130, "Ariel", 25, 1, 0xFFFFA500, 0, 1);
	}
}
public: LoadBillboard()
{
	new currenttime = GetTickCount();
	for(new i; i < sizeof(BillboardInfo); i++)
	{
		cache_get_int(i, !"ID", BillboardInfo[i][bID]);
		cache_get_int(i, !"Owner", BillboardInfo[i][bOwner]);
		cache_get_int(i, !"Hour", BillboardInfo[i][bHours]);
		cache_get_int(i, !"Fon", BillboardInfo[i][bFon]);
		cache_get_int(i, !"Color", BillboardInfo[i][bColor]);
		cache_get_string(i, !"Text", BillboardInfo[i][bText]);

		CreateDynamic3DTextLabel(!"Арендовать биллборд\n\n{ffffff}[ Нажмите ALT ]", 0xFFFF00FF,\
		BillboardInfo[i][bPosBill][0], BillboardInfo[i][bPosBill][1], BillboardInfo[i][bPosBill][2], 10.0000);
		CreateDynamicPickup(1239, 23, BillboardInfo[i][bPosBill][0], BillboardInfo[i][bPosBill][1], BillboardInfo[i][bPosBill][2], -1);
		
		BillboardInfo[i][bObject][0] = CreateDynamicObject(9191, BillboardInfo[i][bPosObject1][0], BillboardInfo[i][bPosObject1][1], BillboardInfo[i][bPosObject1][2], BillboardInfo[i][bPosObject1][3], BillboardInfo[i][bPosObject1][4], BillboardInfo[i][bPosObject1][5], -1, -1, -1, STREAMER_OBJECT_SD, 100.0);
		SetFone(i, BillboardInfo[i][bFon]), SetDynamicObjectMaterial(BillboardInfo[i][bObject][0], 1, 14577, "casinovault01", "ab_shutter1", 0x00000000);
		
		BillboardInfo[i][bObject][1] = CreateDynamicObject(7913, BillboardInfo[i][bPosObject2][0], BillboardInfo[i][bPosObject2][1], BillboardInfo[i][bPosObject2][2], BillboardInfo[i][bPosObject2][3], BillboardInfo[i][bPosObject2][4], BillboardInfo[i][bPosObject2][5], -1, -1, -1, STREAMER_OBJECT_SD, 100.0);
		
		if(BillboardInfo[i][bOwner] == -1) SetDynamicObjectMaterialText(BillboardInfo[i][bObject][1], 0, "Дешевое такси, звони 913\nТут может быть твоя реклама!\nПокупай через телефон.", 130, "Ariel", 25, 1, 0xFF000000, 0, 1);//, TextDrawSetString(BillboardTD[i], "LD_CHAT:goodcha");
		else SetBillColor(i, BillboardInfo[i][bColor]);//, TextDrawSetString(BillboardTD[i], "LD_CHAT:thumbup");
		new temmap = CreateDynamicObject(1259, BillboardInfo[i][bPosObject3][0], BillboardInfo[i][bPosObject3][1], BillboardInfo[i][bPosObject3][2], BillboardInfo[i][bPosObject3][3], BillboardInfo[i][bPosObject3][4], BillboardInfo[i][bPosObject3][5], -1, -1, -1, STREAMER_OBJECT_SD, 200.0);
		SetDynamicObjectMaterial(temmap, 7, 14577, "casinovault01", "ab_shutter1", 0), SetDynamicObjectMaterial(temmap, 5, 2772, "airp_prop", "cj_chromepipe", 0), SetDynamicObjectMaterial(temmap, 3, 14577, "casinovault01", "ab_shutter1", 0);
		SetDynamicObjectMaterial(temmap, 0, 14577, "casinovault01", "ab_shutter1", 0);
	}
	return printf("[Public] LoadBillboard загрузился за %i ms", GetTickCount() - currenttime),printf("[MySQL]: Загружено Billboard: %i", sizeof(BillboardInfo));
}
stock SaveBillboard(i)
{
	mysql_pqueryf(mysql, "UPDATE `billboard` SET `Owner` = '%i', `Hour` = '%d',\
	`Fon` = '%d',`Color` = '%d',`Text` = '%s' WHERE `ID` = '%d' LIMIT 1;",\
    BillboardInfo[i][bOwner], BillboardInfo[i][bHours],\
	 BillboardInfo[i][bFon], BillboardInfo[i][bColor], BillboardInfo[i][bText], i+1);
	return 1;
}
CMD:resetbillboard(playerid, param[])
{
    if(CheckAdmin(playerid, 8, 1)) return 1;
	extract param -> new id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /resetbillboard [ID]");
	if(id < 0 || id >= sizeof(BillboardInfo)) return SCM(playerid, COLOR_LIGHTRED, "Такого баннера нет!");
	str_d[0] = EOS, requestPN(BillboardInfo[id][bOwner], str_d);
    SendAdminsMessagef(COLOR_GREY, "[A] {FFFFFF}%s очистил баннер №%d {FFFFFF} ( Владелец: %s )",PN(playerid), id, str_d);
    ResetBill(id);
	return 1;
}
CMD:gotobillboard(playerid, param[])
{
    if(CheckAdmin(playerid, 6)) return 1;
	extract param -> new id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /gotobillboard [ID]");
	if(id < 0 || id >= sizeof(BillboardInfo)) return SCM(playerid, COLOR_LIGHTRED, "Такого баннера нет!");
	J_SetPlayerPos(playerid, BillboardInfo[id][bPosBill][0]+3, BillboardInfo[id][bPosBill][1],\
	BillboardInfo[id][bPosBill][2]);
	return 1;
}
stock ResetBill(i){
   	f(BillboardInfo[i][bText], 85, "Дешевое такси, звони 913\nТут может быть твоя реклама!\nПокупай через телефон.");

	BillboardInfo[i][bOwner] = -1;
	BillboardInfo[i][bHours] = 0;
    BillboardInfo[i][bFon] = 0;
    BillboardInfo[i][bColor] = 0;
    SetBillColor(i, BillboardInfo[i][bColor]);
	SetFone(i, BillboardInfo[i][bFon]);
	//TextDrawSetString(BillboardTD[i], "LD_CHAT:goodcha");
	SaveBillboard(i);
	return 1;
}
stock CloseBill(playerid, buy = 0){
    new i = GetPVarInt(playerid, "IDBILL");
	if(buy) SaveBillboard(i);
	else ResetBill(i);
	for(new j; j < 60; j++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][j]);
	BillOpen{playerid} = false, DeletePVar(playerid, !"IDBILL");
	if(buy) CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	return 1;
}
CMD:addcd(playerid)
{
	CreateDynamicObject(2906, -1336.3914794922, -2192.3850097656, 26.03186416626,\
		0, 180, 180);
	CreateDynamicObject(2906, -1336.7984619141, -2192.3425292969, 26.019207000732,\
		0, 180, 180);

	CreateDynamicObject(2905, -1336.4949951172, -2192.16015625, 25.00486946106 ,\
		-90, 90, 180);
	CreateDynamicObject(2905, -1336.7115478516, -2192.1713867188, 24.996746063232,\
		270, 90, 180);

	CreateDynamicObject(2908, -1336.6104736328, -2192.1840820313, 26.284999847412,\
		270, 90, 180);
 
	CreateDynamicObject(2907, -1336.5782470703, -2192.1381835938, 25.740787506104,\
		270, 0, 180);
	return 1;
}
new obj22[6];
CMD:addcd_custom(playerid, params[])
{
	extract params -> new str; else return 1;
	new Float:xyz[3];
	new Float:a;
	if(!str) xyz[0] = -1336.3914794922, xyz[1] = -2192.3850097656, xyz[2] = 26.03186416626;
	else
	{
		GetPlayerPos(playerid, xyz[0], xyz[1], xyz[2]);
		GetPlayerFacingAngle(playerid, a);
		xyz[2] += 0.53;
	}

	obj22[0] = CreateDynamicObject(2906, xyz[0], xyz[1], xyz[2],\
		0, 180, a);

	obj22[1] = CreateDynamicObject(2906, xyz[0]- 0.4069824219, xyz[1]-0.0424804687, xyz[2],\
		0, 180, a);

	obj22[2] = CreateDynamicObject(2905, xyz[0]- 0.103515625, xyz[1]+ 0.2248535156, xyz[2]-1.0269947052 ,\
		-90, 90, a);
	obj22[3] = CreateDynamicObject(2905, xyz[0]- 0.3200683594, xyz[1]+ 0.2136230468, xyz[2]-1.03511810303,\
		270, 90, a);

	obj22[4] = CreateDynamicObject(2908, xyz[0]- 0.2189941406, xyz[1]+ 0.2009277343, xyz[2]+0.25313568115,\
		270, 90, a);
 
	obj22[5] = CreateDynamicObject(2907, xyz[0]- 0.1867675781, xyz[1]+ 0.2468261718, xyz[2]-0.29107666015,\
		270, 0, a);
	return 1;
}
CMD:gotome_custom(playerid)
{
	static const Float:defaultminus_x[6] = {0.0, -0.4069824219, -0.103515625, -0.3200683594, -0.2189941406, -0.1867675781};
	static const Float:defaultminus_y[6] = {0.0, -0.0424804687, 0.2248535156, 0.2136230468, 0.2009277343, 0.2468261718};
	static const Float:defaultminus_z[6] = {0.0, 0.0, - 1.0269947052, -1.03511810303, 0.25313568115, -0.29107666015};
	new Float:xyz[3];
	GetPlayerPos(playerid, xyz[0], xyz[1], xyz[2]);
	for(new i; i < 6; i++)
	{
		MoveDynamicObject(obj22[i], xyz[0]+defaultminus_x[i], xyz[1]+defaultminus_y[i], xyz[2]+defaultminus_z[i]+0.53, 0.5);
	}
	return 1;
}
CMD:tp_point(playerid)
{
	if(CheckAdmin(playerid, 1)) return 1;
	if(!gpss{playerid}) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас не отмечене GPS! ( Используйте : /gps )");
	J_SetPlayerPos(playerid, gps_position[playerid][0], gps_position[playerid][1], gps_position[playerid][2]);
	SetPlayerVirtualWorldEx(playerid, 0);
	SetPlayerInteriorEx(playerid, 0);
	return 1;
}
CMD:fmembers(playerid) SPD(playerid, 25529, DIALOG_STYLE_LIST, !"Члены семьи онлайн", !"Показать в виде списка\nПоказать на карте", !"Выбрать", !"Закрыть");
stock TwinTurboInstall(vehicleid)
{
	TwinTurbo[vehicleid][Engine] = 
	TwinTurbo[vehicleid][cStatus] = true;

	AttachVehicle[vehicleid][0] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "{ff5d49}/{f34f3e}/{f7372b}/", 140, "Ariel", 40, 1, 0, 0, 1);

	AttachVehicle[vehicleid][1] = CreateDynamicObject(19327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "{FFFFFF}TWINTURBO{FAAC58} PACKAGE", 130, "Ariel", 20, 1, 0, 0, 1);

	switch(GetVehicleModel(vehicleid))
	{
		case 400:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.435, -2.343, -0.137, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -2.344, -0.137, 0.000, 0.000, 0.000);
		}
		case 401:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -2.110, 0.334, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -2.111, 0.339, -90.000, 0.000, 0.000);
		}
		case 402:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.339, 0.266, -81.300, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.344, 0.266, -80.800, 0.000, 0.000);
		}
		case 404:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.405, 0.571, -25.300, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.428, 0.576, -26.700, 0.000, 0.000);
		}
		case 405:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.243, 0.253, -85.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -2.249, 0.258, -90.000, 0.000, 0.000);
		}
		case 409:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -3.380, 0.284, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -3.383, 0.284, -90.000, 0.000, 0.000);
		}
		case 410:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.400, -1.899, 0.363, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.130, -1.900, 0.360, -90.000, 0.000, 0.000);
		}
		case 411:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -1.376, 0.363, -59.300, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -1.380, 0.364, -60.000, 0.000, 0.000);
		}
		case 412:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.913, -3.161, 0.153, -90.000, -90.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.919, -2.630, 0.162, -90.000, -90.000, 0.000);
		}
		case 413:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -2.626, -0.658, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.130, -2.619, -0.660, 0.000, 0.000, 0.000);
		}
		case 415:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.450, -1.062, 0.397, -21.400, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.060, -1.067, 0.390, -24.799, 0.000, 0.000);
		}
		case 418:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -2.673, -0.630, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -2.674, -0.630, 0.000, 0.000, 0.000);
		}
		case 419:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -1.605, 0.440, -48.299, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -1.604, 0.439, -48.200, 0.000, 0.000);
		}
		case 421:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -2.773, 0.088, -33.700, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.080, -2.780, 0.086, -34.999, 0.000, 0.000);
		}
		case 422:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -0.320, 0.470, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.080, -0.330, 0.470, 0.000, 0.000, 0.000);
		}
		case 426:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.390, -2.389, 0.270, -85.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.130, -2.390, 0.269, -84.100, 0.000, 0.000);
		}
		case 429:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -1.331, 0.370, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.080, -1.331, 0.370, 0.000, 0.000, 0.000);
		}
		case 434:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -1.180, 0.690, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -1.171, 0.690, 0.000, 0.000, 0.000);
		}
		case 436:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.429, -1.627, 0.467, -45.599, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -1.633, 0.471, -41.800, 0.000, 0.000);
		}
		case 439:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -2.178, 0.242, -82.600, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.120, -2.188, 0.244, -82.900, 0.000, 0.000);
		}
		case 445:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -2.432, 0.235, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.120, -2.440, 0.240, -90.000, 0.000, 0.000);
		}
		case 451:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -1.172, 0.487, -78.299, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -1.178, 0.500, -77.399, 0.000, 0.000);
		}
		case 458:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -2.862, 0.070, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.862, 0.070, 0.000, 0.000, 0.000);
		}
		case 466:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -2.153, 0.270, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.160, 0.280, -90.000, 0.000, 0.000);
		}
		case 467:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.449, -2.160, 0.280, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.080, -2.161, 0.280, -90.000, 0.000, 0.000);
		}
		case 474:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.400, -2.916, -0.187, 5.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.120, -2.921, -0.190, 0.000, 0.000, 0.000);
		}
		case 475:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.764, 0.005, -31.800, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -2.761, 0.000, -27.100, 0.000, 0.000);
		}
		case 477:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.380, -1.883, 0.433, -71.599, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.140, -1.881, 0.436, -72.199, 0.000, 0.000);
		}
		case 478:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -0.310, 0.600, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -0.320, 0.600, 0.000, 0.000, 0.000);
		}
		case 479:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.811, 0.000, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -2.812, 0.000, 0.000, 0.000, 0.000);
		}
		case 480:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -1.120, 0.420, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.060, -1.131, 0.420, 0.000, 0.000, 0.000);
		}
		case 482:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.370, -2.710, -0.590, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.160, -2.732, -0.590, 0.000, 0.000, 0.000);
		}
		case 489:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -2.678, 0.330, -24.800, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.120, -2.676, 0.327, -24.500, 0.000, 0.000);
		}
		case 491:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.380, -2.199, 0.260, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.150, -2.204, 0.260, -90.000, 0.000, 0.000);
		}
		case 492:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.450, -1.783, 0.584, -30.500, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -1.800, 0.582, -29.699, 0.000, 0.000);
		}
		case 494:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -1.775, 0.457, -57.599, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.110, -1.780, 0.456, -57.599, 0.000, 0.000);
		}
		case 495:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.450, -2.091, 0.607, -21.800, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -2.114, 0.613, -19.199, 0.000, 0.000);
		}
		case 496:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.440, -1.790, 0.564, -73.199, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -1.792, 0.563, -71.999, 0.000, 0.000);
		}
		case 500:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.920, -1.600, 0.020, 0.000, 0.000, 90.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.920, -1.070, 0.020, 0.000, 0.000, 90.000);
		}
		case 502:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -1.596, 0.478, -59.099, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.109, -1.598, 0.482, -58.600, 0.000, 0.000);
		}
		case 503:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.450, -1.585, 0.509, -27.499, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.070, -1.602, 0.509, -26.499, 0.000, 0.000);
		}
		case 506:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.412, -2.518, -0.290, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.109, -2.523, -0.289, 5.199, 0.000, 0.000);
		}
		case 533:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -2.151, 0.290, -90.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.161, 0.290, -90.000, 0.000, 0.000);
		}
		case 541:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -1.711, 0.385, -77.699, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.090, -1.710, 0.380, -78.000, 0.000, 0.000);
		}
		case 559:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.450, -1.509, 0.545, -76.799, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -1.520, 0.550, -75.000, 0.000, 0.000);
		}
		case 560:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.410, -1.518, 0.482, -61.800, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.120, -1.521, 0.485, -61.600, 0.000, 0.000);
		}
		case 562:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.420, -1.399, 0.503, -59.500, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -1.399, 0.500, -58.600, 0.000, 0.000);
		}
		case 565:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.430, -2.120, -0.176, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.100, -2.120, -0.180, 0.000, 0.000, 0.000);
		}
		case 579:
		{
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.210, -2.840, 0.140, 0.000, 0.000, 0.000);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.330, -2.831, 0.130, 0.000, 0.000, 0.000);
		}
		default: DestroyAttachVehicle(vehicleid,0),DestroyAttachVehicle(vehicleid,1);
	}
	return 1;
}
stock TwinTurboDestroy(vehicleid)
{
	for(new i; i < 2; i++) DestroyAttachVehicle(vehicleid,i);
	TwinTurbo[vehicleid][Engine] = false;
	return TwinTurbo[vehicleid][cStatus] = false;
}
stock LaunchInstall(vehicleid)
{
    switch(GetVehicleModel(vehicleid))
	{
	    case 411:
	    {
     		AttachVehicle[vehicleid][0] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "77", 130, "Impact", 190, 1, 0xFF7C1300, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.000000, -0.160000, 0.674000, 0.000000, -90.899002, 90.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(19475, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "RED LINE", 140, "Impact", 120, 0, 0xFF7C1300, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 1.038000, -0.930000, -0.487000, 0.000000, 2.799000, 0.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, -1.020200, 1.509120, 0.030710, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][3], 0, "=", 130, "Ariel", 190, 1, 0xFF7C1300, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 0.000000, -1.919000, 0.237000, 5.899000, 90.000000, 0.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "=", 100, "Ariel", 199, 1, 0xFF7C1300, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, 0.000000, 2.055000, 0.123000, -10.900000, 90.000000, 0.099000);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, 1.151300, 1.509100, 0.048100, 0.000000, 0.000000, 0.000000);

	    }
	    case 541:
	    {
 			AttachVehicle[vehicleid][0] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "9", 140, "Impact", 180, 1, -16777216, 0, 1);
	        AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.020, -0.202, 0.602, -87.599, -179.799, 0.000);
	        AttachVehicle[vehicleid][1] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "g", 140, "Wingdings", 40, 0, -16777216, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -0.858, -0.930, 0.323, 0.000, 33.699, 0.000);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, "GT", 140, "Impact", 70, 0, -16777216, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000, -1.673, 0.380, -78.700, 0.000, 0.000);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][3], 0, "5000", 140, "Engravers MT", 30, 1, -16777216, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 0.000, -1.780, 0.368, -75.799, 0.000, 0.000);
		    AttachVehicle[vehicleid][4] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "5000", 140, "Engravers MT", 30, 1, -16777216, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][5] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, -0.970, 1.012, 0.000, 0.000, 0.000, 3.299);
		    AttachVehicle[vehicleid][6] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, 1.091, 1.004, 0.000, 0.000, 0.000, -3.299);
	    }
	    case 451:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(2771, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); //
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][0], 2, 10023, "bigwhitesfe", "bigwhite_6", 0);
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][0], 1, 3440, "airportpillar", "metalic_64", 0);
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][0], 0, 19655, "mattubes", "reddirt1", 0xFF000000); // С‚СѓС‚ Р·Р°РјРµРЅРёС‚СЊ С†РІРµС‚
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.280000, -1.440000, 0.459000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "69", 130, "Impact", 190, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.000000, -0.550000, 0.549000, 0.000000, 90.499001, 90.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(19917, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, -0.040000, -1.420000, 0.249000, 0.000000, 180.000000, 90.000000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, -0.943000, 1.052000, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(2771, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 3
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][4], 2, 10023, "bigwhitesfe", "bigwhite_6", 0);
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][4], 1, 3440, "airportpillar", "metalic_64", 0);
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][4], 0, 19655, "mattubes", "reddirt1", 0xFF000000); // С‚СѓС‚ Р·Р°РјРµРЅРёС‚СЊ С†РІРµС‚
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -0.310000, -1.430000, 0.469000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(19475, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][5], 0, "GTF 120", 140, "Impact", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, -1.006000, -0.929000, 0.000000, 0.000000, -2.399000, 180.000000);
			AttachVehicle[vehicleid][6] = CreateDynamicObject(19475, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][6], 0, "GTF 120", 140, "Impact", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, 1.009000, -0.919000, 0.000000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][7] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][7], vehicleid, 1.073100, 1.052000, 0.001000, 0.000000, 0.000000, 0.000000);
	    }
	    case 603:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "%", 130, "GTAWEAPON3", 120, 0, -1, 0, 1);
	        AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.000, -1.441, 0.480, -73.000, 0.000, 0.000);
	        AttachVehicle[vehicleid][1] = CreateDynamicObject(19482, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, ".", 90, "Courier New", 199, 1, -56320, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.026, -0.649, 0.751, 0.000, -70.399, -91.899);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(1023, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000, -2.432, 0.100, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 1.152, 0.915, -0.080, 11.799, 3.999, -179.600);
		    AttachVehicle[vehicleid][4] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -1.282, 0.917, -0.073, 11.799, -6.799, 179.600);
	    }
	    case 480:
	    {
	        AttachVehicle[vehicleid][0] = CreateDynamicObject(19939, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterial(AttachVehicle[vehicleid][0], 0, 11145, "carrierint_sfs", "noodpot_64", 0);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.000000, 1.971000, -0.520000, 0.000000, 24.099001, 90.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(19476, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "GT\nRS", 130, "Impact", 100, 0, 0xFFAADD00, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -0.817000, -0.964000, 0.406000, 0.000000, -25.099001, 540.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(1138, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000000, -2.410000, 0.019000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(19476, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][3], 0, "GT\nRS", 130, "Impact", 100, 0, 0xFFAADD00, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 0.819000, -0.960000, 0.399000, 0.000000, -24.400000, 0.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "=", 100, "Ariel", 199, 1, 0xFFAADD00, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, 0.000000, 1.248000, 0.239000, -0.299000, 90.000000, 0.000000);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, 1.059740, 1.027070, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][6] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, -0.931000, 1.027100, 0.001000, 0.000000, 0.000000, 0.000000);
	    }
	    case 415:
	    {
	        AttachVehicle[vehicleid][0] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "n", 130, "Webdings", 100, 1, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.000000, -0.420000, 0.590000, -0.599000, 90.000000, 0.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "I", 130, "Ariel", 199, 1, 0xFF009246, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -0.110000, 2.011000, 0.071000, 0.000000, 102.198997, 90.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, "I", 130, "Ariel", 199, 1, 0xFFCE2B37, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.140000, 2.013000, 0.071000, 0.000000, 102.399002, 90.000000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 1.008800, 1.123600, -0.058400, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(1014, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, 0.000000, -2.369000, 0.179000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][5], 0, "I", 130, "Ariel", 199, 1, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, 0.019000, 2.013000, 0.071000, 0.000000, 102.198997, 90.000000);
			AttachVehicle[vehicleid][6] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, -0.879600, 1.123590, -0.058440, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][7] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][7], 0, "88", 130, "Calibri", 69, 1, 0xFF000000, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][7], vehicleid, 0.000000, -0.421000, 0.593000, 0.000000, -90.499001, 90.000000);
		}
	    case 402:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(18663, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "17", 140, "Impact", 199, 0, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.011, -1.642, 0.503, 0.000, 66.199, 89.200);
		    AttachVehicle[vehicleid][1] = CreateDynamicObject(18663, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, ".", 60, "Courier New", 199, 0, -5242880, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.016, 0.042, 0.741, 0.199, 88.499, 90.700);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, "DAKOTA", 140, "Impact", 50, 0, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000, -0.557, 0.730, -87.999, 0.000, 0.000);
	    }
	    case 579:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(1071, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
	        AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 1.079, -0.910, -0.460, 0.000, 0.000, 0.000);
	        AttachVehicle[vehicleid][1] = CreateDynamicObject(1069, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -1.071, -0.920, -0.480, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(1049, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000, -2.291, 1.180, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(1037, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 0.020, -0.540, -0.090, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][4] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "||", 60, "Fixedsys", 150, 0, -1, 0, 2);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -0.420, -1.371, 1.224, -90.200, 0.000, 0.000);
	    }
	    case 429:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
	        AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.931, 1.125, 0.020, 15.500, 0.000, 2.000);
	        AttachVehicle[vehicleid][1] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 1.060, 1.121, 0.020, 15.500, 0.000, -2.000);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, ".", 90, "Courier New", 199, 0, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, -1.011, 0.823, 0.201, 1.599, 0.000, -86.600);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][3], 0, ".", 90, "Courier New", 199, 0, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 1.011, 0.823, 0.201, 1.399, 0.000, 86.600);
		    AttachVehicle[vehicleid][4] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "01", 140, "Impact", 60, 0, -16744448, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -1.004, 0.832, -0.180, 0.000, 0.000, -87.099);
		    AttachVehicle[vehicleid][5] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][5], 0, "01", 140, "Impact", 60, 0, -16744448, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, 1.003, 0.822, -0.180, 0.000, 0.000, 87.099);
		    AttachVehicle[vehicleid][6] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][6], 0, "RT", 140, "Impact", 40, 1, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, -0.988, -1.022, -0.400, 18.500, 0.000, -93.099);
		    AttachVehicle[vehicleid][7] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][7], 0, "RT", 140, "Impact", 40, 1, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][7], vehicleid, 0.988, -1.022, -0.400, 18.500, 0.000, 93.099);
	    }
        case 560:
	    {
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "AIien", 140, "Segoe Script", 90, 1, -16759516, 0, 1);
	        AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.000, -1.223, 0.639, -59.599, 0.000, 0.000);
	        AttachVehicle[vehicleid][1] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
	        SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "-17-", 140, "Segoe Script", 60, 1, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.000, -1.380, 0.570, -59.599, 0.000, 0.000);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 1.131, 1.260, 0.080, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, -1.000, 1.260, 0.080, 0.000, 0.000, 0.000);
	    }
	    case 506:
	    {
	    	AttachVehicle[vehicleid][0] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.944900, 0.985300, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(19476, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "TEAM", 130, "Impact", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, -0.061000, -1.748000, 0.329000, 0.000000, -74.299004, 270.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(19475, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, "GTJ", 140, "Impact", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 1.036000, -1.110000, -0.070000, 0.000000, 0.000000, 6.499000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 1.075200, 0.985300, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(19476, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][4], 0, "GTJ", 140, "Impact", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -1.043000, -1.201000, -0.059000, 0.000000, 0.699000, 173.699005);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][5], 0, "JDM", 120, "Impact", 50, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, -0.050000, -1.523000, 0.405000, 0.000000, -72.000000, 270.000000);
		}
		case 559:
		{
			AttachVehicle[vehicleid][0] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "J", 130, "GTAWEAPON3", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, 0.060000, -1.409000, 0.572000, 0.000000, -78.399002, 270.000000);
			AttachVehicle[vehicleid][1] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 1.146300, 1.087100, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][2] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, -1.014600, 1.087100, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][3] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][3], 0, "~", 130, "Webdings", 120, 1, 0xFFD22519, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 0.060000, -1.471000, 0.556000, 0.000000, 77.999001, 90.000000);
			AttachVehicle[vehicleid][4] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -1.014600, 1.087100, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][5] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][5], 0, "~", 130, "Webdings", 120, 1, 0xFFD22519, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][5], vehicleid, 0.060000, -1.471000, 0.556000, 0.000000, 77.999001, 90.000000);
			AttachVehicle[vehicleid][6] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 0
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][6], vehicleid, -1.014600, 1.087100, 0.001000, 0.000000, 0.000000, 0.000000);
			AttachVehicle[vehicleid][7] = CreateDynamicObject(19477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000); // 1
			SetDynamicObjectMaterialText(AttachVehicle[vehicleid][7], 0, "~", 130, "Webdings", 120, 1, 0xFFD22519, 0, 1);
			AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][7], vehicleid, 0.060000, -1.471000, 0.556000, 0.000000, 77.999001, 90.000000);
		}
		case 562:
		{
		    AttachVehicle[vehicleid][0] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		 	SetDynamicObjectMaterialText(AttachVehicle[vehicleid][0], 0, "s", 90, "Segoe Script", 155, 1, -1, 0, 1);
            AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][0], vehicleid, -0.089, -1.420, 0.487, -57.900, -79.500, 1.000);
            AttachVehicle[vehicleid][1] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][1], 0, "POWER", 140, "Comic Sans MS", 70, 0, -1, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][1], vehicleid, 0.000, -1.246, 0.589, -57.899, 0.000, 0.000);
		    AttachVehicle[vehicleid][2] = CreateDynamicObject(19327, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    SetDynamicObjectMaterialText(AttachVehicle[vehicleid][2], 0, "GT", 90, "Segoe Script", 48, 1, -8388608, 0, 1);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][2], vehicleid, 0.000, -1.404, 0.502, -57.699, 0.000, 0.000);
		    AttachVehicle[vehicleid][3] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][3], vehicleid, 1.091, 1.181, -0.040, 0.000, 0.000, 0.000);
		    AttachVehicle[vehicleid][4] = CreateDynamicObject(1112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.000000);
		    AttachDynamicObjectToVehicle(AttachVehicle[vehicleid][4], vehicleid, -0.970, 1.181, -0.040, 0.000, 0.000, 0.000);
		}
	}
	return 1;
}
stock SearchFirstGPS(playerid)
{
	new min1 = -1,
		max1 = -1;
	for(new i; i < sizeof(InfoGPS); i++)
	{
		if(player_Global_Int[playerid][130] == InfoGPS[i][igType])
		{
			if(min1 == -1) min1 = i;
			max1 = i;
		}
	}
	new Float:Distance, Float:Distance_ = 100000.0, useid;
	for(new i=min1; i < max1+1; i++)
	{
		Distance = GetPlayerDistanceFromPoint(playerid, InfoGPS[i][igX], InfoGPS[i][igY], InfoGPS[i][igZ]);
		if(Distance < Distance_) useid = i, Distance_ = Distance;
	}
	return useid;
}
stock SelectCellar(playerid, id_)
{
	switch(id_)
	{
		case 0:
		{
			if(IsCellarTextDraw{playerid}) return 1;
			IsCellarTextDraw{playerid} = true;
			#include modules/TEXTDRAWS/cellar
			for(new i; i < 28; i++) PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
			SelectTextDraw(playerid, -16776961);
			//new Float:x, Float:y, Float:z;
			//GetPlayerPos(playerid, x, y, z);
			//SetPVarFloat(playerid, !"cellarX", x), SetPVarFloat(playerid, !"cellarX", y), SetPVarFloat(playerid, !"cellarX", z);
			TogglePlayerSpectating(playerid, true);
			player_Global_Int[playerid][100] = 0;
			SelectCellar(playerid, 2);
		}
		case 1:
		{
			if(!IsCellarTextDraw{playerid}) return 1;
			IsCellarTextDraw{playerid} = false;
			for(new i; i < 28; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
			CancelSelectTextDraw(playerid);
			TogglePlayerSpectating(playerid, false);
			PlayerSpawn(playerid);
		}
		case 2:
		{
			ClearChatForPlayer(playerid);
			new id = player_Global_Int[playerid][100];
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][38-16], "%s", CellarInfoVar[id][ciName]);
			PlayerTDSetStringf(playerid, GlobalTDPlayer[playerid][16-16], "$%i",CellarInfoVar[id][ciCost]);
			InterpolateCameraPos(playerid, CellarInfoVar[id][ciCamPos][0], CellarInfoVar[id][ciCamPos][1], CellarInfoVar[id][ciCamPos][2], CellarInfoVar[id][ciCamPos][3], CellarInfoVar[id][ciCamPos][4], CellarInfoVar[id][ciCamPos][5], 10000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, CellarInfoVar[id][ciCamPosLookAt][0], CellarInfoVar[id][ciCamPosLookAt][1], CellarInfoVar[id][ciCamPosLookAt][2], CellarInfoVar[id][ciCamPosLookAt][3], CellarInfoVar[id][ciCamPosLookAt][4], CellarInfoVar[id][ciCamPosLookAt][5], 5000, CAMERA_MOVE);
		}
	}
	return 1;
}
stock EnterToGarage(playerid, i)
{
	if((!GetString(HouseInfo[i][hOwner], PN(playerid)) && !IsACop(playerid)) || !HouseInfo[i][hGarage]) return 1;
	SetPlayerVirtualWorldEx(playerid, i + 50), SetPlayerInteriorEx(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
	J_SetPlayerPos(
		playerid,
		GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X],
		GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y],
		GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z] + 1.0,
		-1
	);
	GarageEntered[playerid] = i;
	return 1;
}
/*ruslan filatov vrode
CMD:unportable(playerid, params[])
{
    if(pTemp[playerid][pPalatka] == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У Вас не установлен Переносной ларёк, поставьте его через инвентарь нажав на Переносной Ларёк(1,2,3) - USE!");
    DestroyDynamicObject(pTemp[playerid][pPalatl]);
	DestroyDynamicObject(pTemp[playerid][pPalatl]-1);
	DestroyDynamicObject(pTemp[playerid][pPalatl]-2);
	Delete3DTextLabel(textpalatka[playerid]);
	pTemp[playerid][pPalatka] = 0;
	return true;
}
stock PortableKiosk(playerid)
{
 	if(pTemp[playerid][pPalatka] == 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У Вас уже установлен Переносной ларёк, уберите его командой /unportable!");
    new Float:pos_x, Float:pos_y, Float:pos_z, Float:angle;
    GetPlayerPos(playerid,pos_x,pos_y,pos_z);
    GetPlayerFacingAngle(playerid, angle);
    new perenospalatki;
	perenospalatki = CreateDynamicObject(1342, pos_x, pos_y+0.3+1.5, pos_z, 0.000000, 0.000000, angle, -1, -1);
	SetDynamicObjectMaterial(perenospalatki, 15, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 14, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 13, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 12, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 11, 17563, "lae2tempshit", "wattsstax3_LAe", 0);
	SetDynamicObjectMaterial(perenospalatki, 10, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 9, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 8, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 7, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 6, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 5, 6049, "law_beach2", "blueshade3_64", 0);
	SetDynamicObjectMaterial(perenospalatki, 4, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 3, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterial(perenospalatki, 2, 6094, "canalsg_law", "ws_sheetwood_clean", 0);
	SetDynamicObjectMaterial(perenospalatki, 1, 19480, "signsurf", "sign", 0);
	SetDynamicObjectMaterialText(perenospalatki, 0, "", 130, "Georgia", 19, 1, 0xFFFFFFFF, 0, 1);
	perenospalatki = CreateDynamicObject(18066, pos_x-0.44, pos_y+0.1+1.7, pos_z, 0.000000, 0.000000, angle+90, -1, -1);
	SetDynamicObjectMaterial(perenospalatki, 1, 2028, "cj_games", "CJ_speaker4", 0);
	SetDynamicObjectMaterial(perenospalatki, 0, 6094, "canalsg_law", "ws_sheetwood_clean", 0);
	//pTemp[playerid][pPalatka] = 1;
	pTemp[playerid][pPalatl] = perenospalatki;
 	return SPD(playerid, 3040, DIALOG_STYLE_LIST, !"", !"{8CFF57}1. Добавить товар на покупку{FFFFFF}\n2. Прекратить покупку товара\n{FF6347}3. Прекратить аренду прилавка", "Принять", "Отмена");
}*/
stock ShowFamilyZones(playerid)
{
	if(FamZones[playerid]) return 0;
	FamZones[playerid] = true;
	HideTextDraws(playerid);
	for(new i; i < 156; i++)
	{
		if(i < 17) DestroyPlayerTD(playerid, Invent_Trade[playerid][i]);
		DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	}
    Invent_Trade[playerid][16] = CreatePlayerTextDraw(playerid, 182.999802, 58.762699, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][16], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][16], 272.609497, 313.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][16], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][16], 0x1E1E1EFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][16], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][16], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][16], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][16], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][16], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][16], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][16], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][16], 0);

    Invent_Trade[playerid][15] = CreatePlayerTextDraw(playerid, 183.233200, 64.829300, "");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][15], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][15], 272.459412, 3.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][15], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][15], 0xA52A2AFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][15], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][15], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][15], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][15], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][15], 0x00000000);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][15], 5);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][15], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][15], 0);
    PlayerTextDrawSetPreviewModel(playerid, Invent_Trade[playerid][15], 19063);
    PlayerTextDrawSetPreviewRot(playerid, Invent_Trade[playerid][15], 0.000000, 0.000000, 50.000000, 0.234500);

    Invent_Trade[playerid][14] = CreatePlayerTextDraw(playerid, 183.133102, 49.636501, "");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][14], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][14], 272.370300, 12.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][14], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][14], 0xA52A2AFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][14], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][14], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][14], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][14], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][14], 0x00000000);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][14], 5);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][14], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][14], 0);
    PlayerTextDrawSetPreviewModel(playerid, Invent_Trade[playerid][14], 19063);
    PlayerTextDrawSetPreviewRot(playerid, Invent_Trade[playerid][14], 0.000000, 75.000000, 177.000000, 0.234500);

    Invent_Trade[playerid][13] = CreatePlayerTextDraw(playerid, 187.033203, 71.836700, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][13], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][13], 264.000000, 258.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][13], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][13], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][13], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][13], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][13], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][13], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][13], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][13], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][13], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][13], 0);

    Invent_Trade[playerid][12] = CreatePlayerTextDraw(playerid, 188.666504, 73.695999, "samaps:gtasamapbit2");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][12], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][12], 261.000000, 291.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][12], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][12], 0xCAC3CCFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][12], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][12], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][12], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][12], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][12], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][12], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][12], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][12], 0);

    Invent_Trade[playerid][11] = CreatePlayerTextDraw(playerid, 183.333206, 318.436707, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][11], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][11], 270.000000, 48.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][11], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][11], 0x1E1E1EFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][11], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][11], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][11], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][11], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][11], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][11], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][11], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][11], 0);

    Invent_Trade[playerid][10] = CreatePlayerTextDraw(playerid, 187.033203, 318.051514, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][10], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][10], 264.000000, 1.469900);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][10], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][10], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][10], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][10], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][10], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][10], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][10], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][10], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][10], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][10], 0);

    Invent_Trade[playerid][9] = CreatePlayerTextDraw(playerid, 296.633698, 330.459412, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][9], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][9], 46.000000, 27.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][9], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][9], 0x915C4AFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][9], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][9], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][9], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][9], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][9], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][9], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][9], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][9], 1);

    Invent_Trade[playerid][8] = CreatePlayerTextDraw(playerid, 317.199585, 348.407501, "U");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][8], 0.397700, -1.656200);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][8], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][8], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][8], 0xFFFFFFFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][8], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][8], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][8], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][8], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][8], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][8], 0);

    if(PI[playerid][pInvLang]) Invent_Trade[playerid][7] = CreatePlayerTextDraw(playerid, 317.932800, 344.259308, "ВЫЙТИ");
    else Invent_Trade[playerid][7] = CreatePlayerTextDraw(playerid, 317.932800, 344.259308, "EXIT");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][7], 0.170800, 0.770200);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][7], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][7], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][7], 0xFFFFFFFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][7], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][7], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][7], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][7], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][7], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][7], 1);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][7], 0);

    Invent_Trade[playerid][6] = CreatePlayerTextDraw(playerid, 310.900208, 342.422211, "");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][6], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][6], 7.000000, 11.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][6], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][6], 0xFFFFFFFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][6], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][6], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][6], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][6], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][6], 0x00000000);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][6], 5);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][6], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][6], 0);
    PlayerTextDrawSetPreviewModel(playerid, Invent_Trade[playerid][6], 19177);
    PlayerTextDrawSetPreviewRot(playerid, Invent_Trade[playerid][6], 167.000000, 0.000000, 0.000000, 0.182400);

    if(PI[playerid][pInvLang]) Invent_Trade[playerid][5] = CreatePlayerTextDraw(playerid, 316.233307, 52.281399, "ВОЙНА ЗА ТЕРРИТОРИИ");
    else Invent_Trade[playerid][5] = CreatePlayerTextDraw(playerid, 316.233307, 52.281399, "WAR FOR TERRITORY");
	PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][5], 0.169599, 0.803499);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][5], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][5], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][5], 0xFFFFFFFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][5], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][5], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][5], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][5], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][5], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][5], 0);

    Invent_Trade[playerid][4] = CreatePlayerTextDraw(playerid, 441.566589, 70.948097, "::");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][4], 0.493299, 2.139199);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][4], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][4], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][4], 0xA52A2AFF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][4], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][4], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][4], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][4], 255);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][4], 0x141414FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][4], 2);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][4], 0);

    Invent_Trade[playerid][3] = CreatePlayerTextDraw(playerid, 194.433395, 221.111099, "-~n~-~n~-~n~-~n~-~n~-~n~-~n~-~n~-~n~-~n~");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][3], 0.464899, 1.044100);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][3], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][3], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][3], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][3], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][3], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][3], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][3], 0x141414FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][3], 2);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][3], 0);

    Invent_Trade[playerid][2] = CreatePlayerTextDraw(playerid, 193.333298, 226.762894, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][2], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][2], 1.000000, 85.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][2], 1);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][2], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][2], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][2], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][2], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][2], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][2], 0x000000FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][2], 4);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][2], 0);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][2], 0);

    Invent_Trade[playerid][1] = CreatePlayerTextDraw(playerid, 204.733505, 304.074097, "500");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][1], 0.146599, 1.006800);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][1], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][1], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][1], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][1], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][1], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][1], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][1], 0x141414FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][1], 2);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][1], 0);

    Invent_Trade[playerid][0] = CreatePlayerTextDraw(playerid, 213.133499, 307.807404, "KM");
    PlayerTextDrawLetterSize(playerid, Invent_Trade[playerid][0], 0.117600, 0.496499);
    PlayerTextDrawTextSize(playerid, Invent_Trade[playerid][0], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, Invent_Trade[playerid][0], 2);
    PlayerTextDrawColor(playerid, Invent_Trade[playerid][0], 0x141414FF);
    PlayerTextDrawUseBox(playerid, Invent_Trade[playerid][0], 0);
    PlayerTextDrawBoxColor(playerid, Invent_Trade[playerid][0], 0x80808080);
    PlayerTextDrawSetShadow(playerid, Invent_Trade[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid, Invent_Trade[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, Invent_Trade[playerid][0], 0x141414FF);
    PlayerTextDrawFont(playerid, Invent_Trade[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, Invent_Trade[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Trade[playerid][0], 0);
	for(new i; i < 17; i++) PlayerTextDrawShow(playerid, Invent_Trade[playerid][i]);

    GlobalTDPlayer[playerid][155] = CreatePlayerTextDraw(playerid, 296.466614, 111.762848, "_");
    GlobalTDPlayer[playerid][154] = CreatePlayerTextDraw(playerid, 307.289795, 111.762848, "_");
    GlobalTDPlayer[playerid][153] = CreatePlayerTextDraw(playerid, 318.112976, 111.762848, "_");
    GlobalTDPlayer[playerid][152] = CreatePlayerTextDraw(playerid, 328.936157, 111.762848, "_");
    GlobalTDPlayer[playerid][151] = CreatePlayerTextDraw(playerid, 339.759338, 111.762848, "_");
    GlobalTDPlayer[playerid][150] = CreatePlayerTextDraw(playerid, 350.582520, 111.762848, "_");
    GlobalTDPlayer[playerid][149] = CreatePlayerTextDraw(playerid, 361.405701, 111.762848, "_");
    GlobalTDPlayer[playerid][148] = CreatePlayerTextDraw(playerid, 372.228882, 111.762848, "_");
    GlobalTDPlayer[playerid][147] = CreatePlayerTextDraw(playerid, 383.052063, 111.762848, "_");
    GlobalTDPlayer[playerid][146] = CreatePlayerTextDraw(playerid, 393.875244, 111.762848, "_");
    GlobalTDPlayer[playerid][145] = CreatePlayerTextDraw(playerid, 404.698425, 111.762848, "_");
    GlobalTDPlayer[playerid][144] = CreatePlayerTextDraw(playerid, 415.521606, 111.762848, "_");
    GlobalTDPlayer[playerid][143] = CreatePlayerTextDraw(playerid, 296.466614, 124.860008, "_");
    GlobalTDPlayer[playerid][142] = CreatePlayerTextDraw(playerid, 307.289795, 124.860008, "_");
    GlobalTDPlayer[playerid][141] = CreatePlayerTextDraw(playerid, 318.112976, 124.860008, "_");
    GlobalTDPlayer[playerid][140] = CreatePlayerTextDraw(playerid, 328.936157, 124.860008, "_");
    GlobalTDPlayer[playerid][139] = CreatePlayerTextDraw(playerid, 339.759338, 124.860008, "_");
    GlobalTDPlayer[playerid][138] = CreatePlayerTextDraw(playerid, 350.582520, 124.860008, "_");
    GlobalTDPlayer[playerid][137] = CreatePlayerTextDraw(playerid, 361.405701, 124.860008, "_");
    GlobalTDPlayer[playerid][136] = CreatePlayerTextDraw(playerid, 372.228882, 124.860008, "_");
    GlobalTDPlayer[playerid][135] = CreatePlayerTextDraw(playerid, 383.052063, 124.860008, "_");
    GlobalTDPlayer[playerid][134] = CreatePlayerTextDraw(playerid, 393.875244, 124.860008, "_");
    GlobalTDPlayer[playerid][133] = CreatePlayerTextDraw(playerid, 404.698425, 124.860008, "_");
    GlobalTDPlayer[playerid][132] = CreatePlayerTextDraw(playerid, 415.521606, 124.860008, "_");
    GlobalTDPlayer[playerid][131] = CreatePlayerTextDraw(playerid, 296.466614, 137.957169, "_");
    GlobalTDPlayer[playerid][130] = CreatePlayerTextDraw(playerid, 307.289795, 137.957169, "_");
    GlobalTDPlayer[playerid][129] = CreatePlayerTextDraw(playerid, 318.112976, 137.957169, "_");
    GlobalTDPlayer[playerid][128] = CreatePlayerTextDraw(playerid, 328.936157, 137.957169, "_");
    GlobalTDPlayer[playerid][127] = CreatePlayerTextDraw(playerid, 339.759338, 137.957169, "_");
    GlobalTDPlayer[playerid][126] = CreatePlayerTextDraw(playerid, 350.582520, 137.957169, "_");
    GlobalTDPlayer[playerid][125] = CreatePlayerTextDraw(playerid, 361.405701, 137.957169, "_");
    GlobalTDPlayer[playerid][124] = CreatePlayerTextDraw(playerid, 372.228882, 137.957169, "_");
    GlobalTDPlayer[playerid][123] = CreatePlayerTextDraw(playerid, 383.052063, 137.957169, "_");
    GlobalTDPlayer[playerid][122] = CreatePlayerTextDraw(playerid, 393.875244, 137.957169, "_");
    GlobalTDPlayer[playerid][121] = CreatePlayerTextDraw(playerid, 404.698425, 137.957169, "_");
    GlobalTDPlayer[playerid][120] = CreatePlayerTextDraw(playerid, 415.521606, 137.957169, "_");
    GlobalTDPlayer[playerid][119] = CreatePlayerTextDraw(playerid, 296.466614, 151.054337, "_");
    GlobalTDPlayer[playerid][118] = CreatePlayerTextDraw(playerid, 307.289795, 151.054337, "_");
    GlobalTDPlayer[playerid][117] = CreatePlayerTextDraw(playerid, 318.112976, 151.054337, "_");
    GlobalTDPlayer[playerid][116] = CreatePlayerTextDraw(playerid, 328.936157, 151.054337, "_");
    GlobalTDPlayer[playerid][115] = CreatePlayerTextDraw(playerid, 339.759338, 151.054337, "_");
    GlobalTDPlayer[playerid][114] = CreatePlayerTextDraw(playerid, 350.582520, 151.054337, "_");
    GlobalTDPlayer[playerid][113] = CreatePlayerTextDraw(playerid, 361.405701, 151.054337, "_");
    GlobalTDPlayer[playerid][112] = CreatePlayerTextDraw(playerid, 372.228882, 151.054337, "_");
    GlobalTDPlayer[playerid][111] = CreatePlayerTextDraw(playerid, 383.052063, 151.054337, "_");
    GlobalTDPlayer[playerid][110] = CreatePlayerTextDraw(playerid, 393.875244, 151.054337, "_");
    GlobalTDPlayer[playerid][109] = CreatePlayerTextDraw(playerid, 404.698425, 151.054337, "_");
    GlobalTDPlayer[playerid][108] = CreatePlayerTextDraw(playerid, 415.521606, 151.054337, "_");
    GlobalTDPlayer[playerid][107] = CreatePlayerTextDraw(playerid, 296.466614, 164.151505, "_");
    GlobalTDPlayer[playerid][106] = CreatePlayerTextDraw(playerid, 307.289795, 164.151505, "_");
    GlobalTDPlayer[playerid][105] = CreatePlayerTextDraw(playerid, 318.112976, 164.151505, "_");
    GlobalTDPlayer[playerid][104] = CreatePlayerTextDraw(playerid, 328.936157, 164.151505, "_");
    GlobalTDPlayer[playerid][103] = CreatePlayerTextDraw(playerid, 339.759338, 164.151505, "_");
    GlobalTDPlayer[playerid][102] = CreatePlayerTextDraw(playerid, 350.582520, 164.151505, "_");
    GlobalTDPlayer[playerid][101] = CreatePlayerTextDraw(playerid, 361.405701, 164.151505, "_");
    GlobalTDPlayer[playerid][100] = CreatePlayerTextDraw(playerid, 372.228882, 164.151505, "_");
    GlobalTDPlayer[playerid][99] = CreatePlayerTextDraw(playerid, 383.052063, 164.151505, "_");
    GlobalTDPlayer[playerid][98] = CreatePlayerTextDraw(playerid, 393.875244, 164.151505, "_");
    GlobalTDPlayer[playerid][97] = CreatePlayerTextDraw(playerid, 404.698425, 164.151505, "_");
    GlobalTDPlayer[playerid][96] = CreatePlayerTextDraw(playerid, 415.521606, 164.151505, "_");
    GlobalTDPlayer[playerid][95] = CreatePlayerTextDraw(playerid, 296.466614, 177.248672, "_");
    GlobalTDPlayer[playerid][94] = CreatePlayerTextDraw(playerid, 307.289795, 177.248672, "_");
    GlobalTDPlayer[playerid][93] = CreatePlayerTextDraw(playerid, 318.112976, 177.248672, "_");
    GlobalTDPlayer[playerid][92] = CreatePlayerTextDraw(playerid, 328.936157, 177.248672, "_");
    GlobalTDPlayer[playerid][91] = CreatePlayerTextDraw(playerid, 339.759338, 177.248672, "_");
    GlobalTDPlayer[playerid][90] = CreatePlayerTextDraw(playerid, 350.582520, 177.248672, "_");
    GlobalTDPlayer[playerid][89] = CreatePlayerTextDraw(playerid, 361.405701, 177.248672, "_");
    GlobalTDPlayer[playerid][88] = CreatePlayerTextDraw(playerid, 372.228882, 177.248672, "_");
    GlobalTDPlayer[playerid][87] = CreatePlayerTextDraw(playerid, 383.052063, 177.248672, "_");
    GlobalTDPlayer[playerid][86] = CreatePlayerTextDraw(playerid, 393.875244, 177.248672, "_");
    GlobalTDPlayer[playerid][85] = CreatePlayerTextDraw(playerid, 404.698425, 177.248672, "_");
    GlobalTDPlayer[playerid][84] = CreatePlayerTextDraw(playerid, 415.521606, 177.248672, "_");
    GlobalTDPlayer[playerid][83] = CreatePlayerTextDraw(playerid, 296.466614, 190.345840, "_");
    GlobalTDPlayer[playerid][82] = CreatePlayerTextDraw(playerid, 307.289795, 190.345840, "_");
    GlobalTDPlayer[playerid][81] = CreatePlayerTextDraw(playerid, 318.112976, 190.345840, "_");
    GlobalTDPlayer[playerid][80] = CreatePlayerTextDraw(playerid, 328.936157, 190.345840, "_");
    GlobalTDPlayer[playerid][79] = CreatePlayerTextDraw(playerid, 339.759338, 190.345840, "_");
    GlobalTDPlayer[playerid][78] = CreatePlayerTextDraw(playerid, 350.582520, 190.345840, "_");
    GlobalTDPlayer[playerid][77] = CreatePlayerTextDraw(playerid, 361.405701, 190.345840, "_");
    GlobalTDPlayer[playerid][76] = CreatePlayerTextDraw(playerid, 372.228882, 190.345840, "_");
    GlobalTDPlayer[playerid][75] = CreatePlayerTextDraw(playerid, 383.052063, 190.345840, "_");
    GlobalTDPlayer[playerid][74] = CreatePlayerTextDraw(playerid, 393.875244, 190.345840, "_");
    GlobalTDPlayer[playerid][73] = CreatePlayerTextDraw(playerid, 404.698425, 190.345840, "_");
    GlobalTDPlayer[playerid][72] = CreatePlayerTextDraw(playerid, 415.521606, 190.345840, "_");
    GlobalTDPlayer[playerid][71] = CreatePlayerTextDraw(playerid, 296.466614, 203.443008, "_");
    GlobalTDPlayer[playerid][70] = CreatePlayerTextDraw(playerid, 307.289795, 203.443008, "_");
    GlobalTDPlayer[playerid][69] = CreatePlayerTextDraw(playerid, 318.112976, 203.443008, "_");
    GlobalTDPlayer[playerid][68] = CreatePlayerTextDraw(playerid, 328.936157, 203.443008, "_");
    GlobalTDPlayer[playerid][67] = CreatePlayerTextDraw(playerid, 339.759338, 203.443008, "_");
    GlobalTDPlayer[playerid][66] = CreatePlayerTextDraw(playerid, 350.582520, 203.443008, "_");
    GlobalTDPlayer[playerid][65] = CreatePlayerTextDraw(playerid, 361.405701, 203.443008, "_");
    GlobalTDPlayer[playerid][64] = CreatePlayerTextDraw(playerid, 372.228882, 203.443008, "_");
    GlobalTDPlayer[playerid][63] = CreatePlayerTextDraw(playerid, 383.052063, 203.443008, "_");
    GlobalTDPlayer[playerid][62] = CreatePlayerTextDraw(playerid, 393.875244, 203.443008, "_");
    GlobalTDPlayer[playerid][61] = CreatePlayerTextDraw(playerid, 404.698425, 203.443008, "_");
    GlobalTDPlayer[playerid][60] = CreatePlayerTextDraw(playerid, 415.521606, 203.443008, "_");
    GlobalTDPlayer[playerid][59] = CreatePlayerTextDraw(playerid, 296.466614, 216.540176, "_");
    GlobalTDPlayer[playerid][58] = CreatePlayerTextDraw(playerid, 307.289795, 216.540176, "_");
    GlobalTDPlayer[playerid][57] = CreatePlayerTextDraw(playerid, 318.112976, 216.540176, "_");
    GlobalTDPlayer[playerid][56] = CreatePlayerTextDraw(playerid, 328.936157, 216.540176, "_");
    GlobalTDPlayer[playerid][55] = CreatePlayerTextDraw(playerid, 339.759338, 216.540176, "_");
    GlobalTDPlayer[playerid][54] = CreatePlayerTextDraw(playerid, 350.582520, 216.540176, "_");
    GlobalTDPlayer[playerid][53] = CreatePlayerTextDraw(playerid, 361.405701, 216.540176, "_");
    GlobalTDPlayer[playerid][52] = CreatePlayerTextDraw(playerid, 372.228882, 216.540176, "_");
    GlobalTDPlayer[playerid][51] = CreatePlayerTextDraw(playerid, 383.052063, 216.540176, "_");
    GlobalTDPlayer[playerid][50] = CreatePlayerTextDraw(playerid, 393.875244, 216.540176, "_");
    GlobalTDPlayer[playerid][49] = CreatePlayerTextDraw(playerid, 404.698425, 216.540176, "_");
    GlobalTDPlayer[playerid][48] = CreatePlayerTextDraw(playerid, 415.521606, 216.540176, "_");
    GlobalTDPlayer[playerid][47] = CreatePlayerTextDraw(playerid, 296.466614, 229.637344, "_");
    GlobalTDPlayer[playerid][46] = CreatePlayerTextDraw(playerid, 307.289795, 229.637344, "_");
    GlobalTDPlayer[playerid][45] = CreatePlayerTextDraw(playerid, 318.112976, 229.637344, "_");
    GlobalTDPlayer[playerid][44] = CreatePlayerTextDraw(playerid, 328.936157, 229.637344, "_");
    GlobalTDPlayer[playerid][43] = CreatePlayerTextDraw(playerid, 339.759338, 229.637344, "_");
    GlobalTDPlayer[playerid][42] = CreatePlayerTextDraw(playerid, 350.582520, 229.637344, "_");
    GlobalTDPlayer[playerid][41] = CreatePlayerTextDraw(playerid, 361.405701, 229.637344, "_");
    GlobalTDPlayer[playerid][40] = CreatePlayerTextDraw(playerid, 372.228882, 229.637344, "_");
    GlobalTDPlayer[playerid][39] = CreatePlayerTextDraw(playerid, 383.052063, 229.637344, "_");
    GlobalTDPlayer[playerid][38] = CreatePlayerTextDraw(playerid, 393.875244, 229.637344, "_");
    GlobalTDPlayer[playerid][37] = CreatePlayerTextDraw(playerid, 404.698425, 229.637344, "_");
    GlobalTDPlayer[playerid][36] = CreatePlayerTextDraw(playerid, 415.521606, 229.637344, "_");
    GlobalTDPlayer[playerid][35] = CreatePlayerTextDraw(playerid, 296.466614, 242.734512, "_");
    GlobalTDPlayer[playerid][34] = CreatePlayerTextDraw(playerid, 307.289795, 242.734512, "_");
    GlobalTDPlayer[playerid][33] = CreatePlayerTextDraw(playerid, 318.112976, 242.734512, "_");
    GlobalTDPlayer[playerid][32] = CreatePlayerTextDraw(playerid, 328.936157, 242.734512, "_");
    GlobalTDPlayer[playerid][31] = CreatePlayerTextDraw(playerid, 339.759338, 242.734512, "_");
    GlobalTDPlayer[playerid][30] = CreatePlayerTextDraw(playerid, 350.582520, 242.734512, "_");
    GlobalTDPlayer[playerid][29] = CreatePlayerTextDraw(playerid, 361.405701, 242.734512, "_");
    GlobalTDPlayer[playerid][28] = CreatePlayerTextDraw(playerid, 372.228882, 242.734512, "_");
    GlobalTDPlayer[playerid][27] = CreatePlayerTextDraw(playerid, 383.052063, 242.734512, "_");
    GlobalTDPlayer[playerid][26] = CreatePlayerTextDraw(playerid, 393.875244, 242.734512, "_");
    GlobalTDPlayer[playerid][25] = CreatePlayerTextDraw(playerid, 404.698425, 242.734512, "_");
    GlobalTDPlayer[playerid][24] = CreatePlayerTextDraw(playerid, 415.521606, 242.734512, "_");
    GlobalTDPlayer[playerid][23] = CreatePlayerTextDraw(playerid, 296.466614, 255.831680, "_");
    GlobalTDPlayer[playerid][22] = CreatePlayerTextDraw(playerid, 307.289795, 255.831680, "_");
    GlobalTDPlayer[playerid][21] = CreatePlayerTextDraw(playerid, 318.112976, 255.831680, "_");
    GlobalTDPlayer[playerid][20] = CreatePlayerTextDraw(playerid, 328.936157, 255.831680, "_");
    GlobalTDPlayer[playerid][19] = CreatePlayerTextDraw(playerid, 339.759338, 255.831680, "_");
    GlobalTDPlayer[playerid][18] = CreatePlayerTextDraw(playerid, 350.582520, 255.831680, "_");
    GlobalTDPlayer[playerid][17] = CreatePlayerTextDraw(playerid, 361.405701, 255.831680, "_");
    GlobalTDPlayer[playerid][16] = CreatePlayerTextDraw(playerid, 372.228882, 255.831680, "_");
    GlobalTDPlayer[playerid][15] = CreatePlayerTextDraw(playerid, 383.052063, 255.831680, "_");
    GlobalTDPlayer[playerid][14] = CreatePlayerTextDraw(playerid, 393.875244, 255.831680, "_");
    GlobalTDPlayer[playerid][13] = CreatePlayerTextDraw(playerid, 404.698425, 255.831680, "_");
    GlobalTDPlayer[playerid][12] = CreatePlayerTextDraw(playerid, 415.521606, 255.831680, "_");
    GlobalTDPlayer[playerid][11] = CreatePlayerTextDraw(playerid, 296.466614, 268.928833, "_");
    GlobalTDPlayer[playerid][10] = CreatePlayerTextDraw(playerid, 307.289795, 268.928833, "_");
    GlobalTDPlayer[playerid][9] = CreatePlayerTextDraw(playerid, 318.112976, 268.928833, "_");
    GlobalTDPlayer[playerid][8] = CreatePlayerTextDraw(playerid, 328.936157, 268.928833, "_");
    GlobalTDPlayer[playerid][7] = CreatePlayerTextDraw(playerid, 339.759338, 268.928833, "_");
    GlobalTDPlayer[playerid][6] = CreatePlayerTextDraw(playerid, 350.582520, 268.928833, "_");
    GlobalTDPlayer[playerid][5] = CreatePlayerTextDraw(playerid, 361.405701, 268.928833, "_");
    GlobalTDPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 372.228882, 268.928833, "_");
    GlobalTDPlayer[playerid][3] = CreatePlayerTextDraw(playerid, 383.052063, 268.928833, "_");
    GlobalTDPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 393.875244, 268.928833, "_");
    GlobalTDPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 404.698425, 268.928833, "_");
    GlobalTDPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 415.521606, 268.928833, "_");
	new 
		Float:coords = 423.664764;
	for(new i; i < 156; i++)
	{
		PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], coords, 10.500000);
		if(coords <= 307.609772) coords = 423.664764;
		else if(coords <= 423.664764) coords -= 10.823181;
		PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][i], 0.140000, 1.086518);
		PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][i], 1);
		str_1[0] = EOS;
		if(GZInfo[GANGZONES-i-2][gzFracID] != -1) f(str_1, sizeof(str_1), "0x%s80", FamilyChatColor[ FamilyInfo[ FamilyID_(GZInfo[GANGZONES-i-2][gzFracID]) ][famChatColor] ]);
		else str_1 = "0xFFFFFF80";
		PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i], HexStr(str_1));
		PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}
	SelectTextDraw(playerid, 0xA52A2AFF);
	return 1;
	/*
	ЭТО ТОЖЕ КОД ТРИАЗОВА
	new 
		Float:coords = 423.664764,
		coords_count,
		Float:coords_X = 415.521606, 
		Float:coords_Y = 268.928833;
	for(new i; i < re; i++) DestroyPlayerTD(playerid, GlobalTDPlayer[playerid][i]);
	for(new i; i < re; i++)
	{
		GlobalTDPlayer[playerid][i] = CreatePlayerTextDraw(playerid, coords_X, coords_Y, "_");
		coords_X -= 10.823181;
		if(coords_count >= 12)
		{
			coords_Y -= 13.097153;
			coords_X = 415.521606;
			coords_count = 0;
		}
		coords_count++;
		PlayerTextDrawTextSize(playerid, GlobalTDPlayer[playerid][i], coords, 10.500000);
		if(coords <= 307.609772) coords = 423.664764;
		else if(coords <= 423.664764) coords -= 10.823181;
		PlayerTextDrawLetterSize(playerid, GlobalTDPlayer[playerid][i], 0.140000, 1.086518);
		PlayerTextDrawAlignment(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawColor(playerid, GlobalTDPlayer[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawBoxColor(playerid, GlobalTDPlayer[playerid][i], 0xFFFFFF80);
		PlayerTextDrawSetShadow(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, GlobalTDPlayer[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, GlobalTDPlayer[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawSetProportional(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, GlobalTDPlayer[playerid][i], 1);
		PlayerTextDrawShow(playerid, GlobalTDPlayer[playerid][i]);
	}*/
}
stock destroyvehicle_(vehicleid)
{
	if(IsValidDynamic3DTextLabel(v_Vehicle_LabelID[vehicleid])) DestroyDynamic3DTextLabel(v_Vehicle_LabelID[vehicleid]), v_Vehicle_LabelID[vehicleid] = Text3D:-1;
	if(Iter_Contains(EngineON_Vehicle, vehicleid) == 1) Iter_Remove(EngineON_Vehicle, vehicleid);
	for(new i; i < 10+SLOT_ATTACH_EDIT; i++) DestroyAttachVehicle(vehicleid,i);
	SetDoorsStatus(vehicleid, true);
	new bool:vblock;
	foreach(new i: PlayerInVehicle[vehicleid]) 
	{
		IsNPCEnterVehicle[i] = false;
		vblock = true;
		//FCNPC_RemoveFromVehicle(i);
		RemovePlayerFromVehicle(i);
	}
	if(vblock != false) SetTimerEx("SafeDestroyVehicle",600,false,"d",vehicleid);
	else SetTimerEx("SafeDestroyVehicle",100,false,"d",vehicleid);
	return 1;
}
public: SafeDestroyVehicle(vehicleid) DestroyVehicle(vehicleid);
stock HexStr(const string[]) 
{
	new ret, val, i; 
	if (string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while (string[i])
	{
		ret <<= 4;
		val = string[i++] - '0';
		if (val > 0x09) val -= 0x07;
		if (val > 0x0F) val -= 0x20;
		if (val < 0x01) continue;
		if (val < 0x10) ret += val;
	}
	return ret;
}
stock SearchFreeCellForRend(id)
{
	for(new i; i < 10; i++) if(InvPlayerRentInvSlot[id][i] == -1) return i;
	return -1;
}
stock UpdateInvSecurity(playerid, PlayerText:textdraw_)
{
	PlayerTextDrawLetterSize(playerid, textdraw_, 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, textdraw_, 15.494240, 18.812504);
	PlayerTextDrawAlignment(playerid, textdraw_, 1);
	PlayerTextDrawColor(playerid, textdraw_, 0x999999FF);
	PlayerTextDrawUseBox(playerid, textdraw_, 0);
	PlayerTextDrawBoxColor(playerid, textdraw_, 0x80808080);
	PlayerTextDrawSetShadow(playerid, textdraw_, 2);
	PlayerTextDrawSetOutline(playerid, textdraw_, 0);
	PlayerTextDrawBackgroundColor(playerid, textdraw_, 0x333333FF);
	PlayerTextDrawFont(playerid, textdraw_, 5);
	PlayerTextDrawSetProportional(playerid, textdraw_, 1);
	PlayerTextDrawSetSelectable(playerid, textdraw_, 0);
	PlayerTextDrawSetPreviewModel(playerid, textdraw_, 1649);
	PlayerTextDrawSetPreviewRot(playerid, textdraw_, 0.000000, 0.000000, 90.000000, 2.000000);
	PlayerTextDrawShow(playerid, textdraw_);
}
stock ShowInvSecurity(playerid)
{
	//if(!IsPlayerOpenInvSecurity[playerid]) return 1;
	//IsPlayerOpenInvSecurity[playerid] = true;
	//for(new i; i < 40; i++) DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][i]);
	new Float:X = PI[playerid][pInvPos_X], Float:Y = PI[playerid][pInvPos_Y];
	new td[4] = {5,14,24,34};
	//задний фон маленьких клеточек
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 376.130524+X, 306.975037-(i*55.500031)+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InvPlayerSecurity[playerid][td[i]], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InvPlayerSecurity[playerid][td[i]], 81.971199, 21.000004);
		PlayerTextDrawAlignment(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawColor(playerid, InvPlayerSecurity[playerid][td[i]], InvColor[PI[playerid][pInvColor]][1]);
		PlayerTextDrawUseBox(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBoxColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvPlayerSecurity[playerid][td[i]], 2);
		PlayerTextDrawSetOutline(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBackgroundColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x000000FF);
		PlayerTextDrawFont(playerid, InvPlayerSecurity[playerid][td[i]], 4);
		PlayerTextDrawSetProportional(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawSetSelectable(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawShow(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	//design
	td = {7,16,26,27};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 337.000000+X, 326.600037-(i*55.500031)+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InvPlayerSecurity[playerid][td[i]], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InvPlayerSecurity[playerid][td[i]], 17.565258, 21.000004);
		PlayerTextDrawAlignment(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawColor(playerid, InvPlayerSecurity[playerid][td[i]], InvColor[PI[playerid][pInvColor]][1]);
		PlayerTextDrawUseBox(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBoxColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvPlayerSecurity[playerid][td[i]], 2);
		PlayerTextDrawSetOutline(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBackgroundColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x000000FF);
		PlayerTextDrawFont(playerid, InvPlayerSecurity[playerid][td[i]], 4);
		PlayerTextDrawSetProportional(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawSetSelectable(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawShow(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	//big cell
	td = {8,17,28,39};
	for(new i; i < sizeof td; i++)
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 338.000000+X, 294.100037-(i*55.500031)+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InvPlayerSecurity[playerid][td[i]], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InvPlayerSecurity[playerid][td[i]], 35.130516, 52.500008);
		PlayerTextDrawAlignment(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x222222FF);
		PlayerTextDrawUseBox(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBoxColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvPlayerSecurity[playerid][td[i]], 2);
		PlayerTextDrawSetOutline(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBackgroundColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x000000FF);
		PlayerTextDrawFont(playerid, InvPlayerSecurity[playerid][td[i]], 4);
		PlayerTextDrawSetProportional(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawSetSelectable(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawShow(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	td = {4,13,23,33};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 376.130524+X, 307.975037-(i*55.500031)+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InvPlayerSecurity[playerid][td[i]], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InvPlayerSecurity[playerid][td[i]], 80.971199, 38.625008);
		PlayerTextDrawAlignment(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x111111FF);
		PlayerTextDrawUseBox(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBoxColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvPlayerSecurity[playerid][td[i]], 2);
		PlayerTextDrawSetOutline(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBackgroundColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x000000FF);
		PlayerTextDrawFont(playerid, InvPlayerSecurity[playerid][td[i]], 4);
		PlayerTextDrawSetProportional(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawSetSelectable(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawShow(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	td = {6,15,25,35};
	for(new i; i < sizeof td; i++)
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 377.330109+X, 330.550049-(i*55.500031)+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InvPlayerSecurity[playerid][td[i]], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InvPlayerSecurity[playerid][td[i]], 13.218993, 16.049988);
		PlayerTextDrawAlignment(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x999999FF);
		PlayerTextDrawUseBox(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBoxColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InvPlayerSecurity[playerid][td[i]], 2);
		PlayerTextDrawSetOutline(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawBackgroundColor(playerid, InvPlayerSecurity[playerid][td[i]], 0x333333FF);
		PlayerTextDrawFont(playerid, InvPlayerSecurity[playerid][td[i]], 5);
		PlayerTextDrawSetProportional(playerid, InvPlayerSecurity[playerid][td[i]], 1);
		PlayerTextDrawSetSelectable(playerid, InvPlayerSecurity[playerid][td[i]], 0);
		PlayerTextDrawSetPreviewModel(playerid, InvPlayerSecurity[playerid][td[i]], 1649);
		PlayerTextDrawSetPreviewRot(playerid, InvPlayerSecurity[playerid][td[i]], 0.000000, 0.000000, 90.000000, 2.000000);
		PlayerTextDrawShow(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	td = {3,12,22,32};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 441.607483+X, 327.787537-(i*55.500031)+Y, "LD_SPAC:white");
		UpdateInvSecurity(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	td = {2,11,21,31};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 425.113251+X, 327.787537-(i*55.500031)+Y, "LD_SPAC:white");
		UpdateInvSecurity(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	//
	td = {1,10,20,30};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 441.607483+X, 307.975037-(i*55.500031)+Y, "LD_SPAC:white");
		UpdateInvSecurity(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
	td = {0,9,19,29};
	for(new i; i < sizeof td; i++) 
	{
		DestroyPlayerTD(playerid, InvPlayerSecurity[playerid][td[i]], true);
		InvPlayerSecurity[playerid][td[i]] = CreatePlayerTextDraw(playerid, 425.113251+X, 307.975037-(i*55.500031)+Y, "LD_SPAC:white");
		UpdateInvSecurity(playerid, InvPlayerSecurity[playerid][td[i]]);
	}
}
stock ViewSpawn(playerid)
{
	str_1[0] = EOS;
	for(new i; i < 30; i++) player_Global_Int[playerid][i] = -1;
	new count=1;
	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(!i) 
		{
			str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Вокзал\n", count);
			strcat(str_1, str_2);
			player_Global_Int[playerid][count-1] = 0;
			count++;
		}
		if(GetString(HouseInfo[i][hOwner],PN(playerid)) || GetPlayerTenant(playerid, i) != 0)
		{
			str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Дом №%i\n", count, i);
			strcat(str_1, str_2);
			player_Global_Int[playerid][count-1] = 1;
			player_Global_Int[playerid][100+count-1] = i;
			count++;
		}
	}
	//family
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Семейный дом / квартира\n", count);
	strcat(str_1, str_2);
	player_Global_Int[playerid][count-1] = 2;
	count++;
	//org
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Организация %s\n", count, global_OrgInfo[GetTeamID(playerid)][g_oName]);
	strcat(str_1, str_2);
	player_Global_Int[playerid][count-1] = 3;
	count++;
	//premium spawn
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Сохраненная точка (%.2f %.2f %.2f)\n", count, PI[playerid][pPoint_Pos][0],PI[playerid][pPoint_Pos][1],PI[playerid][pPoint_Pos][2]);
	strcat(str_1, str_2);
	player_Global_Int[playerid][count-1] = 4;
	count++;
	//disconnect spawn
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Последнее место выхода\n", count);
	strcat(str_1, str_2);
	player_Global_Int[playerid][count-1] = 5;
	count++;
	//trailer
	str_2[0] = EOS, f(str_2, sizeof(str_2), "{B03131}[%i]{FFFFFF} Трейлер", count);
	strcat(str_1, str_2);
	player_Global_Int[playerid][count-1] = 0;
	return SPD(playerid, 7880, DIALOG_STYLE_TABLIST, "Выбор места спавна", str_1, "Выбрать", "");
}
stock IsPlayerConnectEx(playerid)
{
	if(Iter_Contains(Player, playerid) == 1) return 1;
	return 0;
}
/*
stock CreateNPC(playerid, skin, const name[])
{
	static name_[10];
	name_[0] = EOS, f(name_, sizeof(name_), "NPC_%i", random(MAX_PLAYERS));
	GetUID_PlayerNPC[playerid] = FCNPC_Create(name_);
	static Float:position[3];
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	MapAndreas_FindZ_For2DCoord(position[0], position[1], position[2]);
	FCNPC_Spawn(GetUID_PlayerNPC[playerid], skin, position[0], position[1]+2, position[2]+2);
	SetPositionNPC(playerid, GetUID_PlayerNPC[playerid], position);
	FCNPC_SetInvulnerable(GetUID_PlayerNPC[playerid], false);
	IsNPCEnterVehicle[GetUID_PlayerNPC[playerid]] = false;
	new id;
	for(new i; i < sizeof(InfoNPC); i++)
	{
		if(ItemsInfo[InfoNPC[i][npc_itemid]][ItemID] == skin) 
		{
			id = i; 
			break;
		}
	}
	FCNPC_SetHealth(GetUID_PlayerNPC[playerid], InfoNPC[id][npc_maxhp]);
	//
	NameTextNPC[GetUID_PlayerNPC[playerid]] = CreateDynamic3DTextLabel(name, ItemsInfo[InfoNPC[id][npc_itemid]][ItemColor],0.0, 0.0, 0.050000, 20.0, GetUID_PlayerNPC[playerid])
	SetPlayerColor(GetUID_PlayerNPC[playerid],TeamColors[0]);
	return GetUID_PlayerNPC[playerid];
}
CMD:deletebot(playerid) DeleteNPC(playerid);
stock DeleteNPC(playerid)
{
	if(GetUID_PlayerNPC[playerid] == -1 || !FCNPC_IsValid(GetUID_PlayerNPC[playerid])) return -1;
	DestroyDynamic3DTextLabel(NameTextNPC[GetUID_PlayerNPC[playerid]]);
	IsNPCEnterVehicle[GetUID_PlayerNPC[playerid]] = false;
	NameTextNPC[GetUID_PlayerNPC[playerid]] = Text3D:-1;
	IsNPCAttack[GetUID_PlayerNPC[playerid]] = -1;
	FCNPC_Destroy(GetUID_PlayerNPC[playerid]);
	GetUID_PlayerNPC[playerid] = -1;
	GetTimerID_PlayerNPC[playerid] = -1;
	return 1;
}
//CMD:viewspawn(playerid) ViewSpawn(playerid);
CMD:chatbot(playerid, params[])
{
	if(GetUID_PlayerNPC[playerid] == -1) return 1;
	extract params -> new string:str[100]; else return 1;
	SendNPCMessage(playerid, str);
	return 1;
}*/
/*CMD:setv(playerid, arg[])
{
	extract arg -> new Float:str, Float:str2, Float:str3; else return 1;
	SCM(playerid, -1,"++");
	SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), str, str2, str3);
}*/
stock SetPositionNPC(playerid, npcid, Float:Position__[], bool:z=true)
{
	if(!z) MapAndreas_FindZ_For2DCoord(Position__[0], Position__[1], Position__[2]);
	FCNPC_SetPosition(npcid, Position__[0], Position__[1]+2, Position__[2]+2);

	FCNPC_SetInterior(npcid, GetPlayerInterior(playerid));
	FCNPC_SetVirtualWorld(npcid, GetPlayerVirtualWorld(playerid));
	SetPlayerVirtualWorldEx(npcid, GetPlayerVirtualWorld(playerid));
	SetPlayerInteriorEx(npcid, GetPlayerInterior(playerid));
	FCNPC_SetAngleToPlayer(npcid, playerid);
}
stock SearchFCNPCfromPlayer(npcid)
{
	foreach_player(i) if(GetUID_PlayerNPC[i] == npcid) return i;
	return -1;
}
//public FCNPC_OnDeath(npcid, killerid, reason)
//{
	/*new playerid = SearchFCNPCfromPlayer(npcid);
	if(playerid == -1)
	{
		FCNPC_Spawn(npcid, 1, 0.0, 0.0, 0.0);
		FCNPC_Destroy(npcid);
		return 1;
	}
	static Float:local_player[3];
	GetPlayerPos(playerid, local_player[0], local_player[1], local_player[2]);
    FCNPC_Spawn(GetUID_PlayerNPC[playerid], 1, local_player[0], local_player[1]+2, local_player[2]);*/
 //   return 1;
//}
stock IsUniqueCar(modelid)
{
	for(new i; i < sizeof unique_car; i++) if(unique_car[i] == modelid) return 0;
	return 1;
}
stock SetPlayerVirtualWorldEx(playerid, virt)
{
	if(playerid == -1) return 1;
	SetPlayerVirtualWorld(playerid, virt);
	if(GetUID_PlayerNPC[playerid] != -1) SetPlayerVirtualWorld(GetUID_PlayerNPC[playerid], virt);
	return virt;
}
stock SetPlayerInteriorEx(playerid, int)
{
	if(playerid == -1) return 1;
	SetPlayerInterior(playerid, int);
	if(GetUID_PlayerNPC[playerid] != -1) SetPlayerInterior(GetUID_PlayerNPC[playerid], int);
	return int;
}
IPacket:200(playerid, BitStream:bs)
{
	//new onVehicleData[PR_InCarSync];
	//BS_IgnoreBits(bs, 8);
	//BS_ReadInCarSync(bs, onVehicleData);
	//printf("%f %f %f %f", onVehicleData[PR_quaternion][0], onVehicleData[PR_quaternion][1] ,onVehicleData[PR_quaternion][2], onVehicleData[PR_quaternion][3]);
	/*if((onVehicleData[PR_quaternion][3] <= -0.75 || onVehicleData[PR_quaternion][3] >= 0.75) && !IsUniqueCar(vTemp[ onVehicleData[PR_vehicleId] ][vModel]))
	{
		new veh = GetPlayerVehicleID(playerid);
		new Float:X,Float:Y,Float:Z,Float:A;
		GetVehiclePos(veh,X,Y,Z);
		J_SetVehiclePos(veh,X,Y,Z);
		GetVehicleZAngle(veh, A);
		SetVehicleZAngle(veh, A);
	}*/
	return 1;
}
public Streamer_OnPluginError(const error[])
{
	printf("streamer error -> %s", error);
}
stock ResetRacePlayer(playerid)
{
	if(playerid == -1) return 1;
	IsPlayerToRaceID[playerid] = -1;
	IsPlayerRacePresentCount[playerid] = 0;
	return 1;
}
CMD:mgb(playerid)
{
	if(!IsPlayerUnicalDostup(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Неизвестная команда! Введите /help для просмотра доступных функций.");
	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Автоматический онлайн: %s", (IsStartBot) ? ("{6495ED}Запущен") : ("{CCCCCC}Остановлен"));
	SPD(playerid, 4460, DIALOG_STYLE_LIST, str_1, "Настройка\nСтатистика", "Выбрать", "Закрыть");
	return 1;
}
CMD:give_antirakbot(playerid, get[])
{
	if(CheckAdmin(playerid, 8, 3)) return 1;
	extract get -> new string:name[24], bot; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}/give_antirakbot [nickname] [on/off anti rak bot]");
	SendAdminsMessagef(-1, "[A] %s[%i] изменил показатель в Anti-RakBot(на %s) для %s", PN(playerid), playerid, bot == 1 ? ("on") : ("off"), name);
	str_q2[0] = EOS;
	mysql_escape_string(name, str_q2);
    str_q[0] = EOS, f(str_q, sizeof(str_q), "UPDATE `accounts` SET `IsRakBot` = '%i' WHERE `NickName` = '%s' LIMIT 1;", bot, str_q2);
	mysql_pquery(mysql, str_q);
	return 1;
}
stock SetCount_bot(playerid)
{
	str_1[0] = EOS;
	for(new i; i < 24; i++) 
	{
		if(AtHourBot[i] != -1) f(str_1, sizeof(str_1), "%s{FFFFFF}Максимальное количество ботов на {6495ED}%i:00 {ffffff}равно %i/%i\n", str_1, i, AtHourBot[i], MAX_PLAYERS-1);
		else f(str_1, sizeof(str_1), "%s{FFFFFF}Боты на {6495ED}%i:00 {ffffff}варьируются от реального онлайна\n", str_1, i);
	}
	SPD(playerid, 4461, DIALOG_STYLE_LIST, !"{FFFFFF}Настройка", str_1, !"Выбрать", !"Назад");
	return 1;
}
stock SetCount_botList(playerid, listitem)
{
	if(listitem < 0 || listitem > 24) return SetCount_bot(playerid);

	str_1[0] = EOS, f(str_1, sizeof(str_1), "{FFFFFF}Введите количество ботов на время %i:00\n\
													{CCCCCC}- Для включения вариация от онлайна, пропишите >- \'-1\'", listitem);

	SPD(playerid, 4462, DIALOG_STYLE_INPUT, "Настройки", str_1, !"Принять", !"Назад");
	player_Global_Int[playerid][10] = listitem;
	return 1;
}
stock IsPlayerUnicalDostup(playerid)
{
	for(new i; i < sizeof UnicalDostup; i++) if(GetString(PN(playerid), UnicalDostup[i])) return 1;
	return 0;
}
stock IsPlayerUnicalDostupParam(param[])
{
	for(new i; i < sizeof UnicalDostup; i++) if(GetString(param, UnicalDostup[i])) return 1;
	return 0;
}
/*CMD:showbuy(playerid, get[])
{
	extract get -> new str; else return 1;
	ShowBuyMenus(playerid, str);
	return 1;
}
stock ShowBuyMenus(playerid, type)
{
	if(ShopOpen[playerid]) return 1;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideTextDraws(playerid, 7);
	HideLogo(playerid);
	PI[playerid][pInvPos_X] = 0.0, PI[playerid][pInvPos_Y] = 0.0;
	#include modules/TEXTDRAWS/inv/inv_menu
	#include modules/TEXTDRAWS/inv/inv_shop
	if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "SHOP");
	else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("МАГАЗИН"));
	PlayerTextDrawShow(playerid, Invent[playerid][51]);
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		PI[playerid][pInvItemLock][i] = true;
		if(i < 18) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 7) PlayerTextDrawShow(playerid, Item_Menu_Shop[playerid][i]);
		if(i < 2)
		{
			player_Global_Int[playerid][i]	= 0;
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		}
	}
	MenuStatus{playerid} = true;
	ShopOpen[playerid] = true;
	SetPVarInt(playerid, !"BuyType", type);
	//ShowBuyPage(playerid, 1, type);
	ShowInvPage(playerid, page);
	return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}*/
stock GetInvID(playerid, td, bool:value=true)
{
	if(value) //для обновления клеток в инве
	{
		if(td < 36) return td;
		if(td >= 36 && td < 72) return td-36;
		if(td >= 72 && td < 108) return td-72;
		if(td >= 108 && td <= MAX_SLOT_INV) return td-108;
	}
	else return td+(36*(InventPage[playerid]-1)); //клетка на странице ^ поиск клетки со страницы
	return 0;
}
stock GetInvMenuID(playerid, td, bool:value=true)
{
	if(value) //для обновления клеток в инве
	{
		if(td < 30) return td;
		if(td >= 30 && td < 60) return td-30;
		if(td >= 60 && td < 90) return td-60;
		if(td >= 90 && td < 120) return td-90;
		if(td >= 120 && td <= 150) return td-120;
	}
	else return td+(30*(MenuPage[playerid]-1)); //клетка на странице ^ поиск клетки со страницы
	return 0;
}
stock GetPageInv(td, bool:value)
{
	if(value)
	{
		if(td < 36) return 1;
		else if(td >= 36 && td < 72) return 2;
		else if(td >= 72 && td < 108) return 3;
		else if(td >= 108 && td <= 144) return 4;
	}
	else
	{
		if(td < 30) return 1;
		else if(td >= 30 && td < 60) return 2;
		else if(td >= 60 && td < 90) return 3;
		else if(td >= 90 && td < 120) return 4;
		else if(td >= 120 && td < 150) return 5;
	}
	return 0;
}
CMD:trunk(playerid, params[])
{
	extract params -> new id; else return SCM(playerid, COLOR_RED, !"Используй: /trunk [id]");
    if(!TetCar(playerid, id)) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Вы далеко от транспорта!");
    return 1;
}
stock DestroyDynamicPickupEx(pickupid)
{
	if(!IsValidDynamicPickup(pickupid)) return 0;
	DestroyDynamicPickup(pickupid);
	return 1;
}
stock GetShopCost(id, type, bool:ItIsDialog = false)
{
	new str[ 30 ], cost;

	switch(ShopData[type][shopType])
	{
		case SHOP_TYPE_BUSINESS: str = "$%d", cost = 99999;
		case SHOP_TYPE_FAMILY: str = ItIsDialog ? "%d семейных талонов" : "%d", cost = ShopData[type][shopCost][id];
		case SHOP_TYPE_RESPECTS: str = ItIsDialog ? "%d бандитских респектов" : "%d EXP", cost = ShopData[type][shopCost][id];
		case SHOP_TYPE_STATIC_COST: str = "$%d", cost = ShopData[type][shopCost][id];
	}
	f(str, sizeof str, str, cost);
	return str;
}
stock SetFocusBrowser(playerid, browserid, bool:toggle)
{
	if(!toggle) UpdateBrowser(playerid, 25, browserid, 0, 0, 0, 0);
	else UpdateBrowser(playerid, 25, browserid, 0, 0, 0, 128);
	player_Status_Focus[playerid] = toggle;
	return 1;
}
CMD:init_browser(playerid)
{
	OnPlayerInitializingBrowser(playerid);
}
stock CreateBrowser(playerid, browserid, const url[])
{
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs, PR_UINT8, 10);
	BS_WriteValue(bs, PR_UINT8, player_Cef_PositionWindow_X[playerid]); //160 240
	BS_WriteValue(bs, PR_UINT8, player_Cef_PositionWindow_Y[playerid]); //5 4
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, player_Cef_PositionWindow_rX[playerid]); //132 169
	BS_WriteValue(bs, PR_UINT8, player_Cef_PositionWindow_rY[playerid]); //3 2
	printf("playerid %i -> window x y stable %i %i %i %i", \
	playerid, player_Cef_PositionWindow_X[playerid], player_Cef_PositionWindow_Y[playerid], \
	player_Cef_PositionWindow_rX[playerid], player_Cef_PositionWindow_rY[playerid]);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT32, strlen(url));
	BS_WriteValue(bs, PR_STRING, url, strlen(url));
	if(browserid == 0) //svetle
	{
		BS_WriteValue(bs, PR_UINT32, 12);
		BS_WriteValue(bs, PR_UINT8, 111);
		BS_WriteValue(bs, PR_UINT8, 114);
		BS_WriteValue(bs, PR_UINT8, 55);
		BS_WriteValue(bs, PR_UINT8, 108);
		BS_WriteValue(bs, PR_UINT8, 113);
		BS_WriteValue(bs, PR_UINT8, 56);
		BS_WriteValue(bs, PR_UINT8, 81);
		BS_WriteValue(bs, PR_UINT8, 56);
		BS_WriteValue(bs, PR_UINT8, 104);
		BS_WriteValue(bs, PR_UINT8, 101);
		BS_WriteValue(bs, PR_UINT8, 117);
		BS_WriteValue(bs, PR_UINT8, 114);
		BS_WriteValue(bs, PR_UINT32, 0);
		//BS_WriteValue(bs, PR_UINT8, browserid);
	}
	else //vue or cinema
	{
		BS_WriteValue(bs, PR_UINT32, 0);
		BS_WriteValue(bs, PR_UINT8, browserid);
		BS_WriteValue(bs, PR_UINT16, 0);
		BS_WriteValue(bs, PR_UINT8, 0);
	}
    //else BS_WriteValue(bs, PR_UINT32, 0), BS_WriteValue(bs, PR_STRING, " ", 0);
	/*
	orig
		svetle - 220, 10, 160, 5, 0, 0, 132, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 102, 105, 108, 101, 58, 47, 47, 47, 102, 114, 111, 110, 116, 101, 110, 100, 47, 115, 118, 101, 108, 116, 101, 95, 106, 115, 47, 105, 110, 100, 101, 120, 95, 110, 101, 119, 46, 104, 116, 109, 108, 12, 0, 0, 0, 111, 114, 55, 108, 113, 56, 81, 56, 104, 101, 117, 114, 0, 0, 0, 0
		vue - 220, 10, 160, 5, 0, 0, 132, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 102, 105, 108, 101, 58, 47, 47, 47, 102, 114, 111, 110, 116, 101, 110, 100, 47, 118, 117, 101, 95, 106, 115, 47, 105, 110, 100, 101, 120, 46, 104, 116, 109, 108, 0, 0, 0, 0, 1, 0, 0, 0
	my 
		svetle - 220, 10, 160, 5, 0, 0, 132, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 102, 105, 108, 101, 58, 47, 47, 47, 102, 114, 111, 110, 116, 101, 110, 100, 47, 115, 118, 101, 108, 116, 101, 95, 106, 115, 47, 105, 110, 100, 101, 120, 95, 110, 101, 119, 46, 104, 116, 109, 108, 12, 0, 0, 0, 111, 114, 55, 108, 113, 56, 81, 56, 104, 101, 117, 114, 0, 0, 0, 0, 0
		vue - 220, 10, 160, 5, 0, 0, 132, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 102, 105, 108, 101, 58, 47, 47, 47, 102, 114, 111, 110, 116, 101, 110, 100, 47, 118, 117, 101, 95, 106, 115, 47, 105, 110, 100, 101, 120, 46, 104, 116, 109, 108, 0, 0, 0, 0, 1, 0, 0, 0
	*/
	//BS_WriteValue(bs, PR_UINT32, browserid);
	//BS_WriteValue(bs, PR_UINT16, 0);
	PR_SendPacket(bs, playerid);
	return 1;
}
stock ExecuteEvent(playerid, browserid, const event[], interfaceid=255)
{
	switch(browserid)
	{
		case 0: if(!player_Vue_Init[playerid]) return 0;
		case 1: if(!player_Svetle_Init[playerid]) return 0;
	}
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs, PR_UINT8, 17);
	BS_WriteValue(bs, PR_UINT32, browserid);
	BS_WriteValue(bs, PR_UINT32, strlen(event));
	BS_WriteValue(bs, PR_STRING, event, strlen(event));
	BS_WriteValue(bs, PR_UINT32, interfaceid);
	PR_SendPacket(bs, playerid);
	return 1;
}
CMD:show_aim(playerid, get[])
{
	extract get -> new int; else return 1;
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs, PR_UINT8, 121);
	str_1[0] = EOS, f(str_1, sizeof(str_1), "custom_crosshair_%i", int);
	BS_WriteValue(bs, PR_UINT8, strlen(str_1));
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_STRING, str_1, strlen(str_1));
	PR_SendPacket(bs, playerid);
	SCM(playerid,-1,"aim++");
	return 1;
}
CMD:send_packet_playerid(playerid, get[])
{
	//120, 51, 0, 133, 52, 177, 183, 183, 47, 176, 178, 54, 180, 183, 0, 0
	extract get -> new str=-1, str2=-1, str3=-1, str4=-1, str5=-1, str6=-1, str7=-1, str8=-1, str9=-1, str10=-1, str11=-1, str12=-1, str13=-1, str14=-1; 
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	new BitStream:bs = BS_New();
//	220, 47, 8, 83, 78, 79, 87, 70, 88, 73, 73, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 64, 0, 208, 7, 0, 0
	/*фары -> 132(packetid) vehicleid 0(rgb) 255(rgb) 0(rgb) 254(яркость)
	фары new -> 132   91   -252   0   0   0   0   0   0   255
	колеса -> 135 vehicleid 102 102 134 63 0 0 0 0 0
	vip(nick) -> 120 playerid 132 52 177 183 183 47 187 52 184
	open/close chat -> 108 playerid 0 0 128 and 0
	поворотники -> 2 vehicleid 0-3
	33 - чат
	39 - сохранение диалога
	42 - новый вид ников
	47/48(on/off), 8, 83, 78, 79, 87, 70, 88, 73, 73, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 64, 0, 208, 7, 0, 0, 0 - снег
	53, (0-2), 0 - вид диалогов(упрощенный/полный и простой)
	27 (bool) - инвиз
	CMD:chat(playerid, get[])
	{
		extract get -> new str; else return SCM(playerid, -1, "bool");
		UpdateBrowser(playerid, 33, str);
	}*/
	BS_WriteValue(bs, PR_UINT8, 220);
	if(str != -1) BS_WriteValue(bs, PR_UINT8, str); //packet id
	if(str2 != -1) BS_WriteValue(bs, PR_UINT8, str2); //vehicleid 
	if(str3 != -1) BS_WriteValue(bs, PR_UINT8, str3); //255
	if(str4 != -1) BS_WriteValue(bs, PR_UINT8, str4); //16
	if(str5 != -1) BS_WriteValue(bs, PR_UINT8, str5); //142
	if(str6 != -1) BS_WriteValue(bs, PR_UINT8, str6); //215
	if(str7 != -1) BS_WriteValue(bs, PR_UINT8, str7); //215
	if(str8 != -1) BS_WriteValue(bs, PR_UINT8, str8); //215
	if(str9 != -1) BS_WriteValue(bs, PR_UINT8, str9); //215
	if(str10 != -1) BS_WriteValue(bs, PR_UINT8, str10); //215
	if(str11 != -1) BS_WriteValue(bs, PR_UINT8, str11); //215
	if(str12 != -1) BS_WriteValue(bs, PR_UINT8, str12); //215
	if(str13 != -1) BS_WriteValue(bs, PR_UINT8, str13); //215
	if(str14 != -1) BS_WriteValue(bs, PR_UINT8, str14); //215
	PR_SendPacket(bs, playerid);
	SCMf(playerid,-1,"[playerid] packet++ & -> %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i", str, str2, str3, str4, str5, str6, str7, str8, str9, str10, str11, str12, str13, str14);
	return 1;
}
CMD:send_packet_vehicleid(playerid, get[])
{
	//120, 51, 0, 133, 52, 177, 183, 183, 47, 176, 178, 54, 180, 183, 0, 0
	extract get -> new str=-1, str2=-1, str3=-1, str4=-1, str5=-1, str6=-1, str7=-1, str8=-1, str9=-1, str10=-1, str11=-1, str12=-1, str13=-1, str14=-1; 
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	new BitStream:bs = BS_New();
	/*фары -> 132(packetid) vehicleid 0(rgb) 255(rgb) 0(rgb) 254(яркость)
	фары new -> 132   91   -252   0   0   0   0   0   0   255
	колеса -> 135 vehicleid 102 102 134 63 0 0 0 0 0
	vip(nick) -> 120 playerid 132 52 177 183 183 47 187 52 184
	open/close chat -> 108 playerid 0 0 128 and 0
	поворотники -> 2 vehicleid 0-3
	33 - чат
	39 - сохранение диалога
	42 - новый вид ников
	47/48(on/off), 8, 83, 78, 79, 87, 70, 88, 73, 73, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 64, 0, 208, 7, 0, 0, 0 - снег
	53, (0-2), 0 - вид диалогов(упрощенный/полный и простой)
	27 (bool) - инвиз
	CMD:chat(playerid, get[])
	{
		extract get -> new str; else return SCM(playerid, -1, "bool");
		UpdateBrowser(playerid, 33, str);
	}*/
	BS_WriteValue(bs, PR_UINT8, 220);
	if(str != -1) BS_WriteValue(bs, PR_UINT8, str); //packet id
	if(str2 != -1) BS_WriteValue(bs, PR_UINT16, str2); //vehicleid 
	if(str3 != -1) BS_WriteValue(bs, PR_UINT8, str3); //255
	if(str4 != -1) BS_WriteValue(bs, PR_UINT8, str4); //16
	if(str5 != -1) BS_WriteValue(bs, PR_UINT8, str5); //142
	if(str6 != -1) BS_WriteValue(bs, PR_UINT8, str6); //215
	if(str7 != -1) BS_WriteValue(bs, PR_UINT8, str7); //215
	if(str8 != -1) BS_WriteValue(bs, PR_UINT8, str8); //215
	if(str9 != -1) BS_WriteValue(bs, PR_UINT8, str9); //215
	if(str10 != -1) BS_WriteValue(bs, PR_UINT8, str10); //215
	if(str11 != -1) BS_WriteValue(bs, PR_UINT8, str11); //215
	if(str12 != -1) BS_WriteValue(bs, PR_UINT8, str12); //215
	if(str13 != -1) BS_WriteValue(bs, PR_UINT8, str13); //215
	if(str14 != -1) BS_WriteValue(bs, PR_UINT8, str14); //215
	PR_SendPacket(bs, playerid);
	SCMf(playerid,-1,"[vehicleid] packet++ & -> %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i", str, str2, str3, str4, str5, str6, str7, str8, str9, str10, str11, str12, str13, str14);
	return 1;
}
//"info","Войти","Для взаимодействия - ALT",3500
stock SendPlayerGameText_cef(playerid, const type[], const name[], const text[], timeout)
{
	/*

	type ->
		info
		success
		error
		halloween
	*/
	if(PI[playerid][pShowNotif] != false) return 0;
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.notify.initialize', '[\"%s\",\"%s\",\"%s\",%i]');", type, name, text, timeout);
	return 1;
}
stock UpdateBrowser(playerid, arg0, arg1, arg2=-1, arg3=-1, arg4=-1, arg5=-1)
{
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs, PR_UINT8, arg0);
	BS_WriteValue(bs, PR_UINT8, arg1);
	if(arg2 != -1) BS_WriteValue(bs, PR_UINT8, arg2);
	if(arg3 != -1) BS_WriteValue(bs, PR_UINT8, arg3);
	if(arg4 != -1) BS_WriteValue(bs, PR_UINT8, arg4);
	if(arg5 != -1) BS_WriteValue(bs, PR_UINT8, arg5);
	PR_SendPacket(bs, playerid);
	return 1;
}
enum cpinfo
{
	uide, //fix
	uname[24+6+3]
};
static const CefPublic[][cpinfo] = {
	//{0, "onSvelteAppInit"},
	//{0, "vueReady"},
	{1, "onActiveViewChanged"},
	{2, "useAction"},
	{3, "startSearch"},
	{4, "stopSearch"},
	{5, "onClickBuyShopItem"},
	{6, "onClickMenuCategory"},
	{7, "onLobbyPlayerClick"},
	{8, "declineLobbyInvite"},
	{9, "acceptLobbyInvite"},
	{10, "exitLobby"},
	{11, "handleRightClick"},
	{12, "onDraggedItem"},
	{13, "callbackcompleteTask"},
	{14, "callbackskipTask"},
	{15, "BattlePassRatingSelectedServer"},
	{16, "callbackBattlePassBuyCommonPress"},
	{17, "callbackBattlePassBuyGolden"},
	{18, "getAwardCallback"},
	{19, "sellAwardCallback"},
	{20, "BPSHOP"},
	{21, "closeBattlePass"},
	{22, "pickContainer"},
	{23, "pickedContainerRewards"},
	{24, "lowerThenCurrentBet"},
	{25, "sendBetContainer"},
	{26, "closeContainerAuction"},
	{27, "buyItemDonationButton"},
	{28, "closeDonationShop"},
	{29, "pickedGenre"},
	{30, "nextPage"},
	{31, "pickedTrack"},
	{32, "hideRadio"},
	{33, "StopTrack"},
	{34, "addToFavorite"},
	{35, "answerCall"},
	{36, "declineCall"},
	{37, "press_number_phone"},
	{38, "call"},
	{39, "pickOrderWorker"},
	{40, "pickOrderButtonPlayer"},
	{41, "declineOrderWorker"},
	{42, "readToGo"},
	{43, "rentedCar"},
	{44, "pickedCar"},
	{45, "rentVehicleMenu"},
	{46, "topUpBalance"},
	{47, "setGeoLocation"},
	{48, "createOrder"},
	{49, "declineOrder"},
	{50, "finishOrder"},
	{51, "driverRating"},
	{52, "launchedApp"},
	{53, "closeGasStation"},
	{54, "authorization"},
	{55, "registration"},
	{56, "authSpawn"},
	{57, "authRecovery"},
	{58, "authRecoveryCodeByMail"},
	{59, "createCharacter"},
	{60, "playAnimation"},
	{61, "addToFavorites"},
	{62, "closeAnimationsMenu"},
	{63, "purchaseFuel"},
	{64, "purchaseProduct"},
	{65, "playTrack"}
};
public OnIncomingPacket(playerid, packetid, BitStream:bs)
{
	if(packetid == 220)
	{
		static custom;
		BS_IgnoreBits(bs, 8);
		BS_ReadUint8(bs, custom);
		switch(custom)
		{
			case 20: //getplayerWindow
			{
				BS_ReadUint8(bs, player_Cef_PositionWindow_X[playerid]);
				BS_ReadUint8(bs, player_Cef_PositionWindow_Y[playerid]);
				BS_IgnoreBits(bs, 16);
				BS_ReadUint8(bs, player_Cef_PositionWindow_rX[playerid]);
				BS_ReadUint8(bs, player_Cef_PositionWindow_rY[playerid]);
			}
			case 38: //init cef
			{
				OnPlayerInitializingBrowser(playerid);
				player_Vue_Init[playerid] = true;
				SCM(playerid, -1, "[vue] цеф инициализирован");
				player_Svetle_Init[playerid] = true;
				SCM(playerid, -1, "[svetle] цеф инициализирован");
				ShowPlayerHud(playerid);
			}
			case 24: //cursor
			{
				//24, browserid, 0, 0, 0, 0, 0
				//24, browserid, 0, 0, 0, 128
				BS_IgnoreBits(bs, 32);
				static number;
				BS_ReadUint8(bs, number);
				if(!number && player_Status_Focus[playerid] == true) 
				{
					player_Status_Focus[playerid] = false;
					HideCEF_Interface(playerid);
				}
				else player_Status_Focus[playerid] = true;
				//SCMf(playerid, -1, "cursor = %i", number);
			}
			case 17: //flood cef
			{

			}
			default:
			{
				static query[300];
				BS_ReadString32(bs, query);
				ShowCefPublic(playerid, query, custom);
			}
		}
		//printf("%i -> %s", custom, query);
		//SCMf(playerid, -1, "%s - %i(custom %i)", data, id1, custom);
	}
	return 1;
}
stock SearchCefPublic(const call[])
{
	for(new i; i < sizeof CefPublic; i++) if(GetString(call, CefPublic[i][uname])) return CefPublic[i][uide];
	return -1;
}
stock HideCEF_Interface(playerid, bool:hide=false)
{
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	HideTextDraws(playerid);
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]');");
	//UpdateBrowser(playerid, 25, 1, 0, 0, 0, 0);
	UpdateBrowser(playerid, 52, 2);
	UpdateBrowser(playerid, 86, 0);
	UpdateBrowser(playerid, 73, 0);
	//SetFocusBrowser(playerid, svelte, false);
	//ShowLogo(playerid);
	if(!hide) 
	{
		IsPlayerAnimationMenu[playerid] = false;
		IsPlayerFillMenu[playerid] = false;
		for(new i; i < 9; i++) ShowPlayer_CustomInterface(playerid, i, false);
	}
	else HidePlayerHud(playerid);
	return 1;
}
stock ShowCefPublic(playerid, request[], custom)
{
	static 
		data[50],
		sscanf_id_0,
		sscanf_id_1,
		sscanf_id_2;
	sscanf(request, "P<|>s[50]iii", data, sscanf_id_0, sscanf_id_1, sscanf_id_2);
	//sscanf(request, "P<|>iii", sscanf_id_3, sscanf_id_4, sscanf_id_5);
	new id = SearchCefPublic(data);
	//printf("id %i(%i) & data [%s] & sscanf_id >- [%i,%i,%i] -> query [%s]", id, custom, data, sscanf_id_0, sscanf_id_1, sscanf_id_2, request);
	if(id == -1)
	{
		switch(custom)
		{
			case 1: //chat
			{
				player_Cef_ShowChat[playerid] = !player_Cef_ShowChat[playerid];
				foreach(new i: PlayerPlayersStream[playerid])
				{
					if(i == playerid || !IsPlayerInitCef(i) && IsPlayerLauncher(i) != -1 || !IsPlayerInitCef(i) && IsPlayerLauncher(i) == -1 || PI[i][pCustomInterface][customInterface_chat] == 1) continue;
					UpdateBrowser(i, 108, playerid, 0, 0, 0, !player_Cef_ShowChat[playerid] ? 0 : 128);
				}
			}
		}
	}
	//else if(id != -1 && id != 1 && custom == 24) HideCEF_Interface(playerid);
	switch(id)
	{
		case 1: //onActiveViewChanged"},
		{

		}
		case 2: //useAction"},
		{
			//SCMf(playerid, -1, "id %i(%i) & data [%s] & sscanf_id >- [%i,%i,%i]", id, custom, data, sscanf_id_0, sscanf_id_1, sscanf_id_2);
			switch(sscanf_id_0)
			{
				case -1:
				{
					//на центр жмяк
					HideCEF_Interface(playerid);
					SPD(playerid, 21000, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Определение | {ae433d}Quick Panel", !"{FFFFFF}Операция\t{FFFFFF}Слот\n{FFFFFF}Взаимодействие с багажником\t{9ACD32}Слот №0\n{FFFFFF}Взаимодействие с капотом\t{9ACD32}Слот №1\n{FFFFFF}Взаимодействие с дверьми\t{9ACD32}Слот №2\n{FFFFFF}Взаимодействие с стеклами\t{9ACD32}Слот №3\n{FFFFFF}Дозаправить\t{9ACD32}Слот №4\n{FFFFFF}Заправить\t{9ACD32}Слот №5\n{FFFFFF}Взаимодействие с освещением\t{9ACD32}Слот №6\n{FFFFFF}Покраска\t{9ACD32}Слот №7\n{FFFFFF}Починить\t{FF6347}Не определен\n{FFFFFF}Переключить ограничитель\t{FF6347}Не определен\n{FFFFFF}Поднять машину\t{FF6347}Не определен\n{FFFFFF}Взломать замок\t{FF6347}Не определен\n{FFFFFF}Изменить стиль езды\t{FF6347}Не определен", !"»", !"«");
				}
				case 2: //двери
				{
					callcmd::lock(playerid);
				}
				case 4: //[Ошибка] Вы должны стоять у транспорта!
				{
					SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}Вы должны стоять у транспорта!");
				}
				case 5: //[Ошибка] Вы ни на 1-й из заправок...
				{
					callcmd::fill(playerid);
				}
				case 6: //[Ошибка] Транспорт должен быть заведён!
				{
					callcmd::lights(playerid);
				}
				case 7: SPD(playerid, 0, DIALOG_STYLE_INPUT, !"{FFFFFF}Применение | {ae433d}Покраска", !"{FFFFFF}\nВведите через пробел два цвета:\n\n", !"»", !"x");
				case 0: //[Ошибка] Вы должны находиться рядом с багажником выбранного транспорта!
				{
					SCM(playerid, COLOR_LIGHTRED, "[Ошибка] Вы должны находиться рядом с багажником выбранного транспорта!");
				}
				case 1: //капот
				{
					new carid = GetPlayerVehicleID(playerid);
					if(carid > 0)
					{
						static bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
						GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
						bonnet = !bonnet;
						SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					}
				}
			}
		}
		/*case 3: //startSearch"},
		case 4: //stopSearch"},
		case 5: //onClickBuyShopItem"},
		case 6: //onClickMenuCategory"},
		case 7: //onLobbyPlayerClick"},
		case 8: //declineLobbyInvite"},
		case 9: //acceptLobbyInvite"},
		case 10: //exitLobby"},
		case 11: //handleRightClick"},
		case 12: //onDraggedItem"},
		case 13: //callbackcompleteTask"},
		case 14: //callbackskipTask"},
		case 15: //BattlePassRatingSelectedServer"},
		case 16: //callbackBattlePassBuyCommonPress"},
		case 17: //callbackBattlePassBuyGolden"},
		case 18: //getAwardCallback"},
		case 19: //sellAwardCallback"},
		case 20: //BPSHOP"},
		case 21: //closeBattlePass"},
		case 22: //pickContainer"},
		case 23: //pickedContainerRewards"},
		case 24: //lowerThenCurrentBet"},
		case 25: //sendBetContainer"},*/
		case 26: //closeContainerAuction"},
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]');");
			SetFocusBrowser(playerid, svelte, false);
		}
		case 27: //buyItemDonationButton"},
		{
			if(!donateopen{playerid}) return 1;
			//SCMf(playerid, -1, "donationshop >- cat %i & item %i & dop %i", sscanf_id_0, sscanf_id_1, sscanf_id_2);
			/*enum donateinfo_cef
			{
				dItem_Type,
				dItem_UID,
				dItem_DialogID,
				dItem_DialogType,
				dItem_DialogName[30],
				dItem_DialogText[4096],
				dItem_DialogButton_0[10],
				dItem_DialogButton_1[10]
			};*/
			for(new i; i < sizeof(DonateInfo_cef); i++)
			{
				if(DonateInfo_cef[i][dItem_Type] == sscanf_id_1 && DonateInfo_cef[i][dItem_UID] == sscanf_id_0) 
				{
					str_1[0] = EOS;
					if(DonateInfo_cef[i][dItem_InvID] > 0)
					{
						switch(DonateInfo_cef[i][dItem_InvID])
						{
							case 5107: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Forelli’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {82FA58}Необычный\n{FFFFFF}Характеристики: {AAAAAA}110 Макс. HP, 2 защита, 2 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5108: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Верный друг’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {AAAAAA}Обычный\n{FFFFFF}Характеристики: {AAAAAA}100 Макс. HP, 1 защита, 1 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5109: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Мужчина’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}120 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5110: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Женщина’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}130 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5111: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Сноумэн’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5112: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Геральт’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника? его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5113: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Уэенсдей Аддамс’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5114: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Хагрид’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {D239CC}Уникальный\n{FFFFFF}Характеристики: {AAAAAA}1300 Макс. HP, 4 защита, 4 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5115: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат спутника ‘Леший’\n{FFFFFF}После использовании сертификата вы получите уникальную возможность\nиметь собственного спутника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый\nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\nТип: {25CAFF}Редкий\n{FFFFFF}Характеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон\n\n{FFFFFF}Прокачивая вашего спутника его характеристики увеличиваются\nКаждые 30 минут активности ваш спутник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего спутника!\n\nМожно использовать, передавать и продавать\n\n{ffffff}Можно хранить в одной ячейке: 1 ед. предмета.";
							case 5154: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Умпа-лумп'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5155: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Йеннифэр'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5156: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Левая'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5157: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Правая'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5158: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Арагорн'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5159: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Гэндальф'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5160: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Леголас'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {25CAFF}Редкий{FFFFFF}\nХарактеристики: {AAAAAA}1200 Макс. HP, 3 защита, 3 урон, 3% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5161: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Тайлер Дёрден'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							case 5162: str_1 = "{FFFFFF}Предмет: {FF332C}Сертификат охранника 'Скала'{ffffff}\nПосле использования сертификата вы получите уникальную возможность\nиметь личного охранника, за которым вам будет нужно следить:\nкормить, лечить, прокачивать. Взамен у вас появится новый \nдруг/соратник, который несмотря ни на что встанет на вашу защиту!\n\n{ffffff}— У охранников {AAAAAA}стандартного {ffffff}и {82FA58}необычного {ffffff}качества: {ff6666}1 слот {ffffff}под нераспознанные характеристики;\n— У охранников {25CAFF}редкого {ffffff}качества: {ff6666}2 слота {ffffff}под нераспознанные характеристики;\n— У охранников {D239CC}уникального {ffffff}качества: {ff6666}3 слота {ffffff}под нераспознанные характеристики.\n\nТип: {D239CC}Уникальный{FFFFFF}\nХарактеристики: {AAAAAA}1500 Макс. HP, 10 защита, 6 урон, 10% шанс словить пулю\n\n{FFFFFF}Прокачивая вашего охранника его характеристики увеличиваются.\nКаждые 30 минут активности ваш охранник получает +1 EXP, акция x4 payday\nувеличит получаемый опыт вашего охранника!";
							default: SetString(str_1, GetItemInfo(playerid, DonateInfo_cef[i][dItem_InvID]), 4096);
						}
						f(str_1, sizeof(str_1), "\
							{FF6666}-{ffffff} Вы действительно хотите приобрести {FF6666}'%s'{ffffff}?\n\n\
							%s\n\n\
							Стоимость приобретения: {FF6666}%i{ffffff} AZ-Coins\n\
							Для продолжения используйте кнопку 'Далее'\n\n\n\n", \
								ItemsInfo[DonateInfo_cef[i][dItem_InvID]][ItemName], str_1, strval(DonateInfo_cef[i][dItem_DialogText]));
					}
					else SetString(str_1, DonateInfo_cef[i][dItem_DialogText], 4096);

					SetString(str_mes, DonateInfo_cef[i][dItem_DialogText], 128);
					if(GetString(DonateInfo_cef[i][dItem_DialogName], "default")) str_mes = "{FF6666}Приобретение";
//						((strlen(str_mes) > 0) ? str_mes : DonateInfo_cef[i][dItem_DialogName]),
//						((strlen(str_1) > 0) ? str_1 : DonateInfo_cef[i][dItem_DialogText]),
					SPD(playerid, DonateInfo_cef[i][dItem_DialogID], \
						DonateInfo_cef[i][dItem_DialogType], \
						str_mes, str_1, \
						DonateInfo_cef[i][dItem_DialogButton_0], DonateInfo_cef[i][dItem_DialogButton_1]);
					break;
				}
			}
		}
		case 28: //closeDonationShop"},
		{
			HideTextDraws(playerid);
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]')");
			//UpdateBrowser(playerid, 25, 1, 0, 0, 0, 0);
			UpdateBrowser(playerid, 52, 2);
			UpdateBrowser(playerid, 86, 0);
			UpdateBrowser(playerid, 73, 0);
			SetFocusBrowser(playerid, svelte, false);
			ShowLogo(playerid);
		}
		//default:
		//{
			//SCMf(playerid, -1, "id %i & data [%s] & sscanf_id >- [%i,%i,%i]", id, data, sscanf_id_0, sscanf_id_1, sscanf_id_2);
		//}
		/*case 29: //pickedGenre"},
		case 30: //nextPage"},
		case 31: //pickedTrack"},
		case 32: //hideRadio"},
		case 33: //StopTrack"},
		case 34: //addToFavorite"},
		case 35: //answerCall"},
		case 36: //declineCall"},
		case 37: //press_number_phone"},
		case 38: //call"},
		case 39: //pickOrderWorker"},
		case 40: //pickOrderButtonPlayer"},
		case 41: //declineOrderWorker"},
		case 42: //readToGo"},
		case 43: //rentedCar"},
		case 44: //pickedCar"},
		case 45: //rentVehicleMenu"},
		case 46: //topUpBalance"},
		case 47: //setGeoLocation"},
		case 48: //createOrder"},
		case 49: //declineOrder"},
		case 50: //finishOrder"},
		case 51: //driverRating"},*/
		case 52: //launchedApp"},
		{
			if(GetPVarType(playerid, !"telephone") == PLAYER_VARTYPE_NONE) return 1;
			//SCMf(playerid, -1, "id %i(%i) & data [%s] & sscanf_id >- [%i,%i,%i]", id, custom, data, sscanf_id_0, sscanf_id_1, sscanf_id_2);
			switch(sscanf_id_0)
			{
				case 1: callcmd::menu(playerid);
				case 2: callcmd::help(playerid);
				case 3: callcmd::quest(playerid);
				case 4: callcmd::report(playerid);
				//5..7 none
				case 8: callcmd::gps(playerid);
				case 9: ShowPlayerSettings(playerid);
				case 13: callcmd::rewards(playerid);
				case 14: callcmd::donate(playerid);
				case 15: CurrencyStable(playerid);
				//16 none
				case 17: callcmd::showmc(playerid, IntToStr(playerid));
				case 18: ShowPassport(playerid, playerid); //callcmd::showpass(playerid, IntToStr(playerid));
				case 19: callcmd::anims(playerid);
				case 20: callcmd::fammenu(playerid);
				case 23: callcmd::cars(playerid);
				case 25: GlovoInfo_work(playerid);
				case 26: ShowBankMenu(playerid, true);
				case 28: ShowPlayerCustomPhone(playerid);
				default:
				{

				}
			}
		}
		case 53: //closeGasStation"},
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]');");
			SetFocusBrowser(playerid, svelte, false);
		}
		case 54: //auth
		{
			sscanf(request, "P<|>s[50]s[24]s[100]i", data, data, str_1, sscanf_id_0);
			//SCMf(playerid, -1, "nick %s | pass %s | type %i", data, str_1, sscanf_id_0);
			str_q[0] = EOS, f(str_q, sizeof(str_q), "SELECT `Password`, `Google`, `GoogleKey`, `RegIP` FROM `"TABLE_ACCOUNTS"` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
			mysql_tquery(mysql, str_q, "LoginDialogMysql", "is", playerid, str_1);
		}
		/*
		case 55: //registration"},
		case 56: //authSpawn"},
		case 57: //authRecovery"},
		case 58: //authRecoveryCodeByMail"},
		case 59: //createCharacter"},*/
		case 60: //playAnimation"},
		{
			if(!IsPlayerAnimationMenu[playerid]) return HideCEF_Interface(playerid);
			new animation_id = SearchAnimationInfo(sscanf_id_0);
			if(animation_id == -1) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Такой анимации нет!");
			ApplyAnimation(playerid, animInfo[animation_id][animLib], animInfo[animation_id][animName], 4.1, 0, 0, 0, 0, animInfo[animation_id][animtime]);
			animan{playerid} = true;
			TextDrawShowForPlayer(playerid, StopAnimation);
		}
		//case 61: //addToFavorites"},
		case 62: //closeAnimationsMenu"}
		{
			ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"null\"]');");
			SetFocusBrowser(playerid, svelte, false);
		}
		case 63: //purchaseFuel
		{
			CountFuel[playerid] = float(sscanf_id_1);
			UsePlayerInterface_GasStation(playerid);
		}
		case 64: //purchaseProduct
		{
/*{25885,0,{BFBBBA}{73B461}Покупка на АЗС,Далее,Закрыть,{ffffff}Вы действительно хотите приобрести {73B461}Рем.комплект{ffffff} за {73B461}15000{ffffff}?

{cccccc}Для продолжение используйте клавишу 'Далее',}
{25885,0,{BFBBBA}{73B461}Покупка на АЗС,Далее,Закрыть,{ffffff}Вы действительно хотите приобрести {73B461}Канистра{ffffff} за {73B461}15000{ffffff}?

{cccccc}Для продолжение используйте клавишу 'Далее',}
{25885,0,{BFBBBA}{73B461}Покупка на АЗС,Далее,Закрыть,{ffffff}Вы действительно хотите приобрести {73B461}Повербанк для зарядки авто{ffffff} за {73B461}10000{ffffff}?

{cccccc}Для продолжение используйте клавишу 'Далее',}*/
		}
	}
	return 1;
}
CMD:new_browser(playerid, get[])
{
	extract get -> new id, string:url[144]; else return SCM(playerid, -1, "id & url");
	CreateBrowser(playerid, id, url);
	SCM(playerid, -1, "new cef init");
	return 1;
}
CMD:update_browser(playerid, params[])
{
	extract params-> new id, status;
	UpdateBrowser(playerid, id, status);
}
CMD:show_browser(playerid, params[])
{
	extract params-> new id, string:string[144]; else return SCM(playerid, -1, "url");
	ExecuteEvent(playerid, id, string);
	return 1;
}
CMD:focus_browser(playerid, get[])
{
	extract get-> new browserid, status;
	SetFocusBrowser(playerid, browserid, bool:status);
	return 1;
}
CMD:tuning(playerid, params[])
{
	ExecuteEvent(playerid, 1, "vue.set('tuning')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategories', '[{\"id\":1,\"name\":\"Двигатель\",\"icon\":\"engine.png\"},{\"id\":2,\"name\":\"Трансмиссия\",\"icon\":\"transmission.png\"},{\"id\":3,\"name\":\"Шасси\",\"icon\":\"chassis.png\"},{\"id\":4,\"name\":\"Стайлинг\",\"icon\":\"bucket.png\"},{\"id\":5,\"parentId\":1,\"name\":\"Коленвал\",\"icon\":\"crankshaft.png\",\"type\":\"componentList\"},{\"id\":6,\"parentId\":1,\"name\":\"Распредвал\",\"icon\":\"camshaft.png\",\"type\":\"componentList\"},{\"id\":7,\"parentId\":1,\"name\":\"Турбина\",\"icon\":\"turbocharger.png\",\"type\":\"componentList\"},{\"id\":8,\"parentId\":1,\"name\":\"Прошивка\",\"icon\":\"firmware.png\",\"type\":\"componentList\"},{\"id\":9,\"parentId\":2,\"name\":\"Сцепление\",\"icon\":\"clutch.png\",\"type\":\"componentList\"},{\"id\":10,\"parentId\":2,\"name\":\"КПП\",\"icon\":\"kpp.png\",\"type\":\"componentList\"},{\"id\":11,\"parentId\":2,\"name\":\"Дифференциал\",\"icon\":\"differential.png\",\"type\":\"componentList\"},{\"id\":12,\"parentId\":3,\"name\":\"Подвеска\",\"icon\":\"suspension.png\",\"type\":\"componentList\"},{\"id\":13,\"parentId\":3,\"name\":\"Тормоза\",\"icon\":\"brakes.png\",\"type\":\"componentList\"},{\"id\":14,\"parentId\":4,\"name\":\"Диски\",\"icon\":\"wheel.png\",\"type\":\"colorList\"},{\"id\":15,\"parentId\":4,\"name\":\"Капот\",\"icon\":\"capot.png\",\"type\":\"componentList\"},{\"id\":16,\"parentId\":4,\"name\":\"Спойлер\",\"icon\":\"spolier.png\",\"type\":\"componentList\"},{\"id\":17,\"parentId\":4,\"name\":\"Выхлоп\",\"icon\":\"exhaust.png\",\"type\":\"componentList\"},{\"id\":18,\"parentId\":4,\"name\":\"Плёнка\",\"icon\":\"vinil.png\",\"type\":\"colorList\"},{\"id\":19,\"parentId\":4,\"name\":\"Тонировка\",\"icon\":\"toner.png\",\"type\":\"tintedWindow\"},{\"id\":20,\"parentId\":4,\"name\":\"Подвеска\",\"icon\":\"stance.png\",\"type\":\"sliderList\"},{\"id\":21,\"parentId\":4,\"name\":\"Цвет фар\",\"icon\":\"lights.png\",\"type\":\"colorList\"}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":1,\"categoryId\":5,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Коленвал\",\"text\":\"\",\"icon\":\"kolenval.png\",\"price\":135000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":2,\"categoryId\":5,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Коленвал\",\"text\":\"\",\"icon\":\"kolenval.png\",\"price\":225000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":3,\"categoryId\":5,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Коленвал\",\"text\":\"\",\"icon\":\"kolenval.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":4,\"categoryId\":6,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Распредвал\",\"text\":\"\",\"icon\":\"raspredval.png\",\"price\":90000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":5,\"categoryId\":6,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Распредвал\",\"text\":\"\",\"icon\":\"raspredval.png\",\"price\":180000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":6,\"categoryId\":6,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Распредвал\",\"text\":\"\",\"icon\":\"raspredval.png\",\"price\":240000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":7,\"categoryId\":7,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Турбокомпрессор\",\"text\":\"\",\"icon\":\"turbokompressor.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":8,\"categoryId\":7,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Нагнетатель\",\"text\":\"\",\"icon\":\"nagnetatel.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":9,\"categoryId\":7,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Турбокомпрессор\",\"text\":\"\",\"icon\":\"turbokompressor.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":10,\"categoryId\":7,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Нагнетатель\",\"text\":\"\",\"icon\":\"nagnetatel.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":11,\"categoryId\":7,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Турбокомпрессор\",\"text\":\"\",\"icon\":\"turbokompressor.png\",\"price\":1350000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":12,\"categoryId\":7,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Нагнетатель\",\"text\":\"\",\"icon\":\"nagnetatel.png\",\"price\":1350000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":13,\"categoryId\":8,\"header\":\"STAGE-1\",\"color\":\"#FF00FF\",\"name\":\"Чип-тюнинг\",\"text\":\"\",\"icon\":\"proshitvka.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":14,\"categoryId\":8,\"header\":\"STAGE-2\",\"color\":\"#FF0000\",\"name\":\"Чип-тюнинг\",\"text\":\"\",\"icon\":\"proshitvka.png\",\"price\":675000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":15,\"categoryId\":8,\"header\":\"STAGE-3\",\"color\":\"#FFA400\",\"name\":\"Чип-тюнинг\",\"text\":\"\",\"icon\":\"proshitvka.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":16,\"categoryId\":9,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Сцепление\",\"text\":\"\",\"icon\":\"stseplenie.png\",\"price\":90000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":17,\"categoryId\":9,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Сцепление\",\"text\":\"\",\"icon\":\"stseplenie.png\",\"price\":225000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":18,\"categoryId\":9,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Сцепление\",\"text\":\"\",\"icon\":\"stseplenie.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":19,\"categoryId\":10,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"КПП\",\"text\":\"\",\"icon\":\"kpp.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":20,\"categoryId\":10,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"КПП\",\"text\":\"\",\"icon\":\"kpp.png\",\"price\":675000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":21,\"categoryId\":10,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"КПП\",\"text\":\"\",\"icon\":\"kpp.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":22,\"categoryId\":11,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Дифференциал\",\"text\":\"\",\"icon\":\"differentsial.png\",\"price\":90000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":23,\"categoryId\":11,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Дифференциал\",\"text\":\"\",\"icon\":\"differentsial.png\",\"price\":225000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":24,\"categoryId\":11,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Дифференциал\",\"text\":\"\",\"icon\":\"differentsial.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":25,\"categoryId\":12,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Подвеска\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":26,\"categoryId\":12,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Подвеска\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":27,\"categoryId\":12,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Подвеска\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":1350000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":28,\"categoryId\":13,\"header\":\"improv\",\"color\":\"#FF00FF\",\"name\":\"Тормоза\",\"text\":\"\",\"icon\":\"tormoza.png\",\"price\":90000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":29,\"categoryId\":13,\"header\":\"sport\",\"color\":\"#FF0000\",\"name\":\"Тормоза\",\"text\":\"\",\"icon\":\"tormoza.png\",\"price\":270000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":30,\"categoryId\":13,\"header\":\"sport+\",\"color\":\"#FFA400\",\"name\":\"Тормоза\",\"text\":\"\",\"icon\":\"tormoza.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":31,\"categoryId\":18,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Без винила\",\"text\":\"\",\"icon\":\"wad0.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":32,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-1\",\"text\":\"\",\"icon\":\"wad1.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":33,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-2\",\"text\":\"\",\"icon\":\"wad2.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":34,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-3\",\"text\":\"\",\"icon\":\"wad3.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":35,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-4\",\"text\":\"\",\"icon\":\"wad4.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":36,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-5\",\"text\":\"\",\"icon\":\"wad5.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":37,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-6\",\"text\":\"\",\"icon\":\"wad6.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":38,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-7\",\"text\":\"\",\"icon\":\"wad7.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":39,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-8\",\"text\":\"\",\"icon\":\"wad8.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":40,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-9\",\"text\":\"\",\"icon\":\"wad9.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":41,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-10\",\"text\":\"\",\"icon\":\"wad10.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":42,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-11\",\"text\":\"\",\"icon\":\"wad11.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":43,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-12\",\"text\":\"\",\"icon\":\"wad12.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":44,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-13\",\"text\":\"\",\"icon\":\"wad13.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":45,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-14\",\"text\":\"\",\"icon\":\"wad14.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":46,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-15\",\"text\":\"\",\"icon\":\"wad15.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":47,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-16\",\"text\":\"\",\"icon\":\"wad16.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":48,\"categoryId\":18,\"header\":\"\",\"color\":\"#FF0000\",\"name\":\"Винил-17\",\"text\":\"\",\"icon\":\"wad17.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":49,\"categoryId\":20,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Передняя подвеска\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":2250000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":50,\"categoryId\":20,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Задняя подвеска\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":2250000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":51,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-1\",\"text\":\"\",\"icon\":\"wheel11.png\",\"price\":450000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":52,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-2\",\"text\":\"\",\"icon\":\"wheel17.png\",\"price\":900000,\"installed\":false,\"inCart\":false,\"statusText\":\"нет в наличии\",\"statusColor\":\"#C17343\",\"hidePriceButton\":true,\"scale\":1.0},{\"id\":53,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-3\",\"text\":\"\",\"icon\":\"wheel14.png\",\"price\":1350000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":54,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-4\",\"text\":\"\",\"icon\":\"wheel13.png\",\"price\":1800000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":55,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-5\",\"text\":\"\",\"icon\":\"wheel9.png\",\"price\":2250000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":56,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-6\",\"text\":\"\",\"icon\":\"wheel6.png\",\"price\":2700000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":57,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-7\",\"text\":\"\",\"icon\":\"wheel8.png\",\"price\":3150000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":58,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-8\",\"text\":\"\",\"icon\":\"wheel12.png\",\"price\":3600000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":59,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-9\",\"text\":\"\",\"icon\":\"wheel16.png\",\"price\":4050000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":60,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-10\",\"text\":\"\",\"icon\":\"wheel15.png\",\"price\":4500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":61,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-11\",\"text\":\"\",\"icon\":\"wheel1.png\",\"price\":4950000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":62,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-12\",\"text\":\"\",\"icon\":\"wheel7.png\",\"price\":5400000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":63,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-13\",\"text\":\"\",\"icon\":\"wheel10.png\",\"price\":5850000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":64,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-14\",\"text\":\"\",\"icon\":\"wheel2.png\",\"price\":6300000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":65,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-15\",\"text\":\"\",\"icon\":\"wheel3.png\",\"price\":6750000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":66,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-16\",\"text\":\"\",\"icon\":\"wheel4.png\",\"price\":7200000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadCategoryComponents', '[{\"id\":67,\"categoryId\":14,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диски-17\",\"text\":\"\",\"icon\":\"wheel5.png\",\"price\":7650000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":89,\"categoryId\":21,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Передние фары\",\"text\":\"\",\"icon\":\"head_lights.png\",\"price\":2500000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0},{\"id\":91,\"categoryId\":20,\"header\":\"\",\"color\":\"#FFFFFF\",\"name\":\"Диаметр колес\",\"text\":\"\",\"icon\":\"podveska.png\",\"price\":2000000,\"installed\":false,\"inCart\":false,\"statusText\":\"\",\"statusColor\":\"\",\"hidePriceButton\":false,\"scale\":1.0}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/setDashboardProperties', '{\"Мощность\":{\"value\":50.0,\"valueOffset\":0.0,\"valueMax\":150.0},\"Устойчивость\":{\"value\":250.0,\"valueOffset\":0.0,\"valueMax\":350.0},\"Ускорение\":{\"value\":42.0,\"valueOffset\":0.0,\"valueMax\":75.0},\"Макс. Скорость\":{\"value\":258.0,\"valueOffset\":0.0,\"valueMax\":458.0}}')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/setClientVisualData', '{\"carName\":\"Mercedes-Benz E 55 AMG\",\"carNameScale\":1.0,\"playerMoney\":23007828,\"cartCount\":0,\"cartColor\":\"#FFFFFF\"}')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadTintedWindows', '[{\"id\":1,\"color\":255},{\"id\":2,\"color\":245},{\"id\":3,\"color\":245},{\"id\":4,\"color\":245},{\"id\":5,\"color\":135},{\"id\":6,\"color\":156},{\"id\":7,\"color\":156}]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/loadTintedWindowColors', '[255,436797695,437453055,387580159,236585215,68813055,1705471,1707775,1710335,1186559,531199,16784127,167779071,335551231,436213503]')");
	ExecuteEvent(playerid, 1, "vue.c('tuning/setColorsSelected', '[1,1,2]')");
	SetFocusBrowser(playerid, 1, true);
}
stock OnPlayerInitializingBrowser(playerid)
{
	player_Vue_Init[playerid] = false;
	player_Svetle_Init[playerid] = false;
	CreateBrowser(playerid, 0, "file:///frontend/svelte_js/index_new.html");
	CreateBrowser(playerid, 1, "file:///frontend/vue_js/index.html");
	return 1;
}
stock OnPlayerEnterDriver(playerid)
{
	if(GetPlayerState(playerid) == 2)
	{
		ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.speedometerType', '[\"%s\"]');", PI[playerid][pCustomInterface][customInterface_speed] == 3 ? "advanced" : "simplified");
		ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.arizonahud.vehicleUpdateSpeedTime', '[%i]');", PI[playerid][pCustomInterface][customInterface_speed] == 3 ? 100 : 500);
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.vehicleMileage', '[0]');");
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.vehicleLiters', '[100]');");
		ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.vehicleFuelType', '[\"petrol\"]');");
	}
}
stock OnPlayerExitDriver(playerid)
{
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.speedometerType', '[\"null\"]');");
}
stock IsPlayerInitCef(playerid, id=-1)
{
	//SCMf(playerid, -1, "%i %i", player_Svetle_Init[playerid], player_Vue_Init[playerid]);
	if(player_Svetle_Init[playerid] != false && player_Vue_Init[playerid] != false) 
	{
		if(id != -1)
		{
			if(!PI[playerid][pCustomInterface][id]) return 2; //если цеф есть и у игрока дефолт значение
		}
		return 1;
	}
	return 0;
}
CMD:use_item_cef(playerid)
{
//window.executeEvent('event.setActiveView', '["ActionProgressBar"]');
//window.executeEvent('event.actionProgressBar.initializeActionName', '["»спользование предмета"]');
//window.executeEvent('event.actionProgressBar.initializeCountDown', '[9000]');
}
CMD:use_uved_cef(playerid)
{
	//window.executeEvent('event.notify.initialize', '["info","Открыть","Для взаимодействия - H",3500]');
	//window.executeEvent('event.notify.initialize', '["info","Нажмите для взаимодействия","Для взаимодействия - ALT",3500]');
}
CMD:show_cinema(playerid)
{
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs,\
	PR_UINT8, 12,\
	PR_UINT8, 160,\
	PR_UINT8, 5,\
	PR_UINT8,0,\
	PR_UINT8, 0, \
	PR_UINT8,42, \
	PR_UINT8,3, \
	PR_UINT8,0, \
	PR_UINT8,0, \
	PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, \
	PR_UINT8,0, PR_UINT8,0, PR_UINT8,75, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8,104,\
	PR_UINT8,116, PR_UINT8,116, PR_UINT8,112, PR_UINT8,58, PR_UINT8,47, PR_UINT8,47, \
	PR_UINT8,97, PR_UINT8,112, PR_UINT8,105, PR_UINT8,45, PR_UINT8,115, PR_UINT8,97, \
	PR_UINT8,109, PR_UINT8,112, PR_UINT8,46, PR_UINT8,97, PR_UINT8,114, PR_UINT8,105, \
	PR_UINT8,122, PR_UINT8,111, PR_UINT8,110, PR_UINT8,97, PR_UINT8,45, PR_UINT8,102,\
	PR_UINT8,105, PR_UINT8,118, PR_UINT8,101, PR_UINT8,46, PR_UINT8,114);
	BS_WriteValue(bs, PR_UINT8,117, PR_UINT8,47, PR_UINT8,121, PR_UINT8,111, PR_UINT8,117, \
	PR_UINT8,116, PR_UINT8,117, PR_UINT8,98, PR_UINT8,101, PR_UINT8,95, \
	PR_UINT8,112, PR_UINT8,108, PR_UINT8,97, PR_UINT8,121, PR_UINT8,95, \
	PR_UINT8,118, PR_UINT8,105, PR_UINT8,100, PR_UINT8,101, PR_UINT8,111, \
	PR_UINT8,46, PR_UINT8,112, PR_UINT8,104, PR_UINT8,112, PR_UINT8,63, \
	PR_UINT8,118, PR_UINT8,105, PR_UINT8,100, PR_UINT8,101, PR_UINT8,111, \
	PR_UINT8,95, PR_UINT8,105, PR_UINT8,100, PR_UINT8,61, PR_UINT8,88, \
	PR_UINT8,98, PR_UINT8,68, PR_UINT8,108, PR_UINT8,101, PR_UINT8,98, \
	PR_UINT8,52, PR_UINT8,85, PR_UINT8,85, PR_UINT8,54, PR_UINT8,111, \
	PR_UINT8,114, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8,77, \
	PR_UINT8,111, PR_UINT8,122);
	BS_WriteValue(bs, PR_UINT8,105, PR_UINT8,108, PR_UINT8,108, \
	PR_UINT8,97, PR_UINT8,47, PR_UINT8,53, PR_UINT8,46, PR_UINT8,48, \
	PR_UINT8,32, PR_UINT8,40, PR_UINT8,87, PR_UINT8,105, PR_UINT8,110, \
	PR_UINT8,100, PR_UINT8,111, PR_UINT8,119, PR_UINT8,115, PR_UINT8,32, \
	PR_UINT8,78, PR_UINT8,84, PR_UINT8,32, PR_UINT8,49, PR_UINT8,48,\
	PR_UINT8,46, PR_UINT8,48, PR_UINT8,59, PR_UINT8,32, PR_UINT8,87, \
	PR_UINT8,105, PR_UINT8,110, PR_UINT8,54, PR_UINT8,52, PR_UINT8,59, \
	PR_UINT8,32, PR_UINT8,120, PR_UINT8,54, PR_UINT8,52, PR_UINT8,41, \
	PR_UINT8,32, PR_UINT8,65, PR_UINT8,112, PR_UINT8,112, PR_UINT8,108, \
	PR_UINT8,101, PR_UINT8,87, PR_UINT8,101, PR_UINT8,98, PR_UINT8,75);
	BS_WriteValue(bs, PR_UINT8,105, PR_UINT8,116, PR_UINT8,47, PR_UINT8,53, PR_UINT8,51, \
	PR_UINT8,55, PR_UINT8,46, PR_UINT8,51, PR_UINT8,54, PR_UINT8,32, \
	PR_UINT8,40, PR_UINT8,75, PR_UINT8,72, PR_UINT8,84, PR_UINT8,77, \
	PR_UINT8,76, PR_UINT8,44, PR_UINT8,32, PR_UINT8,108, PR_UINT8,105, \
	PR_UINT8,107, PR_UINT8,101, PR_UINT8,32, PR_UINT8,71, PR_UINT8,101, \
	PR_UINT8,99, PR_UINT8,107, PR_UINT8,111, PR_UINT8,41, PR_UINT8,32, \
	PR_UINT8,67, PR_UINT8,104, PR_UINT8,114, PR_UINT8,111, PR_UINT8,109, \
	PR_UINT8,101, PR_UINT8,47, PR_UINT8,57, PR_UINT8,49, PR_UINT8,46, \
	PR_UINT8,48, PR_UINT8,46, PR_UINT8,52, PR_UINT8,52, PR_UINT8,55, PR_UINT8,50,\
	PR_UINT8,46, PR_UINT8,55, PR_UINT8,55);
	BS_WriteValue(bs,PR_UINT8,32, PR_UINT8,83, PR_UINT8,97, \
	PR_UINT8,102, PR_UINT8,97, PR_UINT8,114, PR_UINT8,105, PR_UINT8,47, PR_UINT8,53, \
	PR_UINT8,51, PR_UINT8,55, PR_UINT8,46, PR_UINT8,51, PR_UINT8,54, PR_UINT8,17, PR_UINT8,0, \
	PR_UINT8,234, PR_UINT8,30, PR_UINT8,0, PR_UINT8,0, PR_UINT8,32, PR_UINT8,66, PR_UINT8,2, PR_UINT8,0, PR_UINT8,0, PR_UINT8,0, PR_UINT8, 0);
	PR_SendPacket(bs, playerid);
	return 1;
}
stock GlovoInfo_work(playerid) 
{
	SPD(playerid, 15201, DIALOG_STYLE_LIST, !"{039f83}Glovo{ffc245}!", !"Онлайн-покупки\n{cccccc}Мои заказы\n{039f83}Работа курьера Glovo\nПолезная информация\nКупить улучшение (стоимость: 1250 AZ-монет)", !"Выбрать", !"Закрыть");
	return 1;
}
CMD:rewards(playerid) SPD(playerid, 6700, DIALOG_STYLE_LIST, !"Все достижения", !"{FFFFFF}Посмотреть все {5afad5}ежедневные достижения\n{FFFFFF}Посмотреть все {88a862}глобальные достижения\n{FFFFFF}Посмотреть все достижения на работах\nПосмотреть все достижения для фракций\nПосмотреть лог выполненных достижений", !"Выбрать", !"Отмена");
stock CurrencyStable(playerid) 
{
	SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Курс валют (USD)", !"{ffff00}Обновлено 16 минут назад\t \t \nBitcoin (BTC):\t$60012\t{31B404}[ У вас есть: 0 BTC ]\n{cccccc}Litecoin (LTC):\t{cccccc}$180\t \n{cccccc}Ethereum (ETH):\t{cccccc}$3816\t \nЕВРО (euro):\t$4752\t ", !"Закрыть", !"");
	return 1;
}
stock ShowPlayerCustomPhone(playerid)
{
	str_1[0] = EOS;
	for(new i; i < 29; i++) f(str_1, sizeof(str_1), "%sЗаставка {73B461}№%i{ffffff}\n", str_1, i+1);
	SPD(playerid, 25800, DIALOG_STYLE_LIST, !"Выбор заставки", str_1, "Далее", "Закрыть");
	return 1;
}
CMD:use_anim(playerid, get[])
{
	//custom_dance 1-13
	//custom_dance, hip_hop_dance_1-2
	extract get -> new string:str[30], string:str2[30]; else return 1;
	//J_ApplyAnimation(playerid, str, str2, 4.1, 1, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, str, str2, 4.1, 0, 0, 0, 0, animInfo[10][animtime]);
	animan{playerid} = true;
	TextDrawShowForPlayer(playerid, StopAnimation);
	SCM(playerid, -1, "++");
	return 1;
}
stock GetVehicleLimitTank(vehicleid)
{
	if(!CheckTrunkForItem(vehicleid, 1804)) return 260;
	if(!CheckTrunkForItem(vehicleid, 1803)) return 190;
	if(!CheckTrunkForItem(vehicleid, 1802)) return 160;
	return 100;
}
stock ShowPlayerInterface_GasStation(playerid)
{
	if(IsPlayerFillMenu[playerid] != false) return 0;
	if(GetPlayerState(playerid) != 2) return 0;
	new carid = GetPlayerVehicleID(playerid);
	if(Iter_Contains(Vehicle, carid) == 1)
	{
		if(GetVehicleKindFuel(carid) != 1) return SCM(playerid,COLOR_GREY,!"[Ошибка] {FFFFFF}Топлива для вашего вида транспорта у нас нет");
		if(vTemp[carid][Fuel] < float(GetVehicleLimitTank(carid))-1)
		{
			if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1)
			{
				HideCEF_Interface(playerid, true);
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"GasStation\"]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.gasstation.initializeFuelTypes', '[[{\"id\":0,\"title\":\"Дизель\",\"price\":400,\"available\": 0},{\"id\":1,\"title\":\"АИ-92\",\"price\":400,\"available\": 1},{\"id\":2,\"title\":\"АИ-95\",\"price\":400,\"available\": 0},{\"id\":3,\"title\":\"АИ-98\",\"price\":400,\"available\": 0}]]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.gasstation.initializeProducts', '[[{\"id\":0,\"title\":\"Рем.комплект\",\"image\":520,\"price\":29999},{\"id\":1,\"title\":\"Канистра\",\"image\":516,\"price\":29999},{\"id\":2,\"title\":\"Повербанк для зарядки авто\",\"image\":700054,\"price\":29999}]]');");
				ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.gasstation.initializeMaxLiters', '[%i]');", GetVehicleLimitTank(carid));
				ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.gasstation.initializeCurrentLiters', '[%i]');", floatround(vTemp[GetPlayerVehicleID(playerid)][Fuel], floatround_floor));
				SetFocusBrowser(playerid, svelte, true);
			}
			else
			{
				KindFuel[playerid] = 0;
				str_1[0] = EOS, f(str_1, sizeof(str_1), "0/%.1f~g~L", float(GetVehicleLimitTank(carid)) - vTemp[carid][Fuel]);
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Используйте курсор чтобы выбрать тип топлива и его кол-во");
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Так же вы можете нажать на \"кол-во топлива\" для вызова доп. окна ввода");
				PlayerTextDrawSetString(playerid,FuelCostDraw[playerid], "$0");
				PlayerTextDrawSetString(playerid,KindFuelDraw[playerid], FuelName[0]);
				PlayerTextDrawTextSize(playerid,PlayerFuelBar[playerid], 243.0, 0.0);

				for(new i; i < 30; i++) TextDrawShowForPlayer(playerid, FillTD[i]);
				PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
				PlayerTextDrawShow(playerid, FuelCostDraw[playerid]);
				PlayerTextDrawShow(playerid, KindFuelDraw[playerid]);
				SelectTextDraw(playerid, 0xF20401FF);
			}
			CountFuel[playerid] = 0.0;
			IsPlayerFillMenu[playerid] = true;
		}
		else SCM(playerid,COLOR_GREY,!"[Ошибка] {FFFFFF}Ваш транспорт полностью заправлен");
	}
	return 1;
}
stock UsePlayerInterface_GasStation(playerid)
{
	if(GetPlayerState(playerid) != 2) return 0;
	new carid = GetPlayerVehicleID(playerid);
	if(Iter_Contains(Vehicle, carid) == 1 && vTemp[carid][Fuel] < float(GetVehicleLimitTank(carid)))
	{
		if(CountFuel[playerid] > 0.0)
		{
			new price = floatround( 400.0 * CountFuel[playerid], floatround_floor );
			if(GetMoney(playerid) < price) return SCMf(playerid, COLOR_GREY, "Заправка стоит $%i, а у вас только $%i", price, PI[playerid][pMoney]);
			GiveBizMoney(playerid, price, 6);
			if(IsPlayerInitCef(playerid) > 0 && IsPlayerLauncher(playerid) != -1) HideCEF_Interface(playerid);
			else
			{
				CancelSelectTextDraw(playerid);
				CheckFuelDraws(playerid);
				KindFuel[playerid] = -1;
			}
			IsPlayerFillMenu[playerid] = false;
			TogglePlayerControllable(playerid, false);
			GiveMoney(playerid, - price, "заправил т/с");
			playerTimer_VehicleFill[playerid] = true;
			str_1[0] = EOS, f(str_1, sizeof(str_1), "* Транспортное средство заправляется (( %s ))", PN(playerid));
			ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
			SetEngineStatus(carid, false, -1);
		}
		else SCM(playerid, COLOR_GREY, !"Не менее 1 литра.");
	}
	return 1;
}
stock PlayerInterface_GasStation(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	if(Iter_Contains(Vehicle, carid) == 1 && vTemp[carid][Fuel] < float(GetVehicleLimitTank(carid)))
	{
		vTemp[carid][Fuel] += CountFuel[playerid];
		if(vTemp[carid][Fuel] >= float(GetVehicleLimitTank(carid))) vTemp[carid][Fuel] = float(GetVehicleLimitTank(carid));
		else if(vTemp[carid][Fuel] <= 0.0) vTemp[carid][Fuel] = 0.0;
		TogglePlayerControllable(playerid, true);
		SCMf(playerid,COLOR_ORANGE,"Ваш транспорт заправлен {FFFFFF}%.1f{FAAC58} литрами топлива.", CountFuel[playerid]);
		callcmd::engine(playerid);
		CountFuel[playerid] = 0.0;
	}
	return 1;
}
stock GetPlayerNameInterface(playerid, type_interface)
{
	for(new i; i < sizeof(CustomInterfaceInfo); i++) if(CustomInterfaceInfo[i][interfaceType] == type_interface && CustomInterfaceInfo[i][interfaceUID] == PI[playerid][pCustomInterface][type_interface]) return i;
	printf("error 23491 -> playerid %i & type_interface %i & id_interface %i", playerid, type_interface, PI[playerid][pCustomInterface][type_interface]);
	return -1;
}
stock ShowPlayerCustomInterface(playerid)
{
	switch(player_Global_Int[playerid][14])
	{
		case 0:
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1),"{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
			{ff6666}[1] {ffffff}E-mail	{CCCCCC}[ none ]\n\
			{ff6666}[2] {ffffff}Сменить пароль от аккаунта\n\
			{ff6666}[3] {ffffff}Сменить PIN-код от банковской карты\n\
			{ff6666}[4] {ffffff}Google Authenticator\t%s\n\
			{ff6666}[5] {ffffff}Вход через почту\t{B83434}[ выключено ]\n\
			{ff6666}[6] {ffffff}Привязка ВКонтакте\t%s",PI[playerid][pGoogle] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),\
			PI[playerid][pVkontakte] ? ("{9ACD32}[ Привязана ]") : ("{ae433d}[ Не привязана ]"));
			
			SPD(playerid, 26037, 5, !"Безопасность аккаунта", str_1, "Выбрать", "Назад");
		}
		case 1:
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
			{ff6666}[1] {ffffff}Отображение кейса в руке\t%s\n\
			{ff6666}[2] {ffffff}Стиль походки\t{CCCCCC}[ %s ]\n\
			{ff6666}[3] {ffffff}Описание персонажа\t{CCCCCC}[ нажмите, чтобы установить ]\n\
			{ff6666}[4] {ffffff}AFK описание персонажа\t{CCCCCC}[ нажмите, чтобы установить ]\n\
			{ff6666}[5] {ffffff}Свечение заточенных аксессуаров	{CCCCCC}{9ACD32}[ включено ]",PI[playerid][pShowCase] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			StyleWalkInfo[PI[playerid][pStyleWalk]][name_style]);
			
			SPD(playerid, 26037, 5, !"Настройки персонажа", str_1, "Выбрать", "Назад");
		}
		case 2:
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
			{ff6666}[1] {ffffff}Показывать голод\t%s\n\
			{ff6666}[2] {ffffff}Отображение описания персонажей	%s\n\
			{ff6666}[3] {ffffff}Отображение названия семей над головой\t%s\n\
			{ff6666}[4] {ffffff}Отображение статуса ADD VIP	%s\n\
			{ff6666}[5] {ffffff}Отображение кнопки BattlePass\t%s\n\
			{ff6666}[6] {ffffff}Отображение 'набора текста' над головой	%s\n\
			{ff6666}[7] {ffffff}Отображение новых уведомлений\t%s", \
			!PI[playerid][pHungryShow] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowDescription] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowFamilyName] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowAddVIP] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowBattlePass] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowSetText] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"),
			!PI[playerid][pShowNotif] ? ("{9ACD32}[ включено ]") : ("{B83434}[ выключено ]"));
			SPD(playerid, 26037, 5, !"Настройки отображения", str_1, "Выбрать", "Назад");
		}
		case 3: {}
		case 4:
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
			{ff6666}[1] {ffffff}Темная тема инвентаря\t%s\n\
			{ff6666}[2] {ffffff}Сбросить настройки инвентаря",\
			PI[playerid][pInvBlack] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]"));
			SPD(playerid, 26037, 5, !"Настройки инвентаря", str_1, "Выбрать", "Назад");
		}
		case 5: SPD(playerid, 26037, DIALOG_STYLE_TABLIST_HEADERS, !"Настройки звука", !"{CCCCCC}Тип параметра\t{CCCCCC}Значение\n{ff6666}[1] {ffffff}Проигрывание звуков (в городе/интерьерах)\t{CCCCCC}{B83434}[ выключено ]\n{ff6666}[2] {ffffff}Проигрывание звука GPS навигатора\t{CCCCCC}{9ACD32}[ включено ]\n{ff6666}[3] {ffffff}Проигрывание звука при авторизации\t{CCCCCC}{9ACD32}[ включено ]\n{ff6666}[4] {ffffff}Проигрывание звуков драгрейсинга\t{CCCCCC}{9ACD32}[ включено ]\n{ff6666}[5] {ffffff}Параметры голосового чата {ffff00}[NEW]", !"Выбрать", !"Назад");
		case 6:
		{
			str_1[0] = EOS, f(str_1, sizeof(str_1), "{CCCCCC}Тип параметра\t{CCCCCC}Значение\n\
				{ff6666}[1] {ffffff}Тип спидометра\t{CCCCCC}[ %s ]\n\
				{ff6666}[2] {ffffff}Тип худа\t{CCCCCC}[ %s ]\n\
				{ff6666}[3] {ffffff}Тип радара\t{CCCCCC}[ %s ]\n\
				{ff6666}[4] {ffffff}Прозрачный чат	{CCCCCC}%s\n\
				{ff6666}[5] {ffffff}Сохранение текста в диалоге	%s\n\
				{ff6666}[6] {ffffff}Чат-комнаты\n\
				{ff6666}[7] {ffffff}Новый вид никнеймов	%s\n\
				{ff6666}[8] {ffffff}Снегопад	%s\n\
				{ff6666}[9] {ffffff}Качество отображения диалогов	{CCCCCC}[ %s ]\n\
				{ff6666}[10] {ffffff}Отображение позиции в Discord	{CCCCCC}{9ACD32}[ включено ]{FFFFFF}\n\
				{ff6666}[11] {ffffff}Расстояние видимости 3D-маркера	{CCCCCC}{9ACD32}[ 100.0 ]{FFFFFF}\n\
				{ff6666}[12] {ffffff}Подсказка горячих клавиш	{CCCCCC}%s\n\
				{ff6666}[13] {ffffff}Вид капчи (при покупке дома/бизнеса)	{CCCCCC}{9ACD32}[ новая с выбором картинок ]\n\
				{ff6666}[14] {ffffff}Инверсия карты	{CCCCCC}{B83434}[ выключено ]{FFFFFF}",\
			CustomInterfaceInfo[GetPlayerNameInterface(playerid, customInterface_speed)][interfaceName],\
			CustomInterfaceInfo[GetPlayerNameInterface(playerid, customInterface_hud)][interfaceName],\
			CustomInterfaceInfo[GetPlayerNameInterface(playerid, customInterface_radar)][interfaceName],
			(!PI[playerid][pCustomInterface][customInterface_chat] ? "{9ACD32}[ включено ]{FFFFFF}" : "{9ACD32}[ отключено ]{FFFFFF}"),\
			(!PI[playerid][pCustomInterface][customInterface_SaveDialog] ? "{9ACD32}[ включено ]{FFFFFF}" : "{9ACD32}[ отключено ]{FFFFFF}"),\
			(!PI[playerid][pCustomInterface][customInterface_NickName] ? "{9ACD32}[ включено ]{FFFFFF}" : "{9ACD32}[ отключено ]{FFFFFF}"),\
			(PI[playerid][pCustomInterface][customInterface_Snow] ? "{9ACD32}[ включено ]{FFFFFF}" : "{9ACD32}[ отключено ]{FFFFFF}"),\
			CustomInterfaceInfo[GetPlayerNameInterface(playerid, customInterface_TypeDialog)][interfaceName],\
			(!PI[playerid][pCustomInterface][customInterface_keys] ? "{9ACD32}[ включено ]{FFFFFF}" : "{9ACD32}[ отключено ]{FFFFFF}"));
			SPD(playerid, 26037, 5, !"Кастомизация интерфейса", str_1, "Выбрать", "Назад");
		}
	}
	return 1;
}
/*
#define customInterface_speed (0)
#define customInterface_hud (1)
#define customInterface_radar (2)
#define customInterface_chat (3)
#define customInterface_SaveDialog (4)
#define customInterface_NickName (5)
#define customInterface_Snow (6)
#define customInterface_TypeDialog (7)
PI[playerid][pCustomInterface][]
*/
stock ShowPlayer_CustomInterface(playerid, interface_id, bool:save=false)
{
	if(!IsPlayerInitCef(playerid) && IsPlayerLauncher(playerid) != -1 || !IsPlayerInitCef(playerid)  && IsPlayerLauncher(playerid) == -1) return 0;
	if(save) player_InterfaceSave{playerid} = 4;
	switch(interface_id)
	{
		case customInterface_speed: 
		{
			HideSpeedometr(playerid);
			if(!PI[playerid][pCustomInterface][customInterface_speed]) ShowSpeedometr(playerid);
			else 
			{
				for(new i; i < 42; i++) 
				{
					if(i < 7) DestroyPlayerTD(playerid, speeddraw[playerid][i]);
					if(i < 4) TextDrawHideForPlayer(playerid, speedbox[i]);
					DestroyPlayerTD(playerid, speed_prodvin[playerid][i]);
				}
				OnPlayerEnterDriver(playerid);
			}
		}
		case customInterface_hud:
		{
			new BitStream:bs = BS_New();
			BS_WriteValue(bs, PR_UINT8, 220, \
				PR_UINT8, 36, PR_UINT8, 2, PR_UINT8, \
				118, PR_UINT8, 114, PR_UINT8, 255, PR_UINT8, 0, \
				PR_UINT8, 223, PR_UINT8, 255, PR_UINT8, 41, PR_UINT8, 194, \
				PR_UINT8, 224, PR_UINT8, 248, PR_UINT8, 229, PR_UINT8, 32,\
				PR_UINT8, 241, PR_UINT8, 238, PR_UINT8, 238, PR_UINT8, 225, \
				PR_UINT8, 249, PR_UINT8, 229, PR_UINT8, 237, PR_UINT8, 232, \
				PR_UINT8, 229, PR_UINT8, 32, PR_UINT8, 225, PR_UINT8, 243, \
				PR_UINT8, 228, PR_UINT8, 229, PR_UINT8, 242, PR_UINT8, 32, \
				PR_UINT8, 238, PR_UINT8, 242, PR_UINT8, 239, PR_UINT8, 240, \
				PR_UINT8, 224, PR_UINT8, 226, PR_UINT8, 235, PR_UINT8, 229, \
				PR_UINT8, 237, PR_UINT8, 238, PR_UINT8, 32, PR_UINT8, 226, \
				PR_UINT8, 32, PR_UINT8, 226, PR_UINT8, 232, PR_UINT8, 239, \
				PR_UINT8, 45, PR_UINT8, 247, PR_UINT8, 224, PR_UINT8, 242, \
				PR_UINT8, 7, PR_UINT8, 194, PR_UINT8, 232, PR_UINT8, 239, \
				PR_UINT8, 45, PR_UINT8, 247, PR_UINT8, 224, PR_UINT8, 242);
			PR_SendPacket(bs, playerid);
			HideLogo(playerid);
			ShowLogo(playerid);
		}
		case customInterface_radar: UpdateBrowser(playerid, 9, PI[playerid][pCustomInterface][customInterface_radar]);
		case customInterface_chat: UpdateBrowser(playerid, 33, !PI[playerid][pCustomInterface][customInterface_chat]);
		case customInterface_SaveDialog: UpdateBrowser(playerid, 39, !PI[playerid][pCustomInterface][customInterface_chat]);
		case customInterface_NickName: UpdateBrowser(playerid, 42, !PI[playerid][pCustomInterface][customInterface_chat]);
		case customInterface_Snow: FuncPlayer_Snow(playerid);
		case customInterface_TypeDialog: UpdateBrowser(playerid, 53, !PI[playerid][pCustomInterface][customInterface_chat]);
		case customInterface_keys: 
		{
			if(PI[playerid][pCustomInterface][customInterface_keys] == 1) ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.hotkeysVisible', '[false]');");
			else
			{
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.hotkeysVisible', '[true]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.setFractionRadioKey', '[null]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.setFamilyRadioKey', '[null]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.setPhoneKey', '[\"P\"]');");
				ExecuteEvent(playerid, svelte, "window.executeEvent('event.arizonahud.setAnimationKey', '[\"U\"]');");
			}
		}
		default: player_InterfaceSave{playerid} = 0;
	}
	return 1;
}
stock ShowPlayerMenu_CustomInterface(playerid)
{
	str_1[0] = EOS;
	str_1 = "{FFFFFF}Тип\t{FFFFFF}Статус\n";
	for(new i; i < sizeof(CustomInterfaceInfo); i++)
	{
		if(CustomInterfaceInfo[i][interfaceType] == player_Global_Int[playerid][15])
		{
			f(str_1, sizeof(str_1), "%s%s\t%s\n", \
				str_1, CustomInterfaceInfo[i][interfaceName], (CustomInterfaceInfo[i][interfaceUID] == PI[playerid][pCustomInterface][player_Global_Int[playerid][15]] ? "{9ACD32}Включен" : "{FF6347}Выключен"));
		}
	}
	static const type_interface[][] = {"Спидометр", "Худ", "Радар"};
	str_mes[0] = EOS, f(str_mes, sizeof(str_mes), "{FFFFFF}Выбор | {ae433d}%s", type_interface[player_Global_Int[playerid][15]]);
	SPD(playerid, 1610, DIALOG_STYLE_TABLIST_HEADERS, str_mes, str_1, "»", "«");
	return 1;
}
stock FuncPlayer_Snow(playerid)
{
	new BitStream:bs = BS_New();
	BS_WriteValue(bs, PR_UINT8, 220);
	BS_WriteValue(bs, PR_UINT8, PI[playerid][pCustomInterface][customInterface_Snow] == 1 ? 47 : 48);
	BS_WriteValue(bs, PR_UINT8, 8);
	BS_WriteValue(bs, PR_UINT8, 83);
	BS_WriteValue(bs, PR_UINT8, 78);
	BS_WriteValue(bs, PR_UINT8, 79);
	BS_WriteValue(bs, PR_UINT8, 87);
	BS_WriteValue(bs, PR_UINT8, 70);
	BS_WriteValue(bs, PR_UINT8, 88);
	BS_WriteValue(bs, PR_UINT16, 73);
	BS_WriteValue(bs, PR_UINT32, 0);
	BS_WriteValue(bs, PR_UINT32, 0);
	BS_WriteValue(bs, PR_UINT8, 128);
	BS_WriteValue(bs, PR_UINT8, 63);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 64);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 208);
	BS_WriteValue(bs, PR_UINT8, 7);
	BS_WriteValue(bs, PR_UINT8, 0);
	BS_WriteValue(bs, PR_UINT8, 0);
	PR_SendPacket(bs, playerid);
	return 1;
}
CMD:dasd(playerid)
{
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.auth.onSuccessfulAuthorization', '[ null ]');");
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
		SPD(playerid, 26026, DIALOG_STYLE_MSGBOX, !"Подтверждение", !"{FFFFFF}Мы фиксируем новые позиции вашего аксессуара, требуется ваше подтверждение.\n\nПосле подтверждения позиции будут сохранены и с ваш спишется {33AA33}$100000!", !"Готово", !"Назад");
		new slot = player_Global_Int[playerid][22];
        player_InvAks_position[playerid][slot][0] = fOffsetX;
        player_InvAks_position[playerid][slot][1] = fOffsetY;
        player_InvAks_position[playerid][slot][2] = fOffsetZ;
        player_InvAks_position[playerid][slot][3] = fRotX;
        player_InvAks_position[playerid][slot][4] = fRotY;
        player_InvAks_position[playerid][slot][5] = fRotZ;
        player_InvAks_position[playerid][slot][6] = fScaleX;
        player_InvAks_position[playerid][slot][7] = fScaleY;
        player_InvAks_position[playerid][slot][8] = fScaleZ;

		str_1[0] = EOS;
		for(new i; i < 9; i++) f(str_1, sizeof(str_1), "%s%f,", str_1, player_InvAks_position[playerid][slot][i]);
		if(!player_InvAks_CustomPosition[playerid][slot])
		{
			mysql_pqueryf(mysql, "\
			INSERT INTO `player_inv_aks`(`pID`, `InvAks_ItemID`, `InvAks_Bone`, `InvAks_Position`) \
				VALUES ('%i','%i','%i','%s')", \
				PI[playerid][pID], AksSlot[playerid][slot], player_InvAks_bone[playerid][slot], str_1);
		}
		else
		{
			mysql_pqueryf(mysql, "\
				UPDATE `player_inv_aks` SET `InvAks_Bone` = '%i', `InvAks_Position` = '%s' \
				WHERE `InvAks_ItemID` = '%i' AND `pID` = '%i' LIMIT 1;", \
				player_InvAks_bone[playerid][slot], str_1, AksSlot[playerid][slot], PI[playerid][pID]);
		}
		player_InvAks_CustomPosition[playerid][slot] = true;
		SaveInventory(playerid, 6);
	}
    return 1;
}
stock SendPlayerNotification_cef(playerid, const text[], timeout)
{
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"ActionProgressBar\"]');");
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.actionProgressBar.initializeActionName', '[\"%s\"]');", text);
	ExecuteEventf(255, playerid, svelte, "window.executeEvent('event.actionProgressBar.initializeCountDown', '[%i]');", timeout);
	SetTimerEx("HideNotification_cef",timeout,false,"i",playerid);
	return 1;
}
public: HideNotification_cef(playerid)
{
	ExecuteEvent(playerid, svelte, "window.executeEvent('event.setActiveView', '[\"none\"]');");
	return 1;
}
stock player_CheckCaptcha(playerid, inputtextsave[]="FFFFFF")
{
	new captcha[5], type, ms = GetTickCount() - GetPVarInt(playerid, !"lsd");
	str_1[0] = EOS, GetPVarString(playerid, "CaptchaAPIstr", str_1, sizeof str_1);
	sscanf(str_1, "p<,>ds[6]", type, captcha);
	if(PI[playerid][pTypeCaptcha] != true)
	{
		if(!strlen(inputtextsave) || !GetString(inputtextsave, captcha) || float(ms)/1000 <= 0.3) {
			SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Ответ неверный!");
			return DestroyCaptcha_BOT(playerid);
		}
	}
	else 
	{
		for(new i; i < 5; i ++) strcat(captcha, randomcode32[random(sizeof(randomcode32))]);
		SetString(inputtextsave, captcha, 5);
	}
	switch(type)
	{
		case 1:
		{
			new house = InfoHouse[playerid];
			if(house != GetPVarInt(playerid, !"CaptchAntiDeBug"))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Вы ввели ранее созданную капчу");
				DestroyCaptcha_BOT(playerid);
				return 0;
			}
			if(GetString(HouseInfo[house][hOwner], "The State"))
			{
				GiveMoney(playerid, -HouseInfo[house][hCost]);
				HouseEntered[playerid] = house;
				HouseInfo[house][hNalog] 	= 0;
				InfoHouse[playerid] 		= -1;
				SetSpawnPI(playerid, 1);
				UpdatePlayerDataInt(playerid, "DCTime", 1);
				SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				PI[playerid][pHouseMain] = house;
				UpdatePlayerDataInt(playerid, "HouseSpawned", house);
				if(!RecInfo[playerid][rOpen])
				{
					SetPlayerInteriorEx(playerid, HouseInfo[house][hInt]);
					SetPlayerVirtualWorldEx(playerid, house + 50);
				}
				TextDrawHideForPlayer(playerid, HInfoBG);
				for(new i; i < 6; i ++)PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
				TextDrawHideForPlayer(playerid, HInfoEnterDraw);
				TextDrawHideForPlayer(playerid, HInfoBuyDraw);
				J_SetPlayerPos(playerid, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]);
				SetString(HouseInfo[house][hOwner], PN(playerid));
				UpdateDataStr("houses", "Owner", HouseInfo[house][hOwner], HouseInfo[house][hID]);
				UpdateDataInt("houses", "NoOwner", HouseInfo[house][hOwner], HouseInfo[house][hID],"=");
				UpdateDataInt("houses", "Nalog", HouseInfo[house][hNalog], HouseInfo[house][hID],"=");
				UpdateHouse(house);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот дом ваш!");
				//aml(39, playerid, "дом", str_2, HouseInfo[house][hID], HouseInfo[house][hCost], 7);
				SendAdminsMessagef(COLOR_RED, "%s [%i] купил дом ID: %i по гос. цене за %.2f ms! Капча: (%s | %s)", PN(playerid), playerid, house, float(ms)/1000, captcha, inputtextsave);
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот дом уже куплен!");
		}
		case 2:
		{
			new biz = InfoBiz[playerid];
			if(biz != GetPVarInt(playerid, !"CaptchAntiDeBug"))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Вы ввели ранее созданную капчу");
				DestroyCaptcha_BOT(playerid);
				return 0;
			}
			if(GetString(BizInfo[biz][bOwner], "The State"))
			{
				GiveMoney(playerid, -BizInfo[biz][bCost], "купил бизнес");
				BizInfo[biz][bNalog] = 0;
				SetString(BizInfo[biz][bOwner], PN(playerid));
				BizInfo[biz][bZam] = -1;
				SetString(BizInfo[biz][bDescription], "");
				UpdateDataInt("businesses", "Level", BizInfo[biz][bNalog], BizInfo[biz][bID],"=");
				UpdateDataStr("businesses", "Owner", BizInfo[biz][bOwner], BizInfo[biz][bID]);
				UpdateDataInt("businesses", "Zam", BizInfo[biz][bZam], BizInfo[biz][bID]);
				UpdateDataStr("businesses", "Description", BizInfo[biz][bDescription], BizInfo[biz][bID]);
				UpdateBiz(biz);
				SetPVarInt(playerid, !"LogsCost", BizInfo[biz][bCost]);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот бизнес ваш!");
				//aml(39, playerid, "бизнес", str_2, BizInfo[biz][bID]-1, BizInfo[biz][bCost], 6);
				SendAdminsMessagef(COLOR_RED, "%s [%i] купил бизнес ID: %i по гос. цене за %.2f ms! Капча: (%s | %s)", PN(playerid), playerid, biz, float(ms)/1000, captcha, inputtextsave);
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
		}
		case 3:
		{
			new prize = randomEx(1000,5000);
			SCMf(playerid, -1, "Вы ввели капчу за %.2f ms! Капча: (%s | %s), вы заработали %i AZ",float(ms)/1000, captcha, inputtextsave,prize);
			GiveDonate(playerid,prize);
		}
	}
	UpdatePlayerQuest(playerid, 0);
	DestroyCaptcha_BOT(playerid);
	if(type == 3) CreateCaptcha_BOT(playerid, 3);
	mysql_tqueryf(mysql, "INSERT INTO captchadata (`captcha`, `type`, `MS`, `ownerId`, `ownerName`) VALUES ('%s', '%d', '%.2f', '%d', '%s') ", captcha, type, float(ms)/1000, PI[playerid][pID], PN(playerid));
	return PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
}
/*static
	object_etaj[3][4];
stock init_map()
{
	static const object_world = -1, object_int = -1;
	//1 etaj
	object_etaj[0][0] = CreateDynamicObject(19645, 700.683593, -1484.387695, 37.155998, 0.000000, 90.000000, 0.000000, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[0][0], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[0][1] = CreateDynamicObject(19645, 723.079101, -1481.058593, 37.155998, 0.000000, 90.000000, 119.872001, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[0][1], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[0][2] = CreateDynamicObject(19645, 708.899414, -1463.291992, 37.155998, 0.000000, 90.000000, 240.358993, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[0][2], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	
	//object
	object_etaj[0][3] = CreateDynamicObject(19789, 711.424316, -1476.518432, 38.196990, 0.000000, 0.000000, 0.000000, object_world, object_int, -1, 300.00, 300.00);
	for(new i; i < 3; i++) AttachDynamicObjectToObject(object_etaj[0][3], object_etaj[0][i], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1);

	//2 etaj
	object_etaj[1][0] = CreateDynamicObject(19645, 719.998901, -1486.488647, 62.155998, 0.000007, 90.000007, 89.999946, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[1][0], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[1][1] = CreateDynamicObject(19645, 716.669799, -1464.093139, 62.155998, 0.000002, 89.999992, -150.127990, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[1][1], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[1][2] = CreateDynamicObject(19645, 698.903198, -1478.272827, 62.155998, -0.000010, 90.000007, -29.641000, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[1][2], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	
	//object
	object_etaj[1][3] = CreateDynamicObject(19789, 712.129638, -1475.747924, 63.196990, 0.000007, 0.000007, 89.999946, object_world, object_int, -1, 300.00, 300.00); 
	for(new i; i < 3; i++) AttachDynamicObjectToObject(object_etaj[1][3], object_etaj[1][i], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1);

	//3 etaj
	object_etaj[2][0] = CreateDynamicObject(19645, 700.683593, -1484.387695, 87.155998, 0.000000, 90.000000, 0.000000, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[2][0], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[2][1] = CreateDynamicObject(19645, 723.079101, -1481.058593, 87.155998, 0.000000, 90.000000, 119.872001, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[2][1], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);
	object_etaj[2][2] = CreateDynamicObject(19645, 708.899414, -1463.291992, 87.155998, 0.000000, 90.000000, 240.358993, object_world, object_int, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(object_etaj[2][2], 0, 4828, "airport3_las", "gallery01_law", 0xFFFFFFFF);

	//object
	object_etaj[2][3] = CreateDynamicObject(19789, 712.129638, -1475.747924, 88.726974, 0.000007, 0.000007, 89.999946, object_world, object_int, -1, 300.00, 300.00); 
	for(new i; i < 3; i++) AttachDynamicObjectToObject(object_etaj[2][3], object_etaj[2][i], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1);
}
CMD:triazov_init(playerid) init_map();
CMD:triazov_ya(playerid, get[])
{
	extract get -> new Float:rpos, Float:rpos2, Float:rpos3; else return SCM(playerid, -1, "-");
//	native MoveDynamicObject(STREAMER_TAG_OBJECT:objectid, Float:x, Float:y, Float:z, Float:speed, Float:rx = -1000.0, Float:ry = -1000.0, Float:rz = -1000.0);
	static 
		Float:position[3],
		Float:Rposition[3];
	GetDynamicObjectPos(object_etaj[2][3], position[0], position[1], position[2]);
	GetDynamicObjectRot(object_etaj[2][3], Rposition[0], Rposition[1], Rposition[2]);
	MoveDynamicObject(object_etaj[2][3], position[0], position[1], position[2], 12.3, Rposition[0]+rpos, Rposition[1]+rpos2, Rposition[2]+rpos3);
	SCMf(playerid, -1, "-> rpos %f rpos2 %f rpos3 %f", rpos, rpos2, rpos3);
}*/
CMD:present_settings(playerid)
{
	if(CheckAdmin(playerid,8,1)) return 1;
	return SPD(playerid, 1007, DIALOG_STYLE_TABLIST, !"", !"Список действующих кодов\nДобавить код", !"Продолжить", !"Отмена");
}
CMD:present(playerid, get[])
{
	extract get -> new string:str[25]; else return SCM(playerid, COLOR_RED, !"Используй: /present [код]");
	//if(PI[playerid][pAntiFlood_present]-global_time > 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {ffffff}Нельзя так часто вводить промокод!"); 
	
	mysql_escape_string(str, player_Global_Int[playerid]);
	str_q[0] = EOS, f(str_q, sizeof str_q, "SELECT `ID`, `item`, `amount`, `count_use` FROM `present` WHERE `name` = '%s' LIMIT 1;", player_Global_Int[playerid]);
	mysql_tquery(mysql, str_q, "CMD_present", "i",playerid);
	return 1;
}
public: CMD_present(playerid)
{
	if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}Введенный код не существует или достигнут лимит активаций!");
	static count_use;
	cache_get_int(0, "count_use", count_use);
	if(!count_use) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {ffffff}Введенный код не существует или достигнут лимит активаций!");
	//
	//PI[playerid][pAntiFlood_present] = global_time+80;
	//UpdatePlayerDataInt(playerid, "AntiFlood_present", PI[playerid][pAntiFlood_present]);
	//
	static
		item[5], amount[5], params[5];
	str_2[0] = EOS, cache_get_string(0, !"item", str_2), sscanf(str_2, "p<,>a<i>[5]", item);
	str_2[0] = EOS, cache_get_string(0, !"amount", str_2), sscanf(str_2, "p<,>a<i>[5]", amount);
	str_2[0] = EOS, cache_get_string(0, !"params", str_2), sscanf(str_2, "p<,>a<i>[5]", params);
	//
	str_d[0] = EOS;
	str_d = "\
		{FFFFFF}Активированный вами промокод\n\
		Содержал следующие предметы:\n\n";
	for(new i; i < 5; i++)
	{
		if(!item[i] || !amount[i] || params[i] > 9999) continue;
		if(CheckItemFromAks(item[i]) == 1) amount[i] = 1;
		f(str_d, sizeof(str_d), "%s{fbae60}[%i] %s(ид %i, шт. %i, пар. %i)\n", str_d, i, ItemsInfo[item[i]][ItemName], item[i], amount[i], params[i]);
		InvAdd(playerid, item[i], amount[i], 0, params[i]);
	}
	SPD(playerid, 0, 0, !"", str_d, !"Закрыть", "");
	SCMf(playerid, -1, "Вы успешно активировали промокод '%s', призы были обозначены в диалоге.", player_Global_Int[playerid]);
	mysql_pqueryf(mysql, "UPDATE `present` SET `count_use`=`count_use`-1 WHERE `name`='%s' LIMIT 1;", player_Global_Int[playerid]);
	return 1;
}
public: info_present(playerid){
	//load
	cache_get_int(0, !"ID", player_Global_Int[playerid][1]);

	str_mes[0] = EOS;
	cache_get_string(0, !"name", str_mes);

	static
		item[5], amount[5], params[5];
	str_2[0] = EOS, cache_get_string(0, !"item", str_2), sscanf(str_2, "p<,>a<i>[5]", item);
	str_2[0] = EOS, cache_get_string(0, !"amount", str_2), sscanf(str_2, "p<,>a<i>[5]", amount);
	str_2[0] = EOS, cache_get_string(0, !"params", str_2), sscanf(str_2, "p<,>a<i>[5]", params);

	str_q[0] = EOS, cache_get_string(0, !"owner_create", str_q);

	static count_use;
	cache_get_int(0, !"count_use", count_use);
	str_2[0] = EOS;
	//show
	for(new i; i < 5; i++)
	{
		if(!item[i] || !amount[i] || params[i] > 9999 || item[i] >= sizeof(ItemsInfo)) continue;
		if(CheckItemFromAks(item[i]) == 1) amount[i] = 1;
		f(str_2, sizeof(str_2), "%s{fbae60}[%i] %s(ид %i, шт. %i, пар. %i)\n", str_2, i, ItemsInfo[item[i]][ItemName], item[i], amount[i], params[i]);
	}
	str_1[0] = EOS;
	f(str_1, sizeof(str_1), "\
		\n\n\
		{FFFFFF}Название: {FDD9B5}[%s]\n\
		{FFFFFF}Уникальный номер: {FDD9B5}[%i]\n\
		{FFFFFF}Создал: {FDD9B5}[%s]\n\
		{FFFFFF}Возможно использований: {FDD9B5}[%i]\n\n\
		{FFFFFF}Призы на выдачу:\n%s\n", str_mes, player_Global_Int[playerid][1], str_q, count_use, str_2);
	SPD(playerid, 1009, 0, !"", str_1, !"Удалить", "Закрыть");
	return 1;
}
stock ChangeStatus_AddVIP(playerid)
{
	for(new i; i < 9; i++) DestroyPlayerTD(playerid, tdAddVIP[playerid][i]);

	if(PI[playerid][pShowAddVIP] != false || PI[playerid][pVIP][1] < global_time) return 0;
	tdAddVIP[playerid][8] = CreatePlayerTextDraw(playerid, 604.166626, 119.629501, "particle:lamp_shad_64");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][8], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][8], 25.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][8], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][8], 0xFFA80032);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][8], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][8], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][8], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][8], 4);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][8], 0);

	tdAddVIP[playerid][7] = CreatePlayerTextDraw(playerid, 606.966125, 132.699799, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][7], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][7], 17.399900, 11.899900);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][7], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][7], 0xA52000FF);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][7], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][7], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][7], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][7], 4);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][7], 0);

	tdAddVIP[playerid][6] = CreatePlayerTextDraw(playerid, 617.165710, 129.696198, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][6], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][6], 14.199700, 17.799900);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][6], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][6], 0xA52000FF);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][6], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][6], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][6], 4);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][6], 0);

	tdAddVIP[playerid][5] = CreatePlayerTextDraw(playerid, 591.466125, 127.459099, "");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][5], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][5], 17.000000, 19.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][5], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][5], 0x00000096);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][5], 0x00000001);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][5], 0);
	PlayerTextDrawSetPreviewModel(playerid, tdAddVIP[playerid][5], 2729);
	PlayerTextDrawSetPreviewRot(playerid, tdAddVIP[playerid][5], 0.000000, 0.000000, 0.000000, 0.649900);

	tdAddVIP[playerid][4] = CreatePlayerTextDraw(playerid, 594.032715, 132.036697, "");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][4], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][4], 12.000000, 11.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][4], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][4], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][4], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][4], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][4], 0x00000001);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][4], 0);
	PlayerTextDrawSetPreviewModel(playerid, tdAddVIP[playerid][4], 2645);
	PlayerTextDrawSetPreviewRot(playerid, tdAddVIP[playerid][4], 0.000000, 0.000000, 0.000000, 0.769900);

	tdAddVIP[playerid][3] = CreatePlayerTextDraw(playerid, 594.130310, 127.773697, "particle:lamp_shad_64");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][3], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][3], 12.000000, 18.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][3], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][3], 0xFFFFFF1E);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][3], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][3], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][3], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][3], 0);

	tdAddVIP[playerid][2] = CreatePlayerTextDraw(playerid, 606.130615, 131.507202, "particle:lamp_shad_64");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][2], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][2], 20.699800, 12.899900);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][2], 1);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][2], 0xFFFFFF28);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][2], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][2], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][2], 0);

	tdAddVIP[playerid][1] = CreatePlayerTextDraw(playerid, 616.432007, 127.429504, "ADD_VIP");
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][1], 0.136600, 0.708100);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][1], 2);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][1], 0xFFA800FF);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][1], 0x16161664);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][1], 0);
	str_1[0] = EOS;
	if(PI[playerid][pVIP][1] == forever) str_1 = "FOREVER";
	else f(str_1, sizeof(str_1), "%i DAY", (PI[playerid][pVIP][1]-global_time)/86400);
	tdAddVIP[playerid][0] = CreatePlayerTextDraw(playerid, 616.599121, 134.821991, str_1);
	PlayerTextDrawLetterSize(playerid, tdAddVIP[playerid][0], 0.154000, 0.723500);
	PlayerTextDrawTextSize(playerid, tdAddVIP[playerid][0], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, tdAddVIP[playerid][0], 2);
	PlayerTextDrawColor(playerid, tdAddVIP[playerid][0], 0xFFFFFFC8);
	PlayerTextDrawUseBox(playerid, tdAddVIP[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, tdAddVIP[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, tdAddVIP[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, tdAddVIP[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, tdAddVIP[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, tdAddVIP[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, tdAddVIP[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, tdAddVIP[playerid][0], 0);
	for(new i; i < 9; i++) PlayerTextDrawShow(playerid, tdAddVIP[playerid][i]);
	return 1;
}
stock GivePlayerAddVIP(playerid, time)
{
    if(PI[playerid][pVIP][1] == forever) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}У вас уже есть вечный ADD VIP.");
	PI[playerid][pVIP][1] = time;
    ChangeStatus_AddVIP(playerid);
	for(new i; i < 2; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pVIP][i]);
	UpdatePlayerDataStr(playerid, "VIP", str_1);
    InvAdd(playerid, (time == forever ? 5240 : 5241), -1);
	SCMf(playerid, 0x42B02CFF, "Вы активировали сертификат дополнения VIP %s.", time == forever ? "навсегда" : "на 30 дней");
	return 1;
}
enum fbText_info
{
    fbtID,
    fbtText[25]
};
enum bText_info
{
    btText[20],
    btID_fix
};
static const 
        fixBadText_info[][fbText_info] = {
    {0, "прекрасна"},
    {1, "умный"},
    {2, "игнорировал"},
    {3, "прекрасный"},
    {4, "бургер кинг"},
    {5, "умник"},
    {6, "у меня нет мамы"}
},

        BadText_info[][bText_info] = {
    {"шлюха", 0},
    {"тупой", 1},
    {"дибил", 1},
    {"дебил", 1},
    {"ебал", 2},
    {"говно", 4},
    {"гавно", 4},
    {"идиот", 5},
    {"mq", 6}
};
ORPC:93(playerid, BitStream:bs)
{
	new 
        scmColor, 
        scmLength, 
        scmText[145];
	BS_ReadValue(bs, \
        PR_UINT32, scmColor,\
        PR_UINT32, scmLength);
    if(scmLength > sizeof(scmText)) return 0;
    BS_ReadValue(bs, PR_STRING, scmText, scmLength);
    if(regex_IsStringIP(scmText) == 1 || fixBadText(scmText) == 1)
    {
        SCM(playerid, scmColor, scmText);
        return 0;
    }
	return 1;
}
stock str_replace(inputvar[],const searchstring[],const replacestring[]) 
{ 
    if(strfind(replacestring,searchstring) != -1) return -1; 
    new pos = strfind(inputvar,searchstring); 
    if(pos == -1) return 0; 
    while(strfind(inputvar,searchstring) != -1) 
    { 
        pos = strfind(inputvar,searchstring); 
        strdel(inputvar, pos, pos+strlen(searchstring)); 
        strins(inputvar, replacestring, pos, strlen(inputvar)); 
    }
    return 1; 
}
//185.253.34.52:1157
stock Search_fixBadText(uid)
{
    for(new i; i < sizeof(fixBadText_info); i++) if(fixBadText_info[i][fbtID] == uid) return i;
    return 0;
}
stock fixBadText(input_string[])
{
    for(new i; i < sizeof(BadText_info); i++)
    {
        if(strfind(input_string, BadText_info[i][btText]) != -1) 
        {
            str_replace(input_string, BadText_info[i][btText], fixBadText_info[Search_fixBadText(BadText_info[i][btID_fix])][fbtText]);
            return 1;
        }
    }
    return 0;
}
stock regex_IsStringIP(input_string[], bool:clear=true)
{
    new Regex:r_str = Regex_New("(.{0,50}?)([1-9]{1})([0-9]{0,2})\\.([0-9]{1,3})\\.([0-9|\\*]){1,3}\\.([0-9|\\*]){1,3}(.{0,50}?)");
    new check = Regex_Check(input_string, r_str);
    if(check && clear != false)
    {
        for(new i=strfind(input_string, ".")-3; i < strlen(input_string); i++)
        {
            switch(input_string[i])
            {
                case '0'..'9':
                {
                    strdel(input_string, i, i+1);
                    strins(input_string, "*", i, 144);
                }
                default: continue;
            }
        }
    }
    Regex_Delete(r_str);
    return check;
}
/*

stock ShowPrivateFraction(playerid, listitem = -1, type = 0, inputtextsave[] = "default") {

	new list = GetFamilyFraction(FP_Data[playerid][F_FAMILY_ID]);

	if list == -1 *then
        return SCM(playerid,COLOR_RED, "[Ошибка] {ffffff}У вашей семьи отсутствует частная организация!");

	new orgid = PrivateInfo[list][privateID];

	if listitem == -1 && !type *then {
		f(mysql_string,42 + MAX_PLAYER_NAME,"Снять лидера частной организации {CD5C5C}[%s]",OrgInfo[orgid][oLeader]);

		f(global_str,310 + MAX_PLAYER_NAME,"\
		{CD5C5C}[1] {ffffff}Общая статистика организации\n\
		{CD5C5C}[2] {ffffff}%s\n\
		{CD5C5C}[3] {ffffff}Статистика лидера / заместителей организации\n\
		{CD5C5C}[4] {ffffff}Список участников организации\n\n\
		{CD5C5C}[5] {ffffff}Лог банковских операций\n\
		{CD5C5C}[6] {ffff00}Найти частную организацию",GetString(OrgInfo[orgid][oLeader],"Свободна") ? "Назначить лидера частной организации" : mysql_string);

		SPD(playerid,8041, DIALOG_STYLE_LIST, "Управление частной организацией",global_str,"Выбрать","Отмена");
	}
	else if listitem != -1 && !type *then {
	
		if !GetFamilyAcces(PN(playerid), FP_Data[playerid][F_FAMILY_ID]) *then
	    	return SCM(playerid, COLOR_OLDRED, !"[Ошибка]{FFFFFF} Эта панель доступна только лидеру и заместителю!");

		switch listitem do {

			case 0: ShowPrivateFraction(playerid, -1, 1);
			case 1: {
				if GetString(OrgInfo[orgid][oLeader],"Свободна") *then
					SPD(playerid, 8042, DIALOG_STYLE_INPUT, "Частная организация", "Введите ид игрока которого хотите поставить на пост лидера\n\n{cccccc}Примечание: игрок должен находится рядом с вами и состоять в частной организации", "Далее", "Oтмена");


				else {
					f(global_str,100+MAX_PLAYER_NAME,"{FFFFFF}Вы действительно хотите снять текущего лидера частной организации?\n\nТекущий лидер: {CD5C5C}%s",OrgInfo[orgid][oLeader]);
                    SPD(playerid,8042, DIALOG_STYLE_MSGBOX, "Частная организация",global_str,"Да","Назад");
				}
			}
			case 2: ShowPrivateFraction(playerid, -1, 5);
			case 3: ShowPrivateFraction(playerid, -1, 4);
			case 4: ShowPrivateFraction(playerid, -1, 3);
			case 5: EnableGPSForPlayer(playerid, PrivateInfo[list][privatePickup][0],PrivateInfo[list][privatePickup][1],PrivateInfo[list][privatePickup][2]);
		}
	}
	else {

		switch type do {

			case 1: {

				f(mysql_string, 50, "SELECT COUNT(*) FROM accounts WHERE Member = %d", orgid);
				new Cache:result = mysql_query(mysql, mysql_string), players;
				players = cache_get_row_int(0, 0, mysql);
				cache_delete(result, mysql);

				f(global_str,400,"\
				{ffffff}Название частной организации: {73B461}%s\n\
				{ffffff}Текущий лидер организации: {CD5C5C}%s\n\
				{ffffff}Общее количество игроков: {ffff00}%i ед.\n\n\
				{ffffff}Сумма прибыли за день: {9ACD32}+$%i.\n\
				{ffffff}Сумма прибыли за неделю: {9ACD32}+$%i.\n\
				{ffffff}Сумма прибыли за месяц: {9ACD32}+$%i.\n\n\
				{ffffff}Текущая сумма налога: {9ACD32}$%i.",OrgInfo[orgid][oName],OrgInfo[orgid][oLeader],players,PrivateInfo[list][privateMoney_Day],PrivateInfo[list][privateMoney_Week][1],PrivateInfo[list][privateMoney_Month][1],PrivateInfo[list][privateNalog]);
                SPD(playerid,8044, DIALOG_STYLE_MSGBOX, "Статистика организации",global_str,"Назад","");
			}
			case 2: {

                if GetString(OrgInfo[orgid][oLeader],"Свободна") *then
				{

					new id = strval(inputtextsave);

					if(id == INVALID_PLAYER_ID || id == playerid)
						return SCM(playerid, COLOR_GREY, "Игрок не найден!");

	                if !ProxDetectorS(5.0, playerid, id) *then
	                    return SCM(playerid, COLOR_GREY, "Вы должны находится рядом с игроком!");



		            SetString(OrgInfo[orgid][oLeader],PN(id));
		            PI[id][pMember] = orgid;
		            PI[id][pLeader] = orgid;

		            PI[id][pDCTime]=2;
			        SCM(id, COLOR_WHITE, !">> {FF6347} Местом спавна автоматически назначена частная организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");

		            PI[id][pRank] = OrgInfo[orgid][Max_Rang];
		            f(global_str,124,"Лидер/зам семьи %s назначил вас лидером частной организации '%s'",PN(playerid),OrgInfo[orgid][oName]);
		            SCM(id,COLOR_VALIK,global_str);
					f(global_str,156,"{73B461}Лидер/зам семьи %s назначил игрока %s лидером частной организации '%s'",PN(playerid),PN(id),OrgInfo[orgid][oName]);
		            SendFamilyMessage(FP_Data[playerid][F_FAMILY_ID],global_str);


					ResetSpawnInfo(id, orgid);
				}
				else {
				    new id = GetPlayerID(OrgInfo[orgid][oLeader]);

			    	PlayerUnleader(id, OrgInfo[orgid][oLeader]);

			    	f(global_str, 156, "{73B461}[Информация] {FFFFFF}Лидер/зам семьи %s выгнал игрока %s из должности лидерства частной организации", PN(playerid), OrgInfo[orgid][oLeader]);
			    	SendFamilyMessage(FP_Data[playerid][F_FAMILY_ID], global_str);
			    	
			    	SetString(OrgInfo[orgid][oLeader], "Свободна");

				}
			}
			case 3: {

                
                
				f(mysql_string, 90, "SELECT date, name, action FROM logs_fraction WHERE orgid = %d ORDER BY date DESC LIMIT 30", orgid);
				new Cache:result = mysql_query(mysql, mysql_string);

				new logs = cache_get_row_count(mysql);

				global_str = "{cccccc}Дата и время\t{cccccc}Никнейм игрока\t{cccccc}Действите\n";

				for new i = 0; i < logs; i++ do {

					cache_get_row(i, 0, SQL_GET_ROW_STR[0], mysql);
					cache_get_row(i, 1, SQL_GET_ROW_STR[1], mysql);
					cache_get_row(i, 2, SQL_GET_ROW_STR[2], mysql);
					f(SQL_STRING,200,"{ffffff}[ %s ]\t{cccccc}[ %s ]\t{ffffff}[ %s ]\n",SQL_GET_ROW_STR[0],SQL_GET_ROW_STR[1],SQL_GET_ROW_STR[2]);
					strcat(global_str,SQL_STRING);

				}


				cache_delete(result, mysql);
				
				if !logs *then
				    return SCM(playerid,COLOR_RED, "[Ошибка] {FFFFFF}Логов банковских операций не найдено!");

				SPD(playerid,8044, DIALOG_STYLE_TABLIST_HEADERS, "Лог банковских операций",global_str,"Назад","");
			}
			case 4: {



				f(mysql_string, 156, "SELECT NickName, PlayHour, Online_status, Rank FROM accounts WHERE Member = %d ORDER BY Rank DESC LIMIT 30", orgid);
				new Cache:result = mysql_query(mysql, mysql_string);


				new accounts = cache_get_row_count(mysql), online, hours,status,rank;

				global_str = "{cccccc}Никнейм\t{cccccc}Отыграл за день\t{cccccc}Отыграл за неделю\t{cccccc}Отыграл за месяц\n";

				for new i = 0; i < accounts; i++ do {

					cache_get_row(i, 0, SQL_GET_ROW_STR[0], mysql);
					
					hours = cache_get_row_int(i, 1, mysql);
					status = cache_get_row_int(i, 2, mysql);
					rank = cache_get_row_int(i, 3, mysql);
					
					if status *then
					    online++;
					
					f(SQL_STRING,200,"{CD5C5C}[%i] {ffffff}%s (%i)\t{cccccc}[ %i ч ]\t{cccccc}[ %i ч ]\t{cccccc}[ %i ч ]\n",i+1,SQL_GET_ROW_STR[0],rank,hours,hours,hours);
					strcat(global_str,SQL_STRING);

				}

				cache_delete(result, mysql);

				if !accounts *then
				    return SCM(playerid,COLOR_RED, "[Ошибка] {ffffff}Аккаунтов в базе данных не найдено!");

				f(mysql_string,64,"Список участников организации (%i онлайн / 30)",online);
				SPD(playerid,8044, DIALOG_STYLE_TABLIST_HEADERS, mysql_string,global_str,"Назад","");
			}
			case 5: { // статистика лидера и зам



				f(mysql_string, 156, "SELECT NickName, Rank FROM accounts WHERE Member = %d AND Rank > 8 ORDER BY Rank DESC LIMIT 30", orgid);
				new Cache:result = mysql_query(mysql, mysql_string);


				new accounts = cache_get_row_count(mysql), rank;

				global_str = "{cccccc}Никнейм\t{cccccc}Принял за день\t{cccccc}Принял за неделю\t{cccccc}Принял за месяц\n";

				for new i = 0; i < accounts; i++ do {

					cache_get_row(i, 0, SQL_GET_ROW_STR[0], mysql);

					rank = cache_get_row_int(i, 1, mysql);


					f(SQL_STRING,200,"{CD5C5C}[%i] {ffffff}%s (%i)\t{cccccc}[ 0 игроков ]\t{cccccc}[ 0 игроков ]\t{cccccc}[ 0 игроков ]\n",i+1,SQL_GET_ROW_STR[0],rank);
					strcat(global_str,SQL_STRING);

				}

				cache_delete(result, mysql);

				if !accounts *then
				    return SCM(playerid,COLOR_RED, "[Ошибка] {ffffff}Аккаунтов в базе данных не найдено!");

				SPD(playerid,8044, DIALOG_STYLE_TABLIST_HEADERS, "Статистика лидера и заместителей",global_str,"Назад","");
			}
		}

	}
	return true;
}

stock ShowPrivateJob(playerid, response = -1) {

	new i = GetFamilyFraction(FP_Data[playerid][F_FAMILY_ID]);
	
	if FP_Data[playerid][F_FAMILY_ID] == -1 || i == -1 *then
	    return SendErrorMessage(playerid);
	    
	new orgid = PrivateInfo[i][privateID];
	
	

	if response == -1 *then {
	    f(global_str,215,"{FFFFFF}Вы действительно желаете устроится в организацию {73B461}'%s'{FFFFFF}?\nПосле устройства Вы получите сразу 3 ранг.\n\n{cccccc}Примечание: вы также сможете уволится в любое время самостоятельно.",OrgInfo[orgid][oName]);
	    SPD(playerid,8043,DIALOG_STYLE_MSGBOX,"Устройство в организацию",global_str,"Да","Отмена");
	}
	
	
	else if response *then {

		if PI[playerid][pMember] *then
		    return SCM(playerid,COLOR_RED,"[Ошибка] {ffffff}Вы уже состоите в организации!");


		PI[playerid][pMember] = orgid;
	    PI[playerid][pDCTime] = 2;
	    SCM(playerid, COLOR_WHITE, !">> {FF6347} Местом спавна автоматически назначена частная организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	    PI[playerid][pRank] = 3;
	    PI[playerid][pFWarns] = 0;

	    f(global_str, 120, "Приветствуем нового члена нашей организации %s.", PN(playerid));
	    SendTeamMessage(orgid, COLOR_VALIK, global_str);
		ResetSpawnInfo(playerid, orgid);

        GiveFractionMoney(i, 250000);
	}
	return true;
}

stock GetFamilyFraction(family, int = -1)
{
	for new i = 0; i < TOTALFRACTIONS; i++ do {

		if PrivateInfo[i][privateFamily] == family *then {
		    int = i;
			break;
		}
	}

	return int;
}

stock SavePrivateFraction(i) {

    PrivateInfo[i][privateMoney_Week][1] += PrivateInfo[i][privateMoney_Day];
    PrivateInfo[i][privateMoney_Month][1] += PrivateInfo[i][privateMoney_Day];

	f(global_str, 200 , "UPDATE `private_fraction` SET \
	`Family` = '%i', `Nalog` = '%i', `Money_Week` = '%s', `Money_Month` = '%s' WHERE `OrgID` = '%i'",
	PrivateInfo[i][privateFamily],
	PrivateInfo[i][privateNalog],
	Int_PackMassive(0,PrivateInfo[i][privateMoney_Week]),
	Int_PackMassive(0,PrivateInfo[i][privateMoney_Month]),
	PrivateInfo[i][privateID]);

	mysql_tquery(mysql, global_str);

	return true;
}

stock GiveFractionMoney(i, money, find = 0) {


	if find *then {
		for new x = 0; x < TOTALFRACTIONS; x++ do {
			if PrivateInfo[x][privateID] == find *then {
				i = x; break;
			}
		}
	}

	PrivateInfo[i][privateMoney_Day] += money; // статистика
	
	OrgInfo[PrivateInfo[i][privateID]][oBank] += money; // пополнение

	return true;
}

stock StartPrivateAuction(i) {

    PrivateInfo[i][privateFamily] =
    PrivateInfo[i][privateAuctionFamily] =
    PrivateInfo[i][privateAuctionLast] = 0;
    PrivateInfo[i][privateAuctionTime] = 21600;
	SetString(PrivateInfo[i][privateAuctionDate],UNIX_TO_DATE(PrivateInfo[i][privateAuctionTime]+Global_Time));
    
	return true;
}
stock UpdatePrivateAuction(i) {

	PrivateInfo[i][privateAuctionTime]--;

	if !PrivateInfo[i][privateAuctionTime] *then
	    return EndPrivateAuction(i);

	if PrivateInfo[i][privateAuctionLast] *then
		f(mysql_string,100,"{483D8B}%i ASC\n{ffffff}Сделал: {ff6666}%s (Семья: %s)",PrivateInfo[i][privateAuctionLast],PrivateInfo[i][privateAuctionOwner],PrivateInfo[i][privateAuctionFamilyName]);

	f(global_str,330,"\
	[ Проходит аукцион ]\n\
	{ffffff}Стартовая цена: {483D8B}20000 ASC\n\
	{ffffff}Минимальная ставка: {483D8B}100 ASC\n\n\
	{ffffff}Последняя ставка: {ff6666}%s\n\n\
	{ffffff}Завершение аукциона через: {cccccc}%s (%s)\n\nНажмите ALT",!PrivateInfo[i][privateAuctionLast] ? "Пока никто не успел поставить" : mysql_string, Convert(PrivateInfo[i][privateAuctionTime]),PrivateInfo[i][privateAuctionDate]);
    return UpdateDynamic3DTextLabelText(PrivateInfo[i][privateText],COLOR_YELLOW,global_str);
}

stock EndPrivateAuction(i) {

	if !PrivateInfo[i][privateAuctionLast] *then
	    return StartPrivateAuction(i);

	if GetPlayerID(PrivateInfo[i][privateAuctionOwner]) != INVALID_PLAYER_ID *then
	    SCMF(GetPlayerID(PrivateInfo[i][privateAuctionOwner]),COLOR_VALIK,"[Информация] {ffffff}Поздравляем! Вы победили в аукционе частной фракции '%s'.",OrgInfo[PrivateInfo[i][privateID]][oName]);

    PrivateInfo[i][privateFamily] = PrivateInfo[i][privateAuctionFamily];
    PrivateInfo[i][privateNalog] = 0;

	f(global_str,127,"[ Частная организация ]\n\n{ffffff}Организация под контролем семьи: {CD5C5C}%s\n\n{cccccc}Нажмите ALT", GetFamilyDataString(PrivateInfo[i][privateFamily], "name"));
    return UpdateDynamic3DTextLabelText(PrivateInfo[i][privateText],COLOR_YELLOW,global_str);
}

stock ShowPrivateAuction(playerid, listitem = -1) {

	if listitem == -1 *then {
		f(global_str,126,"\
		{ff6666}[1] {ffffff}Информация\n\
		{ff6666}[2] {ffffff}Сделать ставку\n\
		{ff6666}[3] {ffffff}Приобрести ASC {cccccc}[есть в наличии]");
		SPD(playerid,8046,DIALOG_STYLE_LIST,"Частная организация",global_str,"Выбрать","Отмена");
	}
	else {
		switch listitem do {

			case 0: DPlayerData(playerid,"privateid"), ShowPrivateInfo(playerid);
			case 1: {
			
			    new i = Int_GetPlayerData(playerid,"privateid");

				if PrivateInfo[i][privateAuctionLast] *then
					f(mysql_string,100,"{483D8B}%i ASC\n{ffffff}Сделал: {ff6666}%s (Семья: %s)",PrivateInfo[i][privateAuctionLast],PrivateInfo[i][privateAuctionOwner],PrivateInfo[i][privateAuctionFamilyName]);

				f(global_str,310,"\
				{FFFFFF}Организация: {73B461}%s\n\
				{FFFFFF}Стартовая цена: {483D8B}20000 ASC\n\
				{FFFFFF}Минимальная ставка: {483D8B}100 ASC\n\n\
				{ffffff}Последняя ставка: {ff6666}%s\n\n\
				{cccccc}Введите в поле ниже сумму вашей ставки",OrgInfo[PrivateInfo[i][privateID]][oName],!PrivateInfo[i][privateAuctionLast] ? "Пока никто не успел поставить" : mysql_string);

                SPD(playerid,8047,DIALOG_STYLE_INPUT,"Аукцион",global_str,"Выбрать","Отмена");
			}
			case 2: DPlayerData(playerid,"privateid"), ASC_Dialog_Buy(playerid);

		}

	}
	return true;
}
stock ShowPrivateInfo(playerid) {
	return SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Частные фракции","\
	{ffffff}Во всем штате располагается порядка {ff6666}8 частных фракций{ffffff}, таких как:\n\
	- Больница Джеферсон (NEW);\n\
	- Больница Сан Фиерро;\n\
	- СМИ Лас Вентурас;\n\
	- СМИ Сан Фиерро;\n\
	- Страховая компания;\n\
	- Мафия ЛКН;\n\
	- Ночные волки;\n\
	- Байкеры Tierra Robada (NEW).\n\n\
	Каждая частная фракция полностью идентична обычной, однако её владельцами являются семьи.\n\
	Купить частную фракцию может лидер или заместитель семьи (10 уровня) у специального пикапа рядом с самой фракцией,\n\
	при этом каждая семья может владеть только одной частной фракцией.\n\n\
	После покупки лидер семьи с помощью специального меню {ff6666}(/fammenu - Другое - Частная фракция) {ffffff}может назначать лидера своей фракции,\n\
	это может быть любой игрок, который даже не состоит в самой семье.\n\
	Лидеров частных фракций могут снять только сами лидеры семьи, у администрации сервера такой возможности нет.\n\n\
	Все управление частной фракцией осуществляется через специальный раздел в меню семьи.\n\
	Там лидер или заместитель может посмотреть полную статистику своей фракции.\n\
	Для просмотра доступна следующая информация:\n\
	- количество людей во фракции;\n\
	- прибыль которую принесла фракция за день, неделю или месяц;\n\
	- активность всех сотрудников фракции;\n\
	- количество принятых людей во фракцию у лидера и заместителея;\n\
	- количество времени отработанного за день, за неделю и месяц по каждому сотруднику\n\n\
	Основной доход частной фракции поступает с оплаты услуг (лечение, покупка страховки, публикация объявлений).\n\n\
	Для заместителей и владельца семьи, которая владеет частной фракцией, в интерьере доступен специальный пикап,\n\
	с его помощью можно {ff6666}сразу устроиться на 9 ранг{ffffff}, не проходя собеседование (при условии что вы не состоите в другой фракции).\n\
	Если с помощью данного пикапа будет устраиваться лидер или заместитель, тогда ему будет выдан автоматически {ff6666}9 ранг{ffffff}.\n\
	В случае если член семьи уже состоит в данной фракции, то подойдя на пикап он сможет автоматически уволиться с занимаемой должности.\n\n\
	Каждая частная фракция облагается налогом. Сумма налога составляет {32CD32}$14 000{FFFFFF} каждый PayDay, а предел налога - {32CD32}$10 000 000{ffffff}.\n\
	Для оплаты налогов лидеру или заместителю семьи нужно приехать в банк и оплатить их в специальном пункте - Оплата налогов за фракцию.\n\
	Если налоги не будут оплачиваться, частная фракция будет изъята и выставлена на {ff6666}6-ти часовой аукцион со стартовой ценой - 20 000 ASC{ffffff}.\n\n\
	Найти частные фракции можно в меню {ff6666}/GPS - Частные фракции{ffffff}.","Закрыть","");
}
*/
stock func_OwnablePass(playerid, carid, dialogid = 0, const button1[] = "Принять", const button2[] = "") 
{
    str_2[0] = EOS;
    if(dialogid == 2221)
    {
        f(str_2, sizeof(str_2), "\n\n{73B461}Стоимость транспорта составляет: $%i", autoBazarInfo[carid][autoBazarCost]);
        carid = autoBazarInfo[carid][autoBazarCarID];
    }
	new number = GetVehicleID(carid);
    str_1[0] = EOS;
    if(!GetString(CarInfo[number][cNumber], ServerCFG[server_number])) f(str_1, sizeof(str_1), "{A63737}%s{FFFFFF}", CarInfo[number][cNumber]);
    str_q[0] = EOS, requestPN(CarInfo[number][cKeyer], str_q);
    f(str_1, sizeof(str_1), "\
        {FFFFFF}Транспорт: {73B461}%s[%i]{FFFFFF}{FFFFFF}\n\
        Владелец: {73B461}%s{FFFFFF}\n\
        Посредник: {73B461}%s{FFFFFF}\n\
        Пробег: {73B461}%i км.{FFFFFF}\n\
        Налог: {73B461}%i{FFFFFF} / 35 000\n\
        Штраф: {73B461}0{FFFFFF} / 60 000\n\n\
        Штраф за восстановление: {73B461}$%i{FFFFFF}\n\n\
        Цена покупки с госа: {73B461}$%i\n\
        Номер автомобиля: {A63737}%s{FFFFFF}\n\
        Здоровье автомобиля: {F57449}1500.0/1500.0{FFFFFF}\n\
        Состояние масла: {42B02C}хорошее{FFFFFF} (100.0%%){FFFFFF}\n\n\
        Состояние авто: {F57449}100/100{FFFFFF}\n\
        Страховка (на повреждение): {73B461}отсутствует{FFFFFF}\n\
        Страховка (на слёт и автоугон): {73B461}отсутствует{FFFFFF}\n\
        Тюнинг: {56BF4D}Максимальный{FFFFFF}\n\n\
        Следите за состоянием вашего авто!\n\
        Если вы часто будете бить авто, тогда\n\
        будет понижаться ёе состояние, а чем ниже\n\
        состояние авто, тем чаще оно будет ломаться!\n\
        Если хотите отремонитировать авто, тогда вам надо\n\
        на станцию тех. обслуживания (GPS - Важные места).\n\
        {E1F549}У автомобилей у которых пробег выше\n\
        9 000 километров, будут ломаться чаще!\n\n\
        Система гоночных дуэлей! Нажмите клавишу H,\n\
        2 раза подряд ({E1F549}очень быстро{FFFFFF}) в месте, где есть игроки в личных авто.%s",\
    InfoConfigVehicle[SearchVehicleName(CarInfo[number][cModel])][Model_Name], carid,
    CarInfo[number][cOwner], str_q,
    CarInfo[number][cMilage], CarInfo[number][cNalog], CarInfo[number][cNalog]/2,CarInfo[number][cCost], str_1, str_2);

	SPD(playerid, dialogid, DIALOG_STYLE_MSGBOX, !"Информация", str_1, button1, button2);
}
stock CheckRealLevelVIP(playerid)
{
    if(PI[playerid][pVIP][0] > 7) PI[playerid][pVIP][0] = 7;
    else if(PI[playerid][pVIP][0] < 0) PI[playerid][pVIP][0] = 0;

    return PI[playerid][pVIP][0];
}
